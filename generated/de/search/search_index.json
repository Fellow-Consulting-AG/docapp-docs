{"config":{"lang":["de"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"],"fields":{"title":{"boost":1000.0},"text":{"boost":1.0},"tags":{"boost":1000000.0}}},"docs":[{"location":"","title":"THE PLATFORM OF DIGITALIZATION","text":""},{"location":"#for-business-process-automation-including-documents","title":"For Business Process Automation - Including Documents","text":""},{"location":"#digitization","title":"Digitization","text":"<p>Digitization refers to creating a digital representation of physical objects or attributes. For instance, we scan a paper document and save it as a digital document (e.g., PDF). In other words, digitization is about converting something non-digital into a digital representation or artifact.</p> <p>Sign up for a 30 days free trial</p>"},{"location":"#digitalization","title":"Digitalization","text":"<p>Digitalization refers to enabling or improving processes by leveraging digital technologies and digitized data. Therefore, digitalization presumes digitization. Digitalization improves an existing business process or processes but doesn\u2019t change or transform them. It takes a process from a human-driven event or series of events to softwaredriven.</p>"},{"location":"#digital-transformation","title":"Digital Transformation","text":"<p>Digital transformation is about the entire transformation of the company. Digital transformation includes other changes brought about by digitalization. New business areas or business models can open along the way.</p> <p>Every business process starts, contains or ends with a document. Regardless of whether in paper form or already as a file. This is called unstructured data. Although the information is on or in the document, it cannot be automatically integrated into the work processes, as it is simply not recognized by all software.</p>"},{"location":"#what-is-doc2","title":"What is DOC\u00b2?","text":"<p>DOC\u00b2 is the latest software and solution for document capture that was developed by PolyDocs GmbH. It is a completely cloud-based solution that uses Artificial Intelligence and Machine Learning to precisely identify, classify, analyze and read your documents. No matter if on paper or a file. DOC\u00b2 learns independently, the level of experience increases with each document. DOC\u00b2 accomplishes this through swarm intelligence.</p> <p>The Advantages of DOC\u00b2 at a glance:</p> <ul> <li>Recognizes the required data \u2013 even handwritten information and information in tables reliably and is self-learning, even through corrections by the user</li> <li>With swarm intelligence, you benefit continuously from the experiences of other customers</li> <li>Improves the accuracy and quality of the recognized data</li> <li>Enables an automated process without ongoing corrections and interventions</li> <li>Simple and intuitive interface</li> <li>No IT resources / specialists required</li> <li>Ensures a robust and consistent work process</li> <li>No sensitive data is stored or shared</li> <li>Saves time in the digital inbox</li> <li>Reduces errors caused by manual processing</li> </ul>"},{"location":"#how-do-you-use-doc2","title":"How do you use DOC\u00b2:","text":"<ul> <li>Scanning and Recognition of all types of documents (invoices, contracts, forms, medical prescriptions etc.)</li> <li>Reliable extraction of the data in the document and integration and further processing in the ERP, RPA or CRM system)</li> <li>Validation of the extracted data and verification against other systems from internal and public sources</li> <li>Integration into your system landscape (e.g. ERP System, Document Management, Workflow System etc)</li> </ul>"},{"location":"#why-doc2-is-just-right-for-you","title":"Why DOC\u00b2 is just right for you","text":"<ul> <li> <p>Many companies have recognized that processing incoming invoices, for example, can be very time-consuming. They are trying to increase productivity and optimize       the purchase-to-pay process by introducing products for the \u201cdigitization\u201d of invoices.</p> </li> <li> <p>In addition, DOC\u00b2 uses swarm intelligence. What does that mean? You benefit from the experiences of other customers and their \u201clearning curve\u201d without sharing sensitive      data. With the cloud-based rule engine, we ensure continuous improvement of the application. You don\u2019t need any developers or data scientists, because the system learns from the input of the user and the process runs without interruptions.</p> </li> <li> <p>With the help of deep learning algorithms, not only simple header data of a document can be recorded, but also complicated structures such as tables. Of course, not      only invoices are processed, but all types of documents. Regardless of whether it is waybills, membership applications, medical prescriptions and many more.</p> </li> </ul> <p> Sign up for a 30 days free trail </p>"},{"location":"tags/","title":"Tags","text":"<p>Following is a list of relevant tags:</p>"},{"location":"tags/#ai","title":"AI","text":"<ul> <li>AI Indicators</li> </ul>"},{"location":"tags/#amqp","title":"AMQP","text":"<ul> <li>AMQP</li> </ul>"},{"location":"tags/#api","title":"API","text":"<ul> <li>WEBHOOK</li> <li>Import</li> <li>API Integration</li> <li>Detect inside pages</li> <li>Merge/Split PDF</li> <li>OCR API</li> <li>Overview</li> <li>Workflow\u00b2 public REST API</li> <li>Workflow\u00b2 API reference</li> <li>Workflow\u00b2 API authentication</li> <li>Workflow\u00b2 API pagination</li> <li>Workflow\u00b2 Using the API playground</li> </ul>"},{"location":"tags/#api-calls","title":"API Calls","text":"<ul> <li>API Calls</li> </ul>"},{"location":"tags/#api-key","title":"API Key","text":"<ul> <li>Integration</li> </ul>"},{"location":"tags/#apitemplateio","title":"APITemplate.io","text":"<ul> <li>APITemplate.io</li> </ul>"},{"location":"tags/#aws","title":"AWS","text":"<ul> <li>AWS</li> </ul>"},{"location":"tags/#access-token","title":"Access Token","text":"<ul> <li>Netlify</li> </ul>"},{"location":"tags/#action-network","title":"Action Network","text":"<ul> <li>Action Network</li> <li>Action Network</li> </ul>"},{"location":"tags/#actions","title":"Actions","text":"<ul> <li>Generate file</li> <li>Set localStorage</li> </ul>"},{"location":"tags/#activecampaign","title":"ActiveCampaign","text":"<ul> <li>ActiveCampaign</li> </ul>"},{"location":"tags/#admin","title":"Admin","text":"<ul> <li>DOC\u00b2 - Postman Guides</li> </ul>"},{"location":"tags/#affinity","title":"Affinity","text":"<ul> <li>Affinity</li> </ul>"},{"location":"tags/#agile-crm","title":"Agile CRM","text":"<ul> <li>Agile CRM</li> </ul>"},{"location":"tags/#airtable","title":"Airtable","text":"<ul> <li>Airtable</li> </ul>"},{"location":"tags/#amount-settings","title":"Amount Settings","text":"<ul> <li>Amount Settings</li> </ul>"},{"location":"tags/#app","title":"App","text":"<ul> <li>Creating new app</li> <li>Preview and Sharing Apps</li> </ul>"},{"location":"tags/#approval","title":"Approval","text":"<ul> <li>WF\u00b2 Approval with DOC\u00b2</li> <li>WF\u00b2 Second Approval with DOC\u00b2</li> </ul>"},{"location":"tags/#asana","title":"Asana","text":"<ul> <li>Asana</li> </ul>"},{"location":"tags/#automizy","title":"Automizy","text":"<ul> <li>Automizy</li> </ul>"},{"location":"tags/#autopilot","title":"Autopilot","text":"<ul> <li>Autopilot</li> </ul>"},{"location":"tags/#azure-ad","title":"Azure AD","text":"<ul> <li>Configuring SSO</li> </ul>"},{"location":"tags/#azure-active-directory","title":"Azure Active Directory","text":"<ul> <li>SSO for Azure AD</li> </ul>"},{"location":"tags/#bod","title":"BOD","text":"<ul> <li>How to create a BOD mapping file</li> </ul>"},{"location":"tags/#bamboohr","title":"BambooHR","text":"<ul> <li>BambooHR</li> </ul>"},{"location":"tags/#bannerbear","title":"Bannerbear","text":"<ul> <li>Bannerbear</li> </ul>"},{"location":"tags/#baserow","title":"Baserow","text":"<ul> <li>Baserow</li> </ul>"},{"location":"tags/#basic-operations","title":"Basic Operations","text":"<ul> <li>Discord</li> <li>Pipedrive</li> </ul>"},{"location":"tags/#beeminder","title":"Beeminder","text":"<ul> <li>Beeminder</li> </ul>"},{"location":"tags/#bigquery","title":"BigQuery","text":"<ul> <li>BigQuery</li> </ul>"},{"location":"tags/#bitbucket","title":"Bitbucket","text":"<ul> <li>Bitbucket</li> </ul>"},{"location":"tags/#bitly","title":"Bitly","text":"<ul> <li>Bitly</li> </ul>"},{"location":"tags/#bitwarden","title":"Bitwarden","text":"<ul> <li>Bitwarden</li> </ul>"},{"location":"tags/#box","title":"Box","text":"<ul> <li>Box</li> </ul>"},{"location":"tags/#brandfetch","title":"Brandfetch","text":"<ul> <li>Brandfetch</li> </ul>"},{"location":"tags/#bubble","title":"Bubble","text":"<ul> <li>Bubble</li> </ul>"},{"location":"tags/#calendly","title":"Calendly","text":"<ul> <li>Calendly</li> </ul>"},{"location":"tags/#chargebee","title":"Chargebee","text":"<ul> <li>Chargebee</li> </ul>"},{"location":"tags/#chart","title":"Chart","text":"<ul> <li>Chart</li> </ul>"},{"location":"tags/#circleci","title":"CircleCI","text":"<ul> <li>CircleCI</li> </ul>"},{"location":"tags/#clearbit","title":"Clearbit","text":"<ul> <li>Clearbit</li> </ul>"},{"location":"tags/#clickup","title":"ClickUp","text":"<ul> <li>ClickUp</li> </ul>"},{"location":"tags/#clockify","title":"Clockify","text":"<ul> <li>Clockify</li> </ul>"},{"location":"tags/#cloud","title":"Cloud","text":"<ul> <li>Configuring SSO in Infor Cloud</li> <li>Restart Ephesoft on Cloud</li> </ul>"},{"location":"tags/#cockpit","title":"Cockpit","text":"<ul> <li>Cockpit</li> </ul>"},{"location":"tags/#coda","title":"Coda","text":"<ul> <li>Coda</li> </ul>"},{"location":"tags/#code-example","title":"Code Example","text":"<ul> <li>Code Example</li> <li>Code Example - Query JSON</li> </ul>"},{"location":"tags/#columns","title":"Columns","text":"<ul> <li>Define tables and columns</li> </ul>"},{"location":"tags/#configuration","title":"Configuration","text":"<ul> <li>Configuring SSO</li> <li>Installation &amp; Config</li> <li>Installation &amp; Config</li> <li>TE\u00b2 Installation &amp; Config</li> </ul>"},{"location":"tags/#connection","title":"Connection","text":"<ul> <li>Connection</li> </ul>"},{"location":"tags/#course-level-1","title":"Course Level 1","text":"<ul> <li>Introduction</li> </ul>"},{"location":"tags/#course-level-2","title":"Course Level 2","text":"<ul> <li>Introduction</li> </ul>"},{"location":"tags/#courses","title":"Courses","text":"<ul> <li>Courses for Workflow\u00b2</li> </ul>"},{"location":"tags/#cron","title":"Cron","text":"<ul> <li>Workflows for Weather Forecast</li> <li>Weather</li> <li>Cron</li> <li>RabbitMQ</li> </ul>"},{"location":"tags/#custom-component","title":"Custom Component","text":"<ul> <li>Custom Component</li> </ul>"},{"location":"tags/#doc2","title":"DOC\u00b2","text":"<ul> <li>Getting Started</li> <li>WEBHOOK</li> <li>Company Information</li> <li>Deployment</li> <li>All DOC\u00b2 document status</li> <li>E-Mail</li> <li>Modules</li> <li>DOC\u00b2 - OnBoarding</li> <li>Amount Settings</li> <li>Document Types, Field Settings and Profile</li> <li>Master Data Validation</li> <li>SSO Settings</li> <li>Users</li> <li>DOC\u00b2 with Workflow\u00b2</li> <li>ZUGFeRD</li> <li>Configuring SSO</li> <li>SSO for Azure AD</li> <li>DOC\u00b2 - Postman Guides</li> <li>Dashboard</li> <li>DOC\u00b2 with Infor</li> <li>IDM Business Context Model</li> <li>DOC\u00b2 - Infor Use Cases</li> <li>DOC\u00b2 - Infor API Flow</li> <li>Infrastructure for Infor Cloud and on Premise</li> <li>Document Validation</li> <li>AI Indicators</li> <li>Exception filters</li> <li>Master Data Validation</li> <li>OCR View</li> <li>Export</li> <li>How to create an Infor ION API file</li> <li>Export to FLOW\u00b2</li> <li>How to create a BOD mapping file</li> <li>How to create a IDM mapping file</li> <li>Export to Infor IDM</li> <li>Export to Infor IDM</li> <li>Export to Infor ION and IDM</li> <li>Webhook</li> <li>DOC\u00b2 to Infor OS</li> <li>DOC\u00b2 to Infor OS</li> <li>Fileshare Import</li> <li>Watchdog for macOS</li> <li>Watchdog for Windows</li> <li>Import</li> <li>PO Matching - Delivery Note</li> <li>PO Matching - Invoices</li> <li>PO Matching - Order Confirmation</li> <li>PO Matching</li> <li>Settings</li> <li>Email notification</li> <li>Groups, Users and Permissons</li> <li>Integration</li> <li>API Calls</li> <li>API Integration</li> <li>Table Extraction</li> <li>Add new table column</li> <li>Advanced settings for table extraction</li> <li>Define tables and columns</li> <li>Group function to extract data from tables</li> <li>Manual row selection</li> <li>Mapping of columns</li> <li>Save and delete rules</li> <li>Training for Table Extraction</li> <li>WF\u00b2 Approval with DOC\u00b2</li> <li>DOC\u00b2 export to Excel</li> <li>Email Import with GMail to DOC\u00b2</li> <li>Email Import with O365 to DOC\u00b2</li> <li>WF\u00b2 Second Approval with DOC\u00b2</li> <li>Export DOC\u00b2 to Google Drive</li> <li>Configuring DOC\u00b2 App Status Trigger node</li> <li>Workflow\u00b2 Examples</li> <li>Import from DOC\u00b2</li> <li>Data security with Doc\u00b2</li> <li>Privileges with DOC\u00b2</li> <li>Ephesoft - External Application</li> <li>Welcome to Workflow\u00b2</li> <li>Welcome to Workflow\u00b2</li> </ul>"},{"location":"tags/#doc2export","title":"DOC\u00b2Export","text":"<ul> <li>Activate Workflow</li> <li>Configuring Google Drive node</li> <li>Create blank workflow</li> </ul>"},{"location":"tags/#dashboard","title":"Dashboard","text":"<ul> <li>Deployment</li> <li>Manual Import</li> <li>Dashboard</li> <li>User Dashboard</li> </ul>"},{"location":"tags/#data-sources","title":"Data Sources","text":"<ul> <li>Data Sources</li> <li>Airtable</li> <li>Appwrite Database</li> <li>Athena</li> <li>Baserow</li> <li>BigQuery</li> <li>CouchDB</li> <li>Custom JavaScript</li> <li>DynamoDB</li> <li>Elasticsearch</li> <li>Cloud Firestore</li> <li>Google Cloud Storage</li> <li>Google Sheets</li> <li>GraphQL</li> <li>InfluxDB</li> <li>Mailgun</li> <li>MinIO</li> <li>MongoDB</li> <li>MS SQL Server / Azure SQL databases</li> <li>MySQL</li> <li>n8n</li> <li>Notion</li> <li>OpenAPI</li> <li>Oracle DB</li> <li>PostgreSQL</li> <li>Redis</li> <li>REST API</li> <li>RethinkDB</li> <li>Amazon S3</li> <li>SAP HANA</li> <li>SendGrid</li> <li>SMTP</li> <li>Snowflake</li> <li>TypeSense</li> <li>WooCommerce</li> <li>Adding a data source</li> </ul>"},{"location":"tags/#data-security","title":"Data security","text":"<ul> <li>Data security with Doc\u00b2</li> </ul>"},{"location":"tags/#data-structure","title":"Data structure","text":"<ul> <li>Overview - Mapping and transforming data</li> </ul>"},{"location":"tags/#database","title":"Database","text":"<ul> <li>How to delete a KV\u00b2Plugin rule from the Database</li> </ul>"},{"location":"tags/#date-time","title":"Date &amp; Time","text":"<ul> <li>Date &amp; Time</li> </ul>"},{"location":"tags/#debugger","title":"Debugger","text":"<ul> <li>Debugger</li> </ul>"},{"location":"tags/#delete","title":"Delete","text":"<ul> <li>Save and delete rules</li> </ul>"},{"location":"tags/#delivery-note","title":"Delivery Note","text":"<ul> <li>PO Matching - Delivery Note</li> </ul>"},{"location":"tags/#demonstration","title":"Demonstration","text":"<ul> <li>Welcome to Workflow\u00b2</li> <li>Welcome to Workflow\u00b2</li> </ul>"},{"location":"tags/#deployment","title":"Deployment","text":"<ul> <li>Deployment</li> <li>Deployment</li> </ul>"},{"location":"tags/#digitizing-documents","title":"Digitizing Documents","text":"<ul> <li>Welcome to FLOW\u00b2</li> </ul>"},{"location":"tags/#digitizing-documents_1","title":"Digitizing documents","text":"<ul> <li>KV\u00b2 - Getting Started</li> </ul>"},{"location":"tags/#discord","title":"Discord","text":"<ul> <li>Discord</li> </ul>"},{"location":"tags/#document","title":"Document","text":"<ul> <li>All DOC\u00b2 document status</li> <li>Document Validation</li> </ul>"},{"location":"tags/#document-processing","title":"Document Processing","text":"<ul> <li>Settings</li> </ul>"},{"location":"tags/#document-types","title":"Document Types","text":"<ul> <li>Document Types, Field Settings and Profile</li> </ul>"},{"location":"tags/#document-validation","title":"Document Validation","text":"<ul> <li>Master Data Validation</li> </ul>"},{"location":"tags/#doc2_1","title":"Doc\u00b2","text":"<ul> <li>Keyboard</li> <li>Manual Import</li> </ul>"},{"location":"tags/#download","title":"Download","text":"<ul> <li>ZUGFeRD</li> </ul>"},{"location":"tags/#dropbox","title":"Dropbox","text":"<ul> <li>DOC\u00b2 export to Excel</li> </ul>"},{"location":"tags/#dynamodb","title":"DynamoDB","text":"<ul> <li>DynamoDB</li> </ul>"},{"location":"tags/#e-mail","title":"E-Mail","text":"<ul> <li>E-Mail</li> <li>Import</li> </ul>"},{"location":"tags/#editor-ui","title":"Editor UI","text":"<ul> <li>Workflow\u00b2 Editor UI</li> </ul>"},{"location":"tags/#elasticsearch","title":"Elasticsearch","text":"<ul> <li>Elasticsearch</li> </ul>"},{"location":"tags/#email","title":"Email","text":"<ul> <li>Email Import with GMail to DOC\u00b2</li> <li>Email Import with O365 to DOC\u00b2</li> </ul>"},{"location":"tags/#email-notification","title":"Email notification","text":"<ul> <li>Email notification</li> </ul>"},{"location":"tags/#ephesoft","title":"Ephesoft","text":"<ul> <li>KV\u00b2 - Getting Started</li> <li>How to deal with different VAT amounts</li> <li>How to delete a KV\u00b2Plugin rule from the Database</li> <li>Installation &amp; Config</li> <li>KV\u00b2 Tutorial</li> <li>Limitations of KV\u00b2 Plugin</li> <li>Restart Ephesoft on Cloud</li> <li>Restart Ephesoft On Premise</li> <li>Training KV2 for Table Extraction</li> <li>Ephesoft - External Application</li> <li>TE\u00b2 Plugin</li> <li>TE\u00b2 Tutorial</li> <li>TE\u00b2 Installation &amp; Config</li> <li>Infor BOD Mapping</li> </ul>"},{"location":"tags/#ephesoft-plugins","title":"Ephesoft Plugins","text":"<ul> <li>Enable Feedback Function</li> <li>Enable Feedback Function</li> </ul>"},{"location":"tags/#ephesoft-transact","title":"Ephesoft Transact","text":"<ul> <li>Installation &amp; Config</li> </ul>"},{"location":"tags/#example","title":"Example","text":"<ul> <li>Rename JSON Key</li> <li>Export DOC\u00b2 to Google Drive</li> <li>Activate Workflow</li> <li>Configuring DOC\u00b2 App Status Trigger node</li> <li>Configuring Google Drive node</li> <li>Create blank workflow</li> <li>Workflows for Weather Forecast</li> <li>Weather</li> <li>Weather</li> </ul>"},{"location":"tags/#example-usage","title":"Example Usage","text":"<ul> <li>Discord</li> <li>Pipedrive</li> </ul>"},{"location":"tags/#examples","title":"Examples","text":"<ul> <li>Workflow\u00b2 Examples</li> <li>IN\u00b2 Examples</li> <li>Change text color in columns of the table</li> <li>Bulk update multiple rows in table</li> <li>REST API authentication using OAuth 2.0</li> <li>Upload files on AWS S3 bucket</li> <li>Upload files using GCS</li> </ul>"},{"location":"tags/#excel","title":"Excel","text":"<ul> <li>DOC\u00b2 export to Excel</li> </ul>"},{"location":"tags/#exception","title":"Exception","text":"<ul> <li>Exception filters</li> </ul>"},{"location":"tags/#export","title":"Export","text":"<ul> <li>ZUGFeRD</li> <li>Export</li> <li>Export to FLOW\u00b2</li> <li>How to create a BOD mapping file</li> <li>How to create a IDM mapping file</li> <li>Export to Infor IDM</li> <li>Export to Infor ION and IDM</li> <li>Webhook</li> <li>DOC\u00b2 to Infor OS</li> <li>Export DOC\u00b2 to Google Drive</li> <li>Configuring DOC\u00b2 App Status Trigger node</li> </ul>"},{"location":"tags/#export-to-infor","title":"Export to Infor","text":"<ul> <li>How to create an Infor ION API file</li> </ul>"},{"location":"tags/#expressions","title":"Expressions","text":"<ul> <li>Code Example</li> <li>Code Example - Query JSON</li> </ul>"},{"location":"tags/#external-application","title":"External Application","text":"<ul> <li>Ephesoft - External Application</li> </ul>"},{"location":"tags/#extracted-fields","title":"Extracted Fields","text":"<ul> <li>All extracted fields</li> </ul>"},{"location":"tags/#faqs","title":"FAQs","text":"<ul> <li>Cron</li> <li>License</li> </ul>"},{"location":"tags/#flow2","title":"FLOW\u00b2","text":"<ul> <li>Export</li> <li>Export to FLOW\u00b2</li> <li>Welcome to FLOW\u00b2</li> <li>Deployment</li> <li>FLOW\u00b2 Onboarding Guide</li> <li>User Dashboard</li> <li>Import from DOC\u00b2</li> <li>Getting Started</li> <li>Metadata</li> <li>System Setup</li> </ul>"},{"location":"tags/#ftp","title":"FTP","text":"<ul> <li>FTP</li> </ul>"},{"location":"tags/#feedback","title":"Feedback","text":"<ul> <li>Enable Feedback Function</li> <li>Enable Feedback Function</li> </ul>"},{"location":"tags/#field-settings","title":"Field Settings","text":"<ul> <li>Document Types, Field Settings and Profile</li> </ul>"},{"location":"tags/#fileshare","title":"Fileshare","text":"<ul> <li>Fileshare Import</li> </ul>"},{"location":"tags/#fileshare-import","title":"Fileshare Import","text":"<ul> <li>Watchdog for macOS</li> <li>Watchdog for Windows</li> </ul>"},{"location":"tags/#filter","title":"Filter","text":"<ul> <li>Exception filters</li> </ul>"},{"location":"tags/#function","title":"Function","text":"<ul> <li>Function</li> <li>Function Item</li> </ul>"},{"location":"tags/#generel","title":"Generel","text":"<ul> <li>Exception filters</li> </ul>"},{"location":"tags/#getting-started","title":"Getting Started","text":"<ul> <li>Getting Started</li> </ul>"},{"location":"tags/#global","title":"Global","text":"<ul> <li>Settings</li> </ul>"},{"location":"tags/#gmail","title":"Gmail","text":"<ul> <li>Email Import with GMail to DOC\u00b2</li> </ul>"},{"location":"tags/#google-cloud-storage","title":"Google Cloud Storage","text":"<ul> <li>Google Cloud Storage</li> </ul>"},{"location":"tags/#google-drive","title":"Google Drive","text":"<ul> <li>Export DOC\u00b2 to Google Drive</li> <li>Activate Workflow</li> <li>Configuring DOC\u00b2 App Status Trigger node</li> <li>Configuring Google Drive node</li> <li>Create blank workflow</li> </ul>"},{"location":"tags/#groups","title":"Groups","text":"<ul> <li>Groups, Users and Permissons</li> <li>Managing Users and Groups</li> <li>Privileges with DOC\u00b2</li> </ul>"},{"location":"tags/#guide","title":"Guide","text":"<ul> <li>DOC\u00b2 - OnBoarding</li> <li>DOC\u00b2 - Postman Guides</li> </ul>"},{"location":"tags/#http-request","title":"HTTP Request","text":"<ul> <li>RabbitMQ</li> </ul>"},{"location":"tags/#http-requests","title":"HTTP Requests","text":"<ul> <li>Making HTTP Requests</li> </ul>"},{"location":"tags/#http-request_1","title":"HTTP request","text":"<ul> <li>DOC\u00b2 - Postman Guides</li> </ul>"},{"location":"tags/#help","title":"Help","text":"<ul> <li>Enable Feedback Function</li> <li>Enable Feedback Function</li> </ul>"},{"location":"tags/#homepage","title":"Homepage","text":"<ul> <li>Deployment</li> <li>Dashboard</li> <li>User Dashboard</li> </ul>"},{"location":"tags/#how-to","title":"How To","text":"<ul> <li>Creating nodes</li> </ul>"},{"location":"tags/#how-to_1","title":"How-To","text":"<ul> <li>Workflow\u00b2 combined with MAUTIC</li> <li>Workflow\u00b2 combined with MAUTIC</li> </ul>"},{"location":"tags/#idm","title":"IDM","text":"<ul> <li>IDM Business Context Model</li> <li>How to create a IDM mapping file</li> <li>Export to Infor IDM</li> <li>Export to Infor ION and IDM</li> </ul>"},{"location":"tags/#ion","title":"ION","text":"<ul> <li>How to create an Infor ION API file</li> <li>Export to Infor ION and IDM</li> </ul>"},{"location":"tags/#import","title":"Import","text":"<ul> <li>E-Mail</li> <li>Manual Import</li> <li>Fileshare Import</li> <li>Import</li> <li>Email Import with GMail to DOC\u00b2</li> <li>Email Import with O365 to DOC\u00b2</li> </ul>"},{"location":"tags/#importing-documents","title":"Importing documents","text":"<ul> <li>Import from DOC\u00b2</li> </ul>"},{"location":"tags/#infor","title":"Infor","text":"<ul> <li>DOC\u00b2 with Infor</li> <li>IDM Business Context Model</li> <li>Configuring SSO in Infor Cloud</li> <li>Infrastructure for Infor Cloud and on Premise</li> <li>Export</li> <li>How to create a BOD mapping file</li> <li>How to create a IDM mapping file</li> <li>Export to Infor IDM</li> <li>Export to Infor ION and IDM</li> <li>DOC\u00b2 to Infor OS</li> <li>Infor BOD Mapping</li> </ul>"},{"location":"tags/#infor-cloudsuite","title":"Infor CloudSuite","text":"<ul> <li>Infor BOD Mapping</li> </ul>"},{"location":"tags/#infor-ln","title":"Infor LN","text":"<ul> <li>DOC\u00b2 - Infor Use Cases</li> <li>DOC\u00b2 - Infor API Flow</li> <li>Infor BOD Mapping</li> </ul>"},{"location":"tags/#infor-m3","title":"Infor M3","text":"<ul> <li>DOC\u00b2 - Infor Use Cases</li> <li>DOC\u00b2 - Infor API Flow</li> <li>Infor BOD Mapping</li> </ul>"},{"location":"tags/#infor-os","title":"Infor OS","text":"<ul> <li>Configuring SSO</li> <li>Export to Infor ION and IDM</li> <li>WF\u00b2 Approval with DOC\u00b2</li> </ul>"},{"location":"tags/#infrastructure","title":"Infrastructure","text":"<ul> <li>Infrastructure for Infor Cloud and on Premise</li> </ul>"},{"location":"tags/#initial-setup","title":"Initial Setup","text":"<ul> <li>DOC\u00b2 - OnBoarding</li> </ul>"},{"location":"tags/#insight2","title":"Insight\u00b2","text":"<ul> <li>Welcome to Insight\u00b2</li> <li>Deployment</li> <li>Security</li> <li>Tracking</li> <li>Generate file</li> <li>Set localStorage</li> <li>Data Sources</li> <li>Airtable</li> <li>Appwrite Database</li> <li>Athena</li> <li>Baserow</li> <li>BigQuery</li> <li>CouchDB</li> <li>Custom JavaScript</li> <li>DynamoDB</li> <li>Elasticsearch</li> <li>Cloud Firestore</li> <li>Google Cloud Storage</li> <li>Google Sheets</li> <li>GraphQL</li> <li>InfluxDB</li> <li>Mailgun</li> <li>MinIO</li> <li>MongoDB</li> <li>MS SQL Server / Azure SQL databases</li> <li>MySQL</li> <li>n8n</li> <li>Notion</li> <li>OpenAPI</li> <li>Oracle DB</li> <li>PostgreSQL</li> <li>Redis</li> <li>REST API</li> <li>RethinkDB</li> <li>Amazon S3</li> <li>SAP HANA</li> <li>SendGrid</li> <li>SMTP</li> <li>Snowflake</li> <li>TypeSense</li> <li>WooCommerce</li> <li>IN\u00b2 Examples</li> <li>Change text color in columns of the table</li> <li>Bulk update multiple rows in table</li> <li>REST API authentication using OAuth 2.0</li> <li>Upload files on AWS S3 bucket</li> <li>Upload files using GCS</li> <li>Try it out</li> <li>Adding a data source</li> <li>Adding a widget</li> <li>Building Queries</li> <li>Creating new app</li> <li>Debugger</li> <li>Keyboard Shortcuts</li> <li>Managing Users and Groups</li> <li>Mobile layout</li> <li>Multi-Workspace</li> <li>Preview and Sharing Apps</li> <li>Transformations</li> <li>Versioning and Release</li> <li>Widgets</li> <li>Button</li> <li>Chart</li> <li>Custom Component</li> <li>Kanban</li> <li>List view</li> <li>QR Scanner</li> <li>Radio Button</li> <li>Rich Text Editor</li> <li>Statistics</li> </ul>"},{"location":"tags/#installation","title":"Installation","text":"<ul> <li>Installation &amp; Config</li> <li>Installation &amp; Config</li> <li>TE\u00b2 Installation &amp; Config</li> </ul>"},{"location":"tags/#introduction","title":"Introduction","text":"<ul> <li>Welcome to FLOW\u00b2</li> <li>Welcome to Insight\u00b2</li> <li>A slightly longer introduction</li> <li>The very quick quickstart</li> </ul>"},{"location":"tags/#invoice","title":"Invoice","text":"<ul> <li>PO Matching - Invoices</li> </ul>"},{"location":"tags/#items","title":"Items","text":"<ul> <li>Items</li> </ul>"},{"location":"tags/#kv2","title":"KV\u00b2","text":"<ul> <li>All extracted fields</li> <li>KV\u00b2 - Getting Started</li> <li>How to deal with different VAT amounts</li> <li>How to delete a KV\u00b2Plugin rule from the Database</li> <li>Installation &amp; Config</li> <li>KV\u00b2 Tutorial</li> <li>Limitations of KV\u00b2 Plugin</li> <li>Training KV2 for Table Extraction</li> </ul>"},{"location":"tags/#kv2-plugin","title":"KV\u00b2 Plugin","text":"<ul> <li>Restart Ephesoft on Cloud</li> <li>Restart Ephesoft On Premise</li> </ul>"},{"location":"tags/#kafka","title":"Kafka","text":"<ul> <li>Kafka</li> </ul>"},{"location":"tags/#kanban","title":"Kanban","text":"<ul> <li>Kanban</li> </ul>"},{"location":"tags/#keyboard","title":"Keyboard","text":"<ul> <li>Keyboard</li> <li>Keyboard Shortcuts</li> </ul>"},{"location":"tags/#keyboard-shortcuts","title":"Keyboard shortcuts","text":"<ul> <li>PO Matching</li> </ul>"},{"location":"tags/#ln","title":"LN","text":"<ul> <li>IDM Business Context Model</li> <li>PO Matching - Invoices</li> </ul>"},{"location":"tags/#layout","title":"Layout","text":"<ul> <li>Mobile layout</li> </ul>"},{"location":"tags/#learn-the-basics","title":"Learn the basics","text":"<ul> <li>Welcome to Workflow\u00b2</li> <li>Welcome to Workflow\u00b2</li> <li>A slightly longer introduction</li> <li>The very quick quickstart</li> </ul>"},{"location":"tags/#license","title":"License","text":"<ul> <li>License</li> </ul>"},{"location":"tags/#limitations","title":"Limitations","text":"<ul> <li>Limitations of KV\u00b2 Plugin</li> </ul>"},{"location":"tags/#line-items","title":"Line Items","text":"<ul> <li>Table Extraction</li> </ul>"},{"location":"tags/#list","title":"List","text":"<ul> <li>All DOC\u00b2 document status</li> </ul>"},{"location":"tags/#mautic","title":"MAUTIC","text":"<ul> <li>Workflow\u00b2 combined with MAUTIC</li> <li>Workflow\u00b2 combined with MAUTIC</li> </ul>"},{"location":"tags/#mapping","title":"Mapping","text":"<ul> <li>How to create a BOD mapping file</li> <li>How to create a IDM mapping file</li> <li>Mapping of columns</li> <li>Infor BOD Mapping</li> </ul>"},{"location":"tags/#master-data-validation","title":"Master Data Validation","text":"<ul> <li>Master Data Validation</li> <li>Master Data Validation</li> </ul>"},{"location":"tags/#metadata","title":"Metadata","text":"<ul> <li>Metadata</li> </ul>"},{"location":"tags/#mindee","title":"Mindee","text":"<ul> <li>Mindee</li> </ul>"},{"location":"tags/#mingle","title":"Ming.le","text":"<ul> <li>WF\u00b2 Approval with DOC\u00b2</li> </ul>"},{"location":"tags/#mobile","title":"Mobile","text":"<ul> <li>Mobile layout</li> </ul>"},{"location":"tags/#modules","title":"Modules","text":"<ul> <li>Modules</li> </ul>"},{"location":"tags/#netlify","title":"Netlify","text":"<ul> <li>Netlify</li> </ul>"},{"location":"tags/#node","title":"Node","text":"<ul> <li>Node</li> </ul>"},{"location":"tags/#node-reference","title":"Node Reference","text":"<ul> <li>Cron</li> </ul>"},{"location":"tags/#notion","title":"Notion","text":"<ul> <li>Notion</li> </ul>"},{"location":"tags/#o365","title":"O365","text":"<ul> <li>Email Import with O365 to DOC\u00b2</li> </ul>"},{"location":"tags/#ocr","title":"OCR","text":"<ul> <li>OCR View</li> <li>Detect inside pages</li> <li>Getting Started</li> <li>OCR API</li> <li>OCR Server Process</li> </ul>"},{"location":"tags/#ocr-api","title":"OCR API","text":"<ul> <li>Installation &amp; Config</li> </ul>"},{"location":"tags/#ocr-server","title":"OCR Server","text":"<ul> <li>Overview</li> </ul>"},{"location":"tags/#ocr2","title":"OCR\u00b2","text":"<ul> <li>Installation &amp; Config</li> </ul>"},{"location":"tags/#on-prem","title":"On Prem","text":"<ul> <li>Restart Ephesoft On Premise</li> </ul>"},{"location":"tags/#onboarding","title":"OnBoarding","text":"<ul> <li>DOC\u00b2 - OnBoarding</li> </ul>"},{"location":"tags/#onboarding-guide","title":"Onboarding Guide","text":"<ul> <li>FLOW\u00b2 Onboarding Guide</li> </ul>"},{"location":"tags/#order-confirmation","title":"Order Confirmation","text":"<ul> <li>PO Matching - Order Confirmation</li> </ul>"},{"location":"tags/#outlook","title":"Outlook","text":"<ul> <li>Email Import with O365 to DOC\u00b2</li> </ul>"},{"location":"tags/#overview","title":"Overview","text":"<ul> <li>Deployment</li> <li>Dashboard</li> <li>DOC\u00b2 with Infor</li> <li>Workflow\u00b2 - Overview</li> </ul>"},{"location":"tags/#pdf","title":"PDF","text":"<ul> <li>Merge/Split PDF</li> </ul>"},{"location":"tags/#po-matching","title":"PO Matching","text":"<ul> <li>Modules</li> <li>DOC\u00b2 - Infor Use Cases</li> <li>DOC\u00b2 - Infor API Flow</li> <li>PO Matching - Delivery Note</li> <li>PO Matching - Invoices</li> <li>PO Matching - Order Confirmation</li> <li>PO Matching</li> </ul>"},{"location":"tags/#password","title":"Password","text":"<ul> <li>Users</li> </ul>"},{"location":"tags/#permissions","title":"Permissions","text":"<ul> <li>Groups, Users and Permissons</li> </ul>"},{"location":"tags/#pipedrive","title":"Pipedrive","text":"<ul> <li>Pipedrive</li> </ul>"},{"location":"tags/#plugin","title":"Plugin","text":"<ul> <li>KV\u00b2 - Getting Started</li> <li>How to deal with different VAT amounts</li> <li>How to delete a KV\u00b2Plugin rule from the Database</li> <li>Installation &amp; Config</li> <li>KV\u00b2 Tutorial</li> <li>Limitations of KV\u00b2 Plugin</li> <li>Training KV2 for Table Extraction</li> <li>Ephesoft - External Application</li> <li>TE\u00b2 Plugin</li> <li>TE\u00b2 Tutorial</li> <li>TE\u00b2 Installation &amp; Config</li> <li>Infor BOD Mapping</li> </ul>"},{"location":"tags/#postgres","title":"Postgres","text":"<ul> <li>Postgres</li> </ul>"},{"location":"tags/#postman","title":"Postman","text":"<ul> <li>DOC\u00b2 - Postman Guides</li> </ul>"},{"location":"tags/#prerequisites-kafka","title":"Prerequisites Kafka","text":"<ul> <li>Kafka</li> </ul>"},{"location":"tags/#prerequisites-mindee","title":"Prerequisites Mindee","text":"<ul> <li>Mindee</li> </ul>"},{"location":"tags/#prerequisites-netlify","title":"Prerequisites Netlify","text":"<ul> <li>Netlify</li> </ul>"},{"location":"tags/#prerequisites-postgres","title":"Prerequisites Postgres","text":"<ul> <li>Postgres</li> </ul>"},{"location":"tags/#prerequisites-rabbitmq","title":"Prerequisites RabbitMQ","text":"<ul> <li>RabbitMQ</li> </ul>"},{"location":"tags/#prerequisites-strapi","title":"Prerequisites Strapi","text":"<ul> <li>Strapi</li> </ul>"},{"location":"tags/#prerequisites-xero","title":"Prerequisites Xero","text":"<ul> <li>Xero</li> </ul>"},{"location":"tags/#privileges","title":"Privileges","text":"<ul> <li>Privileges with DOC\u00b2</li> </ul>"},{"location":"tags/#purchase-order","title":"Purchase Order","text":"<ul> <li>Modules</li> </ul>"},{"location":"tags/#qr-scanner","title":"QR Scanner","text":"<ul> <li>QR Scanner</li> </ul>"},{"location":"tags/#queries","title":"Queries","text":"<ul> <li>Building Queries</li> </ul>"},{"location":"tags/#rss-read","title":"RSS Read","text":"<ul> <li>RSS Read</li> </ul>"},{"location":"tags/#rabbitmq","title":"RabbitMQ","text":"<ul> <li>RabbitMQ</li> <li>RabbitMQ</li> </ul>"},{"location":"tags/#radio-button","title":"Radio Button","text":"<ul> <li>Radio Button</li> </ul>"},{"location":"tags/#read-binary-files","title":"Read Binary Files","text":"<ul> <li>Read Binary Files</li> </ul>"},{"location":"tags/#read-pdf","title":"Read PDF","text":"<ul> <li>Read PDF</li> </ul>"},{"location":"tags/#release","title":"Release","text":"<ul> <li>Versioning and Release</li> </ul>"},{"location":"tags/#rename","title":"Rename","text":"<ul> <li>Rename JSON Key</li> </ul>"},{"location":"tags/#rename-keys","title":"Rename Keys","text":"<ul> <li>Rename Keys</li> </ul>"},{"location":"tags/#repository","title":"Repository","text":"<ul> <li>TE\u00b2 Plugin</li> </ul>"},{"location":"tags/#respond-to-webhook","title":"Respond to Webhook","text":"<ul> <li>Respond to Webhook</li> </ul>"},{"location":"tags/#restart","title":"Restart","text":"<ul> <li>Restart Ephesoft on Cloud</li> <li>Restart Ephesoft On Premise</li> </ul>"},{"location":"tags/#rich-text-editor","title":"Rich Text Editor","text":"<ul> <li>Rich Text Editor</li> </ul>"},{"location":"tags/#rounding-errors","title":"Rounding Errors","text":"<ul> <li>Amount Settings</li> </ul>"},{"location":"tags/#row","title":"Row","text":"<ul> <li>Manual row selection</li> </ul>"},{"location":"tags/#rules","title":"Rules","text":"<ul> <li>Save and delete rules</li> </ul>"},{"location":"tags/#smtp","title":"SMTP","text":"<ul> <li>SMTP</li> </ul>"},{"location":"tags/#sse-trigger","title":"SSE Trigger","text":"<ul> <li>SSE Trigger</li> </ul>"},{"location":"tags/#ssh","title":"SSH","text":"<ul> <li>SSH</li> </ul>"},{"location":"tags/#sso","title":"SSO","text":"<ul> <li>SSO Settings</li> <li>Configuring SSO</li> <li>SSO for Azure AD</li> <li>Configuring SSO in Infor Cloud</li> <li>Integration</li> </ul>"},{"location":"tags/#salesforce","title":"Salesforce","text":"<ul> <li>Salesforce</li> </ul>"},{"location":"tags/#salesmate","title":"Salesmate","text":"<ul> <li>Salesmate</li> </ul>"},{"location":"tags/#save","title":"Save","text":"<ul> <li>Save and delete rules</li> </ul>"},{"location":"tags/#seatable","title":"SeaTable","text":"<ul> <li>SeaTable</li> </ul>"},{"location":"tags/#security","title":"Security","text":"<ul> <li>Security</li> </ul>"},{"location":"tags/#securityscorecard","title":"SecurityScorecard","text":"<ul> <li>SecurityScorecard</li> </ul>"},{"location":"tags/#segment","title":"Segment","text":"<ul> <li>Segment</li> </ul>"},{"location":"tags/#selection","title":"Selection","text":"<ul> <li>Manual row selection</li> </ul>"},{"location":"tags/#send-email","title":"Send Email","text":"<ul> <li>Send Email</li> <li>Send Email</li> </ul>"},{"location":"tags/#sendgrid","title":"SendGrid","text":"<ul> <li>SendGrid</li> </ul>"},{"location":"tags/#sendy","title":"Sendy","text":"<ul> <li>Sendy</li> </ul>"},{"location":"tags/#server","title":"Server","text":"<ul> <li>OCR Server Process</li> </ul>"},{"location":"tags/#set","title":"Set","text":"<ul> <li>Set</li> </ul>"},{"location":"tags/#settings","title":"Settings","text":"<ul> <li>Company Information</li> <li>Modules</li> <li>Amount Settings</li> <li>Document Types, Field Settings and Profile</li> <li>Master Data Validation</li> <li>SSO Settings</li> <li>Users</li> <li>How to create an Infor ION API file</li> <li>Export to FLOW\u00b2</li> <li>Settings</li> <li>Email notification</li> <li>Groups, Users and Permissons</li> <li>Integration</li> <li>API Calls</li> <li>API Integration</li> <li>Advanced settings for table extraction</li> </ul>"},{"location":"tags/#setup","title":"Setup","text":"<ul> <li>DOC\u00b2 - Postman Guides</li> </ul>"},{"location":"tags/#sharing","title":"Sharing","text":"<ul> <li>Preview and Sharing Apps</li> </ul>"},{"location":"tags/#split-in-batches","title":"Split In Batches","text":"<ul> <li>Split In Batches</li> </ul>"},{"location":"tags/#spotify","title":"Spotify","text":"<ul> <li>Spotify</li> </ul>"},{"location":"tags/#spreadsheet-file","title":"Spreadsheet File","text":"<ul> <li>Spreadsheet File</li> </ul>"},{"location":"tags/#stackby","title":"Stackby","text":"<ul> <li>Stackby</li> </ul>"},{"location":"tags/#start","title":"Start","text":"<ul> <li>Getting Started</li> <li>Welcome to Workflow\u00b2</li> <li>Start</li> </ul>"},{"location":"tags/#statistics","title":"Statistics","text":"<ul> <li>Statistics</li> </ul>"},{"location":"tags/#status","title":"Status","text":"<ul> <li>All DOC\u00b2 document status</li> </ul>"},{"location":"tags/#sticky-notes","title":"Sticky Notes","text":"<ul> <li>Sticky Notes</li> </ul>"},{"location":"tags/#stop-and-error","title":"Stop And Error","text":"<ul> <li>Stop And Error</li> </ul>"},{"location":"tags/#storyblok","title":"Storyblok","text":"<ul> <li>Storyblok</li> </ul>"},{"location":"tags/#strapi","title":"Strapi","text":"<ul> <li>Strapi</li> <li>Strapi</li> </ul>"},{"location":"tags/#strava","title":"Strava","text":"<ul> <li>Strava</li> </ul>"},{"location":"tags/#stripe","title":"Stripe","text":"<ul> <li>Stripe</li> </ul>"},{"location":"tags/#subscription","title":"Subscription","text":"<ul> <li>Company Information</li> </ul>"},{"location":"tags/#sugar","title":"Sugar","text":"<ul> <li>SugarCRM</li> </ul>"},{"location":"tags/#sugarcrm","title":"SugarCRM","text":"<ul> <li>SugarCRM</li> </ul>"},{"location":"tags/#supabase","title":"Supabase","text":"<ul> <li>Supabase</li> </ul>"},{"location":"tags/#switch","title":"Switch","text":"<ul> <li>Switch</li> </ul>"},{"location":"tags/#syncromsp","title":"SyncroMSP","text":"<ul> <li>SyncroMSP</li> </ul>"},{"location":"tags/#system-setup","title":"System Setup","text":"<ul> <li>System Setup</li> </ul>"},{"location":"tags/#te2","title":"TE\u00b2","text":"<ul> <li>Ephesoft - External Application</li> <li>TE\u00b2 Plugin</li> <li>TE\u00b2 Tutorial</li> <li>TE\u00b2 Installation &amp; Config</li> <li>Infor BOD Mapping</li> </ul>"},{"location":"tags/#table","title":"Table","text":"<ul> <li>Table Extraction</li> <li>Add new table column</li> <li>Advanced settings for table extraction</li> <li>Define tables and columns</li> <li>Training for Table Extraction</li> </ul>"},{"location":"tags/#table-extraction","title":"Table Extraction","text":"<ul> <li>Modules</li> <li>Group function to extract data from tables</li> <li>Manual row selection</li> <li>Mapping of columns</li> <li>Save and delete rules</li> <li>Training KV2 for Table Extraction</li> <li>Ephesoft - External Application</li> <li>TE\u00b2 Plugin</li> <li>TE\u00b2 Tutorial</li> <li>TE\u00b2 Installation &amp; Config</li> </ul>"},{"location":"tags/#tables","title":"Tables","text":"<ul> <li>Group function to extract data from tables</li> </ul>"},{"location":"tags/#taiga","title":"Taiga","text":"<ul> <li>Taiga</li> </ul>"},{"location":"tags/#tapfiliate","title":"Tapfiliate","text":"<ul> <li>Tapfiliate</li> </ul>"},{"location":"tags/#telegram","title":"Telegram","text":"<ul> <li>Telegram</li> </ul>"},{"location":"tags/#tempo","title":"Tempo","text":"<ul> <li>Tempo io</li> </ul>"},{"location":"tags/#tempo-io","title":"Tempo io","text":"<ul> <li>Tempo io</li> </ul>"},{"location":"tags/#thehive","title":"TheHive","text":"<ul> <li>TheHive</li> </ul>"},{"location":"tags/#timescaledb","title":"TimescaleDB","text":"<ul> <li>TimescaleDB</li> </ul>"},{"location":"tags/#todoist","title":"Todoist","text":"<ul> <li>Todoist</li> </ul>"},{"location":"tags/#tracking","title":"Tracking","text":"<ul> <li>Tracking</li> </ul>"},{"location":"tags/#training","title":"Training","text":"<ul> <li>Mapping of columns</li> <li>Training for Table Extraction</li> <li>Training KV2 for Table Extraction</li> <li>Ephesoft - External Application</li> </ul>"},{"location":"tags/#transact","title":"Transact","text":"<ul> <li>Restart Ephesoft on Cloud</li> </ul>"},{"location":"tags/#transforming-data","title":"Transforming data","text":"<ul> <li>Overview - Mapping and transforming data</li> </ul>"},{"location":"tags/#travis-ci","title":"Travis CI","text":"<ul> <li>Travis CI</li> </ul>"},{"location":"tags/#trello","title":"Trello","text":"<ul> <li>Trello</li> </ul>"},{"location":"tags/#tutorial","title":"Tutorial","text":"<ul> <li>Try it out</li> <li>KV\u00b2 Tutorial</li> </ul>"},{"location":"tags/#twake","title":"Twake","text":"<ul> <li>Twake</li> </ul>"},{"location":"tags/#twilio","title":"Twilio","text":"<ul> <li>Twilio</li> </ul>"},{"location":"tags/#twist","title":"Twist","text":"<ul> <li>Twist</li> </ul>"},{"location":"tags/#twitter","title":"Twitter","text":"<ul> <li>Twitter</li> <li>Twitter</li> </ul>"},{"location":"tags/#typeform","title":"Typeform","text":"<ul> <li>Typeform</li> </ul>"},{"location":"tags/#understanding-document-review","title":"Understanding Document Review","text":"<ul> <li>DOC\u00b2 - OnBoarding</li> </ul>"},{"location":"tags/#unleashed-software","title":"Unleashed Software","text":"<ul> <li>Unleashed Software</li> </ul>"},{"location":"tags/#uplead","title":"UpLead","text":"<ul> <li>UpLead</li> <li>UpLead</li> </ul>"},{"location":"tags/#uptimerobot","title":"UptimeRobot","text":"<ul> <li>UptimeRobot</li> <li>UptimeRobot</li> </ul>"},{"location":"tags/#use-cases","title":"Use Cases","text":"<ul> <li>DOC\u00b2 - Infor Use Cases</li> <li>DOC\u00b2 - Infor API Flow</li> </ul>"},{"location":"tags/#users","title":"Users","text":"<ul> <li>Users</li> <li>Groups, Users and Permissons</li> <li>Managing Users and Groups</li> </ul>"},{"location":"tags/#using-api","title":"Using API","text":"<ul> <li>Strapi</li> </ul>"},{"location":"tags/#using-api-key","title":"Using API Key","text":"<ul> <li>Mindee</li> </ul>"},{"location":"tags/#using-database-connection","title":"Using Database Connection","text":"<ul> <li>Postgres</li> </ul>"},{"location":"tags/#using-oauth","title":"Using OAuth","text":"<ul> <li>Xero</li> </ul>"},{"location":"tags/#using-code","title":"Using code","text":"<ul> <li>Overview - Mapping and transforming data</li> </ul>"},{"location":"tags/#vat","title":"VAT","text":"<ul> <li>How to deal with different VAT amounts</li> </ul>"},{"location":"tags/#validation","title":"Validation","text":"<ul> <li>Document Validation</li> </ul>"},{"location":"tags/#vero","title":"Vero","text":"<ul> <li>Vero</li> <li>Vero</li> </ul>"},{"location":"tags/#versioning","title":"Versioning","text":"<ul> <li>Versioning and Release</li> </ul>"},{"location":"tags/#vonage","title":"Vonage","text":"<ul> <li>Vonage</li> <li>Vonage</li> </ul>"},{"location":"tags/#wf2","title":"WF\u00b2","text":"<ul> <li>Workflow\u00b2 API pagination</li> <li>Workflow\u00b2 Using the API playground</li> </ul>"},{"location":"tags/#wait","title":"Wait","text":"<ul> <li>Wait</li> </ul>"},{"location":"tags/#watchdog","title":"Watchdog","text":"<ul> <li>Watchdog for macOS</li> <li>Watchdog for Windows</li> </ul>"},{"location":"tags/#weather","title":"Weather","text":"<ul> <li>Workflows for Weather Forecast</li> <li>Weather</li> <li>Weather</li> </ul>"},{"location":"tags/#webex-by-cisco","title":"Webex by Cisco","text":"<ul> <li>Webex by Cisco</li> </ul>"},{"location":"tags/#webflow","title":"Webflow","text":"<ul> <li>Webflow</li> <li>Webflow</li> </ul>"},{"location":"tags/#webhook","title":"Webhook","text":"<ul> <li>Export</li> <li>Webhook</li> <li>Workflows for Weather Forecast</li> <li>Weather</li> <li>Webhook</li> </ul>"},{"location":"tags/#wekan","title":"Wekan","text":"<ul> <li>Wekan</li> <li>Wekan</li> </ul>"},{"location":"tags/#widget","title":"Widget","text":"<ul> <li>Adding a widget</li> </ul>"},{"location":"tags/#widgets","title":"Widgets","text":"<ul> <li>Widgets</li> <li>Button</li> <li>Chart</li> <li>Custom Component</li> <li>Kanban</li> <li>List view</li> <li>QR Scanner</li> <li>Radio Button</li> <li>Rich Text Editor</li> <li>Statistics</li> </ul>"},{"location":"tags/#windows","title":"Windows","text":"<ul> <li>Watchdog for Windows</li> </ul>"},{"location":"tags/#wise","title":"Wise","text":"<ul> <li>Wise</li> <li>Wise</li> </ul>"},{"location":"tags/#woocommerce","title":"WooCommerce","text":"<ul> <li>WooCommerce</li> </ul>"},{"location":"tags/#wordpress","title":"WordPress","text":"<ul> <li>WordPress</li> </ul>"},{"location":"tags/#workflow","title":"Workflow","text":"<ul> <li>Workflow\u00b2 Examples</li> <li>Welcome to Workflow\u00b2</li> <li>Overview - Mapping and transforming data</li> <li>Overview</li> <li>Welcome to Workflow\u00b2</li> </ul>"},{"location":"tags/#workflow-trigger","title":"Workflow Trigger","text":"<ul> <li>Workflow Trigger</li> </ul>"},{"location":"tags/#workflow2","title":"Workflow\u00b2","text":"<ul> <li>DOC\u00b2 with Workflow\u00b2</li> <li>WF\u00b2 Approval with DOC\u00b2</li> <li>DOC\u00b2 export to Excel</li> <li>Email Import with GMail to DOC\u00b2</li> <li>Email Import with O365 to DOC\u00b2</li> <li>Rename JSON Key</li> <li>WF\u00b2 Second Approval with DOC\u00b2</li> <li>Workflow\u00b2 combined with MAUTIC</li> <li>Workflow\u00b2 combined with MAUTIC</li> <li>Export DOC\u00b2 to Google Drive</li> <li>Activate Workflow</li> <li>Configuring DOC\u00b2 App Status Trigger node</li> <li>Configuring Google Drive node</li> <li>Create blank workflow</li> <li>Workflows for Weather Forecast</li> <li>Weather</li> <li>Weather</li> <li>Workflow\u00b2 Editor UI</li> <li>Welcome to Workflow\u00b2</li> <li>Workflow\u00b2 public REST API</li> <li>Workflow\u00b2 API reference</li> <li>Workflow\u00b2 API authentication</li> <li>Code Example</li> <li>Code Example - Query JSON</li> <li>Courses for Workflow\u00b2</li> <li>Introduction</li> <li>Introduction</li> <li>Error handling</li> <li>Looping</li> <li>Merging</li> <li>Activation Trigger</li> <li>Cron</li> <li>Date &amp; Time</li> <li>Execute Command</li> <li>FTP</li> <li>Function</li> <li>Function Item</li> <li>GraphQL</li> <li>Read Binary Files</li> <li>Read PDF</li> <li>Rename Keys</li> <li>Respond to Webhook</li> <li>RSS Read</li> <li>Send Email</li> <li>Set</li> <li>Split In Batches</li> <li>Spreadsheet File</li> <li>SSE Trigger</li> <li>SSH</li> <li>Start</li> <li>Stop And Error</li> <li>Switch</li> <li>Wait</li> <li>Webhook</li> <li>Workflow Trigger</li> <li>Write Binary File</li> <li>XML</li> <li>Creating nodes</li> <li>Making HTTP Requests</li> <li>Action Network</li> <li>ActiveCampaign</li> <li>Affinity</li> <li>Agile CRM</li> <li>Airtable</li> <li>AMQP</li> <li>APITemplate.io</li> <li>Asana</li> <li>Automizy</li> <li>Autopilot</li> <li>AWS</li> <li>BambooHR</li> <li>Bannerbear</li> <li>Baserow</li> <li>Beeminder</li> <li>Bitbucket</li> <li>Bitly</li> <li>Bitwarden</li> <li>Box</li> <li>Brandfetch</li> <li>Bubble</li> <li>Calendly</li> <li>Chargebee</li> <li>CircleCI</li> <li>Webex by Cisco</li> <li>Clearbit</li> <li>ClickUp</li> <li>Clockify</li> <li>Cockpit</li> <li>Coda</li> <li>Kafka</li> <li>Mindee</li> <li>Netlify</li> <li>Postgres</li> <li>RabbitMQ</li> <li>Salesforce</li> <li>Salesmate</li> <li>SeaTable</li> <li>SecurityScorecard</li> <li>Segment</li> <li>Send Email</li> <li>SendGrid</li> <li>Sendy</li> <li>Strapi</li> <li>Twitter</li> <li>Typeform</li> <li>uProc</li> <li>UpLead</li> <li>UptimeRobot</li> <li>urlscan.io</li> <li>Vero</li> <li>Vonage</li> <li>Webflow</li> <li>Wekan</li> <li>Wise</li> <li>Xero</li> <li>Action Network</li> <li>Discord</li> <li>Pipedrive</li> <li>RabbitMQ</li> <li>Spotify</li> <li>Stackby</li> <li>Storyblok</li> <li>Strapi</li> <li>Strava</li> <li>Stripe</li> <li>SugarCRM</li> <li>Supabase</li> <li>SyncroMSP</li> <li>Taiga</li> <li>Tapfiliate</li> <li>Telegram</li> <li>Tempo io</li> <li>TheHive</li> <li>TimescaleDB</li> <li>Todoist</li> <li>Travis CI</li> <li>Trello</li> <li>Twake</li> <li>Twilio</li> <li>Twist</li> <li>Twitter</li> <li>Unleashed Software</li> <li>UpLead</li> <li>uProc</li> <li>UptimeRobot</li> <li>urlscan.io</li> <li>Vero</li> <li>Vonage</li> <li>Webflow</li> <li>Wekan</li> <li>Wise</li> <li>WooCommerce</li> <li>WordPress</li> <li>Xero</li> <li>YouTube</li> <li>Yourls</li> <li>Zammad</li> <li>Zendesk</li> <li>Zoho CRM</li> <li>Zoom</li> <li>License</li> <li>A slightly longer introduction</li> <li>The very quick quickstart</li> <li>Workflow\u00b2 - Overview</li> <li>Connection</li> <li>Items</li> <li>Node</li> <li>Sticky Notes</li> <li>Workflow</li> </ul>"},{"location":"tags/#workspace","title":"Workspace","text":"<ul> <li>Multi-Workspace</li> </ul>"},{"location":"tags/#write-binary-file","title":"Write Binary File","text":"<ul> <li>Write Binary File</li> </ul>"},{"location":"tags/#xml","title":"XML","text":"<ul> <li>XML</li> </ul>"},{"location":"tags/#xero","title":"Xero","text":"<ul> <li>Xero</li> <li>Xero</li> </ul>"},{"location":"tags/#youtube","title":"YouTube","text":"<ul> <li>YouTube</li> </ul>"},{"location":"tags/#yourls","title":"Yourls","text":"<ul> <li>Yourls</li> </ul>"},{"location":"tags/#zugferd","title":"ZUGFeRD","text":"<ul> <li>Company Information</li> <li>ZUGFeRD</li> </ul>"},{"location":"tags/#zammad","title":"Zammad","text":"<ul> <li>Zammad</li> </ul>"},{"location":"tags/#zendesk","title":"Zendesk","text":"<ul> <li>Zendesk</li> </ul>"},{"location":"tags/#zoho-crm","title":"Zoho CRM","text":"<ul> <li>Zoho CRM</li> </ul>"},{"location":"tags/#zoom","title":"Zoom","text":"<ul> <li>Zoom</li> </ul>"},{"location":"tags/#apipolydocsio","title":"api.polydocs.io","text":"<ul> <li>API Calls</li> </ul>"},{"location":"tags/#create","title":"create","text":"<ul> <li>Creating nodes</li> </ul>"},{"location":"tags/#delete-rules","title":"delete rules","text":"<ul> <li>How to delete a KV\u00b2Plugin rule from the Database</li> </ul>"},{"location":"tags/#document-management-system-dms","title":"document management system (DMS)","text":"<ul> <li>Getting Started</li> </ul>"},{"location":"tags/#extract","title":"extract","text":"<ul> <li>Getting Started</li> </ul>"},{"location":"tags/#macos","title":"macOS","text":"<ul> <li>Watchdog for macOS</li> </ul>"},{"location":"tags/#manual-import","title":"manual Import","text":"<ul> <li>Import</li> </ul>"},{"location":"tags/#manually","title":"manually","text":"<ul> <li>Manual row selection</li> </ul>"},{"location":"tags/#metadata_1","title":"metadata","text":"<ul> <li>Getting Started</li> </ul>"},{"location":"tags/#n8n","title":"n8n","text":"<ul> <li>n8n</li> <li>License</li> </ul>"},{"location":"tags/#new-service-provider","title":"new service provider","text":"<ul> <li>Configuring SSO in Infor Cloud</li> </ul>"},{"location":"tags/#nodes","title":"nodes","text":"<ul> <li>Creating nodes</li> <li>Overview</li> </ul>"},{"location":"tags/#transform-regular-documents-into-ocrd-ones","title":"transform regular documents into OCR'd ones","text":"<ul> <li>Overview</li> </ul>"},{"location":"tags/#uproc","title":"uProc","text":"<ul> <li>uProc</li> <li>uProc</li> </ul>"},{"location":"tags/#urlscanio","title":"urlscan.io","text":"<ul> <li>urlscan.io</li> <li>urlscan.io</li> </ul>"},{"location":"doc2/","title":"Getting Started","text":"","tags":["DOC\u00b2","Start"]},{"location":"doc2/#welcome-to","title":"Welcome to","text":"<p>The intelligent solution for Digitizing Documents</p> <p>Every business process starts, contains or ends with a document. Regardless of whether in paper form or already as a file. This is called unstructured data. Although the information is on or in the document, it cannot be automatically integrated into the work processes, as it is simply not recognized by all software.</p> <p>DOC\u00b2 is the latest software and solution for document capture that was developed by Polydocs GmbH. It is a completely cloud-based solution that uses Artificial Intelligence and Machine Learning to precisely identify, classify, analyze and read your documents. No matter if paper or file. DOC\u00b2 learns independently, the level of experience increases with each document. DOC\u00b2 uses swarm intelligence for this.</p>","tags":["DOC\u00b2","Start"]},{"location":"doc2/#the-advantages-of-doc2-at-a-glance","title":"The Advantages of DOC\u00b2 at a glance:","text":"<ul> <li>Recognizes the required data - even handwritten information and information in tables reliably and is self-learning, even through corrections by the user</li> <li>With swarm intelligence, you benefit continuously from the experiences of other customers</li> <li>Improves the accuracy and quality of the recognized data</li> <li>Enables an automated process without ongoing corrections and interventions</li> <li>Simple intuitive interface</li> <li>No IT resources / specialists required</li> <li>Ensures a robust and consistent work process</li> <li>No sensitive data is stored or shared</li> <li>Saves time in the digital inbox</li> <li>Reduces errors caused by manual processing</li> </ul> <p>Start now a free 30 days trail</p>","tags":["DOC\u00b2","Start"]},{"location":"doc2/#how-do-you-use-doc2","title":"How do you use DOC\u00b2:","text":"<ul> <li>Scanning and Recognition of all types of documents (Invoices, Contracts, Forms, Medical Prescriptions etc.)</li> <li>Reliable extraction of the data in the document and integration and further processing in the ERP, RPA or CRM system)</li> <li>Validation of the extracted data and verification against other systems from internal and public sources</li> <li>Integration into your system landscape (e.g. ERP System, Document Management, Workflow System etc)</li> </ul>","tags":["DOC\u00b2","Start"]},{"location":"doc2/#why-doc2-is-just-right-for-you","title":"Why DOC\u00b2 is just right for you","text":"<p>Many companies have recognized that processing incoming invoices, for example, can be very time-consuming. They are trying to increase productivity and optimize the purchase-to-pay process by introducing products for the \u201cdigitization\u201d of invoices.</p> <p>In addition, DOC\u00b2 uses swarm intelligence. What does that mean? You benefit from the experiences of other customers and their \"learning curve\" without sharing sensitive data. With the cloud-based rule engine, we ensure continuous improvement of the application. You don't need any developers or data scientists, because the system learns from the input of the user and the process runs without interruptions.</p> <p>With the help of deep learning algorithms, not only simple header data of a document can be recorded, but also complicated structures such as tables. Of course, not only invoices are processed, but all types of documents. Regardless of whether it is waybills, membership applications, medical prescriptions and many more.</p>","tags":["DOC\u00b2","Start"]},{"location":"doc2/api/","title":"WEBHOOK","text":"<p>With the webhook attached below, you can transfer documents directly to DOC\u00b2 with a POST request. All parameters are already filled in. So all you have to do is make a simple call.</p> <p>Parameters used:</p> <ol> <li>API Key</li> <li>System URL</li> <li>A file you want to upload</li> </ol> <p>Webhook-Doc2.postman_collection.json_Download</p>","tags":["DOC\u00b2","API"]},{"location":"doc2/company-information/","title":"Company Information","text":"","tags":["Settings","DOC\u00b2","ZUGFeRD","Subscription"]},{"location":"doc2/company-information/#you-will-need-this-information-filled-for-exporting-documents-in-zugferd-format","title":"You will need this information filled for exporting documents in ZUGFeRD format.","text":"<p>Enter company specific information here so they can be used for various exports you might use.</p> <p>You will end up in the following screen.</p> <p></p> <p>Please enter your personal company information.</p> <p>Example:</p> <p></p> <p>When you are done, click on <code>SAVE</code>.</p> <p> The export will only work if a valid address is included on the document.</p>","tags":["Settings","DOC\u00b2","ZUGFeRD","Subscription"]},{"location":"doc2/company-information/#subscription-plan-and-usage","title":"Subscription Plan and Usage","text":"<p>Under your company information you can find your booked subscription plan with start and end date. You can also query your processed pages for a period selected in the calendar.</p>","tags":["Settings","DOC\u00b2","ZUGFeRD","Subscription"]},{"location":"doc2/deployment/","title":"Deployment","text":"","tags":["DOC\u00b2","Dashboard","Homepage","Overview"]},{"location":"doc2/deployment/#how-to-deploy-doc2","title":"How to deploy DOC\u00b2","text":"<p>All you need is the URL App and the login details that you received from us. The login details have admin rights.</p>","tags":["DOC\u00b2","Dashboard","Homepage","Overview"]},{"location":"doc2/deployment/#prerequisites","title":"Prerequisites","text":"<p>Running Computer with access to internet. The following screen will be shown when you go to the URL:</p> <p></p> <p>Enter the login details you received from us. This is your admin data. If you see the following screen, you are almost ready to go. All further details and necessary steps can be found here.</p> <p></p>","tags":["DOC\u00b2","Dashboard","Homepage","Overview"]},{"location":"doc2/document_status/","title":"All DOC\u00b2 document status","text":"","tags":["Status","Document","List","DOC\u00b2"]},{"location":"doc2/document_status/#all-doc2-document-status","title":"All DOC\u00b2 document status","text":"<ul> <li><code>WatchDog Start</code>: Watchdog is starting.</li> <li><code>WatchDog Split</code>: The document gets split in Watchdog.</li> <li><code>WatchDog Upload</code>: The document is getting uploaded in Watchdog.</li> <li><code>Upload</code>: The document is getting uploaded.</li> <li><code>OCR</code>: OCR is currently running on that document.</li> <li><code>Classification</code>: The document is getting classified.</li> <li><code>Zugferd import</code>: A Zugferd document is getting imported.</li> <li><code>Ready for Validation</code>: The document is ready for validation.</li> <li><code>Zugferd export</code>: A Zugferd document is getting exported.</li> <li><code>Workflow</code>: Workflow is currently running with this document.</li> <li><code>Pending approval</code>: Document has to be approved.</li> <li><code>Pending second approval</code>: Document has to be approved a second time.</li> <li><code>Auto Accounting</code>: Automatic Accounting is running</li> <li><code>Export</code>: The Document is getting exported</li> <li><code>Error</code>: An error occured in the document</li> </ul>","tags":["Status","Document","List","DOC\u00b2"]},{"location":"doc2/document_status/#upload-and-classify","title":"Upload and Classify","text":"<pre><code>sequenceDiagram\n  Upload-&gt;&gt;Status: Get DocId from Upload?\n  loop Status\n      Status-&gt;&gt;Status: Till FinalStatus is not Classify\n  end\n  Status-&gt;&gt;Classify: FinalStatus is Classify\n    Classify-&gt;&gt;Delete: Delete Document with DocId\n</code></pre>","tags":["Status","Document","List","DOC\u00b2"]},{"location":"doc2/e-mail/","title":"E-Mail","text":"","tags":["E-Mail","Import","DOC\u00b2"]},{"location":"doc2/e-mail/#if-you-want-to-import-documents-from-a-specific-email-folder-here-are-the-steps-you-need-to-take","title":"If you want to import documents from a specific email folder, here are the steps you need to take:","text":"<p>Your email folder could look like this</p> <p></p> <p>Go to settings on top bar and choose Import in the selection</p> <p></p> <p>As you can see there is no email account for the import set up yet</p> <p></p> <p>Click on the <code>OFF</code> Button to open the Email import settings</p> <p>The boxes for E-Mail and Password as well as the API Key might get automatically filled with your login information for DOC\u00b2 depending on your browser settings. Please empty the fields before continuing to enter the needed information for the E-Mail Import.</p> <p>What you need to do is enter the protocol (IMAP or POP3), the encryption (SSL or TSL), server-name, port, a username e.g. \"incoming invoices\" as well as email address and password from which the documents should going to be imported from.</p> <p>This example is for a google email account:</p> <p>Important due to changes made by Google<p>You now need to set up 2-Factor Authentication and create an App-Password which you have to use here to make sure that the E-Mail import will work.</p> </p> <p></p> <p>After you have entered all required fields of your respective provider save the data</p> <p></p> <p>You can test the login by pressing the button of the same name. If all data are correct you will get a corresponding feedback.</p> <p></p> <p>After you click the <code>IMPORT</code> button, the documents will be fetched from the mailbox and you will be taken directly to the Dashboard.</p> <p></p> <p>If you have made the right decision to also use our Workflow\u00b2 APP, you will find the corresponding workflows here to automatically import your documents from your e-mail inbox to DOC\u00b2.</p>","tags":["E-Mail","Import","DOC\u00b2"]},{"location":"doc2/keyboard/","title":"Keyboard","text":"<p>There are two types of Keyboard functions described below:</p> <ul> <li>Enter Key</li> <li>Arrow Down Key</li> </ul> <p>Enter Key:</p> <p>The Enter Key will work for exporting the document if there is no exception in the document i.e. Validation Required for the fields.</p> <p>Arrow-Down-Key:</p> <p>The Arrow Down Key will be accepting the data in the fields which has validation required or any other exception.</p>","tags":["Doc\u00b2","Keyboard"]},{"location":"doc2/manual-import/","title":"Manual Import","text":"<p>Documents can be imported manually into DOC\u00b2 as described below.</p> <p>Click on the <code>Upload</code> button on the Dashboard:</p> <p></p> <p>The following window opens:</p> <p></p> <p>Documents can be uploaded to DOC\u00b2 via file browser or drag and drop. Furthermore, it is possible to upload multiple documents (up to a maximum of 10) at once.</p> <ul> <li> <p>Click on the button <code>Upload Documents</code> to upload documents via file browser. Select the files to be uploaded in your file browser and confirm your selection. The files will then be uploaded to DOC\u00b2.</p> </li> <li> <p>Alternatively, drag and drop your files onto the DOC\u00b2 import window as shown in the video below:</p> </li> </ul> <p>Dragging and dropping files directly on the DOC\u00b2 dashboard is also possible for uploading.</p> <p>As soon as the files have been uploaded, they have the initial status \"Running\". During this time the upload is processed. Editing the file is not possible at this time. Depending on the size and complexity of the file, processing may take a while:</p> <p></p> <p>As soon as the file has been processed, it receives the status \"Ready For Validation\". As soon as the document is in this status, validation can be started:</p> <p></p> <p>Details about the validation process can be found here: Document Validation</p>","tags":["Doc\u00b2","Dashboard","Import"]},{"location":"doc2/modules/","title":"Modules","text":"<p>In DOC\u00b2 you will find the \"SETTINGS\" menu in the \"DASHBOARD\". Open this menu.</p> <p></p> <p>There you will find the menu item \"Modules\". Open this menu.</p> <p></p> <p>There you will find the option \"PURCHASE ORDER\" with which you can switch PO matching on/off.</p> <p></p> <p>Furthermore you can define which documents should be matched via the option \"Select PO Matching\". There are three ways to match your purchase order. For details please check PO Matching documentation: PO Matching</p> <p></p> <p>Via the menu item \"Table Extraction\" the table extraction can be switched on/off. Furthermore, the version to be used with this account can be defined.</p> <p></p>","tags":["DOC\u00b2","Settings","Modules","Purchase Order","PO Matching","Table Extraction"]},{"location":"doc2/onboarding/","title":"OnBoarding","text":"<p>This guide will help you learn the basics of DOC\u00b2 that will get you up and running with an IPS that will maximize your productivity.</p>","tags":["DOC\u00b2","OnBoarding","Guide","Initial Setup","Understanding Document Review"]},{"location":"doc2/onboarding/#performing-initial-setup","title":"Performing Initial Setup","text":"<p>First, let's cover how to access and configure your system.</p> <p>DOC\u00b2 does not work in Tenant. All customers use the same cluster. Our Kubernetes Cluster is hosted in Frankfurt / Germany.</p> <p>https://app.polydocs.io/</p> <p>Here are the two ways to access the system:</p> <ol> <li>Contact your Polydocs GmbH representative or reach out to support@polydocs.io to register your company.</li> <li>Once you have decided to let DOC\u00b2 make your daily work easier, have already contacted us and have received the onboarding email, you are the first user and therefore the admin of your organization.</li> </ol> <p>Here is your step by step guide to set up </p> <ol> <li>Go to the App. We recommend bookmarking this URL for future reference.</li> <li>Log in with the credentials provided in your onboarding email.</li> </ol> <p>Tip: Can't find the onboarding email? Go to login screen, enter your email address and click the <code>Forgot Password?</code> link.</p>","tags":["DOC\u00b2","OnBoarding","Guide","Initial Setup","Understanding Document Review"]},{"location":"doc2/onboarding/#step-2-adding-users","title":"Step 2: Adding Users","text":"<p>After logging in, you'll need to add users to your tenant. When you add a user, they'll receive an onboarding email with a username and temporary password.</p> <p>You can add users from Settings &gt; Users. For help, refer to Adding Users.</p>","tags":["DOC\u00b2","OnBoarding","Guide","Initial Setup","Understanding Document Review"]},{"location":"doc2/onboarding/#understanding-document-review","title":"Understanding Document Review","text":"<p>After the initial setup is complete, most of your time in DOC\u00b2 will be spent reviewing example invoices.</p> <p>Sending Document to DOC\u00b2</p> <ol> <li>Manuel Upload</li> <li>Email</li> <li>API</li> <li>or use our WatchDog for Directories</li> </ol>","tags":["DOC\u00b2","OnBoarding","Guide","Initial Setup","Understanding Document Review"]},{"location":"doc2/onboarding/#reviewing-extracted-results","title":"Reviewing Extracted Results","text":"<p>If a document is not automatically processed, it will be stopped for manual review. This means you will need to edit or approve fields the system wasn't confident in, or couldn't find.</p> <p>To review extracted results:</p> <ol> <li>On the Dashboard, click on the document to assign the 10 oldest invoices in the system to yourself. You'll be taken to the Review screen.</li> <li>Review the extracted results. Refer to reviewing your document for more information.</li> <li>When you're satisfied, click Complete Review.</li> </ol>","tags":["DOC\u00b2","OnBoarding","Guide","Initial Setup","Understanding Document Review"]},{"location":"doc2/settings-amount-settings/","title":"Amount Settings","text":"","tags":["DOC\u00b2","Settings","Amount Settings","Rounding Errors"]},{"location":"doc2/settings-amount-settings/#this-section-is-mainly-intended-for-those-who-process-invoices-of-countries-where-rounding-is-a-matter-since-some-documents-contain-rounding-errors-after-the-decimal-point-in-certain-amounts-since-these-were-originally-three-digits-but-are-shown-on-the-invoice-with-only-two-decimal-places","title":"This section is mainly intended for those who process invoices of countries where rounding is a matter, since some documents contain rounding errors after the decimal point in certain amounts, since these were originally three digits but are shown on the invoice with only two decimal places.","text":"<p>Here is an example to illustrate:</p> <p></p> <p></p> <p></p> <p>If you do not process invoices where rounding is a matter, leave the selection off</p> <p></p>","tags":["DOC\u00b2","Settings","Amount Settings","Rounding Errors"]},{"location":"doc2/settings-document-types/","title":"Document Types, Field Settings and Profile","text":"<p>In DOC\u00b2 you will find the <code>SETTINGS</code> menu in the upper bar on <code>HOME</code> screen.</p> <p></p> <p>If you are logged in to DOC\u00b2 as an admin, you will find all fields of a document that can be extracted under the respective document type.</p> <p>Open the menu Document Types.</p> <p></p> <p>In the following overview you will find all standard document types available for you:</p> <p></p> <p>To see which fields can be extracted, for example from an invoice, click on <code>FIELDS</code> for this document type.</p> <p></p>","tags":["DOC\u00b2","Settings","Document Types","Field Settings"]},{"location":"doc2/settings-document-types/#field-settings","title":"FIELD SETTINGS","text":"<p>Here you will find all the fields that can be extracted:</p> INVOICE DETAILS PAYMENT DETAILS VAT &amp; AMOUNTS VENDOR DETAILS INVOICE NUMBER IBAN CURRENCY ADDRESS INVOICE DATE PAYMENT TERMS NET AMOUNT FULL SUPPLIER NAME DELIVERY DATE NET AMOUNT REDUCED VENDOR ID PO NUMBER NET AMOUNT FREE VENDOR VAT ORDER DATE TAX AMOUNT FULL TAX AMOUNT REDUCED TAX AMOUNT FREE VAT RATE FULL VAT RATE REDUCED VAT RATE FREE TOTAL NET AMOUNT TOTAL TAX AMOUNT TOTAL AMOUNT <p>For every overpoint you can also CREATE FIELDs like freight, postage or any field with an amount you want to extract from your invoices.</p> <p>For each field you can check the boxes if they are</p> <ul> <li> <p>REQUIRED: Here you can define if the field must contain a value to continue.</p> </li> <li> <p>READ ONLY: Here you can define if a field can only be displayed but not edited.</p> </li> <li> <p>HIDDEN: Here you can define whether a field should be hidden or displayed in the extraction view.</p> </li> <li> <p>FORCE VALIDATION: Here you can define whether a field must always be validated manually, even if it has been read 100% by DOC\u00b2.</p> </li> <li> <p>OCR and MATCH SCORE: Setting as described below, per field.</p> </li> <li> <p>FORMULA: Creation of a formula per field.</p> </li> </ul> <p></p> <p>If all settings are made and should be saved, please confirm this with the <code>SAVE SETTINGS</code> button, otherwise the settings will not be applied.</p> <p></p>","tags":["DOC\u00b2","Settings","Document Types","Field Settings"]},{"location":"doc2/settings-document-types/#recognition-settings","title":"RECOGNITION SETTINGS","text":"<p>OCR:</p> <p>Here you can set the sensitivity of the OCR (Optical Character Recognition) function for all fields at once. This value determines the sensitivity with which a field is marked in red if it could not be extracted with 100% certainty (OCR related!).</p> <p>MATCH SCORE:</p> <p>Here you can set the sensitivity of the MATCH SCORE function for all fields at once. This value determines from when a field is marked in red if DOC\u00b2 has not extracted the field with 100% probability. In this case the field needs to be validated manually.</p> <p>The button <code>RESTORE DEFAULTS</code> will set back both values to \"50\".</p> <p></p>","tags":["DOC\u00b2","Settings","Document Types","Field Settings"]},{"location":"doc2/settings-document-types/#profile","title":"PROFILE","text":"<p>Here you can define the profile that shall be used. Either Default or ZUGFeRD. In profile ZUGFeRD there are predefined fields that are mandatory for this type of invoice. If you do not explicitly use ZUGFeRD, please select \"Default\".</p> <p></p>","tags":["DOC\u00b2","Settings","Document Types","Field Settings"]},{"location":"doc2/settings-master-data-validation/","title":"Master Data Validation","text":"<p>DOC\u00b2 offers the possibility to upload your master data. This has the advantage that an automatic mapping of e.g. supplier data from your ERP system can be made during the extraction of documents.</p> <p>For example, the VAT number or supplier name extracted from the document can be used to identify the supplier data record from your ERP system (from the supplier data uploaded to DOC\u00b2).</p> <p>For more detailed information please refer to the following documentation: Master data validation</p> <p>To upload master data to DOC\u00b2, please navigate to the settings from the dashboard:</p> <p></p> <p>There you will find the menu item Supplier Validation. Please open it:</p> <p></p> <p>In the following view you can import the CSV file with all your data via drag and drop or via the button <code>BROWSE</code>. Additionally you can define if your file contains semicolon or comma as separator. When you are done click on <code>SAVE</code> to apply your changes.</p> <p></p>","tags":["DOC\u00b2","Settings","Master Data Validation"]},{"location":"doc2/settings-sso-settings/","title":"SSO Settings","text":"<ul> <li>Once you have received your Login Details from us, you will find all the details you need for SSO configuration here.</li> </ul> <p>To access the SSO SERVICE PROVIDER SETTINGS in DOC\u00b2</p> <p>1. Log in on URL https://app.polydocs.io/ with the login details you received from us.</p> <p>2. Go to SETTINGS (on top bar) and choose SSO Settings down at the bottom of the list.</p> <p>Here you will find all the information you need for the following steps</p> <p></p> <p></p> <p>The step by step guide to configure SSO in Infor Cloud can be found here.</p> <p>More helpful documentation can be found here.</p>","tags":["DOC\u00b2","Settings","SSO"]},{"location":"doc2/settings-users/","title":"Users","text":"<p>To manage your users follow these steps:</p> <p>From the Dashboard navigate to <code>SETTINGS</code>:</p> <p></p> <p>In the settings navigate to <code>Users</code>:</p> <p></p> <p>Direct link: https://app.polydocs.io/settings/user</p>","tags":["DOC\u00b2","Settings","Users","Password"]},{"location":"doc2/settings-users/#how-to-add-a-user","title":"How to add a user","text":"<p>Once the admin is registered, you can add your employees via following steps.</p> <p>In the user menu click on <code>ADD USER</code>:</p> <p></p> <p>Enter the data of the user to be created:</p> <p></p> <ul> <li>If it is not an administration user, do not check the \"ADMIN\" box</li> <li>The password must be created initially and sent to the user</li> </ul> <p>As soon as the user is created it can be edited afterwards via the user overview (check/uncheck \"ADMIN\", edit, delete):</p> <p> </p>","tags":["DOC\u00b2","Settings","Users","Password"]},{"location":"doc2/settings-users/#how-to-reset-the-password","title":"How to reset the password","text":"<p>Go to the DOC\u00b2 log-in page (https://app.polydocs.io/) enter your mail address and click on Forgot Password?</p> <p></p> <p>You will immediately receive an email with a link to reset the password. The link will navigate you to following page where you can enter a new password:</p> <p></p> <p>As soon as the new password has been entered and confirmed, it can be used for login from now on.</p> <p>Sign up for a 30 days free trail</p>","tags":["DOC\u00b2","Settings","Users","Password"]},{"location":"doc2/workflow/","title":"DOC\u00b2 with Workflow\u00b2","text":"","tags":["DOC\u00b2","Workflow\u00b2"]},{"location":"doc2/workflow/#doc2-with-workflow2","title":"DOC\u00b2 with Workflow\u00b2","text":"<p>See how easy you can use DOC\u00b2 with Workflow\u00b2</p> <p>More Videos you find here:  YouTube</p> <p>Sign up for a 30 days free trail</p>","tags":["DOC\u00b2","Workflow\u00b2"]},{"location":"doc2/zugpferd/","title":"Import ZUGFeRD to DOC\u00b2","text":"","tags":["DOC\u00b2","Export","Download","ZUGFeRD"]},{"location":"doc2/zugpferd/#export-zugferd-to-idm","title":"Export ZUGFeRD to IDM","text":"<p>Find more videos here:  YouTube</p>","tags":["DOC\u00b2","Export","Download","ZUGFeRD"]},{"location":"doc2/zugpferd/#set-up-the-necessary-export-settings-as-follows","title":"Set up the necessary export settings as follows","text":"<p>Navigate to SETTINGS above the dashboard:</p> <p></p> <p>Navigate to the Export menu item in the settings:</p> <p></p> <p>You need to create a new configuration via the NEW button:</p> <p></p> <p>Select ZUGFeRD in the following screen:</p> <p></p>","tags":["DOC\u00b2","Export","Download","ZUGFeRD"]},{"location":"doc2/zugpferd/#zugferd","title":"ZUGFeRD","text":"<p>You will be directed to the following screen. Please enter the information according to the example below:</p> <p> and click on <code>SAVE</code>.</p> <p>The export configuration is displayed in the overview. It can be edited or deleted as well as activated/deactivated via the action buttons:</p> <p></p> <p>In addition you need to enter your Company Information. You will find the menu in the settings overview.</p> <p>When everything is set up correctly, a new download button will appear in the dashboard after a document is finished:</p> <p></p> <p>Sign up for a 30 days free trail</p>","tags":["DOC\u00b2","Export","Download","ZUGFeRD"]},{"location":"doc2/SSO/","title":"Configuring SSO","text":"","tags":["SSO","Configuration","DOC\u00b2","Infor OS","Azure AD"]},{"location":"doc2/SSO/#what-is-single-sign-on","title":"What is Single Sign On?","text":"<p>With SSO, your teams only need one set of credentials to conveniently access all their apps. Nobody has to remember different variants or repeatedly enter passwords.</p>","tags":["SSO","Configuration","DOC\u00b2","Infor OS","Azure AD"]},{"location":"doc2/SSO/#faster-login","title":"Faster login","text":"<p>Make signing up easy by banning all or part of the sign-in prompts.</p>","tags":["SSO","Configuration","DOC\u00b2","Infor OS","Azure AD"]},{"location":"doc2/SSO/#higher-productivity","title":"Higher productivity","text":"<p>Make it easier for employees to find and access apps with the central 1-click launch function.</p>","tags":["SSO","Configuration","DOC\u00b2","Infor OS","Azure AD"]},{"location":"doc2/SSO/#advanced-security","title":"Advanced security","text":"<p>Avoid re-entering usernames and passwords in apps to minimize security risk.</p>","tags":["SSO","Configuration","DOC\u00b2","Infor OS","Azure AD"]},{"location":"doc2/SSO/#greater-it-efficiency","title":"Greater IT efficiency","text":"<p>Manage user accounts in one place. Group memberships or roles can be used to automatically grant or revoke user access to apps.</p> <p>Here you will find helpful documentation on the subject of SSO:</p> <ul> <li> <p>Configuring SSO in Infor Cloud</p> </li> <li> <p>SSO for Azure AD with DOC\u00b2</p> </li> <li> <p>SSO Service Provider Settings in DOC\u00b2</p> </li> </ul>","tags":["SSO","Configuration","DOC\u00b2","Infor OS","Azure AD"]},{"location":"doc2/SSO/SSO-for-Azure-AD/","title":"Configure Azure Active Directory","text":"","tags":["DOC\u00b2","Azure Active Directory","SSO"]},{"location":"doc2/SSO/SSO-for-Azure-AD/#create-saml-sso-in-azure-ad","title":"Create SAML SSO in Azure AD","text":"<p>Perform the following steps to add SAML SSO in Azure AD:</p> <p>1. In Azure, go to your <code>Azure Active Directory</code> console</p> <p></p> <p>2. In the left panel, click <code>Enterprise applications</code></p> <p></p> <p>3. Click <code>+ New application</code></p> <p></p> <p>4. Click <code>+ Create your own application</code></p> <p></p> <p>5. Enter a name for your application. Keep the remaining default selections.</p> <p></p> <p>6. Click on <code>Create</code></p>","tags":["DOC\u00b2","Azure Active Directory","SSO"]},{"location":"doc2/SSO/SSO-for-Azure-AD/#assign-users-to-the-sso-configuration","title":"Assign Users to the SSO Configuration","text":"<p>Next, assign users or groups to the SSO configuration.</p> <p> Important: You should already have created users and groups in Azure AD. If you don\u2019t have any users or groups, create them now before proceeding. </p> <p>1. Under <code>Getting Started</code>, click <code>Assign Users and Groups</code>.</p> <p>2. Click <code>+ Add user</code></p> <p></p> <p>3. Select the users and groups you want to assign to this SSO configuration. These users will be able to authenticate DOC\u00b2 using SSO.</p> <p></p> <p>4. Click <code>Select</code></p> <p>5. When you\u2019re satisfied with your selection, click <code>Assign</code></p> <p></p> <p></p> <p>6. Go to the <code>Groups</code> view list and find the assigned groups.</p>","tags":["DOC\u00b2","Azure Active Directory","SSO"]},{"location":"doc2/SSO/SSO-for-Azure-AD/#set-up-sso-in-azure","title":"Set up SSO in Azure","text":"<p>Next, you need to finish setting up single-sign-on in Azure.</p> <p>1. In the left panel, click <code>Single sign-on</code></p> <p></p> <p>2. Click <code>SAML</code></p> <p></p> <p>3. Click <code>Upload metadata file</code></p> <p></p> <p>4. Upload the DOC\u00b2 metadata.xml, which you can find in the Settings menu Integration under SSO Service Provider Settings of your DOC\u00b2 account.</p> <p></p> <p>5. Edit the <code>Basic SAML Configuration</code></p> <p></p> <p>6. Check if the <code>Entity ID</code>, <code>ACS URL</code>, <code>Sign on URL</code> and <code>Logout URL</code> are populated right.</p> <p></p> <p>7. Download the newly generated Federation Metadata XML.</p> <p></p> <p>8. Upload the FederationMetadata.xml into the Identity Service Provider Settings of your DOC\u00b2 account which you can find in the Settings menu Integration.</p> <p></p>","tags":["DOC\u00b2","Azure Active Directory","SSO"]},{"location":"doc2/admin-guides/postman-projects/","title":"Postman for DOC\u00b2","text":"<p>This guide will show you how to make HTTP requests to your DOC\u00b2 organization via Postman. It is easy to use and very useful for organization administrators.</p>","tags":["DOC\u00b2","Postman","Guide","Setup","HTTP request","Admin"]},{"location":"doc2/admin-guides/postman-projects/#setup","title":"Setup","text":"<p>First, download Postman to your system and sign in/register.</p> <p>Now follow this step-by-step guide to learn how HTTP requests work in Postman.</p>","tags":["DOC\u00b2","Postman","Guide","Setup","HTTP request","Admin"]},{"location":"doc2/admin-guides/postman-projects/#authorization","title":"Authorization","text":"","tags":["DOC\u00b2","Postman","Guide","Setup","HTTP request","Admin"]},{"location":"doc2/admin-guides/postman-projects/#in-postman","title":"In Postman","text":"<p>Before you can create your HTTP requests, you need to enter your API key from DOC\u00b2 to authorize them.</p> <p>1. Click on the <code>Authorization</code> tab und choose <code>API Key</code> as authorization type.</p> <p></p> <p>2.  Fill in the values. Enter \"x-api-key\" in the <code>Key</code> field and your API Key as value (found in DOC\u00b2 Settings menu Integration) Select the Add to <code>Header</code>.</p> <p>It should look like this:</p> <p></p>","tags":["DOC\u00b2","Postman","Guide","Setup","HTTP request","Admin"]},{"location":"doc2/admin-guides/postman-projects/#on-apipolydocsio","title":"On api.polydocs.io","text":"<p>1. Click on Authorize in the upper right corner</p> <p></p> <p>2. Enter your API Key and confirm by clicking <code>Authorize</code></p> <p></p>","tags":["DOC\u00b2","Postman","Guide","Setup","HTTP request","Admin"]},{"location":"doc2/admin-guides/postman-projects/#create-a-new-workspace-in-postman","title":"Create a new Workspace in Postman","text":"<p>1.  Click on Workspaces and create a new workspace (you can name it whatever you want).</p> <p></p> <p>2.  You have to select the visibility which determines who can access this workspace.</p> <p></p> <p>3.  After making your selection and clicking <code>Create Workspace</code> select Collections on the left side of the application and create a new collection for your HTTP requests by clicking <code>+</code>.</p> <p></p> <p>In this collection, you can add multiple HTTP requests. To do this, click on the 3 points of the collection and select <code>Add request</code>.</p> <p></p>","tags":["DOC\u00b2","Postman","Guide","Setup","HTTP request","Admin"]},{"location":"doc2/admin-guides/postman-projects/#get-method-example","title":"\"GET\" Method example","text":"<p>The GET method is very useful to get information about users, sub-organizations, processed documents and much more.</p> <p>1.  Choose the GET method in your HTTP request. 2.  Authorize yourself as described above. 3.  Open api.polydocs.io and add the path of the function behind the polydocs URL. For example:</p> <p></p> <pre><code>    https://api.polydocs.io/users/get_users\n</code></pre> <p>4.  Now paste this link in the text box next to the GET method in Postman.</p> <p>Click <code>Send</code> and you should receive all the information about every user in your organization.</p>","tags":["DOC\u00b2","Postman","Guide","Setup","HTTP request","Admin"]},{"location":"doc2/admin-guides/postman-projects/#post-method-examples","title":"\"POST\" Method examples","text":"<p>The POST method is usually used to create users or organizations, for example. This method inserts information into the database.</p>","tags":["DOC\u00b2","Postman","Guide","Setup","HTTP request","Admin"]},{"location":"doc2/admin-guides/postman-projects/#create-user","title":"Create User","text":"<p>1.  Select the POST Method. 2.  Authorize yourself as described above. 3.  Open api.polydocs.io and add the path of the function behind the polydocs URL. In this case:</p> <p></p> <pre><code>https://api.polydocs.io/users/create\n</code></pre> <p>4.  Now paste this link into the text box next to the POST method in Postman. 5.  Select the <code>Body</code> tab in your HTTP request and enter the keys and the values \u200b\u200bfor each credential that has a red asterisk next to its name.</p> <p>When you're done, it should look like this:</p> <p></p> <p>If you want to create an admin account, set the <code>is_admin</code> value to true.</p> <p>Finally, click <code>Send</code> and you can see all the credentials you set in the response below. This means the user has been created.</p> <p></p>","tags":["DOC\u00b2","Postman","Guide","Setup","HTTP request","Admin"]},{"location":"doc2/admin-guides/postman-projects/#upload-document","title":"Upload document","text":"<p>You can also use the POST method to upload a document to DOC\u00b2.</p> <p>1.  Select the POST Method. 2.  Authorize yourself as described above. 3.  Open api.polydocs.io and add the path of the function behind the polydocs URL. In this case:</p> <p></p> <pre><code>https://api.polydocs.io/document/process\n</code></pre> <p>4.  Now paste this link into the text box next to the POST method in Postman. 5.  Select the <code>Body</code> tab in your HTTP request and choose <code>form-data</code> 6.  Enter file into the <code>KEY</code> field where you will find the hidden File dropdown. Select <code>File</code> and move to the <code>VALUE</code> field where you are able to select your file by clicking <code>Select Files</code>. 7. When you click <code>Send</code>, you should see \"success\": true in the response.</p> <p>It should look like this:</p> <p></p>","tags":["DOC\u00b2","Postman","Guide","Setup","HTTP request","Admin"]},{"location":"doc2/admin-guides/postman-projects/#delete-method-example","title":"\"DELETE\" Method example","text":"<p>The DELETE method is used to delete, for example, users, organizations and so on.</p> <p>1.  Select the DELETE Method. 2.  Authorize yourself as described above. 3.  Open api.polydocs.io and add the path of the function behind the polydocs URL. For example:</p> <p></p> <pre><code>https://api.polydocs.io/users/delete/{user_id}\n</code></pre> <p>4.  Now paste this link in the text box next to the DELETE method in Postman. 5.  Replace the {user_id} at the end of the URL with the actual user ID you want to delete. (You can get the user_id using the GET method). 6.  If you included the user_id in the URL, you don't need to add a body key and value for it. 7.  When you click <code>Send</code>, you should see \"success\": true in the response.</p> <p>It should look like this:</p> <p></p>","tags":["DOC\u00b2","Postman","Guide","Setup","HTTP request","Admin"]},{"location":"doc2/admin-guides/postman-projects/#put-method-example","title":"\"PUT\" Method example","text":"<p>The PUT method is mainly used to update user or organization data. It is very easy to understand and use.</p> <p>1.  Select the PUT Method. 2.  Authorize yourself as described above. 3.  Open api.polydocs.io and add the path of the function behind the polydocs URL. For example:</p> <p></p> <pre><code>https://api.polydocs.io/users/update/{user_id}\n</code></pre> <p>4.  Now paste this link in the text box next to the PUT method in Postman. 5.  Replace the {user_id} at the end of the URL with the actual user ID you want to delete. (You can get the user_id using the GET method).</p> <p>Suppose you want to change the email address of a user in your organization.</p> <p>1.  In the body, enter \"email\" as the key and the new email address as the value. 2.  Then just press <code>Send</code> and you should see \"success\" in the response.</p> <p>If you'd like to have this all more visualized and interactive, you can download the Postman project here to try it all out. Just click the Import button and select this file to get started right away.</p> <p></p>","tags":["DOC\u00b2","Postman","Guide","Setup","HTTP request","Admin"]},{"location":"doc2/dashboard/","title":"Dashboard","text":"<p>After logging in with your credentials you are redirected to the DASHBOARD homepage of DOC\u00b2.</p> <p>This is the main page and overview where you can capture, work and manage your imported documents.</p> <p></p> <p>The first upper bar is a very simple and easy reporting tool where you can filter by week, month, year or more.</p>","tags":["DOC\u00b2","Dashboard","Homepage","Overview"]},{"location":"doc2/dashboard/#viewing-document-by-status","title":"Viewing Document by Status","text":"<p>It shows you the total number of documents imported, including the number of documents that were automatically or manually processed. Furthermore, you can view the status of documents that are, for example: In progress, Pending, Pending Approval, Completed or Error. The main advantage of this reporting bar is that by just clicking one of these available boxes you can find the specific and filtered documents you are searching for.</p> <p>As you can imagine the second part of the dashboard is the list/overview of all the uploaded documents. You can either see all of them or even just the ones that are assigned to you. And of course, you can also find it with the document name.</p> <p></p> <p>To start importing an invoice manually you simply click on the UPLOAD button and choose the document you want to upload.</p> <p></p> <p>You can also drop files anywhere on dashboard to upload them.</p> <p></p> <p>Meaningful data is going to be extracted within seconds and the status changes from running to Ready For Validation.</p> <p></p> <p>What you see now is the validation screen where you can check, edit, and validate all the imported documents.</p> <p>From left to right you will see first the name of the document, then how many pages it consists of. The following information is the date when the document was imported and its status.</p> <p>In the rightmost column you will see the Actions button. If you click on it, all available options will open: Assign, Restart, Validate and Delete.</p> <p></p> <p>Details on UI to check, edit and validate extracted fields of uploaded documents you will find here.</p>","tags":["DOC\u00b2","Dashboard","Homepage","Overview"]},{"location":"doc2/doc2-with-infor/","title":"DOC\u00b2 with Infor","text":"<p>In this section you will find the Infor infrastructure, starting from use cases over integrations to all export options and the corresponding links</p> <ul> <li>Infor Infrastructure</li> <li>Use Cases</li> <li>Diagram</li> <li>IDM Business Context Model</li> <li>Export</li> <li>SSO</li> </ul>","tags":["DOC\u00b2","Infor","Overview"]},{"location":"doc2/doc2-with-infor/IDM-business-context-model/","title":"IDM Business Context Model","text":"","tags":["DOC\u00b2","Infor","IDM","LN"]},{"location":"doc2/doc2-with-infor/IDM-business-context-model/#what-is-infor-document-management-idm","title":"What is Infor Document Management (IDM)?","text":"<p>Infor Document Management (IDM) is an enterprise document management application deployed and integrated within the Infor Operating Service portal.</p> <p>IDM is one of several Infor applications that uses the user interface of Infor Ming.leTM.</p> <p>IDM is a central repository where you can manage your common business rules for creating, storing, and managing documents \u2013 such as invoices, vendor document, and employee records. You can view, edit, create, and store the physical files.</p> <p>You can extend IDM with DOC\u00b2. It provides optical character recognition (OCR) and intelligent character recognition (ICR) capabilities. These tools enable more complete and improved document capture processes. You can scan and connect your documents through a standard web browser and connect the documents to your business process. With IDM you can find the documents you require and you are always working with the latest, most complete version of a document. With access to all your critical business information in-context, DOC\u00b2  further automates your document workflows through automatic categorization and retrieval of key document metadata.</p>","tags":["DOC\u00b2","Infor","IDM","LN"]},{"location":"doc2/doc2-with-infor/IDM-business-context-model/#accessing-idm","title":"Accessing IDM","text":"<p>Access the application with the IDM URL.</p> <p>By accessing the system through this URL, you are ensured that the required libraries are loaded during the page load. Otherwise, several features such as Shortcuts and Context Sharing, do not work properly. The IDM URL is provided to your IDM administrator.</p> <p>After logging in you can access the client application through the app switcher in the Infor Ming.le portal.</p>","tags":["DOC\u00b2","Infor","IDM","LN"]},{"location":"doc2/doc2-with-infor/IDM-business-context-model/#control-center","title":"Control Center","text":"<p>To access the Control Center, click the options menu next to the + Add Document button on the Document Management landing page and select Control Center.</p> <p></p> <p>If you have the <code>IDM-AdvancedUser</code> role or higher, you can perform these actions from the control center:</p> <ol> <li> <p>Configure the Exporter/Importer. (See below)</p> </li> <li> <p>Synchronize the data model. Through this action the systems can self-heal by synchronizing the data model.</p> </li> </ol> <p>For all other actions in the control center, see the Infor Document Management Administration Guide \u2013 Cloud Edition. These actions are only available for users with the <code>IDM-Administrator</code> role.</p>","tags":["DOC\u00b2","Infor","IDM","LN"]},{"location":"doc2/doc2-with-infor/IDM-business-context-model/#configuration-exporter-importer","title":"Configuration Exporter / Importer","text":"<p>Configuration Exporter and Importer allows the user to export / import the Configuration parts of Control Center (Document Types Filter, Result List, Business Context Model, and ION Configuration) using XML documents.</p> <p>The xml files for all common document types can be downloaded here.</p> <ul> <li>Order Confirmation: IDMconfiguration_OrderConfirmation</li> <li>Delivery Note: IDMconfiguration_DeliveryNote</li> <li>Invoice: IDMconfiguration_Invoice</li> </ul> <p>If you are using Infor LN as ERP also upload these xml files:</p> <ul> <li>Order Confirmation: IDMconfiguration_BusinessContext_OrderConfirmation</li> <li>Delivery Note: IDMconfiguration_BusinessContext_DeliveryNote</li> <li>Delivery Note2:IDMconfiguration_BusinessContext_DeliveryNote2</li> <li>Invoice: IDMconfiguration_BusinessContext_Invoice</li> </ul> <p>You can import the files as follows:</p>","tags":["DOC\u00b2","Infor","IDM","LN"]},{"location":"doc2/doc2-with-infor/IDM-business-context-model/#using-the-import-tab","title":"Using the Import tab","text":"<ol> <li>Navigate to Control Center &gt; Administration &gt; Import / Export and click the Import tab.</li> <li>Click Select XML file and browse for the XML file. A file validation applies. Only XML files that were created by the exporter are accepted. If validation fails, Import XML file remains disabled.</li> <li>When the configuration file is uploaded, an import preview is displayed and includes any or all of these parts:      Document Types and Value Sets The list of document types and value sets to be imported. Document Type Filter A list of document types that is displayed for the user when importing this configuration. Result List Result list configuration to be imported. Business Context Models Business context model configuration to be imported. ION ION configuration to be imported. </li> <li>You can collapse or expand each part to see possible warnings or information:</li> <li> Warning - yellow sign: The warning sign does not disable Import XML file. We recommend that you go through all warning messages before starting the importer. This could be due to these situations:<ul> <li>Some configuration parts already exist in the repository that might be overwritten, for example, Result List.</li> <li>Some configuration parts already exist in the repository that might be lost, for example, Document Type Filter.</li> </ul> </li> <li> Information - blue sign: The information sign does not disable Import XML file. It is usually displayed in these situations:<ul> <li>If some parts cannot be imported, for example, Items.</li> <li>If some existing parts are merged with new ones from the XML file, for example, Result List.</li> </ul> </li> <li>A green OK sign with no message required.</li> <li>Click Import XML file to run the importer. When the import is finished, a report window is displayed with an information table that summarizes the status of the import. If any error occurs during the import, the error message informs the user what went wrong.</li> </ol> <p>When the import is successful, Import XML file is disabled.</p> <p>This is how the general Information and attributes look like in IDM under the corresponding document type:</p> <p>Order Confirmation</p> <p> </p> <p>Delivery Note</p> <p> </p> <p>Invoice</p> <p> </p> <p>When you open the Business Context Model menu item  you will find the information here as follows:</p> <p>Order Confirmation</p> <p> <pre><code>/ORDER_CONFIRMATION[@MDS_EntityType = \"{entityType}\" AND @MDS_id1 = \"{id1}\"]\n</code></pre></p> <p>Delivery Note</p> <p> <pre><code>/DELIVERY_NOTE[@MDS_EntityType = \"{entityType}\" AND @MDS_id1 = \"{id1}\"]\n</code></pre></p> <p> <pre><code>/DELIVERY_NOTE[@Delivery_Note_Id=\"{id3}\"]\n</code></pre></p> <p>Invoice</p> <p> <pre><code>/LN_SupplierInvoice[@MDS_EntityType = \"{entityType}\" AND @MDS_id1 = \"{id1}\"]\n</code></pre></p> <p>All these steps connect all documents from IDM to the corresponding workbench in LN, where they are also displayed. And this is how it looks in LN:</p> <p>Order Confirmation</p> <p></p> <p>Delivery Note</p> <p></p> <p>Invoice</p> <p></p>","tags":["DOC\u00b2","Infor","IDM","LN"]},{"location":"doc2/doc2-with-infor/configuring-sso-in-cloud/","title":"Configuring SSO in Infor Cloud","text":"","tags":["Infor","SSO","Cloud","new service provider"]},{"location":"doc2/doc2-with-infor/configuring-sso-in-cloud/#step-by-step-guide","title":"Step by step guide","text":"","tags":["Infor","SSO","Cloud","new service provider"]},{"location":"doc2/doc2-with-infor/configuring-sso-in-cloud/#prerequisites","title":"Prerequisites","text":"Required InformationDescriptionLogin Details to CloudCredentials are mandatory for accessing the Infor Cloud environment.The user should have the roles \"Infor-SystemAdministrator\" and \"UserAdmin\".Config Admin Details (DOC\u00b2)You should have received an email from Polydocs GmbH with the login details for the DOC\u00b2 SSO Settings page.You will need login and password.CertificateYou can download the certificate in DOC\u00b2 under SSO Service Provider Settings <p>1. Get access to the Cloud and check your access</p> <p>URL starts with https://mingle-portal.eu1.inforcloudsuite.com/&lt;TENANT_NAME&gt; followed by your personal extension</p> <p></p> <p>a) Choose the option Cloud Identities and use your login details</p> <p></p> <p>b) After login you will have access to the Infor Cloud. In this case we enter this page, but on the burger menu you will find access to all application.</p> <p></p> <p></p> <p>2. Open User Management for adding new Service Provider</p> <p>On the right hand side of the bar menu, you will find the user menu and there you can access the user management</p> <p></p> <p>a) Then you need to select in the left hand side menu the option Security Administration and Service Provider.</p> <p></p> <p>b. You will see this window with the Service Providers.</p> <p></p> <p>c. Now click on the \u201c+\u201d sign and add our DOC\u00b2 as Service Provider. (View step 4)</p> <p></p> <p>3. Access the SSO SERVICE PROVIDER SETTINGS in DOC\u00b2</p> <p>a) Log in on URL https://app.polydocs.io/ with the login details you received from us.</p> <p>b) Go to SETTINGS (on top bar) and choose SSO Settings down at the bottom of the list.</p> <p>Here you will find all the information you need for the following steps</p> <p>c) Download the certificate</p> <p></p> <p>4. Filling the Service Provider with the help of SSO Service Provider Settings in DOC\u00b2</p> <p></p> FieldValueApplication TypeDEFAULT_SAMLDisplay NameDOC\u00b2Entity IDSee Entity ID under SSO SERVICE SETTINGSSSO EndpointCopy the SSO URL from SSO SERVICE SETTINGS and paste it in the SSO Endpoint field.SLO EndpointCopy SLO URL from SSO SERVICE SETTINGS and paste it in the SLO Endpoint field.Signing CertificateUpload the appropriate .cer file you have downloaded in step 3c) from SSO SERVICE SETTINGSName ID Format and Mappingemailaddress <p></p> <p>a) When you have filled out everything remember to save it with the disk icon above Application Type</p> <p>b) Then, enter the service provider DOC\u00b2 again.</p> <p>c) Click on view the Identity Provider Information underneath.</p> <p></p> <p></p> <p>d) Export the SAML METADATA.</p> <p>File looks like this: ServiceProviderSAMLMetadata_10_20_2021.xml</p> <p>5. Import the SAML METADATA in the SSO Settings.</p> <p>Go to IDENTITY SERVICE PROVIDER SETTINGS, enter your Tenant ID (e.g. FELLOWCONSULTING_DEV and underneath that line you see Upload file and the IMPORT Button, where you need to upload the previously exported SAML METADATA file.</p> <p>a) Click on IMPORT an then choose the METADATA file that you have already downloaded from the SSO SERVICE PROVIDER SETTINGS</p> <p>b) Click on CONFIGURE</p> <p></p> <p>This part is successfully completed when you see the following popup</p> <p></p> <p>6. Add new Application in infor Ming.le</p> <p>a) got to Admin settings and</p> <p></p> <p>b) click on ADD APPLICATION top right</p> <p></p> <p>c) fill out all fields like on following picture but with your own SSO Url, don't forget to choose icon and click on SAVE</p> <p></p> <p>And now the last step:</p> <ul> <li>Log out of DOC\u00b2.</li> <li>Go back to the burger menu in infor and select the icon you just created.</li> <li>And you are already on the dashboard of DOC\u00b2.</li> </ul> <p></p>","tags":["Infor","SSO","Cloud","new service provider"]},{"location":"doc2/doc2-with-infor/infor/","title":"DOC\u00b2 - Infor Use Cases","text":"","tags":["DOC\u00b2","PO Matching","Infor LN","Infor M3","Use Cases"]},{"location":"doc2/doc2-with-infor/infor/#different-use-cases","title":"Different Use Cases","text":"","tags":["DOC\u00b2","PO Matching","Infor LN","Infor M3","Use Cases"]},{"location":"doc2/doc2-with-infor/infor/#only-invoice","title":"Only Invoice","text":"<p>This is the simplest use case. 95% of all Ephesoft (IDM Capture) customers use this use case.</p> <pre><code>graph LR\n  A[Start] --&gt; B{Invoice?};\n  Infor[Infor] --&gt; |Master Data Validation| C;\n  B --&gt;|Yes| C[Extract Header Fields];\n  C --&gt;|Optional| T[Table Fields];\n  T --&gt;C;\n  C --&gt; D[Send to Infor];\n  D --&gt; E;\n  B ----&gt;|No| E[End];</code></pre> <p>With DOC\u00b2 you can do more</p> <pre><code>graph LR\n  A[Start] --&gt; B{Invoice?};\n  B --&gt;|Yes| C[Extract];\n  C --&gt;|Optional| T[Table Extract];\n  T --&gt;C;\n  Infor[Infor] --&gt; |Master Data Validation| C;\n  C --&gt; D[Convert to ZUGFeRD];\n  D --&gt; F[Send to Infor];\n  F --&gt; Z;\n  B ----&gt;|No| Z[End];</code></pre>","tags":["DOC\u00b2","PO Matching","Infor LN","Infor M3","Use Cases"]},{"location":"doc2/doc2-with-infor/infor/#invoice-and-delivery-note","title":"Invoice and Delivery Note","text":"<pre><code>graph LR\n  A[Start] --&gt; B{Classification?};\n  B --&gt;|Invoice| Extract[Extract];\n  B --&gt;|Delivery Note| Extract;\n  Extract --&gt;|Optional| T[Table Extract];\n  T --&gt;Extract;\n  Infor --&gt; |Master Data Validation| Extract;\n  Extract --&gt; ION[Infor ION &amp; IDM];\n  B --&gt;|Else| G[Only OCR];\n  G --&gt;IDM[Send PDF to Infor IDM];\n  IDM --&gt; Infor;\n  ION --&gt; Infor;\n  Infor --&gt; End[End];\n</code></pre>","tags":["DOC\u00b2","PO Matching","Infor LN","Infor M3","Use Cases"]},{"location":"doc2/doc2-with-infor/infor/#invoice-and-orders-incl-po-matching-and-zugferd-and-order-x","title":"Invoice and Orders incl. PO Matching and ZUGFeRD and Order-X","text":"<pre><code>graph LR\n  A[Start] --&gt; B{Classification?};\n  B --&gt;|Invoice| Extract[Extract];\n  B --&gt;|Delivery Note| Extract;\n  B ----&gt;|Order confirmation| Extract;\n  Extract --&gt;T[Table Fields];\n  T --&gt;Extract;\n  Extract ---&gt; D[Convert to ZUGFeRD];\n  Extract --&gt; PO;\n  D --&gt; F[Send to Infor PDF + ION];\n  F --&gt; Infor;\n  PO --&gt; |Confirm PO|Infor;\n  B --&gt;|Else| G[Only OCR];\n  G --&gt;H[Send PDF to Infor IDM];\n  H --&gt; Infor[Infor];\n  Infor[Infor] --&gt; |Purchase Order|PO[PO Matching];\n  Infor[Infor] --&gt; |Master Data Validation| Extract;\n  PO --&gt; Order-X[Order-X];\n  Extract --&gt; Order-X;\n  Infor --&gt; Order-X;\n  Order-X --&gt; Supplier[Supplier];\n  Supplier --&gt; End;\n  Infor --&gt; End;\n</code></pre>","tags":["DOC\u00b2","PO Matching","Infor LN","Infor M3","Use Cases"]},{"location":"doc2/doc2-with-infor/infor/#add-infor-ion-api","title":"Add Infor ION API","text":"","tags":["DOC\u00b2","PO Matching","Infor LN","Infor M3","Use Cases"]},{"location":"doc2/doc2-with-infor/infor/#add-connection-points-in-infor-os","title":"Add Connection Points in Infor OS","text":"","tags":["DOC\u00b2","PO Matching","Infor LN","Infor M3","Use Cases"]},{"location":"doc2/doc2-with-infor/infor/#add-connection-points-in-infor-os_1","title":"Add Connection Points in Infor OS","text":"","tags":["DOC\u00b2","PO Matching","Infor LN","Infor M3","Use Cases"]},{"location":"doc2/doc2-with-infor/infor/#purchase-order","title":"Purchase Order","text":"","tags":["DOC\u00b2","PO Matching","Infor LN","Infor M3","Use Cases"]},{"location":"doc2/doc2-with-infor/infor/#delivery-note","title":"Delivery Note","text":"","tags":["DOC\u00b2","PO Matching","Infor LN","Infor M3","Use Cases"]},{"location":"doc2/doc2-with-infor/infor/#invoice","title":"Invoice","text":"","tags":["DOC\u00b2","PO Matching","Infor LN","Infor M3","Use Cases"]},{"location":"doc2/doc2-with-infor/inforflow/","title":"DOC\u00b2 - Infor API Flow","text":"","tags":["DOC\u00b2","PO Matching","Infor LN","Infor M3","Use Cases"]},{"location":"doc2/doc2-with-infor/inforflow/#api-with-infor-os-infor-cloudsuite","title":"API with Infor OS &amp; Infor CloudSuite","text":"<p>The DOC\u00b2 integration to Infor LN / M3 is mostly done via ION API, ION Desk and the Infor Standard BODs. There are mainly two paths that need to be considered when integrating: how we export the data to Infor and how we get data for the master data validation in DOC\u00b2.</p> <p>The first export path starts with the ION API which allows DOC\u00b2 to not only send the pdf with the attributes to IDM but to also send the BOD Sync.CaptureDocument to ION Desk. In ION Desk we transform this Sync.CaptureDocument via ION mappings to the desired target BODs, always depending on which document type we are processing. These transformed Infor BODs are then automatically imported to LN or M3.</p> <p>The second path is when we want to perform master data validation in DOC\u00b2 to identify the supplier or to compare / match the purchase order lines. That's why we automatically activate a trigger in LN / M3 so that when a new entry or changes are made in the master data, we receive the Sync.RemitToPartyMaster, Sync.SupplierPartyMaster and the Sync.PurchaseOrder BODs to DOC\u00b2. The process is configured again in ION Desk where we define the dataflow to a specific connection point to DOC\u00b2.</p> <p>Infor Export</p> <p>IDM Business Context Model</p> <p>Infor SSO with DOC\u00b2</p> <p>Infor Infrastructure &amp; Security</p>","tags":["DOC\u00b2","PO Matching","Infor LN","Infor M3","Use Cases"]},{"location":"doc2/doc2-with-infor/infrastructure/","title":"Application Infrastructure","text":"","tags":["DOC\u00b2","Infrastructure","Infor"]},{"location":"doc2/doc2-with-infor/infrastructure/#open-port","title":"Open port","text":"<ul> <li>443</li> </ul>","tags":["DOC\u00b2","Infrastructure","Infor"]},{"location":"doc2/doc2-with-infor/infrastructure/#communication-with-the-database","title":"Communication with the Database","text":"<p>Kubernetes and our Databases are inside the same VPC. We only access the database via the local IP, this way the transferred data never leaves the local network. Additionally, we only use SSL secured connections to communicate with the database.</p>","tags":["DOC\u00b2","Infrastructure","Infor"]},{"location":"doc2/doc2-with-infor/infrastructure/#spaces","title":"Spaces","text":"<p>The uploaded documents are stored in a Space. The traffic is secured via SSL and multiple keys are required to access the stored files.</p>","tags":["DOC\u00b2","Infrastructure","Infor"]},{"location":"doc2/doc2-with-infor/infrastructure/#traffic-security","title":"Traffic Security","text":"<p>We only allow https secured connections to communicate with our servers. This ensures that the transferred data is encrypted and secure.</p>","tags":["DOC\u00b2","Infrastructure","Infor"]},{"location":"doc2/doc2-with-infor/infrastructure/#infor-cloud","title":"Infor Cloud","text":"","tags":["DOC\u00b2","Infrastructure","Infor"]},{"location":"doc2/doc2-with-infor/infrastructure/#infor-on-prem","title":"Infor On-Prem","text":"<p>With our On-Prem solution, you don't have to open any ports. This ensures that the security of your network is not compromised. </p>","tags":["DOC\u00b2","Infrastructure","Infor"]},{"location":"doc2/document-validation/","title":"Document Validation","text":"","tags":["DOC\u00b2","Document","Validation"]},{"location":"doc2/document-validation/#how-to-validate-a-document","title":"How to Validate a document","text":"<p>After you have uploaded a document as described here and perform the following steps to validate it:</p> <p>1. Go to <code>HOME</code> where you will find the DASHBOARD with uploaded documents</p> <p></p> <p>2. Click on the bar to open the document. In this case it doesn't matter if you click on the document name or the status.</p> <p></p> <p>On the left-hand side, you can see the documents preview, where you can also jump from one to the other page when you document has more than just one page. In the middle part of the screen, you have the big overview of the document where you can also see the extracted values marked in purple. And, finally, on the right-hand side you have all the segments of the extracted values.</p> <p>Let\u2019s focus on this last part.</p> <p>Firstly, on the top right side you can define the document origin if needed:</p> <p></p> <p>For different origins the document can have different amount and date formats. To be sure dates and figures/amounts will be extracted correctly make sure the document origin is set properly.</p> <p>Now, we get the basic information like invoice number, date etc. If you click on the field of invoice number for example, you get directly marked where on the invoice it was extracted.</p> <p></p> <p>You can now check if the number was extracted correctly. All values that were correctly extracted you confirm with the checkmark. You can do this with every single field. Another important point is that on the right side of each field you get a percentage of the confidence level of the DOC\u00b2.</p> <p>All values that have been correctly extracted and confirmed with the check mark will have a green bar at the beginning of the field.</p> <p></p> <p>A great example is on the next segment of field IBAN, where the IBAN is not even extracted, as confidence level is equal to 0. To train and extract the value, just enter the field and mark the IBAN on the invoice. You get this message if you are sure of your selection, so click yes.</p> <p></p> <p>The selected value will be extracted to the IBAN field and displayed on the invoice. Please confirm the value with the checkmark to finalize it.</p> <p></p> <p>The procedure for each extracted or non-extracted value is always the same. Here are some examples of the values extracted from an invoice:</p> <p></p> <p></p> <p>For the vendor details we have configured the Fuzzy search, where the supplier identification is matched by the master data imported from your ERP system. If for example the supplier\u2019s name was missing you could also look it up in this table. Everything is set up very easily and user-friendly so this job of making the validation is faster.</p> <p>After checking all the fields available for extraction, you can confirm the changes and export directly. If you have to interrupt editing, e.g. because of a last-minute appointment or a phone call, you can also save the changes you have confirmed up to that point and continue later.</p> <p></p> <p>When you have saved the changes, the document remains in the Ready for Validation status.</p> <p></p> <p>Find more details in the following sections:</p>","tags":["DOC\u00b2","Document","Validation"]},{"location":"doc2/document-validation/ai-indicator/","title":"AI Indicators","text":"<p>In document view you will find options to display the quality of the extraction using graphical indicators. The so-called AI indicator.</p> <p>To do this, open a document as known via the dashboard:</p> <p></p> <p>In document view there are two indicators for the quality of the extraction.</p> <ul> <li>Extraction quality in percent per field and current document</li> <li>Overall extraction quality including previous extractions of documents of the same type.</li> </ul> <p></p> <p>Extraction quality in percent per field and current document</p> <p>For each field there is a value available on the right side which indicates the quality of extraction for the current document. A percentage value will be displayed:</p> <p></p> <p>Overall extraction quality including previous extractions of documents of the same type</p> <p>Furthermore, there is a graph that shows the quality of all previous extractions for a document type. This refers in each case to the extraction value with the lowest quality:</p> <p></p> <p>Technical Details:</p> <p>The AI indicator shows how well a document is trained. This is done via an internal score. This means that as soon as a document is read in and the fields extracted by DOC\u00b2 are confirmed by the user, this score is increased. The higher the score, the further the display of the AI indicator will be in the green area. If fields are changed manually by the user after the export, this score will decrease again and the display of the AI indicator will fall back into the red area. Only when the document has been taught and the extraction has determined the correct value for some imports without manual intervention will the score reach 100%.</p>","tags":["AI","DOC\u00b2"]},{"location":"doc2/document-validation/exception-filters/","title":"Exception filters","text":"<p>Basically, documents in DOC\u00b2 are classified/defined via AI and regex. However, there a few exceptions, you need an additional negative filter (exception filter) that allows you to exclude certain things. Exception filters are important to achieve the best results.</p> <p>To define an exception filter, open document view for any document:</p> <p></p> <p>There you have the option of calling up the exception filters via the \"Exception Filters\" button:</p> <p></p> <p>You can then set the appropriate filters and apply them via \"Apply\":</p> <p></p>","tags":["Generel","Exception","Filter","DOC\u00b2"]},{"location":"doc2/document-validation/master-data-validation/","title":"Master Data Validation","text":"<p>DOC\u00b2 offers, in the document validation overview, the possibility to match supplier data extracted from the document with the master data from your ERP system (precondition: your master data has been uploaded to DOC\u00b2 and to assign the document to the correct supplier without any manual work in the best case.</p> <p>There are currently two ways to do this.</p> <p>Matching the extracted VAT number of the supplier:</p> <p>The VAT number is extracted from the document using DOC\u00b2:</p> <p></p> <p>In the background, the VAT number is matched with the supplier master data which is provided by you to DOC\u00b2 and the supplier ID including the corresponding supplier data like the name and address are determined automatically.</p> <p>The user can manually intervene at any time and call up the supplier provided. This is done via the following button:</p> <p></p> <p>The following window is called up and displays the supplier data for the corresponding VAT number. Using the search field, any VAT number can be entered and thereby the supplier master, provided by you to DOC\u00b2, can be searched. If the correct supplier is found, it can be selected and accepted.</p> <p></p> <p>Second possibility is finding the supplier via the supplier name:</p> <p>Using the button in the supplier name field, the supplier master (which is provided by you to DOC\u00b2) can also be called up. In this case, the supplier name can be searched in the supplier master:</p> <p></p> <p></p>","tags":["DOC\u00b2","Document Validation","Master Data Validation"]},{"location":"doc2/document-validation/ocr-view/","title":"OCR View","text":"<p>In document view you have the possibility to open the OCR view for a document. This allows you to display the document in the pure OCR view without any formatting or similar.</p> <p>To do this, import a document as usual and open it in document view:</p> <p></p> <p>There you will find the \"OCR\" button:</p> <p></p> <p>When you click this button a new window will be opened which displays the document and its data in pure OCR view. This can be useful, for example, if data is not extracted correctly and you want to troubleshoot the actual values contained in the document to be extracted:</p> <p></p> <p>In addition, the following button can be used to switch to debug view. This allows you to see exactly how DOC\u00b2 extracts the individual values in the background and whether these are recognized correctly:</p> <p></p> <p></p> <p>Furthermore, the following button can be used to switch back to document view:</p> <p></p> <p></p>","tags":["DOC\u00b2","OCR"]},{"location":"doc2/export/","title":"Export","text":"","tags":["DOC\u00b2","Export","Infor","Webhook","FLOW\u00b2"]},{"location":"doc2/export/#here-you-can-find-the-export-options-and-the-corresponding-articles","title":"Here you can find the export options and the corresponding articles.","text":"<ul> <li>Webhook</li> <li>infor</li> <li>FLOW\u00b2</li> </ul>","tags":["DOC\u00b2","Export","Infor","Webhook","FLOW\u00b2"]},{"location":"doc2/export/create-a-infor-ion-api-file/","title":"How to create an Infor ION API file","text":"","tags":["Export to Infor","ION","DOC\u00b2","Settings"]},{"location":"doc2/export/create-a-infor-ion-api-file/#step-by-step-instructions-for-creating-an-infor-ion-api-file-required-for-infor-export","title":"Step-by-step instructions for creating an Infor ION API file required for Infor export.","text":"<p>Prerequisites:</p> <ul> <li>An admin user f\u00fcr InforOS with the security roles <code>ION Desk Admin</code>, <code>ION API Admin</code> and <code>IDM Admin</code>.</li> <li>A InforOS user that can be used as service account that has permission to create documents in IDM with the security roles <code>IDM-AdvancedUser</code>, <code>Infor-SuiteUser</code> and <code>MingleEnterprise</code>.</li> </ul> <p>1. Open InforOS with a admin user and change to the Infor ION API Screen.     Click on Authorized Apps and then on the <code>+</code></p> <p></p> <p>2. Enter a meaningfull name and description like 'Doc2Export'. Choose <code>Backend Service</code> and click on the disk icon to save.</p> <p></p> <p>3. Once the entires are saved, click the button Download Credentials.</p> <p></p> <p>4. Switch on <code>Create Service Account</code> and enter the service user name into the box.</p> <p></p> <p>5. Click <code>DOWNLOAD</code> to get the ION API file.</p>","tags":["Export to Infor","ION","DOC\u00b2","Settings"]},{"location":"doc2/export/export-to-flow2/","title":"Export to FLOW\u00b2","text":"<p>Step by Step guide how to export documents to FLOW\u00b2</p> <p>1. Login to DOC\u00b2, click on settings and select \"Export\".</p> <p></p> <p>Settings - Export</p> <p>2. Click on \"Add integration\"</p> <p></p> <p>Settings - Export - Add integration</p> <p>3. Choose \"Flow\"</p> <p></p> <p>4. Select Integration for Document Type INVOICE, choose \"Invoice verification\", \"Incoming invoice\" and upload the mapping file</p> <p>FLOW2_MappingsDownload</p> <p></p> <p>5. Click SAVE and you will see saved settings</p> <p></p> <p>With this the settings are made.</p> <p>Now you can</p> <ol> <li>Upload a document in DOC\u00b2, validate and export it.</li> <li>Go to FLOW\u00b2 -&gt; Documents -&gt; recently created - here you will find the just validated and exported document</li> </ol> <p>All configurations required in FLOW\u00b2 can be found here</p>","tags":["DOC\u00b2","Settings","Export","FLOW\u00b2"]},{"location":"doc2/export/how-to-create-a-bod-mapping-file/","title":"How to create a BOD mapping file","text":"","tags":["DOC\u00b2","Export","Infor","BOD","Mapping"]},{"location":"doc2/export/how-to-create-a-bod-mapping-file/#step-by-step-guide-how-to-create-a-bod-mapping-file","title":"Step by step guide how to create a BOD mapping file.","text":"<p>You can download a example mapping file here:</p> <p>BOD mapping exampleDownload</p> <p>To use the example file, rename the file from \u201cBOD_Mapping.txt\u201d to \u201cBOD_Mapping.properties\u201d.</p> <p>*Here you can find an explanation how the file is structured.*</p> <p>In the first block, all static values will be defined. Fields that would need an adjustment are \"LogicalID\" and \"AccountingEntityID\".</p> <p>The \"LogicalID\" must be set to the logical ID of the IMS connection point that was defined for the DOC\u00b2 BOD export.</p> <p>The \"AccountingEnity\" must be set to the accounting entity of the target Infor ERP system.</p> <pre><code>#All static field attributes.\nStatic_Fields=AlternateDocSchema,AlternateDocLocation,LogicalID,ConfirmationCode,actionCode,AccountingEntityID\n\nSFP_AlternateDocSchema=SyncCaptureDocumentType\\\\DataArea\\\\CaptureDocument\\\\AlternateDocumentID\\\\ID\\\\schemeName\nSFV_AlternateDocSchema=CorrelationID\n\nSFP_AlternateDocLocation=SyncCaptureDocumentType\\\\DataArea\\\\CaptureDocument\\\\AlternateDocumentID\\\\ID\\\\location\nSFV_AlternateDocLocation=doc2\n\nSFP_LogicalID=SyncCaptureDocumentType\\\\ApplicationArea\\\\Sender\\\\LogicalID\nSFV_LogicalID=lid://infor.ims.doc2export\n\nSFP_ConfirmationCode=SyncCaptureDocumentType\\\\ApplicationArea\\\\Sender\\\\ConfirmationCode\nSFV_ConfirmationCode=OnError\n\nSFP_actionCode=SyncCaptureDocumentType\\\\DataArea\\\\Sync\\\\ActionCriteria\\\\ActionExpression\\\\actionCode\nSFV_actionCode=Add\n\nSFP_AccountingEntityID=SyncCaptureDocumentType\\\\DataArea\\\\Sync\\\\AccountingEntityID\nSFV_AccountingEntityID=infor.ln.100\n</code></pre> <p>In the second block you can adjust the document type mapping. On the left side you have the document type of DOC\u00b2 and on the right side the document type of the BOD.</p> <pre><code>#All generated fields.\nGenerated_Fields=CreationDateTime,BODID\n\nGFP_BODID=SyncCaptureDocumentType\\\\ApplicationArea\\\\BODID\nGFV_BODID=BODID\n\nGFP_CreationDateTime=SyncCaptureDocumentType\\\\ApplicationArea\\\\CreationDateTime\nGFV_CreationDateTime=CurrentDate\n\n#Document Type path.\nDT_Path=SyncCaptureDocumentType\\\\DataArea\\\\CaptureDocument\\\\DocumentType\n\n#Mapping between doc2 document and IDM document.\nDocument_Types=Invoice\nInvoice=SupplierInvoice\n</code></pre> <p>In the third block you can adjust the field mapping. On the left side are the fields of DOC\u00b2 and on the right side the field names of the BOD.</p> <pre><code>#Index Field Mapping\nIndex_Fields=INVOICE_TYPE,PURCHASE_ORDER,INVOICE_NUMBER,INVOICE_DATE,DELIVERY_DATE,PAYMENT_TERMS,TAX_RATE,TAX_AMOUNT,NET_AMOUNT,TOTAL_AMOUNT,CURRENCY,VENDOR_ID,VENDOR_NAME,VAT_NO_EXTRACTED,IBAN_EXTRACTED,ACCOUNTING_ENTITY,CORRELATION_ID\nIF_INVOICE_TYPE=InvoiceType\nIF_PURCHASE_ORDER=PurchaseOrder\nIF_INVOICE_NUMBER=InvoiceNumber\nIF_INVOICE_DATE=InvoiceDate\nIF_DELIVERY_DATE=DeliveryDate\nIF_PAYMENT_TERMS=PaymentTerms\nIF_TAX_RATE=VatPercent\nIF_TAX_AMOUNT=VATAmount\nIF_NET_AMOUNT=NetAmount\nIF_TOTAL_AMOUNT=TotalAmount\nIF_CURRENCY=Currency\nIF_VENDOR_ID=SupplierID\nIF_VENDOR_NAME=SupplierName\nIF_IBAN_EXTRACTED=AccountNumber\nIF_VAT_NO_EXTRACTED=VATRegNo\n#IF_ACCOUNTING_ENTITY=AccountingEntityID\nIF_CORRELATION_ID=AlternateDocumentID\n#IF_VENDOR_IBAN=BankAccount\n</code></pre> <p>In the rest of the file should stay as is and does not need any modification.</p> <pre><code>#If index field value is to be used somewhere else define path here.\n\nIFP_CORRELATION_ID=SyncCaptureDocumentType\\\\DataArea\\\\CaptureDocument\\\\AlternateDocumentID\\\\ID\nIFP_INVOICE_NUMBER=SyncCaptureDocumentType\\\\DataArea\\\\CaptureDocument\\\\DocumentID\\\\ID\nIFP_INVOICE_DATE=SyncCaptureDocumentType\\\\DataArea\\\\CaptureDocument\\\\DocumentDateTime\n#IFP_ACCOUNTING_ENTITY=SyncCaptureDocumentType\\\\DataArea\\\\Sync\\\\AccountingEntityID\n\n#Index field common path\nIF_COMMON_PATH=SyncCaptureDocumentType\\\\DataArea\\\\CaptureDocument\\\\DocumentField\n\nIF_Attributes=languageID\n\nIFP_languageID=SyncCaptureDocumentType\\\\DataArea\\\\CaptureDocument\\\\DocumentField\\\\Name\\\\languageID\nIFV_languageID=en-us\n\n\n#IF_Elements=name,value,fieldOrderNumber,datatype,category,pageID,fieldEnumeration\nIF_Elements=name,value,fieldOrderNumber,page,fieldEnumeration\nIFP_name=SyncCaptureDocumentType\\\\DataArea\\\\CaptureDocument\\\\DocumentField\\\\Name\nIFP_value=SyncCaptureDocumentType\\\\DataArea\\\\CaptureDocument\\\\DocumentField\\\\Value\nIFP_fieldOrderNumber=SyncCaptureDocumentType\\\\DataArea\\\\CaptureDocument\\\\DocumentField\\\\FieldOrderNumber\nIFP_page=SyncCaptureDocumentType\\\\DataArea\\\\CaptureDocument\\\\DocumentField\\\\PageID\nIFP_fieldEnumeration=SyncCaptureDocumentType\\\\DataArea\\\\CaptureDocument\\\\DocumentField\\\\FieldValueEnumerationString\n\n\nPages_COMMON_PATH=SyncCaptureDocumentType\\\\DataArea\\\\CaptureDocument\\\\DocumentPage\n\nPage_Elements=pageID,sourceFileName,fileMimeType\nPFP_pageID=SyncCaptureDocumentType\\\\DataArea\\\\CaptureDocument\\\\DocumentPage\\\\PageID\nPFP_sourceFileName=SyncCaptureDocumentType\\\\DataArea\\\\CaptureDocument\\\\DocumentPage\\\\SourceFileName\nPFP_fileMimeType=SyncCaptureDocumentType\\\\DataArea\\\\CaptureDocument\\\\DocumentPage\\\\SourceMimeType\n\nBatch_Level_Properties=fileSize,lastModificationPerson,lastModifiedDateTime\n\n#Path_CreatePerson=SyncCaptureDocumentType\\\\DataArea\\\\CaptureDocument\\\\CreationPerson\\\\Name\nPath_fileSize=SyncCaptureDocumentType\\\\DataArea\\\\CaptureDocument\\\\FileSize\nPath_lastModificationPerson=SyncCaptureDocumentType\\\\DataArea\\\\CaptureDocument\\\\LastModificationPerson\\\\Name\nPath_lastModifiedDateTime=SyncCaptureDocumentType\\\\DataArea\\\\CaptureDocument\\\\LastModificationDateTime\n</code></pre>","tags":["DOC\u00b2","Export","Infor","BOD","Mapping"]},{"location":"doc2/export/how-to-create-a-idm-mapping-file/","title":"How to create a IDM mapping file","text":"","tags":["DOC\u00b2","Export","Infor","IDM","Mapping"]},{"location":"doc2/export/how-to-create-a-idm-mapping-file/#step-by-step-guide-how-to-create-a-idm-mapping-file","title":"Step by step guide how to create a IDM mapping file.","text":"<p>You can download a example mapping file here:</p> <p>IDM mapping exampleDownload</p> <p>To use the example file, rename the file from \"IDM_Mapping.txt\" to \"IDM_Mapping.properties\".</p> <p>Here you can find an explanation how the file is structured.</p> <p>In the first block the document type gets mapped. On the left side you see the document type name of DOC\u00b2 and the right side the document type name of IDM.</p> <pre><code>#Define Name of document\n#Example: &lt;Doc2DocumentType&gt;=&lt;IDMDocumentType&gt;\n#Invoice=LN_SupplierInvoice\nINVOICE=LN_SupplierInvoice\n</code></pre> <p>In the second block you can define static values which will be used in the mapping file.</p> <p>In the example there is a static field for FileNameSeperator and ACLString.</p> <p>With the field ACLString you can define the ACL that will set in IDM for each exported document.</p> <pre><code>#Define mappings for the static values\n#Example: Static_Values=&lt;StaticVariableName&gt;:&lt;type&gt;\nStatic_Values=FileNameSeparator,ACLString\n#Example: SF_&lt;StaticVariableName&gt; = StaticValue\nSV_FileNameSeparator=_\nSV_ACLString=Public\n</code></pre> <p>In the third block you can define static values that will be transferred to IDM.</p> <p>It will be use to set the EntityType, AccountingEntity and GroupAccountingEntity in IDM.</p> <p>The values need to be set accordingly to your evironment.</p> <pre><code>#Define mappings for the static fields\n#Example: Static_Fields=&lt;IDMAttributeId&gt;:&lt;type&gt;\nStatic_Fields=MDS_EntityType:STRING,MDS_AccountingEntity,MDS_BodRefAccEntity\n#Example: SF_&lt;IDMAttributeId&gt; = StaticValue\nSF_MDS_EntityType=InforERPEnterpriseFinancialsReceivedInvoice\nSF_MDS_AccountingEntity=100\nSF_MDS_BodRefAccEntity=infor.ln.0100\n</code></pre> <p>In the fourth block you can map the DOC\u00b2 fields to the IDM attributes.</p> <pre><code>#Define index fields\n#Example: Index_Fields=&lt;IndexFieldIdFromEphesoft&gt;:&lt;type&gt;\nIndex_Fields=INVOICE_NUMBER:STRING,CORRELATION_ID:STRING,ACCOUNTING_ENTITY:STRING,INVOICE_DATE:STRING,GROUP_ACCOUNTING_ENTITY:STRING,SUPPLIER_NAME:STRING\n#Example: IF_&lt;IndexFieldIdFromDoc2&gt; = &lt;IDMAttributeId&gt;\nIF_INVOICE_NUMBER=SupplierInvoiceNumber\nIF_CORRELATION_ID=MDS_id1\nIF_INVOICE_DATE=InvoiceDate\nIF_SUPPLIER_NAME=SupplierName\n</code></pre> <p>In the fifth block the ACL String of the second block will be mapped to the ACL field of IDM. Usualy this should not be changed.</p> <pre><code>#Define ACL Field value\n#Example: ACL_Fields= Concatenation of other defined fields that together should be a valid ACL in IDM\nACL_Fields=SV_ACLString\n</code></pre> <p>In the last block you can define the \"Searchable_PDF_Name\". That will be the name if the document in IDM.</p> <p>It can be a single field name or a concatenation of different fields. For example:</p> <p>Searchable_PDF_Name=IF_INVOICE_NUMBER+SV_FileNameSeparator+IF_SUPPLIER_NAME</p> <pre><code>#Define Resource Mapping\n#Example: Searchable_PDF_Name= Concatenation of other defined fields\nSearchable_PDF_Name=IF_INVOICE_NUMBER\n</code></pre>","tags":["DOC\u00b2","Export","Infor","IDM","Mapping"]},{"location":"doc2/export/infor-idm/","title":"Export to Infor IDM","text":"","tags":["DOC\u00b2","Export","Infor","IDM","DOC\u00b2"]},{"location":"doc2/export/infor-idm/#export-to-infor-document-management-without-publishing-the-document-values-in-a-seperate-bod","title":"Export to Infor Document Management without publishing the document values in a seperate BOD","text":"<p>Step by Step guide how to export documents to Infor Document Management (IDM) without publishing the values in a seperate BOD.</p> <p>Prerequisites:</p> <ul> <li>An admin user f\u00fcr InforOS with the security roles \"ION Desk Admin\", \"ION API Admin\", \"IDM Admin\".</li> <li>An ION API file to create the communication between DOC\u00b2 and Infor IDM. Follow the documentation here: How to create an Infor ION file</li> <li>A IDM document type where the documents shall be exported to.</li> <li>A IDM Mapping file which IDM uses to know which document content represents which information. You find a example of the IDM mapping file on this page: How to create a IDM mapping file</li> </ul> <p>Login to DOC\u00b2, click on settings and select \"Export\".</p> <p></p> <p>Settings - Export</p> <p>Click on \"Add integration\"</p> <p></p> <p>Settings - Export - Add integration</p> <p>Choose \"Infor IDM\"</p> <p></p> <p>Click on the ION API File section and select the ION API file that you want to use for the communation between DOC\u00b2 and IDM. If you don\u00b4t have a ION API file follow this documentation to create one: How to create an Infor ION file</p> <p>On normal exports you will have to pick \"CLOUD\" on the left slider. With the right slider you can choose if you want to export the normal PDF Invoice to Infor or if you want to export the Invoice as ZUGfERD (PDF with X-Rechnung format ZUGfERD XML attachment).   On exports using Watchdog, you will have to pick \"ONPREM\" on the left slider.  </p> <p>Click on the IDM Mapping file section and choose the IDM Mapping file you want to use for the export. You find a example of the IDM mapping file on this page: How to create a IDM mapping file </p> <p>Click \"Save\" to the save the export setting.</p>","tags":["DOC\u00b2","Export","Infor","IDM","DOC\u00b2"]},{"location":"doc2/export/infor-ion/","title":"Export to Infor ION and IDM","text":"","tags":["DOC\u00b2","Export","Infor","Infor OS","ION","IDM"]},{"location":"doc2/export/infor-ion/#_1","title":"Export to Infor ION and IDM","text":"<p>Export to Infor Document Management with publishing the document values in a seperate BOD</p> <p>Step by Step guide how to export documents to Infor Document Management (IDM) with publishing the values in a seperate Sync.CaptureDocument BOD.</p> <p>Prerequisites:</p> <ul> <li>An admin user f\u00fcr InforOS with the security roles \"ION Desk Admin\", \"ION API Admin\", \"IDM Admin\".</li> <li>An ION API file to create the communication between DOC\u00b2 and Infor IDM. Follow the documentation here: How to create an Infor ION file</li> <li>A IDM document type where the documents shall be exported to.</li> </ul>","tags":["DOC\u00b2","Export","Infor","Infor OS","ION","IDM"]},{"location":"doc2/export/infor-ion/#doc2-steps","title":"DOC\u00b2 steps","text":"<p>Login to DOC\u00b2, click on settings and select \"Export\".</p> <p></p> <p>Settings - Export</p> <p>Click on \"Add integration\"</p> <p></p> <p>Settings - Export - Add integration</p> <p>Choose \"Infor ION\"</p> <p></p> <p>Click on the ION API File section and select the ION API file that you want to use for the communication between DOC\u00b2 and IDM. If you don't have a ION API file follow this documentation to create one: How to create an Infor ION file</p> <p></p> <p>Click on the IDM Mapping file section and choose the IDM Mapping file you want to use for the export. You find a example of the IDM mapping file on this page: How to create a IDM mapping file</p> <p></p> <p>Click on the BOD Mapping file section and choose the BOD Mapping file you want to use for the export. You find a example of the BOD mapping file on this page: How to create a BOD mapping file</p> <p></p> <p>Click \"Save\" to the save the export setting.</p>","tags":["DOC\u00b2","Export","Infor","Infor OS","ION","IDM"]},{"location":"doc2/export/infor-ion/#infor-ion-steps","title":"Infor ION steps","text":"<p>Open \"Infor ION API\", select \"Authorized Apps\" and click on the DOC\u00b2 application.</p> <p></p> <p>Copy and store the \"Client ID\", this ID will be required later.</p> <p></p> <p>Open \"ION Desk\", open the burger menu, select \"Connect\" and click on \"Connection points\"</p> <p>Click on \"+Add\" and choose \"IMS via ION API\"</p> <p></p> <p>Enter the name meaningful \"Doc2Export\" and give it a meaningful description.</p> <p>Uncheck the box \"Application has IMS EndPoint\" and enter the \"Client ID\" copied from ION API.</p> <p></p> <p>Change to the \"Documents\" tab.</p> <p>Click on the \"+\" icon and enter to the filter field \"Sync.CaptureDocument\". The list should show the correct BOD now, check the box in front of \"Sync.CaptureDocument\" and click \"OK\".</p> <p></p> <p>Click the disk icon to save the settings.</p> <p></p> <p>Change to \"Data Flows\" and click on \"+Add\" and select \"Document Flow\".</p> <p></p> <p>Enter a meaningful name and description.</p> <p>Drag and drop an \"Application\" to the flow and name it \"Doc2\".</p> <p></p> <p>Click on the \"+\" icon and select the \"Doc2\" application, in this case \"Doc2Export\" and click \"OK\".</p> <p></p> <p>Click on the disk icon to save the new document flow.</p> <p></p>","tags":["DOC\u00b2","Export","Infor","Infor OS","ION","IDM"]},{"location":"doc2/export/webhook/","title":"Webhook","text":"","tags":["DOC\u00b2","Export","Webhook"]},{"location":"doc2/export/webhook/#exporting-data-via-a-webhook","title":"Exporting data via a webhook","text":"<p>A webhook is an easy way to exchange data between online applications.</p> <p>Follow the steps to configure the webhook export.</p> <p>Login to DOC\u00b2, click on settings and select \"Export\".</p> <p></p> <p>Settings - Export</p> <p>Click on \"Add integration\"</p> <p></p> <p>Settings - Export - Add integration</p> <p>Choose \"Webhook\"</p> <p></p> <p>Settings - Export - Add integration - Webhook</p> <p>Enter the webhook URL and click on \"Save\"</p> <p></p> <p>Settings - Export - Add integration - Webhook - Webhook settings</p>","tags":["DOC\u00b2","Export","Webhook"]},{"location":"doc2/export/export-to-infor/","title":"Export to Infor","text":"<pre><code>graph LR\n  A[Start] --&gt; B{Invoice?};\n  B --&gt;|Yes| C[Extraction];\n  C --&gt; D[Infor LN or M3];\n  D --&gt; E[Send to IDM];\n  B ----&gt;|No| E[Send to IDM];\n  E --&gt; F[End];</code></pre> <p>Here you can find all the useful pages to connect your infor environment correctly:</p> <ul> <li> How to create a BOD mapping file</li> <li> Export to Infor ION and IDM</li> <li> How to create a IDM mapping file</li> <li> How to create an Infor ION API file</li> <li> Export to Infor IDM</li> </ul>","tags":["DOC\u00b2","Export","Infor","DOC\u00b2"]},{"location":"doc2/fileshare/","title":"Fileshare Import","text":"","tags":["DOC\u00b2","Import","Fileshare"]},{"location":"doc2/fileshare/#watchdog-for-windows","title":"Watchdog - for Windows","text":"","tags":["DOC\u00b2","Import","Fileshare"]},{"location":"doc2/fileshare/watchdog-macOS/","title":"Watchdog for macOS","text":"","tags":["DOC\u00b2","Fileshare Import","Watchdog","macOS"]},{"location":"doc2/fileshare/watchdog-macOS/#download-the-file-here","title":"Download the file here:","text":"","tags":["DOC\u00b2","Fileshare Import","Watchdog","macOS"]},{"location":"doc2/fileshare/watchdog-macOS/#folder-configuration","title":"Folder configuration","text":"<p>First configure the following folders:</p> <ul> <li>Read folder \u2192 documents that are exported to DOC\u00b2 are uploaded here</li> <li>Error folder \u2192 documents that ran into an error during the export are saved here</li> <li>Processed folder \u2192 successfully processed documents are stored here</li> </ul> <p>To configure these folders, you must select the Settings folder and press <code>Browse</code> for each folder</p> <p></p>","tags":["DOC\u00b2","Fileshare Import","Watchdog","macOS"]},{"location":"doc2/fileshare/watchdog-macOS/#general-configuration","title":"General configuration","text":"<p>Next, configure general parameters:</p> <ul> <li>Environment \u2192 where you want to export the documents, the following options are available here:<ul> <li>DOC\u00b2 \u2192 here the watchdog exports the documents only to DOC\u00b2</li> <li>INFOR OS \u2192 here the watchdog checks if there are export orders for Infor OS On-Premise issued by DOC\u00b2 and then the document is exported to IDM.</li> </ul> </li> <li>API key \u2192 this key can be found under Integration settings of your DOC\u00b2 account</li> </ul> <p>There are two more specific parameters:</p> <ul> <li>When exporting to Infor OS:<ul> <li>Document types \u2192 here you have the choice between three different document types</li> </ul> </li> </ul> <p></p>","tags":["DOC\u00b2","Fileshare Import","Watchdog","macOS"]},{"location":"doc2/fileshare/watchdog-windows/","title":"Watchdog for Windows","text":"","tags":["DOC\u00b2","Fileshare Import","Watchdog","Windows"]},{"location":"doc2/fileshare/watchdog-windows/#download-the-files-here","title":"Download the files here:","text":"<p>Watchdog Download Poppler Download</p>","tags":["DOC\u00b2","Fileshare Import","Watchdog","Windows"]},{"location":"doc2/fileshare/watchdog-windows/#folder-configuration","title":"Folder configuration","text":"<p>First configure the following folders:</p> <ul> <li>Read folder \u2192 documents that should be uploaded to DOC\u00b2 have to be in this folder</li> <li>Error folder \u2192 documents that ran into an error during the export are saved here</li> <li>Processed folder \u2192 successfully processed documents are stored here</li> </ul> <p>To configure these folders, you must select the Settings folder and press <code>Browse</code> for each folder</p> <p></p>","tags":["DOC\u00b2","Fileshare Import","Watchdog","Windows"]},{"location":"doc2/fileshare/watchdog-windows/#general-configuration","title":"General configuration","text":"<p>Next, configure general parameters:</p>","tags":["DOC\u00b2","Fileshare Import","Watchdog","Windows"]},{"location":"doc2/fileshare/watchdog-windows/#select-an-environment-to-which-your-documents-should-be-exported","title":"Select an environment to which your documents should be exported.","text":"<p> The following options are available:</p> <p>DOC\u00b2 \u2192 the documents will only be exported to DOC\u00b2</p> <p></p> <p>INFOR OS \u2192 here the watchdog checks if there are export orders for Infor OS On-Premise issued by DOC\u00b2 and then the document is exported to IDM.</p> <p>There are two more specific parameters:</p> <p>When exporting to Infor OS three document types are available</p> <p></p>","tags":["DOC\u00b2","Fileshare Import","Watchdog","Windows"]},{"location":"doc2/fileshare/watchdog-windows/#api-key","title":"API Key","text":"<p>\u2192 this key can be found under Integration settings of your DOC\u00b2 account</p>","tags":["DOC\u00b2","Fileshare Import","Watchdog","Windows"]},{"location":"doc2/fileshare/watchdog-windows/#barcode-splitting","title":"Barcode splitting","text":"<p>If you want to process documents in which several documents with barcodes are combined in one PDF, these are separated by the barcode using the following setting when uploading to DOC\u00b2.</p> <p></p> <p> Make sure the Document Splitting in the Classification and Extraction Settings is disabled.</p> <p></p>","tags":["DOC\u00b2","Fileshare Import","Watchdog","Windows"]},{"location":"doc2/fileshare/watchdog-windows/#install-poppler","title":"Install poppler","text":"<p>For the barcode Splitting to work you need to download the poppler.zip - unzip it and add the bin lib to the PATH system Variable.</p> <ol> <li>Search for System variable or Systemumgebungsvariablen</li> <li>click on System Variables </li> <li>Open the system Variables, select Path and click on edit </li> <li>Add the path to the unziped poppler folder + \\Libary\\bin to the Path </li> </ol> <p>Done!</p>","tags":["DOC\u00b2","Fileshare Import","Watchdog","Windows"]},{"location":"doc2/import/","title":"Import","text":"","tags":["Import","DOC\u00b2","E-Mail","manual Import","API"]},{"location":"doc2/import/#here-you-can-find-the-import-options-and-the-corresponding-links","title":"Here you can find the import options and the corresponding links","text":"<ul> <li>E-Mail</li> <li>Manual Import</li> <li>API</li> <li>Fileshare</li> </ul>","tags":["Import","DOC\u00b2","E-Mail","manual Import","API"]},{"location":"doc2/pomatching/po-matching-delivery-notes/","title":"PO Matching - Delivery Note","text":"<p>If quantity of the ordered item(s) does not match the quantity on the invoice you need to start the match with received Delivery Note.</p>","tags":["DOC\u00b2","PO Matching","Delivery Note"]},{"location":"doc2/pomatching/po-matching-delivery-notes/#upload-the-delivery-note-in-doc2","title":"Upload the Delivery Note in DOC\u00b2","text":"<p>Sign up for a 30 days free trail</p> <p></p> <p>Here you will also find the red symbol, because the quantity on the delivery note does not match the quantity of the purchase order.</p> <p></p> <p>Access the matching overview by clicking on the Matching Symbol on the dashboard.</p> <p></p> <p>Or by choosing PO MATCHING in the lower right corner when you have opened the document.</p> <p></p> <p>The matches can now be corrected:</p> <p>The \u201cx\u201d would delete the match on the delivery note.</p> <p>A new match from the purchase order can be added to the delivery note by dragging and dropping the appropriate data row(s).</p> <p></p> <p>You need to confirm the mismatched properties.</p> <p></p> <p></p> <p>Save to apply all changes.</p> <p></p> <p>Once everything is correct the document can be validated and exported.</p>","tags":["DOC\u00b2","PO Matching","Delivery Note"]},{"location":"doc2/pomatching/po-matching-invoices/","title":"PO Matching - Invoices","text":"","tags":["DOC\u00b2","PO Matching","Invoice","LN"]},{"location":"doc2/pomatching/po-matching-invoices/#create-a-purchase-order-in-ln","title":"Create a purchase order in LN","text":"<p>Open LN and go to Purchase Order Intake Workbench</p> <p></p> <p>Select Purchase Orders</p> <p></p> <p>and add a new one by choosing the + symbol</p> <p></p> <p>Now you can create the document and the corresponding table and its values.</p> <p>First add the Business Partner via the search function (the magnifying glas), clicking out of the marked field, fills the rest of them with the stored data.</p> <p></p> <p>For the next step add the order lines. You need to add each line manually and need to input the Item and order Quantity \u2013 the rest will be filled automatically.</p> <p></p> <p>After that save the purchase order. You must approve said purchase order and so that the settings are relayed to the system.</p> <p></p> <p>Sign up for a 30 days free trail</p>","tags":["DOC\u00b2","PO Matching","Invoice","LN"]},{"location":"doc2/pomatching/po-matching-invoices/#upload-the-invoice-in-doc2","title":"Upload the Invoice in DOC2","text":"<p>The symbol under MATCHED indicates the current matching status \u2013 green for matched and red for not matched. Ideally it is already green.</p> <p>Open the document and validate the extracted fields.</p> <p></p> <p>After validating all extracted fields open matching overview by clicking on PO MATCHING</p> <p></p> <p>You can also go directly from dashboard to the matching overview by following the steps below</p> <p>The symbol under MATCHED indicates the current matching status \u2013 green for matched and red for not matched. Ideally it is already green.</p> <p></p>","tags":["DOC\u00b2","PO Matching","Invoice","LN"]},{"location":"doc2/pomatching/po-matching-invoices/#case-1-matched","title":"Case 1: Matched","text":"<p>Access the matching overview by clicking on the Matching Symbol on the dashboard.</p> <p></p> <p></p> <p>In this case the quantity of items ordered matches the quantity on the invoice, the match and thus the document can be validated and exported.</p> <p></p> <p>invoice exporting</p> <p></p> <p>exported successfully</p>","tags":["DOC\u00b2","PO Matching","Invoice","LN"]},{"location":"doc2/pomatching/po-matching-invoices/#case-2-not-matched","title":"Case 2: Not matched","text":"<p>Access the matching overview by clicking on the Matching Symbol on the dashboard.</p> <p></p> <p></p> <p>Here you can see that the quantity of the ordered item does not match the quantity on the invoice.</p> <p>The matches can now be corrected:</p> <p>The \u201cx\u201d would delete the match on the invoice.</p> <p>A new match from the purchase order can be added to the invoice by dragging and dropping the appropriate data row(s).</p> <p></p> <p>You need to confirm the mismatched properties.</p> <p></p> <p></p> <p>Save to apply all changes.</p> <p></p> <p>Once everything is correct the document can be validated and exported.</p> <p></p> <p>invoice exporting</p> <p></p> <p>exported successfully</p> <p></p> <p>Since in LN no comparison regarding the quantity between order and invoice is possible, in this case you have to make the comparison with the delivery bill. You can find out how this works here.</p>","tags":["DOC\u00b2","PO Matching","Invoice","LN"]},{"location":"doc2/pomatching/po-matching-invoices/#check-the-receipt-of-the-invoice-in-ln","title":"Check the receipt of the invoice in LN","text":"<p>To see if the process was successful, you can check this in LN by choosing \u201cProcess Payables Workbench\u201d</p> <p></p> <p></p> <p>Search by invoice number in the corresponding field</p> <p></p> <p>If you click on this icon, the following overview will open, in which you will see the order and the assigned invoice.</p> <p></p>","tags":["DOC\u00b2","PO Matching","Invoice","LN"]},{"location":"doc2/pomatching/po-matching-order-confirmation/","title":"PO Matching - Order Confirmation","text":"<p>If quantity of the ordered item(s) does not match the quantity on the invoice you need to start the match with received Order Confirmation.</p>","tags":["DOC\u00b2","PO Matching","Order Confirmation"]},{"location":"doc2/pomatching/po-matching-order-confirmation/#upload-the-order-confirmation-in-doc2","title":"Upload the Order Confirmation in DOC\u00b2","text":"<p>Sign up for a 30 days free trail</p> <p></p> <p>Here you will also find the red symbol, because the quantity on the Order Confirmation does not match the quantity of the purchase order.</p> <p></p> <p>Access the matching overview by clicking on the Matching Symbol on the dashboard.</p> <p></p> <p>Or by choosing PO MATCHING in the lower right corner when you have opened the document.</p> <p></p> <p>The matches can now be corrected:</p> <p>The \u201cx\u201d would delete the match on the delivery note.</p> <p>A new match from the purchase order can be added to the delivery note by dragging and dropping the appropriate data row(s).</p> <p></p> <p>You need to confirm the mismatched properties.</p> <p></p> <p></p> <p>Save to apply all changes.</p> <p></p> <p>Once everything is correct the document can be validated and exported.</p>","tags":["DOC\u00b2","PO Matching","Order Confirmation"]},{"location":"doc2/pomatching/po-matching/","title":"PO Matching","text":"<p>There are three ways you can match your Purchase Order</p> <ol> <li>with the corresponding invoice</li> <li>with the corresponding delivery note and  order confirmation All three components must match within agreed-upon tolerance levels. It is then entered into the AP system.</li> <li>with all the above documents, but also requires control information such as actual number of items delivered and their quality control. Once all 4 components match, the invoice is entered into the AP database.</li> </ol>","tags":["DOC\u00b2","PO Matching","Keyboard shortcuts"]},{"location":"doc2/pomatching/po-matching/#corresponding-settings-must-be-made-in-doc2-under-settings-modules-purchase-order","title":"Corresponding settings must be made in DOC\u00b2 under Settings - Modules - Purchase Order","text":"<p>On documents, the Purchase Order is listed either in the headers or, for some, in the table rows.</p> <p>During validation, the supplier's PO must be extracted correctly.</p> <p>Create the table from Purchase Order with one klick. See how easy that is:</p>","tags":["DOC\u00b2","PO Matching","Keyboard shortcuts"]},{"location":"doc2/pomatching/po-matching/#keyboard-accessibility-for-po","title":"Keyboard accessibility for PO","text":"<p>1. Click on the PO Matching required Button of your Document on dashboard</p> <p></p> <p>2. You will find the Keyboard Shortcuts by clicking on the keyboard icon</p> <p></p>","tags":["DOC\u00b2","PO Matching","Keyboard shortcuts"]},{"location":"doc2/pomatching/po-matching/#these-are-all-the-keyboard-shortcuts-you-can-use-on-the-po-matching-screen","title":"These are all the keyboard shortcuts you can use on the PO Matching screen:","text":"","tags":["DOC\u00b2","PO Matching","Keyboard shortcuts"]},{"location":"doc2/settings/","title":"Settings","text":"<p>In this section you will find all the settings to customize DOC\u00b2 to your company. From Global settings to all needed settings to process your documents.</p>","tags":["DOC\u00b2","Settings","Global","Document Processing"]},{"location":"doc2/settings/#global-settings","title":"GLOBAL SETTINGS","text":"<ul> <li>Company Information</li> <li>Groups, Users and Permissions</li> <li>Integration</li> <li>Document Types</li> <li>Email notification</li> </ul>","tags":["DOC\u00b2","Settings","Global","Document Processing"]},{"location":"doc2/settings/#document-processing","title":"DOCUMENT PROCESSING","text":"<ul> <li>Import</li> <li>OCR Settings</li> <li>Classification and Extraction</li> <li>Supplier Validation</li> <li>Export</li> <li>Approval documentation for DOC\u00b2 coming soon </li> </ul>","tags":["DOC\u00b2","Settings","Global","Document Processing"]},{"location":"doc2/settings/email-notification/","title":"Email notification","text":"<p>In this section you can configure all types of email notifications for your document types. Easily set employees to be notified when a document has a certain status.</p> <p>Go to Settings and open the Email notification menu.</p> <p></p> <p>To add a new notification, click <code>+ NEW</code> in the top right corner and the following window will open.</p> <p></p> <p>In this you can define a custom name for the notification, select the document type and status as well as the time unit and enter the e-mail address of the person who should receive the corresponding notification.</p> <p>The following status can be selected:</p> <ul> <li>Ready For Validation</li> <li>Pending Approval</li> <li>Pending Second Approval</li> </ul> <p>More will follow</p> <p>Time Units to choose are:</p> <ul> <li>Minutes</li> <li>Hours</li> <li>Days</li> </ul> <p>The Delay hast to be set to a minimum of 5 minutes as the email server will need that time to respond.</p> <p>The email will be sent after selected time duration, if document status remains unchanged.</p> <p> </p> <p>This is what the corresponding email notifications look like:</p> <p></p> <p> </p> <p></p>","tags":["DOC\u00b2","Settings","Email notification"]},{"location":"doc2/settings/groups-users-permissons/","title":"Groups, Users and Permissons","text":"<p>In this area you can manage your organizations users and their roles, create sub-organizations as well as configure groups, their users and permissions for different document types.</p> <ul> <li>Users</li> <li>Sub-Organizations</li> <li>Groups and Permissions</li> </ul>","tags":["DOC\u00b2","Settings","Groups","Users","Permissions"]},{"location":"doc2/settings/integration/","title":"Integration","text":"<p>In this section you will find your API Key as well as the SSO Service Provider Settings</p> <ul> <li>API Key</li> <li>API Calls</li> <li>SSO</li> </ul>","tags":["DOC\u00b2","Settings","API Key","SSO"]},{"location":"doc2/settings/integration/api-calls-examples/","title":"API Calls","text":"","tags":["DOC\u00b2","Settings","API Calls","api.polydocs.io"]},{"location":"doc2/settings/integration/api-calls-examples/#in-this-section-you-will-find-examples-of-different-api-calls-via-apipolydocsio","title":"In this section you will find examples of different API Calls via api.polydocs.io.","text":"<p>For each example, authentication is the first step</p>","tags":["DOC\u00b2","Settings","API Calls","api.polydocs.io"]},{"location":"doc2/settings/integration/api-calls-examples/#authentication","title":"Authentication","text":"<p>1. Open api.polydocs.io 2. Click on Authorize in the upper right corner</p> <p></p> <p>3. Enter your API Key and confirm by clicking <code>Authorize</code></p> <p></p>","tags":["DOC\u00b2","Settings","API Calls","api.polydocs.io"]},{"location":"doc2/settings/integration/api-calls-examples/#upload-document","title":"Upload document","text":"<p>After completing steps 1.-3. 4. scroll down to</p> <p></p> <p>5. Open the tab and click on <code>Try it out</code> in the upper right corner to enter the following value</p> <p>source:   email:{Pattern name}</p> <p></p> <p>6. Select the file you want to upload and click <code>Execute</code></p> <p>Your document will be uploaded to your dashboard with the rules you set in DOC\u00b2</p> <p> </p>","tags":["DOC\u00b2","Settings","API Calls","api.polydocs.io"]},{"location":"doc2/settings/integration/api-calls-examples/#document-status","title":"Document Status","text":"<p>After completing steps 1.-3. 4. scroll down to</p> <p></p> <p>5. Open the tab and click on <code>Try it out</code> in the upper right corner to enter the following value</p> <p>doc-id:   https://app.polydocs.io/2a/9c931f6f-f352-4526-a78d-c036c39a8d9e</p> <p>You get the document id when you open the document on the dashboard. This is the last part of the URL when the document is open.</p> <p></p> <p>You will receive the following response:</p> <p></p> <p>Ready For Validation means that the user can check the document.</p>","tags":["DOC\u00b2","Settings","API Calls","api.polydocs.io"]},{"location":"doc2/settings/integration/api-calls-examples/#upload-document-with-metadata","title":"Upload document with metadata","text":"<p>After completing steps 1.-3. 4. scroll down to one of these endpoints:  - /document/process_documents  - /document/process  - /document/process_base64</p> <p>Here we will upload a document to /document/process but the steps are the same for the other endpoints</p> <p>5. Open the tab and click on <code>Try it out</code> in the upper right corner to enter the following value</p> <ol> <li>Enter Metadata </li> <li>Metadata needs to be in a valid json format. Json Validator       An example of a metadata entry would be: <pre><code>{\"custom-key\": \"the custom value\", \"custom_doc_id\": \"8a5cf33b-c923-4879-96ca-94d69965d508\"}`\n</code></pre></li> <li>Select a file to upload </li> <li>Click <code>Execute</code></li> <li>Wait for response. If the metadata field is not a valid json an error message will appear.  If \"success\": true, then your document will be uploaded to your dashboard with the rules you set in DOC\u00b2</li> </ol>","tags":["DOC\u00b2","Settings","API Calls","api.polydocs.io"]},{"location":"doc2/settings/integration/api-integration/","title":"API Integration","text":"","tags":["DOC\u00b2","Settings","API"]},{"location":"doc2/settings/integration/api-integration/#what-is-api-integration","title":"What is API integration?","text":"<p>API integration refers to a process of connecting two or more applications via APIs to \"talk\" to each other. The applications can perform a common function or exchange information to ensure data integrity.</p> <p>To access the hole Polydocs API menu click here</p>","tags":["DOC\u00b2","Settings","API"]},{"location":"doc2/settings/integration/api-integration/#api-key","title":"API Key","text":"<p>All you need is your API Key. You will find your Key in the Integration menu item in the settings.</p> <p></p> <p> Various examples of API Calls can be found here.</p>","tags":["DOC\u00b2","Settings","API"]},{"location":"doc2/table-extraction/","title":"Table Extraction","text":"<p>With DOC\u00b2 it is possible to extract tables from PDF-Files. That will be done via the \"Line Items\" functionality. It is used for extracting the tables from all types of documents (Invoices, Contracts, Forms, Medical Prescriptions etc.).</p> <p>The extraction of data in tables can be achieved by following the steps described below:</p> <p>1. Login to your account with Email and Password you are given.</p> <p>2. On Dashboard, import any document</p> <p>3. Click on the document to Open</p> <p>4. Now, scroll down the extracted fields page to Line Items section</p> <p>5. Click on the table icon inside the textbox</p> <p></p> <p>You will end up in the table extraction view.</p> <p>If the document contains very simple tables it will detect and extract them automatically:</p> <p></p> <p>In practice, tables on documents are often much more complex and have a wide variety of formatting and arrangements. For example, text may extend across several columns or there may be several lines of text in one position line. For example, in the case of long item descriptions or similar:</p> <p></p> <p>And this is where the advantage of DOC\u00b2 and its table extraction functionality comes into play. There are several ways to train the table extraction functionality and to achieve the best possible result, even with demanding tables.</p> <p>In the following sections you will learn how to train a table manually and what functionalities are available for this:</p>","tags":["DOC\u00b2","Table","Line Items"]},{"location":"doc2/table-extraction/add-new-table-column/","title":"Add new table column","text":"<p>DOC\u00b2 offers the possibility to manually create columns for extracted documents. This is necessary when there is a need to manually map columns to rows (fields) on the extracted document. When this is necessary and how it works you will learn here: Manual row selection</p> <p>Import any document and open it. Navigate to the table extraction view like via the \"LINE ITEMS\" button:</p> <p>Sign up for a 30 days free trail</p> <p></p>","tags":["Table","DOC\u00b2"]},{"location":"doc2/table-extraction/add-new-table-column/#activate-the-training-mode","title":"Activate the training mode.","text":"<p>Columns can be added manually using the following button.</p> <p></p> <p>In the window that opens, you can specify a name for the column to be generated. Furthermore, you can set whether it is an optional or a mandatory field. You can also specify whether the column is a field that contains text (column type STRING), that contains numerical values (column type AMOUNT) or that contains a date (column type DATE).</p> <p></p> <p>Once the column has been created by clicking on \"PROCEED\", it can be used for manual mappings (Manual row selection).</p> <p></p>","tags":["Table","DOC\u00b2"]},{"location":"doc2/table-extraction/advanced-settings/","title":"Advanced settings for table extraction","text":"<p>In the table extraction view, you will find the menu item <code>Settings</code> in the upper action bar (make sure that the training mode is activated). If you click on the gear icon, a window will open in which you will find the <code>Advanced Settings</code>.</p> <p></p> <p></p>","tags":["Table","DOC\u00b2","Settings"]},{"location":"doc2/table-extraction/advanced-settings/#below-functionalities-are-available-in-general-settings","title":"Below functionalities are available in general settings:","text":"","tags":["Table","DOC\u00b2","Settings"]},{"location":"doc2/table-extraction/advanced-settings/#header-row-count","title":"Header row count","text":"<p>Here you can define the number of lines of a table header. For example, the table header line can be two lines:</p> <p></p> <p>Accordingly, the value in \"Header row count\" is set to two:</p> <p></p> <p>Why is this needed? It might be that DOC\u00b2 does not recognize the second line in the table header as header line. In this case, it incorrectly inserts it into the table as extracted value. This can be easily prevented with this function.</p> <p>Example before:</p> <p></p> <p>Example after:</p> <p></p>","tags":["Table","DOC\u00b2","Settings"]},{"location":"doc2/table-extraction/advanced-settings/#move-extra-rows-to","title":"Move Extra Rows to","text":"<p>In this example, the item description in the table spans several rows, but you only need the first one. To extract only this and include it in the Description column, select <code>Move Extra Rows to</code> <code>Trash</code>.</p> <p> </p> <p>After naming the columns and mapping them to position, you get the following result:</p> <p></p>","tags":["Table","DOC\u00b2","Settings"]},{"location":"doc2/table-extraction/advanced-settings/#below-functionalities-are-available-in-the-advanced-settings","title":"Below functionalities are available in the advanced settings:","text":"","tags":["Table","DOC\u00b2","Settings"]},{"location":"doc2/table-extraction/advanced-settings/#minimum-grouped-rows","title":"Minimum grouped rows","text":"<p>Enter the minimum number of rows in your grouped column here.</p> <p></p> <p>In this table you see six rows of which only three are relevant for you. In the first two columns there are two criteria that have to be extracted separately. These will be your mapped columns all the other ones have to be trained as custom columns.  And this is how it works step by step:</p> <p>Select the two header rows as well as two minimum grouped rows as these should be grouped to one row.</p> <p> </p> <p>Also select the <code>Move extra rows to</code> <code>Trash</code> option to be able to train all the other columns as custom columns.</p> <p></p> <p>Name first column Postition and group on that one.</p> <p></p> <p>After naming all the columns and training the values, this is your result:</p> <p></p>","tags":["Table","DOC\u00b2","Settings"]},{"location":"doc2/table-extraction/advanced-settings/#reverse-grouping","title":"Reverse grouping","text":"<p>If you want to combine all the rows above the grouped attribute, check the box here.</p> <p>In this example, the table starts with a row that is above all other information but also needs to be extracted along with the information below it. It could be that DOC\u00b2 extracts this row as an additional row and the grouping of the information, e.g. by position, does not work properly.</p> <p> </p> <p>After grouping on net amount, checking the box, selecting the <code>Move extra rows to</code> <code>Trash</code> option</p> <p></p> <p>and naming all columns this is your result:</p> <p></p>","tags":["Table","DOC\u00b2","Settings"]},{"location":"doc2/table-extraction/define-table-and-columns/","title":"Define tables and columns","text":"<p>Define tables</p> <p>To define tables and columns on a document please import a document, open it and go to the table extraction view like already known (via \"Line Items\").</p> <p>You will end up in following screen where you can activate the Training Mode:</p> <p></p> <p>Via the \"Edit\" button table selection mode will be activated and you will be able to edit the document shown on the left side:</p> <p></p> <p>In general your are now able to use the autodetect tables functionality and the system will automatically define the tables on the document:</p> <p></p> <p>If the system is not able to find the tables automatically you can manually define the tables on the document like shown in the video below:</p> <p>Define columns</p> <p>Once the tables are defined you can manually define the columns via the following button:</p> <p></p> <p>Define and sort the columns via drag and drop on the document like shown in the video below:</p> <p>Repeat this for the tables on the other pages as well. As an alternative if the tables are equal on each page you can use the following button to use the same column for all tables defined in the document. This functionality copies the columns that you have defined to all other pages as well:</p> <p></p> <p>If the document is very confusing, it can be zoomed in and out using the \"Zoom in\" and \"Zoom out\" functionality. This is helpful, for example, when a lot of information is close together and this makes it difficult to define the columns:</p> <p></p> <p>If you defined a column by mistake it can be selected by clicking it and deleted again via the following button:</p> <p></p> <p>Note: The button is only visible if the column is selected.</p> <p>If you are done defining all tables and all columns on your document use the \"Save\" button to activate your changes and to extract the data from the document:</p> <p></p> <p>The data of all defined areas will be extracted and shown on the right side:</p> <p></p> <p>In the next section you will learn how to adjust the data that has been extracted.</p>","tags":["DOC\u00b2","Table","Columns"]},{"location":"doc2/table-extraction/group-function/","title":"Group function to extract data from tables","text":"<p>Once a table has been extracted via DOC\u00b2 and the columns have been mapped (Mapping of columns) the obtained data can be grouped to get a structured result set of all extracted data.</p> <p>Sign up for a 30 days free trail</p>","tags":["Tables","Table Extraction","DOC\u00b2"]},{"location":"doc2/table-extraction/group-function/#what-does-this-mean-in-detail","title":"What does this mean in detail?","text":"<p>All documents from order confirmations to invoices can vary enormously in complexity from company to company. For example, in documents, information may be presented in tables in some columns across multiple rows and in other columns across only one row.</p> <p>As an example, you can see the German invoice below, where the information in column \"Bezeichnung\" extends over several lines (positions).</p> <p></p> <p>At this point, another advantage of DOC\u00b2 comes into play. It extracts the data in the first step 1 to 1. The result looks like this:</p> <p></p> <p>BUT: Now there is the possibility to group data based on a specific column. That means in this case it can be grouped by the column \"Position\" as shown in the following video. This in turn groups the rows of the \"Description\" column into one row. So that at the end you get a structured overall picture of the export and the data can now be processed further.</p> <p>If the grouping was created by mistake, it can be removed at any time, as also shown in the video.</p> <p>The result of grouping looks like this:</p> <p></p>","tags":["Tables","Table Extraction","DOC\u00b2"]},{"location":"doc2/table-extraction/manual-row-selection/","title":"Manual row selection","text":"<p>It is possible that on some documents text in rows is not only written under one column. It might happen that it is written through different columns like in the example below:</p> <p></p> <p>On the screenshot you can see that the table and columns have already been defined. Having a detailed look on the highlighted information (PRAEF) you will recognize that the text is written through columns \"Bezeichnung\", \"Menge\", \"ME\" and \"Preis in EUR\".</p> <p>Sign up for a 30 days free trail</p> <p>In that case it is not possible for the system to automatically define to which column the information belongs.</p> <p>To solve this issue DOC\u00b2 offers a possibility to manually select and map information on a document to any column.</p> <p>First of all make sure training mode is activated:</p> <p></p> <p>In addition you need to activate the row edit mode:</p> <p></p> <p>Please note that the manual mapping of text to a column is only possible for extractable columns (blue colour):</p> <p></p> <p>The violet ones can not be mapped manually as the mapping has already been done via the columns defined on the document.</p> <p>Extractable columns need to be created first. You will learn here how that works: Add new table column</p> <p>Once the column has been created, training mode and row edit mode are activated you can map text on the document to the column as shown in the video below:</p> <p>In the video you can see how to:</p> <ul> <li>select an area with your mouse</li> <li>double click a value to select the area (only possible for values without spaces)</li> <li>delete mapping and re-map the area</li> </ul>","tags":["DOC\u00b2","Row","Selection","manually","Table Extraction"]},{"location":"doc2/table-extraction/mapping-of-columns/","title":"Mapping of columns","text":"<p>Once data is extracted from document you are able to map the extracted columns with the columns given by DOC\u00b2.</p> <p>That can be done via selecting the header of a column in the extraction view.</p> <p>A dropdown will open and you are able to select the column that you want to map.</p> <p></p> <p>If a column has been mapped incorrectly you can simply re-map the column by clicking the dropdown menu again.</p> <p>In the following video you can see in detail how to map and re-map different columns on a document:</p>","tags":["DOC\u00b2","Table Extraction","Training","Mapping"]},{"location":"doc2/table-extraction/save-rules-and-delete-rules/","title":"Save and delete rules","text":"<p>Sign up for a 30 days free trail</p> <p>As soon as a document has been trained in DOC\u00b2 and all rules for the extraction of the tables have been stored for this document, they have to be saved so that no manual training is necessary for future imports. Instead, the documents and their tables are extracted fully automatically by DOC\u00b2 and the data is brought into the structure defined by the training.</p> <p>As soon as the document/table extraction has been trained and the data is available in a satisfactory format, the rules for the table extraction can be saved using the \"SAVE RULES\" button.</p> <p></p> <p>As soon as this document is imported into DOC\u00b2 in the future, the rules are automatically applied during extraction and always bring the data into the trained format.</p> <p>The rule indicator shows how many rules have been defined and saved for this document.</p> <p></p> <p>Rules for documents can also be deleted using the \"DELETE RULES\" button. This may be necessary if rules have been saved incorrectly or in a qualitatively unsatisfactory way. This allows a document to be retrained. ATTENTION: Deleting rules will affect all documents with the same or similar format. And these documents must then be completely re-trained. This means that deleting the rules should be done with great care.</p> <p></p>","tags":["DOC\u00b2","Table Extraction","Rules","Save","Delete"]},{"location":"doc2/table-extraction/training-of-table-extraction/","title":"Training for Table Extraction","text":"<ul> <li>How to define tables and columns</li> <li>Advanced settings</li> <li>Mapping of columns</li> <li>Group function</li> <li>Manual row selection</li> <li>Add new table column</li> <li>Save and delete rules</li> </ul>","tags":["DOC\u00b2","Training","Table"]},{"location":"doc2/table-extraction/training-of-table-extraction/#training-vs-correction-mode","title":"Training vs Correction Mode","text":"","tags":["DOC\u00b2","Training","Table"]},{"location":"doc2/table-extraction/training-of-table-extraction/#training-mode","title":"Training Mode:","text":"<ul> <li>Mapped columns are read only. You are not be able to change the text manually.</li> <li>Delete row button is not visible</li> </ul>","tags":["DOC\u00b2","Training","Table"]},{"location":"doc2/table-extraction/training-of-table-extraction/#correction-mode","title":"Correction Mode:","text":"<ul> <li>Delete row and add new row option is available</li> <li>You are able to manually change the texts of the columns</li> </ul> <p>After deleting the first row and adding the bottom row:</p> <p></p>","tags":["DOC\u00b2","Training","Table"]},{"location":"example/approval/","title":"WF\u00b2 Approval with DOC\u00b2","text":"<p>With the approval screen you can approve document for example invoice or other documents. Infor customer can forward the document to Infor IDM with a define status to archive it.</p>","tags":["Workflow\u00b2","Approval","DOC\u00b2","Ming.le","Infor OS"]},{"location":"example/approval/#video","title":"Video","text":"","tags":["Workflow\u00b2","Approval","DOC\u00b2","Ming.le","Infor OS"]},{"location":"example/approval/#example","title":"Example","text":"<pre><code>{\n\"nodes\": [\n{\n\"name\": \"Start\",\n\"type\": \"n8n-nodes-base.start\",\n\"position\": [\n640,\n300\n],\n\"parameters\": {},\n\"typeVersion\": 1\n},\n{\n\"name\": \"Rename Keys\",\n\"type\": \"n8n-nodes-base.renameKeys\",\n\"position\": [\n1040,\n300\n],\n\"parameters\": {\n\"keys\": {\n\"key\": [\n{\n\"newKey\": \"NewName\",\n\"currentKey\": \"name\"\n}\n]\n}\n},\n\"typeVersion\": 1\n},\n{\n\"name\": \"Function\",\n\"type\": \"n8n-nodes-base.function\",\n\"position\": [\n820,\n300\n],\n\"parameters\": {\n\"functionCode\": \"// Don't panic!\\n// This is just an Example JSON Data\\n\\nconst json = `\\n  [\\n    {\\n      \\\"_id\\\":\\\"5078c3a803ff4197dc81fbfb\\\",\\n      \\\"email\\\":\\\"user1@gmail.com\\\",\\n      \\\"image\\\":\\\"some_image_url\\\",\\n      \\\"name\\\":\\\"Name 1\\\"\\n    },\\n    {\\n      \\\"_id\\\":\\\"5078c3a803ff4197dc81fbfc\\\",\\n      \\\"email\\\":\\\"user2@gmail.com\\\",\\n      \\\"image\\\":\\\"some_image_url\\\",\\n      \\\"name\\\":\\\"Name 2\\\"\\n    }\\n  ]\\n`;\\n\\n// Parse the JSON Data and store into a Variable called array\\nconst arr = JSON.parse(json);\\n\\n// Now, Return the Data inside the variable arr\\nreturn arr;\"\n},\n\"typeVersion\": 1\n}\n],\n\"connections\": {\n\"Start\": {\n\"main\": [\n[\n{\n\"node\": \"Function\",\n\"type\": \"main\",\n\"index\": 0\n}\n]\n]\n},\n\"Function\": {\n\"main\": [\n[\n{\n\"node\": \"Rename Keys\",\n\"type\": \"main\",\n\"index\": 0\n}\n]\n]\n}\n}\n}\n</code></pre>","tags":["Workflow\u00b2","Approval","DOC\u00b2","Ming.le","Infor OS"]},{"location":"example/export-excel/","title":"DOC\u00b2 export to Excel and Upload to Dropbox","text":"<p>In this example we trigger the result from DOC\u00b2 and write the result to excel and upload it to Dropbox.</p>","tags":["Workflow\u00b2","Dropbox","Excel","DOC\u00b2"]},{"location":"example/export-excel/#example","title":"Example","text":"<pre><code>{\n\"name\": \"Export to Dropbox\",\n\"nodes\": [\n{\n\"parameters\": {},\n\"name\": \"Start\",\n\"type\": \"n8n-nodes-base.start\",\n\"typeVersion\": 1,\n\"position\": [\n180,\n420\n]\n},\n{\n\"parameters\": {\n\"document_type\": \"INVOICE\",\n\"status\": \"validated_pending_export\"\n},\n\"name\": \"Status Trigger\",\n\"type\": \"n8n-nodes-base.statusTrigger\",\n\"typeVersion\": 1,\n\"position\": [\n200,\n200\n],\n\"webhookId\": \"b4e6be8c-5be1-4c75-8906-aa8790c1dd51\",\n\"credentials\": {\n\"Doc2AppApi\": {\n\"id\": \"1\",\n\"name\": \"Doc2App account\"\n}\n}\n},\n{\n\"parameters\": {\n\"operation\": \"toFile\",\n\"fileFormat\": \"xlsx\",\n\"options\": {\n\"fileName\": \"excel.xlsx\"\n}\n},\n\"name\": \"Spreadsheet File\",\n\"type\": \"n8n-nodes-base.spreadsheetFile\",\n\"typeVersion\": 1,\n\"position\": [\n900,\n200\n]\n},\n{\n\"parameters\": {\n\"functionCode\": \"// Code here will run only once, no matter how many input items there are.\\n// More info and help: https://docs.polydocs.io/workflow/integrations/core-nodes/workflow-nodes-base.function\\n// Tip: You can use luxon for dates and $jmespath for querying JSON structures\\n\\n// Loop over inputs and add a new field called 'myNewField' to the JSON of each one\\n//for (item of items) {\\n//  item.json.myNewField = 1;\\n//}\\n\\n// You can write logs to the browser console\\nconsole.log('Done!');\\n\\nreturn items[0].json.fields_compact;\\n\\n\"\n},\n\"name\": \"Function\",\n\"type\": \"n8n-nodes-base.function\",\n\"typeVersion\": 1,\n\"position\": [\n640,\n200\n]\n},\n{\n\"parameters\": {\n\"options\": {}\n},\n\"name\": \"Spreadsheet File1\",\n\"type\": \"n8n-nodes-base.spreadsheetFile\",\n\"typeVersion\": 1,\n\"position\": [\n1320,\n200\n]\n},\n{\n\"parameters\": {\n\"path\": \"/excel.xlsx\",\n\"binaryData\": true\n},\n\"name\": \"Dropbox\",\n\"type\": \"n8n-nodes-base.dropbox\",\n\"typeVersion\": 1,\n\"position\": [\n1320,\n0\n],\n\"credentials\": {\n\"dropboxApi\": {\n\"id\": \"4\",\n\"name\": \"Dropbox account\"\n}\n}\n}\n],\n\"connections\": {\n\"Status Trigger\": {\n\"main\": [\n[\n{\n\"node\": \"Function\",\n\"type\": \"main\",\n\"index\": 0\n}\n]\n]\n},\n\"Start\": {\n\"main\": [\n[]\n]\n},\n\"Spreadsheet File\": {\n\"main\": [\n[\n{\n\"node\": \"Spreadsheet File1\",\n\"type\": \"main\",\n\"index\": 0\n},\n{\n\"node\": \"Dropbox\",\n\"type\": \"main\",\n\"index\": 0\n}\n]\n]\n},\n\"Function\": {\n\"main\": [\n[\n{\n\"node\": \"Spreadsheet File\",\n\"type\": \"main\",\n\"index\": 0\n}\n]\n]\n},\n\"Spreadsheet File1\": {\n\"main\": [\n[]\n]\n}\n},\n\"active\": false,\n\"settings\": {},\n\"id\": 2\n}\n</code></pre>","tags":["Workflow\u00b2","Dropbox","Excel","DOC\u00b2"]},{"location":"example/gmail-import/","title":"Gmail Import to DOC\u00b2","text":"<p>This workflow searches for new e-mails in the configured sub-mailboxes of an e-mail address. When a new email is found, it receives the attachment and uploads it to DOC\u00b2.</p> <p></p> <p>This workflow starts with a cronjob which can be configured as you want. To check for new emails this workflow uses the Gmail node. Before configuring it you have to create new credentials for OAuth2 API which you can find on this page. To download the attachment you have to deactivate the Simplify switcher and select from the Options dropdown Download Attachments (activate it) and Attachment Prefix. If you want to watch a specific Mailbox you have to select under Filters the Label Names or IDs option and choose the mailbox.</p> <p></p> <p>Before extracting the attachment to DOC\u00b2 you have to add a custom Function. Just paste the following JavaScript code into it:</p> <pre><code>for (item of items) {\nitem.binary.data = item.binary.attachment_0;\ndelete item.binary.attachment_0;\n}\n\nconsole.log('Done!', items);\n\nreturn items;\n</code></pre> <p>To extract the documents to DOC\u00b2 you have to select the Doc2App Upload Documents node. To connect the node to your account you have to apply the API key. The documentation you can find on this page.</p> <p></p> <p>Here is the complete workflow for you:</p> <pre><code>{\n\"meta\": {\n\"instanceId\": \"0a6a0e27589c939bf68273b85f2764bf176e24e8c6ceeff18fffa9c682f31c61\"\n},\n\"nodes\": [\n{\n\"parameters\": {\n\"triggerTimes\": {\n\"item\": [\n{\n\"mode\": \"everyX\",\n\"value\": 1,\n\"unit\": \"minutes\"\n}\n]\n}\n},\n\"id\": \"c65a6e6a-e05c-4164-ad3d-53f42b5389fb\",\n\"name\": \"Cron\",\n\"type\": \"n8n-nodes-base.cron\",\n\"typeVersion\": 1,\n\"position\": [\n500,\n700\n]\n},\n{\n\"parameters\": {\n\"functionCode\": \"for (item of items) {\\n  item.binary.data = item.binary.attachment_0;\\n  delete item.binary.attachment_0;\\n}\\n\\n// You can write logs to the browser console\\nconsole.log('Done!', items);\\n\\nreturn items;\"\n},\n\"name\": \"Function 1\",\n\"type\": \"n8n-nodes-base.function\",\n\"typeVersion\": 1,\n\"position\": [\n1320,\n340\n],\n\"id\": \"232c8e64-e643-44b9-a595-74fcc2672575\"\n},\n{\n\"parameters\": {\n\"functionCode\": \"for (item of items) {\\n  item.binary.data = item.binary.attachment_0;\\n  delete item.binary.attachment_0;\\n}\\n\\n// You can write logs to the browser console\\nconsole.log('Done!', items);\\n\\nreturn items;\"\n},\n\"name\": \"Function 2\",\n\"type\": \"n8n-nodes-base.function\",\n\"typeVersion\": 1,\n\"position\": [\n1320,\n700\n],\n\"id\": \"b1736621-d62c-472c-a848-621bebc4ed2c\"\n},\n{\n\"parameters\": {\n\"functionCode\": \"for (item of items) {\\n  item.binary.data = item.binary.attachment_0;\\n  delete item.binary.attachment_0;\\n}\\n\\n// You can write logs to the browser console\\nconsole.log('Done!', items);\\n\\nreturn items;\"\n},\n\"name\": \"Function 3\",\n\"type\": \"n8n-nodes-base.function\",\n\"typeVersion\": 1,\n\"position\": [\n1320,\n1040\n],\n\"id\": \"e8f3f5ca-1393-4770-97ee-6c4d66656be4\"\n},\n{\n\"parameters\": {\n\"operation\": \"getAll\",\n\"limit\": 10,\n\"simple\": false,\n\"filters\": {\n\"labelIds\": [\n\"Label_1\"\n],\n\"readStatus\": \"unread\"\n},\n\"options\": {\n\"dataPropertyAttachmentsPrefixName\": \"attachment_\",\n\"downloadAttachments\": true\n}\n},\n\"id\": \"128dffe6-7b61-4ce5-80d1-78e791743708\",\n\"name\": \"Mailbox 1\",\n\"type\": \"n8n-nodes-base.gmail\",\n\"typeVersion\": 2,\n\"position\": [\n860,\n340\n],\n\"alwaysOutputData\": false,\n\"credentials\": {\n\"gmailOAuth2\": {\n\"id\": \"20\",\n\"name\": \"Gmail account\"\n}\n}\n},\n{\n\"parameters\": {\n\"operation\": \"getAll\",\n\"limit\": 10,\n\"simple\": false,\n\"filters\": {\n\"labelIds\": [\n\"Label_2\"\n],\n\"readStatus\": \"unread\"\n},\n\"options\": {\n\"dataPropertyAttachmentsPrefixName\": \"attachment_\",\n\"downloadAttachments\": true\n}\n},\n\"id\": \"c5dda293-4e48-4a11-98b8-920fbd19efde\",\n\"name\": \"Mailbox 2\",\n\"type\": \"n8n-nodes-base.gmail\",\n\"typeVersion\": 2,\n\"position\": [\n860,\n700\n],\n\"alwaysOutputData\": false,\n\"credentials\": {\n\"gmailOAuth2\": {\n\"id\": \"20\",\n\"name\": \"Gmail account\"\n}\n}\n},\n{\n\"parameters\": {\n\"operation\": \"getAll\",\n\"limit\": 10,\n\"simple\": false,\n\"filters\": {\n\"labelIds\": [\n\"Label_3\"\n],\n\"readStatus\": \"unread\"\n},\n\"options\": {\n\"dataPropertyAttachmentsPrefixName\": \"attachment_\",\n\"downloadAttachments\": true\n}\n},\n\"id\": \"b08c6f55-19bd-4a90-8187-bdb2fee95bc7\",\n\"name\": \"Mailbox 3\",\n\"type\": \"n8n-nodes-base.gmail\",\n\"typeVersion\": 2,\n\"position\": [\n860,\n1040\n],\n\"alwaysOutputData\": false,\n\"credentials\": {\n\"gmailOAuth2\": {\n\"id\": \"20\",\n\"name\": \"Gmail account\"\n}\n}\n},\n{\n\"parameters\": {\n\"operation\": \"markAsRead\",\n\"messageId\": \"={{$node[\\\"Mailbox 1\\\"].json[\\\"id\\\"]}}\"\n},\n\"id\": \"ce4e3b6e-4157-4ebe-ad2e-aefb4ded6a7a\",\n\"name\": \"Mark As Read 1\",\n\"type\": \"n8n-nodes-base.gmail\",\n\"typeVersion\": 2,\n\"position\": [\n1060,\n180\n],\n\"credentials\": {\n\"gmailOAuth2\": {\n\"id\": \"20\",\n\"name\": \"Gmail account\"\n}\n}\n},\n{\n\"parameters\": {\n\"operation\": \"markAsRead\",\n\"messageId\": \"={{$node[\\\"Mailbox 2\\\"].json[\\\"id\\\"]}}\"\n},\n\"id\": \"241ccb05-805d-44ce-8165-f5f35d5de686\",\n\"name\": \"Mark As Read 2\",\n\"type\": \"n8n-nodes-base.gmail\",\n\"typeVersion\": 2,\n\"position\": [\n1060,\n540\n],\n\"credentials\": {\n\"gmailOAuth2\": {\n\"id\": \"20\",\n\"name\": \"Gmail account\"\n}\n}\n},\n{\n\"parameters\": {\n\"operation\": \"markAsRead\",\n\"messageId\": \"={{$node[\\\"Mailbox 3\\\"].json[\\\"id\\\"]}}\"\n},\n\"id\": \"ed8301eb-d86d-439e-8586-3000b8b1d9f0\",\n\"name\": \"Mark As Read 3\",\n\"type\": \"n8n-nodes-base.gmail\",\n\"typeVersion\": 2,\n\"position\": [\n1060,\n880\n],\n\"credentials\": {\n\"gmailOAuth2\": {\n\"id\": \"20\",\n\"name\": \"Gmail account\"\n}\n}\n},\n{\n\"parameters\": {\n\"importtype\": \"other\"\n},\n\"id\": \"4ba2e931-7c49-442a-b1e2-07aa036c7357\",\n\"name\": \"Upload Document 1\",\n\"type\": \"n8n-nodes-base.upload\",\n\"typeVersion\": 1,\n\"position\": [\n1640,\n340\n],\n\"credentials\": {\n\"Doc2AppApi\": {\n\"id\": \"19\",\n\"name\": \"Doc2App\"\n}\n}\n},\n{\n\"parameters\": {\n\"importtype\": \"other\"\n},\n\"id\": \"b213ed6a-9458-4622-9943-51c71da1ea4f\",\n\"name\": \"Upload Document 2\",\n\"type\": \"n8n-nodes-base.upload\",\n\"typeVersion\": 1,\n\"position\": [\n1640,\n700\n],\n\"credentials\": {\n\"Doc2AppApi\": {\n\"id\": \"19\",\n\"name\": \"Doc2App\"\n}\n}\n},\n{\n\"parameters\": {\n\"importtype\": \"other\"\n},\n\"id\": \"81992b56-3fa2-4eec-98d3-00ea59c887d1\",\n\"name\": \"Upload Document 3\",\n\"type\": \"n8n-nodes-base.upload\",\n\"typeVersion\": 1,\n\"position\": [\n1640,\n1040\n],\n\"credentials\": {\n\"Doc2AppApi\": {\n\"id\": \"19\",\n\"name\": \"Doc2App\"\n}\n}\n}\n],\n\"connections\": {\n\"Cron\": {\n\"main\": [\n[\n{\n\"node\": \"Mailbox 1\",\n\"type\": \"main\",\n\"index\": 0\n},\n{\n\"node\": \"Mailbox 2\",\n\"type\": \"main\",\n\"index\": 0\n},\n{\n\"node\": \"Mailbox 3\",\n\"type\": \"main\",\n\"index\": 0\n}\n]\n]\n},\n\"Function 1\": {\n\"main\": [\n[\n{\n\"node\": \"Upload Document 1\",\n\"type\": \"main\",\n\"index\": 0\n}\n]\n]\n},\n\"Function 2\": {\n\"main\": [\n[\n{\n\"node\": \"Upload Document 2\",\n\"type\": \"main\",\n\"index\": 0\n}\n]\n]\n},\n\"Function 3\": {\n\"main\": [\n[\n{\n\"node\": \"Upload Document 3\",\n\"type\": \"main\",\n\"index\": 0\n}\n]\n]\n},\n\"Mailbox 1\": {\n\"main\": [\n[\n{\n\"node\": \"Function 1\",\n\"type\": \"main\",\n\"index\": 0\n},\n{\n\"node\": \"Mark As Read 1\",\n\"type\": \"main\",\n\"index\": 0\n}\n]\n]\n},\n\"Mailbox 2\": {\n\"main\": [\n[\n{\n\"node\": \"Function 2\",\n\"type\": \"main\",\n\"index\": 0\n},\n{\n\"node\": \"Mark As Read 2\",\n\"type\": \"main\",\n\"index\": 0\n}\n]\n]\n},\n\"Mailbox 3\": {\n\"main\": [\n[\n{\n\"node\": \"Function 3\",\n\"type\": \"main\",\n\"index\": 0\n},\n{\n\"node\": \"Mark As Read 3\",\n\"type\": \"main\",\n\"index\": 0\n}\n]\n]\n}\n}\n}\n</code></pre>","tags":["Workflow\u00b2","Email","Gmail","Import","DOC\u00b2"]},{"location":"example/outlook-import/","title":"Email Import with O365 to DOC\u00b2","text":"","tags":["Workflow\u00b2","Email","Outlook","O365","Import","DOC\u00b2"]},{"location":"example/outlook-import/#outlook-import-to-doc2-for-certain-sub-organizations","title":"Outlook Import to DOC\u00b2 for certain sub-organizations","text":"<p>With the following workflow you can upload email attachments from specific folders to a specific sub-organization of your DOC\u00b2 organization. This can be useful if you want to import invoices from your Outlook inbox but only want them to be visible to a specific sub-organization.</p> <p></p> <p>1. The <code>Interval</code> node is used to trigger the workflow to run at regular intervals of time. 2. The <code>Microsoft getFolders</code> is an Outlook node that gets all the Folders in your Outlook Inbox.</p> <ul> <li>Please follow the documentation to configure the Microsoft Login for Workflow.</li> </ul> <p> 3. The <code>FunctionItem</code> is a node where you can specify the folders intended for your sub-organizations. These must have the same name as the folders in your Outlook.</p> <pre><code>  checker = {\n'101_Polydocs':'',\n'102_Polydocs':''\n}\n\nmapping = {}\n\nitem = $node[\"Microsoft getFolders\"].json\n\nif (item.displayName in checker) {\nmapping[item.displayName]=item.id\n}\n\nreturn mapping;\n</code></pre> <p>4. The <code>IF</code> node checks if the folders entered in step 3 exist. If they exist and the name matches, the export continues. If the entered folder name does not exist, nothing happens.</p> <p>5. The <code>SplitInBatches</code> node splits the list of folders down to single pieces to ensure that every Inbox gets checked after another.</p> <p></p> <p>6. The <code>Get unread messages</code> node searches for all unread messages.</p> <p></p> <p>7. The <code>IF</code> node will check if the <code>Get unread message</code> node found new messages and, if there are any, sends the information further.</p> <p></p> <p>8. The <code>Get Attachments</code> node will extract all the attachments from the emails. First, you have to select the Microsoft account configured in step 3.1</p> <p></p> <p>9. The <code>Mark message as read</code> node marks the emails that were checked in the steps above as read 1. The <code>Download Attachments</code> node downloads the attachments from the emails in a temporary directory as a binary file </p> <p>11. The <code>Upload Document</code> node uploads the saved attachments to DOC\u00b2. You just have to specify what inbox, in this case 101_Polydocs and to what sub-organization it is supposed to be uploaded.</p> <p></p> <p> 12. Add the classification rules in DOC\u00b2 so that the upload node knows where to upload the documents.</p> <p>You can find this in the <code>Settings</code> under the menu item Classification and Extraction in the subitem <code>Document Processing</code>.</p> <p></p> <p></p> <ul> <li>For the <code>Pattern</code> enter your Outlook folder name, in this example 101_Polydocs</li> <li>For the <code>type</code> select E-Mail</li> <li>For <code>Sub Organization</code> select the Sub-Organization where the documents should be uploaded.</li> <li>You can choose any <code>document type</code> as the document type. Leave the field blank for each document type</li> </ul> <p>Here is the complete workflow for you to download:</p> <p>Download</p>","tags":["Workflow\u00b2","Email","Outlook","O365","Import","DOC\u00b2"]},{"location":"example/rename/","title":"Rename Keys","text":"<p>Example to show how to rename Keys in a JSON</p> <p></p>","tags":["Workflow\u00b2","Example","Rename"]},{"location":"example/rename/#how-to-use-this-workflow","title":"How to use this workflow","text":"<p>Instructions</p> <ol> <li>Copy the workflow</li> <li>Navigate to your Workflow editor</li> <li>Click anywhere in the Workflow\u00b2 window</li> <li>Paste the code (ctrl + v or cmd + v)</li> </ol> <pre><code>{\n\"nodes\": [\n{\n\"name\": \"Start\",\n\"type\": \"n8n-nodes-base.start\",\n\"position\": [\n640,\n300\n],\n\"parameters\": {},\n\"typeVersion\": 1\n},\n{\n\"name\": \"Rename Keys\",\n\"type\": \"n8n-nodes-base.renameKeys\",\n\"position\": [\n1040,\n300\n],\n\"parameters\": {\n\"keys\": {\n\"key\": [\n{\n\"newKey\": \"NewName\",\n\"currentKey\": \"name\"\n}\n]\n}\n},\n\"typeVersion\": 1\n},\n{\n\"name\": \"Function\",\n\"type\": \"n8n-nodes-base.function\",\n\"position\": [\n820,\n300\n],\n\"parameters\": {\n\"functionCode\": \"// Don't panic!\\n// This is just an Example JSON Data\\n\\nconst json = `\\n  [\\n    {\\n      \\\"_id\\\":\\\"5078c3a803ff4197dc81fbfb\\\",\\n      \\\"email\\\":\\\"user1@gmail.com\\\",\\n      \\\"image\\\":\\\"some_image_url\\\",\\n      \\\"name\\\":\\\"Name 1\\\"\\n    },\\n    {\\n      \\\"_id\\\":\\\"5078c3a803ff4197dc81fbfc\\\",\\n      \\\"email\\\":\\\"user2@gmail.com\\\",\\n      \\\"image\\\":\\\"some_image_url\\\",\\n      \\\"name\\\":\\\"Name 2\\\"\\n    }\\n  ]\\n`;\\n\\n// Parse the JSON Data and store into a Variable called array\\nconst arr = JSON.parse(json);\\n\\n// Now, Return the Data inside the variable arr\\nreturn arr;\"\n},\n\"typeVersion\": 1\n}\n],\n\"connections\": {\n\"Start\": {\n\"main\": [\n[\n{\n\"node\": \"Function\",\n\"type\": \"main\",\n\"index\": 0\n}\n]\n]\n},\n\"Function\": {\n\"main\": [\n[\n{\n\"node\": \"Rename Keys\",\n\"type\": \"main\",\n\"index\": 0\n}\n]\n]\n}\n}\n}\n</code></pre>","tags":["Workflow\u00b2","Example","Rename"]},{"location":"example/second-approval/","title":"WF\u00b2 Second Approval with DOC\u00b2","text":"<p>In some process you need a second approval for incoming documents. Here is how you can configure this in DOC\u00b2.</p> <p>In our example one user or group member approves an invoice, assigns it to a second user or group for review and approval to ensure the approval is granted correctly.</p> <p>In Release 1.18.xxx.x or higher, you are able to use this advanced approval workflow to assign invoices to specific users or groups, depending on the total amount of the invoice.</p> <p>With our new Approve/Reject node, you can use this workflow to automatically approve or reject invoices that have defined high or low totals, for example.</p> <p></p>","tags":["Workflow\u00b2","Approval","DOC\u00b2"]},{"location":"example/second-approval/#examples","title":"Examples","text":"<p>First Approval workflow</p> <pre><code>},\n\"nodes\": [\n{\n\"parameters\": {\n\"selection\": \"group\",\n\"group\": \"\"\n},\n\"name\": \"Assign Finance 5000\",\n\"type\": \"n8n-nodes-base.assignEmployee\",\n\"typeVersion\": 1,\n\"position\": [\n620,\n80\n],\n\"id\": \"\",\n\"credentials\": {\n\n}\n},\n{\n\"parameters\": {\n\"conditions\": {\n\"number\": [\n{\n\"value1\": \"={{$json[\\\"fields_compact\\\"][\\\"total_amount\\\"]}}\",\n\"operation\": \"larger\",\n\"value2\": 5000\n}\n]\n},\n\"combineOperation\": \"any\"\n},\n\"name\": \"&gt;5000?\",\n\"type\": \"n8n-nodes-base.if\",\n\"typeVersion\": 1,\n\"position\": [\n420,\n240\n],\n\"id\": \"\"\n},\n{\n\"parameters\": {\n\"conditions\": {\n\"number\": [\n{\n\"value1\": \"={{$node[\\\"First\\\"].json[\\\"fields_compact\\\"][\\\"total_amount\\\"]}}\",\n\"operation\": \"larger\",\n\"value2\": 100\n}\n]\n}\n},\n\"name\": \"&gt;100?\",\n\"type\": \"n8n-nodes-base.if\",\n\"typeVersion\": 1,\n\"position\": [\n620,\n380\n],\n\"id\": \"\"\n},\n{\n\"parameters\": {\n\"selection\": \"group\",\n\"group\": \"\"\n},\n\"name\": \"Assign Finance 100\",\n\"type\": \"n8n-nodes-base.assignEmployee\",\n\"typeVersion\": 1,\n\"position\": [\n800,\n240\n],\n\"id\": \"\",\n\"credentials\": {\n\n}\n},\n{\n\"parameters\": {\n\"document_type\": \"INVOICE\",\n\"status\": \"validated_pending_approval\"\n},\n\"name\": \"First\",\n\"type\": \"n8n-nodes-base.statusTrigger\",\n\"typeVersion\": 1,\n\"position\": [\n240,\n240\n],\n\"webhookId\": \"\",\n\"id\": \"\",\n\"credentials\": {\n\n}\n},\n{\n\"parameters\": {\n\"doc_id\": \"={{$node[\\\"First\\\"].json[\\\"doc_id\\\"]}}\",\n\"todo\": \"approve\"\n},\n\"id\": \"\",\n\"name\": \"Approve/Reject Documents\",\n\"type\": \"n8n-nodes-base.approvereject\",\n\"typeVersion\": 1,\n\"position\": [\n800,\n400\n],\n\"credentials\": {\n\n}\n}\n],\n\"connections\": {\n\"&gt;5000?\": {\n\"main\": [\n[\n{\n\"node\": \"Assign Finance 5000\",\n\"type\": \"main\",\n\"index\": 0\n}\n],\n[\n{\n\"node\": \"&gt;100?\",\n\"type\": \"main\",\n\"index\": 0\n}\n]\n]\n},\n\"&gt;100?\": {\n\"main\": [\n[\n{\n\"node\": \"Assign Finance 100\",\n\"type\": \"main\",\n\"index\": 0\n}\n],\n[\n{\n\"node\": \"Approve/Reject Documents\",\n\"type\": \"main\",\n\"index\": 0\n}\n]\n]\n},\n\"First\": {\n\"main\": [\n[\n{\n\"node\": \"&gt;5000?\",\n\"type\": \"main\",\n\"index\": 0\n}\n]\n]\n}\n}\n</code></pre> <p>Second Approval workflow</p> <pre><code>{\n\"nodes\": [\n{\n\"parameters\": {\n\"document_type\": \"INVOICE\",\n\"status\": \"approved_pending_second_approval\"\n},\n\"name\": \"Second\",\n\"type\": \"n8n-nodes-base.statusTrigger\",\n\"typeVersion\": 1,\n\"position\": [\n600,\n520\n],\n\"webhookId\": \"\",\n\"id\": \"\",\n\"credentials\": {\n\n}\n},\n{\n\"parameters\": {\n\"selection\": \"group\",\n\"group\": \"\"\n},\n\"name\": \"Assign Head\",\n\"type\": \"n8n-nodes-base.assignEmployee\",\n\"typeVersion\": 1,\n\"position\": [\n980,\n360\n],\n\"id\": \"\",\n\"credentials\": {\n\n}\n},\n{\n\"parameters\": {\n\"selection\": \"group\",\n\"group\": \"\"\n},\n\"name\": \"Assign Finance\",\n\"type\": \"n8n-nodes-base.assignEmployee\",\n\"typeVersion\": 1,\n\"position\": [\n1160,\n520\n],\n\"id\": \"\",\n\"credentials\": {\n\n}\n},\n{\n\"parameters\": {\n\"doc_id\": \"={{$node[\\\"Second\\\"].json[\\\"doc_id\\\"]}}\",\n\"todo\": \"approve\"\n},\n\"id\": \"\",\n\"name\": \"Auto Approve\",\n\"type\": \"n8n-nodes-base.approvereject\",\n\"typeVersion\": 1,\n\"position\": [\n1160,\n700\n],\n\"credentials\": {\n\n}\n},\n{\n\"parameters\": {\n\"conditions\": {\n\"number\": [\n{\n\"value1\": \"={{$node[\\\"Second\\\"].json[\\\"fields_compact\\\"][\\\"total_amount\\\"]}}\",\n\"operation\": \"larger\",\n\"value2\": 100\n}\n]\n},\n\"combineOperation\": \"any\"\n},\n\"name\": \"&gt;100\",\n\"type\": \"n8n-nodes-base.if\",\n\"typeVersion\": 1,\n\"position\": [\n980,\n680\n],\n\"id\": \"\"\n},\n{\n\"parameters\": {\n\"conditions\": {\n\"number\": [\n{\n\"value1\": \"={{$json[\\\"fields_compact\\\"][\\\"total_amount\\\"]}}\",\n\"operation\": \"larger\",\n\"value2\": 5000\n}\n]\n},\n\"combineOperation\": \"any\"\n},\n\"name\": \"&gt;5000\",\n\"type\": \"n8n-nodes-base.if\",\n\"typeVersion\": 1,\n\"position\": [\n780,\n520\n],\n\"id\": \"\"\n}\n],\n\"connections\": {\n\"Second\": {\n\"main\": [\n[\n{\n\"node\": \"&gt;5000\",\n\"type\": \"main\",\n\"index\": 0\n}\n]\n]\n},\n\"&gt;100\": {\n\"main\": [\n[\n{\n\"node\": \"Assign Finance\",\n\"type\": \"main\",\n\"index\": 0\n}\n],\n[\n{\n\"node\": \"Auto Approve\",\n\"type\": \"main\",\n\"index\": 0\n}\n]\n]\n},\n\"&gt;5000\": {\n\"main\": [\n[\n{\n\"node\": \"Assign Head\",\n\"type\": \"main\",\n\"index\": 0\n}\n],\n[\n{\n\"node\": \"&gt;100\",\n\"type\": \"main\",\n\"index\": 0\n}\n]\n]\n}\n}\n}\n</code></pre>","tags":["Workflow\u00b2","Approval","DOC\u00b2"]},{"location":"example/workflow_mautic1/","title":"MAUTIC New Order Workflow","text":"<p>This workflow starts with a WooCommerce trigger node in \"Order created\" mode. The node needs a WooCommerce REST API login consisting of the client key, the client secret and the general WooCommerce API URL of your online store. For information on how to create a WooCommerce REST API login, see: WooCommerce REST API</p> <p></p> <p>When activated, general information is received by the node, which is then converted into a better form for us.</p> <p>To do this, we create a small JS script in the functionnode that maps the information to specific terms. Under \"item.billing\" in the part of the message the WooCommerce node receives, that contains the customer data.</p> <p>Edit JavaScript Code <pre><code>dict = {\n'first_name': item.billing.first_name,\n'last_name': item.billing.last_name,\n'email': item.billing.email,\n}\n\nreturn dict;\n</code></pre></p> <p>Since we are talking about orders here and on many webshops it is quite possible to place an order even as a non-registered user, we will consequently look if we already have a contact in MAUTIC with the given email and/or with the first and last name. To do this, we request all contacts via the MAUTIC Node. The MAUTIC node needs a normal login (username and password) and the base URL of your MAUTIC instance.</p> <p></p> <p>From the contact data received from MAUTIC, we now filter out the registered email addresses using the functionnode and a small javascript code and create a list of them. ( In this example we check only the used email address )</p> <p>Edit JavaScript Code <pre><code>thelist = []\n\nitems.forEach(function(item) {\nthelist.push(item['json']['fields']['all']['email'])\n})\n\nreturn {thelist}\n</code></pre></p> <p>With the following IF node we check whether the e-mail address used for the order occurs in the list from MAUTIC and act accordingly. For the check by means of the IF Node we must insert the variable data there with the help of so-called expressions. We do this by clicking on the gears and selecting \"Add Expression\".</p> <p></p> <p>This will open the following window where in the case of Value1 under Expression as in the screenshot below we will use {{ $json[\"thelist\"].join(', ') }}. Short explanation: Expressions are always specified in {{ }}. $json specifies that it gets the information when the specific node is activated by the previous one, and the content within [\"thelist\"] is what we want to use. .join(', ') specifies that it is a comma-separated list. (The expression will be highlighted in red and the bottom section will say that it could not be found. This is because the information can only be found if it currently exists. This can be tested during test runs but won't be shown during normal activation).</p> <p></p> <p>For Value2, the email address entered by the user when placing the order is passed with {{ $node[\"Normalize\"].json[\"email\"] }}. Here $node[\"Normalize\"] specifies the name of the node from which the information is obtained. (Needed because the Normalize Node is not the preceding node) .json[\"email\"] then again specifies that we want to use the value \"email\" of the note output.</p> <p></p> <p>If it is a new customer, it will be saved as a new MAUTIC contact. For this we need again a MAUTIC Node, which is this time on \"Contact\" and \"Create\". Depending on what information customers provide when ordering or what information you actually want to use, you can set the contact creation individually. In the current example, we will use the customer's first and last name and email to create a MAUTIC contact. According to this we have to insert expressions in the MAUTIC node again to use the correct data. We pull the information from the Normalize Node as above and can therefore use the same expression {{ $node[\"Normalize\"].json[\"Information\"] }}. (For information we have to enter the desired name. In this example then email, first_name or last_name.</p> <p></p> <p></p> <p>To send the person a welcome email, we use the contact ID we got back during the contact creation in the preceding MAUTIC node. There we specify Contact and Send Email, set which email should be sent by MAUTIC and specify the contact ID by expression in Contact ID.</p> <p></p> <p>You can download the workflow as javascriptfile here and add it on your Workflow\u00b2 instance using drag&amp;drop, or by opening the file in an editor and copy&amp;paste the code directly into Workflow\u00b2.</p>","tags":["Workflow\u00b2","MAUTIC","How-To"]},{"location":"example/workflow_mautic2/","title":"MAUTIC New Customer Workflow","text":"<p>This workflow starts with a WooCommerce trigger node in \"Customer created\" mode. The node needs a WooCommerce REST API login consisting of the client key, the client secret and the general WooCommerce API URL of your online store. For information on how to create a WooCommerce REST API login, see: WooCommerce REST API</p> <p></p> <p>When triggered, the node receives general information about the registration, including the new user's first and last name and email address. We then convert this information into a more convenient form for further processing. To do this, we create a small JS script in the function node that assigns the information to specific terms. Under \"item.billing\" in the part of the message that the WooCommerce Node receives, the customer data is stored.</p> <p>Edit JavaScript Code <pre><code>dict = {\n'first_name': item.billing.first_name,\n'last_name': item.billing.last_name,\n'email': item.billing.email,\n}\n\nreturn dict;\n</code></pre></p> <p>With the help of this we will now create a new contact in MAUTIC. To do this, we first need a MAUTIC login. The MAUTIC node needs a normal login (username and password) and the base URL of the MAUTIC instance. After that we need to add for this in the MAUTIC Node in the respective fields with the help of the gears so-called \"Expressions\" and define generally, so that the MAUTIC Node also really uses the data of the respective new customer and not always the same. Here it is to be noted: Expressions are always written in double curly brackets. {{ Expression }} The $json indicates that the intended information in the \"Json\" is part of the message that the node gets when it is called. And depending on the wanted information and the name we set for it before, the square bracket after it is filled accordingly. (Here: [\"email\"] )</p> <p>(The expression will be highlighted in red and in the lower section it will say that it could not be found. This is because the information can only be found if it exists. This can be tested during test runs. For the screenshot, the previous part has already been executed once to show you the filled version. Below you will see how it looks in red if no information has been transferred yet).</p> <p></p> <p></p> <p>In the current example, the new contact will receive 10 points for registering and a welcome email. For this we have to enter the contact ID of the just created new contact in the next MAUTIC node. This ID is returned to us as a response when the contact is created and is therefore also transferred to the next node when it is triggered. Now simply add an expression to the Contact ID and start it as shown in the screenshot with {{ $json[\"id\"] }} and you are done. (The same applies to the Send Email MAUTIC Node).</p> <p></p> <p></p> <p>It is then saved in SugarCRM as a contact (or optionally as a lead). The SugarCRM login is handled in the same way as MAUTIC. So we need a username and the corresponding password as well as the base URL of the SugarCRM instance. In the node we have to specify the expressions a little bit different than before, because information like first and last name and email are not transferred directly. {{ $node[\"Normalize\"].json[\"first_name\"] }} In the first name example here, we use $node[\"name of node\"] to specify which node it gets the data from. In this case it is the node \"Normalize\". But this can be easily changed. the part .json[\"first_name\"] is then again as already explained above.</p> <p></p> <p></p> <p>You can download the workflow as javascriptfile here and add it on your Workflow\u00b2 instance using drag&amp;drop, or by opening the file in an editor and copy&amp;paste the code directly into Workflow\u00b2.</p>","tags":["Workflow\u00b2","MAUTIC","How-To"]},{"location":"example/export-to-gdrive/","title":"Export DOC\u00b2 to Google Drive","text":"<ul> <li>Create blank workflow</li> <li>Configure Doc2AppStatusTrigger Node</li> <li>Configure Google Drive Node</li> <li>Activate Workflow</li> </ul>","tags":["Workflow\u00b2","Example","DOC\u00b2","Export","Google Drive"]},{"location":"example/export-to-gdrive/activate-workflow/","title":"Activate Workflow","text":"<p>Click Execute Workflow button on main screen and test by exporting another sample document.</p> <p></p>","tags":["Workflow\u00b2","Example","DOC\u00b2Export","Google Drive"]},{"location":"example/export-to-gdrive/configure-doc2-status-trigger/","title":"Configuring DOC\u00b2 App Status Trigger node","text":"","tags":["Workflow\u00b2","Example","DOC\u00b2","Export","Google Drive"]},{"location":"example/export-to-gdrive/configure-doc2-status-trigger/#getting-doc2-api-key","title":"Getting DOC\u00b2 API Key","text":"<p>Open DOC\u00b2, click Settings from the top right menu bar and then on API option</p> <p></p> <p></p> <p>Copy the API Key from below opened screen</p> <p></p>","tags":["Workflow\u00b2","Example","DOC\u00b2","Export","Google Drive"]},{"location":"example/export-to-gdrive/configure-doc2-status-trigger/#configure-node","title":"Configure Node","text":"<p>Click the  button at top right corner and then search for Doc2App Status Trigger</p> <p></p> <p>Drag the node to the workflow. It will open configuration dialog as show below.</p> <p></p> <p>Add the Doc2API key to the credentials and select Pending Export for the status.</p> <p></p> <p>Click the Listen for Event button to listen for exported documents</p> <p>Open Doc2App, upload a sample document, validate and export it.</p> <p></p> <p>You should have result as show above. This means that the node has been configured properly.</p>","tags":["Workflow\u00b2","Example","DOC\u00b2","Export","Google Drive"]},{"location":"example/export-to-gdrive/configure-gdrive-node/","title":"Adding and Configuring Google Drive module","text":"<p>Add the Google Drive node to the workflow as described for the Doc2StatusTrigger</p> <p>Select OAuth2 for the Authentication method</p> <p></p> <p>Click Add New for the Credentials for Google, it will open a dialog as shown below.</p> <p></p> <p>Copy the OAuth Redirect URL and use this to create new google OAuth2.0 app as shown in the tutorial below.</p> <p>Setting up OAuth 2.0</p> <p></p> <p></p> <p></p> <p></p> <p>Copy the Client ID and Client Secret for newly created oauth client and add it to the Google Drive module connection screen as show above</p> <p>Select File for the Resource option and Upload as operation.</p> <p>For the file content we will send the full extracted JSON returned from previous module.</p> <p>To convert the json response to string we are going to use below expression for file content</p> <pre><code>{{JSON.stringify($node[\"Status Trigger\"].json)}}\n</code></pre> <p>For the filename we will extract the filename from json returned from previous module.</p> <pre><code>{{$node[\"Status Trigger\"].json[\"filename\"].replace('.pdf','.json') }}\n</code></pre> <p>Click Execute button and you should see output like below.</p> <p></p> <p>This means that document has been uploaded to Google Drive successfully.</p>","tags":["Workflow\u00b2","Example","DOC\u00b2Export","Google Drive"]},{"location":"example/export-to-gdrive/create-blank-workflow/","title":"Create Blank Workflow","text":"<p>Go to the Apps Screen and open Workflow\u00b2 by clicking the Open Workflow\u00b2 button</p> <p></p> <p>This will open the Workflow\u00b2 App as shown below</p> <p></p> <p>Click the New blank workflow button on the upper right corner to open the workflow blank designer screen</p> <p></p> <p>Rename the workflow to some appropriate name by clicking the workflow name at top left corner. In our case we are renaming it to Doc2App To GDrive</p> <p></p> <p>Deactivate the default Start  node by clicking the Activate/Deactivate button above the node.</p> <p></p> <p>You will have a blank workflow like below</p> <p></p>","tags":["Workflow\u00b2","Example","DOC\u00b2Export","Google Drive"]},{"location":"example/weather/","title":"Workflows for Weather Forecast","text":"<ul> <li>Weather in the City</li> <li>Rain</li> </ul>","tags":["Workflow\u00b2","Example","Weather","Webhook","Cron"]},{"location":"example/weather/weather/","title":"Weather","text":"<p>Example for a Webhook and reply with the Weather in the City</p> <p></p>","tags":["Workflow\u00b2","Example","Weather","Webhook"]},{"location":"example/weather/weather/#how-to-use-this-workflow","title":"How to use this workflow","text":"<p>Instructions</p> <ol> <li>Copy the workflow</li> <li>Navigate to your Workflow editor</li> <li>Click anywhere in the Workflow\u00b2 window</li> <li>Paste the code (ctrl + v or cmd + v)</li> </ol> <pre><code>{\n\"nodes\": [\n{\n\"name\": \"OpenWeatherMap\",\n\"type\": \"n8n-nodes-base.openWeatherMap\",\n\"position\": [\n900,\n300\n],\n\"parameters\": {\n\"cityName\": \"={{ $json[\\\"city\\\"] }}\",\n\"language\": \"en\"\n},\n\"credentials\": {\n\"openWeatherMapApi\": \"\"\n},\n\"typeVersion\": 1\n},\n{\n\"name\": \"Webhook GET\",\n\"type\": \"n8n-nodes-base.webhook\",\n\"position\": [\n500,\n300\n],\n\"webhookId\": \"a31f0bbd-a583-470e-9a1e-29a9ce778122\",\n\"parameters\": {\n\"path\": \"weather\",\n\"options\": {\n\"responsePropertyName\": \"data\"\n},\n\"responseMode\": \"lastNode\"\n},\n\"typeVersion\": 1\n},\n{\n\"name\": \"Set City\",\n\"type\": \"n8n-nodes-base.set\",\n\"position\": [\n700,\n300\n],\n\"parameters\": {\n\"values\": {\n\"string\": [\n{\n\"name\": \"city\",\n\"value\": \"={{ $json[\\\"query\\\"][\\\"parameter\\\"] || 'berlin,de' }}\"\n}\n]\n},\n\"options\": {}\n},\n\"typeVersion\": 1\n},\n{\n\"name\": \"Create Response\",\n\"type\": \"n8n-nodes-base.set\",\n\"position\": [\n1100,\n300\n],\n\"parameters\": {\n\"values\": {\n\"string\": [\n{\n\"name\": \"data\",\n\"value\": \"=It has {{$json[\\\"main\\\"][\\\"temp\\\"]}}\\\\xE2\\\\x84\\\\x83  and feels like {{$json[\\\"main\\\"][\\\"feels_like\\\"]}}\\\\xE2\\\\x84\\\\x83  in {{$json[\\\"name\\\"]}}\"\n}\n]\n},\n\"options\": {}\n},\n\"typeVersion\": 1\n}\n],\n\"connections\": {\n\"Set City\": {\n\"main\": [\n[\n{\n\"node\": \"OpenWeatherMap\",\n\"type\": \"main\",\n\"index\": 0\n}\n]\n]\n},\n\"Webhook GET\": {\n\"main\": [\n[\n{\n\"node\": \"Set City\",\n\"type\": \"main\",\n\"index\": 0\n}\n]\n]\n},\n\"OpenWeatherMap\": {\n\"main\": [\n[\n{\n\"node\": \"Create Response\",\n\"type\": \"main\",\n\"index\": 0\n}\n]\n]\n}\n}\n}\n</code></pre>","tags":["Workflow\u00b2","Example","Weather","Webhook"]},{"location":"example/weather/weather_rain/","title":"Weather","text":"<p>Example of a cronjob workflow to send a weather forecast by email when it rains</p> <p></p>","tags":["Workflow\u00b2","Example","Weather","Cron"]},{"location":"example/weather/weather_rain/#how-to-use-this-workflow","title":"How to use this workflow","text":"<p>Instructions</p> <ol> <li>Copy the workflow</li> <li>Navigate to your Workflow editor</li> <li>Click anywhere in the Workflow\u00b2 window</li> <li>Paste the code (ctrl + v or cmd + v)</li> </ol> <pre><code>{\n\"id\": \"4\",\n\"name\": \"Email me if it's going to rain\",\n\"nodes\": [\n{\n\"name\": \"Start\",\n\"type\": \"n8n-nodes-base.start\",\n\"position\": [\n360,\n300\n],\n\"parameters\": {},\n\"typeVersion\": 1\n},\n{\n\"name\": \"OpenWeatherMap\",\n\"type\": \"n8n-nodes-base.openWeatherMap\",\n\"position\": [\n530,\n300\n],\n\"parameters\": {\n\"zipCode\": \"90210\",\n\"operation\": \"5DayForecast\",\n\"locationSelection\": \"zipCode\"\n},\n\"credentials\": {\n\"openWeatherMapApi\": \"OpenWeatherMap API Key\"\n},\n\"typeVersion\": 1\n},\n{\n\"name\": \"IF\",\n\"type\": \"n8n-nodes-base.if\",\n\"position\": [\n840,\n300\n],\n\"parameters\": {\n\"conditions\": {\n\"string\": [\n{\n\"value1\": \"={{$node[\\\"OpenWeatherMap\\\"].json[\\\"list\\\"][0][\\\"weather\\\"][0][\\\"description\\\"]}},{{$node[\\\"OpenWeatherMap\\\"].json[\\\"list\\\"][1][\\\"weather\\\"][0][\\\"description\\\"]}},{{$node[\\\"OpenWeatherMap\\\"].json[\\\"list\\\"][2][\\\"weather\\\"][0][\\\"description\\\"]}},{{$node[\\\"OpenWeatherMap\\\"].json[\\\"list\\\"][3][\\\"weather\\\"][0][\\\"description\\\"]}},{{$node[\\\"OpenWeatherMap\\\"].json[\\\"list\\\"][4][\\\"weather\\\"][0][\\\"description\\\"]}}\",\n\"value2\": \"=rain\",\n\"operation\": \"contains\"\n},\n{\n\"value1\": \"={{$node[\\\"OpenWeatherMap\\\"].json[\\\"list\\\"][0][\\\"weather\\\"][0][\\\"description\\\"]}},{{$node[\\\"OpenWeatherMap\\\"].json[\\\"list\\\"][1][\\\"weather\\\"][0][\\\"description\\\"]}},{{$node[\\\"OpenWeatherMap\\\"].json[\\\"list\\\"][2][\\\"weather\\\"][0][\\\"description\\\"]}},{{$node[\\\"OpenWeatherMap\\\"].json[\\\"list\\\"][3][\\\"weather\\\"][0][\\\"description\\\"]}},{{$node[\\\"OpenWeatherMap\\\"].json[\\\"list\\\"][4][\\\"weather\\\"][0][\\\"description\\\"]}}\",\n\"value2\": \"snow\",\n\"operation\": \"contains\"\n},\n{\n\"value1\": \"={{$node[\\\"OpenWeatherMap\\\"].json[\\\"list\\\"][0][\\\"weather\\\"][0][\\\"description\\\"]}},{{$node[\\\"OpenWeatherMap\\\"].json[\\\"list\\\"][1][\\\"weather\\\"][0][\\\"description\\\"]}},{{$node[\\\"OpenWeatherMap\\\"].json[\\\"list\\\"][2][\\\"weather\\\"][0][\\\"description\\\"]}},{{$node[\\\"OpenWeatherMap\\\"].json[\\\"list\\\"][3][\\\"weather\\\"][0][\\\"description\\\"]}},{{$node[\\\"OpenWeatherMap\\\"].json[\\\"list\\\"][4][\\\"weather\\\"][0][\\\"description\\\"]}}\",\n\"value2\": \"sleet\",\n\"operation\": \"contains\"\n},\n{\n\"value1\": \"={{$node[\\\"OpenWeatherMap\\\"].json[\\\"list\\\"][0][\\\"weather\\\"][0][\\\"description\\\"]}},{{$node[\\\"OpenWeatherMap\\\"].json[\\\"list\\\"][1][\\\"weather\\\"][0][\\\"description\\\"]}},{{$node[\\\"OpenWeatherMap\\\"].json[\\\"list\\\"][2][\\\"weather\\\"][0][\\\"description\\\"]}},{{$node[\\\"OpenWeatherMap\\\"].json[\\\"list\\\"][3][\\\"weather\\\"][0][\\\"description\\\"]}},{{$node[\\\"OpenWeatherMap\\\"].json[\\\"list\\\"][4][\\\"weather\\\"][0][\\\"description\\\"]}}\",\n\"value2\": \"hail\",\n\"operation\": \"contains\"\n},\n{\n\"value1\": \"={{$node[\\\"OpenWeatherMap\\\"].json[\\\"list\\\"][0][\\\"weather\\\"][0][\\\"description\\\"]}},{{$node[\\\"OpenWeatherMap\\\"].json[\\\"list\\\"][1][\\\"weather\\\"][0][\\\"description\\\"]}},{{$node[\\\"OpenWeatherMap\\\"].json[\\\"list\\\"][2][\\\"weather\\\"][0][\\\"description\\\"]}},{{$node[\\\"OpenWeatherMap\\\"].json[\\\"list\\\"][3][\\\"weather\\\"][0][\\\"description\\\"]}},{{$node[\\\"OpenWeatherMap\\\"].json[\\\"list\\\"][4][\\\"weather\\\"][0][\\\"description\\\"]}}\",\n\"value2\": \"storm\",\n\"operation\": \"contains\"\n},\n{\n\"value1\": \"={{$node[\\\"OpenWeatherMap\\\"].json[\\\"list\\\"][0][\\\"weather\\\"][0][\\\"description\\\"]}},{{$node[\\\"OpenWeatherMap\\\"].json[\\\"list\\\"][1][\\\"weather\\\"][0][\\\"description\\\"]}},{{$node[\\\"OpenWeatherMap\\\"].json[\\\"list\\\"][2][\\\"weather\\\"][0][\\\"description\\\"]}},{{$node[\\\"OpenWeatherMap\\\"].json[\\\"list\\\"][3][\\\"weather\\\"][0][\\\"description\\\"]}},{{$node[\\\"OpenWeatherMap\\\"].json[\\\"list\\\"][4][\\\"weather\\\"][0][\\\"description\\\"]}}\",\n\"value2\": \"drizzle\",\n\"operation\": \"contains\"\n},\n{\n\"value1\": \"={{$node[\\\"OpenWeatherMap\\\"].json[\\\"list\\\"][0][\\\"weather\\\"][0][\\\"description\\\"]}},{{$node[\\\"OpenWeatherMap\\\"].json[\\\"list\\\"][1][\\\"weather\\\"][0][\\\"description\\\"]}},{{$node[\\\"OpenWeatherMap\\\"].json[\\\"list\\\"][2][\\\"weather\\\"][0][\\\"description\\\"]}},{{$node[\\\"OpenWeatherMap\\\"].json[\\\"list\\\"][3][\\\"weather\\\"][0][\\\"description\\\"]}},{{$node[\\\"OpenWeatherMap\\\"].json[\\\"list\\\"][4][\\\"weather\\\"][0][\\\"description\\\"]}}\",\n\"value2\": \"downpour\",\n\"operation\": \"contains\"\n}\n]\n},\n\"combineOperation\": \"any\"\n},\n\"typeVersion\": 1\n},\n{\n\"name\": \"Send Email\",\n\"type\": \"n8n-nodes-base.emailSend\",\n\"position\": [\n1030,\n200\n],\n\"parameters\": {\n\"text\": \"=Forecast:\\n{{$node[\\\"Function\\\"].json[\\\"list\\\"][0][\\\"hour\\\"]}} - {{$node[\\\"OpenWeatherMap\\\"].json[\\\"list\\\"][0][\\\"weather\\\"][0][\\\"description\\\"]}}\\n{{$node[\\\"Function\\\"].json[\\\"list\\\"][1][\\\"hour\\\"]}} - {{$node[\\\"OpenWeatherMap\\\"].json[\\\"list\\\"][1][\\\"weather\\\"][0][\\\"description\\\"]}}\\n{{$node[\\\"Function\\\"].json[\\\"list\\\"][2][\\\"hour\\\"]}} - {{$node[\\\"OpenWeatherMap\\\"].json[\\\"list\\\"][2][\\\"weather\\\"][0][\\\"description\\\"]}}\\n{{$node[\\\"Function\\\"].json[\\\"list\\\"][3][\\\"hour\\\"]}} - {{$node[\\\"OpenWeatherMap\\\"].json[\\\"list\\\"][3][\\\"weather\\\"][0][\\\"description\\\"]}}\\n{{$node[\\\"Function\\\"].json[\\\"list\\\"][4][\\\"hour\\\"]}} - {{$node[\\\"OpenWeatherMap\\\"].json[\\\"list\\\"][4][\\\"weather\\\"][0][\\\"description\\\"]}}\",\n\"options\": {},\n\"subject\": \"It's going to rain today\",\n\"toEmail\": \"changeme@example.com\",\n\"fromEmail\": \"n8n@example.com\"\n},\n\"credentials\": {\n\"smtp\": \"Amazon SES\"\n},\n\"typeVersion\": 1\n},\n{\n\"name\": \"Cron\",\n\"type\": \"n8n-nodes-base.cron\",\n\"position\": [\n360,\n160\n],\n\"parameters\": {\n\"triggerTimes\": {\n\"item\": [\n{\n\"hour\": 7\n}\n]\n}\n},\n\"typeVersion\": 1\n},\n{\n\"name\": \"Function\",\n\"type\": \"n8n-nodes-base.function\",\n\"position\": [\n680,\n300\n],\n\"parameters\": {\n\"functionCode\": \"for (let i = 0; i &lt; items[0].json.list.length; i++) {\\n  var h = new Date(items[0].json.list[i].dt * 1000).getHours();\\n  var m = new Date(items[0].json.list[i].dt * 1000).getMinutes();\\n  h = (h&lt;10) ? '0' + h : h;\\n  m = (m&lt;10) ? '0' + m : m;\\n\\n  var output = h + ':' + m;\\n  items[0].json.list[i].hour = output;\\n}\\nreturn items\\n\"\n},\n\"typeVersion\": 1\n},\n{\n\"name\": \"NoOp\",\n\"type\": \"n8n-nodes-base.noOp\",\n\"position\": [\n1030,\n370\n],\n\"parameters\": {},\n\"typeVersion\": 1\n}\n],\n\"active\": true,\n\"settings\": {},\n\"connections\": {\n\"IF\": {\n\"main\": [\n[\n{\n\"node\": \"Send Email\",\n\"type\": \"main\",\n\"index\": 0\n}\n],\n[\n{\n\"node\": \"NoOp\",\n\"type\": \"main\",\n\"index\": 0\n}\n]\n]\n},\n\"Cron\": {\n\"main\": [\n[\n{\n\"node\": \"OpenWeatherMap\",\n\"type\": \"main\",\n\"index\": 0\n}\n]\n]\n},\n\"Start\": {\n\"main\": [\n[\n{\n\"node\": \"OpenWeatherMap\",\n\"type\": \"main\",\n\"index\": 0\n}\n]\n]\n},\n\"Function\": {\n\"main\": [\n[\n{\n\"node\": \"IF\",\n\"type\": \"main\",\n\"index\": 0\n}\n]\n]\n},\n\"OpenWeatherMap\": {\n\"main\": [\n[\n{\n\"node\": \"Function\",\n\"type\": \"main\",\n\"index\": 0\n}\n]\n]\n}\n}\n}\n</code></pre>","tags":["Workflow\u00b2","Example","Weather","Cron"]},{"location":"example/workflows/","title":"Workflow\u00b2 Examples","text":"<p>If you enjoyed creating your first workflow and have successfully completed the first challenge, here are some more examples for practice:</p> <ul> <li>Rename Keys </li> <li>Weather</li> <li>Gmail Import to DOC\u00b2</li> <li>Outlook Import to DOC\u00b2</li> <li>Approval with DOC\u00b2</li> <li>DOC\u00b2 to Excel</li> <li>New Order Workflow</li> <li>New Customer Workflow</li> <li>DOC\u00b2 to Google Drive</li> </ul>","tags":["DOC\u00b2","Workflow","Examples"]},{"location":"flow2/","title":"Welcome","text":"<p>This is the documentation for FLOW\u00b2, the intelligent solution for digitizing Documents.</p> <p>Every business process starts, contains or ends with a document. Regardless of whether in paper form or already as a file. This is called unstructured data. Although the information is on or in the document, it cannot be automatically integrated into the work processes, as it is simply not recognized by all software.</p>","tags":["FLOW\u00b2","Introduction","Digitizing Documents"]},{"location":"flow2/#what-is-flow2","title":"What is FLOW\u00b2?","text":"<p>FLOW\u00b2 is the latest software and solution for document capture that was developed by Polydocs GmbH. It is a completely cloud-based solution that uses Artificial Intelligence and Machine Learning to precisely identify, classify, analyze and read your documents. No matter if paper or file. FLOW\u00b2 learns independently, the level of experience increases with each document. FLOW\u00b2 uses swarm intelligence for this.</p> <p>The Advantages of FLOW\u00b2 at a glance:</p> <ul> <li>Recognizes the required data \u2013 even handwritten information and information in tables reliably and is self-learning, even through corrections by the user</li> <li>With swarm intelligence, you benefit continuously from the experiences of other customers</li> <li>Improves the accuracy and quality of the recognized data</li> <li>Enables an automated process without ongoing corrections and interventions</li> <li>Simple intuitive interface</li> <li>No IT resources / specialists required</li> <li>Ensures a robust and consistent work process</li> <li>No sensitive data is stored or shared</li> <li>Saves time in the digital inbox</li> <li>Reduces errors caused by manual processing</li> </ul>","tags":["FLOW\u00b2","Introduction","Digitizing Documents"]},{"location":"flow2/#how-do-you-use-flow2","title":"How do you use FLOW\u00b2:","text":"<ul> <li>Scanning and Recognition of all types of documents (Invoices, Contracts, Forms, Medical Prescriptions etc.)</li> <li>Reliable extraction of the data in the document and integration and further processing in the ERP, RPA or CRM system)</li> <li>Validation of the extracted data and verification against other systems from internal and public sources</li> <li>Integration into your system landscape (e.g. ERP System, Document Management, Workflow System etc)</li> </ul>","tags":["FLOW\u00b2","Introduction","Digitizing Documents"]},{"location":"flow2/#why-flow2-is-just-right-for-you","title":"Why FLOW\u00b2 is just right for you","text":"<ul> <li> <p>Many companies have recognized that processing incoming invoices, for example, can be very time-consuming. They are trying to increase productivity and optimize       the purchase-to-pay process by introducing products for the \u201cdigitization\u201d of invoices.</p> </li> <li> <p>In addition, FLOW\u00b2 uses swarm intelligence. What does that mean? You benefit from the experiences of other customers and their \u201clearning curve\u201d without sharing sensitive      data. With the cloud-based rule engine, we ensure continuous improvement of the application. You don\u2019t need any developers or data scientists, because the system learns from the input of the user and the process runs without interruptions.</p> </li> <li> <p>With the help of deep learning algorithms, not only simple header data of a document can be recorded, but also complicated structures such as tables. Of course, not      only invoices are processed, but all types of documents. Regardless of whether it is waybills, membership applications, medical prescriptions and many more.</p> </li> </ul>","tags":["FLOW\u00b2","Introduction","Digitizing Documents"]},{"location":"flow2/deployment/","title":"Deployment","text":"","tags":["FLOW\u00b2","Deployment"]},{"location":"flow2/deployment/#how-to-deploy-flow2","title":"How to deploy FLOW\u00b2","text":"<p>All you need is the URL and the Login Details received from us.</p> <p>The Login Details have admin rights.</p>","tags":["FLOW\u00b2","Deployment"]},{"location":"flow2/deployment/#prerequisites","title":"Prerequisites","text":"<p>Running computer connected to internet</p> <p>The following screen will be shown when you go to your URL:</p> <p></p> <p>Enter the Login Details provided by us and click on Login button or press Enter to login.</p> <p>After getting logged in successfully, you will see the following screen. It means all is set, you are ready to go.</p> <p></p>","tags":["FLOW\u00b2","Deployment"]},{"location":"flow2/flow2-onboarding-guide/","title":"FLOW\u00b2 Onboarding Guide","text":"<p>This guide will help you learn the basics of FLOW\u00b2 get you up and running with an IPS that will max out your productivity.</p>","tags":["FLOW\u00b2","Onboarding Guide"]},{"location":"flow2/flow2-onboarding-guide/#performing-initial-setup","title":"Performing Initial Setup","text":"<p>First, let's cover how to access and configure your system.</p> <p>FLOW\u00b2 does not work in Tenant. All customer use the same cluster. Our Kubernetes Cluster is hosted in Frankfurt / Germany.</p> <p>To access the system:</p> <ol> <li>Contact your Polydocs GmbH or reach out to support@polydocs.io to create a Organisation.</li> <li>Log in with the credentials provided in your onboarding email.</li> </ol> <p>Tip: Can't find the onboarding email? Go to your login screen and click the Forgot your password? link.</p>","tags":["FLOW\u00b2","Onboarding Guide"]},{"location":"flow2/home/","title":"User Dashboard","text":"<p>After logging in with your user you are redirected to the DASHBOARD homepage of FLOW\u00b2.</p> <p>This is the main page and overview where you can find your documents recently accessed, recently created and your applied favorites. You can also find an overview of all important items in the left sidebar.</p> <p></p> <p>The left sidebar with buttons and selectors is for accessing:</p> <p>Start now a free 30 days trail</p> <ul> <li>Documents</li> <li>File cabinets and indexes that serve structural classification (such as the folders in a computer's file manager).</li> <li>Tags, which are oriented to the workflow status.</li> </ul> <p>In the system selection at the top right you will find the area for configuration.</p>","tags":["FLOW\u00b2","Homepage","Dashboard"]},{"location":"flow2/import-from-doc2/","title":"How to import documents from DOC\u00b2","text":"","tags":["FLOW\u00b2","DOC\u00b2","Importing documents"]},{"location":"flow2/import-from-doc2/#to-import-documents-from-doc2-you-need-to-add-the-desired-document-type-and-create-a-workflow-for-it-first","title":"To import documents from DOC\u00b2 you need to add the desired document type and create a workflow for it first.","text":"<p>Go to System - setup - Workflows</p> <p></p> <p>and klick on Document types</p> <p></p> <p>In the next step you need to create the desired and thus new document type</p> <p></p> <p>if you want to process e.g. received invoices add document type invoice received</p> <p></p> <p>and click on Save</p> <p></p> <p>You will receive a corresponding popup message as soon as the new document type has been successfully created.</p> <p>Your dashboard will remain empty until the first documents have been exported from DOC\u00b2 and imported into FLOW\u00b2.</p> <p></p> <p>All steps for importing from DOC\u00b2 can be found here.</p> <p>After successful import you will see the documents on your dashboard under recently created.</p> <p></p> <p>Clicking View details opens a preview of the imported documents including the date of processing.</p> <p></p> <p>If you click directly on the document name on the dashboard you will get the following view:</p> <p></p> <p>If you open a document this way it will show up on dashboard unter recently accessed.</p> <p></p>","tags":["FLOW\u00b2","DOC\u00b2","Importing documents"]},{"location":"flow2/introduction/","title":"Getting Started","text":"<p>is a document management system (DMS).</p> <p>Its purpose is to store, search and categorize files so that the context and business information of documents is preserved.</p> <p>The content of these files can be read by OCR.</p> <p>Documents can be previewed, labeled, signed, sent and received.</p> <p>It provides a workflow system to automate recurring tasks, role-based access control, and a REST API to call appropriate functions programmatically</p>","tags":["FLOW\u00b2","Getting Started","document management system (DMS)"]},{"location":"flow2/introduction/#flow2-features","title":"Flow\u00b2 Features","text":"<ul> <li>Versioning of documents</li> <li>User-defined document metadata</li> <li>Documents can be uploaded from various sources</li> <li>Advanced access control system</li> <li>Previews for many file formats</li> <li>Office document format support</li> <li>Full text search</li> <li>Configurable grouping of documents</li> <li>Automatic OCR processing</li> <li>Multilingual user interface</li> <li>Keep track of the status of documents, along with the log of</li> <li>of previous status changes</li> <li>Use workflow engine to automate business processes</li> <li>Complete event tracking system</li> <li>Configurable authentication system</li> <li>Automatic extraction of file metadata</li> <li>Color-coded tags</li> <li>Batch uploads</li> <li>Support for multi-page documents</li> </ul>","tags":["FLOW\u00b2","Getting Started","document management system (DMS)"]},{"location":"flow2/introduction/#definition-of-terms","title":"Definition of terms","text":"","tags":["FLOW\u00b2","Getting Started","document management system (DMS)"]},{"location":"flow2/introduction/#metadata","title":"Metadata","text":"<p>Metadata is key information used for classification and easy access of the document management system to the documents. The information relates to the relevant content of the file. It can be an invoice number, the date of a document or the type of document, e.g. \"incoming invoice\".</p>","tags":["FLOW\u00b2","Getting Started","document management system (DMS)"]},{"location":"flow2/introduction/#tags","title":"Tags","text":"<p>Tags (keywords) make it easy to identify documents. You can use colors, for example, to make tagged documents easy to find in the workflow.</p>","tags":["FLOW\u00b2","Getting Started","document management system (DMS)"]},{"location":"flow2/introduction/#workflow","title":"Workflow","text":"<p>Workflows are a collection of states, transitions (between states), actions (to be taken when a transition occurs), and Triggers (that cause a transition to occur).</p>","tags":["FLOW\u00b2","Getting Started","document management system (DMS)"]},{"location":"flow2/introduction/#transitions","title":"Transitions","text":"<p>Transitions are used to move documents from one state to another. In this way, a document is taken from 0% completion to 30% completion to 100% completion.</p> <p>Transitions always have an initial state and a target state. Transitions do not have to be linear (e.g., 10% &gt; 20% &gt; 30%, etc.) and can have any initial or target state. A workflow can have as many transitions as you need. This allows an unlimited number of combinations of states, transitions, and actions, and allows full customization to meet the needs of your workflow process.</p>","tags":["FLOW\u00b2","Getting Started","document management system (DMS)"]},{"location":"flow2/introduction/#acl-access-control-list","title":"ACL - Access Control List","text":"<p>An Access Control List (ACL) is a list of permissions associated with a system resource. An ACL defines which users or system processes are granted access to objects and which operations are allowed with certain objects. We can select elements (workflows, states, documents, indexes, file cabinets, tags) and then select the group and permissions specific to this object.</p>","tags":["FLOW\u00b2","Getting Started","document management system (DMS)"]},{"location":"flow2/introduction/#ocr-optical-character-recognition","title":"OCR - Optical Character Recognition","text":"<p>Optical Character Recognition is the electronic or mechanical conversion of images of typed, handwritten or printed text into machine encoded text, whether from a scanned document or a photograph of a document.</p>","tags":["FLOW\u00b2","Getting Started","document management system (DMS)"]},{"location":"flow2/metadata/","title":"Metadata","text":"<p>Metadata is key information used for classification and easy access of the document management system to the documents. The information relates to the relevant content of the file. It can be an invoice number, the date of a document or the type of document, e.g. \"incoming invoice\".</p>","tags":["FLOW\u00b2","Metadata"]},{"location":"flow2/metadata/#how-to-create-meta-data","title":"How to create meta data","text":"<p>The prerequisite for this is your ERP master data in an Excel or xls file including e.g.</p> <ul> <li>Vendor ID</li> <li>Vendor name</li> <li>IBAN</li> <li>VAT No</li> <li>Payment terms</li> <li>Currency</li> </ul> <p>This master data is used to complete and validate the meta data to be stored for the invoice.</p> <ul> <li>The REP solution allows the admin user to update this master data to the REP solution.</li> <li>The ERP master data is sometimes not unique or complete, especially for older suppliers. Therefore, not all information can always be added.</li> <li>If the master data is not completely filled or is not unique, the Admin will complete the metadata obtained from it.</li> <li>Payment terms: The PC from the master data with the best discount is used to calculate the due date from the invoice date. This can be overridden by the admin.</li> </ul> <p></p> <p>Go to System - Setup - Metadata types</p> <p>If you use our DOC\u00b2 service the following index fields are going to be extracted and the meta data must be created accordingly and would looks like this:</p>","tags":["FLOW\u00b2","Metadata"]},{"location":"flow2/metadata/#for-document-type-invoice","title":"For Document Type INVOICE","text":"DOC\u00b2 FLOW\u00b2 INVOICE_NUMBER InvoiceNumber INVOICE_DATE InvoiceDate DELIVERY_DATE DeliveryDate PURCHASE_ORDER PurchaseOrder PAYMENT_TERMS PaymentTerms TAX_RATE VatPercent TAX_AMOUNT VATAmount NET_AMOUNT NetAmount TOTAL_AMOUNT TotalAmount CURRENCY Currency VENDOR_ID SupplierID VENDOR_NAME SupplierName IBAN_EXTRACTED AccountNumber VAT_NO_EXTRACTED VATRegNo ACCOUNTING_ENTITY AccountingEntityID CORRELATION_ID AlternateDocumentID <p>Continue like this until all metadata types are created.</p>","tags":["FLOW\u00b2","Metadata"]},{"location":"flow2/settings-system-setup/","title":"System Setup","text":"","tags":["FLOW\u00b2","System Setup"]},{"location":"flow2/settings-system-setup/#here-you-can-configure-all-aspects-of-the-system","title":"Here you can configure all aspects of the system.","text":"<p>/doc2/flow2/metadata/</p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p>","tags":["FLOW\u00b2","System Setup"]},{"location":"insight2/","title":"Welcome","text":"<p>Insight\u00b2 is an open-source no-code framework to build and deploy custom internal tools. Insight\u00b2 can connect to your data sources such as databases ( PostgreSQL, MongoDB, MySQL, Elasticsearch, Firestore, DynamoDB, Redis and more ), API endpoints ( Insight\u00b2 supports OAuth2 authorization ) and external services ( Stripe, Slack, Google Sheets, Airtable and more ). Once the data sources are connected, Insight\u00b2 can run queries on these data sources to fetch and update data. The data fetched from data sources can be visualised and modified using the UI widgets such as tables, charts, forms, etc.</p> <p></p>","tags":["Insight\u00b2","Introduction"]},{"location":"insight2/#how-insight2-works","title":"How Insight\u00b2 works","text":"<p>Insight\u00b2 has just 3 fundamental principles for building apps:</p> <ul> <li>Connect to data sources: Connect to your existing data sources such as PostgreSQL, MySQL, Firestore, Stripe, Google Sheets, API endpoints, etc.</li> <li>Build queries: Insight\u00b2 comes with query builders for all supported data sources. Insight\u00b2 also supports the use of custom JavaScript code to transform the query results.</li> <li>Customise widgets: Widgets are the UI components that can be edited using Insight's visual app builder ( Eg: tables, charts, forms, etc ). Widgets have events such as <code>on click</code>, <code>on row selected</code>, <code>on page changed</code>, etc. Every UI widget has a dark version.</li> </ul> <p>Insight\u00b2 binds together the data sources, queries and widgets to convert business logic into custom applications.</p>","tags":["Insight\u00b2","Introduction"]},{"location":"insight2/#getting-started","title":"Getting Started","text":"<p>These resources will help you quickly build and deploy apps using Insight\u00b2:</p> <ul> <li>Basic Tutorial - Learn how to build simple UI and connect to data sources.</li> <li>Deploy - Learn how to deploy Insight\u00b2</li> </ul> <p>The references for data sources and widgets:</p> <ul> <li>Datasource Reference</li> <li>Widget Reference</li> </ul>","tags":["Insight\u00b2","Introduction"]},{"location":"insight2/deployment/","title":"Deployment","text":"","tags":["Insight\u00b2","Deployment"]},{"location":"insight2/deployment/#how-to-deploy-insight2","title":"How to deploy Insight\u00b2","text":"<p>All you need is the URL and the Login Details received from us.</p> <p>The Login Details have admin rights.</p>","tags":["Insight\u00b2","Deployment"]},{"location":"insight2/deployment/#prerequisites","title":"Prerequisites","text":"<p>Running computer connected to internet</p> <p>The following screen will be shown when you go to your URL:</p> <p></p> <p>Enter the Login Details provided by us and click on Login button or press Enter to login.</p> <p>After getting logged in successfully, you will see the following screen. It means all is set, you are ready to go.</p> <p></p>","tags":["Insight\u00b2","Deployment"]},{"location":"insight2/security/","title":"Security","text":"","tags":["Insight\u00b2","Security"]},{"location":"insight2/security/#data-storage","title":"Data storage","text":"<p>Insight\u00b2 does not store data returned from your data sources. Insight\u00b2 server acts as a proxy and passes the data as it is to the Insight\u00b2 client. The credentials for the data sources are handled by the server and never exposed to the client. For example, if you are making an API request, the query is run from the server and not from the frontend.</p>","tags":["Insight\u00b2","Security"]},{"location":"insight2/security/#datasource-credentials","title":"Datasource credentials","text":"<p>All the datasource credentials are securely encrypted using <code>aes-256-gcm</code>. The credentials are never exposed to the frontend (Insight\u00b2 client).</p>","tags":["Insight\u00b2","Security"]},{"location":"insight2/security/#other-security-features","title":"Other security features","text":"<ul> <li>TLS: If you are using Insight\u00b2 cloud, all connections are encrypted using TLS. We also have documentation for setting up TLS for self-hosted installations of Insight.</li> <li>Audit logs: Audit logs are available on the enterprise edition of Insight. Every user action is logged along with the IP addresses and user information.</li> <li>Request logging: All the requests to server are logged. If self-hosted, you can easily extend Insight\u00b2 to use your preferred logging service. Insight\u00b2 comes with built-in Sentry integration.</li> <li>Whitelisted IPs: If you are using Insight\u00b2 cloud, you can whitelist our IP address (3.129.198.40) so that your datasources are not exposed to the public.</li> <li>Backups: Insight\u00b2 cloud is hosted on AWS using EKS with autoscaling and regular backups.</li> </ul> <p>If you notice a security vulnerability, please let the team know by sending an email to <code>info@polydocs.io</code>. </p>","tags":["Insight\u00b2","Security"]},{"location":"insight2/tracking/","title":"Tracking","text":"<p>Insight\u00b2 does not store any data fetched from the data sources. Insight\u00b2 acts as a proxy and the data from data sources is sent to the client application without storing.</p>","tags":["Insight\u00b2","Tracking"]},{"location":"insight2/tracking/#server","title":"Server","text":"<p>Self-hosted version of Insight\u00b2 pings our server to fetch the latest product updates every 24 hours. You can disable this by setting the value of <code>CHECK_FOR_UPDATES</code> environment variable to <code>0</code>. This feature is enabled by default.</p>","tags":["Insight\u00b2","Tracking"]},{"location":"insight2/tracking/#client","title":"Client","text":"<p>Insight\u00b2 tracks anonymous usage data such as page loads and clicks. Insight\u00b2 tracks only the events and doesn't capture data from data sources.</p> <p>Tracking can be disabled by setting the value environment variable <code>ENABLE_TRACKING</code> to <code>0</code>. </p>","tags":["Insight\u00b2","Tracking"]},{"location":"insight2/actions/generate-file/","title":"Generate file","text":"<p>This action allows you to construct files on the fly and let users download it. Presently, the only file type supported is <code>CSV</code>.</p>","tags":["Insight\u00b2","Actions"]},{"location":"insight2/actions/generate-file/#options","title":"Options","text":"Option Description Type Type of file to be generated File name Name of the file to be generated Data Data that will be used to construct the file. Its format will depend on the file type, as specified in the following section","tags":["Insight\u00b2","Actions"]},{"location":"insight2/actions/generate-file/#data-format-for-csv","title":"Data format for CSV","text":"<p>For <code>CSV</code> file type, the data field should be supplied with an array objects. Insight\u00b2 assumes that the keys of each of these objects are the same and that they represent the column headers of the csv file.</p> <p>Example:</p> <pre><code>{{\n[\n{ name: 'Daniel', email: 'daniel@polydocs.io' },\n{ name: 'Ines', email: 'ines@polydocs.io' },\n]\n}}\n</code></pre> <p>Supplying the above snippet will generate a csv file which looks like this:</p> <pre><code>name,email\nDaniel,daniel@polydocs.io\nInes,ines@polydocs.io\n</code></pre>","tags":["Insight\u00b2","Actions"]},{"location":"insight2/actions/set-localstorage/","title":"Set localStorage","text":"<p>This action allows you to specify a <code>key</code> and its corresponding <code>value</code> to be stored in localStorage.</p>","tags":["Insight\u00b2","Actions"]},{"location":"insight2/actions/set-localstorage/#example-app-that-stores-a-name-in-localstorage-and-displays-it-on-reload","title":"Example: App that stores a name in localStorage and displays it on reload","text":"","tags":["Insight\u00b2","Actions"]},{"location":"insight2/actions/set-localstorage/#1-add-an-input-field-button-and-a-text-as-shown","title":"1. Add an input field, button and a text as shown","text":"","tags":["Insight\u00b2","Actions"]},{"location":"insight2/actions/set-localstorage/#2-select-the-button-and-add-a-set-localstorage-action-with-key-set-to-name-and-value-pointing-at-the-value-of-the-text-field","title":"2. Select the button and add a <code>Set localStorage</code> action with <code>key</code> set to <code>name</code> and value pointing at the value of the text field","text":"","tags":["Insight\u00b2","Actions"]},{"location":"insight2/actions/set-localstorage/#3-select-the-text-label-weve-added-and-set-its-value-to-the-name-item-from-localstorage","title":"3. Select the text label we've added and set its value to the name item from localStorage","text":"","tags":["Insight\u00b2","Actions"]},{"location":"insight2/actions/set-localstorage/#4now-save-the-application-this-is-important-as-were-about-to-reload-the-page","title":"4.Now save the application, this is important as we're about to reload the page.","text":"<p>Type in anything you wish on the input box and click on the button </p>","tags":["Insight\u00b2","Actions"]},{"location":"insight2/actions/set-localstorage/#5reload-the-page","title":"5.Reload the page,","text":"<p>you'll see that the value stored in local storage is persisted and it is displayed on screen!</p> <p></p>","tags":["Insight\u00b2","Actions"]},{"location":"insight2/actions/actions/","title":"Adding actions","text":"<p>Insight\u00b2 supports several actions that can be invoked as the handler for any <code>event</code> that is triggered in an application.</p>"},{"location":"insight2/actions/actions/#to-add-actions","title":"To add actions","text":"<p>To attach an action for component events, click on the component's handle, and then click on the <code>Add handler</code> button on the inspector panel available on the right side.  </p> <p>To attach an action for query events, select the query, go to the <code>advanced</code> tab and then click on the <code>Add handler</code> button.</p>"},{"location":"insight2/actions/actions/#available-actions","title":"Available actions","text":"<p>Some of the actions that Insight\u00b2 Support are</p> Action Description Show alert Show an alert message as a bootstrap toast Run query Run any of the data queries that you have created Open webpage Go to another webpage in a new tab Goto app Go to another Insight\u00b2 application Show modal Open any modal that you've added Close modal Close any modal that you've added if its already open Copy to clipboard Copy any available text that you see on the application to clipboard Set localStorage Set a key and corresponding value to localStorage Generate file Construct file using data available in your application and let the user download it"},{"location":"insight2/data-sources/","title":"Data Sources","text":"<ul> <li>Airtable</li> <li>Appwrite</li> <li>Athena</li> <li>Baserow</li> <li>BigQuery</li> <li>CouchDB</li> <li>Custom JS</li> <li>DynamoDB</li> <li>Elasticsearch</li> <li>Firestore</li> <li>GCS</li> <li>Google Sheets</li> <li>GraphQL</li> <li>InfluxDB</li> <li>Mailgun</li> <li>MinIO</li> <li>MongoDB</li> <li>MSSQL</li> <li>MySQL</li> <li>n8n</li> <li>Notion</li> <li>OpenAPI</li> <li>OracleDB</li> <li>PostgreSQL</li> <li>Redis</li> <li>REST API</li> <li>RethinkDB</li> <li>S3</li> <li>SAP HANA</li> <li>SendGrid</li> <li>SMTP</li> <li>Snowflake</li> <li>Typesense</li> <li>WooCommerce</li> </ul>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/airtable/","title":"Airtable","text":"<p>Insight\u00b2 can connect to your Airtable account to read and write data. Airtable API key is required to create an Airtable data source on Insight. You can generate API key by visiting Airtable account page.</p> <p></p> <p>Airtable API has a rate limit, and at the time of writing this documentation, the limit is five(5) requests per second per base. You can read more about rate limits here Airtable API.</p> <p>This guide assumes that you have already gone through Adding a data source tutorial.</p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/airtable/#supported-queries","title":"Supported queries","text":"<ul> <li>Listing records</li> <li>Retrieving a record</li> <li>Creating a record</li> <li>Updating a record</li> <li>Deleting a record</li> </ul>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/airtable/#listing-records","title":"Listing records","text":"<p>This query lists all the records in a table. The results are paginated and each page can have upto 100 records.</p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/airtable/#required-parameters","title":"Required parameters:","text":"<ul> <li>Base ID: To find the Base ID, first visit airtable.com/api. Select from the list of bases the base whose ID you'd like to find out. Example Base ID: <code>appDT3UCPffPiSmFd</code></li> <li>Table name: Enter the table name whose data you want to fetch.</li> </ul>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/airtable/#optional-parameters","title":"Optional parameters:","text":"<ul> <li>Page size: The number of records returned in each request. Must be less than or equal to 100. Default is 100.</li> <li>offset: If there are more records, the response will contain an offset. To fetch the next page of records, include offset in the next request's parameters.</li> </ul> <p>Example response from Airtable:</p> <pre><code>{\n\"records\": [\n{\n\"id\": \"recu9xMnUdr2n2cw8\",\n\"fields\": {\n\"Notes\": \"sdfdsf\",\n\"Name\": \"dsfdsf\"\n},\n\"createdTime\": \"2021-05-12T14:30:33.000Z\"\n},\n{\n\"id\": \"recyIdR7bVdQvmKXa\",\n\"fields\": {\n\"Notes\": \"sdfdsf\",\n\"Name\": \"dfds\"\n},\n\"createdTime\": \"2021-05-12T14:30:33.000Z\"\n},\n{\n\"id\": \"recAOzdIHaRpvRaGE\",\n\"fields\": {\n\"Notes\": \"sdfsdfsd\",\n\"Name\": \"sdfdsf\"\n},\n\"createdTime\": \"2021-05-12T14:30:33.000Z\"\n}\n],\n\"offset\": \"recAOzdIHaRpvRaGE\"\n}\n</code></pre>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/airtable/#retrieving-a-record","title":"Retrieving a record","text":"","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/airtable/#required-parameters_1","title":"Required parameters:","text":"<ul> <li>Base ID</li> <li>Table name</li> <li>Record ID</li> </ul> <p>Example response from Airtable:</p> <pre><code>{\n\"id\": \"recu9xMnUdr2n2cw8\",\n\"fields\": {\n\"Notes\": \"sdfdsf\",\n\"Name\": \"dsfdsf\"\n},\n\"createdTime\": \"2021-05-12T14:30:33.000Z\"\n}\n</code></pre>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/airtable/#creating-a-record","title":"Creating a record","text":"","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/airtable/#required-parameters_2","title":"Required parameters:","text":"<ul> <li>Base ID</li> <li>Table name</li> <li>Records</li> </ul>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/airtable/#example-records","title":"Example Records:","text":"<pre><code>[\n{\n\"fields\": {\n\"Notes\": \"sdfdsf\",\n\"Name\": \"dsfdsf\"\n}\n},\n{\n\"fields\": {\n\"Notes\": \"note1\",\n\"Name\": \"dsfdsf\"\n}\n}\n]\n</code></pre> <p>Click on the <code>run</code> button to run the query.</p> <p>NOTE: Query must be saved before running.</p> <p>Example response from Airtable: <pre><code>{\n\"records\": [\n{\n\"id\": \"rec5RuZ1COoZGtGDY\",\n\"fields\": {\n\"Notes\": \"sdfdsf\",\n\"Name\": \"dsfdsf\"\n},\n\"createdTime\": \"2022-02-07T20:25:27.000Z\"\n},\n{\n\"id\": \"recaYbFPonNNu6Cwj\",\n\"fields\": {\n\"Notes\": \"note1\",\n\"Name\": \"dsfdsf\"\n},\n\"createdTime\": \"2022-02-07T20:25:27.000Z\"\n}\n]\n}\n</code></pre></p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/airtable/#updating-a-record","title":"Updating a record","text":"","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/airtable/#required-parameters_3","title":"Required parameters:","text":"<ul> <li>Base ID</li> <li>Table name</li> <li>Record ID</li> </ul>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/airtable/#example-body","title":"Example body:","text":"<p>Click on the <code>run</code> button to run the query.</p> <p>NOTE: Query must be saved before running.</p> <p>Example response from Airtable: <pre><code>{\n\"id\": \"recu9xMnUdr2n2cw8\",\n\"fields\": {\n\"Notes\": \"Example Notes\",\n\"Name\": \"change\"\n},\n\"createdTime\": \"2021-08-08T17:27:17.000Z\"\n}\n</code></pre></p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/airtable/#deleting-a-record","title":"Deleting a record","text":"","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/airtable/#required-parameters_4","title":"Required parameters:","text":"<ul> <li>Base ID</li> <li>Table name</li> <li>Record ID</li> </ul> <p>Click on the <code>run</code> button to run the query.</p> <p>NOTE: Query must be saved before running.</p> <p>Example response from Airtable:</p> <pre><code>{\ndeleted: true\nid: \"recIKsyZgqI4zoqS7\"\n}\n</code></pre>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/appwrite/","title":"Appwrite Database","text":"<p>Now build applications on top of your Appwrite database.</p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/appwrite/#connection","title":"Connection","text":"<p>Insight\u00b2 connects to your Appwrite app using : - Host (API endpoint) - Project ID - Secret key</p> <p>You'll find the Secret key and other credentials on your Appwrite's project settings page. You may need to create a new key if you don't have one already.</p> <p>You should also set scope for access of particular resource. Learn more about the API keys and scopes here.</p> <p>To connect Appwrite datasource to your Insight\u00b2 application, go to the data source manager on the left-sidebar and click on the <code>+</code> button. Select Appwrite from the list of available datasources, provide the credentials and click Save. It is recommended to the check the connection by clicking on 'Test connection' button to verify if the service account can access Appwrite from Insight\u00b2 server.</p> <p></p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/appwrite/#querying-appwrite","title":"Querying Appwrite","text":"<p>After setting up the Appwrite datasource, you can click on the <code>+</code> button of the query manager at the bottom panel of the editor and select the Appwrite data source that you added in the previous step.</p> <p></p> <p>After selecting Appwrite datasource, select the operation that you want to perform on Appwrite database and click Save to save the query.</p> <p>:::tip Query results can be transformed using Transformations. Read our Transformation documentation here :::</p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/appwrite/#supported-operations","title":"Supported operations","text":"<ol> <li>List documents</li> <li>Get document</li> <li>Update document</li> <li>Delete document</li> <li>Bulk update using document id</li> </ol>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/appwrite/#list-documents","title":"List documents","text":"<p>This operation can be used to get a list of all the user documents.</p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/appwrite/#required-parameters","title":"Required parameters:","text":"<ul> <li>Collection ID: You can create a new collection using the Database service server integration or appwrite console. The value for collection ID field should be of <code>String</code> type.</li> </ul>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/appwrite/#optional-parameters","title":"Optional parameters:","text":"<ul> <li>Limit: Maximum number of documents to return in response. By default will return maximum 25 results. Maximum of 100 results allowed per request. The Limit value should be of <code>integer</code> type.</li> <li>Order fields: Array of attributes used to sort results. The order field value should be an <code>array</code>.</li> <li>Order types: Array of order directions for sorting attribtues. Possible values are DESC for descending order, or ASC for ascending order. The order field value should be an <code>array</code>.</li> <li>Field, Operator, and Value: For filtering the results, you can enter a field(attribute) name, use appropriate operator from the dropdown and set a value.</li> </ul>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/appwrite/#get-document","title":"Get document","text":"<p>Use this operation to get a document from a collection by its unique ID.</p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/appwrite/#required-parameters_1","title":"Required parameters:","text":"<ul> <li> <p>Collection ID: You can create a new collection using the Database service server integration or appwrite console. The value for collection ID should be of <code>String</code> type.</p> </li> <li> <p>Document ID: Enter the document ID of the document that you want to get. The document ID should be of <code>String</code> type.</p> </li> </ul> <p></p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/appwrite/#add-document-to-collection","title":"Add Document to Collection","text":"<p>Use this operation to create a new document in a collection.</p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/appwrite/#required-parameters_2","title":"Required parameters:","text":"<ul> <li> <p>Collection ID: You can create a new collection using the Database service server integration or appwrite console. The collection ID should be of <code>String</code> type.</p> </li> <li> <p>Body: Enter the document data as JSON object.</p> </li> </ul> <p></p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/appwrite/#update-document","title":"Update document","text":"<p>Use this operation to update a document.</p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/appwrite/#required-parameters_3","title":"Required parameters:","text":"<ul> <li> <p>Collection ID: You can create a new collection using the Database service server integration or appwrite console. The value for collection ID should be of <code>String</code> type.</p> </li> <li> <p>Document ID: Enter the document ID of the document that you want to get. The document ID should be of <code>String</code> type.</p> </li> <li> <p>Body: Enter the document data as JSON object.</p> </li> </ul> <p></p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/appwrite/#delete-document","title":"Delete document","text":"<p>Use this operation for deleting a document in collection.</p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/appwrite/#required-parameters_4","title":"Required parameters:","text":"<ul> <li> <p>Collection ID: You can create a new collection using the Database service server integration or appwrite console. The value for collection ID should be of <code>String</code> type.</p> </li> <li> <p>Document ID: Enter the document ID of the document that you want to get. The document ID should be of <code>String</code> type.</p> </li> </ul> <p></p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/appwrite/#bulk-update-using-document-id","title":"Bulk update using document id","text":"<p>Use this operation for bulk updating a documents in a collection.</p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/appwrite/#required-parameters_5","title":"Required parameters:","text":"<ul> <li> <p>Collection ID: You can create a new collection using the Database service server integration or appwrite console. The value for collection ID should be of <code>String</code> type.</p> </li> <li> <p>Key for document ID:  Enter the key or attribute name that can be used to identify each record.</p> </li> <li> <p>Records: The array of objects that will contain the data for updating each record in the database and these objects must contain a key value pair to point unique record in the database (key for document)</p> </li> </ul> <p></p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/athena/","title":"Athena","text":"<p>Insight\u00b2 can connect to Amazon Athena databases to read and write data.</p> <ul> <li>Athena<ul> <li>Connection</li> <li>Querying Amazon Athena<ul> <li>Basic queries<ul> <li>Creating table</li> <li>Inserting to table</li> <li>Select operation</li> </ul> </li> </ul> </li> </ul> </li> </ul>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/athena/#connection","title":"Connection","text":"<p>Insight\u00b2 requires the following to connect to your Athena.</p> <ul> <li>Database</li> <li>S3 output location</li> <li>Access key</li> <li>Secret key</li> <li>Region</li> </ul> <p> You can also configure for additional optional parameters.</p> <p></p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/athena/#querying-amazon-athena","title":"Querying Amazon Athena","text":"<ul> <li>Click on <code>+</code> button of the query manager at the bottom panel of the editor and select the database added in the previous step as the datasource. Query manager then can be used to write SQL queries.</li> </ul> <ul> <li>Click on the <code>run</code> button to run the query.</li> </ul> <p> NOTE: Query should be saved before running. </p> <p> Refer amazon athena docs here for more info: link</p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/athena/#basic-queries","title":"Basic queries","text":"<p> Refer amazon athena docs here for more info: link</p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/athena/#creating-table","title":"Creating table","text":"<pre><code>CREATE EXTERNAL TABLE student (\nname STRING,\nage INT\n)  LOCATION 's3://athena-express-akiatfa53s-2022/';\n</code></pre>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/athena/#inserting-to-table","title":"Inserting to table","text":"<pre><code>INSERT INTO student\nVALUES ('Lansing',1)\n</code></pre>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/athena/#select-operation","title":"Select operation","text":"<pre><code>SELECT * from student WHERE AGE=1\n</code></pre>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/baserow/","title":"Baserow","text":"","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/baserow/#connection","title":"Connection","text":"<p>Insight\u00b2 can connect to your Baserow account to read and write data. Baserow API token is required to create an Baserow data source on Insight. You can follow the steps to create API token from this link.</p> <p></p> <p>This guide assumes that you have already gone through Adding a data source tutorial.</p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/baserow/#supported-queries","title":"Supported queries","text":"<ul> <li>List fields</li> <li>List rows</li> <li>Get row</li> <li>Create row</li> <li>Update row</li> <li>Move row</li> <li>Delete row</li> </ul>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/baserow/#list-fields","title":"List fields","text":"<p>This query lists all the fields in a table.</p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/baserow/#required-parameters","title":"Required parameters:","text":"<ul> <li>Table ID</li> </ul> <p>Example response from Baserow:</p> <pre><code>[\n{\n\"id\": 331156,\n\"table_id\": 57209,\n\"name\": \"Name\",\n\"order\": 0,\n\"type\": \"text\",\n\"primary\": true,\n\"text_default\": \"\"\n},\n{\n\"id\": 331157,\n\"table_id\": 57209,\n\"name\": \"Last name\",\n\"order\": 1,\n\"type\": \"text\",\n\"primary\": false,\n\"text_default\": \"\"\n},\n{\n\"id\": 331158,\n\"table_id\": 57209,\n\"name\": \"Notes\",\n\"order\": 2,\n\"type\": \"long_text\",\n\"primary\": false\n},\n{\n\"id\": 331159,\n\"table_id\": 57209,\n\"name\": \"Active\",\n\"order\": 3,\n\"type\": \"boolean\",\n\"primary\": false\n}\n]\n</code></pre>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/baserow/#list-rows","title":"List rows","text":"<p>This query lists all the rows in a table.</p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/baserow/#required-parameters_1","title":"Required parameters:","text":"<ul> <li>Table ID</li> </ul> <p>Example response from Baserow:</p> <pre><code>{\n\"count\": 3,\n\"next\": null,\n\"previous\": null,\n\"results\": [\n{\n\"id\": 2,\n\"order\": \"0.99999999999999999991\",\n\"Name\": \"Bill\",\n\"Last name\": \"Gates\",\n\"Notes\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce dignissim, urna eget rutrum sollicitudin, sapien diam interdum nisi, quis malesuada nibh eros a est.\",\n\"Active\": false\n},\n{\n\"id\": 3,\n\"order\": \"0.99999999999999999992\",\n\"Name\": \"Mark\",\n\"Last name\": \"Zuckerburg\",\n\"Notes\": null,\n\"Active\": true\n},\n{\n\"id\": 1,\n\"order\": \"0.99999999999999999997\",\n\"Name\": \"Elon\",\n\"Last name\": \"Musk\",\n\"Notes\": null,\n\"Active\": true\n}\n]\n}\n</code></pre>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/baserow/#get-row","title":"Get row","text":"","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/baserow/#required-parameters_2","title":"Required parameters:","text":"<ul> <li>Table ID</li> <li>Row ID</li> </ul> <p>Example response from Baserow:</p> <pre><code>{\n\"id\": 1,\n\"order\": \"0.99999999999999999997\",\n\"Name\": \"Elon\",\n\"Last name\": \"Musk\",\n\"Notes\": null,\n\"Active\": true\n}\n</code></pre>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/baserow/#create-row","title":"Create row","text":"","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/baserow/#required-parameters_3","title":"Required parameters:","text":"<ul> <li>Table ID</li> <li>Records</li> </ul>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/baserow/#example-records","title":"Example Records:","text":"<pre><code>{\n\"Name\": \"Test\",\n\"Last name\": \"Test Name\",\n\"Notes\": \"Test Note\",\n\"Active\": true\n}\n</code></pre> <p>Example response from Baserow:</p> <pre><code>{\n\"id\": 19,\n\"order\": \"0.99999999999999999996\",\n\"Name\": \"Test\",\n\"Last name\": \"Test Name\",\n\"Notes\": \"Test Note\",\n\"Active\": true\n}\n</code></pre>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/baserow/#update-row","title":"Update row","text":"","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/baserow/#required-parameters_4","title":"Required parameters:","text":"<ul> <li>Table ID</li> <li>Row ID</li> <li>Records</li> </ul>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/baserow/#example-records_1","title":"Example Records:","text":"<pre><code>{\n\"Name\": \"Test\",\n\"Last name\": \"Test Name\",\n\"Notes\": \"Test Note\",\n\"Active\": true\n}\n</code></pre> <p>Example response from Baserow:</p> <pre><code>{\n\"id\": 19,\n\"order\": \"0.99999999999999999996\",\n\"Name\": \"Test\",\n\"Last name\": \"Test Name\",\n\"Notes\": \"Test Note\",\n\"Active\": true\n}\n</code></pre>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/baserow/#move-row","title":"Move row","text":"","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/baserow/#required-parameters_5","title":"Required parameters:","text":"<ul> <li>Table ID</li> <li>Row ID</li> </ul>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/baserow/#optional-parameters","title":"Optional parameters:","text":"<ul> <li>Before ID (The row will be moved before the entered ID. If not provided, then the row will be moved to the end )</li> </ul> <p>Example response from Baserow:</p> <pre><code>{\n\"id\": 3,\n\"order\": \"2.00000000000000000000\",\n\"Name\": \"Mark\",\n\"Last name\": \"Zuckerburg\",\n\"Notes\": null,\n\"Active\": true\n}\n</code></pre>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/baserow/#delete-row","title":"Delete row","text":"","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/baserow/#required-parameters_6","title":"Required parameters:","text":"<ul> <li>Table ID</li> <li>Row ID</li> </ul> <p>While deleting a row, the response will be either success or failure from Baserow</p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/bigquery/","title":"BigQuery","text":"<p>Insight\u00b2 can connect to BigQuery databases to run BigQuery queries.</p>","tags":["Insight\u00b2","Data Sources","BigQuery"]},{"location":"insight2/data-sources/bigquery/#connection","title":"Connection","text":"<p>Please refer this link to enable BigQuery API in Google Cloud Console.</p> <p>Create Service Account and key, then get your configs downloaded as JSON</p> <p>To add a new BigQuery, click on the <code>+</code> button on data sources panel at the left-bottom corner of the app editor. Select BigQuery from the modal that pops up.</p> <p>Insight\u00b2 requires the config json downloaded from your account to connect to BigQuery. Paste the json into the <code>Private key</code> field.</p> <p>The json looks like:</p> <p><code>json  {   \"type\": \"service_account\",   \"project_id\": \"tooljet-279812\",   \"private_key_id\": \"ea6e234sdfsdf3242b91525626edeef74a14e58761\",   \"private_key\": \"-----BEGIN PRIVATE KEY-----\\nMIIEvQIBADAAhdh67sidfnIUWWWBAQC8V+z0vaM/rFiA\\nrq8fzVjSpEu7Cietjn82SVtguAlAUP9YpRepzi4rDmRgVQiXe4KES7VGQhmg3hUj\\nbBASbdI5WRCvAC2ujzrxv3rbfjYRWfm+OqzpUBWaEKbwSGc6rNkhmirvhjiFdl5k\\nn7aK7w3bmQfBlnNM6+WiQdT09g2qx3lmRDoUUpuCngkhbWOs3gN/U6wlm0cHKtbF\\nWUOwKdyeZrm3UORUDkFvq6rVSF8vob+FQxf24FuvpBmXi2o2dqqglle8rlm8Lz83\\ns4kAVbqVjtGrVXm6QUcnLISqJCJUnFkSuFpo60GCcgAVrwyAq/6aQH3IM78QKzFL\\n8q5b65rXAgMBAAECggEAClIF8tRk0VuG3NZH5lg3q8fDOyaLBFdVKcHKtzCec3Ez\\no6C4RcxP6Hk5IbPrtgggjVIi/Z7exKRv2mAwFvuSuJJSQSSjXC7Fm87AQPdYFWYt\\noFYIeLGPlFMO++H3Nh+Xt3I5NBLR58UmH48iBdgR3pygXi1C5eBvQ2rdNVTL/uxw\\n3iULu8WcVBw8glzkdLNLDq94uqbW7/qyji7QWNkU+804sA0LEj4PWmO7B9k1LCLK\\nFV0Ppv+SJYMS2MhWmXPHnYVfeNaKJKPQpHsS2ep/hyjEO/3Fvm3o3cp6SrEkNGIH\\nGKeozlfV7MQj7tMHLqWddDBXtFwYVEmN0UJVafvGsQKBgQDsEVzb7DG/xlMpuDQv\\nqpLGWXR5DdAhzxVJzeh11Ongb+XxBOVSyTDKJLvOX4rI7tDqqN7b2pabUA3ZjvXv\\nhMPXr7AjL6yoJEzVCyo1+pi26OL99OcO+7gUDa0axHFt6LZuPw00r+2Nl0FqrXNR\\n+qUiPuZpp2MuKjMwLCwhr5YuqwKBgQDMPv6TPMl+oocoQ4uc84uY58Ywb7XZjmhY\\n8jXdA38I454EbQGeLja+2knDpDkF6g14cTzVJe/Ec4A6QmeIieTFSJKBV4VCZ3QN\\npLR4PrET7o9GL3mtwnNqcHPw2dLNHtn1OgsOUfJMWPIrFK2abVNAmYIBtOGA4eyH\\nrOl+NcAUhQKBgC4EKGy6OuxeFYHxZULRZjEB6QFb3vFoM4cieyjU6w4T4ee8g5NC\\nop8U0AMnfp8yZkkHyAFlN6xoy3pYMrqQz7gwiA4j0e0ovk1dEspY4gHtnanRXmT+\\nTmCiVdb86ft5vG37HnDhxlWuYVMRIoSdbikhx7papauvEDFYuvWKC6VnAoGBAJQr\\nvxOhrauozNRw6//YzxUGT8kjwZEqtpiQXnMP7kDMn/4l9l6CuESMp6a+pH+d5FfU\\nDoWzF9Y01HlvYxyyrLxSgbZDf/FEi/S54BK7qEsFbftExclAn+o/2lyIKV2VXBmD\\nGjIxUM4CWOzX+3lkhlj/BEmop0+Qlr92uY1OASLhAoGAfTb/Le0Nf5bGLjK3hI9D\\no/oDI5Ryj5rTMxmG/wRjE+1Jm6BjFzEyH2CvnFonccyHQ+wGn61AgbRFLn+Tg5fz\\nZXpzD2Xq3Y/AXtrdaayK0wnpMvVE1bZt+ikeVAWX+gR79igTqSXRgCuyp+edsgcE\\nZ+2Eser4Z5BpqfFjqFW8MhY=\\n-----END PRIVATE KEY-----\\n\",   \"client_email\": \"tooljettest@tooljet-279812.iam.gserviceaccount.com\",   \"client_id\": \"106795637455432158803\",   \"auth_uri\": \"https://accounts.google.com/o/oauth2/auth\",   \"token_uri\": \"https://oauth2.googleapis.com/token\",   \"auth_provider_x509_cert_url\": \"https://www.googleapis.com/oauth2/v1/certs\",   \"client_x509_cert_url\": \"https://www.googleapis.com/robot/v1/metadata/x509/tooljettest%40tooljet-279812.iam.gserviceaccount.com\" }</code></p> <p></p> <p>Click on Test connection button to verify if the credentials are correct and that the API is accessible to Insight\u00b2 server. Click on Save button to save the data source.</p>","tags":["Insight\u00b2","Data Sources","BigQuery"]},{"location":"insight2/data-sources/bigquery/#querying-bigquery","title":"Querying BigQuery","text":"<p>Click on <code>+</code> button of the query manager at the bottom panel of the editor and select the database added in the previous step as the data source. Select the operation that you want to perform and click Save to create the query.</p> <p></p> <p>Click on the run button to run the query. NOTE: Query should be saved before running.</p> <p> Query results can be transformed using transformations. Read our transformations documentation to see how: link</p>","tags":["Insight\u00b2","Data Sources","BigQuery"]},{"location":"insight2/data-sources/bigquery/#supported-operations","title":"Supported operations","text":"<ul> <li> <p>List Datasets</p> </li> <li> <p>List Tables</p> </li> <li> <p>Query</p> </li> <li> <p>Insert Record </p> </li> <li> <p>Delete Record </p> </li> <li> <p>Update Record</p> </li> <li> <p>Create View</p> </li> <li> <p>Create Table</p> </li> <li> <p>Delete Table</p> </li> </ul>","tags":["Insight\u00b2","Data Sources","BigQuery"]},{"location":"insight2/data-sources/bigquery/#list-datasets","title":"List Datasets","text":"<p>Retruns list of datasets.</p>","tags":["Insight\u00b2","Data Sources","BigQuery"]},{"location":"insight2/data-sources/bigquery/#optional-parameters","title":"Optional parameters:","text":"<ul> <li>Options: This can be used to filter the list.</li> </ul>","tags":["Insight\u00b2","Data Sources","BigQuery"]},{"location":"insight2/data-sources/bigquery/#list-tables","title":"List Tables","text":"<p>Return list of tables within a dataset</p>","tags":["Insight\u00b2","Data Sources","BigQuery"]},{"location":"insight2/data-sources/bigquery/#required-parameters","title":"Required parameters:","text":"<ul> <li>Dataset: Enter the dataset name.</li> </ul>","tags":["Insight\u00b2","Data Sources","BigQuery"]},{"location":"insight2/data-sources/bigquery/#optional-parameters_1","title":"Optional parameters:","text":"<ul> <li>Options: This can be used to filter the list.</li> </ul>","tags":["Insight\u00b2","Data Sources","BigQuery"]},{"location":"insight2/data-sources/bigquery/#query","title":"Query","text":"<p>Return data based on the <code>Query</code>. <code>Query options</code> (Reference), and <code>Query result options</code> (Reference).</p> <p></p>","tags":["Insight\u00b2","Data Sources","BigQuery"]},{"location":"insight2/data-sources/bigquery/#insert-record","title":"Insert Record","text":"<ul> <li>To insert a record.</li> </ul>","tags":["Insight\u00b2","Data Sources","BigQuery"]},{"location":"insight2/data-sources/bigquery/#delete-record","title":"Delete Record","text":"<ul> <li>To delete a record.</li> </ul> <p> NOTE: Be careful when deleting records in a table. If you omit the WHERE clause, all records in the table will be deleted! </p>","tags":["Insight\u00b2","Data Sources","BigQuery"]},{"location":"insight2/data-sources/bigquery/#update-record","title":"Update Record","text":"<ul> <li>To update a record.</li> </ul> <p> NOTE: Be careful when updating records in a table. If you omit the WHERE clause, all records in the table will be updated! </p>","tags":["Insight\u00b2","Data Sources","BigQuery"]},{"location":"insight2/data-sources/bigquery/#create-view","title":"Create View","text":"<ul> <li>To create a view.</li> </ul>","tags":["Insight\u00b2","Data Sources","BigQuery"]},{"location":"insight2/data-sources/bigquery/#create-table","title":"Create Table","text":"<ul> <li>To create a table.</li> </ul> <p> NOTE: visit for more info on schema.</p>","tags":["Insight\u00b2","Data Sources","BigQuery"]},{"location":"insight2/data-sources/bigquery/#delete-table","title":"Delete Table","text":"<ul> <li>To delete a table.</li> </ul>","tags":["Insight\u00b2","Data Sources","BigQuery"]},{"location":"insight2/data-sources/couchdb/","title":"CouchDB","text":"<p>Insight\u00b2 can connect to CouchDB databases to read and write data. CocuhDB uses basic auth for authentication , username and password for the database is required to create an CouchDB data source on Insight\u00b2. For more info visit CouchDB docs.</p> <p></p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/couchdb/#supported-queries","title":"Supported queries:","text":"<pre><code>- [Listing records](/insight2/data-sources/couchdb/#listing-records)\n        - [Optional parameters:](/insight2/data-sources/couchdb/#optional-parameters)\n- [Retrieving a record](/insight2/data-sources/couchdb/#retrieving-a-record)\n        - [Required parameters:](/insight2/data-sources/couchdb/#required-parameters)\n- [Creating a record](/insight2/data-sources/couchdb/#creating-a-record)\n        - [Example Records:](/insight2/data-sources/couchdb/#example-records)\n- [Updating a record](/insight2/data-sources/couchdb/#updating-a-record)\n        - [Required parameters:](/insight2/data-sources/couchdb/#required-parameters_1)\n        - [Example body:](/insight2/data-sources/couchdb/#example-body)\n- [Deleting a record](/insight2/data-sources/couchdb/#deleting-a-record)\n        - [/insight2/data-sources/couchdb/#required-parameters_2)\n- [Find](/insight2/data-sources/couchdb/#find)\n        - [Required parameters:](/insight2/data-sources/couchdb/#required-parameters_3)\n        - [Example body:](/insight2/data-sources/couchdb/#example-body_1)\n- [Retrieving a view](/insight2/data-sources/couchdb/#retrieving-a-view)\n        - [Required parameters:](/insight2/data-sources/couchdb/#required-parameters_4)\n        - [Optional parameters:](/insight2/data-sources/couchdb/#optional-parameters_1)\n</code></pre> <p>NOTE: Record ID is same as document ID(\"_id\") .</p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/couchdb/#listing-records","title":"Listing records","text":"<p>This query lists all the records in a database.</p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/couchdb/#optional-parameters","title":"Optional parameters:","text":"<ul> <li>Include docs</li> <li>Descending order</li> <li>Limit</li> <li>Skip</li> </ul> <p>descending (boolean) \u2013 Return the documents in descending order by key. Default is false.</p> <p>limit (number) \u2013 Limit the number of the returned documents to the specified number.</p> <p>skip (number) \u2013 Skip this number of records before starting to return the results. Default is 0.</p> <p>include_docs (boolean) \u2013 include_docs key is set to false by default , if true it returns the document data along with the default fields.</p> <p></p> <p>Example response from CouchDb:</p> <pre><code>{\n\"total_rows\": 3,\n\"offset\": 0,\n\"rows\": [\n{\n\"id\": \"23212104e60a71edb42ebc509f000dc2\",\n\"key\": \"23212104e60a71edb42ebc509f000dc2\",\n\"value\": {\n\"rev\": \"1-0cc7f48876f15883394e5c139c628123\"\n}\n},\n{\n\"id\": \"23212104e60a71edb42ebc509f00216e\",\n\"key\": \"23212104e60a71edb42ebc509f00216e\",\n\"value\": {\n\"rev\": \"1-b3c45696b10cb08221a335ff7cbd8b7a\"\n}\n},\n{\n\"id\": \"23212104e60a71edb42ebc509f00282a\",\n\"key\": \"23212104e60a71edb42ebc509f00282a\",\n\"value\": {\n\"rev\": \"1-da5732beb913ecbded309321cac892d2\"\n}\n},\n]\n}\n</code></pre>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/couchdb/#retrieving-a-record","title":"Retrieving a record","text":"","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/couchdb/#required-parameters","title":"Required parameters:","text":"<ul> <li>Record ID</li> </ul> <p>Example response from CouchDb:</p> <p><pre><code>{\n\"_id\": \"e33dc4e209689cb0400d095fc401a1e0\",\n\"_rev\": \"1-a62af8e14451af88c150e7e718b7a0e8\",\n\"0\": {\n\"name\": \"test data\"\n}\n}\n</code></pre> The returned JSON is the JSON of the document, including the document ID and revision number:</p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/couchdb/#creating-a-record","title":"Creating a record","text":"","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/couchdb/#example-records","title":"Example Records:","text":"<pre><code>  [{\"name\":\"tooljet\"}]\n</code></pre> <p>Click on the <code>run</code> button to run the query.</p> <p>NOTE: Query must be saved before running.</p> <p>Example response from CouchDb: <pre><code>   {\n\"ok\": true,\n\"id\": \"23212104e60a71edb42ebc509f0049a2\",\n\"rev\": \"1-b0a625abc4e21ee554737920156e911f\"\n}\n</code></pre></p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/couchdb/#updating-a-record","title":"Updating a record","text":"<p>You can get the revision id  value, by sending a GET request to get the document details. You get the document as JSON in the response. For each update to the document, the revision field \"_rev\" gets changed.</p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/couchdb/#required-parameters_1","title":"Required parameters:","text":"<ul> <li>Revision ID</li> <li>Record ID</li> </ul>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/couchdb/#example-body","title":"Example body:","text":"<pre><code>  [{\"name\":\"tooljet\"}]\n</code></pre> <p>Click on the <code>run</code> button to run the query.</p> <p>NOTE: Query must be saved before running.</p> <p>Example response from CouchDb: <pre><code>{\n\"ok\": true,\n\"id\": \"23212104e60a71edb42ebc509f0049a2\",\n\"rev\": \"2-b0a625abc4e21ee554737920156e911f\"\n}\n</code></pre></p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/couchdb/#deleting-a-record","title":"Deleting a record","text":"","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/couchdb/#required-parameters_2","title":"Required parameters:","text":"<ul> <li>Revision ID</li> <li>Record ID</li> </ul> <p>Click on the <code>run</code> button to run the query.</p> <p>Example response from CouchDb:</p> <pre><code>{\n\"ok\": true,\n\"id\": \"rev_id=2-3d01e0e87139c57e9bd083e48ecde13d&amp;record_id=e33dc4e209689cb0400d095fc401a1e0\",\n\"rev\": \"1-2b99ef28c03e68ea70bb668ee55ffb7b\"\n}\n</code></pre>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/couchdb/#find","title":"Find","text":"<p>Find documents using a declarative JSON querying syntax.</p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/couchdb/#required-parameters_3","title":"Required parameters:","text":"<ul> <li>Selector</li> </ul> <p>NOTE: selector syntax</p> <p></p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/couchdb/#example-body_1","title":"Example body:","text":"<pre><code>{\n\"selector\": {\n\"year\":  {\"$gte\": 2015}\n},\n\"fields\": [\"year\"]\n}\n</code></pre> <p>Click on the <code>run</code> button to run the query.</p> <p>NOTE: selector (json) \u2013 JSON object describing criteria used to select documents.</p> <p>More information</p> <p>Example response from CouchDb:</p> <p></p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/couchdb/#retrieving-a-view","title":"Retrieving a view","text":"<p>Views are the primary tool used for querying and reporting on CouchDB documents.</p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/couchdb/#required-parameters_4","title":"Required parameters:","text":"<ul> <li>View url</li> </ul> <p>Reference for view</p> <p></p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/couchdb/#optional-parameters_1","title":"Optional parameters:","text":"<ul> <li>Start key</li> <li>End key</li> <li>Limit</li> <li>Skip</li> </ul> <p>Click on the <code>run</code> button to run the query.</p> <p>startkey (json) \u2013 Return records starting with the specified key.</p> <p>endkey (json) \u2013 Stop returning records when the specified key is reached.</p> <p>limit (number) \u2013 Limit the number of the returned documents to the specified number.</p> <p>skip (number) \u2013 Skip this number of records before starting to return the results. Default is 0.</p> <p>Example response from CouchDb: <pre><code>{\n\"total_rows\": 4,\n\"offset\": 0,\n\"rows\": [\n{\n\"id\": \"23212104e60a71edb42ebc509f000dc2\",\n\"key\": \"23212104e60a71edb42ebc509f000dc2\",\n\"value\": {\n\"rev\": \"1-0cc7f48876f15883394e5c139c628123\"\n}\n},\n{\n\"id\": \"23212104e60a71edb42ebc509f00216e\",\n\"key\": \"23212104e60a71edb42ebc509f00216e\",\n\"value\": {\n\"rev\": \"1-b3c45696b10cb08221a335ff7cbd8b7a\"\n}\n},\n{\n\"id\": \"23212104e60a71edb42ebc509f00282a\",\n\"key\": \"23212104e60a71edb42ebc509f00282a\",\n\"value\": {\n\"rev\": \"1-da5732beb913ecbded309321cac892d2\"\n}\n},\n{\n\"id\": \"23212104e60a71edb42ebc509f002cbd\",\n\"key\": \"23212104e60a71edb42ebc509f002cbd\",\n\"value\": {\n\"rev\": \"1-ca5bb3c0767eb42ea6c33eee3d395b59\"\n}\n\n}\n]\n}\n</code></pre></p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/custom-js/","title":"Custom JavaScript","text":"<p>You can write custom JavaScript code to interact with components and queries. To do that, you just need to create a new query and select Run JavaScript Code from the data sources dropdown.</p> <p></p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/custom-js/#example-displaying-random-number","title":"Example: Displaying random number","text":"<ul> <li>Let's drag a button and a text widget inside a container widget.</li> <li>Create a new query and select Run JavaScript code from dropdown.</li> <li>Write the code in JavaScript editor and save the query: <pre><code>const a = Math.floor(Math.random() * (10 - 1)) + 1;\nreturn a;\n</code></pre> :::tip</li> </ul> <p>The return value is used as the <code>data</code> of the query.</p> <p>::: - Let's edit the properties of widgets:     - Add an event handler to the button - Select On Click event, Run Query action, and select the <code>runjs1</code> query that we created. This will run the JavaScript code every time the button is clicked.     - Edit the property of text widget - In the text field enter Random number: <code>{{queries.runjs1.data}}</code>. It will display the output as Random number: result from JS code</p> <p></p> <p>You can also write custom JavaScript code to get the data from External APIs and manipulate the response for graphical representation. Here's the tutorial on how we used custom JavaScript code to build an app using GitHub API.</p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/custom-js/#libraries","title":"Libraries","text":"<p>Insight\u00b2 allows you to internally utilize these libraries:</p> Name Documentation Moment https://momentjs.com/docs/ Lodash https://lodash.com/docs/ Axios https://axios-http.com/docs/intro <p>:::danger</p> <p>Issues with writing custom JavaScript code? Ask in our Slack community.</p> <p>:::</p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/dynamodb/","title":"DynamoDB","text":"<p>Insight\u00b2 can connect to DynamoDB to read and write data.</p>","tags":["Insight\u00b2","Data Sources","DynamoDB"]},{"location":"insight2/data-sources/dynamodb/#connection","title":"Connection","text":"<p>To add a new DynamoDB, click on the <code>+</code> button on data sources panel at the left-bottom corner of the app editor. Select DynamoDB from the modal that pops up.</p> <p>Insight\u00b2 requires the following to connect to your DynamoDB.</p> <ul> <li>Region</li> <li>Access key</li> <li>Secret key</li> </ul> <p>It is recommended to create a new IAM user for the database so that you can control the access levels of Insight\u00b2.</p> <p></p> <p>Click on <code>Test Connection</code> button to verify if the credentials are correct and that the database is accessible to Insight\u00b2 server. Click on <code>Save</code> button to save the data source.</p>","tags":["Insight\u00b2","Data Sources","DynamoDB"]},{"location":"insight2/data-sources/dynamodb/#querying-dynamodb","title":"Querying DynamoDB","text":"<p>Click on <code>+</code> button of the query manager at the bottom panel of the editor and select the database added in the previous step as the data source. Select the operation that you want to perform and click  <code>Save</code>  to save the query.</p> <p></p> <p>Click on the <code>run</code> button to run the query. NOTE: Query should be saved before running. </p> <p> Query results can be transformed using transformations. Read our transformations documentation to see how: link</p>","tags":["Insight\u00b2","Data Sources","DynamoDB"]},{"location":"insight2/data-sources/elasticsearch/","title":"Elasticsearch","text":"<p>Insight\u00b2 can connect to your Elasticsearch cluster to read and write data.</p>","tags":["Insight\u00b2","Data Sources","Elasticsearch"]},{"location":"insight2/data-sources/elasticsearch/#connection","title":"Connection","text":"<p>Please make sure the host/IP of the Elasticsearch cluster is accessible from your VPC if you have self-hosted Insight. If you are using Insight\u00b2 cloud, please whitelist our IP.</p> <p>To add a new Elasticsearch database, click on the <code>+</code> button on data sources panel at the left-bottom corner of the app editor. Select Elasticsearch from the modal that pops up.</p> <p>Insight\u00b2 requires the following to connect to your Elasticsearch cluster:</p> <ul> <li>Host</li> <li>Port</li> <li>Username</li> <li>Password</li> </ul> <p></p> <p>Elastic search datasource is also providing an option for connecting services with ssl certificates.  - You can either use CA / Client certificates option.</p> <p></p>","tags":["Insight\u00b2","Data Sources","Elasticsearch"]},{"location":"insight2/data-sources/elasticsearch/#querying-elasticsearch","title":"Querying Elasticsearch","text":"<p>Click on <code>+</code> button of the query manager at the bottom panel of the editor and select the Elasticsearch added in the previous step as the data source. Select the operation that you want to perform on your Elasticsearch cluster and click <code>Create</code> to save the query.</p> <p></p> <p> Query results can be transformed using transformations. Read our transformations documentation to see how: link</p>","tags":["Insight\u00b2","Data Sources","Elasticsearch"]},{"location":"insight2/data-sources/elasticsearch/#supported-operations","title":"Supported operations","text":"","tags":["Insight\u00b2","Data Sources","Elasticsearch"]},{"location":"insight2/data-sources/elasticsearch/#search","title":"Search","text":"<p>This operation allows you to execute a search query and get back search hits that match the query. Read the Elasticsearch's <code>Search</code> guide here.</p> <p></p>","tags":["Insight\u00b2","Data Sources","Elasticsearch"]},{"location":"insight2/data-sources/elasticsearch/#index-a-document","title":"Index a document","text":"<p>This operation allows you to add a JSON document to the specified data stream or index. Read the Elasticsearch's <code>Index</code> guide here.</p> <p></p>","tags":["Insight\u00b2","Data Sources","Elasticsearch"]},{"location":"insight2/data-sources/elasticsearch/#get-a-document","title":"Get a document","text":"<p>This operation allows you to retrieve the specified JSON document from the index. Read the Elasticsearch's <code>Get</code> guide here.</p> <p></p>","tags":["Insight\u00b2","Data Sources","Elasticsearch"]},{"location":"insight2/data-sources/elasticsearch/#update-a-document","title":"Update a document","text":"<p>This operation allows to update a document using the specified script. Read the Elasticsearch's <code>Update</code> guide here.</p> <p></p>","tags":["Insight\u00b2","Data Sources","Elasticsearch"]},{"location":"insight2/data-sources/firestore/","title":"Cloud Firestore","text":"","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/firestore/#connection","title":"Connection","text":"<p>Insight\u00b2 connects to your Cloud Firestore using JSON key of your GCP service account. To generate a new key, check out Firestore's official documentation.</p> <p>Once the key is downloaded, click on <code>+</code> button of data sources panel at the left-bottom corner of the app editor. Select Firestore from the modal that pops up. Paste the key in the field for GCP key. Click on <code>Test connection</code> button to verify if the service account can access Firestore from Insight\u00b2 server. Click on <code>Save</code> button to save the datasource.</p> <p></p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/firestore/#querying-firestore","title":"Querying Firestore","text":"<p>Click on <code>+</code> button of the query manager at the bottom panel of the editor and select the database added in the previous step as the data source.</p> <p></p> <p>Select the operation that you want to perform on Firestore and click Save to save the query.</p> <p> Query results can be transformed using transformations. Read our transformations documentation to see how: link</p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/firestore/#supported-operations","title":"Supported operations","text":"<ol> <li>Get document</li> <li>Query collection</li> <li>Add Document to Collection</li> <li>Update document</li> <li>Set document</li> <li>Bulk update using document id</li> <li>Delete document</li> </ol>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/firestore/#get-document","title":"Get document","text":"<p>Use this operation to get the data in a document.</p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/firestore/#required-parameters","title":"Required parameters:","text":"<ul> <li>Path: Enter the path of the document. Path format: <code>collection name/document id</code>. Example: <code>books/23e2wsds32</code></li> </ul>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/firestore/#query-collection","title":"Query collection","text":"<p>Use this operation to query all the documents in a collection. Check firestore doc here.</p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/firestore/#required-parameters_1","title":"Required parameters:","text":"<ul> <li>Path: Enter the name of the collection to be queried. Example: <code>books</code></li> </ul>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/firestore/#optional-parameters","title":"Optional parameters:","text":"<ul> <li> <p>Order type: Select ascending or descending from the dropdown.</p> </li> <li> <p>Limit: Maximum number of documents to return in response. By default will return maximum 25 results. Maximum of 100 results allowed per request. The Limit value should be of integer type.</p> </li> <li> <p>Field, Operator, and Value: For filtering the results, you can enter a document field name, use appropriate operator from the dropdown and set a value.</p> </li> </ul> <p></p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/firestore/#add-document-to-collection","title":"Add Document to Collection","text":"<p>Use this operation for creating a new document in a collection.</p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/firestore/#required-parameters_2","title":"Required parameters:","text":"<ul> <li>Collection: Enter the path of the document in a collection. Path format: <code>collection name/document id</code>. Example: <code>books/33243dwe2332</code></li> <li>Body: Enter the Field names and their values in json form. Example body: <pre><code>{\n\"Author\": \"Shubh\",\n\"id\": 5\n}\n</code></pre></li> </ul>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/firestore/#update-document","title":"Update document","text":"<p>Use this operation for updating the existing document in a collection. Also, it only updates fields if they exist, but doesn't replace an entire object like set opertion.</p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/firestore/#required-parameters_3","title":"Required parameters:","text":"<ul> <li>Path: Enter the path of the document in a collection. Path format: <code>collection name/document id</code>. Example: <code>books/33243dwe2332</code></li> <li>Body: Enter the Field names and their values in json form. Example body: <pre><code>{\n\"Author\": \"Shubhendra\",\n\"id\": 3\n}\n</code></pre></li> </ul>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/firestore/#set-document","title":"Set document","text":"<p>This operation replaces your chosen object with the value that you provide. So if your object has 5 fields, and you use Set operation and pass object with 3 fields, it will now have 3 fields.</p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/firestore/#required-parameters_4","title":"Required parameters:","text":"<ul> <li>Path: Enter the path of the document in a collection. Path format: <code>collection name/document id</code>. Example: <code>books/33243dwe2332</code></li> <li>Body: Enter the Field names and their values in json form. Example body: <pre><code>{\n\"Author\": \"Shefewfbh\",\n\"id\": 9\n}\n</code></pre></li> </ul>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/firestore/#bulk-update-using-document-id","title":"Bulk update using document id","text":"<p>Use this operation for bulk updating documents.</p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/firestore/#required-parameters_5","title":"Required parameters:","text":"<ul> <li>Collection:</li> <li>Key for document ID:</li> <li>Records:</li> </ul>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/firestore/#delete-document","title":"Delete document","text":"<p>Use this operation for deleting a document in a collection.</p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/firestore/#required-parameters_6","title":"Required parameters:","text":"<ul> <li>Path: Enter the path of the document to be deleted in a collection. Path format: <code>collection name/document id</code>. Example: <code>books/33243dwe2332</code></li> </ul>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/firestore/#transforming-firestore-query-result-for-table-widget","title":"Transforming firestore query result for Table widget","text":"<p>The Firestore query result is in the form of object so we\u2019ll need to transform it into array.</p> <pre><code>return data = Array(data)\n</code></pre>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/gcs/","title":"Google Cloud Storage","text":"<p>Insight\u00b2 can connect to GCS buckets and perform various operation on them.</p>","tags":["Insight\u00b2","Data Sources","Google Cloud Storage"]},{"location":"insight2/data-sources/gcs/#supported-operations","title":"Supported operations","text":"<ul> <li>Read file</li> <li>Upload file</li> <li>List buckets</li> <li>List files in a bucket</li> <li>Signed url for download</li> <li>Signed url for upload</li> </ul>","tags":["Insight\u00b2","Data Sources","Google Cloud Storage"]},{"location":"insight2/data-sources/gcs/#connection","title":"Connection","text":"<p>To add a new GCS source, click on the Add or edit datasource icon on the left sidebar of the app editor and click on <code>Add datasource</code> button. Select GCS from the modal that pops up.</p> <p>Insight\u00b2 requires the json private key of a service account to be able to connect to GCS. You can follow the google documentation to get started.</p> <p></p> <p>Click on Test connection button to verify if the credentials are correct and that the database is accessible to Insight\u00b2 server. Click on Save button to save the data source.</p>","tags":["Insight\u00b2","Data Sources","Google Cloud Storage"]},{"location":"insight2/data-sources/gcs/#querying-gcs","title":"Querying GCS","text":"<p>Click on <code>+</code> button of the query manager at the bottom panel of the editor and select the data source added in the previous step as the data source. Select the operation that you want to perform and click Save to save the query.</p> <p></p> <p>Click on the <code>run</code> button to run the query. NOTE: Query should be saved before running. </p> <p> Query results can be transformed using transformations. Read our transformations documentation to see how: link</p>","tags":["Insight\u00b2","Data Sources","Google Cloud Storage"]},{"location":"insight2/data-sources/google.sheets/","title":"Google Sheets","text":"<p>Insight\u00b2 can connect to Google Sheet using OAuth 2.0, which helps us to limit an application's access to a user's account.</p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/google.sheets/#how-to-integrate-google-sheets","title":"How to integrate Google Sheets","text":"","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/google.sheets/#self-hosted-configuration","title":"Self-Hosted Configuration","text":"<p>If you are self-hosting the application, you will need to perform some additional steps.</p> <ol> <li>Follow the Google OAuth 2.0 setup steps outlined here</li> <li>Set the following environment variables with the values from the previous step:<ul> <li><code>GOOGLE_CLIENT_ID</code></li> <li><code>GOOGLE_CLIENT_SECRET</code></li> <li><code>TOOLJET_HOST</code></li> </ul> </li> <li>Enable the Google Sheets API in the GCP console</li> </ol>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/google.sheets/#authorization-scopes","title":"Authorization Scopes","text":"<p>You can create a Google Sheets data source with one of either of the two permission scopes :   1. Read Only   2. Read and Write</p> <p></p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/google.sheets/#operations","title":"Operations","text":"<p>Using Google sheets data source you can perfom several operations from your applications like:</p> <ol> <li>Read data from a sheet</li> <li>Append data to a sheet</li> <li>Update single row of a sheet</li> <li>Delete row from a sheet</li> <li>Get spreadsheet info</li> </ol>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/google.sheets/#read-data-from-a-sheet","title":"Read data from a sheet","text":"<p>This operation returns the table data from the spreadsheet in the form of json object.</p> Fields description Spreadsheet ID It is mandatory to enter the spreadsheet-id. The spreadsheet-id can be found in the URL of the spreadsheet. Example URL: https://docs.google.com/spreadsheets/d/1W2S4re7zNaPk9vqv6_CqOpPdm_mDEqmLmzjVe7Nb9WM/edit#gid=0 - in this URL, the <code>1W2S4re7zNaPk9vqv6_CqOpPdm_mDEqmLmzjVe7Nb9WM</code> is the spreadsheet-id. Range This is optional. You can specify the range of cells in this field. If left empty, it will select the range <code>A1:Z500</code>. Sheet This is optional. You can specify <code>sheet name</code> if it has more than 1 sheets, else it will automatically choose the first sheet. <p></p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/google.sheets/#append-data-to-a-sheet","title":"Append data to a sheet","text":"<p>You can add more rows to the table using the append operation.</p> Fields description Spreadsheet ID It is mandatory to enter the spreadsheet-id. The spreadsheet-id can be found in the URL of the spreadsheet. Example URL: https://docs.google.com/spreadsheets/d/1W2S4re7zNaPk9vqv6_CqOpPdm_mDEqmLmzjVe7Nb9WM/edit#gid=0 - in this URL, the <code>1W2S4re7zNaPk9vqv6_CqOpPdm_mDEqmLmzjVe7Nb9WM</code> is the spreadsheet-id. Sheet This is optional. You can specify <code>sheet name</code> if it has more than 1 sheets, else it will automatically choose the first sheet. Rows Enter the row data in the json array form. Each object in an array will represent a single row. Example: <code>[ {\"name\":\"John\", \"email\":\"John@tooljet.com\"},{...},{...} ]</code> In each object, the <code>key</code> represents the column name and the <code>value</code> represents the cell data. <p></p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/google.sheets/#update-single-row-of-a-sheet","title":"Update single row of a sheet","text":"<p>You can update the existing data in sheet using this operation.</p> Fields description Spreadsheet ID It is mandatory to enter the spreadsheet-id. The spreadsheet-id can be found in the URL of the spreadsheet. Example URL: https://docs.google.com/spreadsheets/d/1W2S4re7zNaPk9vqv6_CqOpPdm_mDEqmLmzjVe7Nb9WM/edit#gid=0 - in this URL, the <code>1W2S4re7zNaPk9vqv6_CqOpPdm_mDEqmLmzjVe7Nb9WM</code> is the spreadsheet-id. Where Enter the column name such as <code>id</code> for choosing a row. Operator Choose the <code>===</code> operator to check the equality. Value Enter the any <code>id</code> number/name that you want to update. Rows Enter the row data. Example: <code>{{({id: components.textinput4.value, company: components.textinput1.value, position: components.textinput2.value, url: components.textinput3.value, 'date-applied': components.datepicker1.value, status: components.dropdown1.value})}}</code> <p></p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/google.sheets/#delete-row-from-a-sheet","title":"Delete row from a sheet","text":"<p>Use this operation delete a specific row from the sheet.</p> Fields description Spreadsheet ID It is mandatory to enter the spreadsheet-id. The spreadsheet-id can be found in the URL of the spreadsheet. Example URL: https://docs.google.com/spreadsheets/d/1W2S4re7zNaPk9vqv6_CqOpPdm_mDEqmLmzjVe7Nb9WM/edit#gid=0 - in this URL, the <code>1W2S4re7zNaPk9vqv6_CqOpPdm_mDEqmLmzjVe7Nb9WM</code> is the spreadsheet-id. GID You'll find the GID in the end of the URL of spreadsheet. In the example mentioned above, the GID is 0 Delete row number Just enter the row number that you want to delete. <p></p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/google.sheets/#get-spreadsheet-info","title":"Get spreadsheet info","text":"<p>This operation can be used to get some basic information of the spreadsheet such as the number of sheets, theme, time-zone, format, and url etc.</p> <p>Here is the <code>Preview</code> of the query that used the get spreadsheet info operation.</p> <p></p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/graphql/","title":"GraphQL","text":"<p>Insight\u00b2 can connect to GraphQL endpoints to execute queries and mutations.</p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/graphql/#connection","title":"Connection","text":"<p>To add a new GraphQL datasource, click the <code>+</code> button on  data sources panel at the bottom-left corner of the app builder and then select GraphQL from the modal that pops up.</p> <p>Insight\u00b2 requires the following to connect to a GraphQL datasource.</p> <ul> <li>URL of the GraphQL endpoint</li> </ul> <p>The following optional parameters are also supported:</p> Type Description URL params Additional query string parameters headers Any headers the GraphQL source requires <p></p> <p>Click on the 'Save' button to save the data source.</p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/graphql/#querying-graphql","title":"Querying GraphQL","text":"<p>Click on <code>+</code> button of the query manager at the bottom panel of the editor and select the GraphQL endpoint added in the previous step as the  data source.</p> <p></p> <p>Click on the 'run' button to run the query. NOTE: Query should be saved before running.</p> <p>:::tip Query results can be transformed using transformations. Read our transformations documentation to see how: link :::</p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/influxdb/","title":"InfluxDB","text":"<p>Insight\u00b2 can connect to InfluxDB databases to read and write data. Use the Token authentication scheme to authenticate to the InfluxDB API. For more information visit InfluxDB docs.</p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/influxdb/#connection","title":"Connection","text":"<p>Insight\u00b2 connects to InfluxDB using :</p> <ul> <li>API Token</li> <li>Host</li> <li>Port</li> <li>Protocol (HTTP/HTTPS)</li> </ul> <p>For generating API Token visit InfluxDB docs.</p> <p></p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/influxdb/#supported-queries","title":"Supported queries:","text":"<ul> <li> <p>Write data</p> </li> <li> <p>Query data</p> </li> <li> <p>Generate an Abstract Syntax Tree (AST) from a query</p> </li> <li> <p>Retrieve query suggestions</p> </li> <li> <p>Retrieve query suggestions for a branching suggestion</p> </li> <li> <p>Analyze a Flux query</p> </li> <li> <p>List buckets</p> </li> <li> <p>Create a bucket</p> </li> <li> <p>Retrieve a bucket</p> </li> <li> <p>Update a bucket</p> </li> <li> <p>Delete a bucket</p> </li> </ul> <p></p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/influxdb/#write-data","title":"Write data","text":"<p>This operation writes data to a bucket.</p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/influxdb/#required-parameters","title":"Required parameters:","text":"<ul> <li>Bucket</li> <li>Organization name or ID</li> </ul>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/influxdb/#optional-parameters","title":"Optional parameters:","text":"<ul> <li>Precision</li> </ul>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/influxdb/#query-data","title":"Query data","text":"<p>Retrieves data from InfluxDB buckets.</p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/influxdb/#required-parameters_1","title":"Required parameters:","text":"<ul> <li>Organization name or ID</li> </ul>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/influxdb/#generate-an-abstract-syntax-tree-ast-from-a-query","title":"Generate an Abstract Syntax Tree (AST) from a query","text":"<p>This operation analyzes flux query and generates a query specification.</p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/influxdb/#required-parameters_2","title":"Required parameters:","text":"<ul> <li>Query</li> </ul>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/influxdb/#retrieve-query-suggestions","title":"Retrieve query suggestions","text":"<p>This query retrieve query suggestions.</p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/influxdb/#retrieve-query-suggestions-for-a-branching-suggestion","title":"Retrieve query suggestions for a branching suggestion","text":"<p>This operation retrieve query suggestions for a branching suggestion.</p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/influxdb/#required-parameters_3","title":"Required parameters:","text":"<ul> <li>Name</li> </ul>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/influxdb/#analyze-a-flux-query","title":"Analyze a Flux query","text":"<p>This Analyzes a Flux query.</p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/influxdb/#required-parameters_4","title":"Required parameters:","text":"<ul> <li>Query</li> </ul>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/influxdb/#list-buckets","title":"List buckets","text":"<p>This operation lists all the buckets in a database.</p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/influxdb/#create-a-bucket","title":"Create a bucket","text":"","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/influxdb/#required-parameters_5","title":"Required parameters:","text":"<ul> <li>Query</li> </ul>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/influxdb/#retrieve-a-bucket","title":"Retrieve a bucket","text":"<p>This operation retrieve a bucket in a database.</p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/influxdb/#required-parameters_6","title":"Required parameters:","text":"<ul> <li>Bucket ID</li> </ul>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/influxdb/#update-a-bucket","title":"Update a bucket","text":"","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/influxdb/#required-parameters_7","title":"Required parameters:","text":"<ul> <li>Bucket ID</li> <li>Query</li> </ul>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/influxdb/#delete-a-bucket","title":"Delete a bucket","text":"","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/influxdb/#required-parameters_8","title":"Required parameters:","text":"<ul> <li>Bucket ID</li> </ul>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/mailgun/","title":"Mailgun","text":"<p>Insight\u00b2 can connect to your Mailgun account to send emails.</p> <p></p> <p>:::info The Mailgun API Datasource supports for interaction with the mail endpoint of the Mailgun API. :::</p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/mailgun/#connection","title":"Connection","text":"<p>To add a new Mailgun API datasource, click the Datasource manager icon on the left-sidebar of the app builder and click on the <code>Add datasource</code> button, then select Mailgun API from the modal that pops up.</p> <p>Enter your Mailgun API key in the \"API key\" field.</p> <p>:::tip Mailgun API key is required to create an Mailgun datasource on Insight. You can generate API key by visiting Mailgun account page. :::</p> <p>Click on the 'Save' button to save the data source.</p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/mailgun/#supported-operations","title":"Supported operations","text":"<ol> <li>Email service</li> </ol>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/mailgun/#email-service","title":"Email service","text":"<p>Required parameters:</p> <ul> <li>Send email to</li> <li>Send email from</li> <li>Subject</li> <li>Body as text</li> </ul> <p>Optional parameters:</p> <ul> <li>Body as HTML</li> </ul> <p></p> <p>:::info Send mail to - accepts a single email id. For example: <code>{{\"dev@tooljet.io\"}}</code>.</p> <p>Send mail from - accepts a string. For example: <code>admin@tooljet.io</code> :::</p> <p>:::tip Send a single email to multiple recipients - The <code>Send mail to</code> field can contain an array of recipients, which will send a single email with all of the recipients in the field.</p> <p>Send multiple individual emails to multiple recipients - set Multiple recipients field to <code>{{true}}</code> and the <code>Send mail to</code> field will be split into multiple emails and send to each recipient. :::</p> <p>:::note NOTE: Query should be saved before running. :::</p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/minio/","title":"MinIO","text":"<p>Insight\u00b2 can connect to minio and perform various operation on them.</p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/minio/#supported-operations","title":"Supported operations","text":"<ul> <li>Read object</li> <li>Put object</li> <li>List buckets</li> <li>List objects in a bucket</li> <li>Presigned url for download</li> <li>Presigned url for upload</li> </ul>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/minio/#connection","title":"Connection","text":"<p>To add a new minio source, click on the Add or edit datasource icon on the left sidebar of the app editor and click on <code>Add datasource</code> button. Select Minio from the modal that pops up.</p> <p>Insight\u00b2 requires the following to connect to your DynamoDB:</p> <ul> <li>Host</li> <li>Port</li> <li>Access key</li> <li>Secret key</li> </ul> <p></p> <p>Click on Test connection button to verify if the credentials are correct and that the database is accessible to Insight\u00b2 server. Click on Save button to save the data source.</p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/minio/#querying-minio","title":"Querying Minio","text":"<p>Click on <code>+</code> button of the query manager at the bottom panel of the editor and select the data source added in the previous step as the data source. Select the operation that you want to perform and click Save to save the query.</p> <p></p> <p>Click on the run button to run the query. NOTE: Query should be saved before running.</p> <p>:::tip Query results can be transformed using transformations. Read our transformations documentation to see how: link :::</p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/mongodb/","title":"MongoDB","text":"<p>Insight\u00b2 can connect to MongoDB to read and write data.</p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/mongodb/#connection","title":"Connection","text":"<p>Please make sure the host/ip of the database is accessible from your VPC if you have self-hosted Insight. If you are using Insight\u00b2 cloud, please whitelist our IP.</p> <p>To add a new MongoDB, click on the <code>+</code> button on data sources panel at the left-bottom corner of the app editor. Select MongoDB from the modal that pops up.</p> <p>Insight\u00b2 requires the following to connect to your MongoDB.</p> <ul> <li>Host</li> <li>Port</li> <li>Username</li> <li>Password</li> </ul> <p>It is recommended to create a new MongoDB user so that you can control the access levels of Insight.</p> <p></p> <p>Click on 'Test connection' button to verify if the credentials are correct and that the database is accessible to Insight\u00b2 server. Click on 'Save' button to save the data source.</p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/mongodb/#querying-mongodb","title":"Querying MongoDB","text":"<p>Click on <code>+</code> button of the query manager at the bottom panel of the editor and select the database added in the previous step as the data source. Select the operation that you want to perform and click 'Save' to save the query.</p> <p></p> <p>Click on the 'run' button to run the query. NOTE: Query should be saved before running.</p> <p>:::tip Query results can be transformed using transformations. Read our transformations documentation to see how: link :::</p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/mongodb/#supported-operations","title":"Supported operations","text":"<ul> <li>MongoDB<ul> <li>Connection</li> <li>Querying MongoDB<ul> <li>Supported operations<ul> <li>List Collections</li> <li>Fine One</li> <li>Fine Many</li> <li>Total Count</li> <li>Count</li> <li>Distinct</li> <li>Insert One</li> <li>Insert Many</li> <li>Update One</li> <li>Update Many</li> <li>Replace One</li> <li>Find One and Update</li> <li>Find One and Replace</li> <li>Find One and Delete</li> <li>Aggregate</li> <li>Delete One</li> <li>Delete Many</li> <li>Bulk Operations</li> </ul> </li> <li>Dynamic Quries</li> </ul> </li> </ul> </li> </ul>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/mongodb/#list-collections","title":"List Collections","text":"<p>Retruns list of collections</p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/mongodb/#fine-one","title":"Fine One","text":"<p>Return a document which satisfy the given filter and options. Reference</p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/mongodb/#fine-many","title":"Fine Many","text":"<p>Return list of documents which satisfy the given filter and options. Reference</p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/mongodb/#total-count","title":"Total Count","text":"<p>Returns an estimation of the number of documents in the collection based on collection metadata. Reference</p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/mongodb/#count","title":"Count","text":"<p>Returns the number of documents based on the filter. Reference</p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/mongodb/#distinct","title":"Distinct","text":"<p>Retrieve a list of distinct values for a field based on the filter. Reference</p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/mongodb/#insert-one","title":"Insert One","text":"<p>Insert a document. Reference</p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/mongodb/#insert-many","title":"Insert Many","text":"<p>Insert list of documents. Reference</p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/mongodb/#update-one","title":"Update One","text":"<p>Update a document based on the filter. Reference</p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/mongodb/#update-many","title":"Update Many","text":"<p>Update many documents based on the filter. Reference</p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/mongodb/#replace-one","title":"Replace One","text":"<p>Replace a document based on filter. Reference</p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/mongodb/#find-one-and-update","title":"Find One and Update","text":"<p>If your application requires the document after updating, use this instead of <code>Update One</code>. Reference</p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/mongodb/#find-one-and-replace","title":"Find One and Replace","text":"<p>If your application requires the document after updating, use this instead of <code>Replace One</code>. Reference</p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/mongodb/#find-one-and-delete","title":"Find One and Delete","text":"<p>If your application requires the document after deleting, use this instead of <code>Delete One</code>. Reference</p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/mongodb/#aggregate","title":"Aggregate","text":"<p>Aggregation operations are expressions you can use to produce reduced and summarized results. Reference</p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/mongodb/#delete-one","title":"Delete One","text":"<p>Delete a record based on the filter. Reference</p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/mongodb/#delete-many","title":"Delete Many","text":"<p>Delete many records based on the filter. Reference</p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/mongodb/#bulk-operations","title":"Bulk Operations","text":"<p>Perform bulk operations. Reference</p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/mongodb/#dynamic-quries","title":"Dynamic Quries","text":"<p><pre><code>{ amount: { $lt: '{{ components.textinput1.value }}' }}\n\n// Dates\n// supported: Extended JSON syntax\n{ createdAt: { $date: '{{ new Date('01/10/2020') }}'} }\n// not supported: MongoDB classic syntax\n{ createdAt: new Date('01/10/2020') }\n</code></pre> Reference on mongodb extended JSON supported data types</p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/mssql/","title":"MS SQL Server / Azure SQL databases","text":"<p>Insight\u00b2 can connect to MS SQL Server &amp; Azure SQL databases to read and write data.</p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/mssql/#connection","title":"Connection","text":"<p>Please make sure the host/ip of the database is accessible from your VPC if you have self-hosted Insight. If you are using Insight\u00b2 cloud, please whitelist our IP.</p> <p>To add new MS SQL Server / Azure SQL database, click on the '+' button on data sources panel at the left-bottom corner of the app editor. Select <code>SQL Server</code> from the modal that pops up.</p> <p>Insight\u00b2 requires the following to connect to your PostgreSQL database.</p> <ul> <li>Host</li> <li>Port</li> <li>Username</li> <li>Password</li> <li>Azure - Select this option if you are using Azure SQL databases.</li> </ul> <p>It is recommended to create a new database user so that you can control the access levels of Insight.</p> <p>Click on 'Test connection' button to verify if the credentials are correct and that the database is accessible to Insight\u00b2 server. Click on 'Save' button to save the data source.</p> <p></p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/mssql/#querying-sql-server-azure-sql-databases","title":"Querying SQL Server / Azure SQL databases","text":"<p>Click on '+' button of the query manager at the bottom panel of the editor and select the database added in the previous step as the data source.</p> <p>Click on the 'run' button to run the query. NOTE: Query should be saved before running.</p> <p></p> <p>:::tip Query results can be transformed using transformations. Read our transformations documentation to see how: link :::</p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/mysql/","title":"MySQL","text":"<p>Insight\u00b2 can connect to MySQL databases to read and write data.</p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/mysql/#connection","title":"Connection","text":"<p>Insight\u00b2 requires the following to connect to your MySQL database. Please make sure the host/ip of the database is accessible from your VPC if you have self-hosted Insight. If you are using Insight\u00b2 cloud, please whitelist our IP.</p> <p>To add a new MySQL database, click on the <code>+</code> button on data sources panel at left sidebar in the app editor. Select MySQL from the modal that pops up.</p> <p>Insight\u00b2 requires the following to connect to your MySQL database.</p> <ul> <li>Host</li> <li>Port</li> <li>Username</li> <li>Password</li> </ul> <p>It is recommended to create a new MySQL database user so that you can control the access levels of Insight.</p> <p></p> <p>Click on Test connection button to verify if the credentials are correct and that the database is accessible to Insight\u00b2 server. Click on Save button to save the data source.</p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/mysql/#querying-mysql","title":"Querying MySQL","text":"<p>Once you have added a MySQL data source, click on <code>+</code> button of the query manager to create a new query. There are two modes by which you can query SQL:</p> <ol> <li>SQL mode</li> <li>GUI mode</li> </ol>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/mysql/#sql-mode","title":"SQL mode","text":"<p>SQL mode can be used to write raw SQL queries. Select SQL mode from the dropdown and enter the SQL query in the editor. Click on the <code>run</code> button to run the query.</p> <p>NOTE: Query should be saved before running.</p> <p></p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/mysql/#gui-mode","title":"GUI mode","text":"<p>GUI mode can be used to query MySQL database without writing queries. Select GUI mode from the dropdown and then choose the operation Bulk update using primary key. Enter the Table name and Primary key column name. Now, in the editor enter the records in the form of an array of objects.</p> <p>Example: <code>{{ [ {id: 1, channel: 33}, {id:2, channel:24} ] }}</code></p> <p></p> <p>Click on the run button to run the query. NOTE: Query should be saved before running.</p> <p>:::tip Query results can be transformed using transformations. Read our transformations documentation to see how: link :::</p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/n8n/","title":"n8n","text":"<p>Insight\u00b2 can trigger n8n workflows using webhook URLs. Please refer this to know more about n8n.</p>","tags":["Insight\u00b2","Data Sources","n8n"]},{"location":"insight2/data-sources/n8n/#connection","title":"Connection","text":"<p>Go to the data source manager on the left sidebar and click on <code>+</code> button to add new data source. Select n8n from the list of available data sources in the modal that pops-up.</p> <p>n8n webhooks can be called with or without an Authentication. You can keep the <code>Authentication type</code> as <code>none</code> if your webhook didn't have one or if it has one then you can choose the one from the dropdown and provide credentials:</p>","tags":["Insight\u00b2","Data Sources","n8n"]},{"location":"insight2/data-sources/n8n/#authentication-types","title":"Authentication Types","text":"<ul> <li>Basic Auth: To connect your n8n webhooks using basic auth you'll need to provide the following credentials:<ul> <li>Username</li> <li>Password</li> </ul> </li> </ul> <ul> <li>Header Auth: To connect your n8n webhooks using header auth the following fields are required:<ul> <li>Name / Key</li> <li>Value</li> </ul> </li> </ul> <p> Webhook credentials and instance credentials are different. Please use the credentials that you use with the webhook trigger. Know more: Webhook Authentication.</p>","tags":["Insight\u00b2","Data Sources","n8n"]},{"location":"insight2/data-sources/n8n/#trigger-workflow","title":"Trigger Workflow","text":"<p>Click on <code>+</code> button of the query manager at the bottom panel of the editor and the select n8n as the datasource.</p> <p>You can trigger a workflow with <code>GET/POST</code> URL. Choose the request type from the <code>Methods</code> dropdown and then provide the required fields:   - URL parameters (Support for GET &amp; POST) <code>Optional</code>   - Body (Only for POST URL) <code>Required</code></p> <p></p>","tags":["Insight\u00b2","Data Sources","n8n"]},{"location":"insight2/data-sources/notion/","title":"Notion","text":"<p>Insight\u00b2 can connect to a Notion workspace to do operations on notion pages, databases and blocks.</p>","tags":["Insight\u00b2","Data Sources","Notion"]},{"location":"insight2/data-sources/notion/#connection","title":"Connection","text":"<p>For integrating Notion with Insight\u00b2 we will need the API token. The API token can be generated from your Notion workspace settings. Read the official Notion docs for Creating an internal integration with notion API.</p> <p></p>","tags":["Insight\u00b2","Data Sources","Notion"]},{"location":"insight2/data-sources/notion/#querying-notion","title":"Querying Notion","text":"<p>Notion API provides support for: - Database - Page - Block - User</p> <p></p> <p></p> <p>Before querying Notion, you must share the database with your integration. Click the share button in your database view, find your integration name select it.</p> <p></p> <p></p>","tags":["Insight\u00b2","Data Sources","Notion"]},{"location":"insight2/data-sources/notion/#database","title":"Database","text":"<p>On database resource you can perform the following operations: - Retrieve a database - Query a database - Create a database - Update a database</p> <p></p>","tags":["Insight\u00b2","Data Sources","Notion"]},{"location":"insight2/data-sources/notion/#1-retrieve-a-database","title":"1. Retrieve a database","text":"<p>This operations retreives a Database object using the ID specified.</p>","tags":["Insight\u00b2","Data Sources","Notion"]},{"location":"insight2/data-sources/notion/#required-parameters","title":"Required parameters:","text":"<ul> <li>Database ID: You'll find the Database ID in the url. Suppose this is the example url: <code>https://www.notion.so/workspace/XXX?v=YYY&amp;p=ZZZ</code> then <code>XXX</code> is the database ID, <code>YYY</code> is the view ID and <code>ZZZ</code> is the page ID.</li> </ul>","tags":["Insight\u00b2","Data Sources","Notion"]},{"location":"insight2/data-sources/notion/#2-query-a-database","title":"2. Query a database","text":"<p>This operation gets a list of Pages contained in the database, filtered and ordered according to the filter conditions and sort criteria provided in the query.</p>","tags":["Insight\u00b2","Data Sources","Notion"]},{"location":"insight2/data-sources/notion/#required-parameters_1","title":"Required parameters:","text":"<ul> <li>Database ID : You'll find the Database ID in the url. Suppose this is the example url: <code>https://www.notion.so/workspace/XXX?v=YYY&amp;p=ZZZ</code> then <code>XXX</code> is the database ID, <code>YYY</code> is the view ID and <code>ZZZ</code> is the page ID.</li> </ul>","tags":["Insight\u00b2","Data Sources","Notion"]},{"location":"insight2/data-sources/notion/#optional-parameters","title":"Optional parameters:","text":"<ul> <li>Filter : This must be an object of filters</li> <li>Sort : Array of sort objects</li> <li>Limit : limit for pagination</li> <li>Start Cursor : Next object id to continue pagination</li> </ul>","tags":["Insight\u00b2","Data Sources","Notion"]},{"location":"insight2/data-sources/notion/#3-create-a-database","title":"3. Create a database","text":"<p>This opertion creates a database as a subpage in the specified parent page, with the specified properties.</p>","tags":["Insight\u00b2","Data Sources","Notion"]},{"location":"insight2/data-sources/notion/#required-parameters_2","title":"Required parameters:","text":"<ul> <li>Database ID : You'll find the Database ID in the url. Suppose this is the example url: <code>https://www.notion.so/workspace/XXX?v=YYY&amp;p=ZZZ</code> then <code>XXX</code> is the database ID, <code>YYY</code> is the view ID and <code>ZZZ</code> is the page ID.</li> <li>Page ID : Page ID of the parent</li> <li>Properties : Properties defines the columns in a database</li> </ul>","tags":["Insight\u00b2","Data Sources","Notion"]},{"location":"insight2/data-sources/notion/#optional-parameters_1","title":"Optional parameters:","text":"<ul> <li>Title : Title should be an array of rich_text properties</li> <li>Icon type : Currently notion api accepts two icon options, emoji, external URL</li> <li>Icon value : Value of selected icon type</li> <li>Icon type : Currently notion api accepts only external URL</li> <li>Cover value : Value of selected cover type</li> </ul>","tags":["Insight\u00b2","Data Sources","Notion"]},{"location":"insight2/data-sources/notion/#4-update-a-database","title":"4. Update a database","text":"<p>This operation updates an existing database as specified by the parameters.</p>","tags":["Insight\u00b2","Data Sources","Notion"]},{"location":"insight2/data-sources/notion/#required-parameters_3","title":"Required parameters:","text":"<ul> <li>Database ID</li> </ul>","tags":["Insight\u00b2","Data Sources","Notion"]},{"location":"insight2/data-sources/notion/#optional-parameters_2","title":"Optional parameters:","text":"<ul> <li>Title : Title should be an array of rich_text properties</li> <li>Properties : Properties defines the columns in a database</li> <li>Icon type : Currently notion api accepts two icon options, emoji, external URL</li> <li>Icon value : Value of selected icon type</li> <li>Icon type : Currently notion api accepts only external URL</li> <li>Cover value : Value of selected cover type</li> </ul>","tags":["Insight\u00b2","Data Sources","Notion"]},{"location":"insight2/data-sources/notion/#page","title":"Page","text":"<p>On page resource you can perform the following operations: - Retrieve a page - Create a page - Update a page - Retrieve a page property - Archive a page</p> <p></p>","tags":["Insight\u00b2","Data Sources","Notion"]},{"location":"insight2/data-sources/notion/#1-retrieve-a-page","title":"1. Retrieve a page","text":"<p>This operation retrieves a Page object using the ID specified.</p>","tags":["Insight\u00b2","Data Sources","Notion"]},{"location":"insight2/data-sources/notion/#required-parameters_4","title":"Required parameters:","text":"<ul> <li>Page ID</li> </ul>","tags":["Insight\u00b2","Data Sources","Notion"]},{"location":"insight2/data-sources/notion/#2-create-a-page","title":"2. Create a page","text":"<p>This operation creates a new page in the specified database or as a child of an existing page. If the parent is a database, the property values of the new page in the properties parameter must conform to the parent database's property schema. If the parent is a page, the only valid property is title.</p>","tags":["Insight\u00b2","Data Sources","Notion"]},{"location":"insight2/data-sources/notion/#parameters","title":"Parameters:","text":"<ul> <li>Page ID</li> <li>Properties : Property values of this page</li> <li>Icon type : Currently notion api accepts two icon options, emoji, external URL</li> <li>Icon value: Value of selected icon type</li> <li>Icon type : Currently notion api accepts only external URL</li> <li>Cover value : Value of selected cover type</li> </ul>","tags":["Insight\u00b2","Data Sources","Notion"]},{"location":"insight2/data-sources/notion/#3-update-a-page","title":"3. Update a page","text":"<p>This operation updates page property values for the specified page. Properties that are not set via the properties parameter will remain unchanged.</p>","tags":["Insight\u00b2","Data Sources","Notion"]},{"location":"insight2/data-sources/notion/#parameters_1","title":"Parameters:","text":"<ul> <li>Page ID</li> <li>Parent type: A database parent or page parent</li> <li>Properties : Property values of this page</li> <li>Children : Page content for the new page as an array of block objects</li> <li>Icon type : Currently notion api accepts two icon options, emoji, external URL</li> <li>Icon value: Value of selected icon type</li> <li>Icon type : Currently notion api accepts only external URL</li> <li>Cover value : Value of selected cover type</li> </ul>","tags":["Insight\u00b2","Data Sources","Notion"]},{"location":"insight2/data-sources/notion/#4-retrieve-a-page-property-item","title":"4. Retrieve a page property item","text":"<p>This operation retrieves a property_item object for a given page ID and property ID. Depending on the property type, the object returned will either be a value or a paginated list of property item values. See Property item objects for specifics.</p>","tags":["Insight\u00b2","Data Sources","Notion"]},{"location":"insight2/data-sources/notion/#parameters_2","title":"Parameters:","text":"<ul> <li>Page ID</li> <li>Property ID</li> <li>Limit</li> <li>Start cursor</li> </ul>","tags":["Insight\u00b2","Data Sources","Notion"]},{"location":"insight2/data-sources/notion/#5-archive-delete-a-page","title":"5. Archive (delete) a page","text":"","tags":["Insight\u00b2","Data Sources","Notion"]},{"location":"insight2/data-sources/notion/#required-parameters_5","title":"Required parameters:","text":"<ul> <li>Page ID</li> <li>Archive: Dropdown for archive and un archive the page</li> </ul>","tags":["Insight\u00b2","Data Sources","Notion"]},{"location":"insight2/data-sources/notion/#blocks","title":"Blocks","text":"<p>The following operations can be performed on the block resource: - Retrieve a block - Append block children - Retrieve block children - Update a block - Delete a block</p> <p></p> <p> To get the id for blocks, simply click on the menu icon for the block and click \"Copy link\". Afterwards, paste the link in the browser and it should look like this: <code>https://www.notion.so/Creating-Page-Sample-ee18b8779ae54f358b09221d6665ee15#7fcb3940a1264aadb2ad4ee9ffe11b0e</code> the string after # is the block id i.e. <code>7fcb3940a1264aadb2ad4ee9ffe11b0e</code>.</p>","tags":["Insight\u00b2","Data Sources","Notion"]},{"location":"insight2/data-sources/notion/#1-retrieve-a-block","title":"1. Retrieve a block","text":"<p>This operation retrieves a Block object using the ID specified.</p>","tags":["Insight\u00b2","Data Sources","Notion"]},{"location":"insight2/data-sources/notion/#required-parameters_6","title":"Required parameters:","text":"<ul> <li>Block ID</li> </ul>","tags":["Insight\u00b2","Data Sources","Notion"]},{"location":"insight2/data-sources/notion/#2-append-new-block-children","title":"2. Append new block children","text":"<p>This operation creates and appends new children blocks to the parent block_id specified.</p>","tags":["Insight\u00b2","Data Sources","Notion"]},{"location":"insight2/data-sources/notion/#required-parameters_7","title":"Required parameters:","text":"<ul> <li>Block ID</li> <li>Children: Array of block objects</li> </ul>","tags":["Insight\u00b2","Data Sources","Notion"]},{"location":"insight2/data-sources/notion/#3-retrieve-block-children","title":"3. Retrieve block children","text":"<p>This operation retrieves a paginated array of child block objects contained in the block using the ID specified.</p>","tags":["Insight\u00b2","Data Sources","Notion"]},{"location":"insight2/data-sources/notion/#required-parameters_8","title":"Required parameters:","text":"<ul> <li>Block ID</li> <li>Limit</li> <li>Start cursor</li> </ul>","tags":["Insight\u00b2","Data Sources","Notion"]},{"location":"insight2/data-sources/notion/#4-update-a-block","title":"4. Update a block","text":"<p>This operation updates the content for the specified block_id based on the block type.</p>","tags":["Insight\u00b2","Data Sources","Notion"]},{"location":"insight2/data-sources/notion/#required-parameters_9","title":"Required parameters:","text":"<ul> <li>Block ID</li> <li>Properties: The block object type value with the properties to be updated</li> <li>Archive</li> </ul>","tags":["Insight\u00b2","Data Sources","Notion"]},{"location":"insight2/data-sources/notion/#5-delete-a-block","title":"5. Delete a block","text":"","tags":["Insight\u00b2","Data Sources","Notion"]},{"location":"insight2/data-sources/notion/#required-parameters_10","title":"Required parameters:","text":"<ul> <li>Block ID</li> </ul>","tags":["Insight\u00b2","Data Sources","Notion"]},{"location":"insight2/data-sources/notion/#user","title":"User","text":"<p>The following operations can be performed on the user notion resource:</p>","tags":["Insight\u00b2","Data Sources","Notion"]},{"location":"insight2/data-sources/notion/#1-retrieve-a-user-from-current-workspace","title":"1. Retrieve a user from current workspace","text":"<p>This operation retrieves a User using the ID specified.</p> <p></p>","tags":["Insight\u00b2","Data Sources","Notion"]},{"location":"insight2/data-sources/notion/#required-parameters_11","title":"Required parameters:","text":"<ul> <li>User ID</li> </ul>","tags":["Insight\u00b2","Data Sources","Notion"]},{"location":"insight2/data-sources/notion/#2-retrieve-list-of-users-of-a-workspace","title":"2. Retrieve list of users of a workspace","text":"<p>This operation returns a paginated list of Users for the workspace.</p>","tags":["Insight\u00b2","Data Sources","Notion"]},{"location":"insight2/data-sources/notion/#required-parameters_12","title":"Required parameters:","text":"<ul> <li>Limit</li> <li>Start cursor</li> </ul> <p>Read more about notion API</p>","tags":["Insight\u00b2","Data Sources","Notion"]},{"location":"insight2/data-sources/openapi/","title":"OpenAPI","text":"<p>Insight\u00b2 has a data source for generating REST API operations from OpenAPI Specs.</p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/openapi/#connection","title":"Connection","text":"<ul> <li> <p>Connections are generated from OpenAPI specifications. Currently supports Basic Auth, API Key, Bearer Token, OAuth 2.0</p> </li> <li> <p>Also supports specifications with multiple authentications</p> </li> </ul> <p>Read more </p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/openapi/#querying-openapi","title":"Querying OpenAPI","text":"<ul> <li>Operations will be generated from specifications and each one will be different from other  </li> </ul>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/openapi/#common-fields","title":"Common fields","text":"<ul> <li>Host (Base URL)</li> </ul> <p>Some specs can have one or more base URLs/servers and specific operations may have separate Base URLs. So you can select the URL from the host select</p> <ul> <li>Operation</li> </ul>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/oracledb/","title":"Oracle DB","text":"<p>Insight\u00b2 can connect to Oracle databases to read and write data.</p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/oracledb/#connection","title":"Connection","text":"<p>A Oracle DB can be connected with the following credentails: - Host - Port - SID / Service Name ( Database name must be a SID / Service Name ) - Database Name - SSL - Username - Password - Client Library Path ( Only required for local setup )</p> <p></p> <p>Click on Test connection button to verify if the credentials are correct and that the database is accessible to Insight\u00b2 server. Click on Save button to save the data source.</p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/oracledb/#querying-oracle-db","title":"Querying Oracle DB","text":"<p>Once you have added a Oracle DB data source, click on <code>+</code> button of the query manager to create a new query. There are two modes by which you can query SQL:</p> <ol> <li>SQL mode</li> <li>GUI mode</li> </ol>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/oracledb/#sql-mode","title":"SQL mode","text":"<p>SQL mode can be used to write raw SQL queries. Select SQL mode from the dropdown and enter the SQL query in the editor. Click on the <code>run</code> button to run the query.</p> <p>NOTE: Query should be saved before running.</p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/oracledb/#gui-mode","title":"GUI mode","text":"<p>GUI mode can be used to query Oracle database without writing queries. Select GUI mode from the dropdown and then choose the operation Bulk update using primary key. Enter the Table name and Primary key column name. Now, in the editor enter the records in the form of an array of objects.</p> <p>Example: <code>{{ [ {id: 1, channel: 33}, {id:2, channel:24} ] }}</code></p> <p>Click on the run button to run the query. NOTE: Query should be saved before running.</p> <p>:::tip Query results can be transformed using transformations. Read our transformations documentation to see how: link :::</p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/postgresql/","title":"PostgreSQL","text":"<p>Insight\u00b2 can connect to PostgreSQL databases to read and write data.</p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/postgresql/#connection","title":"Connection","text":"<p>Please make sure the host/ip of the database is accessible from your VPC if you have self-hosted Insight. If you are using Insight\u00b2 cloud, please whitelist our IP.</p> <p>To add a new PostgreSQL database, click on the <code>+</code> button on data sources panel at the left-bottom corner of the app editor. Select PostgreSQL from the modal that pops up.</p> <p>Insight\u00b2 requires the following to connect to your PostgreSQL database.</p> <ul> <li>Host</li> <li>Port</li> <li>Username</li> <li>Password</li> </ul> <p>It is recommended to create a new PostgreSQL database user so that you can control the access levels of Insight.</p> <p></p> <p>Click on Test connection button to verify if the credentials are correct and that the database is accessible to Insight\u00b2 server. Click on Save button to save the data source.</p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/postgresql/#querying-postgresql","title":"Querying PostgreSQL","text":"<p>Click on <code>+</code> button of the query manager at the bottom panel of the editor and select the database added in the previous step as the data source. PostgreSQL query editor has two modes, SQL &amp; GUI. SQL mode can be used to write raw SQL queries and GUI mode can be used to query your PostgreSQL database without writing queries.</p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/postgresql/#sql-mode","title":"SQL mode","text":"<p>Select SQL mode from the dropdown and enter the query in the editor. Click on the <code>run</code> button to run the query.</p> <p>NOTE: Query should be saved before running.</p> <p></p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/postgresql/#gui-mode","title":"GUI mode","text":"<p>Select GUI mode from the dropdown and then choose the operation Bulk update using primary key. Enter the Table name and Primary key column name. Now, in the editor enter the records in the form of an array of objects.</p> <p>Click on the <code>run</code> button to run the query. NOTE: Query should be saved before running.</p> <p></p> <p>:::tip Query results can be transformed using transformations. Read our transformations documentation to see how: link :::</p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/redis/","title":"Redis","text":"<p>Insight\u00b2 can run Redis commands on your Redis instances.</p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/redis/#connection","title":"Connection","text":"<p>Insight\u00b2 requires the following to connect to your Redis instances.</p> <p></p> <ul> <li>Host</li> <li>Port - The default port for Redis server is 6379</li> <li>Username</li> <li>Password</li> </ul> <p>Click on \"Test\" button to test the connection and click \"Save\" to save the data source.</p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/redis/#redis-queries","title":"Redis Queries","text":"<p>List of supported commands: Redis Official Documentation</p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/redis/#examples","title":"Examples","text":"<p><code>PING</code> command to test the Redis connection. If the connection is ready, the Redis server will respond with <code>PONG</code>.</p> <pre><code>PING\n</code></pre> <p><code>SET</code> command can be used to set the value for a key</p> <pre><code>SET key value\n</code></pre> <p><code>GET</code> command can be used to retrieve the value of a key</p> <pre><code>GET key\n</code></pre>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/restapi/","title":"REST API","text":"<p>Insight\u00b2 can connect to any REST endpoint available.</p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/restapi/#connection","title":"Connection","text":"<p>To add a new REST API datasource, click the Datasources manager icon on the left-sidebar of the app builder and click on the <code>Add datasource</code> button, then select REST API from the modal that pops up. Click on the 'Save' button to save the data source.</p> <p></p> <p>Insight\u00b2 requires the following to connect to a REST API  datasource.</p> <ul> <li>URL of the REST endpoint</li> </ul> <p>The following optional parameters are also supported:</p> Type Description URL params Additional query string parameters headers Any headers the REST API source requires body Any values or fields the REST API source requires <p>:::info REST HTTP methods that are supported are GET, POST, PUT, PATCH &amp; DELETE. :::</p> <p></p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/restapi/#querying-rest-api","title":"Querying REST API","text":"<p>Click on <code>+</code> button of the query manager at the bottom panel of the editor and select the REST API endpoint added in the previous step as the data source.</p> <p>Click on the 'run' button to run the query.</p> <p>:::note NOTE: Query should be saved before running. :::</p> <p>:::tip Query results can be transformed using transformations. Read our transformations documentation to see how: link :::</p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/rethinkdb/","title":"RethinkDB","text":"<p>Insight\u00b2 can connect to rethinkdb databases to read and write data. For more info visit::https://rethinkdb.com/api/javascript/.com/</p> <p></p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/rethinkdb/#connection","title":"Connection","text":"<p>Insight\u00b2 connects to InfluxDB using :</p> <ul> <li>Database</li> <li>Host</li> <li>Port</li> <li>Username</li> <li>Password</li> </ul>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/rethinkdb/#supported-queries","title":"Supported queries:","text":"<ul> <li> <p>Delete database</p> </li> <li> <p>Delete Table</p> </li> <li> <p>Create database</p> </li> <li> <p>Create Table</p> </li> <li> <p>List table</p> </li> <li> <p>List database</p> </li> <li> <p>Get all documents</p> </li> <li> <p>Insert table data</p> </li> <li> <p>Update all table data</p> </li> <li> <p>Update by id</p> </li> <li> <p>Delete table data by id</p> </li> <li> <p>Delete all table data</p> </li> <li> <p>Get document from primary key</p> </li> </ul> <p>:::info NOTE: Name field in all opertion is database name if not given will take the default database used for connection. :::</p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/s3/","title":"Amazon S3","text":"<p>Insight\u00b2 can connect to Amazon S3 buckets and perform various operation on them.</p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/s3/#connection","title":"Connection","text":"<p>To add a new S3 source, go to the Datasources manager on the left sidebar of the app editor and click on <code>Add datasource</code> button. Select AWS S3 from the modal that pops up.</p> <p>Insight\u00b2 requires the following to connect to your AWS S3:</p> <ul> <li>Region</li> <li>Access key</li> <li>Secret key</li> </ul> <p>It is recommended to create a new IAM user for the database so that you can control the access levels of Insight.</p> <p></p> <p>Click on Test connection button to verify if the credentials are correct and that the database is accessible to Insight\u00b2 server. Click on Save button to save the data source.</p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/s3/#querying-aws-s3","title":"Querying AWS S3","text":"<p>Click on <code>+</code> button of the query manager at the bottom panel of the editor and select the data source added in the previous step as the data source. Select the operation that you want to perform and click Save to save the query.</p> <p></p> <p>Click on the run button to run the query.</p> <p>NOTE: Query should be saved before running.</p> <p>Query results can be transformed using transformations. Read our transformations documentation to see how: link</p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/s3/#query-operations","title":"Query operations","text":"<p>You can create query for AWS S3 data source to perform several actions such as:</p> <ol> <li> <p>Read object</p> </li> <li> <p>Upload object</p> </li> <li> <p>List buckets</p> </li> <li> <p>List objects in a bucket</p> </li> <li> <p>Signed url for download</p> </li> <li> <p>Signed url for upload</p> </li> </ol>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/s3/#read-object","title":"Read object","text":"<p>You can read an object in a bucket by using this operation. It requires two parameters - Bucket name and Key.</p> <p></p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/s3/#upload-object","title":"Upload object","text":"<p>You can use this operation to upload objects(files) to your S3 bucket. It requires four parameters:   1. Bucket: Specify the bucket name   2. Key: Key of the object/file   3. Content type: Specify file type such as text, image etc.   4. Upload data: File/object that is to be uploaded.</p> <p></p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/s3/#list-buckets","title":"List buckets","text":"<p>This operation will list all the buckets in your S3. This does not require any parameter.</p> <p></p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/s3/#list-objects-in-a-bucket","title":"List objects in a bucket","text":"<p>This operation will fetch the list of all the files in your bucket. It requires two parameters:   1. Bucket: Bucket name (mandatory)   2. Prefix: To limit the response to keys that begin with the specified prefix (optional)</p> <p></p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/s3/#signed-url-for-download","title":"Signed url for download","text":"<p>The object owner can optionally share objects with others by creating a presigned URL, using their own security credentials, to grant time-limited permission to download the objects. For creating a presigned URL, the required parameters are:   1. Bucket: name of the bucket for uploading the file   2. Key: an object key   3. Expires in: an expiration time of URL</p> <p></p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/s3/#signed-url-for-upload","title":"Signed url for upload","text":"<p>The presigned URLs are useful if you want your user/customer to be able to upload a specific object to your bucket, but you don't require them to have AWS security credentials or permissions. For creating a presigned URL, the required parameters are:   1. Bucket: name of the bucket for uploading the file   2. Key: an object key   3. Expires in: an expiration time of URL   4. Content type: the content type such as text, image etc.</p> <p></p> <p>:::info We built an app to view and upload files to AWS S3 buckets. Check out the complete tutorial here. :::</p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/saphana/","title":"SAP HANA","text":"<p>Insight\u00b2 can connect to SAP HANA databases to read and write data.</p> <ul> <li>SAP HANA<ul> <li>Connection</li> <li>Querying SAP HANA</li> </ul> </li> </ul>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/saphana/#connection","title":"Connection","text":"<p>To add a new SAP HANA database, click on the <code>+</code> button on data sources panel at the left-bottom corner of the app editor. Select SAP HANA from the modal that pops up.</p> <p>Insight\u00b2 requires the following to connect to your SAP HANA database:</p> <ul> <li>Host</li> <li>Port</li> <li>Username</li> <li>Password</li> </ul> <p>:::info Please make sure the host/ip of the database is accessible from your VPC if you have self-hosted Insight. If you are using Insight\u00b2 cloud, please whitelist our IP. :::</p> <p></p> <p>Click on Test connection button to verify if the credentials are correct and that the database is accessible to Insight\u00b2 server. Click on Save button to save the data source.</p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/saphana/#querying-sap-hana","title":"Querying SAP HANA","text":"<p>Click on <code>+</code> button of the query manager at the bottom panel of the editor and select the database added in the previous step as the data source. Enter the query in the editor. Click on the <code>run</code> button to run the query.</p> <p>NOTE: Query should be saved before running.</p> <p></p> <p>:::tip Query results can be transformed using transformations. Read our transformations documentation to see how: link :::</p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/sendgrid/","title":"SendGrid","text":"<p>Insight\u00b2 can connect to your SendGrid account to send emails.</p> <p></p> <p>:::info The SendGrid API Datasource supports for interaction with the mail endpoint of the SendGrid v3 API. :::</p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/sendgrid/#connection","title":"Connection","text":"<p>To add a new SendGrid API datasource, click the Datasource manager icon on the left-sidebar of the app builder and click on the <code>Add datasource</code> button, then select SendGrid API from the modal that pops up.</p> <p>Enter your SendGrid API key in the \"API key\" field.</p> <p>:::tip SendGrid API key is required to create an SendGrid datasource on Insight. You can generate API key by visiting SendGrid account page. :::</p> <p>Click on the 'Save' button to save the data source.</p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/sendgrid/#supported-operations","title":"Supported operations","text":"<ol> <li>Email service</li> </ol>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/sendgrid/#email-service","title":"Email service","text":"<p>Required parameters: - Send email to - Send email from - Subject - Body as text</p> <p>Optional parameters: - Body as HTML</p> <p></p> <p>:::info Send mail to - accepts an array/list of emails separated by comma. For example: <code>{{[\"dev@tooljet.io\", \"admin@tooljet.io\"]}}</code>.</p> <p>Send mail from - accepts a string. For example: <code>admin@tooljet.io</code> :::</p> <p>:::tip Send a single email to multiple recipients - The <code>Send mail to</code> field can contain an array of recipients, which will send a single email with all of the recipients in the field.</p> <p>Send multiple individual emails to multiple recipients - set Multiple recipients field to <code>{{true}}</code> and the <code>Send mail to</code> field will be split into multiple emails and send to each recipient. :::</p> <p>:::note NOTE: Query should be saved before running. :::</p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/smtp/","title":"SMTP","text":"<p>SMTP plugin can connect Insight\u00b2 applications to SMTP servers for sending emails.</p>","tags":["Insight\u00b2","Data Sources","SMTP"]},{"location":"insight2/data-sources/smtp/#connection","title":"Connection","text":"<p>A SMTP server can be connected with the following credentails: - Host - Port - User - Password</p> <p> You can also test your connection before saving the configuration by clicking on <code>Test Connection</code> button.</p> <p></p>","tags":["Insight\u00b2","Data Sources","SMTP"]},{"location":"insight2/data-sources/smtp/#querying-smtp","title":"Querying SMTP","text":"<p>Go to the query manager at the bottom panel of the editor and click on the <code>+</code> button on the left to create a new query. Select <code>SMTP</code> from the datasource dropdown.</p> <p>To create a query for sending email, you will need to provide the following properties:   - From <code>required</code> : Email address of the sender   - From Name : Name of the sender   - To <code>required</code> : Recipient's email address   - Subject : Subject of the email</p> <p></p> <ul> <li>Body : You can enter the body text either in the form of <code>raw text</code> or <code>html</code> in their respective fields.</li> <li>Attachments : Attachments can be added to a SMTP query by referencing the file from the <code>File Picker</code> component in the attachments field.</li> </ul> <p>For example, you can set the <code>Attachments</code> field value to <code>{{ components.filepicker1.file }}</code> or you can pass an array of <code>{{ name: 'filename.jpg', dataURL: '......' }}</code> object to accomplish this.</p> <p></p>","tags":["Insight\u00b2","Data Sources","SMTP"]},{"location":"insight2/data-sources/snowflake/","title":"Snowflake","text":"<p>Insight\u00b2 can connect to Snowflake databases to read and write data.</p> <ul> <li>Snowflake<ul> <li>Connection</li> <li>Querying Snowflake</li> </ul> </li> </ul>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/snowflake/#connection","title":"Connection","text":"<p>Please make sure the host/ip of the database is accessible from your VPC if you have self-hosted Insight. If you are using Insight\u00b2 cloud, please whitelist our IP. You can find snowflake docs on network policies here.</p> <p>To add a new Snowflake database, click on the <code>+</code> button on data sources panel at the left-bottom corner of the app editor. Select Snowflake from the modal that pops up.</p> <p>Insight\u00b2 requires the following to connect to your Snowflake database.</p> <ul> <li>Account</li> <li>Username</li> <li>Password</li> </ul> <p>:::info You can also configure for additional optional parameters. :::</p> <p></p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/snowflake/#querying-snowflake","title":"Querying Snowflake","text":"<p>Click on <code>+</code> button of the query manager at the bottom panel of the editor and select the database added in the previous step as the datasource. Query manager then can be used to write raw SQL queries.</p> <p></p> <p>Click on the <code>run</code> button to run the query.</p> <p>NOTE: Query should be saved before running.</p> <p>:::tip Query results can be transformed using transformations. Read our transformations documentation to see how: link :::</p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/typesense/","title":"TypeSense","text":"<p>Insight\u00b2 can connect to your TypeSense deployment to read and write data.</p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/typesense/#connection","title":"Connection","text":"<p>Please make sure the host/IP of the TypeSense deployment is accessible from your VPC if you have self-hosted Insight. If you are using Insight\u00b2 cloud, please whitelist our IP.</p> <p>Insight\u00b2 requires the following to connect to your TypeSense deployment: - Host - Port - API Key - Protocol</p> <p></p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/typesense/#querying-typesense","title":"Querying TypeSense","text":"<p>Click on <code>+</code> button of the query manager at the bottom panel of the editor and select the TypeSense added in the previous step as the data source. Select the operation that you want to perform on your TypeSense cluster and click <code>Create</code> to save the query.</p> <p></p> <p>:::tip Query results can be transformed using transformations. Read our transformations documentation to see how: link :::</p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/typesense/#supported-operations","title":"Supported operations","text":"","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/typesense/#1-create-a-collection","title":"1. Create a Collection","text":"<p>With this operation you can easily create <code>Collections</code> in your TypeSense cluster. In the schema field, you'll need to define the schema for creating a new collection. Check out TypeSense docs to know more about collections here</p> <p></p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/typesense/#2-index-a-document","title":"2. Index a document","text":"<p>Use this operation to index a document to your collection. You'll need to specify the Collection Name where you want your document to be indexed and also provide the document data according the schema defined in the collection. Read more about Indexing a document in TypeSense here.</p> <p></p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/typesense/#3-search","title":"3. Search","text":"<p>Use this operation to perform a search within the specified collection. Know more about the search parameters in the TypeSense doc here.</p> <p></p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/typesense/#4-get-a-document","title":"4. Get a document","text":"<p>Use this operation to fetch an individual document in a collection by providing the <code>id</code> of the document. Read more about it here.</p> <p></p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/typesense/#5-update-a-document","title":"5. Update a document","text":"<p>Use this operation to update an individual document by providing the Collection Name and Id of the document. You'll need to provide the updated document data in the form of specified schema. Check out the TypeSense's doc on updating a document here.</p> <p></p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/typesense/#6-delete-a-document","title":"6. Delete a document","text":"<p>Delete a document from collection by providing the <code>Id</code> of the document. Check out the TypeSense's doc on deleting documents here.</p> <p></p> <p>:::tip Make sure that you supply JSON strings instead of JavaScript objects for any document or schema that is being passed to the server, in any of the above operations. :::</p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/woocommerce/","title":"WooCommerce","text":"<p>Insight\u00b2 can connect to Woocommerce databases to read and write data.</p> <ul> <li>WooCommerce<ul> <li>Connection</li> <li>Querying Woocommerce</li> </ul> </li> </ul>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/woocommerce/#connection","title":"Connection","text":"<p>Auth You may use [HTTP Basic Auth] by providing the REST API Consumer Key as the username and the REST API Consumer Secret as the password. - Host - Consumer key - Consumer secret</p> <p></p> <p>:::info NOTE: For generating keys visit admin dashboard of woocommerce , more info: https://woocommerce.github.io/woocommerce-rest-api-docs/?javascript#authentication :::</p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/data-sources/woocommerce/#querying-woocommerce","title":"Querying Woocommerce","text":"<p>Operations</p> <p>Customer</p> <ul> <li>list customer</li> <li>update customer</li> <li>delete customer</li> <li>batch update customer</li> <li>create customer</li> <li>retrieve customer</li> </ul> <p>PRODUCT</p> <ul> <li>list product</li> <li>update product</li> <li>delete product</li> <li>batch update product</li> <li>create product</li> <li>retrieve product</li> </ul> <p>ORDER</p> <ul> <li>list order</li> <li>update order</li> <li>delete order</li> <li>batch update order</li> <li>create order</li> <li>retrieve order</li> </ul> <p>Coupon</p> <ul> <li>list coupon</li> <li>create coupon</li> </ul> <p>:::info NOTE: For more info visit https://woocommerce.github.io/woocommerce-rest-api-docs/?javascript. :::</p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/examples/","title":"IN\u00b2 Examples","text":"<p>If you enjoyed using Insight\u00b2 and have successfully completed the first challenge, here are some more examples for practice:</p> <ul> <li>Change text color in columns of the table</li> <li>Bulk update multiple rows in table</li> <li>REST API authentication using OAuth 2.0</li> <li>Upload files on AWS S3 bucket</li> <li>Upload files using GCS</li> </ul>","tags":["Insight\u00b2","Examples"]},{"location":"insight2/how-to/access-cellvalue-rowdata/","title":"Change text color in columns by accessing <code>cellValue</code> and <code>rowData</code> in the table","text":"<p>In this how-to guide, we will build an app that will use a sample RestAPI to display the data in the table, and then we will change the text color of the columns according to the condition.</p> <ul> <li>Let's start by creating a new application and then adding a table widget into the canvas.</li> </ul> <p></p> <ul> <li>Now go to the Query Panel at the bottom of the app editor and click on the <code>+</code> button.</li> <li>Choose RestAPI data source</li> </ul> <p></p> <ul> <li>Now we will use a sample RestAPI endpoint -  I have used the API provided by coinstats.app, API-URL: https://api.coinstats.app/public/v1/coins?skip=0&amp;limit=100&amp;currency=USD</li> <li>Choose <code>GET</code> method, enter the request URL (API URL in previous step), name the query - I have named it <code>crypto</code>, and then Create the query</li> </ul> <p></p> <ul> <li>Now hit the Run button next to the query name to run the query.</li> </ul> <p></p> <ul> <li>Once you run the query, you can check the data returned by the query in the Inspector on the left sidebar.</li> </ul> <p></p> <ul> <li>Now that we have got the data, we will display it on the table. To do this, click on the widget handle of the table to open its properties in the right sidebar.</li> <li>In the Table Data field, enter <code>{{queries.crypto.data.coins}}</code> - as you can see in the screenshot of the inspector the data is inside the <code>coins</code> array. You'll see the data in the Preview(green box) below the field.</li> </ul> <p></p> <ul> <li>Let's add the columns that we want to display on the table. Go to the Columns section, Add columns, set their Names, and set key for each column. I have added 5 columns: Rank, Name, Symbol, Price, and Market Cap.</li> </ul> <p></p> <ul> <li>Once you've added the columns, you'll get the table like this:</li> </ul> <p></p>","tags":["Insight\u00b2","Examples"]},{"location":"insight2/how-to/access-cellvalue-rowdata/#using-cellvalue-to-change-column-text-color","title":"Using cellValue to change column text color","text":"<p>Now that we have our data on the table, we will change the color of the text in the Price and Market Cap columns.</p> <ul> <li>Edit table properties, go to Columns, and click on the Price Column to open its properties.</li> <li>For Price column, we want to change color of those cells who have value which is greater than 1000 to red else to green if it is less than 1000. So to do this, we will set a condition in Text Color property of this column: <code>{{cellValue &gt;= 1000 ? 'red' : 'green'}}</code></li> </ul> <p></p> <ul> <li>Similarly, we will do for Market Cap column. We want to change the text color of those cells who have value which is greater than 60000000000 to red else to green if it is less than 60000000000. so the condition will be <code>{{cellValue &gt;= 60000000000 ? 'red' : 'green'}}</code></li> <li>Now the text color of cells in the columns will be updated.</li> </ul> <p></p> <p>You can also use Hex Color Code instead of mentioning color in plane text.</p>","tags":["Insight\u00b2","Examples"]},{"location":"insight2/how-to/access-cellvalue-rowdata/#using-rowdata-to-change-column-text-color","title":"Using rowData to change column text color","text":"<ul> <li>To change the color of the text using <code>rowData</code> variable it is required to mention the column name whose cell value we will be comparing in the condition. Let's take a look by changing the text color of Symbol column.</li> <li>We will add a condition to look in the row data and if the row has column called <code>name</code> which has value <code>Solana</code> then it should change the color to red else the color should be green.</li> <li>Edit the properties of the Symbol column, set the Text Color field value to <code>{{rowData.name ===  'Solana' ? 'red' : 'green'}}</code>.</li> <li>You'll see that in the Symbols column all the values has become green except the one that has Solana in Name column.</li> </ul>","tags":["Insight\u00b2","Examples"]},{"location":"insight2/how-to/bulk-update-multiple-rows-in-table/","title":"Bulk update multiple rows in table","text":"<p>Currently, the datasources in Insight\u00b2 have operation for bulk update(GUI mode) but that only works for changes made in the single row. We will soon be adding a new operation for bulk updating the multiple rows but for now we can bulk update multiple rows by creating a Custom JS query.</p> <p>In this guide, We have assumed that you have successfully connected the data source. For this guide, we will be using the PostgreSQL data source as an example database, currently, this workaround can be used only for PostgreSQL and MySQL.</p>","tags":["Insight\u00b2","Examples"]},{"location":"insight2/how-to/bulk-update-multiple-rows-in-table/#1-create-a-query-to-get-the-data-from-the-database","title":"1. Create a query to get the data from the database","text":"<p>Let's create the query that will be getting the data from the database:</p> <p></p>","tags":["Insight\u00b2","Examples"]},{"location":"insight2/how-to/bulk-update-multiple-rows-in-table/#2-display-the-data-on-the-table","title":"2. Display the data on the table","text":"<ul> <li>Drag a Table widget on the canvas and click on its handle to open the properties on the left sidebar</li> <li>Edit the Table data field value and enter <code>{{queries.postgresql1.data}}</code></li> </ul>","tags":["Insight\u00b2","Examples"]},{"location":"insight2/how-to/bulk-update-multiple-rows-in-table/#3-make-the-columns-editable","title":"3. Make the columns editable","text":"<ul> <li>Go to the Columns, Add or edit columns section and enter the Column Name that you want to display on the table and the Key name. Key is the name of the column in your database.</li> <li>Enable the toggle for Make editable for the columns that you want to be editable.</li> </ul>","tags":["Insight\u00b2","Examples"]},{"location":"insight2/how-to/bulk-update-multiple-rows-in-table/#4-enable-bulk-update-options-for-table-widget","title":"4. Enable bulk update options for table widget","text":"<ul> <li>Go to the Options section and enable the Show bulk update actions. Enabling this will add two buttons - Save Changes and Discard Changes at the bottom of the table, only when any cell in the table is edited.</li> <li>You can also enable highlight selected row.(Optional)</li> </ul>","tags":["Insight\u00b2","Examples"]},{"location":"insight2/how-to/bulk-update-multiple-rows-in-table/#5-create-a-custom-js-query","title":"5. Create a Custom JS query","text":"<p>We will create a new Custom JS query(runjs1) that will generate SQL query for updating multiple rows.</p> <pre><code>const cols = Object.values(components.table1.changeSet).map((col, index) =&gt; {\nreturn {\ncol: Object.keys(col),\nid: components.table1.dataUpdates[index].id,\nvalues: Object.values(col),\n};\n});\n\nconst sql = cols.map((column) =&gt; {\nconst { col, id, values } = column;\nconst cols = col.map((col, index) =&gt; `${col} = '${values[index]}'`);\nreturn `UPDATE users SET ${cols.join(\", \")} WHERE id = '${id}';`;\n});\n\nreturn sql\n</code></pre> <p></p>","tags":["Insight\u00b2","Examples"]},{"location":"insight2/how-to/bulk-update-multiple-rows-in-table/#6-create-an-update-query","title":"6. Create an Update query","text":"<p>Let's create a new PostgreSQL query and name it <code>update</code>. In SQL mode, enter <code>{{queries.runjs1.data.join(' ')}}</code> and Save it.</p> <p></p>","tags":["Insight\u00b2","Examples"]},{"location":"insight2/how-to/bulk-update-multiple-rows-in-table/#7-creating-a-flow-for-queries","title":"7. Creating a flow for queries","text":"<ul> <li>Click on the handle of the Table widget to open its properties</li> <li>Go to the Events, and add a handler</li> <li>Select Bulk Update in Events, Run Query in Actions, and then select the runjs1 query in Query. Now whenever a user will edit the table and hit the Save Changes button runjs1 will run.</li> </ul> <ul> <li>Now, go to the Advanced tab of runjs1 and add a handler to run update query for Query Success Event. Now whenever the runjs1 query will be run - the update operation will be performed on the database.</li> </ul>","tags":["Insight\u00b2","Examples"]},{"location":"insight2/how-to/oauth2-authorization/","title":"REST API authentication using OAuth 2.0","text":"<p>Insight\u2019s REST API data source supports OAuth 2.0 as the authentication type. In this guide, we\u2019ll learn how to use Google OAuth2 API to delegate authorization and authentication for your Insight\u00b2 Application.</p> <p>Before setting up the REST API data source in Insight, we need to configure the Google Cloud Platform to gather the API keys required for the authorization access.</p>","tags":["Insight\u00b2","Examples"]},{"location":"insight2/how-to/oauth2-authorization/#setting-up-google-cloud-platform","title":"Setting up Google Cloud Platform","text":"<p>Google Cloud Platform provides access to more than 350 APIs and Services that can allow us to access data from our Google account and its services. Let's create an OAuth application that can be given permission to use our Google profile data such as Name and Profile picture.</p> <ol> <li>Sign in to your Google Cloud account, and from the console create a New Project.</li> <li>Navigate to the APIs and Services, and then open the OAuth consent screen section from the left sidebar.</li> <li>Enter the Application details and select the appropriate scopes for your application. We will select the profile and the email scopes.</li> <li>Once you have created the OAuth consent screen, Create new credentials for the OAuth client ID from the Credentials section in the left sidebar.</li> <li>Select the application type, enter the application name, and then add the following URIs under Authorised Redirect URIs:<ol> <li><code>https://app.tooljet.com/oauth2/authorize</code> (if you\u2019re using Insight\u00b2 cloud)</li> <li><code>http://localhost:8082/oauth2/authorize</code> (if you\u2019re using Insight\u00b2 locally)</li> </ol> </li> <li>Now save and then you\u2019ll get the Client ID and Client secret for your application.</li> </ol> <p></p>","tags":["Insight\u00b2","Examples"]},{"location":"insight2/how-to/oauth2-authorization/#configuring-insight2-application-with-googles-oauth-20-api","title":"Configuring Insight\u00b2 Application with Google's OAuth 2.0 API","text":"<p>Let's follow the steps to authorize Insight\u00b2 to access your Google profile data:</p> <ul> <li>Select add data source from the left sidebar, and choose REST API from the dialog window.</li> </ul> <p>You can rename the data source by clicking on its default name <code>REST API</code></p> <ul> <li>In the URL field, enter the base URL <code>https://www.googleapis.com/oauth2/v1/userinfo</code>; the base URL specifies the network address of the API service.</li> <li>Select authentication type as <code>OAuth 2.0</code></li> <li>Keep the default values for Grant Type, Add Access Token To, and Header Prefix i.e. <code>Authorization Code</code>, <code>Request Header</code>, and <code>Bearer</code> respectively.</li> <li>Enter Access Token URL: <code>https://oauth2.googleapis.com/token</code>; this token allows users to verify their identity, and in return, receive a unique access token.</li> <li>Enter the Client ID and Client Secret that we generated from the Google Console.</li> <li>In the Scope field, enter <code>https://www.googleapis.com/auth/userinfo.profile</code>; Scope is a mechanism in OAuth 2.0 to limit an application's access to a user's account. Check the scopes available for Google OAuth2 API here.</li> <li>Enter Authorization URL: <code>https://accounts.google.com/o/oauth2/v2/auth</code>; the Authorization URL requests authorization from the user and redirects to retrieve an authorization code from identity server.</li> <li> <p>Create three Custom Authentication Parameters:</p> params description response_type code ( <code>code</code> refers to the Authorization Code) client_id Client ID redirect_uri <code>http://localhost:8082/oauth2/authorize</code> if using Insight\u00b2 locally or enter this <code>https://app.tooljet.com/oauth2/authorize</code> if using Insight\u00b2 Cloud. </li> <li> <p>Keep the default selection for Client Authentication and Save the data source.</p> </li> </ul> <p></p>","tags":["Insight\u00b2","Examples"]},{"location":"insight2/how-to/oauth2-authorization/#create-the-query","title":"Create the query","text":"<p>Let\u2019s create a query to make a <code>GET</code> request to the URL, it will pop a new window and ask the user to authenticate against the API.</p> <ul> <li>Add a new query and select the REST API datasource from the dropdown</li> <li>In the Method dropdown select <code>GET</code> and in advance tab toggle <code>run query on page load?</code></li> <li>Save and Run the query.</li> </ul> <p></p> <p>A new window will pop for authentication and once auth is successful, you can run the query again to get the user data like Name and Profile Picture.</p>","tags":["Insight\u00b2","Examples"]},{"location":"insight2/how-to/upload-files-aws/","title":"Upload and download files on AWS S3 bucket","text":"<p>This guide will help you in quickly building a basic UI for uploading or downloading files from AWS S3 buckets.</p> <p>Before building the UI, check out the docs for AWS S3 data source to learn about setting up AWS S3 and adding the data source.</p> <p>Once you have successfully added the AWS data source, build a basic UI using the following widgets: - Dropdown: For selecting a bucket in S3 storage. - Table: For listing all the objects inside the selected bucket in dropdown. - Text Input: For getting a path for the file that is to be uploaded. - File picker: For uploading the file. - Button: This will be used to fire the upload query.</p> <p></p>","tags":["Insight\u00b2","Examples"]},{"location":"insight2/how-to/upload-files-aws/#queries","title":"Queries","text":"<p>We'll create the following queries:</p> <ol> <li>getBuckets</li> <li>listObjects</li> <li>uploadToS3</li> <li>download</li> </ol>","tags":["Insight\u00b2","Examples"]},{"location":"insight2/how-to/upload-files-aws/#getbuckets","title":"getBuckets","text":"<p>This query will fetch the list of all the buckets in your S3. Just create a new query, select AWS S3 data souce, and choose List buckets operation. Name the query getBuckets and click Save.</p> <p></p> <p>Now, let's edit the properties of dropdown widget.</p> <ul> <li>Label: Set the label as Bucket.</li> <li>Option values: Set option values as <code>{{queries.getBuckets.data.Buckets.map(bucket =&gt; bucket['Name'])}}</code>. We're mapping the data returned by the query as the returned data is array of abjects.</li> <li>Option label: Set option values as <code>{{queries.getBuckets.data.Buckets.map(bucket =&gt; bucket['Name'])}}</code>. This will display the same option label as option values.</li> </ul> <p>You can later add an event handler for running the listObject query whenever an option is selected from the dropdown.</p> <p></p>","tags":["Insight\u00b2","Examples"]},{"location":"insight2/how-to/upload-files-aws/#listobjects","title":"listObjects","text":"<p>This query will list all the objects inside the selected Bucket in dropdown. Select List objects in a bucket operation, enter <code>{{components.dropdown1.value}}</code> in the Bucket field - this will dynamically get the field value from the selected option in dropdown.</p> <p></p> <p>Edit the properties of table widget: - Table data: <code>{{queries.listObjects.data['Contents']}}</code> - Add Columns:   - Key: Set the Column Name to <code>Key</code> and Key to <code>Key</code>   - Last Modified: Set the Column Name to <code>Last Modified</code> and Key to <code>LastModified</code>   - Size: Set the Column Name to <code>Size</code> and Key to <code>Size</code> - Add a Action button: Set button text to Copy signed URL, Add a handler to this button for On Click event and Action to Copy to clipboard, in the text field enter <code>{{queries.download.data.url}}</code> - this will get the download url from the download query that we will create next.</p> <p></p>","tags":["Insight\u00b2","Examples"]},{"location":"insight2/how-to/upload-files-aws/#download","title":"download","text":"<p>Create a new query and select Signed URL for download operation. In the Bucket field, enter <code>{{components.dropdown1.value}}</code> and in Key enter <code>{{components.table1.selectedRow.Key}}</code>.</p> <p></p> <p>Edit the properites of the table, add a Event handler for running the <code>download</code> query for <code>Row clicked</code> event. This will generate a signed url for download every time a row is clicked on the table.</p>","tags":["Insight\u00b2","Examples"]},{"location":"insight2/how-to/upload-files-aws/#uploadtos3","title":"uploadToS3","text":"<p>Create a new query, select the Upload object operation. Enter the following values in their respective fields: - Bucket: <code>{{components.dropdown1.value}}</code> - Key:  {{ components.textinput1.value + '/' +components.filepicker1.file[0].name}}<code>- **Content type**:</code>}<code>- **Upload data**:</code>}<code>- **Encoding**:</code>base64`</p> <p></p>","tags":["Insight\u00b2","Examples"]},{"location":"insight2/how-to/upload-files-aws/#configure-the-file-picker","title":"Configure the file picker:","text":"<p>Click on the widget handle to edit the file picker properties:</p> <ul> <li>Change the Accept file types to <code>{{\"application/pdf\"}}</code> for the picker to accept only pdf files or <code>{{\"image/*\"}}</code> for the picker to accept only image files . In the screenshot below, we have set the accepted file type property to <code>{{\"application/pdf\"}}</code> so it will allow to select only pdf files:</li> </ul> <p></p> <ul> <li> <p>Change the Max file count to <code>{{1}}</code> as we are only going to upload 1 file at a time.</p> </li> <li> <p>Select a pdf file and hold it in the file picker.</p> </li> </ul> <p>File types must be valid MIME type according to input element specification or a valid file extension.</p> <p>To accept any/all file type(s), set <code>Accept file types</code> to an empty value.</p> <p></p> <p>Final steps, go to the Advanced tab of the uploadToS3 query and add a query to run listObjects query so that whenever a file is uploaded the tabled is refreshed.</p>","tags":["Insight\u00b2","Examples"]},{"location":"insight2/how-to/upload-files-gcs/","title":"Upload files using GCS","text":"<p>In this guide, we are going to create an interface to upload PDFs to Google Cloud Storage.</p> <p>Before adding the new data source we will need to have a private key for our GCS bucket and make sure the key has the appropriate rights.</p>","tags":["Insight\u00b2","Examples"]},{"location":"insight2/how-to/upload-files-gcs/#setting-up-google-cloud-storage-data-source","title":"Setting up Google Cloud Storage data source","text":"<ol> <li>Go to the data source manager on the left-sidebar and click on the <code>+</code> button.</li> <li>Add a new GCS data source from the  APIs section in modal that pops up.</li> <li>Enter the JSON private key for service account and test the connection.</li> <li>Click on Save to add the data source.</li> </ol>","tags":["Insight\u00b2","Examples"]},{"location":"insight2/how-to/upload-files-gcs/#adding-a-file-picker","title":"Adding a file picker","text":"<ol> <li>Drag and drop the file picker widget on the canvas</li> <li>Configure the file picker:</li> <li>Change the Accept file types to <code>{{\"application/pdf\"}}</code> for the picker to accept only pdf files. In the screenshot below, we have set the accepted file type property to <code>{{\"application/pdf\"}}</code> so it will allow to select only pdf files:</li> </ol> <ul> <li> <p>Change the Max file count to <code>{{1}}</code> as we are only going to upload 1 file at a time.</p> </li> <li> <p>Select a pdf file and hold it in the file picker.</p> </li> </ul> <p>File types must be valid MIME type according to input element specification or a valid file extension.</p> <p>To accept any/all file type(s), set <code>Accept file types</code> to an empty value.</p> <p></p>","tags":["Insight\u00b2","Examples"]},{"location":"insight2/how-to/upload-files-gcs/#creating-a-query","title":"Creating a query","text":"<ol> <li>Click on the <code>+</code> button of the query manager at the bottom panel of the editor and select the GCS data source</li> <li>Select Upload file operation and enter the required parameters:</li> <li>Bucket: <code>gs://test-1</code></li> <li>File Name: <code>{{components.file1.file[0]['name']}}</code></li> <li>Content Type: <code>{{components.file1.file[0]['type']}}</code></li> <li>Upload data: <code>{{components.file1.file[0]['base64Data']}}</code></li> <li>Enconding: <code>base64</code></li> <li>Click on Save to create the query</li> </ol>","tags":["Insight\u00b2","Examples"]},{"location":"insight2/how-to/upload-files-gcs/#running-the-query","title":"Running the query","text":"<ol> <li>Add a button that will fire the query to upload the file</li> <li>Edit the properties of the button and add a event handler to Run the query on On-Click event.</li> <li>Click on Button to fire the query, this will upload the pdf file that you selected earlier through the file picker and will upload it on the GCS.</li> </ol>","tags":["Insight\u00b2","Examples"]},{"location":"insight2/tutorial/","title":"Try it out","text":"","tags":["Insight\u00b2","Tutorial"]},{"location":"insight2/tutorial/#in-this-overview-we-explain-how-to-add-a-datasource-and-widget-how-to-buildcreate-queries-and-new-apps-and-much-more","title":"In this overview we explain how to add a datasource and widget, how to build/create queries and new apps and much more.","text":"<ul> <li>Adding datasource</li> <li>Adding widget</li> <li>Building Queries</li> <li>Creating new app</li> <li>Debugger</li> <li>Managing Users and Groups</li> <li>Mobile Layout</li> <li>Preview and Sharing Apps</li> <li>Transformations</li> <li>Versioning and release</li> <li>Keyboard Shortcuts</li> <li>Multi-Workspace</li> </ul>","tags":["Insight\u00b2","Tutorial"]},{"location":"insight2/tutorial/adding-a-datasource/","title":"Adding a data source","text":"<p>The data sources are created on app level and not on workspace level.</p> <p>Datasource manager is on the left-sidebar of the app builder. To add a new data source, click on the <code>Add datasource</code> button.</p> <p></p> <p>You will be prompted to select the data source that you wish to add. Let's select PostgreSQL for this tutorial. You will then need to provide the credentials of your PostgreSQL database. The fields that are marked as <code>encrypted</code> will be encrypted before saving to Insight's database.</p> <p></p> <p>The name of the data source must be unique (within the app) and can be changed by clicking on the data source name at the top of the prompt. Click on <code>Test Connection</code> button to verify the connection, this might take a couple of minutes. Once verified, save the data source.</p> <p>If you are using Insight\u00b2 cloud and if your data source is not publicly accessible, please white-list our IP address ( shown while creating a new data source ).</p> <p></p>","tags":["Insight\u00b2","Data Sources"]},{"location":"insight2/tutorial/adding-widget/","title":"Adding a widget","text":"<p>To add a widget, navigate to the <code>Widget manager</code> on the right sidebar. It will display the list of built-in widgets that can be added to the app. Use the search functionality to quickly find the widget that you want.</p> <p></p>","tags":["Insight\u00b2","Widget"]},{"location":"insight2/tutorial/adding-widget/#drag-and-drop-a-widget","title":"Drag and drop a widget","text":"<p>Let's add a <code>table</code> widget to the app to show the customer data from the query that we created in the previous steps. To add a widget, drag and drop the widget to the canvas.</p>","tags":["Insight\u00b2","Widget"]},{"location":"insight2/tutorial/adding-widget/#resize-a-widget","title":"Resize a widget","text":"<p>The widgets can be resized and repositioned within the canvas.</p> <p></p>","tags":["Insight\u00b2","Widget"]},{"location":"insight2/tutorial/adding-widget/#adding-widgets-to-modal","title":"Adding widgets to Modal","text":"<p>To add a widget to Modal, we need to trigger Show modal action</p> <p>Before triggering <code>Show modal action</code> we need to add a modal widget to the canvas.</p> <ul> <li>Add a <code>modal widget</code> to the app</li> <li>Trigger the Show modal action</li> <li>Click on the canvas area for the <code>Widget manager</code> sidebar</li> <li>Navigate to the Widget manager on the right sidebar and Drag and drop a widget into the Modal</li> </ul> <p></p>","tags":["Insight\u00b2","Widget"]},{"location":"insight2/tutorial/adding-widget/#resize-table-columns","title":"Resize table columns","text":"<p>We can resize the column width using the resize handle of the column.</p> <p></p>","tags":["Insight\u00b2","Widget"]},{"location":"insight2/tutorial/adding-widget/#change-widget-properties","title":"Change widget properties","text":"<p>Click on the widget to open the inspect panel on right sidebar. Here you can change the properties of the widgets. Let's configure the table columns to display the customer data. The display order of columns can be changed by dragging icon near the column name.</p> <p></p>","tags":["Insight\u00b2","Widget"]},{"location":"insight2/tutorial/adding-widget/#connecting-data-with-widget","title":"Connecting data with widget","text":"<p>Now we will connect the <code>data</code> object of the <code>fetch customers</code> query with the table. Click on the table widget to open the inspector on right sidebar. We can see that the data property of the table have an empty array as the value. The data field, like almost every other field on the editor supports single-line javascript code within double brackets. Variable suggestions will be shows as a dropdown while you type the code in the field.</p> <p>Let's select <code>data</code> object of the 'postgresql' query.</p> <p><code>{{queries.postgresql1.data}}</code></p> <p>Since we have already run the query in previous step, the data will be immediately displayed in the table.</p> <p></p> <p>So far in this tutorial, we have connected to a PostgreSQL database and displayed the data on a table.</p> <p>Read the widget reference of table here for more customizations such as server-side pagination, actions, editing data.</p>","tags":["Insight\u00b2","Widget"]},{"location":"insight2/tutorial/building-queries/","title":"Building Queries","text":"<p>Query Editor lives at the bottom of the page. We will now build a query for the PostgreSQL datasource that we connected in the previous step.</p> <p>You can click on the 'enlarge' icon to enlarge query editor pane.</p> <ul> <li>Click on the <code>+</code> icon of the query editor to create a new query.</li> <li>Select the PostgreSQL datasource created in previous step.</li> <li>Copy the query given below and paste on the query area.</li> <li>Select SQL mode</li> </ul> <pre><code>SELECT * FROM customers;\n</code></pre> <p></p> <p>Query results can be previewed by clicking the <code>preview</code> button. Previewing queries will not alter the state of the app.</p> <p></p>","tags":["Insight\u00b2","Queries"]},{"location":"insight2/tutorial/building-queries/#advanced-options","title":"Advanced options","text":"","tags":["Insight\u00b2","Queries"]},{"location":"insight2/tutorial/building-queries/#run-query-on-page-load","title":"Run query on page load","text":"<p>If this option is enabled, the query will be run when the app is loaded for the first time. The queries can have more than one trigger, ie the same query can later be triggered again using a button's click event or table's row selected event or any other events.</p>","tags":["Insight\u00b2","Queries"]},{"location":"insight2/tutorial/building-queries/#request-confirmation-before-running-query","title":"Request confirmation before running query","text":"<p>Enable this option to show a prompt to confirm the action before a query is run. The confirmation prompt will look like this:</p> <p></p>","tags":["Insight\u00b2","Queries"]},{"location":"insight2/tutorial/building-queries/#show-notification-on-success","title":"Show notification on success","text":"<p>Enable this option to show a custom message on query completion. Duration of the notification can also be set.</p>","tags":["Insight\u00b2","Queries"]},{"location":"insight2/tutorial/creating-app/","title":"Creating new app","text":"<p>Apps in Insight\u00b2 binds the widgets, data sources and queries together.</p> <p>This tutorial will walk you through building a simple app to fetch customer information from a PostgreSQL database and display the data using the table widget. To create a new Insight\u00b2 app, click on the 'Create new application' button on the Insight\u00b2 dashboard.</p> <p></p> <p>You will be redirected to the visual app editor once the app has been created. Create the first version of your app to start building. The name of the app can be changed by clicking on the app name at top-left of the app builder.</p> <p></p> <p>The main components of an app:</p> <ul> <li>Widgets - UI components such as tables, buttons, dropdowns.</li> <li>Data sources - Insight\u00b2 can connect to databases, APIs and external services to fetch and modify data.</li> <li>Queries - Queries are used to access the connected data sources.</li> </ul>","tags":["Insight\u00b2","App"]},{"location":"insight2/tutorial/debugger/","title":"Debugger","text":"<p>The debugger captures errors that happens while running the queries. For example, when a database query fails due to the unavailability of a database or when a REST API query fails due to an incorrect URL, the errors will be displayed on the debugger. The debugger also displays relevant data related to the error along with the error message. Debugger is located on the left-sidebar.</p> <p></p>","tags":["Insight\u00b2","Debugger"]},{"location":"insight2/tutorial/debugger/#pin-debugger","title":"Pin Debugger","text":"<p>You can click on the <code>pin</code> icon at the top-right corner of the debugger if you do not want the debugger to close. The debugger will remain open until it is unpinned.</p> <p></p>","tags":["Insight\u00b2","Debugger"]},{"location":"insight2/tutorial/keyboard-shortcuts/","title":"Keyboard Shortcuts","text":"<p>You can perform operations like undo, redo, clone, or removing the widget directly using the keyboard shortcuts.</p>","tags":["Insight\u00b2","Keyboard"]},{"location":"insight2/tutorial/keyboard-shortcuts/#undo","title":"Undo","text":"<p>You can undo any operation performed on the visual app editor using the following shortcut keys:</p> <p>On Mac: <code>cmd + z</code></p> <p>On Linux/Windows: <code>ctrl + z</code></p>","tags":["Insight\u00b2","Keyboard"]},{"location":"insight2/tutorial/keyboard-shortcuts/#redo","title":"Redo","text":"<p>If you have <code>undo</code> an operation and want to redo that again than you can use the following shortcut keys:</p> <p>On Mac: <code>cmd + shift + z</code></p> <p>On Linux/Windows: <code>ctrl + shift + z</code></p>","tags":["Insight\u00b2","Keyboard"]},{"location":"insight2/tutorial/keyboard-shortcuts/#clone","title":"Clone","text":"<p>Now you can create multiple clones of any widget without having to drag and drop the widget again from the sidebar. Just select any widget that you want to create a clone and use the following shortcut keys:</p> <p>On Mac: <code>cmd + d</code></p> <p>On Linux/Windows: <code>ctrl + d</code></p>","tags":["Insight\u00b2","Keyboard"]},{"location":"insight2/tutorial/keyboard-shortcuts/#remove-widget","title":"Remove widget","text":"<p>Now you can delete a selected widget by using the following shortcut keys:</p> <p>On Mac: <code>backspace</code></p> <p>On Linux/Windows: <code>delete</code></p>","tags":["Insight\u00b2","Keyboard"]},{"location":"insight2/tutorial/keyboard-shortcuts/#unselect-the-selected-widget","title":"Unselect the selected widget","text":"<p>You can quickly deselect a widget using the <code>esc</code> key.</p>","tags":["Insight\u00b2","Keyboard"]},{"location":"insight2/tutorial/manage-users-groups/","title":"Managing Users and Groups","text":"","tags":["Insight\u00b2","Users","Groups"]},{"location":"insight2/tutorial/manage-users-groups/#managing-users","title":"Managing Users","text":"<p>Admin of a workspace can add users to the workspace. To manage the users in your workspace, just go to the Workspace menu on top right corner and click on the Manage Users.</p> <p></p>","tags":["Insight\u00b2","Users","Groups"]},{"location":"insight2/tutorial/manage-users-groups/#inviting-users","title":"Inviting users","text":"<p>Admins can invite anyone to a workspace using the email address. To invite a user:</p> <ul> <li>On the Manage Users page click on the <code>Invite new user</code> button.</li> </ul> <p></p> <ul> <li>Now enter the details of new user such as first name, last name, email, and then click on Create User.</li> </ul> <p></p> <ul> <li>An email including the Invite Link to join your workspace will be send to the created user. The status will turn from invited to active after the user successfully joins your workspace using the invite link.</li> </ul> <p>You can also copy the invitation url by clicking on the copy icon next to <code>invited</code> status of the created user.</p> <p></p>","tags":["Insight\u00b2","Users","Groups"]},{"location":"insight2/tutorial/manage-users-groups/#disabling-a-users-access","title":"Disabling a user's access","text":"<p>You can disable any active user's access to your workspace by clicking on the Archive and then the status of the user will change from active to archived.</p> <p></p>","tags":["Insight\u00b2","Users","Groups"]},{"location":"insight2/tutorial/manage-users-groups/#enabling-a-users-access","title":"Enabling a user's access","text":"<p>Similar to archiving a user's access, you can enable it again by clicking on Unarchive. The status of user will change from archived to invited and the user will have to join again using the invite link recieved via the e-mail.</p> <p></p>","tags":["Insight\u00b2","Users","Groups"]},{"location":"insight2/tutorial/manage-users-groups/#managing-groups","title":"Managing Groups","text":"<p>On Insight\u00b2, Admins can create groups for users added in a workspace and grant them access to particular app(s) with specific permissions. To manage groups, just go to the Account menu on top right corner and click on the Manage Groups.</p> <p></p>","tags":["Insight\u00b2","Users","Groups"]},{"location":"insight2/tutorial/manage-users-groups/#group-properties","title":"Group properties","text":"<p>Every group on Insight\u00b2 has three components:</p>","tags":["Insight\u00b2","Users","Groups"]},{"location":"insight2/tutorial/manage-users-groups/#apps","title":"Apps:","text":"<p>Admins can add or remove any number of apps for a group of users. To add an app to a group, select an app from the dropdown and click on <code>Add</code> button next to it. You can also set app permissions such as <code>View</code> or <code>Edit</code> for the group. You can set different permissions for different apps in a group.</p> <p></p>","tags":["Insight\u00b2","Users","Groups"]},{"location":"insight2/tutorial/manage-users-groups/#users","title":"Users:","text":"<p>Admins can add or remove any numbers of users in a group. Just select a user from the dropdown and click on <code>Add</code> button to add it to a group. To delete a user from a group, click on <code>Delete</code> button next to it.</p> <p></p>","tags":["Insight\u00b2","Users","Groups"]},{"location":"insight2/tutorial/manage-users-groups/#permissions","title":"Permissions:","text":"<p>Admins can set granular permission like creating/deleting apps or creating/updating/deleting folders  for a group of users.</p> <p></p> <p>All the activities performed by any Admin or any user in a workspace is logged in <code>Audit logs</code> - including any activity related with managing users and groups.</p>","tags":["Insight\u00b2","Users","Groups"]},{"location":"insight2/tutorial/manage-users-groups/#predefined-groups","title":"Predefined Groups","text":"<p>By default, every workspace will have two User Groups:</p> <p>1. All Users</p> <p>This group contains all the users and admins.</p> Apps Users Permissions You can add or remove apps. Modification is disabled. This group will have all the users and admins added in a workspace. You can edit permissions for all the users globally. <p></p> <p>2. Admin</p> <p>This group contains admins by default. Admins can add more admins or remove the users in this group.</p> Apps Users Permissions Modification is disabled. By default, this group has <code>Edit</code> permission for all the apps in a workspace Admins can add or remove users in this group. Modification is disabled. By default, all the admins can create and delete apps or create folders. <p></p>","tags":["Insight\u00b2","Users","Groups"]},{"location":"insight2/tutorial/manage-users-groups/#creating-new-group","title":"Creating new group","text":"<ul> <li>Click on <code>Create new group</code> button in the User Groups page.</li> </ul> <ul> <li>Enter a name for the group and click <code>Create Group</code> button.</li> </ul> <ul> <li>Once the group is created, you can add Apps, Users and set their Properties for that group.</li> </ul>","tags":["Insight\u00b2","Users","Groups"]},{"location":"insight2/tutorial/manage-users-groups/#deleting-a-group","title":"Deleting a group","text":"<p>To delete a group, click on <code>Delete</code> next to it. It will confirm whether you want to delete it or not, Click on <code>Yes</code> to delete the group.</p> <p></p>","tags":["Insight\u00b2","Users","Groups"]},{"location":"insight2/tutorial/mobile-layout/","title":"Mobile layout","text":"<p>Mobile layout is activated when the width of the window is less than 600px.</p> <p>Widgets can be shown on desktop, mobile, or both.</p> <p></p>","tags":["Insight\u00b2","Mobile","Layout"]},{"location":"insight2/tutorial/mobile-layout/#adding-existing-widget-to-mobile-layout","title":"Adding existing widget to mobile layout","text":"<p>Click on the widget to open inspector. Scroll down to the <code>layout</code> section and enable mobile layout. The width of the widget will be adjusted to fit the mobile layout.</p>","tags":["Insight\u00b2","Mobile","Layout"]},{"location":"insight2/tutorial/mobile-layout/#adding-a-new-widget-to-mobile-layout","title":"Adding a new widget to mobile layout","text":"<p>Switch the layout to mobile by clicking the button on the top navigation bar. Drag and drop a widget to the canvas. This widget will not be shown on desktop layout unless enabled from the widget inspector via the \"Show on desktop\" button manually.</p> <p>Width of the widgets will be automatically adjusted to fit the screen while viewing the application in app viewer.</p>","tags":["Insight\u00b2","Mobile","Layout"]},{"location":"insight2/tutorial/multiworkspace/","title":"Multi-Workspace","text":"<p>User can create their own workspaces, user who created workspace will be having admin privileges for the workspace.</p> <p></p>","tags":["Insight\u00b2","Workspace"]},{"location":"insight2/tutorial/multiworkspace/#hierarchy","title":"Hierarchy","text":"","tags":["Insight\u00b2","Workspace"]},{"location":"insight2/tutorial/multiworkspace/#permissions","title":"Permissions","text":"<ul> <li>The administrator can manage users and groups of each workspace</li> <li>Applications and settings can not be shared between workspaces</li> <li>A user authorised to login to Insight\u00b2 will not have access to all workspaces, Usesr should be invited or signed up to a workspace to log-in to it.</li> </ul>","tags":["Insight\u00b2","Workspace"]},{"location":"insight2/tutorial/multiworkspace/#enabling-multi-workspace","title":"Enabling Multi-Workspace","text":"<p>Set environment variable DISABLE_MULTI_WORKSPACE value to false  to enable the feature, and true  to disable it.</p>","tags":["Insight\u00b2","Workspace"]},{"location":"insight2/tutorial/multiworkspace/#when-enabled","title":"When enabled","text":"<ul> <li>When Multi-Workspace feature is enabled, user should login with username and password to log in to Tooljet.</li> <li>Administrator can configure authentication methods for their workspaces.</li> <li>If password login is enabled, switching to the workspace will happen without any other authorization since the user is already authorized with password login.</li> <li>User logged in to Toojet and trying to switch to a workspace where SSO is enabled and password login is disabled, will be redirected to workspace login page and enabled SSO options will be shown</li> <li>User can directly login to a workspace using workspace login URL, Administrator can view the URL Manage SSO -&gt; General Settings -&gt; Login URL.</li> </ul>","tags":["Insight\u00b2","Workspace"]},{"location":"insight2/tutorial/multiworkspace/#when-disabled","title":"When disabled","text":"<ul> <li>If Multi-Workspace is disabled, Create workspace feature won\u2019t be available.</li> <li>No separate login page for workspace and SSO configured for the workspace will be reflected to the main login page/login.</li> </ul>","tags":["Insight\u00b2","Workspace"]},{"location":"insight2/tutorial/sharing-and-deploying/","title":"Preview and Sharing Apps","text":"","tags":["Insight\u00b2","Sharing","App"]},{"location":"insight2/tutorial/sharing-and-deploying/#preview","title":"Preview","text":"<p>Clicking on <code>Preview</code> will open up the currently opened version of the app in the new tab. This is useful if you want to immediately check the app in production.</p> <p></p>","tags":["Insight\u00b2","Sharing","App"]},{"location":"insight2/tutorial/sharing-and-deploying/#sharing-an-app","title":"Sharing an app","text":"<p>Once you have released a version of your app, you can share the app with others using a customised url. To share an app:</p> <ul> <li>Click on the Share button on the top-right corner</li> </ul> <p></p> <ul> <li>In the dialog box, turn on the toggle switch to <code>Make the application public</code> and shareable</li> </ul> <p></p> <ul> <li>Create your own <code>customised URL</code> for the app and click on <code>copy</code> to copy the URL</li> </ul> <p></p> <ul> <li>You can also <code>Embedd</code> your application using the embeddable link</li> </ul> <p></p>","tags":["Insight\u00b2","Sharing","App"]},{"location":"insight2/tutorial/transformations/","title":"Transformations","text":"<p>Transformations can be enabled on queries to transform the query results. Let's write a simple transformation to compute <code>first_name</code> and <code>last_name</code> for all the customers that we fetch in the previous step.</p> <pre><code>// write your code here\n// return value will be set as data and the original data will be available as rawData\nreturn data.map((row) =&gt; {\nreturn {\n...row,\nfirst_name: row.name.split(' ')[0],\nlast_name: row.name.split(' ')[1],\n};\n});\n</code></pre> <p>The query will now look like this:</p> <p></p> <p>Click the <code>create</code> button to create the query. Saved queries can be run using the <code>run</code> icon near the query name. Queries run using the run button will behave just as if it was triggered by an app event like button click and thus will alter the state of the app. You can view the query results using the state inspector on the left side-bar of the app builder.</p> <p></p> <p>We can see that <code>first_name</code> and <code>last_name</code> are added to all the rows in the <code>data</code> object of the query. If you need the original data of the query, it will be available in the <code>rawData</code> object of the query.</p> <p></p> <p>In the next section, we will see how we can display this data using Insight's built-in widgets.</p>","tags":["Insight\u00b2"]},{"location":"insight2/tutorial/versioning-and-release/","title":"Versioning and Release","text":"<p>Versioning and Release lets you version control your apps and release app changes to the users.</p>","tags":["Insight\u00b2","Versioning","Release"]},{"location":"insight2/tutorial/versioning-and-release/#versioning","title":"Versioning","text":"<p>Versioning is really useful if multiple developers are working on an app, it allows them to save their own version of the app. This also prevents developers from overwriting the other developer's work.</p>","tags":["Insight\u00b2","Versioning","Release"]},{"location":"insight2/tutorial/versioning-and-release/#creating-a-version","title":"Creating a Version","text":"<p>You can create new versions from App Version Manager on the top-right corner. It displays the version of the app that you're currently working and can be used to switch between the different version of the app. To create a new version:</p> <ul> <li>Go to the App Version Manager and click on the dropdown. It will display all the versions of the app that have been created.</li> </ul> <p></p> <ul> <li>Click on Create Version and a modal will pop-up. Enter a Version Name and click on Create version from dropdown that will include all the versions of the app, choose a version that you want to use for your new version and then click on <code>Create Version</code>.</li> </ul> <p></p>","tags":["Insight\u00b2","Versioning","Release"]},{"location":"insight2/tutorial/versioning-and-release/#release","title":"Release","text":"<p>Making a release let's you publish the app and push the changes to production.</p>","tags":["Insight\u00b2","Versioning","Release"]},{"location":"insight2/tutorial/versioning-and-release/#releasing-a-version","title":"Releasing a version","text":"<p>To release a version:</p> <ul> <li>Go to the App Version Manager and select the <code>version</code> from the dropdown that you want to release.</li> </ul> <p></p> <ul> <li>Click on the <code>Release</code> button on the top-right corner.</li> </ul> <p></p> <p>Insight\u00b2 will block editing of the <code>Released version</code> of an app and will display a prompt to create a new version to make the changes. This is to prevent accidentally pushing an unfinished app to the live version.</p> <p></p>","tags":["Insight\u00b2","Versioning","Release"]},{"location":"insight2/widgets/","title":"Widgets","text":"<ul> <li>Button group</li> <li>Button</li> <li>Calendar</li> <li>Chart</li> <li>Checkbox</li> <li>Circular Progress Bar</li> <li>Code Editor</li> <li>Container</li> <li>Custom Component</li> <li>Date Range Picker</li> <li>Datepicker</li> <li>Divider</li> <li>Dropdown</li> <li>File picker</li> <li>iFrame</li> <li>Image</li> <li>Kanban</li> <li>Listview</li> <li>Map</li> <li>Modal</li> <li>Multiselect</li> <li>Number input</li> <li>Password input</li> <li>PDF</li> <li>QR-Scanner</li> <li>Radio button</li> <li>Range Slider</li> <li>Rich Text Editor</li> <li>Spinner</li> <li>Star</li> <li>Statistics</li> <li>Steps</li> <li>Table</li> <li>Tabs</li> <li>Tags</li> <li>Text input</li> <li>Text</li> <li>Textarea</li> <li>Timeline</li> <li>Timer</li> <li>Toggle Switch</li> </ul>","tags":["Insight\u00b2","Widgets"]},{"location":"insight2/widgets/button-group/","title":"Button group","text":"<p>Button group widget can be used to take actions.</p>"},{"location":"insight2/widgets/button-group/#properties","title":"Properties","text":""},{"location":"insight2/widgets/button-group/#event-on-click","title":"Event: On click","text":"<p>To add an event to a button group, click on the widget handle to open the widget properties on the right sidebar. Go to the Events section and click on Add handler.</p> <p>On Click event is triggered when the button group is clicked. Just like any other event on Insight, you can set multiple handlers for on click event.</p> <p>Check Action Reference docs to get the detailed information about all the Actions.</p>"},{"location":"insight2/widgets/button-group/#properties_1","title":"Properties","text":"Properties description Expected value label label is used to set the heading of the button group. Any String value labels It can be used to set the labels of the button group items. Array of strings values Values for button group items. Array of strings Default  selected Initial selected values can be set using this. Array of strings Enable multiple selection Toggle this to allow multiple button selection. Toggle to true/false"},{"location":"insight2/widgets/button-group/#layout","title":"Layout","text":"Layout description Expected value Show on desktop Toggle on or off to display desktop view. You can programmatically determing the value by clicking on <code>Fx</code> to set the value <code>{{true}}</code> or <code>{{false}}</code> Show on mobile Toggle on or off to display mobile view. You can programmatically determing the value by clicking on <code>Fx</code> to set the value <code>{{true}}</code> or <code>{{false}}</code>"},{"location":"insight2/widgets/button-group/#styles","title":"Styles","text":"Style Description Background color You can change the background color of the widget by entering the Hex color code or choosing a color of your choice from the color picker. Text color You can change the color of the Text in button by entering the Hex color code or choosing a color of your choice from the color picker. Visibility Toggle on or off to control the visibility of the widget. You can programmatically change its value by clicking on the <code>Fx</code> button next to it. If <code>{{false}}</code> the widget will not visible after the app is deployed. By default, it's set to <code>{{true}}</code>. Disable Toggle on to lock the widget. You can programmatically change its value by clicking on the <code>Fx</code> button next to it, if set to <code>{{true}}</code>, the widget will be locked and becomes non-functional. By default, its value is set to <code>{{false}}</code>. Border radius Use this property to modify the border radius of the button. Selected background color Use this property to modify the background colour of selected buttons <p>Any property having <code>Fx</code> button next to its field can be programmatically configured.</p>"},{"location":"insight2/widgets/button/","title":"Button","text":"<p>Button widget can be used to take actions.</p>","tags":["Insight\u00b2","Widgets"]},{"location":"insight2/widgets/button/#properties","title":"Properties","text":"","tags":["Insight\u00b2","Widgets"]},{"location":"insight2/widgets/button/#event-on-click","title":"Event: On click","text":"<p>To add an event to a button, click on the widget handle to open the widget properties on the right sidebar. Go to the Events section and click on Add handler.</p> <p>On Click event is triggered when the button is clicked. Just like any other event on Insight, you can set multiple handlers for on click event.</p> <p>Check Action Reference docs to get the detailed information about all the Actions.</p>","tags":["Insight\u00b2","Widgets"]},{"location":"insight2/widgets/button/#properties_1","title":"Properties","text":"Properties description Expected value Button Text It can be used to set the label of the button. Any String value: <code>Send Message</code>, <code>Delete</code>, or <code>{{queries.xyz.data.action}}</code> Loading state Loading state can be used to show a spinner as the button content. Loading state is commonly used with isLoading property of the queries to show a loading status while a query is being run. Switch the toggle On or click on <code>fx</code> to programmatically set the value <code>{{true}}</code> or <code>{{false}}</code>","tags":["Insight\u00b2","Widgets"]},{"location":"insight2/widgets/button/#layout","title":"Layout","text":"Layout description Expected value Show on desktop Toggle on or off to display desktop view. You can programmatically determing the value by clicking on <code>Fx</code> to set the value <code>{{true}}</code> or <code>{{false}}</code> Show on mobile Toggle on or off to display mobile view. You can programmatically determing the value by clicking on <code>Fx</code> to set the value <code>{{true}}</code> or <code>{{false}}</code>","tags":["Insight\u00b2","Widgets"]},{"location":"insight2/widgets/button/#styles","title":"Styles","text":"Style Description Background color You can change the background color of the widget by entering the Hex color code or choosing a color of your choice from the color picker. Text color You can change the color of the Text in button by entering the Hex color code or choosing a color of your choice from the color picker. Visibility Toggle on or off to control the visibility of the widget. You can programmatically change its value by clicking on the <code>Fx</code> button next to it. If <code>{{false}}</code> the widget will not visible after the app is deployed. By default, it's set to <code>{{true}}</code>. Disable Toggle on to lock the widget. You can programmatically change its value by clicking on the <code>Fx</code> button next to it, if set to <code>{{true}}</code>, the widget will be locked and becomes non-functional. By default, its value is set to <code>{{false}}</code>. Border radius Use this property to modify the border radius of the button. <p>Any property having <code>Fx</code> button next to its field can be programmatically configured.</p>","tags":["Insight\u00b2","Widgets"]},{"location":"insight2/widgets/calendar/","title":"Calendar","text":"<p>Calendar widget comes with the following features: - Day, month and week level views - Events - Resource scheduling</p> <p></p>"},{"location":"insight2/widgets/calendar/#properties","title":"Properties","text":""},{"location":"insight2/widgets/calendar/#date-format","title":"Date format","text":"<p>Determines the format in which any date passed to the calendar via any of the properties will be parsed. It also determines the format in which any date made available by the calendar via exposed variables will be displayed. It uses the date format conventions of moment.js.</p>"},{"location":"insight2/widgets/calendar/#default-date","title":"Default date","text":"<p>Determines the date on which the calendar's view will be centered on. If the calendar is on <code>month</code> view, it will show the month on which this date exists. If the calendar is on <code>week</code> view, it will show the week on which this date exists. This property needs to be formatted using the <code>Date format</code> property which is configurable on the inspector.</p>"},{"location":"insight2/widgets/calendar/#events","title":"Events","text":"<p><code>Events</code> property should contain an array of objects, each of which describes the events that the calendar needs to display.</p> <p>Assuming that you set the date format to <code>MM-DD-YYYY HH:mm:ss A Z</code>, setting the <code>Events</code> property to the following code snippet will display an event titled <code>Sample Event</code> at the first hour of this day, as displayed in the image of calendar at the beginning of this page.</p> <pre><code>{{[\n{\ntitle: 'Sample event',\nstart: `${moment().startOf('day').format('MM-DD-YYYY HH:mm:ss A Z')}`,\nend: `${moment().endOf('day').format('MM-DD-YYYY HH:mm:ss A Z')}`,\nallDay: false,\ntooltip: 'Sample event',\ncolor: 'lightgreen',\n}\n]}}\n</code></pre>"},{"location":"insight2/widgets/calendar/#event-object-properties","title":"Event object properties","text":"Name Description title Title of the event start The date(and time) on which this event begins. Needs to be formatted in the <code>Date format</code> you've supplied end The date(and time) on which this event ends. Needs to be formatted in the <code>Date format</code> you've supplied allDay Optional. Qualifies the event as an 'All day event', which will pin it to date headers on <code>day</code> and <code>week</code> level views tooltip Tooltip which will be display when the user hovers over the event color Background color of the event, any css supported color name or hex code can be used textColor Color of the event title, any css supported color name or hex code can be used textOrientation Optional. If it is set to <code>vertical</code>, the title of the event will be oriented vertically. resourceId Applicable only if you're using resource scheduling. This is the id of the resource to which this event correspond to. <p>You may supply any other additional property to the event(s). These additional properties will available to you when the calendar widget exposes any of the events via its exposed variables.</p>"},{"location":"insight2/widgets/calendar/#resources","title":"Resources","text":"<p>Specifying resources will make the calendar categorize <code>week</code> view and <code>day</code> view for each of the resources specified.</p> <p>For example, to categorize week/day view into for three rooms, we specify <code>resources</code> this way:</p> <pre><code>{{[\n{resourceId: 1, title: 'Room A'},\n{resourceId: 2, title: 'Room B'},\n{resourceId: 3, title: 'Room C'},\n]}}\n</code></pre> <p>If we specify the <code>resourceId</code> of any of the events as <code>1</code>, then that event will be assigned to <code>Room A</code>, generating the following calendar, assuming that we've set the view to <code>day</code> and are viewing the day on which this event exists.</p> <p></p>"},{"location":"insight2/widgets/calendar/#default-view","title":"Default view","text":"<p>Determines whether the calendar would display a <code>day</code>, a <code>week</code> or a <code>month</code>. Setting this property to anything other than these values will make the calendar default to <code>month</code> view.</p> <p>The view that is currently selected will be exposed as the variable <code>currentView</code>.</p>"},{"location":"insight2/widgets/calendar/#start-time-on-week-and-day-view","title":"Start time on week and day view","text":"<p>This determines the time at which week view and day view cells begins. Keep in mind that this field accepts a date, but still only the time and timezone(if provided) are taken from this date. The date should be provided in the date format chosen by you in the first property field.</p>"},{"location":"insight2/widgets/calendar/#end-time-on-week-and-day-view","title":"End time on week and day view","text":"<p>This determines the time at which week view and day view cells ends. Keep in mind that this field accepts a date, but still only the time and timezone(if provided) are taken from this date. The date should be provided in the date format chosen by you in the first property field.</p>"},{"location":"insight2/widgets/calendar/#show-toolbar","title":"Show toolbar","text":"<p>Determines whether the calendar toolbar should be displayed or not. Click on <code>Fx</code> button to programmatically determine the field value to <code>{{true}}</code> or <code>{{false}}</code>.</p>"},{"location":"insight2/widgets/calendar/#show-view-switcher","title":"Show view switcher","text":"<p>Determines whether the calendar's buttons that allow user to switch between <code>month</code>, <code>week</code> and <code>day</code> level views will be displayed. Click on <code>Fx</code> button to programmatically determine the field value to <code>{{true}}</code> or <code>{{false}}</code>.</p>"},{"location":"insight2/widgets/calendar/#highlight-today","title":"Highlight today","text":"<p>Determines whether the today's card on the calendar should be highlighted or not. Click on <code>Fx</code> button to programmatically determine the field value to <code>{{true}}</code> or <code>{{false}}</code>.</p>"},{"location":"insight2/widgets/calendar/#show-popover-when-the-event-is-clicked","title":"Show popover when the event is clicked","text":"<p>Determines whether to display a popover whenever an event is clicked. Click on <code>Fx</code> button to programmatically determine the field value to <code>{{true}}</code> or <code>{{false}}</code>.</p>"},{"location":"insight2/widgets/calendar/#events_1","title":"Events","text":""},{"location":"insight2/widgets/calendar/#on-event-selected","title":"On Event selected","text":"<p>This event is fired when the user clicks on a calendar event.</p> <p>Last selected event is exposed as <code>selectedEvent</code>.</p>"},{"location":"insight2/widgets/calendar/#on-slot-selected","title":"on Slot selected","text":"<p>This event is fired when the user either clicks on an calendar slot(empty cell or empty space of a cell with event) or when they click and drag to select multiple slots.</p> <p>Last selected slot(s) are exposed as <code>selectedSlots</code>.</p>"},{"location":"insight2/widgets/calendar/#on-date-navigate","title":"On Date Navigate","text":"<p>This event is fired when the user clicks on <code>Today</code>, <code>Next</code> or <code>Back</code> buttons on the calendar. The corresponding date to which the user navigated, will be exposed as <code>currentDate</code>.</p>"},{"location":"insight2/widgets/calendar/#on-view-change","title":"On View Change","text":"<p>This event is fired when a different view is selected by the user. The current view is exposed as <code>currentView</code>.</p> <p>:::info Check Action Reference docs to get the detailed information about all the Actions. :::</p>"},{"location":"insight2/widgets/calendar/#layout","title":"Layout","text":""},{"location":"insight2/widgets/calendar/#show-on-desktop","title":"Show on desktop","text":"<p>Toggle on or off to display the widget in desktop view. You can programmatically determing the value by clicking on <code>Fx</code> to set the value <code>{{true}}</code> or <code>{{false}}</code>.</p>"},{"location":"insight2/widgets/calendar/#show-on-mobile","title":"Show on mobile","text":"<p>Toggle on or off to display the widget in mobile view. You can programmatically determing the value by clicking on <code>Fx</code> to set the value <code>{{true}}</code> or <code>{{false}}</code>.</p>"},{"location":"insight2/widgets/calendar/#styles","title":"Styles","text":""},{"location":"insight2/widgets/calendar/#visibility","title":"Visibility","text":"<p>Toggle on or off to control the visibility of the widget. You can programmatically change its value by clicking on the <code>Fx</code> button next to it. If <code>{{false}}</code> the widget will not be visible after the app is deployed. By default, it's set to <code>{{true}}</code>.</p>"},{"location":"insight2/widgets/calendar/#cell-size-in-views-classified-by-resource","title":"Cell size in views classified by resource","text":"<p>When <code>resources</code> are specified, the calendar could take up quite a lot of horizontal space, making the horizontal scroll bar of calendar having to be relied upon all the time.</p> <p>If we set this property to <code>compact</code>, the cell sizes will be smaller in <code>week</code> and <code>day</code> views.</p>"},{"location":"insight2/widgets/calendar/#header-date-format-on-week-view","title":"Header date format on week view","text":"<p>This format determines how the column header for each day in week view will be displayed. As with every other date format field in Insight, this follows the momentjs standard of date formatting.</p> <p>:::info Any property having <code>Fx</code> button next to its field can be programmatically configured. :::</p>"},{"location":"insight2/widgets/chart/","title":"Chart","text":"<p>Chart widget takes the chart type, data and styles to draw charts using Plotly.js.</p>","tags":["Insight\u00b2","Widgets","Chart"]},{"location":"insight2/widgets/chart/#how-to-use-chart-widget","title":"How To Use Chart Widget","text":"","tags":["Insight\u00b2","Widgets","Chart"]},{"location":"insight2/widgets/chart/#chart-types","title":"Chart types","text":"","tags":["Insight\u00b2","Widgets","Chart"]},{"location":"insight2/widgets/chart/#line-charts","title":"Line charts","text":"<p>Data requirements: The data needs to be an array of objects and each object should have <code>x</code> and <code>y</code> keys.</p> <p>Example: <pre><code>[\n{ \"x\": \"Jan\", \"y\": 100},\n{ \"x\": \"Feb\", \"y\": 80},\n{ \"x\": \"Mar\", \"y\": 40},\n{ \"x\": \"Apr\", \"y\": 100},\n{ \"x\": \"May\", \"y\": 80},\n{ \"x\": \"Jun\", \"y\": 40}\n]\n</code></pre></p> <p>The chart will look like this:</p> <p></p>","tags":["Insight\u00b2","Widgets","Chart"]},{"location":"insight2/widgets/chart/#bar-charts","title":"Bar charts","text":"<p>Data requirements: The data needs to be an array of objects and each object should have <code>x</code> and <code>y</code> keys.</p> <p>Example:</p> <pre><code>[\n{ \"x\": \"Jan\", \"y\": 100},\n{ \"x\": \"Feb\", \"y\": 80},\n{ \"x\": \"Mar\", \"y\": 40},\n{ \"x\": \"Apr\", \"y\": 100},\n{ \"x\": \"May\", \"y\": 80},\n{ \"x\": \"Jun\", \"y\": 40},\n{ \"x\": \"Jul\", \"y\": 100},\n{ \"x\": \"Aug\", \"y\": 80},\n{ \"x\": \"Sep\", \"y\": 40}\n]\n</code></pre> <p>The chart will look like this:</p> <p></p>","tags":["Insight\u00b2","Widgets","Chart"]},{"location":"insight2/widgets/chart/#pie-charts","title":"Pie charts","text":"<p>Data requirements: The data needs to be an array of objects and each object should have <code>label</code> and <code>value</code> keys.</p> <p>Example:</p> <pre><code>[\n{ \"x\": \"Jan\", \"y\": 100},\n{ \"x\": \"Feb\", \"y\": 80},\n{ \"x\": \"Mar\", \"y\": 40},\n{ \"x\": \"Apr\", \"y\": 100},\n{ \"x\": \"May\", \"y\": 80},\n{ \"x\": \"Jun\", \"y\": 40}\n]\n</code></pre> <p>The chart will look like this:</p> <p></p>","tags":["Insight\u00b2","Widgets","Chart"]},{"location":"insight2/widgets/chart/#properties","title":"Properties","text":"<p> Any property having <code>Fx</code> button next to its field can be programmatically configured.</p>","tags":["Insight\u00b2","Widgets","Chart"]},{"location":"insight2/widgets/chart/#title","title":"Title","text":"<p>This field is used to add a title to your selected chart.</p>","tags":["Insight\u00b2","Widgets","Chart"]},{"location":"insight2/widgets/chart/#plotly-json-chart-schema","title":"Plotly JSON chart schema","text":"<p>In the chart widget, you can also plot a chart with JSON data. So the JSON will contain the information about the chart type, chart data, etc. You can learn more about the JSON properties from here.</p> <p>Anyway, to work with the JSON you need to enable the <code>Use Plotly JSON schema</code> toggle from the properties section.</p> <p></p> <p>It will show the JSON description field to put the JSON data.</p> <p>The end result will be like this:</p> <p></p>","tags":["Insight\u00b2","Widgets","Chart"]},{"location":"insight2/widgets/chart/#loading-state","title":"Loading state","text":"<p>Toggle <code>on</code> the switch to display a loader on the widget. You can also programmatically define it's value by clicking on <code>Fx</code>, acceptable values are - <code>{{true}}</code> and <code>{{false}}</code>.</p>","tags":["Insight\u00b2","Widgets","Chart"]},{"location":"insight2/widgets/chart/#marker-color","title":"Marker color","text":"<p>Modify the color of marker using the color picker or by providing a <code>HEX color code</code>.</p>","tags":["Insight\u00b2","Widgets","Chart"]},{"location":"insight2/widgets/chart/#show-axes","title":"Show Axes","text":"<p>Enable or disable the <code>x</code> and <code>y</code> axes on the chart through this property. You can also programmatically define it's value by clicking on <code>Fx</code>, acceptable values are - <code>{{true}}</code> and <code>{{false}}</code>.</p>","tags":["Insight\u00b2","Widgets","Chart"]},{"location":"insight2/widgets/chart/#show-grid-lines","title":"Show grid lines","text":"<p>Toggle <code>on</code> or <code>off</code> to show or hide the grid lines on the chart. You can also programmatically define it's value by clicking on <code>Fx</code>, acceptable values are - <code>{{true}}</code> and <code>{{false}}</code>.</p>","tags":["Insight\u00b2","Widgets","Chart"]},{"location":"insight2/widgets/chart/#layout","title":"Layout","text":"","tags":["Insight\u00b2","Widgets","Chart"]},{"location":"insight2/widgets/chart/#show-on-desktop","title":"Show on desktop","text":"<p>Toggle on or off to display the widget in desktop view. You can programmatically determine the value by clicking on <code>Fx</code> to set the value <code>{{true}}</code> or <code>{{false}}</code>.</p>","tags":["Insight\u00b2","Widgets","Chart"]},{"location":"insight2/widgets/chart/#show-on-mobile","title":"Show on mobile","text":"<p>Toggle on or off to display the widget in mobile view. You can programmatically determine the value by clicking on <code>Fx</code> to set the value <code>{{true}}</code> or <code>{{false}}</code>.</p>","tags":["Insight\u00b2","Widgets","Chart"]},{"location":"insight2/widgets/chart/#styles","title":"Styles","text":"","tags":["Insight\u00b2","Widgets","Chart"]},{"location":"insight2/widgets/chart/#padding","title":"Padding","text":"<p>Define a space between the widget element and the widget border using <code>Padding</code> property. Use any numerical value between <code>1</code> to <code>100</code>.</p>","tags":["Insight\u00b2","Widgets","Chart"]},{"location":"insight2/widgets/chart/#visibility","title":"Visibility","text":"<p>Toggle on or off to control the visibility of the widget. You can programmatically change its value by clicking on the <code>Fx</code> button next to it. If <code>{{false}}</code> the widget will not be visible after the app is deployed. By default, it's set to <code>{{true}}</code>.</p>","tags":["Insight\u00b2","Widgets","Chart"]},{"location":"insight2/widgets/chart/#disable","title":"Disable","text":"<p>This is <code>off</code> by default, toggle <code>on</code> the switch to lock the widget and make it non-functional. You can also programmatically set the value by clicking on the <code>Fx</code> button next to it. If set to <code>{{true}}</code>, the widget will be locked and becomes non-functional. By default, its value is set to <code>{{false}}</code>.</p>","tags":["Insight\u00b2","Widgets","Chart"]},{"location":"insight2/widgets/checkbox/","title":"Checkbox","text":"<p>Checkbox widget can be used for allowing the users to make a binary choice, e.g,. unselected or selected.</p> <p>:::info The checkbox widget consists of a single checkbox input. :::</p> <p></p>"},{"location":"insight2/widgets/checkbox/#properties","title":"Properties","text":""},{"location":"insight2/widgets/checkbox/#label","title":"Label","text":"<p>The text is to be used as the label for the checkbox. This field expects a <code>String</code> input.</p>"},{"location":"insight2/widgets/checkbox/#events","title":"Events","text":"<p>:::info Check Action Reference docs to get the detailed information about all the Actions. :::</p>"},{"location":"insight2/widgets/checkbox/#on-check","title":"On check","text":"<p>On check event is triggered when checkbox input is checked.</p>"},{"location":"insight2/widgets/checkbox/#on-uncheck","title":"On uncheck","text":"<p>On uncheck event is triggered when checkbox input is unchecked.</p>"},{"location":"insight2/widgets/checkbox/#layout","title":"Layout","text":""},{"location":"insight2/widgets/checkbox/#show-on-desktop","title":"Show on desktop","text":"<p>Toggle on or off to display the widget in desktop view. You can programmatically determing the value by clicking on <code>Fx</code> to set the value <code>{{true}}</code> or <code>{{false}}</code>.</p>"},{"location":"insight2/widgets/checkbox/#show-on-mobile","title":"Show on mobile","text":"<p>Toggle on or off to display the widget in mobile view. You can programmatically determing the value by clicking on <code>Fx</code> to set the value <code>{{true}}</code> or <code>{{false}}</code>.</p>"},{"location":"insight2/widgets/checkbox/#styles","title":"Styles","text":""},{"location":"insight2/widgets/checkbox/#text-color","title":"Text color","text":"<p>Change the color of the Text in checkbox by entering the <code>Hex color code</code> or choosing a color of your choice from the color-picker.</p>"},{"location":"insight2/widgets/checkbox/#checkbox-color","title":"Checkbox color","text":"<p>You can change the color of the checkbox by entering the <code>Hex color code</code> or choosing a color of your choice from the color-picker.</p>"},{"location":"insight2/widgets/checkbox/#visibility","title":"Visibility","text":"<p>Toggle on or off to control the visibility of the widget. You can programmatically change its value by clicking on the <code>Fx</code> button next to it. If <code>{{false}}</code> the widget will not be visible after the app is deployed. By default, it's set to <code>{{true}}</code>.</p>"},{"location":"insight2/widgets/checkbox/#disable","title":"Disable","text":"<p>This is <code>off</code> by default, toggle <code>on</code> the switch to lock the widget and make it non-functional. You can also programmatically set the value by clicking on the <code>Fx</code> button next to it. If set to <code>{{true}}</code>, the widget will be locked and becomes non-functional. By default, its value is set to <code>{{false}}</code>.</p> <p>:::info Any property having <code>Fx</code> button next to its field can be programmatically configured. :::</p>"},{"location":"insight2/widgets/circular-progress-bar/","title":"Circular Progress Bar","text":"<p>Circular progress bar widget can be used to show progress in a progress circle.</p> <p></p>"},{"location":"insight2/widgets/circular-progress-bar/#properties","title":"Properties","text":"<p>:::info Any property having <code>Fx</code> button next to its field can be programmatically configured. :::</p> <p></p> properties description Expected Value Text We can set a text inside the progress circle. It expects a <code>String</code>, you can also use js to dynamically update the text as the progress changes. Progress It can be used to set the progress of the widget. Progress should be an integer between 0 and 100."},{"location":"insight2/widgets/circular-progress-bar/#layout","title":"Layout","text":"Layout description Show on desktop Toggle on or off to display the widget in desktop view. You can programmatically determing the value by clicking on Fx to set the value <code>{{true}}</code> or <code>{{false}}</code>. Show on mobile Toggle on or off to display the widget in mobile view. You can programmatically determing the value by clicking on Fx to set the value <code>{{true}}</code> or <code>{{false}}</code>."},{"location":"insight2/widgets/circular-progress-bar/#styles","title":"Styles","text":"properties description Expected Value Color To define stroke color. <code>HEX color code</code> or choose color from color-picker. Text color To define color of the text inside circular progress bar. <code>HEX color code</code> or choose color from color-picker. Text size To define the size of the text Value must between 0-100. Stroke width To define the width of stroke Value must between 0-100. Counter Clockwise Whether to rotate progress bar in counterclockwise direction. It accepts <code>{{true}}</code> and <code>{{false}}</code>, Default value is <code>false</code>. Circle ratio To define ratio of the full circle diameter the progressbar should use. It accepts numerical value and the default is <code>1</code>. Visibility Toggle on or off to control the visibility of the widget. You can programmatically change its value by clicking on the <code>Fx</code> button next to it. If <code>{{false}}</code> the widget will not be visible after the app is deployed. By default, it's set to <code>{{true}}</code>. <p>:::info Circular progress bar widget uses react-circular-progress package. Check the repo for futher more details about properties and styles. :::</p>"},{"location":"insight2/widgets/code-editor/","title":"Code Editor","text":"<p>Code Editor widget is a versatile text editor for editing code and supports several languages.</p> <p></p>"},{"location":"insight2/widgets/code-editor/#properties","title":"Properties","text":"<p>:::info Any property having <code>Fx</code> button next to its field can be programmatically configured. :::</p> <p></p> properties description Expected value Placeholder It specifies a hint that describes the expected value. This field requires a <code>String</code> value Mode It is used to specify the language to be used for the code-editor. See <code>info</code> below for the list of all supported languages Show Line Number This property is used to show or hide line numbers to the left of the editor. This fields expects a boolean value <code>{{true}}</code> or <code>{{false}}</code> <p>:::info</p> Supporting all commonly used languages. <ul> <li>APL</li> <li>ASN.1</li> <li>Asterisk dialplan</li> <li>Brainfuck</li> <li>C, C++, C#</li> <li>Ceylon</li> <li>Clojure</li> <li>Closure Stylesheets (GSS)</li> <li>CMake</li> <li>COBOL</li> <li>CoffeeScript</li> <li>Common Lisp</li> <li>Crystal</li> <li>CSS</li> <li>Cypher</li> <li>Cython</li> <li>D</li> <li>Dart</li> <li>Django (templating language)</li> <li>Dockerfile</li> <li>diff</li> <li>DTD</li> <li>Dylan</li> <li>EBNF</li> <li>ECL</li> <li>Eiffel</li> <li>Elixir</li> <li>Elm</li> <li>Erlang</li> <li>Factor</li> <li>FCL</li> <li>Forth</li> <li>Fortran</li> <li>F#</li> <li>Gas (AT&amp;T-style assembly)</li> <li>Gherkin</li> <li>Go</li> <li>Groovy</li> <li>HAML</li> <li>Handlebars</li> <li>Haskell</li> <li>Haxe</li> <li>HTML embedded (JSP, ASP.NET)</li> <li>HTML mixed-mode</li> <li>HTTP</li> <li>IDL</li> <li>Java</li> <li>JavaScript (JSX)</li> <li>Jinja2</li> <li>Julia</li> <li>Kotlin</li> <li>LESS</li> <li>LiveScript</li> <li>Lua</li> <li>Markdown (GitHub-flavour)</li> <li>Mathematica</li> <li>mbox</li> <li>mIRC</li> <li>Modelica</li> <li>MscGen</li> <li>MUMPS</li> <li>Nginx</li> <li>NSIS</li> <li>N-Triples/N-Quads</li> <li>Objective C</li> <li>OCaml</li> <li>Octave (MATLAB)</li> <li>Oz</li> <li>Pascal</li> <li>PEG.js</li> <li>Perl</li> <li>PGP (ASCII armor)</li> <li>PHP</li> <li>Pig Latin</li> <li>PowerShell</li> <li>Properties files</li> <li>ProtoBuf</li> <li>Pug</li> <li>Puppet</li> <li>Python</li> <li>Q</li> <li>R</li> <li>RPM</li> <li>reStructuredText</li> <li>Ruby</li> <li>Rust</li> <li>SAS</li> <li>Sass</li> <li>Spreadsheet</li> <li>Scala</li> <li>Scheme</li> <li>SCSS</li> <li>Shell</li> <li>Sieve</li> <li>Slim</li> <li>Smalltalk</li> <li>Smarty</li> <li>Solr</li> <li>Soy</li> <li>Stylus</li> <li>SQL (several dialects)</li> <li>SPARQL</li> <li>Squirrel</li> <li>Swift</li> <li>sTeX, LaTeX</li> <li>Tcl</li> <li>Textile</li> <li>Tiddlywiki</li> <li>Tiki wiki</li> <li>TOML</li> <li>Tornado (templating language)</li> <li>troff (for manpages)</li> <li>TTCN</li> <li>TTCN Configuration</li> <li>Turtle</li> <li>Twig</li> <li>VB.NET</li> <li>VBScript</li> <li>Velocity</li> <li>Verilog/SystemVerilog</li> <li>VHDL</li> <li>Vue.js app</li> <li>Web IDL</li> <li>WebAssembly Text Format</li> <li>XML/HTML</li> <li>XQuery</li> <li>Yacas</li> <li>YAML</li> <li>YAML frontmatter</li> <li>Z80</li> </ul> <p>:::</p>"},{"location":"insight2/widgets/code-editor/#layout","title":"Layout","text":"Layout description Show on desktop Toggle on or off to display the widget in desktop view. You can programmatically determing the value by clicking on Fx to set the value <code>{{true}}</code> or <code>{{false}}</code>. Show on mobile Toggle on or off to display the widget in mobile view. You can programmatically determing the value by clicking on Fx to set the value <code>{{true}}</code> or <code>{{false}}</code>."},{"location":"insight2/widgets/code-editor/#styles","title":"Styles","text":"Styles description Visibility Toggle on or off to control the visibility of the widget. You can programmatically change its value by clicking on the <code>Fx</code> button next to it. If <code>{{false}}</code> the widget will not be visible after the app is deployed. By default, it's set to <code>{{true}}</code>. Disable This is <code>off</code> by default, toggle <code>on</code> the switch to lock the widget and make it non-functional. You can also programmatically set the value by clicking on the <code>Fx</code> button next to it. If set to <code>{{true}}</code>, the widget will be locked and becomes non-functional. By default, its value is set to <code>{{false}}</code>. Border radius Use this property to modify the border radius of the editor. The field expects only numerical value from <code>1</code> to <code>100</code>, default is <code>0</code>."},{"location":"insight2/widgets/container/","title":"Container","text":"<p>Containers are used to group widgets together. You can move the desired number of widgets inside a container to organize your app better.</p> <p></p>"},{"location":"insight2/widgets/container/#layout","title":"Layout","text":"Layout description Show on desktop This property have toggle switch. If enabled, the Container widget will display in the desktop view else it will not appear. This is enabled by default. Show on mobile This property have toggle switch. If enabled, the Container wisget will display in the mobile view else it will not appear."},{"location":"insight2/widgets/container/#styles","title":"Styles","text":"Style Description backgroundColor You can change the background color of the Container by entering the <code>Hex color code</code> or choosing a color of your choice from the color picker. Border radius Use this property to modify the border radius of the container. The field expects only numerical value from <code>1</code> to <code>100</code>, default is <code>0</code>. Visibility This is to control the visibility of the widget. If <code>{{false}}</code> the widget will not visible after the app is deployed. It can only have boolean values i.e. either <code>{{true}}</code> or <code>{{false}}</code>. By default, it's set to <code>{{true}}</code>. Disable This property only accepts boolean values. If set to <code>{{true}}</code>, the widget will be locked and becomes non-functional. By default, its value is set to <code>{{false}}</code>. <p>:::info Any property having <code>Fx</code> button next to its field can be programmatically configured. :::</p>"},{"location":"insight2/widgets/custom-component/","title":"Custom Component","text":"<p>Custom Component can be used to do create your own React component when the needed functionality isn't available in other components.</p> <p></p>","tags":["Insight\u00b2","Widgets","Custom Component"]},{"location":"insight2/widgets/custom-component/#properties","title":"Properties","text":"","tags":["Insight\u00b2","Widgets","Custom Component"]},{"location":"insight2/widgets/custom-component/#data","title":"Data","text":"<p>The data needs to be an objects which needs to be passed as <code>data</code> props to the custom component</p> <p>Example:</p> <pre><code>{{{\ntitle: \"Hi! There\",\nbuttonText: \"Updated Text\",\nqueryName: \"runjs1\"\n}}}\n</code></pre>","tags":["Insight\u00b2","Widgets","Custom Component"]},{"location":"insight2/widgets/custom-component/#code","title":"Code","text":"<p>This field is used to add a React code for your custom component. The packages for the custom component can be imported from Skypack. For example, to import <code>React</code> package into the custom component it can be imported as <code>import React from 'https://cdn.skypack.dev/react'</code>.</p> <p>Insight\u00b2 provides 3 props to interact with the app: <code>data</code>, <code>updateData</code> and <code>runQuery</code>.</p> <ul> <li><code>data</code> is a shared object between custom component and Insight\u00b2 app.</li> <li><code>updateData</code> is a function which accepts a single object used to update the data passed to the custom component.</li> <li><code>runQuery</code> is a function which accepts a query name as a string used to run the query from the custom component.</li> </ul> <p>Example:</p> <pre><code>import React from \"https://cdn.skypack.dev/react\";\nimport ReactDOM from \"https://cdn.skypack.dev/react-dom\";\nimport { Button, Container, Link } from \"https://cdn.skypack.dev/@material-ui/core\";\n\nconst MyCustomComponent = ({data, updateData, runQuery}) =&gt; (\n&lt;Container&gt;\n&lt;h1&gt;{data.title}&lt;/h1&gt;\n&lt;Button\ncolor=\"primary\"\nvariant=\"outlined\"\nonClick={() =&gt; {updateData({title: 'Hello World!!'})}}&gt;\n{data.buttonText}\n&lt;/Button&gt;\n&lt;Button\ncolor=\"primary\"\nvariant=\"outlined\"\nonClick={() =&gt; {runQuery(data.queryName)}}\n&gt;\nRun Query\n&lt;/Button&gt;\n&lt;/Container&gt;\n);\n\nconst ConnectedComponent = Tooljet.connectComponent(MyCustomComponent);\n\nReactDOM.render(&lt;ConnectedComponent /&gt;, document.body);\n</code></pre> <p> <code>Tooljet.connectComponent</code> acts as a HOC and it is required to get access to the data passed into the custom component and run the query</p>","tags":["Insight\u00b2","Widgets","Custom Component"]},{"location":"insight2/widgets/custom-component/#layout","title":"Layout","text":"Layout description Expected value Show on desktop Toggle on or off to display desktop view. You can programmatically determining the value by clicking on <code>Fx</code> to set the value <code>{{true}}</code> or <code>{{false}}</code> Show on mobile Toggle on or off to display mobile view. You can programmatically determining the value by clicking on <code>Fx</code> to set the value <code>{{true}}</code> or <code>{{false}}</code>","tags":["Insight\u00b2","Widgets","Custom Component"]},{"location":"insight2/widgets/custom-component/#styles","title":"Styles","text":"Style Description Visibility Toggle on or off to control the visibility of the widget. You can programmatically change its value by clicking on the <code>Fx</code> button next to it. If <code>{{false}}</code> the widget will not visible after the app is deployed. By default, it's set to <code>{{true}}</code>. <p> Any property having <code>Fx</code> button next to its field can be programmatically configured.</p>","tags":["Insight\u00b2","Widgets","Custom Component"]},{"location":"insight2/widgets/date-range-picker/","title":"Date-range picker","text":"<p>The date-range picker widget allows users to select a range of dates.</p> <p></p>"},{"location":"insight2/widgets/date-range-picker/#properties","title":"Properties","text":""},{"location":"insight2/widgets/date-range-picker/#format","title":"Format","text":"<p>The format of the date selected by the date picker. Default date format is DD/MM/YYYY. Date format should be followed as ISO 8601 as mentioned in the moment documentation.</p>"},{"location":"insight2/widgets/date-range-picker/#layout","title":"Layout","text":""},{"location":"insight2/widgets/date-range-picker/#show-on-desktop","title":"Show on desktop","text":"<p>Toggle on or off to display the widget in desktop view. You can programmatically determing the value by clicking on <code>Fx</code> to set the value <code>{{true}}</code> or <code>{{false}}</code>.</p>"},{"location":"insight2/widgets/date-range-picker/#show-on-mobile","title":"Show on mobile","text":"<p>Toggle on or off to display the widget in mobile view. You can programmatically determing the value by clicking on <code>Fx</code> to set the value <code>{{true}}</code> or <code>{{false}}</code>.</p>"},{"location":"insight2/widgets/date-range-picker/#styles","title":"Styles","text":""},{"location":"insight2/widgets/date-range-picker/#border-radius","title":"Border Radius","text":"<p>Use this property to modify the border radius of the date range picker. The field expects only numerical value from <code>1</code> to <code>100</code>, default is <code>0</code>.</p>"},{"location":"insight2/widgets/date-range-picker/#visibility","title":"Visibility","text":"<p>This is to control the visibility of the widget. If <code>{{false}}</code> the widget will not visible after the app is deployed. It can only have boolean values i.e. either <code>{{true}}</code> or <code>{{false}}</code>. By default, it's set to <code>{{true}}</code>.</p>"},{"location":"insight2/widgets/date-range-picker/#disable","title":"Disable","text":"<p>This property only accepts boolean values. If set to <code>{{true}}</code>, the widget will be locked and becomes non-functional. By default, its value is set to <code>{{false}}</code>.</p> <p>:::info Any property having <code>Fx</code> button next to its field can be programmatically configured. :::</p>"},{"location":"insight2/widgets/datepicker/","title":"Datepicker","text":"<p>The Datepicker widget allows users to select a single value for date and time from a pre-determined set.</p> <p></p>"},{"location":"insight2/widgets/datepicker/#events","title":"Events","text":""},{"location":"insight2/widgets/datepicker/#event-on-select","title":"Event: On select","text":"<p>On select event is triggered when an date is selected.</p>"},{"location":"insight2/widgets/datepicker/#properties","title":"Properties","text":""},{"location":"insight2/widgets/datepicker/#default-value","title":"Default value","text":"<p>This value acts as placeholder for the date picker widget, if any value is not provided then the default value will be used from the picker. The default value needs to a <code>String</code> with respect to the <code>format</code> field. Ex: If format is set to <code>MM/YYYY</code> then provide default value as <code>04/2022</code>.</p>"},{"location":"insight2/widgets/datepicker/#disabled-dates","title":"Disabled dates","text":"<p>We can give disabled dates property which will make specific dates disabled and cannot be selected. The default value needs to a an array of<code>Strings</code>.</p>"},{"location":"insight2/widgets/datepicker/#format","title":"Format","text":"<p>The format of the date selected by the date picker. Default date format is DD/MM/YYYY. Date format should be followed as ISO 8601 as mentioned in the moment documentation. This field requires a <code>String</code> input. Ex: <code>DD/MM</code>, <code>MM/YYYY</code>, <code>YY/MM</code>, <code>DD/MM/YYYY</code> etc.</p>"},{"location":"insight2/widgets/datepicker/#enable-time-selection","title":"Enable time selection?","text":"<p>Allows to select time if enabled. Time selection is disabled by default. This field requires a boolean value: <code>{{true}}</code> or <code>{{false}}</code>.</p>"},{"location":"insight2/widgets/datepicker/#enable-date-selection","title":"Enable date selection?","text":"<p>Allows to select date if enabled. Date selection is enabled by default. This field requires a boolean value: <code>{{true}}</code> or <code>{{false}}</code>.</p>"},{"location":"insight2/widgets/datepicker/#validation","title":"Validation","text":""},{"location":"insight2/widgets/datepicker/#custom-validation","title":"Custom Validation","text":"<p>Add a validation for the date input in the widget using the ternary operator.</p>"},{"location":"insight2/widgets/datepicker/#layout","title":"Layout","text":""},{"location":"insight2/widgets/datepicker/#show-on-desktop","title":"Show on desktop","text":"<p>Toggle on or off to display the widget in desktop view. You can programmatically determing the value by clicking on <code>Fx</code> to set the value <code>{{true}}</code> or <code>{{false}}</code>.</p>"},{"location":"insight2/widgets/datepicker/#show-on-mobile","title":"Show on mobile","text":"<p>Toggle on or off to display the widget in mobile view. You can programmatically determing the value by clicking on <code>Fx</code> to set the value <code>{{true}}</code> or <code>{{false}}</code>.</p>"},{"location":"insight2/widgets/datepicker/#styles","title":"Styles","text":""},{"location":"insight2/widgets/datepicker/#visibility","title":"Visibility","text":"<p>This is to control the visibility of the widget. If <code>{{false}}</code> the widget will not visible after the app is deployed. It can only have boolean values i.e. either <code>{{true}}</code> or <code>{{false}}</code>. By default, it's set to <code>{{true}}</code>.</p>"},{"location":"insight2/widgets/datepicker/#disable","title":"Disable","text":"<p>This property only accepts boolean values. If set to <code>{{true}}</code>, the widget will be locked and becomes non-functional. By default, its value is set to <code>{{false}}</code>.</p>"},{"location":"insight2/widgets/datepicker/#border-radius","title":"Border Radius","text":"<p>Use this property to modify the border radius of the date-picker. The field expects only numerical value from <code>1</code> to <code>100</code>, default is <code>0</code>.</p> <p>:::info Any property having <code>Fx</code> button next to its field can be programmatically configured. :::</p>"},{"location":"insight2/widgets/divider/","title":"Divider","text":"<p>Divider widget is used to add separator between components.</p> <p></p>"},{"location":"insight2/widgets/divider/#layout","title":"Layout","text":"properties description Show on Desktop This property have toggle switch. If enabled, the divider will display in the desktop view else it will not appear. Show on Mobile This property have toggle switch. If enabled, the divider will display in the mobile view else it will not appear."},{"location":"insight2/widgets/divider/#styles","title":"Styles","text":"properties description Divider Color It is used to set the color of the divider. Use hex code to set the background color. Visibility This property is used to set the visibility of the divider. The property accepts Boolean value. <p>:::info Any property having <code>Fx</code> button next to its field can be programmatically configured. :::</p>"},{"location":"insight2/widgets/dropdown/","title":"Dropdown","text":"<p>The Dropdown widget can be used to collect user input from a list of options.</p> <p></p> <p>:::tip Dropdown options can be referred to your query data with dynamic variables. :::</p> <p></p>"},{"location":"insight2/widgets/dropdown/#events","title":"Events","text":""},{"location":"insight2/widgets/dropdown/#event-on-select","title":"Event: On select","text":"<p>On select event is triggered when an option is selected.</p>"},{"location":"insight2/widgets/dropdown/#event-on-search-text-changed","title":"Event: On search text changed","text":"<p>This event is triggered whenever the user searches through the options by typing on the dropdown's input box. The corresponding search text will be exposed as <code>searchText</code>.</p>"},{"location":"insight2/widgets/dropdown/#properties","title":"Properties","text":""},{"location":"insight2/widgets/dropdown/#label","title":"Label","text":"<p>The text is to be used as the label of the dropdown.</p>"},{"location":"insight2/widgets/dropdown/#default-value","title":"Default value","text":"<p>Value of the default option</p>"},{"location":"insight2/widgets/dropdown/#option-value","title":"Option value","text":"<p>Option values are values for different options in the list of the dropdown. Refer your query data with dynamic variables <code>{{queries.datasource.data.map(item =&gt; item.value)}}</code> or populate it with sample values <code>{{[1,2,3]}}</code></p> <p>### Option labels</p> <p>Option labels are labels for different options in the list of the dropdown. Refer your query data with dynamic variables <code>{{queries.datasource.data.map(item =&gt; item.label)}}</code> or populate it with sample values <code>{{[\"one\", \"two\", \"three\"]}}</code></p>"},{"location":"insight2/widgets/dropdown/#options-loading-state","title":"Options loading state","text":"<p>Show a loading state in the widget using this property. It is off by default, toggle on to enable it. You can also programmatically set the values <code>{{true}}</code> or <code>{{false}}</code> by clicking on the <code>Fx</code> button.</p>"},{"location":"insight2/widgets/dropdown/#validation","title":"Validation","text":""},{"location":"insight2/widgets/dropdown/#custom-validation","title":"Custom validation","text":"<p>Add a validation for the options in dropdown widget using the ternary operator.</p>"},{"location":"insight2/widgets/dropdown/#layout","title":"Layout","text":""},{"location":"insight2/widgets/dropdown/#show-on-desktop","title":"Show on desktop","text":"<p>Toggle on or off to display the widget in desktop view. You can programmatically determing the value by clicking on <code>Fx</code> to set the value <code>{{true}}</code> or <code>{{false}}</code>.</p>"},{"location":"insight2/widgets/dropdown/#show-on-mobile","title":"Show on mobile","text":"<p>Toggle on or off to display the widget in mobile view. You can programmatically determing the value by clicking on <code>Fx</code> to set the value <code>{{true}}</code> or <code>{{false}}</code>.</p>"},{"location":"insight2/widgets/dropdown/#styles","title":"Styles","text":""},{"location":"insight2/widgets/dropdown/#border-radius","title":"Border Radius","text":"<p>Use this property to modify the border radius of the dropdown. The field expects only numerical value from <code>1</code> to <code>100</code>, default is <code>0</code>.</p>"},{"location":"insight2/widgets/dropdown/#visibility","title":"Visibility","text":"<p>This is to control the visibility of the widget. If <code>{{false}}</code> the widget will not visible after the app is deployed. It can only have boolean values i.e. either <code>{{true}}</code> or <code>{{false}}</code>. By default, it's set to <code>{{true}}</code>.</p>"},{"location":"insight2/widgets/dropdown/#selected-text-color","title":"Selected text color","text":"<p>Change the text color of the selected option in the widget by providing the <code>HEX color code</code> or choosing the the color from color picker.</p>"},{"location":"insight2/widgets/dropdown/#disable","title":"Disable","text":"<p>This property only accepts boolean values. If set to <code>{{true}}</code>, the widget will be locked and becomes non-functional. By default, its value is set to <code>{{false}}</code>.</p> <p>:::info Any property having <code>Fx</code> button next to its field can be programmatically configured. :::</p>"},{"location":"insight2/widgets/file-picker/","title":"Filepicker","text":"<p>Filepicker widget allows the user to drag and drop files or upload files by browsing the filesystem and selecting one or more files in a directory.</p> <p></p> <p>:::info  File types must be a valid MIME type according to input element specification or a valid file extension.</p> <p>To accept any/all file type(s), set <code>Accept file types</code> to an empty value. :::</p> <p></p> <p>:::tip MIME type determination is not reliable across platforms. CSV files, for example, are reported as text/plain under macOS but as application/vnd.ms-excel under Windows. :::</p>"},{"location":"insight2/widgets/file-picker/#events","title":"Events","text":""},{"location":"insight2/widgets/file-picker/#event-on-file-selected","title":"Event: On file selected","text":"<p>On file selected event can be triggered when one or more files are selected.</p> <p>:::info Check Action Reference docs to get the detailed information about all the Actions. :::</p>"},{"location":"insight2/widgets/file-picker/#properties","title":"Properties","text":""},{"location":"insight2/widgets/file-picker/#use-drop-zone","title":"Use Drop zone","text":"<p>Creates a drag &amp; drop zone. Files can be dragged and dropped to the \"drag &amp; drop\" zone.</p>"},{"location":"insight2/widgets/file-picker/#use-file-picker","title":"Use File Picker","text":"<p>On clicking it invokes the default OS file prompt.</p>"},{"location":"insight2/widgets/file-picker/#pick-mulitple-files","title":"Pick mulitple files","text":"<p>Allows drag and drop (or selection from the file dialog) of multiple files. <code>Pick multiple files</code> is disabled by default.</p>"},{"location":"insight2/widgets/file-picker/#max-file-count","title":"Max file count","text":"<p>The maximum accepted number of files The default value is <code>2</code>.</p>"},{"location":"insight2/widgets/file-picker/#accept-file-types","title":"Accept file types","text":"<p>By providing types, you can make the dropzone accept specific file types and reject the others.</p>"},{"location":"insight2/widgets/file-picker/#max-size-limit","title":"Max size limit","text":"<p>Maximum file size (in bytes).</p>"},{"location":"insight2/widgets/file-picker/#min-size-limit","title":"Min size limit","text":"<p>Minimum file size (in bytes).</p> <p>:::tip Files can be accepted or rejected based on the file types, maximum file count, maximum file size (in bytes) and minimum file size (in bytes). If <code>Pick mulitple files</code> is set to false and additional files are dropped, all files besides the first will be rejected. Any file that does not have a size in the range of <code>Max size limit</code> and <code>Min size limit</code> will be rejected. :::</p>"},{"location":"insight2/widgets/file-picker/#options","title":"Options","text":""},{"location":"insight2/widgets/file-picker/#parse-content","title":"Parse content","text":"<p>Parse the selected files, supports CSV files.</p>"},{"location":"insight2/widgets/file-picker/#file-type","title":"File type","text":"<p>If Parse content is enabled, options to auto-detect files and parse content or parse selected file types.</p> <p>:::info If the Parse content option is toggled on, it only parses the next file that is selected, not the already selected one. :::</p>"},{"location":"insight2/widgets/file-picker/#layout","title":"Layout","text":""},{"location":"insight2/widgets/file-picker/#show-on-desktop","title":"Show on desktop","text":"<p>Toggle on or off to display the widget in desktop view. You can programmatically determing the value by clicking on <code>Fx</code> to set the value <code>{{true}}</code> or <code>{{false}}</code>.</p>"},{"location":"insight2/widgets/file-picker/#show-on-mobile","title":"Show on mobile","text":"<p>Toggle on or off to display the widget in mobile view. You can programmatically determing the value by clicking on <code>Fx</code> to set the value <code>{{true}}</code> or <code>{{false}}</code>.</p>"},{"location":"insight2/widgets/file-picker/#styles","title":"Styles","text":""},{"location":"insight2/widgets/file-picker/#visibility","title":"Visibility","text":"<p>This is to control the visibility of the widget. If <code>{{false}}</code> the widget will not visible after the app is deployed. It can only have boolean values i.e. either <code>{{true}}</code> or <code>{{false}}</code>. By default, it's set to <code>{{true}}</code>.</p>"},{"location":"insight2/widgets/file-picker/#disable","title":"Disable","text":"<p>This property only accepts boolean values. If set to <code>{{true}}</code>, the widget will be locked and becomes non-functional. By default, its value is set to <code>{{false}}</code>.</p>"},{"location":"insight2/widgets/file-picker/#border-radius","title":"Border Radius","text":"<p>Use this property to modify the border radius of the filepicker widget. The field expects only numerical value from <code>1</code> to <code>100</code>, default is <code>0</code>.</p> <p>:::info Any property having <code>Fx</code> button next to its field can be programmatically configured. :::</p>"},{"location":"insight2/widgets/iframe/","title":"Iframe","text":"<p>Iframe widget is used to embed another HTML page into the current one and display iframes in your app.</p> <p></p>"},{"location":"insight2/widgets/iframe/#properties","title":"Properties","text":""},{"location":"insight2/widgets/iframe/#url","title":"URL","text":"<p>Sets the URL of the page to embed.</p>"},{"location":"insight2/widgets/iframe/#layout","title":"Layout","text":""},{"location":"insight2/widgets/iframe/#show-on-desktop","title":"Show on desktop","text":"<p>Toggle on or off to display the widget in desktop view. You can programmatically determing the value by clicking on <code>Fx</code> to set the value <code>{{true}}</code> or <code>{{false}}</code>.</p>"},{"location":"insight2/widgets/iframe/#show-on-mobile","title":"Show on mobile","text":"<p>Toggle on or off to display the widget in mobile view. You can programmatically determing the value by clicking on <code>Fx</code> to set the value <code>{{true}}</code> or <code>{{false}}</code>.</p>"},{"location":"insight2/widgets/iframe/#styles","title":"Styles","text":""},{"location":"insight2/widgets/iframe/#visibility","title":"Visibility","text":"<p>Toggle on or off to control the visibility of the widget. You can programmatically change its value by clicking on the <code>Fx</code> button next to it. If <code>{{false}}</code> the widget will not be visible after the app is deployed. By default, it's set to <code>{{true}}</code>.</p>"},{"location":"insight2/widgets/iframe/#disable","title":"Disable","text":"<p>This is <code>off</code> by default, toggle <code>on</code> the switch to lock the widget and make it non-functional. You can also programmatically set the value by clicking on the <code>Fx</code> button next to it. If set to <code>{{true}}</code>, the widget will be locked and becomes non-functional. By default, its value is set to <code>{{false}}</code>.</p> <p>Any property having <code>Fx</code> button next to its field can be programmatically configured.</p>"},{"location":"insight2/widgets/image/","title":"Image","text":"<p>Image widget is used to display images in your app.</p> <p></p>"},{"location":"insight2/widgets/image/#events","title":"Events","text":""},{"location":"insight2/widgets/image/#on-click","title":"On click","text":"<p>On click event is triggered when an image is clicked.</p> <p>Check Action Reference docs to get the detailed information about all the Actions.</p>"},{"location":"insight2/widgets/image/#properties","title":"Properties","text":""},{"location":"insight2/widgets/image/#url","title":"URL","text":"<p>Enter the URL of the image to display it on the widget.</p>"},{"location":"insight2/widgets/image/#zoom-buttons","title":"Zoom buttons","text":"<p>Toggle this to enable zoom options inside image.</p>"},{"location":"insight2/widgets/image/#alternative-text","title":"Alternative text","text":"<p>Used for alt text of images.</p>"},{"location":"insight2/widgets/image/#layout","title":"Layout","text":""},{"location":"insight2/widgets/image/#show-on-desktop","title":"Show on desktop","text":"<p>Toggle on or off to display the widget in desktop view. You can programmatically determing the value by clicking on <code>Fx</code> to set the value <code>{{true}}</code> or <code>{{false}}</code>.</p>"},{"location":"insight2/widgets/image/#show-on-mobile","title":"Show on mobile","text":"<p>Toggle on or off to display the widget in mobile view. You can programmatically determing the value by clicking on <code>Fx</code> to set the value <code>{{true}}</code> or <code>{{false}}</code>.</p>"},{"location":"insight2/widgets/image/#styles","title":"Styles","text":""},{"location":"insight2/widgets/image/#border-type","title":"Border type","text":"<p>Choose a border type for the image from available options: - None - Rounded - Circle - Thumbnail</p>"},{"location":"insight2/widgets/image/#image-fit","title":"Image fit","text":"<p>Choose a image fit - similar to object fit for the image from available options: - fill - cover - contain - scale-down</p>"},{"location":"insight2/widgets/image/#background-color","title":"Background color","text":"<p>Add a background color to widget by providing the <code>HEX color code</code> or choosing the color of your choice from the color-picker.</p>"},{"location":"insight2/widgets/image/#padding","title":"Padding","text":"<p>Adds padding between the image and widget border. It accepts any numerical value from <code>0</code> to <code>100</code>.</p>"},{"location":"insight2/widgets/image/#visibility","title":"Visibility","text":"<p>Toggle on or off to control the visibility of the widget. You can programmatically change its value by clicking on the <code>Fx</code> button next to it. If <code>{{false}}</code> the widget will not be visible after the app is deployed. By default, it's set to <code>{{true}}</code>.</p>"},{"location":"insight2/widgets/image/#disable","title":"Disable","text":"<p>This is <code>off</code> by default, toggle <code>on</code> the switch to lock the widget and make it non-functional. You can also programmatically set the value by clicking on the <code>Fx</code> button next to it. If set to <code>{{true}}</code>, the widget will be locked and becomes non-functional. By default, its value is set to <code>{{false}}</code>.</p> <p>Any property having <code>Fx</code> button next to its field can be programmatically configured.</p>"},{"location":"insight2/widgets/kanban/","title":"Kanban","text":"<p>Kanban widget allows you to visually organize and prioritize your tasks with a transparent workflow. You can set the number of columns to display, enable/disable the add cards button, and bind data to the cards.</p> <p></p>","tags":["Insight\u00b2","Widgets","Kanban"]},{"location":"insight2/widgets/kanban/#events","title":"Events","text":"<p>To add an event, click on the widget handle to open the widget properties on the right sidebar. Go to the Events section and click on Add handler.</p> <ul> <li>Card added</li> <li>Card removed</li> <li>Card moved</li> <li>Card selected</li> <li>Card updated</li> </ul> <p>Just like any other event on Insight, you can set multiple handlers for any of the above mentioned events.</p> <p></p>","tags":["Insight\u00b2","Widgets","Kanban"]},{"location":"insight2/widgets/kanban/#properties","title":"Properties","text":"<p> caution Please keep in mind that you need to provide an <code>id</code> for each card in the <code>Card data</code> field  and this <code>id</code> must be of type string. </p> <p></p> Properties description Expected value Columns Enter the columns data - <code>id</code> and <code>title</code> in the form of array of objects or from a query that returns an array of objects. <code>{{[{ \"id\": \"1\", \"title\": \"to do\" },{ \"id\": \"2\", \"title\": \"in progress\" },{ \"id\": \"2\", \"title\": \"Completed\" }]}}</code> or <code>{{queries.xyz.data}}</code> Card data Enter the cards data - <code>id</code>, <code>title</code> and <code>columnId</code> in the form of array of objects or from a query that returns an array of objects. <code>{{[{ id: \"01\", title: \"one\", columnId: \"1\" },{ id: \"02\", title: \"two\", columnId: \"1\" },{ id: \"03\", title: \"three\", columnId: \"2\" }]}}</code> or <code>{{queries.abc.data}}</code> Enable Add Card This property allows you to show or hide the <code>Add Cards</code> button at the bottom of every column. By deafult its enabled, you can programmatically set <code>{{true}}</code> or <code>{{false}}</code> enable/disable button by clicking on the <code>Fx</code> next to it","tags":["Insight\u00b2","Widgets","Kanban"]},{"location":"insight2/widgets/kanban/#general","title":"General","text":"<p>Tooltip: Set a tooltip text to specify the information about the data/kanban when the user moves the mouse pointer over the widget.</p>","tags":["Insight\u00b2","Widgets","Kanban"]},{"location":"insight2/widgets/kanban/#layout","title":"Layout","text":"Layout description Expected value Show on desktop Toggle on or off to display the widget in desktop view. You can programmatically set the value by clicking on <code>Fx</code> to set the value <code>{{true}}</code> or <code>{{false}}</code> Show on mobile Toggle on or off to display the widget in mobile view. You can programmatically set the value by clicking on <code>Fx</code> to set the value <code>{{true}}</code> or <code>{{false}}</code>","tags":["Insight\u00b2","Widgets","Kanban"]},{"location":"insight2/widgets/kanban/#styles","title":"Styles","text":"Style Description Disable If disabled or set to <code>{{false}}</code> the widget will be locked and becomes non-functional. By default, its disabled i.e. its value is set to <code>{{true}}</code> . Visibility This is to control the visibility of the widget. If <code>{{false}}</code>/disabled the widget will not visible after the app is deployed. By default, it's enabled (set to <code>{{true}}</code>). Width This property sets the width of the column. Accent color You can change the accent color of the column title by entering the Hex color code or choosing a color of your choice from the color picker.","tags":["Insight\u00b2","Widgets","Kanban"]},{"location":"insight2/widgets/kanban/#exposed-variables","title":"Exposed variables","text":"Variable Description columns The <code>columns</code> variable is an array of objects that includes the columns data in the respective objects. Since the columns variable is an array you'll need to specify the index of the object in the array to get the data within that object. Each object within a column has two keys - <code>id</code> and <code>title</code> and an array <code>cards</code> which is again an array of objects. Example: If you want to get the title of second card then you'll use <code>{{components.kanbanboard1.columns[1].title}}</code> - here we have specified the array index as <code>[1]</code> and then key which is the <code>title</code>. Similary you can get the card details using <code>{{components.kanbanboard1.columns[0].cards[1].title}}</code> lastAddedCard The variable <code>lastAddedCard</code> holds the properties of the card that has been added lastly. It holds the following data - <code>id</code>, <code>title</code>, and <code>columnId</code> of the last addded card. You can get the values using <code>{{components.kanbanboard1.lastAddedCard.title}}</code> lastRemovedCard The variable <code>lastRemovedCard</code> holds the properties of the card that has been recently deleted from the kanban. It holds the following data - <code>id</code>, <code>title</code>, and <code>columnId</code> of the recently deleted card. You can get the values using <code>{{components.kanbanboard1.lastRemovedCard.title}}</code> lastCardMovement The variable <code>lastCardMovement</code> holds the properties of the card that has been recently moved from its original position. It holds the following data - <code>originColumnId</code>, <code>destinationColumnId</code>, <code>originCardIndex</code>, <code>destinationCardIndex</code> and an object <code>cardDetails</code> which includes <code>title</code>. You can get the values using <code>{{components.kanbanboard1.lastCardMovement.cardDetails.title}}</code> or <code>{{components.kanbanboard1.lastCardMovement.destinationCardIndex}}</code> lastUpdatedCard The variable <code>lastUpdatedCard</code> holds <code>id</code>, <code>title</code>, and <code>columnId</code> of the latest modified card. You can get the values using <code>{{components.kanbanboard1.lastUpdatedCard.columnId}}</code> selectedCard The variable <code>selectedCard</code> holds <code>id</code>, <code>title</code>, <code>columnId</code>, and <code>description</code> of the selected card in the kanban. You can get the values using <code>{{components.kanbanboard1.selectedCard.description}}</code>","tags":["Insight\u00b2","Widgets","Kanban"]},{"location":"insight2/widgets/listview/","title":"List view","text":"<p>List view widget allows to create a list of repeatable rows of data. Just like container widget, you can nest other widgets inside of it and control how many times they repeat.</p> <p></p>","tags":["Insight\u00b2","Widgets"]},{"location":"insight2/widgets/listview/#event","title":"Event","text":"","tags":["Insight\u00b2","Widgets"]},{"location":"insight2/widgets/listview/#row-clicked","title":"Row clicked","text":"<p>To add an event to a button, click on the widget handle to open the widget properties on the right sidebar. Go to the Events section and click on Add handler.</p> <p>Row clicked event is triggered when the button is clicked. Just like any other event on Insight, you can set multiple handlers for row clicked event.</p> <p>Check Action Reference docs to get the detailed information about all the Actions.</p>","tags":["Insight\u00b2","Widgets"]},{"location":"insight2/widgets/listview/#properties","title":"Properties","text":"Properties description Expected value List data Enter the data that you want to diplay into the widget. Data in the form of array of objects or data from a query that returns an array of objects. <code>{{ [ {id: 0, name: ABC, email: abc@bla.com}, {id: 1, name: XYZ, email: xyz@bla.com} ] }}</code> or <code>{{queries.xyz.data}}</code> Row height Enter a numerical value to set the row height accordingly. Any number between <code>1</code> to <code>100</code> Show bottom border This property allows you to show or hide the row botton border. By deafult its <code>{{true}}</code>, set <code>{{false}}</code> to hide the border","tags":["Insight\u00b2","Widgets"]},{"location":"insight2/widgets/listview/#layout","title":"Layout","text":"Layout description Expected value Show on desktop Toggle on or off to display desktop view. You can programmatically determing the value by clicking on <code>Fx</code> to set the value <code>{{true}}</code> or <code>{{false}}</code> Show on mobile Toggle on or off to display mobile view. You can programmatically determing the value by clicking on <code>Fx</code> to set the value <code>{{true}}</code> or <code>{{false}}</code>","tags":["Insight\u00b2","Widgets"]},{"location":"insight2/widgets/listview/#styles","title":"Styles","text":"Style Description backgroundColor You can change the background color of the widget by entering the Hex color code or choosing a color of your choice from the color picker. Visibility This is to control the visibility of the widget. If <code>{{false}}</code> the widget will not visible after the app is deployed. It can only have boolean values i.e. either <code>{{true}}</code> or <code>{{false}}</code>. By default, it's set to <code>{{true}}</code>. Disable This property only accepts boolean values. If set to <code>{{true}}</code>, the widget will be locked and becomes non-functional. By default, its value is set to <code>{{false}}</code>. <p>Any property having <code>Fx</code> button next to its field can be programmatically configured.</p>","tags":["Insight\u00b2","Widgets"]},{"location":"insight2/widgets/listview/#example-displaying-data-in-the-list-view","title":"Example: Displaying data in the list view","text":"<ul> <li>Let's start by creating a new app and then dragging the List view widget onto the canvas.</li> </ul> <ul> <li>Now lets create a query and select REST API from the datasource dropdown. Chose the <code>GET</code> method and enter the API endpoint - <code>https://reqres.in/api/users?page=1</code>. Save this query and fire it. Inspect the query results from the left sidebar, you'll see that it resulted the <code>data</code> object having array of objects.</li> </ul> <ul> <li>Now lets edit the <code>List data</code> property of list view widget for displaying the query data. We will use JS to get the data from the query - <code>{{queries.restapi1.data.data}}</code>. Here the last <code>data</code> is data object that includes array of objects, the first <code>data</code> is the data resulted from the <code>restapi1</code> query. This will automatically create the rows in the widget using the data.</li> </ul> <ul> <li>Finally, we will need to nest widgets into the first row of list view widget and the widget will automatically create the subsequent instances. The subsequent rows will appear the same way you'll display the data in the first row.</li> </ul> <p>Use <code>{{listItem.key}}</code> to display data on the nested widgets. Example: For displaying the images we used <code>{{listItem.avatar}}</code> where avatar is one of the key in the objects from the query result.</p>","tags":["Insight\u00b2","Widgets"]},{"location":"insight2/widgets/map/","title":"Map","text":"<p>The map widget can be used to pick or select locations on the Google map with the location's coordinates.</p> <p></p>"},{"location":"insight2/widgets/map/#exposed-variables","title":"Exposed variables","text":"<p>Exposed variables can be used to get data from the widget.</p> variable description bounds Viewport area of the map center It contains the locations' coordinates at the center of the bounding area markers A marker identifies a location on the map. <code>markers</code> contains the list of markers on the map selectedMarker Object with the marker selected by the user"},{"location":"insight2/widgets/map/#events","title":"Events","text":"events description On bounds change Triggered when the bounding area is changed. This event is triggered after <code>bounds</code> variable is updated On create marker This event is triggered when a new marker is created on the map On marker click This event is triggered when any of the markers in the map is clicked <p>:::info Check Action Reference docs to get the detailed information about all the Actions. :::</p>"},{"location":"insight2/widgets/map/#properties","title":"Properties","text":"properties description Expected value Initial location It is the default location's coordinates that the map should focus on. An object containing the latitude and langitude as key value pairs. ex: <code>{{ {\"lat\": 40.7128, \"lng\": -73.935242} }}</code> Default Markers List of markers that should be shown on the map An array of objects containing the coordinates. ex: <code>{{ [{\"lat\": 40.7128, \"lng\": -73.935242}] }}</code> Add new markers This property should be enabled to add new markers to the map on click. <code>On</code> by default, toggle <code>off</code> to disable adding new markers on the map. Can be programmatically configured by clicking on <code>Fx</code>, accepts values <code>{{true}}</code> or <code>{{false}}</code> Search for places It can be used to show or hide auto-complete search box. <code>On</code> by default, toggle <code>off</code> to disable search on the map. Can be programmatically configured by clicking on <code>Fx</code>, accepts values <code>{{true}}</code> or <code>{{false}}</code>"},{"location":"insight2/widgets/map/#layout","title":"Layout","text":""},{"location":"insight2/widgets/map/#show-on-desktop","title":"Show on desktop","text":"<p>Toggle on or off to display the widget in desktop view. You can programmatically determing the value by clicking on <code>Fx</code> to set the value <code>{{true}}</code> or <code>{{false}}</code>.</p>"},{"location":"insight2/widgets/map/#show-on-mobile","title":"Show on mobile","text":"<p>Toggle on or off to display the widget in mobile view. You can programmatically determing the value by clicking on <code>Fx</code> to set the value <code>{{true}}</code> or <code>{{false}}</code>.</p>"},{"location":"insight2/widgets/map/#styles","title":"Styles","text":""},{"location":"insight2/widgets/map/#visibility","title":"Visibility","text":"<p>Toggle on or off to control the visibility of the widget. You can programmatically change its value by clicking on the <code>Fx</code> button next to it. If <code>{{false}}</code> the widget will not be visible after the app is deployed. By default, it's set to <code>{{true}}</code>.</p>"},{"location":"insight2/widgets/map/#disable","title":"Disable","text":"<p>This is <code>off</code> by default, toggle <code>on</code> the switch to lock the widget and make it non-functional. You can also programmatically set the value by clicking on the <code>Fx</code> button next to it. If set to <code>{{true}}</code>, the widget will be locked and becomes non-functional. By default, its value is set to <code>{{false}}</code>.</p> <p>:::info Any property having <code>Fx</code> button next to its field can be programmatically configured. :::</p>"},{"location":"insight2/widgets/modal/","title":"Modal","text":"<p>Modal widget renders in front of a backdrop, and it blocks interaction with the rest of the application until the modal is closed. It can be used to add dialog boxes to your app for lightboxes, user notifications, forms, etc.</p> <p></p>"},{"location":"insight2/widgets/modal/#add-widgets-to-modal","title":"Add widgets to Modal","text":"<p>To add widgets to the Modals please refer to Tutorial - Adding widgets to a modal</p>"},{"location":"insight2/widgets/modal/#properties","title":"Properties","text":""},{"location":"insight2/widgets/modal/#title","title":"Title","text":"<p>Title that should be shown on the header of the modal.</p>"},{"location":"insight2/widgets/modal/#modal-size","title":"Modal size","text":"<p>Size of the modal. Options are <code>medium</code>, <code>small</code> and <code>large</code>. The default is <code>small</code>. You can also programmatically configure the value by clicking on the <code>Fx</code> and set the value to <code>sm</code>, <code>md</code> or <code>lg</code>.</p>"},{"location":"insight2/widgets/modal/#layout","title":"Layout","text":""},{"location":"insight2/widgets/modal/#show-on-desktop","title":"Show on desktop","text":"<p>Toggle on or off to display the widget in desktop view. You can programmatically determing the value by clicking on <code>Fx</code> to set the value <code>{{true}}</code> or <code>{{false}}</code>.</p>"},{"location":"insight2/widgets/modal/#show-on-mobile","title":"Show on mobile","text":"<p>Toggle on or off to display the widget in mobile view. You can programmatically determing the value by clicking on <code>Fx</code> to set the value <code>{{true}}</code> or <code>{{false}}</code>.</p>"},{"location":"insight2/widgets/modal/#styles","title":"Styles","text":""},{"location":"insight2/widgets/modal/#disable","title":"Disable","text":"<p>This is <code>off</code> by default, toggle <code>on</code> the switch to lock the widget and make it non-functional. You can also programmatically set the value by clicking on the <code>Fx</code> button next to it. If set to <code>{{true}}</code>, the widget will be locked and becomes non-functional. By default, its value is set to <code>{{false}}</code>.</p> <p>Any property having <code>Fx</code> button next to its field can be programmatically configured.</p>"},{"location":"insight2/widgets/multiselect/","title":"Multiselect","text":"<p>Multiselect widget can be used to collect multiple user inputs from a list of options.</p> <p></p>"},{"location":"insight2/widgets/multiselect/#event","title":"Event","text":""},{"location":"insight2/widgets/multiselect/#on-select","title":"On select","text":"<p>On select event is triggered when an option is selected.</p> <p>:::info Check Action Reference docs to get the detailed information about all the Actions. :::</p>"},{"location":"insight2/widgets/multiselect/#properties","title":"Properties","text":""},{"location":"insight2/widgets/multiselect/#label","title":"Label","text":"<p>The text is to be used as the label for the multiselect widget.</p>"},{"location":"insight2/widgets/multiselect/#default-value","title":"Default value","text":"<p>The value of the default option. This should always be an array.</p>"},{"location":"insight2/widgets/multiselect/#option-values","title":"Option values","text":"<p>Values for different items/options in the list of the multiselect.</p>"},{"location":"insight2/widgets/multiselect/#option-labels","title":"Option labels","text":"<p>Labels for different items/options in the list of the multiselect.</p>"},{"location":"insight2/widgets/multiselect/#layout","title":"Layout","text":""},{"location":"insight2/widgets/multiselect/#show-on-desktop","title":"Show on desktop","text":"<p>Toggle on or off to display the widget in desktop view. You can programmatically determing the value by clicking on <code>Fx</code> to set the value <code>{{true}}</code> or <code>{{false}}</code>.</p>"},{"location":"insight2/widgets/multiselect/#show-on-mobile","title":"Show on mobile","text":"<p>Toggle on or off to display the widget in mobile view. You can programmatically determing the value by clicking on <code>Fx</code> to set the value <code>{{true}}</code> or <code>{{false}}</code>.</p>"},{"location":"insight2/widgets/multiselect/#styles","title":"Styles","text":""},{"location":"insight2/widgets/multiselect/#border-radius","title":"Border radius","text":"<p>Add a border radius to the multiselect using this property. It accepts any numerical value from <code>0</code> to <code>100</code>.</p>"},{"location":"insight2/widgets/multiselect/#visibility","title":"Visibility","text":"<p>Toggle on or off to control the visibility of the widget. You can programmatically change its value by clicking on the <code>Fx</code> button next to it. If <code>{{false}}</code> the widget will not be visible after the app is deployed. By default, it's set to <code>{{true}}</code>.</p>"},{"location":"insight2/widgets/multiselect/#disable","title":"Disable","text":"<p>This is <code>off</code> by default, toggle <code>on</code> the switch to lock the widget and make it non-functional. You can also programmatically set the value by clicking on the <code>Fx</code> button next to it. If set to <code>{{true}}</code>, the widget will be locked and becomes non-functional. By default, its value is set to <code>{{false}}</code>.</p> <p>:::info Any property having <code>Fx</code> button next to its field can be programmatically configured. :::</p>"},{"location":"insight2/widgets/number-input/","title":"Number Input","text":"<p>Number Input widget lets users enter and change numbers.</p> <p></p> <p>:::tip Numbers can be changed by using the arrow keys. :::</p>"},{"location":"insight2/widgets/number-input/#properties","title":"Properties","text":""},{"location":"insight2/widgets/number-input/#default-value","title":"Default value","text":"<p>A predefined value that can be fetched from the number input widget if no changes are made in widget.</p>"},{"location":"insight2/widgets/number-input/#placeholder","title":"Placeholder","text":"<p>It specifies a hint that describes the expected value. This field accepts any numerical value.</p>"},{"location":"insight2/widgets/number-input/#maximum-value","title":"Maximum value","text":"<p>It specifies the maximum value the number input can go to. This field accepts any numerical value.</p>"},{"location":"insight2/widgets/number-input/#minimum-value","title":"Minimum value","text":"<p>It specifies the minimum value the number input can go to. This field accepts any numerical value.</p>"},{"location":"insight2/widgets/number-input/#layout","title":"Layout","text":""},{"location":"insight2/widgets/number-input/#show-on-desktop","title":"Show on desktop","text":"<p>Toggle on or off to display the widget in desktop view. You can programmatically determing the value by clicking on <code>Fx</code> to set the value <code>{{true}}</code> or <code>{{false}}</code>.</p>"},{"location":"insight2/widgets/number-input/#show-on-mobile","title":"Show on mobile","text":"<p>Toggle on or off to display the widget in mobile view. You can programmatically determing the value by clicking on <code>Fx</code> to set the value <code>{{true}}</code> or <code>{{false}}</code>.</p>"},{"location":"insight2/widgets/number-input/#styles","title":"Styles","text":""},{"location":"insight2/widgets/number-input/#border-radius","title":"Border radius","text":"<p>Add a border radius to the number input widget using this property. It accepts any numerical value from <code>0</code> to <code>100</code>.</p>"},{"location":"insight2/widgets/number-input/#visibility","title":"Visibility","text":"<p>Toggle on or off to control the visibility of the widget. You can programmatically change its value by clicking on the <code>Fx</code> button next to it. If <code>{{false}}</code> the widget will not be visible after the app is deployed. By default, it's set to <code>{{true}}</code>.</p>"},{"location":"insight2/widgets/number-input/#disable","title":"Disable","text":"<p>This is <code>off</code> by default, toggle <code>on</code> the switch to lock the widget and make it non-functional. You can also programmatically set the value by clicking on the <code>Fx</code> button next to it. If set to <code>{{true}}</code>, the widget will be locked and becomes non-functional. By default, its value is set to <code>{{false}}</code>.</p> <p>:::info Any property having <code>Fx</code> button next to its field can be programmatically configured. :::</p>"},{"location":"insight2/widgets/password-input/","title":"Password Input","text":"<p>A Password Input widget provides a way for the users to securely enter a password. The Password Input is a one-line plain text editor in which the text is obscured so that it cannot be read, by replacing each character with an asterisk (\"*\") symbol.</p> <p></p>"},{"location":"insight2/widgets/password-input/#properties","title":"Properties","text":""},{"location":"insight2/widgets/password-input/#placeholder","title":"Placeholder","text":"<p>It specifies a hint that describes the expected value.</p>"},{"location":"insight2/widgets/password-input/#validation","title":"Validation","text":""},{"location":"insight2/widgets/password-input/#regex","title":"Regex","text":"<p>Use this field to enter a Regular Expression that will validate the password constraints. |</p>"},{"location":"insight2/widgets/password-input/#min-length","title":"Min length","text":"<p>Enter the number for a minimum length of password allowed.</p>"},{"location":"insight2/widgets/password-input/#max-length","title":"Max length","text":"<p>Enter the number for the maximum length of password allowed.</p>"},{"location":"insight2/widgets/password-input/#custom-validation","title":"Custom validation","text":"<p>If the condition is true, the validation passes, otherwise return a string that should be displayed as the error message. For example: <code>{{components.passwordInput1.value === 'something' ? true: 'value should be something'}}</code></p>"},{"location":"insight2/widgets/password-input/#layout","title":"Layout","text":""},{"location":"insight2/widgets/password-input/#show-on-desktop","title":"Show on desktop","text":"<p>Toggle on or off to display the widget in desktop view. You can programmatically determing the value by clicking on <code>Fx</code> to set the value <code>{{true}}</code> or <code>{{false}}</code>.</p>"},{"location":"insight2/widgets/password-input/#show-on-mobile","title":"Show on mobile","text":"<p>Toggle on or off to display the widget in mobile view. You can programmatically determing the value by clicking on <code>Fx</code> to set the value <code>{{true}}</code> or <code>{{false}}</code>.</p>"},{"location":"insight2/widgets/password-input/#styles","title":"Styles","text":""},{"location":"insight2/widgets/password-input/#border-radius","title":"Border radius","text":"<p>Add a border radius to the number input widget using this property. It accepts any numerical value from <code>0</code> to <code>100</code>.</p>"},{"location":"insight2/widgets/password-input/#visibility","title":"Visibility","text":"<p>Toggle on or off to control the visibility of the widget. You can programmatically change its value by clicking on the <code>Fx</code> button next to it. If <code>{{false}}</code> the widget will not be visible after the app is deployed. By default, it's set to <code>{{true}}</code>.</p>"},{"location":"insight2/widgets/password-input/#disable","title":"Disable","text":"<p>This is <code>off</code> by default, toggle <code>on</code> the switch to lock the widget and make it non-functional. You can also programmatically set the value by clicking on the <code>Fx</code> button next to it. If set to <code>{{true}}</code>, the widget will be locked and becomes non-functional. By default, its value is set to <code>{{false}}</code>.</p> <p>:::info Any property having <code>Fx</code> button next to its field can be programmatically configured. :::</p>"},{"location":"insight2/widgets/pdf/","title":"PDF","text":"<p>PDF widget can be used to embed the PDF file either by URL or as a Base64 encoded.</p>"},{"location":"insight2/widgets/pdf/#properties","title":"Properties","text":""},{"location":"insight2/widgets/pdf/#file-url","title":"File URL","text":"<p>The URL of the PDF file on the web. <code>data:application/pdf;base64,</code> format is supported and the input needs to be prefixed with <code>data:application/pdf;base64,</code></p>"},{"location":"insight2/widgets/pdf/#scale-page-to-width","title":"Scale page to width","text":"<p>It can be toggled to adjust the PDF content to fit the width or height of the component</p>"},{"location":"insight2/widgets/pdf/#show-page-controls","title":"Show page controls","text":"<p>By default, page number, previous &amp; next button is displayed while hovering the PDF file. It can be toggled on or off.</p>"},{"location":"insight2/widgets/pdf/#layout","title":"Layout","text":"Layout description Expected value Show on desktop Toggle on or off to display desktop view. You can programmatically determining the value by clicking on <code>Fx</code> to set the value <code>{{true}}</code> or <code>{{false}}</code> Show on mobile Toggle on or off to display mobile view. You can programmatically determining the value by clicking on <code>Fx</code> to set the value <code>{{true}}</code> or <code>{{false}}</code>"},{"location":"insight2/widgets/pdf/#styles","title":"Styles","text":"Style Description Visibility Toggle on or off to control the visibility of the widget. You can programmatically change its value by clicking on the <code>Fx</code> button next to it. If <code>{{false}}</code> the widget will not visible after the app is deployed. By default, it's set to <code>{{true}}</code>. <p>:::info Any property having <code>Fx</code> button next to its field can be programmatically configured. :::</p>"},{"location":"insight2/widgets/qr-scanner/","title":"QR Scanner","text":"<p>Scan QR codes using device camera and hold the data they carry.</p> <p></p>","tags":["Insight\u00b2","Widgets","QR Scanner"]},{"location":"insight2/widgets/qr-scanner/#known-issue","title":"Known issue:","text":"<p>You might have to stick to the Safari browser in IOS as camera access is restricted for third-party browsers.</p>","tags":["Insight\u00b2","Widgets","QR Scanner"]},{"location":"insight2/widgets/qr-scanner/#exposed-variables","title":"Exposed variables","text":"","tags":["Insight\u00b2","Widgets","QR Scanner"]},{"location":"insight2/widgets/qr-scanner/#lastdetectedvalue","title":"lastDetectedValue","text":"<p>This variable holds the data contained in the last QR code scanned by the widget. To fetch the data use <code>{{components.qrscanner1.lastDetectedValue}}</code>.</p>","tags":["Insight\u00b2","Widgets","QR Scanner"]},{"location":"insight2/widgets/qr-scanner/#events","title":"Events","text":"","tags":["Insight\u00b2","Widgets","QR Scanner"]},{"location":"insight2/widgets/qr-scanner/#ondetect","title":"onDetect","text":"<p>This event is fired whenever the widget successfully scans a QR code.</p> <p> Check Action Reference docs to get the detailed information about all the Actions.</p>","tags":["Insight\u00b2","Widgets","QR Scanner"]},{"location":"insight2/widgets/qr-scanner/#debugging-tip","title":"Debugging tip","text":"<p>Browser camera APIs restrict this widget to only work in either <code>localhost</code> or <code>https</code>.</p> <p>So if you're testing it out, be sure to either use <code>localhost</code> or <code>https</code>.</p>","tags":["Insight\u00b2","Widgets","QR Scanner"]},{"location":"insight2/widgets/qr-scanner/#layout","title":"Layout","text":"","tags":["Insight\u00b2","Widgets","QR Scanner"]},{"location":"insight2/widgets/qr-scanner/#show-on-desktop","title":"Show on desktop","text":"<p>Toggle on or off to display the widget in desktop view. You can programmatically determing the value by clicking on <code>Fx</code> to set the value <code>{{true}}</code> or <code>{{false}}</code>.</p>","tags":["Insight\u00b2","Widgets","QR Scanner"]},{"location":"insight2/widgets/qr-scanner/#show-on-mobile","title":"Show on mobile","text":"<p>Toggle on or off to display the widget in mobile view. You can programmatically determing the value by clicking on <code>Fx</code> to set the value <code>{{true}}</code> or <code>{{false}}</code>.</p>","tags":["Insight\u00b2","Widgets","QR Scanner"]},{"location":"insight2/widgets/qr-scanner/#styles","title":"Styles","text":"","tags":["Insight\u00b2","Widgets","QR Scanner"]},{"location":"insight2/widgets/qr-scanner/#visibility","title":"Visibility","text":"<p>Toggle on or off to control the visibility of the widget. You can programmatically change its value by clicking on the <code>Fx</code> button next to it. If <code>{{false}}</code> the widget will not be visible after the app is deployed. By default, it's set to <code>{{true}}</code>.</p>","tags":["Insight\u00b2","Widgets","QR Scanner"]},{"location":"insight2/widgets/qr-scanner/#disable","title":"Disable","text":"<p>This is <code>off</code> by default, toggle <code>on</code> the switch to lock the widget and make it non-functional. You can also programmatically set the value by clicking on the <code>Fx</code> button next to it. If set to <code>{{true}}</code>, the widget will be locked and becomes non-functional. By default, its value is set to <code>{{false}}</code>.</p>","tags":["Insight\u00b2","Widgets","QR Scanner"]},{"location":"insight2/widgets/radio-button/","title":"Radio Button","text":"<p>Radio button widget can be used to select one option from a group of options.</p> <p></p> <p> Radio buttons are preferred when the list of options is less than six, and all the options can be displayed at once.</p> <p> For more than six options, consider using Dropdown widget.</p>","tags":["Insight\u00b2","Widgets","Radio Button"]},{"location":"insight2/widgets/radio-button/#event","title":"Event","text":"","tags":["Insight\u00b2","Widgets","Radio Button"]},{"location":"insight2/widgets/radio-button/#on-select","title":"On select","text":"<p>This event is triggered when an option is clicked.</p> <p> Check Action Reference docs to get the detailed information about all the Actions.</p>","tags":["Insight\u00b2","Widgets","Radio Button"]},{"location":"insight2/widgets/radio-button/#properties","title":"Properties","text":"","tags":["Insight\u00b2","Widgets","Radio Button"]},{"location":"insight2/widgets/radio-button/#label","title":"Label","text":"<p>The text is to be used as the label for the radio button. This field expects a <code>String</code> value.</p>","tags":["Insight\u00b2","Widgets","Radio Button"]},{"location":"insight2/widgets/radio-button/#default-value","title":"Default value","text":"<p>The value of the default option.</p>","tags":["Insight\u00b2","Widgets","Radio Button"]},{"location":"insight2/widgets/radio-button/#option-values","title":"Option values","text":"<p>List of values for different items/options. Refer your query data with dynamic variables <code>{{queries.datasource.data.map(item =&gt; item.value)}}</code> or populate it with sample values <code>{{[true, false]}}</code></p>","tags":["Insight\u00b2","Widgets","Radio Button"]},{"location":"insight2/widgets/radio-button/#option-labels","title":"Option labels","text":"<p>List of labels for different items/options. Refer your query data with dynamic variables <code>{{queries.datasource.data.map(item =&gt; item.label)}}</code> or populate it with sample values <code>{{[\"yes\", \"no\"]}}</code></p>","tags":["Insight\u00b2","Widgets","Radio Button"]},{"location":"insight2/widgets/radio-button/#layout","title":"Layout","text":"","tags":["Insight\u00b2","Widgets","Radio Button"]},{"location":"insight2/widgets/radio-button/#show-on-desktop","title":"Show on desktop","text":"<p>Toggle on or off to display the widget in desktop view. You can programmatically determing the value by clicking on <code>Fx</code> to set the value <code>{{true}}</code> or <code>{{false}}</code>.</p>","tags":["Insight\u00b2","Widgets","Radio Button"]},{"location":"insight2/widgets/radio-button/#show-on-mobile","title":"Show on mobile","text":"<p>Toggle on or off to display the widget in mobile view. You can programmatically determing the value by clicking on <code>Fx</code> to set the value <code>{{true}}</code> or <code>{{false}}</code>.</p>","tags":["Insight\u00b2","Widgets","Radio Button"]},{"location":"insight2/widgets/radio-button/#styles","title":"Styles","text":"","tags":["Insight\u00b2","Widgets","Radio Button"]},{"location":"insight2/widgets/radio-button/#text-color","title":"Text color","text":"<p>Change the color of the text in the widget by providing the <code>Hex color code</code> or by choosing the color of your choice from the color picker.</p>","tags":["Insight\u00b2","Widgets","Radio Button"]},{"location":"insight2/widgets/radio-button/#active-color","title":"Active color","text":"<p>Change the color of active radio button by providing the <code>Hex color code</code> or by choosing the color of your choice from the color picker.</p>","tags":["Insight\u00b2","Widgets","Radio Button"]},{"location":"insight2/widgets/radio-button/#visibility","title":"Visibility","text":"<p>Toggle on or off to control the visibility of the widget. You can programmatically change its value by clicking on the <code>Fx</code> button next to it. If <code>{{false}}</code> the widget will not be visible after the app is deployed. By default, it's set to <code>{{true}}</code>.</p>","tags":["Insight\u00b2","Widgets","Radio Button"]},{"location":"insight2/widgets/radio-button/#disable","title":"Disable","text":"<p>This is <code>off</code> by default, toggle <code>on</code> the switch to lock the widget and make it non-functional. You can also programmatically set the value by clicking on the <code>Fx</code> button next to it. If set to <code>{{true}}</code>, the widget will be locked and becomes non-functional. By default, its value is set to <code>{{false}}</code>.</p>","tags":["Insight\u00b2","Widgets","Radio Button"]},{"location":"insight2/widgets/radio-button/#example","title":"Example","text":"","tags":["Insight\u00b2","Widgets","Radio Button"]},{"location":"insight2/widgets/range-slider/","title":"Range Slider","text":"<p>Range sliders are widely used across different UIs. One of the main purposes is to filter, explore all the related content and available in the control and settings options.</p> <p>:::tip Range Sliders have \"Two handles\" option which allows user to select within a range. :::</p> <p></p>"},{"location":"insight2/widgets/range-slider/#properties","title":"Properties","text":""},{"location":"insight2/widgets/range-slider/#minimum-value","title":"Minimum value","text":"<p>Set the minimum value for the slider. This field accepts any numerical value.</p>"},{"location":"insight2/widgets/range-slider/#maximum-value","title":"Maximum value","text":"<p>Set the maximum value for the slider. This field accepts any numerical value.</p>"},{"location":"insight2/widgets/range-slider/#value","title":"Value","text":"<p>Set the default value when the widget loads. This can be used to pre-fill the value based on your data and requirements.</p>"},{"location":"insight2/widgets/range-slider/#two-handles","title":"Two handles","text":"<p>The slider will now have 2 dragging handles. It is used to define a range of values versus a single given value.</p>"},{"location":"insight2/widgets/range-slider/#layout","title":"Layout","text":""},{"location":"insight2/widgets/range-slider/#show-on-desktop","title":"Show on desktop","text":"<p>Toggle on or off to display the widget in desktop view. You can programmatically determing the value by clicking on <code>Fx</code> to set the value <code>{{true}}</code> or <code>{{false}}</code>.</p>"},{"location":"insight2/widgets/range-slider/#show-on-mobile","title":"Show on mobile","text":"<p>Toggle on or off to display the widget in mobile view. You can programmatically determing the value by clicking on <code>Fx</code> to set the value <code>{{true}}</code> or <code>{{false}}</code>.</p>"},{"location":"insight2/widgets/range-slider/#styles","title":"Styles","text":""},{"location":"insight2/widgets/range-slider/#line-color","title":"Line color","text":"<p>Enter the hexcode to set the default color for slider's track.</p>"},{"location":"insight2/widgets/range-slider/#handle-color","title":"Handle color","text":"<p>Enter the hexcode to set the color for slider's handler.</p>"},{"location":"insight2/widgets/range-slider/#track-color","title":"Track color","text":"<p>Enter the hexcode to set the color for slider's active portion on the track.</p>"},{"location":"insight2/widgets/range-slider/#visiblity","title":"Visiblity","text":"<p>Set the visivlity of the slider programmatically. The default value is <code>{{true}}</code>.</p> <p>:::info Any property having <code>Fx</code> button next to its field can be programmatically configured. :::</p>"},{"location":"insight2/widgets/rich-text-editor/","title":"Rich Text Editor","text":"<p>Rich Text Editor can be used to enter and edit the text in HTML format. It should be preferred for blog posts, forum posts or notes sections. The text is to be used as the label for the radio button.</p> <p></p>","tags":["Insight\u00b2","Widgets","Rich Text Editor"]},{"location":"insight2/widgets/rich-text-editor/#properties","title":"Properties","text":"","tags":["Insight\u00b2","Widgets","Rich Text Editor"]},{"location":"insight2/widgets/rich-text-editor/#placeholder","title":"Placeholder","text":"<p>It specifies a hint that describes the expected value.</p>","tags":["Insight\u00b2","Widgets","Rich Text Editor"]},{"location":"insight2/widgets/rich-text-editor/#layout","title":"Layout","text":"","tags":["Insight\u00b2","Widgets","Rich Text Editor"]},{"location":"insight2/widgets/rich-text-editor/#show-on-desktop","title":"Show on desktop","text":"<p>Toggle on or off to display the widget in desktop view. You can programmatically determing the value by clicking on <code>Fx</code> to set the value <code>{{true}}</code> or <code>{{false}}</code>.</p>","tags":["Insight\u00b2","Widgets","Rich Text Editor"]},{"location":"insight2/widgets/rich-text-editor/#show-on-mobile","title":"Show on mobile","text":"<p>Toggle on or off to display the widget in mobile view. You can programmatically determing the value by clicking on <code>Fx</code> to set the value <code>{{true}}</code> or <code>{{false}}</code>.</p>","tags":["Insight\u00b2","Widgets","Rich Text Editor"]},{"location":"insight2/widgets/rich-text-editor/#styles","title":"Styles","text":"","tags":["Insight\u00b2","Widgets","Rich Text Editor"]},{"location":"insight2/widgets/rich-text-editor/#visibility","title":"Visibility","text":"<p>Toggle on or off to control the visibility of the widget. You can programmatically change its value by clicking on the <code>Fx</code> button next to it. If <code>{{false}}</code> the widget will not be visible after the app is deployed. By default, it's set to <code>{{true}}</code>.</p>","tags":["Insight\u00b2","Widgets","Rich Text Editor"]},{"location":"insight2/widgets/rich-text-editor/#disable","title":"Disable","text":"<p>This is <code>off</code> by default, toggle <code>on</code> the switch to lock the widget and make it non-functional. You can also programmatically set the value by clicking on the <code>Fx</code> button next to it. If set to <code>{{true}}</code>, the widget will be locked and becomes non-functional. By default, its value is set to <code>{{false}}</code>.</p>","tags":["Insight\u00b2","Widgets","Rich Text Editor"]},{"location":"insight2/widgets/spinner/","title":"Spinner","text":"<p>Spinner widget can be used to provide a visual indication that an action is in progress by awaiting a change.</p> <p></p>"},{"location":"insight2/widgets/spinner/#layout","title":"Layout","text":""},{"location":"insight2/widgets/spinner/#show-on-desktop","title":"Show on desktop","text":"<p>Toggle on or off to display the widget in desktop view. You can programmatically determing the value by clicking on <code>Fx</code> to set the value <code>{{true}}</code> or <code>{{false}}</code>.</p>"},{"location":"insight2/widgets/spinner/#show-on-mobile","title":"Show on mobile","text":"<p>Toggle on or off to display the widget in mobile view. You can programmatically determing the value by clicking on <code>Fx</code> to set the value <code>{{true}}</code> or <code>{{false}}</code>.</p>"},{"location":"insight2/widgets/spinner/#styles","title":"Styles","text":""},{"location":"insight2/widgets/spinner/#visibility","title":"Visibility","text":"<p>Toggle on or off to control the visibility of the widget. You can programmatically change its value by clicking on the <code>Fx</code> button next to it. If <code>{{false}}</code> the widget will not be visible after the app is deployed. By default, it's set to <code>{{true}}</code>.</p>"},{"location":"insight2/widgets/spinner/#color","title":"Color","text":"<p>Change the color of the Spinner by entering the <code>Hex color code</code> or choosing a color of your choice from the color-picker.</p>"},{"location":"insight2/widgets/spinner/#size","title":"Size","text":"<p>Change the size of the Spinner by selecting options from the dropdown. It has small and large sizes available.</p>"},{"location":"insight2/widgets/star/","title":"Star rating","text":"<p>Star rating widget can be used to display as well as input ratings. The widget supports half stars, and the number of stars can be set too.</p> <p></p>"},{"location":"insight2/widgets/star/#event","title":"Event","text":""},{"location":"insight2/widgets/star/#on-change","title":"On Change","text":"<p>This event is triggered when a star is clicked.</p> <p>:::info Check Action Reference docs to get the detailed information about all the Actions. :::</p>"},{"location":"insight2/widgets/star/#properties","title":"Properties","text":""},{"location":"insight2/widgets/star/#label","title":"Label","text":"<p>The text to be used as the label for the star rating. This field expects a <code>String</code> value.</p>"},{"location":"insight2/widgets/star/#number-of-stars","title":"Number of stars","text":"<p>Initial number of stars in the list on initial load. <code>default: 5</code>. This field expects an integer value.</p>"},{"location":"insight2/widgets/star/#default-no-of-selected-stars","title":"Default no of selected stars","text":"<p>This property specifies the default count of stars that are selected on the initial load. <code>default: 5</code> (integer). This field expects an integer value.</p>"},{"location":"insight2/widgets/star/#enable-half-star","title":"Enable half star","text":"<p>Toggle <code>on</code> to allow selection of half stars. <code>default: false</code> (bool). Click on <code>Fx</code> to programmatically define the value <code>{{true}}</code> or <code>{{false}}</code>.</p>"},{"location":"insight2/widgets/star/#tooltips","title":"Tooltips","text":"<p>This is used for displaying informative tooltips on each star, and it is mapped to the index of the star. <code>default: []</code> (array of strings ). Ex: <code>{{[\"bad\", \"okay\", \"good\", \"best\"]}}</code></p>"},{"location":"insight2/widgets/star/#layout","title":"Layout","text":""},{"location":"insight2/widgets/star/#show-on-desktop","title":"Show on desktop","text":"<p>Toggle on or off to display the widget in desktop view. You can programmatically determing the value by clicking on <code>Fx</code> to set the value <code>{{true}}</code> or <code>{{false}}</code>.</p>"},{"location":"insight2/widgets/star/#show-on-mobile","title":"Show on mobile","text":"<p>Toggle on or off to display the widget in mobile view. You can programmatically determing the value by clicking on <code>Fx</code> to set the value <code>{{true}}</code> or <code>{{false}}</code>.</p>"},{"location":"insight2/widgets/star/#styles","title":"Styles","text":""},{"location":"insight2/widgets/star/#star-color","title":"Star Color","text":"<p>Display color of the star. <code>default: #ffb400</code> (color hex). Change color by providing <code>Hex color code</code> or choosing one from the picker.</p>"},{"location":"insight2/widgets/star/#label-color","title":"Label color","text":"<p>Change the color of label in widget by providing <code>Hex color code</code> or choosing one from the picker.</p>"},{"location":"insight2/widgets/star/#visibility","title":"Visibility","text":"<p>Toggle on or off to control the visibility of the widget. You can programmatically change its value by clicking on the <code>Fx</code> button next to it. If <code>{{false}}</code> the widget will not be visible after the app is deployed. By default, it's set to <code>{{true}}</code>.</p>"},{"location":"insight2/widgets/star/#disable","title":"Disable","text":"<p>This is <code>off</code> by default, toggle <code>on</code> the switch to lock the widget and make it non-functional. You can also programmatically set the value by clicking on the <code>Fx</code> button next to it. If set to <code>{{true}}</code>, the widget will be locked and becomes non-functional. By default, its value is set to <code>{{false}}</code>.</p>"},{"location":"insight2/widgets/statistics/","title":"Statistics","text":"<p>Statistics can be used to display different statistical information.</p> <p></p>","tags":["Insight\u00b2","Widgets","Statistics"]},{"location":"insight2/widgets/statistics/#properties","title":"Properties","text":"","tags":["Insight\u00b2","Widgets","Statistics"]},{"location":"insight2/widgets/statistics/#primary-value-label","title":"Primary value label","text":"<p>This property lets you add and remove primary value label.</p>","tags":["Insight\u00b2","Widgets","Statistics"]},{"location":"insight2/widgets/statistics/#primary-value","title":"Primary value","text":"<p>This property lets you add and remove primary value,the actual amount can be represented here.</p>","tags":["Insight\u00b2","Widgets","Statistics"]},{"location":"insight2/widgets/statistics/#secondary-value-label","title":"Secondary value label","text":"<p>This property lets you add and remove secondary value label.</p>","tags":["Insight\u00b2","Widgets","Statistics"]},{"location":"insight2/widgets/statistics/#secondary-value","title":"Secondary value","text":"<p>This property lets you add and remove secondary value,the chnage in value can be represented here.</p>","tags":["Insight\u00b2","Widgets","Statistics"]},{"location":"insight2/widgets/statistics/#secondaory-sign-display","title":"Secondaory sign display","text":"<p>This property lets you add and secondary sign either positive or negative,can be used to represent positive(increase) or negative(decrease) movement.Default value is positive.</p>","tags":["Insight\u00b2","Widgets","Statistics"]},{"location":"insight2/widgets/statistics/#layout","title":"Layout","text":"","tags":["Insight\u00b2","Widgets","Statistics"]},{"location":"insight2/widgets/statistics/#show-on-desktop","title":"Show on desktop","text":"<p>Toggle on or off to display the widget in desktop view. You can programmatically determine the value by clicking on <code>Fx</code> to set the value <code>{{true}}</code> or <code>{{false}}</code>.</p>","tags":["Insight\u00b2","Widgets","Statistics"]},{"location":"insight2/widgets/statistics/#show-on-mobile","title":"Show on mobile","text":"<p>Toggle on or off to display the widget in mobile view. You can programmatically determine the value by clicking on <code>Fx</code> to set the value <code>{{true}}</code> or <code>{{false}}</code>.</p>","tags":["Insight\u00b2","Widgets","Statistics"]},{"location":"insight2/widgets/statistics/#styles","title":"Styles","text":"","tags":["Insight\u00b2","Widgets","Statistics"]},{"location":"insight2/widgets/statistics/#primary-label-colour","title":"Primary Label Colour","text":"<p>You can change the primary label color by entering the Hex color code or choosing a color of your choice from the color picker.</p>","tags":["Insight\u00b2","Widgets","Statistics"]},{"location":"insight2/widgets/statistics/#primary-text-colour","title":"Primary Text Colour","text":"<p>You can change the primary text color of the primary label by entering the Hex color code or choosing a color of your choice from the color picker.</p>","tags":["Insight\u00b2","Widgets","Statistics"]},{"location":"insight2/widgets/statistics/#secondary-label-colour","title":"Secondary Label Colour","text":"<p>You can change the secondary label color of the primary label by entering the Hex color code or choosing a color of your choice from the color picker.</p>","tags":["Insight\u00b2","Widgets","Statistics"]},{"location":"insight2/widgets/statistics/#secondary-text-colour","title":"Secondary Text Colour","text":"<p>You can change the secondary text color of the primary label by entering the Hex color code or choosing a color of your choice from the color picker.</p>","tags":["Insight\u00b2","Widgets","Statistics"]},{"location":"insight2/widgets/statistics/#visibility","title":"Visibility","text":"<p>Toggle on or off to control the visibility of the widget. You can programmatically change its value by clicking on the <code>Fx</code> button next to it. If <code>{{false}}</code> the widget will not be visible after the app is deployed. By default, it's set to <code>{{true}}</code>.</p> <p> Any property having <code>Fx</code> button next to its field can be programmatically configured.</p>","tags":["Insight\u00b2","Widgets","Statistics"]},{"location":"insight2/widgets/steps/","title":"Steps","text":"<p>Steps are used to guide users through complex processes, making them easier and more intuitive.</p> <p></p>"},{"location":"insight2/widgets/steps/#steps_1","title":"Steps","text":"<p>This property lets you add and the steps.</p> <p><code>{{ [{ name: 'step 1', tooltip: 'some tooltip', id: 1},{ name: 'step 2', tooltip: 'some tooltip', id: 2},{ name: 'step 3', tooltip: 'some tooltip', id: 3},{ name: 'step 4', tooltip: 'some tooltip', id: 4},{ name: 'step 5', tooltip: 'some tooltip', id: 5}]}}</code></p> <p>add another object to add one more step.</p>"},{"location":"insight2/widgets/steps/#current-step","title":"Current step","text":"<p>This property lets you select the current step you want to be highlighted.</p>"},{"location":"insight2/widgets/steps/#steps-selectable","title":"Steps selectable","text":"<p>This property when disabled will disable selection of steps.</p>"},{"location":"insight2/widgets/steps/#events","title":"Events","text":""},{"location":"insight2/widgets/steps/#on-select","title":"On select","text":"<p>This event is fired whenever the user selects any step.</p>"},{"location":"insight2/widgets/steps/#layout","title":"Layout","text":""},{"location":"insight2/widgets/steps/#show-on-desktop","title":"Show on desktop","text":"<p>Toggle on or off to display the widget in desktop view. You can programmatically determing the value by clicking on <code>Fx</code> to set the value <code>{{true}}</code> or <code>{{false}}</code>.</p>"},{"location":"insight2/widgets/steps/#show-on-mobile","title":"Show on mobile","text":"<p>Toggle on or off to display the widget in mobile view. You can programmatically determing the value by clicking on <code>Fx</code> to set the value <code>{{true}}</code> or <code>{{false}}</code>.</p>"},{"location":"insight2/widgets/steps/#styles","title":"Styles","text":""},{"location":"insight2/widgets/steps/#theme","title":"Theme","text":"<p>You can change the theme of widget by selecting available themes from dropdown.</p>"},{"location":"insight2/widgets/steps/#colour","title":"Colour","text":"<p>You can change the  color of the widget by entering the Hex color code or choosing a color of your choice from the color picker.</p>"},{"location":"insight2/widgets/steps/#text-colour","title":"Text Colour","text":"<p>You can change the  text color of the widget by entering the Hex color code or choosing a color of your choice from the color picker.</p>"},{"location":"insight2/widgets/steps/#visibility","title":"Visibility","text":"<p>Toggle on or off to control the visibility of the widget. You can programmatically change its value by clicking on the <code>Fx</code> button next to it. If <code>{{false}}</code> the widget will not be visible after the app is deployed. By default, it's set to <code>{{true}}</code>.</p> <p>:::info Any property having <code>Fx</code> button next to its field can be programmatically configured. :::</p>"},{"location":"insight2/widgets/table/","title":"Table","text":"<p>Tables can be used for both displaying and editing data.</p>"},{"location":"insight2/widgets/table/#table-data","title":"Table data","text":"<p>Array of objects to be displayed on the table. It is commonly used to display data from query * <code>{{queries.restapi1.data}}</code>). Data expects an array of objects, example: <code>{{[{ id: 1, name: 'Sarah', email: 'sarah@example.com'}]}}</code></p>"},{"location":"insight2/widgets/table/#columns","title":"Columns","text":""},{"location":"insight2/widgets/table/#cell-data-types","title":"Cell data types","text":"<ul> <li>String ( Default )</li> <li>Text</li> <li>Badge - can be used to display and edit predefined badges such as status of shipment.</li> <li>Multiple badges</li> <li>Tags - similar to badges but the values are not predefined.</li> <li>Dropdown</li> <li>Radio</li> <li>Multiselect dropdown</li> <li>Toggle switch</li> <li>Date picker</li> </ul>"},{"location":"insight2/widgets/table/#displaying-data","title":"Displaying Data","text":"<p>The data object should be an array of objects. Table columns can be added, removed, rearranged from the inspector. <code>key</code> property is the accessor key used to get data from a single element of a table data object. For example:</p> <p>If the table data is:</p> <pre><code>[\n{\n\"review\": {\n\"title\": \"An app review\"\n},\n\"user\": {\n\"name\": \"sam\",\n\"email\": \"sam@example.com\"\n},\n}\n]\n</code></pre> <p>To display email column, the key for the column should be <code>user.email</code>.</p>"},{"location":"insight2/widgets/table/#saving-data","title":"Saving data","text":"<p>Enable <code>editable</code> property of a column to make the cells editable. If a data type is not selected, <code>string</code> is selected as the data type.</p> <p>If the data in a cell is changed, <code>changeSet</code> property of the table object will have the index of the row and the field that changed. For example, if the name field of second row of example in the 'Displaying Data' section is changed, <code>changeSet</code> will look like this:</p> <pre><code>{\n2: {\n\"name\": \"new name\"\n}\n}\n</code></pre> <p>Along with <code>changeSet</code>, <code>dataUpdates</code> property will also be changed when the value of a cell changes. <code>dataUpdates</code> will have the whole data of the changed index from the table data. <code>dataUpdates</code> will look like this for our example:</p> <pre><code>[{\n\"review\": {\n\"title\": \"An app review\"\n},\n\"user\": {\n\"name\": \"new name\",\n\"email\": \"sam@example.com\"\n},\n}]\n</code></pre> <p>If the data of a cell is changed, \"save changes\" button will be shown at the bottom of the table. This button when clicked will trigger the <code>Bulk update query</code> event. This event can be used to run a query to update the data on your data source.</p>"},{"location":"insight2/widgets/table/#action-buttons","title":"Action buttons","text":"<p>Action buttons will be displayed as the last column of the table. The styles of these buttons can be customised and <code>on click</code> actions can be configured. when clicked, <code>selectedRow</code> property of the table will have the table data of the row.</p> Property Description Background color (Action Button) Background color of the action button. Text color (Action Button) Color of button-text of the action button."},{"location":"insight2/widgets/table/#options","title":"Options","text":"<p>:::info Any property having <code>Fx</code> button next to its field can be programmatically configured. :::</p>"},{"location":"insight2/widgets/table/#server-side-pagination","title":"Server-side pagination","text":"<p>Server-side pagination can be used to run a query whenever the page is changed. Go to events section of the inspector and change the action for <code>on page changed</code> event. Number of records per page needs to be handled in your query. If server-side pagination is enabled, <code>pageIndex</code> property will be exposed on the table object, this property will have the current page index. <code>pageIndex</code> can be used to query the next set of results when page is changed.</p>"},{"location":"insight2/widgets/table/#server-side-search","title":"Server-side search","text":"<p>If server-side search is enabled, <code>on search</code> event is fired after the content of <code>searchText</code> property is changed. <code>searchText</code> can be used to run a specific query to search for the records in your data source.</p>"},{"location":"insight2/widgets/table/#show-download-button","title":"Show download button","text":"<p>Show or hide download button at the Table footer.</p>"},{"location":"insight2/widgets/table/#show-filter-button","title":"Show filter button","text":"<p>Show or hide filter button at the Table footer.</p>"},{"location":"insight2/widgets/table/#show-bulk-update-actions","title":"Show bulk update actions","text":"<p>It's enabled by default. Toggle <code>off</code> hide bulk update actions.</p>"},{"location":"insight2/widgets/table/#bulk-selection","title":"Bulk selection","text":"<p>To let the user select one or more rows from the current page of a table, enable 'Bulk selection' from the inspector. The values of selected rows will be exposed as <code>selectedRows</code>.</p>"},{"location":"insight2/widgets/table/#highlight-selected-row","title":"Highlight selected row","text":"<p>Activate this option on the inspector to have the last selected(clicked on) row to be highlighted.</p>"},{"location":"insight2/widgets/table/#show-search-box","title":"Show search box","text":"<p>It can be used to show or hide Table Search box. Client-side search is enabled by default and server-side search can be enabled from the events section of the inspector. Whenever the search text is changed, the <code>searchText</code> property of the table component is updated. If server-side search is enabled, <code>on search</code> event is fired after the content of <code>searchText</code> property is changed. <code>searchText</code> can be used to run a specific query to search for the records in your data source.</p> <p>If you don't wish to use the search feature altogether, you can disable it from the inspector.</p>"},{"location":"insight2/widgets/table/#loading-state-boolean","title":"Loading state (Boolean)","text":"<p>Loading state shows a loading skeleton for the table. This property can be used to show a loading status on the table while data is being loaded. <code>isLoading</code> property of a query can be used to get the status of a query.</p>"},{"location":"insight2/widgets/table/#client-side-pagination","title":"Client-side pagination","text":"<p>Client-side pagination is enabled by default. When the client-side pagination is enabled(<code>{{true}}</code>) the number of records per page is 10 and if it is disabled(<code>{{false}}</code>) then it will show all the records in the single page.</p>"},{"location":"insight2/widgets/table/#event","title":"Event","text":""},{"location":"insight2/widgets/table/#on-row-clicked","title":"On row clicked","text":"<p>This event is triggered when a table row is clicked. <code>selectedRow</code> property of the table object will have the table data of the selected row.</p>"},{"location":"insight2/widgets/table/#bulk-update","title":"Bulk update","text":"<p>If any cell of the table is edited, the <code>save changes</code> button appears at the footer of the table. Bulk update event is triggered when this button is clicked.</p>"},{"location":"insight2/widgets/table/#page-changed","title":"Page changed","text":"<p>If server-side pagination is enabled, this event is fired when the current page is changed. This event is triggered after updating the <code>pageIndex</code> variable.</p>"},{"location":"insight2/widgets/table/#search","title":"Search","text":"<p>This event is triggered when a text is entered to the search field of the table. <code>searchText</code> variable is updated before triggering this event.</p>"},{"location":"insight2/widgets/table/#exposed-variables","title":"Exposed variables","text":"variable description currentData Data that is currently being displayed by the table ( including edits if any ) currentPageData Data that is displayed on the current page if pagination is enabled ( including edits if any ) pageIndex Index of the current page, starting from 1 changeSet Object with row number as the key and object of edited fields and their values as the value dataUpdates Just like changeSet but includes the data of the entire row selectedRow The data of the row that was last clicked. <code>selectedRow</code> also changes when an action button is clicked searchText The value of the search field if server-side pagination is enabled"},{"location":"insight2/widgets/table/#styles","title":"Styles","text":"Style Description Text color Change the color of the text in table by providing <code>hex color code</code> or choosing one from the picker Action button radius This field can be used to give a radius to all action buttons. The default value is <code>0</code> Table type Select a type of table from the dropdown. Cell size This decides the size of table cells. You can choose between a <code>Compact</code> size for table cells or a <code>Spacious</code> size Visibility Toggle on or off to control the visibility of the widget. You can programmatically change its value by clicking on the <code>Fx</code> button next to it. If <code>{{false}}</code> the widget will not visible after the app is deployed. By default, it's set to <code>{{true}}</code>. Disable Toggle on to lock the widget. You can programmatically change its value by clicking on the <code>Fx</code> button next to it, if set to <code>{{true}}</code>, the widget will be locked and becomes non-functional. By default, its value is set to <code>{{false}}</code>. Border radius Use this property to modify the border radius of the button. <p>:::info Any property having <code>Fx</code> button next to its field can be programmatically configured. :::</p>"},{"location":"insight2/widgets/tabs/","title":"Tabs","text":"<p>A Tabs widget contains a number of defined containers that can be navigated through the tabs. Each tab acts as a container and can have different components or widgets.</p> <p></p>"},{"location":"insight2/widgets/tabs/#properties","title":"Properties","text":""},{"location":"insight2/widgets/tabs/#tabs_1","title":"Tabs","text":"<p>This property lets you add and remove containers from the tabs widget. Each container in the tab has its unique <code>id</code> and <code>title</code>. This field expects an array of objects.</p>"},{"location":"insight2/widgets/tabs/#default-tab","title":"Default tab","text":"<p>This property selects the container in the tab which matches the corresponding <code>id</code>. By default, the value is set to <code>0</code>.</p>"},{"location":"insight2/widgets/tabs/#layout","title":"Layout","text":""},{"location":"insight2/widgets/tabs/#show-on-desktop","title":"Show on desktop","text":"<p>Toggle on or off to display the widget in desktop view. You can programmatically determing the value by clicking on <code>Fx</code> to set the value <code>{{true}}</code> or <code>{{false}}</code>.</p>"},{"location":"insight2/widgets/tabs/#show-on-mobile","title":"Show on mobile","text":"<p>Toggle on or off to display the widget in mobile view. You can programmatically determing the value by clicking on <code>Fx</code> to set the value <code>{{true}}</code> or <code>{{false}}</code>.</p>"},{"location":"insight2/widgets/tabs/#styles","title":"Styles","text":""},{"location":"insight2/widgets/tabs/#highlight-color","title":"Highlight Color","text":"<p>You can change the highlight color of the selected tab by entering the Hex color code or choosing a color of your choice from the color picker.</p>"},{"location":"insight2/widgets/tabs/#visibility","title":"Visibility","text":"<p>Toggle on or off to control the visibility of the widget. You can programmatically change its value by clicking on the <code>Fx</code> button next to it. If <code>{{false}}</code> the widget will not be visible after the app is deployed. By default, it's set to <code>{{true}}</code>.</p>"},{"location":"insight2/widgets/tabs/#disable","title":"Disable","text":"<p>This is <code>off</code> by default, toggle <code>on</code> the switch to lock the widget and make it non-functional. You can also programmatically set the value by clicking on the <code>Fx</code> button next to it. If set to <code>{{true}}</code>, the widget will be locked and becomes non-functional. By default, its value is set to <code>{{false}}</code>.</p> <p>:::info Any property having <code>Fx</code> button next to its field can be programmatically configured. :::</p>"},{"location":"insight2/widgets/tags/","title":"Tags","text":"<p>Tags widget can be used to show array of data as tags.</p> <p></p>"},{"location":"insight2/widgets/tags/#properties","title":"Properties","text":""},{"location":"insight2/widgets/tags/#data","title":"Data","text":"<p>It can be used to set array of tags. It must be an array of objects like this:</p> <pre><code>[ { title: 'tag1', color: '#000000', textColor: '#fff' }, { title: 'tag2', color: '#fefefe', textColor: 'green' } ]\n</code></pre> <p>Each object should contain a title, color code of a particular tag, and also a text color.</p>"},{"location":"insight2/widgets/tags/#layout","title":"Layout","text":""},{"location":"insight2/widgets/tags/#show-on-desktop","title":"Show on desktop","text":"<p>Toggle on or off to display the widget in desktop view. You can programmatically determing the value by clicking on <code>Fx</code> to set the value <code>{{true}}</code> or <code>{{false}}</code>.</p>"},{"location":"insight2/widgets/tags/#show-on-mobile","title":"Show on mobile","text":"<p>Toggle on or off to display the widget in mobile view. You can programmatically determing the value by clicking on <code>Fx</code> to set the value <code>{{true}}</code> or <code>{{false}}</code>.</p>"},{"location":"insight2/widgets/tags/#styles","title":"Styles","text":""},{"location":"insight2/widgets/tags/#visibility","title":"Visibility","text":"<p>Toggle on or off to control the visibility of the widget. You can programmatically change its value by clicking on the <code>Fx</code> button next to it. If <code>{{false}}</code> the widget will not be visible after the app is deployed. By default, it's set to <code>{{true}}</code>.</p>"},{"location":"insight2/widgets/text-input/","title":"Text Input","text":"<p>Text Input widget let users enter and edit text.</p> <p>:::tip The Text Input should be preferred when user input is a single line of text. :::</p> <p></p>"},{"location":"insight2/widgets/text-input/#properties","title":"Properties","text":""},{"location":"insight2/widgets/text-input/#default-value","title":"Default value","text":"<p>The default value that the widget will hold when the app is loaded.</p>"},{"location":"insight2/widgets/text-input/#placeholder","title":"Placeholder","text":"<p>It specifies a hint that describes the expected value.</p>"},{"location":"insight2/widgets/text-input/#events","title":"Events","text":""},{"location":"insight2/widgets/text-input/#on-change","title":"On change","text":"<p>This event is fired whenever the user types something on the text input.</p> <p>:::info Check Action Reference docs to get the detailed information about all the Actions. :::</p>"},{"location":"insight2/widgets/text-input/#validation","title":"Validation","text":""},{"location":"insight2/widgets/text-input/#regex","title":"Regex","text":"<p>Use this field to enter a Regular Expression that will validate the password constraints.</p>"},{"location":"insight2/widgets/text-input/#min-length","title":"Min length","text":"<p>Enter the number for a minimum length of password allowed.</p>"},{"location":"insight2/widgets/text-input/#max-length","title":"Max length","text":"<p>Enter the number for the maximum length of password allowed.</p>"},{"location":"insight2/widgets/text-input/#custom-validation","title":"Custom validation","text":"<p>If the condition is true, the validation passes, otherwise return a string that should be displayed as the error message. For example: <code>{{components.passwordInput1.value === 'something' ? true: 'value should be something'}}</code>.</p>"},{"location":"insight2/widgets/text-input/#layout","title":"Layout","text":""},{"location":"insight2/widgets/text-input/#show-on-desktop","title":"Show on desktop","text":"<p>Toggle on or off to display the widget in desktop view. You can programmatically determing the value by clicking on <code>Fx</code> to set the value <code>{{true}}</code> or <code>{{false}}</code>.</p>"},{"location":"insight2/widgets/text-input/#show-on-mobile","title":"Show on mobile","text":"<p>Toggle on or off to display the widget in mobile view. You can programmatically determing the value by clicking on <code>Fx</code> to set the value <code>{{true}}</code> or <code>{{false}}</code>.</p>"},{"location":"insight2/widgets/text-input/#styles","title":"Styles","text":""},{"location":"insight2/widgets/text-input/#border-radius","title":"Border Radius","text":"<p>Use this property to modify the border radius of the widget. The field expects only numerical value from <code>1</code> to <code>100</code>, default is <code>0</code>.</p>"},{"location":"insight2/widgets/text-input/#visibility","title":"Visibility","text":"<p>This is to control the visibility of the widget. If <code>{{false}}</code> the widget will not visible after the app is deployed. It can only have boolean values i.e. either <code>{{true}}</code> or <code>{{false}}</code>. By default, it's set to <code>{{true}}</code>.</p>"},{"location":"insight2/widgets/text-input/#disable","title":"Disable","text":"<p>This property only accepts boolean values. If set to <code>{{true}}</code>, the widget will be locked and becomes non-functional. By default, its value is set to <code>{{false}}</code>.</p> <p>:::info Any property having <code>Fx</code> button next to its field can be programmatically configured. :::</p>"},{"location":"insight2/widgets/text/","title":"Text","text":"<p>Text widget can be used to display text.</p> <p>:::info Users cannot enter and edit text. ::: </p>"},{"location":"insight2/widgets/text/#how-to-use-text-widget","title":"How To Use Text Widget","text":""},{"location":"insight2/widgets/text/#properties","title":"Properties","text":""},{"location":"insight2/widgets/text/#text_1","title":"Text","text":"<p>This property sets the content/text inside the Text widget. Refer your query data with dynamic variables <code>{{queries.datasource.data.text}}</code> or populate it with sample values <code>Text goes here !</code>.</p>"},{"location":"insight2/widgets/text/#show-loading-state","title":"Show loading state","text":"<p>Toggle <code>on</code> or <code>off</code> to show or hide the loading state. You can also click on the <code>Fx</code> next to it to set the value <code>{{true}}</code> and <code>{{false}}</code> dynamically. Shows a loading status if the value is <code>true</code>. This property is often used with the <code>isLoading</code> property of queries so that the table shows a spinner while the query is being run. Default value is <code>false</code>.</p>"},{"location":"insight2/widgets/text/#layout","title":"Layout","text":""},{"location":"insight2/widgets/text/#show-on-desktop","title":"Show on desktop","text":"<p>Toggle on or off to display the widget in desktop view. You can programmatically determing the value by clicking on <code>Fx</code> to set the value <code>{{true}}</code> or <code>{{false}}</code>.</p>"},{"location":"insight2/widgets/text/#show-on-mobile","title":"Show on mobile","text":"<p>Toggle on or off to display the widget in mobile view. You can programmatically determing the value by clicking on <code>Fx</code> to set the value <code>{{true}}</code> or <code>{{false}}</code>.</p>"},{"location":"insight2/widgets/text/#styles","title":"Styles","text":""},{"location":"insight2/widgets/text/#text-color","title":"Text color","text":"<p>Change the color of the text by providing the <code>Hex color code</code> or choosing a color from the picker.</p>"},{"location":"insight2/widgets/text/#align-text","title":"Align text","text":"<p>You can align the text inside the widget in following ways: - Left - Right - Center - Justified</p>"},{"location":"insight2/widgets/text/#visibility","title":"Visibility","text":"<p>This is to control the visibility of the widget. If <code>{{false}}</code> the widget will not visible after the app is deployed. It can only have boolean values i.e. either <code>{{true}}</code> or <code>{{false}}</code>. By default, it's set to <code>{{true}}</code>.</p>"},{"location":"insight2/widgets/text/#disable","title":"Disable","text":"<p>This property only accepts boolean values. If set to <code>{{true}}</code>, the widget will be locked and becomes non-functional. By default, its value is set to <code>{{false}}</code>.</p> <p>:::info Any property having <code>Fx</code> button next to its field can be programmatically configured. :::</p>"},{"location":"insight2/widgets/textarea/","title":"Textarea","text":"<p>Textarea widgets let users enter and edit just text like Text Input widget.</p> <p>:::tip Textarea should be preferred over Text Input when user input is more than one sentence. :::</p> <p></p>"},{"location":"insight2/widgets/textarea/#properties","title":"Properties","text":""},{"location":"insight2/widgets/textarea/#placeholder","title":"Placeholder","text":"<p>It specifies a hint that describes the expected value. This field expects a <code>String</code> value.</p>"},{"location":"insight2/widgets/textarea/#default-value","title":"Default value","text":"<p>This property is used for setting the initial value in the textarea on the initial load. This field expects a <code>String</code> value.</p>"},{"location":"insight2/widgets/textarea/#layout","title":"Layout","text":""},{"location":"insight2/widgets/textarea/#show-on-desktop","title":"Show on desktop","text":"<p>Toggle on or off to display the widget in desktop view. You can programmatically determing the value by clicking on <code>Fx</code> to set the value <code>{{true}}</code> or <code>{{false}}</code>.</p>"},{"location":"insight2/widgets/textarea/#show-on-mobile","title":"Show on mobile","text":"<p>Toggle on or off to display the widget in mobile view. You can programmatically determing the value by clicking on <code>Fx</code> to set the value <code>{{true}}</code> or <code>{{false}}</code>.</p>"},{"location":"insight2/widgets/textarea/#styles","title":"Styles","text":""},{"location":"insight2/widgets/textarea/#border-radius","title":"Border Radius","text":"<p>Use this property to modify the border radius of the text area widget. The field expects only numerical value from <code>1</code> to <code>100</code>, default is <code>0</code>.</p>"},{"location":"insight2/widgets/textarea/#visibility","title":"Visibility","text":"<p>This is to control the visibility of the widget. If <code>{{false}}</code> the widget will not visible after the app is deployed. It can only have boolean values i.e. either <code>{{true}}</code> or <code>{{false}}</code>. By default, it's set to <code>{{true}}</code>.</p>"},{"location":"insight2/widgets/textarea/#disable","title":"Disable","text":"<p>This property only accepts boolean values. If set to <code>{{true}}</code>, the widget will be locked and becomes non-functional. By default, its value is set to <code>{{false}}</code>.</p> <p>:::info Any property having <code>Fx</code> button next to its field can be programmatically configured. :::</p>"},{"location":"insight2/widgets/timeline/","title":"Timeline","text":"<p>Timeline widget can be used to do a visual representation of a sequence of events</p> <p></p>"},{"location":"insight2/widgets/timeline/#properties","title":"Properties","text":""},{"location":"insight2/widgets/timeline/#timeline-data","title":"Timeline data","text":"<p>Data requirements: The data needs to be an array of objects and each object should have <code>title</code>, <code>subTitle</code>, <code>iconBackgroundColor</code> and <code>date</code> keys.</p> <p>Example: <pre><code>[\n{ \"title\": \"Product Launched\", \"subTitle\": \"First version of our product released to public\", \"date\": \"20/10/2021\", \"iconBackgroundColor\": \"#4d72fa\"},\n{ \"title\": \"First Signup\", \"subTitle\": \"Congratulations! We got our first signup\", \"date\": \"22/10/2021\", \"iconBackgroundColor\": \"#4d72fa\"},\n{ \"title\": \"First Payment\", \"subTitle\": \"Hurray! We got our first payment\", \"date\": \"01/11/2021\", \"iconBackgroundColor\": \"#4d72fa\"}\n]\n</code></pre></p>"},{"location":"insight2/widgets/timeline/#hide-date","title":"Hide date","text":"<p>Hide date can be used to hide the date time or Left Hand Side of the timeline widget</p>"},{"location":"insight2/widgets/timeline/#layout","title":"Layout","text":"Layout description Expected value Show on desktop Toggle on or off to display desktop view. You can programmatically determining the value by clicking on <code>Fx</code> to set the value <code>{{true}}</code> or <code>{{false}}</code> Show on mobile Toggle on or off to display mobile view. You can programmatically determining the value by clicking on <code>Fx</code> to set the value <code>{{true}}</code> or <code>{{false}}</code>"},{"location":"insight2/widgets/timeline/#styles","title":"Styles","text":"Style Description Visibility Toggle on or off to control the visibility of the widget. You can programmatically change its value by clicking on the <code>Fx</code> button next to it. If <code>{{false}}</code> the widget will not visible after the app is deployed. By default, it's set to <code>{{true}}</code>. <p>:::info Any property having <code>Fx</code> button next to its field can be programmatically configured. :::</p>"},{"location":"insight2/widgets/timer/","title":"Timer","text":"<p>Timer widget lets users to count timer both upward and downward</p> <p></p>"},{"location":"insight2/widgets/timer/#properties","title":"Properties","text":""},{"location":"insight2/widgets/timer/#default-value","title":"Default value","text":"<p>It specifies the initial value of timer. Format is: <code>HH.mm.ss.SS</code>.</p>"},{"location":"insight2/widgets/timer/#timer-type","title":"Timer type","text":"<p>It specifies If its a upward or downward counter. Select <code>Count Up</code> or <code>Count Down</code> from the dropdown or you can click on <code>Fx</code> to programmatically define the values <code>countUp</code> or <code>countDown</code>.</p>"},{"location":"insight2/widgets/timer/#events","title":"Events","text":""},{"location":"insight2/widgets/timer/#on-reset","title":"On reset","text":"<p>This event is fired when user clicks on reset button.</p>"},{"location":"insight2/widgets/timer/#on-resume","title":"On resume","text":"<p>This event is fired when user clicks on resume button.</p>"},{"location":"insight2/widgets/timer/#on-pause","title":"On pause","text":"<p>This event is fired when user clicks on pause button.</p>"},{"location":"insight2/widgets/timer/#on-count-down-finish","title":"On count down finish","text":"<p>This event is fired when the count down timer reaches zero.</p> <p>:::info Check Action Reference docs to get the detailed information about all the Actions. :::</p>"},{"location":"insight2/widgets/timer/#layout","title":"Layout","text":""},{"location":"insight2/widgets/timer/#show-on-desktop","title":"Show on desktop","text":"<p>Toggle on or off to display the widget in desktop view. You can programmatically determing the value by clicking on <code>Fx</code> to set the value <code>{{true}}</code> or <code>{{false}}</code>.</p>"},{"location":"insight2/widgets/timer/#show-on-mobile","title":"Show on mobile","text":"<p>Toggle on or off to display the widget in mobile view. You can programmatically determing the value by clicking on <code>Fx</code> to set the value <code>{{true}}</code> or <code>{{false}}</code>.</p>"},{"location":"insight2/widgets/timer/#styles","title":"Styles","text":""},{"location":"insight2/widgets/timer/#visibility","title":"Visibility","text":"<p>This is to control the visibility of the widget. If <code>{{false}}</code> the widget will not visible after the app is deployed. It can only have boolean values i.e. either <code>{{true}}</code> or <code>{{false}}</code>. By default, it's set to <code>{{true}}</code>.</p>"},{"location":"insight2/widgets/timer/#disable","title":"Disable","text":"<p>This property only accepts boolean values. If set to <code>{{true}}</code>, the widget will be locked and becomes non-functional. By default, its value is set to <code>{{false}}</code>.</p> <p>:::info Any property having <code>Fx</code> button next to its field can be programmatically configured. :::</p>"},{"location":"insight2/widgets/toggle-switch/","title":"Toggle Switch","text":"<p>The toggle switch widget allows the user to change a setting between two states.</p> <p>The Toggle switch widget should be used if we want to make a binary choice, such as turning something on or off or enable or disable.</p> <p></p>"},{"location":"insight2/widgets/toggle-switch/#property","title":"Property","text":""},{"location":"insight2/widgets/toggle-switch/#label","title":"Label","text":"<p>This property can be used to set a label for the switch. Default Label: Toggle label</p>"},{"location":"insight2/widgets/toggle-switch/#event","title":"Event","text":""},{"location":"insight2/widgets/toggle-switch/#on-change","title":"On change","text":"<p>This event is triggered whenever the toggle switch is clicked.</p> <p>:::info Check Action Reference docs to get the detailed information about all the Actions. :::</p>"},{"location":"insight2/widgets/toggle-switch/#layout","title":"Layout","text":""},{"location":"insight2/widgets/toggle-switch/#show-on-desktop","title":"Show on desktop","text":"<p>Toggle on or off to display the widget in desktop view. You can programmatically determing the value by clicking on <code>Fx</code> to set the value <code>{{true}}</code> or <code>{{false}}</code>.</p>"},{"location":"insight2/widgets/toggle-switch/#show-on-mobile","title":"Show on mobile","text":"<p>Toggle on or off to display the widget in mobile view. You can programmatically determing the value by clicking on <code>Fx</code> to set the value <code>{{true}}</code> or <code>{{false}}</code>.</p>"},{"location":"insight2/widgets/toggle-switch/#styles","title":"Styles","text":""},{"location":"insight2/widgets/toggle-switch/#text-color","title":"Text color","text":"<p>Change the color of the text in the widget by providig the <code>Hex color code</code> or choosing a color from the picker.</p>"},{"location":"insight2/widgets/toggle-switch/#toggle-switch-color","title":"Toggle switch color","text":"<p>Change the color of the toggle switch in the widget by providig the <code>Hex color code</code> or choosing a color from the picker.</p>"},{"location":"insight2/widgets/toggle-switch/#visibility","title":"Visibility","text":"<p>This is to control the visibility of the widget. If <code>{{false}}</code> the widget will not visible after the app is deployed. It can only have boolean values i.e. either <code>{{true}}</code> or <code>{{false}}</code>. By default, it's set to <code>{{true}}</code>.</p>"},{"location":"insight2/widgets/toggle-switch/#disable","title":"Disable","text":"<p>This property only accepts boolean values. If set to <code>{{true}}</code>, the widget will be locked and becomes non-functional. By default, its value is set to <code>{{false}}</code>.</p> <p>:::info Any property having <code>Fx</code> button next to its field can be programmatically configured. :::</p>"},{"location":"kv2/all-extracted-fields/","title":"All extracted fields","text":"","tags":["KV\u00b2","Extracted Fields"]},{"location":"kv2/all-extracted-fields/#1-invoice-details","title":"1 Invoice Details","text":"Field NameDescriptionInvoice NumberSometimes there are multiple invoice numbers on invoices. Select the one you want to extract hereInvoice DateSelect invoice date herePurchase OrderSometimes there are multiple purchase order numbers on invoices. Select here the one you want to extractDelivery DateSelect the delivery date here if available. If this is not visible/notated on the invoice, leave this field blank.Payment TermsSelect payment terms, if availableTotal Net Amountleave this field blank, it will be calculated from the data on tab \"Calculation Details\"Total VAT Amountleave this field blank, it will be calculated from the data on tab \"Calculation Details\"Total Amountselect total amount hereCurrencyselect invoice currency e.g. EUR/GBP hereInvoice Typeif the document is an invoice, Invoice should be selected here. If the document is a credit note, select Credit Note here.","tags":["KV\u00b2","Extracted Fields"]},{"location":"kv2/all-extracted-fields/#2-calculation-details","title":"2 Calculation Details","text":"Field NameDescriptionTax Rate FullIf there are multiple tax rates on the invoice, select the higher of the two heresee example hereNet Amount Fullsee example hereTax Amount Fullsee example hereTaxe Rate ReducedIf there are multiple tax rates on the invoice, select the lower of the two heresee example hereNet Amount Reducedsee example hereTax Amount Reducedsee example hereTax Rate FreeFor a tax-free invoice enter 0 heresee example hereNet Amount FreeFor a tax-free invoice, enter the total amount heresee example hereTax Amount FreeFor a tax-free invoice enter 0 heresee example here","tags":["KV\u00b2","Extracted Fields"]},{"location":"kv2/all-extracted-fields/#3-recipient-details","title":"3 Recipient Details","text":"<p>This Tab is only needed in case you have (multiple) sub companies. In that case please choose the respective value here. Auto population can be possible based on recognized VAT Number Recipient.</p> <p>If there are no sub companies, this tab can be ignored or also be hidden within the Batch Class Configuration.</p> Recipient NameVAT Number Recipient","tags":["KV\u00b2","Extracted Fields"]},{"location":"kv2/all-extracted-fields/#4-vendor-details","title":"4 Vendor Details","text":"<p>Tab Vendor Details shows all data related to the vendor. Most of the fields here will be auto-populated from fuzzy DB and cannot be edited in this screen. Only VAT No Extracted and Vendor IBAN should be checked and validated.</p> Vendor IDVendor NameVendor StreetVendor ZIPVendor CityVendor CountryVendor VAT IDVAT No ExtractedVat No. of the vendor sending the invoiceVendor IBANIBAN of the vendor, if multiple values are available and recognized please select the main oneIBAN ExtractedVendor PO BoxVendor PhoneVendor EmailVendor Web Address <p>Please Note that some fields might have limitations like limited amount of character. These limitation differ between the single ERP systems and potential issues while sending the data are not caused by the KV\u00b2 Plugin.</p>","tags":["KV\u00b2","Extracted Fields"]},{"location":"kv2/enable-feedback-function/","title":"Enable Feedback Function","text":"<p>This documentation should explain how to enable the Feedback Function within the Ephesoft Plugins.</p> <p>The Feedback Function allows the clients to send Feedback to each single Test, directly while performing the Test. Feedback is created and sent during the validation process. For each \u201cValidation\u201d where user enters Feedback we have a ticket created automatically in our Ticket system Zammad. The Ticket contains information about the result (Feedback Type), Reporter Email Address and Feedback (Textfield) which are set by tester during validation, as well as a copy of the tested document, which is automatically linked to the ticket.</p> <p>Feedback Function set up and configured within the Batch Class and visible to the clients on the Validation UI of Ephesoft in Tab \"5 Feedback\".</p> <p></p>","tags":["Ephesoft Plugins","Help","Feedback"]},{"location":"kv2/enable-feedback-function/#steps-to-enable-feedback","title":"Steps to Enable Feedback:","text":"<p>Download the Feedback FieldTypes from below or go to any Batch Class where Feedback is already enabled to get them from there. If you download from here you can skip Step 1 explained below.</p> <p>INVOICE_DE_FieldTypesDownload</p> <p>Step 1: Get Feedback Fields zip folder Go to Batch Class where Feedback is setup, open \"Index Fields\" and navigate to last page in order to see the Feedback fields (which are the last four: FEEDBACK_TYPE, FILE_ID, FEEDBACK_EMAIL, FEEDBACK_DESCRIPTION).</p> <p>Select the four last fields and click Export, to download it to your machine.</p> <p></p> <p>Step 2: Import to (other) Document Types Once you have the Feedback Fields zip folder stored your machine you can import it to any document type in your Batch Class where you like to have it available. Simply Drag &amp; Drop the zip file to \"Index Fields\" folder of the single document types.</p> <p></p> <p>NOTE: This step must be done/repeated for each Document Type!</p>","tags":["Ephesoft Plugins","Help","Feedback"]},{"location":"kv2/getting-started/","title":"Getting Started","text":"<p>Welcome to KV\u00b2 Plugin for Ephesoft Transact!</p> <p>The KV\u00b2 Plugin solution is a cloud-based repository which grants the customer access to a pool of extraction rules for the header and footer fields of a document, in particular invoices. The system is able to learn new extraction rules every time a document is uploaded, validated and exported in Ephesoft Transact.</p> <p>One time installed, the solution can be used and trained from day one, with no need to configure the batch class for extraction rules.</p> <p>The main source of input, in order to fill the KV2 repository with extraction rules, is the usage of the plugin by the users, incl. the updates conducted by Polydocs GmbH. This means that every time a business trains the IDM Capture -Ephesoft software with a new extraction rule, this rule will be made available for all users of the KV\u00b2 Plugin.</p> <p></p>","tags":["KV\u00b2","Plugin","Ephesoft","Digitizing documents"]},{"location":"kv2/getting-started/#which-data-do-we-check-and-extract","title":"Which Data do we check and extract?","text":"<p>The default version of KV\u00b2 Plugin identifies and extracts following 10 header and footer fields: (NOTE: adding / removing fields can be done via enhancement request)</p> <ul> <li>Invoice number</li> <li>Invoice date</li> <li>Delivery date</li> <li>Order number</li> <li>Terms of payment</li> <li>Net amount</li> <li>Value added tax</li> <li>Gross amount</li> <li>IBAN</li> <li>VAT number</li> </ul>","tags":["KV\u00b2","Plugin","Ephesoft","Digitizing documents"]},{"location":"kv2/how-to-deal-with-different-vat-amounts/","title":"How to deal with different VAT amounts","text":"","tags":["KV\u00b2","Plugin","Ephesoft","VAT"]},{"location":"kv2/how-to-deal-with-different-vat-amounts/#if-you-have-an-invoice-with-two-different-vat-amounts-teach-them-as-follows","title":"If you have an invoice with two different VAT amounts, teach them as follows:","text":"<ol> <li>Invoice Details: Add the total amount in the corresponding field Total Amount. Leave Total Net Amount and Total VAT Amount blank.</li> </ol> <p>2. Calculation Details: Add the higher Tax Rate into field Tax Rate Full and the lower Rate into Tax Rate Reduced. The other fields remain blank.</p> <p></p> <p>3. After validating and exporting the Batch-ID from 1st upload after the 2nd upload of document the extracted fields are filled with the following values. The two Net amounts as well as the VAT amounts are automatically added together.</p> <p></p>","tags":["KV\u00b2","Plugin","Ephesoft","VAT"]},{"location":"kv2/how-to-deal-with-different-vat-amounts/#if-you-have-an-invoice-with-0-vat-amount-teach-them-as-follows","title":"If you have an invoice with 0 VAT amount, teach them as follows:","text":"<ol> <li>Invoice Details: Add the total amount in the corresponding field Total Amount. Leave Total Net Amount and Total VAT Amount blank.</li> </ol> <p>2. Calculation Details: Just add 0 into field Tax Rate Free manually, choose Invoice Total for field Net Amount Free an also manually enter 0 in field Tax Amount Free. The other fields remain blank.</p> <p></p> <p>Most of the Tax Rate Free Invoices don't have either VAT nor IBAN. So these fields stay blank as well. In such cases, we will have VENDOR_ID for the identification of the document.</p> <p>3. After validating and exporting the Batch-ID from 1st upload after the 2nd upload of document the extracted fields are filled with the following values.</p> <p>------ MISSING -------</p>","tags":["KV\u00b2","Plugin","Ephesoft","VAT"]},{"location":"kv2/how-to-delete-a-kv2-plugin-rule-from-the-database/","title":"How to delete a KV\u00b2Plugin rule from the Database","text":"<p>If you implemented and saved a wrong rule just don't worry! It's easy to delete it only with one command line through Ephesoft from the database!</p> <p></p> <p>Just type /c in the field that you don't want anymore.</p> <p></p> <p></p>","tags":["KV\u00b2","Plugin","Ephesoft","delete rules","Database"]},{"location":"kv2/installation/","title":"Installation & Config","text":"","tags":["KV\u00b2","Plugin","Ephesoft","Installation","Configuration"]},{"location":"kv2/installation/#how-to-install-configure-kv2-plugin","title":"How to install &amp; configure KV\u00b2 Plugin","text":"<p>KV\u00b2 Plugin is installed directly in Ephesoft Transact. The installation process is same for instances set up in Cloud or On Premise.</p>","tags":["KV\u00b2","Plugin","Ephesoft","Installation","Configuration"]},{"location":"kv2/installation/#prerequisites","title":"Prerequisites","text":"<ul> <li>Download the KV\u00b2 Plugin from here Note: KV\u00b2 Plugin consist of two zip files!</li> </ul> <ul> <li>You must have Administration rights in Ephesoft Transact.</li> <li>You must have set up working Batch Class or install Polydocs GmbH default Batch Class for Plugin usage if no Batch Class is set up in your Ephesoft System, yet. (Contact us to get the Polydocs GmbH default Batch Class)</li> </ul>","tags":["KV\u00b2","Plugin","Ephesoft","Installation","Configuration"]},{"location":"kv2/installation/#installation","title":"Installation","text":"<p>Step 0: Access your Infor OS and open IDM Capture in the menu on the top left.</p> <p></p>","tags":["KV\u00b2","Plugin","Ephesoft","Installation","Configuration"]},{"location":"kv2/installation/#step-1-open-your-ephesoft-transact-system","title":"Step 1: Open your Ephesoft Transact system","text":"","tags":["KV\u00b2","Plugin","Ephesoft","Installation","Configuration"]},{"location":"kv2/installation/#step-2-as-an-admin-please-click-into-the-administrator-section-and-select-eg-batch-class-management-open-the-menu-bar-on-the-left-and-click-system-configuration","title":"Step 2: As an Admin please click into the Administrator section and select eg. \"Batch Class Management\". Open the menu bar on the left and click \"System Configuration\".","text":"","tags":["KV\u00b2","Plugin","Ephesoft","Installation","Configuration"]},{"location":"kv2/installation/#step-3-open-workflow-management","title":"Step 3: Open Workflow Management","text":"<p>Drag &amp; Drop or upload both plugin zip files into the \"Import Plugin\" area to auto-install the plugin.</p> <p>Note: Make sure that file name is exactly \"fellowkv2exportplugin.zip\" / \"fellowkv2extractplugin.zip\" and that the files are not renamed (eg by downloading multiple times) as Ephesoft cannot recognize files with another name.</p> <p></p> <p>Make sure that the installation was successful by checking the list under Workflow Management if the 2 new plugins are listed (sample below).</p> <p></p> <p>The Installation part of the plugin is now done and it can be associated to a Batch Class and configured.</p>","tags":["KV\u00b2","Plugin","Ephesoft","Installation","Configuration"]},{"location":"kv2/installation/#association-to-batch-class-configuration","title":"Association to Batch Class &amp; Configuration","text":"","tags":["KV\u00b2","Plugin","Ephesoft","Installation","Configuration"]},{"location":"kv2/installation/#step-1-open-the-menu-bar-on-the-left-and-click-batch-class-management-and-open-the-batch-class-in-which-the-plugin-should-run","title":"Step 1: Open the menu bar on the left and click \"Batch Class Management\" and open the Batch Class in which the plugin should run","text":"","tags":["KV\u00b2","Plugin","Ephesoft","Installation","Configuration"]},{"location":"kv2/installation/#step-2-associate-extraction-module-of-the-plugin-fellow_kv2_extract","title":"Step 2: associate Extraction Module of the Plugin (FELLOW_KV2_EXTRACT)","text":"<p>Click Modules and then Extraction on left side of Batch Class Configuration Screen. It will show all the Extraction modules configured for this Batch Class. Find FELLOW_KV2_EXTRACT in \"Associated Plugins\" column and move it to \"Selected Plugins\" by click the right arrow button as shown in picture below.</p> <p></p> <p>IMPORTANT: In the \"Selected Plugins\" column highlight the plugin and slide the plugin \"FELLOW_KV2_EXTRACT\" to be above \"FUZZYDB\" with the arrow pointing upwards, click \"Apply\" and then click \"Deploy\" to activate your changes.</p> <p></p>","tags":["KV\u00b2","Plugin","Ephesoft","Installation","Configuration"]},{"location":"kv2/installation/#step-3-configure-extraction-module-of-the-plugin-fellow_kv2_extract","title":"Step 3: Configure Extraction Module of the Plugin (FELLOW_KV2_EXTRACT)","text":"<p>Expand the \"Extraction\" folder in the left menu and select the newly added FELLOW_KV2_EXTRACT module.</p> <p></p> <p>Now set up Config details as described below and then click \"Apply\" and \"Deploy\"</p> FieldValueDescriptionKV2 Extraction Enabled (Version:1.0.3):*TrueHere you can see the version number of the installed plugin and set value \"True\" for plugin activationEnabled DLF List (Separated by | symbol):*INVOICE_NUMBER|INVOICE_DATE|PURCHASE_ORDER|DELIVERY_DATE|PAYMENT_TERMS|TOTAL_AMOUNT|TAX_RATE|NET_AMOUNT|TAX_AMOUNT|TAX_RATE_2|NET_AMOUNT_2|TAX_AMOUNT_2|TAX_RATE_3|NET_AMOUNT_3|TAX_AMOUNT_3|VAT_NO_EXTRACTED|IBAN_EXTRACTEDList of all Index fields that should be validated, written in upper cases to reflect Ephesoft field names, separated by pipe character (\"|\")Key Values DLF Names (Separated by | symbol):*VAT_NO_EXTRACTED|IBAN_EXTRACTED|VENDOR_IDList of the Key ValuesDLF Value Overwrite Mode:select one of following possibilities:- Do Not Overwrite Populated DLFs- Always Overwrite Populated DLFs- Overwrite Populated DLFs With Confidence Below ThresholdSelect Overwrite or Do Not overwrite. The threshold option will overwrite only if the confidencecalculated by Transact of a field is lower than the value belowDLF Overwrite Confidence Threshold:*50This property is only used for the Threshold DLF OverwriteMode. Otherwise, enter 0.DLF Force Review Threshold:*50Auto rules will be assigned a confidence based on AutoConfidence Values assignment logic. If the confidence is below the value entered here, the DLF will bemarked for operator review.KV2 Webservice URL:*https://cloudintegration.eu/api/fellowkv/extract/get_tfidf_ruleslink to the Fellow cloud repositoryFellow Webservice API Key:*-- provided by Fellow Consulting per subscription --personal API key to connect to Fellow Cloud repository","tags":["KV\u00b2","Plugin","Ephesoft","Installation","Configuration"]},{"location":"kv2/installation/#step-4-associate-export-module-of-the-plugin-fellow_kv2_export","title":"Step 4: associate Export Module of the Plugin (FELLOW_KV2_EXPORT)","text":"<p>Click Modules and then Export on left side of Batch Class Configuration Screen. It will show all the Export modules configured for this Batch Class. Find FELLOW_KV2_EXPORT in \"Associated Plugins\" column and move it to \"Selected Plugins\" by click the right arrow button as shown in picture below.</p> <p></p> <p>IMPORTANT: In the \"Selected Plugins\" column highlight the plugin \"FELLOW_KV2_EXPORT\" and slide it to the top with the arrow pointing upwards, click \"Apply\" and then click \"Deploy\" to activate your changes.</p> <p></p>","tags":["KV\u00b2","Plugin","Ephesoft","Installation","Configuration"]},{"location":"kv2/installation/#step-5-configure-export-module-of-the-plugin-fellow_kv2_export","title":"Step 5: Configure Export Module of the Plugin (FELLOW_KV2_EXPORT)","text":"<p>Expand the \"Export\" folder in the left menu and select the newly added FELLOW_KV2_EXPORT module.</p> <p></p> <p>Now set up Config details as described below and then click \"Apply\" and \"Deploy\"</p> FieldValueDescriptionKV2 Export Enabled (Version:1.0.3):*TrueHere you can see the version number of the installed plugin and set value \"True\" for plugin activationEnabled DLF List (Separated by | symbol):*INVOICE_NUMBER|INVOICE_DATE|PURCHASE_ORDER|DELIVERY_DATE|PAYMENT_TERMS|TOTAL_AMOUNT|TAX_RATE|NET_AMOUNT|TAX_AMOUNT|TAX_RATE_2|NET_AMOUNT_2|TAX_AMOUNT_2|TAX_RATE_3|NET_AMOUNT_3|TAX_AMOUNT_3|VAT_NO_EXTRACTED|IBAN_EXTRACTEDList of all Index fields that should be validated, written in upper cases to reflect Ephesoft field names, separated by pipe character (\"|\")Key Values DLF Names (Separated by | symbol):*VAT_NO_EXTRACTED|IBAN_EXTRACTED|VENDOR_IDKV2 Webservice URL:*https://cloudintegration.eu/api/fellowkv/export/export_ruleslink to the Fellow cloud repositoryFellow Webservice API Key:*-- provided by Fellow Consulting per subscription --personal API key to connect to Fellow Cloud repository <p>The association and configuration part of the plugin is now done. Note that you have to re-start Transact server before you can start using the plugin.</p> <p>Step 6: Deactivate extraction rules for not needed index fields.</p> <p>In order to deactivate the extraction rules in every field you have to go through every document type. So, when you open the batch class you will see the following list:</p> <p></p> <p>Now, start from the top and go through every document type following exactly the same steps.</p> <p>As an example, let's start with document type INVOICE_DE. So, open the folder and you will see al index fields available.</p> <p></p> <p>Now, we can start with for instance the delivery date and you will need to deactivate the fields by checking off the box in the last column and clicking on \"Apply\" and \"Deploy\". It should look like this:</p> <p></p> <p>Please deactivate the rules for all index fields but CREDIT_NOTE, CURRENCY, IBAN_EXTRACTED, INVOICE and VAT_NO_EXTRACTED.</p> <p>Step 7: Import the feedback fields.</p> <p>Please use this zip file for the import:</p> <p>INVOICE_DE_FieldTypes-1Download</p> <p>Now go through every document type and use the box underneath for \"Import Index Field(s)\" to select or drag and drop the zip file:</p> <p></p>","tags":["KV\u00b2","Plugin","Ephesoft","Installation","Configuration"]},{"location":"kv2/installation/#final-step-8-re-start-transact-server","title":"FINAL Step 8: Re-start Transact Server","text":"<p>see Article ho to restart Transact</p>","tags":["KV\u00b2","Plugin","Ephesoft","Installation","Configuration"]},{"location":"kv2/kv2-tutorial/","title":"KV\u00b2 Tutorial","text":"","tags":["KV\u00b2","Tutorial","Plugin","Ephesoft"]},{"location":"kv2/kv2-tutorial/#prerequisites","title":"Prerequisites","text":"<p>To work with this tutorial you have to complete Installation &amp; Configuration Section for this Plugin.</p>","tags":["KV\u00b2","Tutorial","Plugin","Ephesoft"]},{"location":"kv2/kv2-tutorial/#how-to-use-kv2-plugin","title":"How To Use KV\u00b2 Plugin","text":"","tags":["KV\u00b2","Tutorial","Plugin","Ephesoft"]},{"location":"kv2/kv2-tutorial/#step-0-log-in","title":"Step 0: Log-in","text":"<ul> <li>log into the Ephesoft Transact Software with username and password</li> </ul> <ul> <li>After login you see the menu with two modules: Administrator &amp; Operator with their defined functions:</li> </ul> AdministratorOperatorBatch Class ManagementBatch ListBatch Instance ManagementReview ValidateFolder ManagementWeb ScannerSystem ConfigurationReport","tags":["KV\u00b2","Tutorial","Plugin","Ephesoft"]},{"location":"kv2/kv2-tutorial/#step-1-interface-application-of-the-fellowkv2-plugin","title":"Step 1: Interface application of the FellowKV2 Plugin","text":"<ul> <li>Upload your documents through the Operator Module in \u201cUpload Batch\u201d:</li> </ul> <ul> <li>Start the batch with the according batch class.</li> </ul> <ul> <li>Wait in the Administrator Module in \u201cBatch Instance Management\u201d for the batch to be processed and ready for validation.</li> </ul> <ul> <li>Select your Batch and in the list and click to open the batch in order to validate the header and footer fields:</li> </ul> <ul> <li>Now you will be redirected to a new window for validation. The document is displayed on the right side, the validation screen left to it. Here you can can check all the extracted fields and add/correct the values as well.</li> </ul> <ul> <li>Go through all fields clicking \"Tab\" button or by mouse and check the value. In case you notice a missing or wrong value you have 3 Options to set the correct value:<ul> <li>click into the particular field in the validation screen, then move your mouse over the document on the right and select the respective value by double click on it. The selected value will be marked yellow on the document and will appear in the validation field on the left (preferred - as this way you train on which position on a certain invoice you find the respective values)</li> <li>click into the particular field in the validation screen, then move your mouse over the document on the right and select the respective value by click right mouse, hold it while select the full value (it will be marked yellow) and confirm by click on right tab again. The selected value will be marked yellow on the document and will appear in the validation field on the left (preferred - as this way you train on which position on a certain invoice you find the respective values)</li> <li>Type the value manually to the validation cell.</li> <li>If a value is detected wrong or incomplete, please click in respective cell, clear the value and select the correct one in the document as explained above.</li> </ul> </li> </ul> <p>For fields you have corrected in the first run, you should see the value set correct and highlighted yellow on the document for the next invoice you run for this vendor.</p> <ul> <li>Now just add all the fields with the accurate data and validate the invoice in order for it to be exported.</li> </ul> <p></p> <p></p> <p></p> <p>With this process you are not only validating your document but also training\u00a0the plugin. With a one-time human assistance validating and exporting the documents, new extraction rules are created. For the next run for that type of document no adaptation or configuration of the batch class is needed and the plugin will recognize values which have been missing in the first run.</p>","tags":["KV\u00b2","Tutorial","Plugin","Ephesoft"]},{"location":"kv2/kv2-tutorial/#usage-of-fellows-feedback-and-support-function","title":"Usage of Fellows Feedback and Support Function","text":"<p>KV\u00b2 Plugin comes with an integrated Feedback Function where you can send us Support to each Document Validation. The Feedback Function can be found in tab #5 of the Ephesoft Validation UI (it is usually the last tab).</p> <p></p> <p>If you want to send us some feedback you just need to move to this tab and fill out the three fields on this tab:</p> <ul> <li>Feedback Type -&gt; here you can choose from list below.     NOTE that support tickets will be created only if Feedback types is different than \"Perfect\"<ul> <li>--NONE--</li> <li>Perfect</li> <li>Good</li> <li>Bad</li> <li>Nothing is working</li> </ul> </li> <li>Reporter Email Address -&gt; this is your email address which we use for our reply</li> <li>Feedback -&gt; this is a textfield where you can send us your detail feedback, like which value showed a problem or was not detected correct</li> </ul> <p>If fields are filled the feedback is created during the validation process and sent directly to our Support Tool and we can work on the case.</p> <p></p>","tags":["KV\u00b2","Tutorial","Plugin","Ephesoft"]},{"location":"kv2/limitations-for-fellow-kv2-plugin/","title":"Limitations of KV\u00b2 Plugin","text":"<p>Version: 1.0.11</p> <p>The KV\u00b2 Plugin faces some small limitations for the correct extraction of header and footer fields. In this documentation you will find a list with the main limitations, the reason for it and the proposed \"solution\" for the user.</p>","tags":["KV\u00b2","Plugin","Ephesoft","Limitations"]},{"location":"kv2/limitations-for-fellow-kv2-plugin/#1-processing-of-multiple-pages","title":"1. Processing of multiple pages","text":"<p>Description of the limitation</p> <p>For this case we are going to use the example with invoices. The KV\u00b2 Plugin is capable of self-learning and training from different document types, which also means that different supplier invoice templates are trained.</p> <p>The main issue displayed here is when a \"trained\" supplier has invoices fluctuating from one to multiple pages. The reason for that is because even if the supplier has been already \"trained\" by the user, the extraction might fail if the trained extraction rules are presented on another page. See process underneath:</p> <p></p> <p>a) The user has trained the supplier \"Banana\" with an invoice with just one page. That means that the extraction rules are going to be determined on that first page. Specially fields like other custom fields that might appear not on the first page are going to present a problem for other multiple pages examples.</p> <p></p> <p>b) The second scenario is when the same supplier \"Banana\" has send an invoice with more than just one page. Previously the extraction rules for the fields have been determined for page one. But, more specifically for additional custom fields, these are presented on a completely other page.</p> <p>Proposed solution for the user</p> <p>When presented with such a case the user has to take into account this limitation. This means the user will need to \"re-learn\" independently the second scenario (and future scenarios) again If further issues appear the user can always advise us with the available feedback function on the 5th tab (validation screen).</p>","tags":["KV\u00b2","Plugin","Ephesoft","Limitations"]},{"location":"kv2/restart-ephesoft-on-cloud/","title":"Restart Ephesoft on Cloud","text":"<p>This task must be performed by system Administrator. Go to your Ephesoft Cloud Configadmin page:</p> <p>https://XXXXXXX.ephesoft.cloud/configadmin/</p> <p></p> <p>Click on \"Restart Transact\" Note that restart process can take up to 5 minutes.</p> <p></p> <p>After Restart you can Logout again</p> <p></p>","tags":["KV\u00b2 Plugin","Restart","Ephesoft","Transact","Cloud"]},{"location":"kv2/restart-ephesoft-on-premise/","title":"Restart Ephesoft On Premise","text":"<p>To restart Ephesoft Transact on Premise open the Task Manager of the Ephesoft server machine.</p> <p></p> <p>Select the service \"EphesoftTransact\", make a right click and select \"Restart\" from the menu. This will restart your service, which can take up to 5 minutes.</p> <p></p>","tags":["KV\u00b2 Plugin","Restart","Ephesoft","On Prem"]},{"location":"kv2/training-kv2-for-table-extraction/","title":"Training KV2 for Table Extraction","text":"<p>The function explained in this documentation is used for extracting the table from all types of documents (Invoices, Contracts, Forms, Medical Prescriptions etc.). The extraction of data from tables can be achieved by following the steps described below:</p> <p>1. Login to your account with your Email and Password.</p> <p>2. Import the desired document on your dashboard.</p> <p>3. Click on the document to Open it in the edit screen.</p> <p>4. Scroll down to\u00a0Line Items (located at the very bottom right of the available fields).</p> <p>5. Click on the table icon inside the textbox</p> <p></p> <p>TIP: If no table extraction is to be performed in the selected document, this can be set with the symbol next to \"Line Items\".</p> <p></p> <p>6. The following screen will be displayed.</p> <p></p> <p>The following options and functions are now available (displayed on the left half of the screen):</p> <ul> <li>Zoom in: as the name suggests it allows the user to zoom in on the document</li> </ul> <p></p> <ul> <li>Zoom out: as the name suggests it allows the user to zoom out on the document</li> </ul> <p></p> <ul> <li>Autodetect Table: This function is for automatically detecting the table in the document \u2013 should the plugin be unable to detect the table it has to be selected manually.</li> </ul> <p></p> <ul> <li>Select Table: This function allows the user to manually select the desired table via drag-selection.</li> </ul> <p></p> <p>The Table can also be adjusted here (for example the height and width).</p> <p></p> <p>adjust and save</p> <ul> <li>Add Columns: this function allows the user to manually add guidelines to help the system determine the correct columns (blue lines) as displayed on the following screenshot</li> </ul> <p></p> <p></p> <p>Once these guidelines are added additional functions are available.</p> <p></p> <p>The first one allows the user to delete all lines while the second one extends these guidelines to all pages of the document.</p> <p>Is only one line selected, a delete button will be added, and it allows the user to delete the selected line.</p> <p></p> <ul> <li>Save Changes: allows the user to save any changes made.</li> </ul> <p></p> <p>TIP: Is the table marking wrong and should be deleted, select the marking of said table \u2013 a red symbol will appear allowing the removal of the marking.</p> <p></p> <p>7) Once the changes are saved the plugin will automatically extract the found data and display it on a table to the right.</p> <p></p> <p>The available functions on this side of the screen are as follows:</p> <ul> <li>Revert Changes: Allows the user to undo any changes.</li> </ul> <p></p> <ul> <li>Advanced Settings: This function allows for additional settings to extract the data further correctly.</li> </ul> <p></p> <p>Once selected the following screen will pop up:</p> <p></p> <p>\u201cHeader row count\u201d defines how many rows are part of the header for example if the header has two rows the corresponding number (2 in this case) must be selected.</p> <p>\u201cMove Extra Row to desc\u201d</p> <ul> <li>Add new line: Adds an additional line at the bottom of the table.</li> </ul> <p></p> <ul> <li>Delete all extracted data: Deletes all extracted data from the table.</li> </ul> <p></p> <ul> <li>Block table extraction for this supplier: This must be selected if no table should be extracted from this supplier.</li> </ul> <p></p> <p>Every column name must be assigned correctly for example \u201cPOS.NO.\u201d corresponds to \u201cPosition\u201d.</p> <p>This must be done for all column names \u2013 otherwise it will produce an error!</p> <p></p> <p>Next select the three dots next to the position to which the content is oriented for example the position number.</p> <p></p> <p>Beside the possibility to delete (via the trashcan symbol) the row (which of course can be found in all other columns as well) the option \"Group Rows\" is important here.</p> <p></p> <p>This option groups all the date corresponding to the position.</p> <p>Should the system recognize empty or undesirable data delete them via the purple \u201cX\u201d on the left side of the table.</p> <p></p> <p>Once the table has been set up as desired, the settings can be saved by clicking on \"Save\". It will then immediately transport the user back to the dashboard.</p> <p></p> <p>Alternatively, the document can be exported immediately by clicking on \"Confirm &amp; Export\".</p> <p></p>","tags":["KV\u00b2","Plugin","Ephesoft","Training","Table Extraction"]},{"location":"ocr/detect-inside-pages/","title":"Detect inside pages","text":"<p>In this part of the API, we are able to detect and extract special parts of your document. The section is split up in three different parts:</p> <p></p>","tags":["OCR","API"]},{"location":"ocr/detect-inside-pages/#detect-blank-pages","title":"Detect blank pages","text":"<p>TBD</p>","tags":["OCR","API"]},{"location":"ocr/detect-inside-pages/#detect-language","title":"Detect language","text":"<p>This functionality allows you to put in a text of your choice and our API will recognize the language it is written in.</p>","tags":["OCR","API"]},{"location":"ocr/detect-inside-pages/#done","title":"Done!","text":"","tags":["OCR","API"]},{"location":"ocr/detect-inside-pages/#detect-tables","title":"Detect tables","text":"<p>We are now diving into a table extraction part of the API, which will automatically extract metadata out of your document.</p> <p>To start off, in this section the API once again allows you to have your results shown in a response body or sent to you via E-Mail. If you choose to have it sent to you via E-Mail, just type n your adress at the start of the section.</p> <p>Now you are asked to load up your document before choosing parameters again.</p>","tags":["OCR","API"]},{"location":"ocr/detect-inside-pages/#functionalities-and-parameters","title":"Functionalities and Parameters","text":"<p>Report (true/false) allows you to choose whether or not to receive an accuracy report.</p> <p></p> <p>Example for an accuracy report</p> <p>Grid and contour (true/false): This parameters decides on whether or not you will receive the document in a base64 file on top of your extracted data. This might be helpful, for the general usage it is not necessary though.</p> <p>Mode (stream/lattice) decides on the way the table is extracted. We recommend to leave this on auto, since both ways should extract the same metadata.</p> <p>Format (Excel, Json, HTML) lets you choose the format you want your metadata extracted in.</p>","tags":["OCR","API"]},{"location":"ocr/detect-inside-pages/#execute","title":"Execute","text":"<p>After hitting execute, you will receive your extracted data in code format like shown underneath, or you will have the metadata sent to you via E-Mail:</p> <p></p>","tags":["OCR","API"]},{"location":"ocr/detect-inside-pages/#done_1","title":"Done!","text":"","tags":["OCR","API"]},{"location":"ocr/get-started/","title":"Getting Started","text":"<p>Welcome to the OCR Engine API!</p> <p>The purpose of our OCR Engine is the transformation of regular pdf documents into OCR'd PDF documents.</p> <p>Optical Character Recognition (OCR) describes the conversion of handwritten, typed or printed documents into machine-encoded text. That allows you to make any type of unstructured content searchable and readable.</p> <p>In this case we use the technology to enable Ephesoft Transact and our PlugIns to extract Metadata in a more efficient and intelligent way.</p> <p></p> <p>Our API will be available for you and in the following documentation, we will elaborate its functionalities, the installation process and everything you need to know about it.</p> <p>Thank you for choosing our Services!</p>","tags":["OCR","extract","metadata"]},{"location":"ocr/installation-config/","title":"Installation & Config","text":"<p>(TBD)</p>","tags":["OCR\u00b2","Installation","Configuration","OCR API","Ephesoft Transact"]},{"location":"ocr/installation-config/#how-to-install-configure-ocr-api","title":"How to install &amp; configure OCR API","text":"<p>OCR API is installed directly in Ephesoft Transact. The installation process is same for instances set up in Cloud or On Premise.</p>","tags":["OCR\u00b2","Installation","Configuration","OCR API","Ephesoft Transact"]},{"location":"ocr/installation-config/#prerequisites","title":"Prerequisites","text":"<ul> <li>You must have Administration rights in Ephesoft Transact.</li> <li>You must have set up working Batch Class or install Polydocs GmbH default Batch Class for Plugin usage if no Batch Class is set up in your Ephesoft System, yet. (Contact us to get the Polydocs GmbH default Batch Class)</li> </ul>","tags":["OCR\u00b2","Installation","Configuration","OCR API","Ephesoft Transact"]},{"location":"ocr/merge-split-pdf/","title":"Merge/Split PDF","text":"<p>The last to functionalities and sections of the API allow you to either merge or split PDF documents of your choice.</p>","tags":["API","PDF"]},{"location":"ocr/merge-split-pdf/#merge-pdf","title":"Merge PDF","text":"<p>(TBD)</p>","tags":["API","PDF"]},{"location":"ocr/merge-split-pdf/#split-pdf","title":"Split PDF","text":"<p>This part is very easy to use. Just upload your document and choose whether you would like the result sent to you by E-Mail or not.</p> <p></p>","tags":["API","PDF"]},{"location":"ocr/merge-split-pdf/#done","title":"Done!","text":"","tags":["API","PDF"]},{"location":"ocr/ocr-api/","title":"OCR API","text":"<p>TBD</p>","tags":["OCR","API"]},{"location":"ocr/ocrserverprocess/","title":"OCR Server Process","text":"<p>This Process step is designed for the upload of your pdf document. When you open it up, you are asked to post and then to \"try it out\" in the top right corner.</p> <p></p> <p>After doing so, you are able to choose different parameters for the OCR transformation. These parameters define the quality of our server as they indicate various functionalities of it.</p>","tags":["OCR","Server"]},{"location":"ocr/ocrserverprocess/#parameters","title":"Parameters","text":"<p>The parameters show the name, the description and a field for either true/false, a number to be typed in, or a three digit langauage code to be chosen.</p> <p>We will now explain the various parameters:</p> <p>JPG quality refers to the JPEG Compression Setting, which is by default set to 1.</p> <p>Optimize refers to the general Compression Setting, which is by default set to 1.</p> <p>PDFa allows you to choose between a pdf or a pdf format for the transformed document you will receive.</p> <p>Language allows you to type in a three digit language code for the language your document is written in. This is important for our server to understand your document.</p> <p>Deskew (true/false): Decide whether you want your document deskewed or not.</p> <p>Clean (true/false): Decide whether you want your document cleaned before transformation or not.</p> <p>Final (true/false): Decide whether you want your document cleaned after transformation or not.</p> <p>Background (true/false): Decide whether you want background removed or not.</p> <p>Rotate (true/false): Decide whether you want pages to be rotated.</p> <p>Force (true/false): Decide whether you want OCR to be forced, even if it will not be perfect.</p> <p>Blank_pages (true/false): Decide whether you want blank pages to be removed out of your document.</p> <p>Skip_Text pages (true/false): Decide whether you want unnecessary text to be skipped.</p>","tags":["OCR","Server"]},{"location":"ocr/ocrserverprocess/#how-do-you-want-to-receive-your-document","title":"How do you want to receive your document?","text":"<p>Email</p> <p>If you want your transformed document sent to you by E-Mail, you can type in your Email Adress in here. If not you will receive a download link, which we will elaborate in a moment.</p>","tags":["OCR","Server"]},{"location":"ocr/ocrserverprocess/#upload-your-document","title":"Upload your document","text":"<p>choose your file</p> <p>You are now asked to upload the document, that needs to be transformed. Please upload a PDF file.</p>","tags":["OCR","Server"]},{"location":"ocr/ocrserverprocess/#execute","title":"Execute","text":"<p>After that, please hit EXECUTE. The following screen will be visible for you.</p> <p></p> <p>You are now supposed to copy the download_id, if you have not chosen to get the document sent to you via E-Mail.</p> <p>Just copy this download_id as well as the filename and paste it under the next row of the whole Server called \"Download with Link\". After that, please press execute.</p> <p></p>","tags":["OCR","Server"]},{"location":"ocr/ocrserverprocess/#download-file","title":"Download file","text":"<p>You are now able to download the file or even copy the Request URL and type it into a new tab.</p>","tags":["OCR","Server"]},{"location":"ocr/ocrserverprocess/#done","title":"Done!","text":"<p>Your document is now OCR'd!</p>","tags":["OCR","Server"]},{"location":"ocr/overview/","title":"Overview","text":"<p>This part will give you an overview over the OCR server API we are offering connected to the cloudintegration.eu platform.</p> <p></p> <p></p> <p>The OCR Server consists of 5 different parts. The general OCR Server Process connected to the Download Function with Link, a Detect pages function, as well as a merge and split PDF function.</p> <p>In this documentation we will go over all of these functionalities and explain them in detail. The main reason for this API is to transform regular documents into OCR'd ones.</p> <p>OCR stands for optical character recognition and transforms a regular pdf file into a machine encoded text file, so that meta data can be extracted. This API takes on the transformation-part of the process.</p> <p>In the API we furthermore offer detect and merge functions, which we will explain later on.</p>","tags":["OCR Server","API","transform regular documents into OCR'd ones"]},{"location":"security/datensicherung/","title":"Data security","text":"","tags":["DOC\u00b2","Data security"]},{"location":"security/datensicherung/#uploaded-files","title":"Uploaded files","text":"<p>All of the uploaded files are stored in an object storage hosted by our Cloud Provider. Access is restricted and only possible if you pass the correct key and secret key.</p>","tags":["DOC\u00b2","Data security"]},{"location":"security/datensicherung/#database","title":"Database","text":"<p>We run daily database backups that are then saved for seven days each. The communication between the database and the servers is run only via https. Stored passwords are encrypted in a way that, even with access to the database, cannot be read.</p>","tags":["DOC\u00b2","Data security"]},{"location":"security/datensicherung/#server-communication","title":"Server Communication","text":"<p>All communication is done via https, every non https request is redirected to https.</p>","tags":["DOC\u00b2","Data security"]},{"location":"security/privileges/","title":"Admins","text":"<p>The first user of DOC\u00b2 is the default organization admin.</p>","tags":["DOC\u00b2","Groups","Privileges"]},{"location":"security/privileges/#privileges","title":"Privileges","text":"<p>Organisation admins are able to access the settings in DOC\u00b2. They are allowed to configure:</p> <ul> <li>document types</li> <li>general settings</li> <li>ocr settings</li> <li>company information</li> <li>modules</li> <li>users</li> <li>groups &amp; roles</li> <li>import methods</li> <li>export settings</li> <li>filter regexes</li> <li>master data validation</li> <li>SSO settings</li> </ul>","tags":["DOC\u00b2","Groups","Privileges"]},{"location":"security/privileges/#user-management","title":"User management","text":"<p>Admins can add new users to the organization. They can also grant a user admin privileges, there is no limit on how many users are allowed to be admins. Every admin can revoke a user's admin rights.</p>","tags":["DOC\u00b2","Groups","Privileges"]},{"location":"security/privileges/#groups","title":"Groups","text":"","tags":["DOC\u00b2","Groups","Privileges"]},{"location":"security/privileges/#what-is-a-group","title":"What is a Group?","text":"<p>A group is a set of users that can be granted specific permissions for one or multiple document types. The groups can be created, changed and deleted by the organization admins. Every organization admin has the rights to do this. If no group is configured all privileges are granted to the users within the organization.</p>","tags":["DOC\u00b2","Groups","Privileges"]},{"location":"security/privileges/#groups-and-priveleges-management","title":"Groups and Priveleges management","text":"<p>Groups are managed in DOC\u00b2 under Settings -&gt; Groups &amp; Roles</p>","tags":["DOC\u00b2","Groups","Privileges"]},{"location":"security/privileges/#doc2-group-user-mangement","title":"DOC\u00b2 group user mangement","text":"<p>The Organization admin can add users to the groups. </p>","tags":["DOC\u00b2","Groups","Privileges"]},{"location":"security/privileges/#doc2-group-permission-mangement","title":"DOC\u00b2 group permission mangement","text":"<p>The Organization admin can set the group permissions. </p>","tags":["DOC\u00b2","Groups","Privileges"]},{"location":"security/privileges/#group-permissions","title":"Group permissions","text":"<p>When creating a group, you can specify what privileges the users have for each document type.</p> <p>The different types of Privileges are:</p> <ul> <li>view</li> <li>update</li> <li>delete</li> <li>approve</li> <li>second approval</li> </ul>","tags":["DOC\u00b2","Groups","Privileges"]},{"location":"security/privileges/#view","title":"View","text":"<p>If a user doesn't have the view permission, the document type will not be shown to him on the dashboard.</p>","tags":["DOC\u00b2","Groups","Privileges"]},{"location":"security/privileges/#update","title":"Update","text":"<p>Exporting documents is only possible if the user has the update permission.</p>","tags":["DOC\u00b2","Groups","Privileges"]},{"location":"security/privileges/#delete","title":"Delete","text":"<p>Permission to delete documents</p>","tags":["DOC\u00b2","Groups","Privileges"]},{"location":"security/privileges/#approve","title":"Approve","text":"<p>Permission to approve documents</p>","tags":["DOC\u00b2","Groups","Privileges"]},{"location":"security/privileges/#second-approval","title":"Second Approval","text":"<p>Permission to grant the second approval if configured</p>","tags":["DOC\u00b2","Groups","Privileges"]},{"location":"te2/enable-feedback-function/","title":"Enable Feedback Function","text":"<p>This documentation should explain how to enable the Feedback Function within the Ephesoft Plugins.</p> <p>The Feedback Function allows the clients to send Feedback to each single Test, directly while performing the Test. Feedback is created and sent during the validation process. For each \u201cValidation\u201d where user enters Feedback we have a ticket created automatically in our Ticket system Zammad. The Ticket contains information about the result (Feedback Type), Reporter Email Address and Feedback (Textfield) which are set by tester during validation, as well as a copy of the tested document, which is automatically linked to the ticket.</p> <p>Feedback Function set up and configured within the Batch Class and visible to the clients on the Validation UI of Ephesoft in Tab \"5 Feedback\".</p> <p></p>","tags":["Ephesoft Plugins","Help","Feedback"]},{"location":"te2/enable-feedback-function/#steps-to-enable-feedback","title":"Steps to Enable Feedback:","text":"<p>Download the Feedback FieldTypes from below or go to any Batch Class where Feedback is already enabled to get them from there. If you download from here you can skip Step 1 explained below.</p> <p>INVOICE_DE_FieldTypesDownload</p> <p>Step 1: Get Feedback Fields zip folder Go to Batch Class where Feedback is setup, open \"Index Fields\" and navigate to last page in order to see the Feedback fields (which are the last four: FEEDBACK_TYPE, FILE_ID, FEEDBACK_EMAIL, FEEDBACK_DESCRIPTION).</p> <p>Select the four last fields and click Export, to download it to your machine.</p> <p></p> <p>Step 2: Import to (other) Document Types Once you have the Feedback Fields zip folder stored your machine you can import it to any document type in your Batch Class where you like to have it available. Simply Drag &amp; Drop the zip file to \"Index Fields\" folder of the single document types.</p> <p></p> <p>NOTE: This step must be done/repeated for each Document Type!</p>","tags":["Ephesoft Plugins","Help","Feedback"]},{"location":"te2/ephesoft-external-application/","title":"Ephesoft - External Application","text":"<p>Upload your document in Ephesoft</p> <p>as soon as the document is Ready For Validation open the Batch Id</p> <p></p> <p>in the next step, select More from the upper green boxes, then External Application and finally DOC\u00b2</p> <p></p> <p>A popup window opens with DOC\u00b2 and your document from the Batch Id.</p> <p></p> <p>If you have reached this point, you can continue with the detailed description (with videos) here (starting from point 6.)</p> <p>Or you can take the shortcut with the instructions here:</p> <p></p> <p>Press Autodetect Tables.</p> <p>If no table is found choose the Edit icon</p> <p></p> <p></p> <p>Select the table</p> <p></p> <p>Click on Add Column</p> <p></p> <p>Map the columns accordingly and click on Save Changes button</p> <p>The extracted data with the table Headers and data will be shown in the section on the right.</p> <p>Select the correct name of the columns so that the exclamation marks disappear and press the Save button.</p> <ul> <li> <p></p> </li> <li> <p></p> </li> <li> <p></p> </li> <li> <p></p> </li> <li> <p></p> </li> <li> <p></p> </li> <li> <p></p> </li> <li> <p></p> </li> </ul> <p></p> <p>We can achieve extraction of Table data in this way easily.</p> <p>When you go back to Ephesoft and open the table, you will see the edited table as follows:</p> <p></p>","tags":["TE\u00b2","Plugin","Ephesoft","Training","Table Extraction","DOC\u00b2","External Application"]},{"location":"te2/fellow-te2-plugin/","title":"TE\u00b2 Plugin","text":"<p>Welcome to TE\u00b2 Plugin for Ephesoft Transact!</p> <p>The TE\u00b2 Plugin is a cloud-based repository solution for Ephesoft Transact software which is focused on extracting autonomously and automatically the line items in a table.</p> <p>Through the cloud-based Polydocs GmbH Table Extraction Repository, you access a pool of rules from all users of the plugin.</p> <p></p> <p>This solution works is by analyzing two factors. The first one, is the detection of the location of the table in the document (1). Second is to map the results/data with the standard schema in order to be properly extracted to the ERP system (2).</p> <p>It is important that the column caption is recognized and can be assigned to the correct values. The \u201caccuracy\u201d becomes higher, the more synonyms are assigned to a column caption.</p> <p>(1) The recognition function detects where the table starts and ends. The mapping of the data can be conducted across all tables.</p> <p></p> <p>(2) The standard schema for mapping columns is configured by PolyDocs GmbH i. Gr. That means that standard columns like position, description, amount, etc. are included in this mapping file:</p> <ul> <li>Position</li> <li>Item number</li> <li>Description</li> <li>Quantity</li> <li>Unit price</li> <li>Total amount</li> </ul>","tags":["TE\u00b2","Plugin","Ephesoft","Table Extraction","Repository"]},{"location":"te2/fellowte2-tutorial/","title":"TE\u00b2 Tutorial","text":"","tags":["TE\u00b2","Plugin","Ephesoft","Table Extraction"]},{"location":"te2/fellowte2-tutorial/#prerequisites","title":"Prerequisites","text":"<p>To work with this tutorial you have to complete Installation &amp; Configuration Section for this Plugin.</p>","tags":["TE\u00b2","Plugin","Ephesoft","Table Extraction"]},{"location":"te2/fellowte2-tutorial/#how-to-use-kv2-plugin","title":"How To Use KV\u00b2 Plugin","text":"","tags":["TE\u00b2","Plugin","Ephesoft","Table Extraction"]},{"location":"te2/fellowte2-tutorial/#step-0-log-in","title":"Step 0: Log-in","text":"<ul> <li>log into the Ephesoft Transact Software with username and password</li> </ul> <ul> <li>After login you see the menu on the left side with two modules: Administrator &amp; Operator with their defined functions:</li> </ul> AdministratorOperatorBatch Class ManagementBatch ListBatch Instance ManagementReview ValidateFolder ManagementWeb ScannerSystem ConfigurationUpload New DocumentReport","tags":["TE\u00b2","Plugin","Ephesoft","Table Extraction"]},{"location":"te2/fellowte2-tutorial/#step-1-interface-application-of-the-fellowte2-plugin","title":"Step 1: Interface application of the FellowTE2 Plugin","text":"<ul> <li>Upload your documents through the Operator Module in \u201cUpload Batch\u201d:</li> </ul> <ul> <li>Start the batch with the according batch class.</li> </ul> <ul> <li>Wait in the Administrator Module in \u201cBatch Instance Management\u201d for the batch to be processed and ready for validation.</li> </ul> <ul> <li>Select your Batch and in the list and click to open the batch in order to validate the header and footer fields:</li> </ul> <ul> <li>Now you will be redirected to the Ephesoft Validation Window.     Besides the options Validate, Next Batch, Merge, Split and More you can find here the button to access the \"Table\" view.</li> </ul> <p>There is a default schema in place which is used by default and can handle most of the Invoice/ Table layouts. For some certain Invoice / Table layouts there are special (custom) layouts in place and certainly there could be more if there are any special needs within your Organisation.</p> <p>The default schema can recognize values listed in table below. If any field which is marked as required in the table below is missing, this row cannot be recognized as a valid row.</p> NameTypeRequiredPOSITIONstringfalseDESCRIPTIONstringtrueITEM_NUMBERstringfalseQUANTITYnumbertrueUNIT_PRICEcurrencytrueTOTAL_AMOUNTcurrencytruePURCHASE_ORDERstringfalse <p></p> <p>TE\u00b2 plugin backend intelligence is executing and optimizing the data/ table view which can then be validated or corrected by user if needed. Even if most tables are recognized and can be executed there are some limitations in the technology, meaning that certain kinds of tables cannot be recognized.</p> <p>The following characteristics are some reasons on why tables can not be extracted:</p> <ol> <li>Multi-line tables.</li> <li>Mixed separation of columns (grid and no grid mix).</li> <li>Table grid overlapping.</li> <li>Too much distance between the column headers and the actual lines.</li> </ol> <p>In any case, tables will be analysed by PolyDocs GmbH i. Gr. in order to determine possibility and viability of the table extraction.</p> <p>Examples:</p> <p></p> <p></p>","tags":["TE\u00b2","Plugin","Ephesoft","Table Extraction"]},{"location":"te2/install/","title":"How to install &amp; configure TE\u00b2 Plugin","text":"<p>TE\u00b2 Plugin is installed directly in Ephesoft Transact. The installation process is same for instances set up in Cloud or On Premise.</p> <p>Prerequisites Download the TE\u00b2 Plugin from here You must have Administration rights in Ephesoft Transact. You must have set up working Batch Class or install Polydocs GmbH default Batch Class for Plugin usage if no Batch Class is set up in your Ephesoft System, yet. (Contact us to get the Polydocs GmbH default Batch Class)</p>","tags":["TE\u00b2","Table Extraction","Plugin","Ephesoft","Installation","Configuration"]},{"location":"te2/install/#installation","title":"Installation","text":"","tags":["TE\u00b2","Table Extraction","Plugin","Ephesoft","Installation","Configuration"]},{"location":"te2/install/#step-1","title":"Step 1:","text":"<p>Open your Ephesoft Transact system</p> <p></p>","tags":["TE\u00b2","Table Extraction","Plugin","Ephesoft","Installation","Configuration"]},{"location":"te2/install/#step-2","title":"Step 2:","text":"<p>As an Admin please click into the Administrator section and select eg. \u201cBatch Class Management\u201d. Open the menu bar on the left and click \u201cSystem Configuration\u201d.</p> <p></p>","tags":["TE\u00b2","Table Extraction","Plugin","Ephesoft","Installation","Configuration"]},{"location":"te2/install/#step-3","title":"Step 3:","text":"<p>Open Workflow Management Drag &amp; Drop or upload the plugin zip files into the \u201cImport Plugin\u201d area to auto-install the plugin.</p> <p>Make sure that file name is exactly \u201cfellowtable2extractionplugin.zip\u201d and that the files are not renamed (eg by downloading multiple times) as Ephesoft cannot recognize files with another name.</p> <p></p> <p>Make sure that the installation was successful by checking the list under Workflow Management if the new plugin is listed (sample below).</p> <p></p> <p>The Installation part of the plugin is now done and it can be associated to a Batch Class and configured</p>","tags":["TE\u00b2","Table Extraction","Plugin","Ephesoft","Installation","Configuration"]},{"location":"te2/install/#association-to-batch-class-configuration","title":"Association to Batch Class &amp; Configuration","text":"","tags":["TE\u00b2","Table Extraction","Plugin","Ephesoft","Installation","Configuration"]},{"location":"te2/install/#step-1_1","title":"Step 1:","text":"<p>Open the menu bar on the left and click \u201cBatch Class Management\u201d and open the Batch Class in which the plugin should run</p> <p></p>","tags":["TE\u00b2","Table Extraction","Plugin","Ephesoft","Installation","Configuration"]},{"location":"te2/install/#step-2_1","title":"Step 2:","text":"<p>Associate TE\u00b2 Plugin with a Batch Class (FELLOW_TABLE2_EXTRACT) Click Modules and then Extraction on left side of Batch Class Configuration Screen. It will show all the Extraction modules configured for this Batch Class. Find FELLOW_TABLE2_EXTRACT in \u201cAssociated Plugins\u201d column and move it to \u201cSelected Plugins\u201d by click the right arrow button as shown in picture below.</p> <p>In the \u201cSelected Plugins\u201d column keep the plugin FELLOW_TABLE2_EXTRACT on the bottom of the list, then click \u201cApply\u201d and then click \u201cDeploy\u201d to activate your changes.</p> <p></p>","tags":["TE\u00b2","Table Extraction","Plugin","Ephesoft","Installation","Configuration"]},{"location":"te2/install/#step-3_1","title":"Step 3:","text":"<p>Configure TE\u00b2 Plugin (FELLOW_TABLE2_EXTRACT) Expand the \u201cExtraction\u201d folder in the left menu and select the newly added FELLOW_TABLE2_EXTRACT module.</p> <p></p> <p>Now set up Config details as described below and then click \u201cApply\u201d and \u201cDeploy\u201d</p> Field Value Description Table Extraction Enabled (Version:1.0.3):* True here you can see the version number of the installed plugin and set value \u201cTrue\u201d for plugin activation Key Values DLF Names (Separated by | symbol):* VAT_NO_EXTRACTED|IBAN_EXTRACTED|VENDOR_ID List of the Key Values, separated by pipe character (\u201c|\u201d) Fellow Webservice URL:* https://cloudintegration.eu/api/fellowkv/extract_table/extract_table link to the Fellow cloud repository Fellow Webservice API Key:* \u2014 provided by Fellow Consulting per subscription \u2014 personal API key to connect to Fellow Cloud repository <p>before you can start using the plugin.</p> <p>Step 4: Create Table in your Batch Class Document Type NOTE: this step is only needed if you do not use Fellow Default Batch Class</p> <p>It is needed to create an invoice Table in the configuration in order that Ephesoft can show tables.</p> <p>Open the menu and go Batch Class Management again</p> <p></p> <p>Open your dedicated Batch Class</p> <p></p> <p>Select a certain Document Type (eg. INVOICE_DE), open Folder \u201cIndex Fields\u201d, select \u201cTables\u201d and click \u201cAdd\u201d</p> <p></p> <p>Add new Table with Name \u201cInvoiceTable\u201d and click Apply and then Deploy (see two screenshots below)</p> <p></p> <p></p> <p>Open newly created folder \u201cInvoiceTable\u201d and add a Columns with Name \u201cDESCRIPTION\u201d</p> <p></p> <p></p> <p>Click Apply and Deploy</p> <p>Note that the step \u201cCreate Table in your Batch Class Document Type\u201d Must be done for each Document Type. Once you have it done in one Document Type you can export from there and import to other Document Types:</p> <p>Export</p> <p></p> <p>Import to other Document type and click Apply and Deploy</p> <p></p> <p>The association and configuration part of the plugin is now done. Note that you have to re-start Transact server</p>","tags":["TE\u00b2","Table Extraction","Plugin","Ephesoft","Installation","Configuration"]},{"location":"te2/install/#final-step-5","title":"FINAL Step 5:","text":"<p>Re-start Transact Server see Article ho to restart Transact</p>","tags":["TE\u00b2","Table Extraction","Plugin","Ephesoft","Installation","Configuration"]},{"location":"te2/ln_bodmapping/","title":"Infor BOD Mapping","text":"<p>Open the menu behind the drop-down arrow on the left side and go to Folder Management</p> <p></p> <p>Open Shared Folders, choose your Batch Class and click on ln-mapping-files</p> <p></p> <p>now open LN_SupplierInvoice_BODmappings.properties by clicking on the type icon</p>","tags":["TE\u00b2","Plugin","Ephesoft","Infor","Mapping","Infor LN","Infor M3","Infor CloudSuite"]},{"location":"workflow/","title":"Welcome","text":"<p>It covers everything from setup to usage and development. It is a work in progress and all contributions are welcome.</p>","tags":["Workflow","DOC\u00b2","Demonstration","Learn the basics"]},{"location":"workflow/#what-is-workflow2","title":"What is Workflow\u00b2?","text":"<p>Workflow\u00b2 helps you to connect any app with an API with any other, and manipulate its data with little or no code. </p>","tags":["Workflow","DOC\u00b2","Demonstration","Learn the basics"]},{"location":"workflow/#where-to-start","title":"Where to start","text":"","tags":["Workflow","DOC\u00b2","Demonstration","Learn the basics"]},{"location":"workflow/#up-and-running","title":"Up and running","text":"<p>Jump right in to building workflows with the Quickstart guide, or see the hosting section to learn about the options to get started with Workflow\u00b2.</p>","tags":["Workflow","DOC\u00b2","Demonstration","Learn the basics"]},{"location":"workflow/#learn-the-basics","title":"Learn the basics","text":"<p>Read Understand workflows to learn the building blocks of automations in n8n, Flow logic for guidance on representing your automation's logic in n8n, or take the courses for in-depth guidance and examples.</p>","tags":["Workflow","DOC\u00b2","Demonstration","Learn the basics"]},{"location":"workflow/editor-ui/","title":"Editor UI","text":"<p>The Editor UI is the web interface used to create workflows. It is accessed through a web browser at a designated website address.</p> <p></p> <p>From the Editor UI, you can access all your workflows and credentials, as well as the Workflow\u00b2 documentation and forum.</p> <p>The Editor UI sidebar menu contains the following sections and operations.</p>","tags":["Workflow\u00b2","Editor UI"]},{"location":"workflow/editor-ui/#workflows","title":"Workflows","text":"<p>This section includes the operations for creating and editing workflows.</p> <ul> <li>New: Create a new workflow</li> <li>Open: Open the list of saved workflows</li> <li>Save: Save changes to the current workflow</li> <li>Duplicate: Duplicate the current workflow</li> <li>Delete: Delete the current workflow</li> <li>Download: Download the current workflow as a JSON file</li> <li>Import from URL: Import a workflow from a URL</li> <li>Import from File: Import a workflow from a local file</li> <li>Settings: View and change the settings of the current workflow</li> </ul>","tags":["Workflow\u00b2","Editor UI"]},{"location":"workflow/editor-ui/#credentials","title":"Credentials","text":"<p>This section includes the operations for creating credentials.</p> <p>Credentials are private pieces of information issued by apps/services to authenticate you as a user and allow you to connect and share information between the app/service and the Doc\u00b2 node.</p> <ul> <li>New: Create new credentials</li> <li>Open: Open the list of saved credentials</li> </ul>","tags":["Workflow\u00b2","Editor UI"]},{"location":"workflow/editor-ui/#executions","title":"Executions","text":"<p>This section includes information about your workflow executions, each completed run of a workflow.</p> <p>You can enabling logging of your failed, successful, and/or manually selected workflows using the Workflow &gt; Settings page.</p>","tags":["Workflow\u00b2","Editor UI"]},{"location":"workflow/editor-ui/#help","title":"Help","text":"<p>This section includes resources for using Workflow\u00b2 and interacting with the community.</p> <ul> <li>Documentation: Open the [Workflow\u00b2 documentation page] (/workflow/)</li> <li>Forum: Open the Workflow\u00b2 community forum</li> <li>Workflows: Open the Workflow\u00b2 public workflows page</li> <li>About n8n: View information about Workflow\u00b2 (version, source code, license)</li> </ul>","tags":["Workflow\u00b2","Editor UI"]},{"location":"workflow/quickstart/","title":"Welcome to Workflow\u00b2","text":"<p>Go to APPS  and after activating Workflow\u00b2 by clicking the button, go to OPEN WORKFLOW\u00b2</p> <p></p>","tags":["Workflow\u00b2","Start"]},{"location":"workflow/quickstart/#build-your-first-workflow","title":"Build your first workflow","text":"<p>For your first workflow, let's build something to take one tedious task off you plate: cleaning up a cluttered Gmail inbox.</p> <ol> <li> <p>Open the Nodes Panel by click the orange <code>+</code> sign, then search and find the Gmail node. Click on it to add it to your canvas:     </p> </li> <li> <p>When you add the Gmail node to the canvas, its configuration modal opens automatically:     </p> </li> <li> <p>The first thing you need to do is configure your credentials so that Workflow\u00b2 can communicate with your Gmail account. You'll notice that the OAuth2 method is selected by default for Authentication, so click the Credentials dropdown and select Create New. The new credentials modal appears:     </p> </li> <li> <p>Copy the OAuth Callback URL from this modal, then open a new browser tab and navigate to your Google Cloud Console dashboard.</p> </li> <li> <p>From your Google Cloud Console, perform the following:</p> <ul> <li>Navigate to APIs &amp; Services &gt; Credentials.</li> <li>Click + CREATE CREDENTIALS and select OAuth client ID.</li> <li>Select Web Application from the Application type dropdown.</li> <li>Click +Add URI and enter the OAuth Callback URL you copied from Workflow\u00b2.</li> <li>Click Create to save your new credentials. A corresponding Client ID and Client Secret are now available. Copy these to use in Workflow\u00b2.</li> <li>Navigate to APIs &amp; Services &gt; Library, search for Gmail and select Enable.</li> </ul> <p> Keep in mind</p> <p>We go through a quick credential flow for Google in this example, but you can learn all about Doc\u00b2 credentials for Google services here.</p> </li> <li> <p>Return to your Workflow\u00b2 tab and in the new credentials modal enter the Client ID and Client Secret obtained from your Google Cloud Console. A Sign in with Google button appears.     </p> </li> <li> <p>Click the Sign in with Google button. A modal appears asking you to select your Google account and Allow access.</p> </li> <li> <p>Click Save to complete your Gmail credentials setup.</p> </li> <li> <p>Configure your Gmail node as follows:     </p> <ul> <li>Resource: Select Message as we will be looking through all messages to decide which we can clean up.</li> <li>Operation: Select Get All since we want to fetch all messages, not any particular one.</li> <li>Return All: Leave this enabled so that the node fetches all you messages, no matter how full your inbox is.</li> <li>Add Field &gt; Format: Select IDs so that we fetch only the message ID instead of its entire contents.</li> <li>Add Field &gt; Query: This is where we use Gmail Search Operators to find the messages we want to delete. Here we use <code>-in:chats unsubscribe</code> to identify all messages not in chats that contain the word \"unsubscribe\".</li> </ul> </li> <li> <p>Next, let's add a Split in Batches node after the Gmail node. This will break up the cleanup operation into chucks so avoid hitting any API rate limits. Let's configure it to use batches of 100 messages at a time:     </p> </li> <li> <p>Now let's add another Gmail node to perform the delete operation:     </p> <ul> <li>Resource: Select Message as we will be deleting any message passed to this node.</li> <li>Operation: Select Delete.</li> <li>Message ID: Use the gears button to enter an expression. This enables the ID of each message from the first Gmail node to be dynamically passed to this node. From the Edit Expression window, use the menu to find and select the message ID in the Output Data: </li> </ul> </li> <li> <p>Lastly, let's ensure your nodes are properly connected in the workflow. The final result should look like this:</p> </li> </ol> <p></p> <p>You've build your fist automation workflow and cleaned up a cluttered inbox in the process. Don't forget you can edit the query to find more messages to cleanup, and also set this workflow to run automatically using the Cron node.</p>","tags":["Workflow\u00b2","Start"]},{"location":"workflow/quickstart/#whats-next","title":"What's next?","text":"<p>Do you enjoy automating workflows? Here's what you can do next:</p> <ul> <li>See all Workflow\u00b2 nodes and try out new workflows. Find more examples here.</li> </ul>","tags":["Workflow\u00b2","Start"]},{"location":"workflow/api/","title":"n8n public REST API","text":"<p>Using n8n's public API, you can programmatically perform many of the same tasks as you can in the GUI. This section introduces n8n's REST API, including:</p> <ul> <li>How to authenticate</li> <li>Paginating results</li> <li>Using the built-in API playground</li> <li>Endpoint reference</li> </ul>","tags":["Workflow\u00b2","API"]},{"location":"workflow/api/#learn-about-rest-apis","title":"Learn about REST APIs","text":"<p>The API documentation assumes you are familiar with REST APIs. If you're not, these resources may be helpful:</p> <ul> <li>KnowledgeOwl's guide to working with APIs: a basic introduction, including examples of how to call REST APIs.</li> <li>IBM Cloud Learn Hub - What is an Application Programming Interface (API): this gives a general, but technical, introduction to APIs.</li> <li>IBM Cloud Learn Hub - What is a REST API?: more detailed information about REST APIs.</li> <li>mdn web docs - An overview of HTTP: REST APIs work over HTTP, and use HTTP verbs, or methods, to indicate the type of action to perform.</li> </ul> <p>Use the API playground</p> <p>Trying out the API in the playground can help you understand how APIs work. If you're worried about changing live data, consider setting up a test workflow, or test n8n instance, to explore safely.</p>","tags":["Workflow\u00b2","API"]},{"location":"workflow/api/api-reference/","title":"Workflow\u00b2 API reference","text":"","tags":["Workflow\u00b2","API"]},{"location":"workflow/api/authentication/","title":"API authentication","text":"<p>Workflow\u00b2 uses API keys to authenticate API calls.</p>","tags":["Workflow\u00b2","API"]},{"location":"workflow/api/authentication/#create-an-api-key","title":"Create an API key","text":"<ol> <li>Log in to Workflow\u00b2.</li> <li>Go to Settings &gt; API.</li> <li>Select Create an API key.</li> </ol>","tags":["Workflow\u00b2","API"]},{"location":"workflow/api/authentication/#delete-an-api-key","title":"Delete an API key","text":"<ol> <li>Log in to Workflow\u00b2.</li> <li>Go to Settings &gt; API.</li> <li>Select Delete next to the key you want to delete.</li> </ol>","tags":["Workflow\u00b2","API"]},{"location":"workflow/api/authentication/#call-the-api-using-your-key","title":"Call the API using your key","text":"<p>Send the API key in your API call as a header named <code>X-WF-API-KEY</code>.</p> <p>For example, say you want to get all active workflows. Your curl request will look like this:</p> <pre><code># For a self-hosted WF instance\ncurl -X 'GET' \\\n'&lt;WF_HOST&gt;:&lt;WF_PORT&gt;/&lt;WF_PATH&gt;/api/v&lt;version-number&gt;/workflows?active=true' \\\n-H 'accept: application/json' \\\n-H 'X-WF-API-KEY: &lt;your-api-key&gt;'\n\n# For WF Cloud\ncurl -X 'GET' \\\n'&lt;your-cloud-instance&gt;/api/v&lt;version-number&gt;/workflows?active=true' \\\n-H 'accept: application/json' \\\n-H 'X-WF-API-KEY: &lt;your-api-key&gt;'\n</code></pre>","tags":["Workflow\u00b2","API"]},{"location":"workflow/api/pagination/","title":"API pagination","text":"<p>The default page size is 100 results. You can change the page size limit. The maximum permitted size is 250.</p> <p>When a response contains more than one page, it includes a cursor, which you can use to request subsequent pages.</p> <p>For example, say you want to get all active workflows, 150 at a time.</p> <p>Get the first page:</p> <pre><code># For a self-hosted WF instance\ncurl -X 'GET' \\\n'&lt;WF_HOST&gt;:&lt;WF_PORT&gt;/&lt;WF_PATH&gt;/api/v&lt;version-number&gt;/workflows?active=true&amp;limit=150' \\\n-H 'accept: application/json' \\\n-H 'X-WF-API-KEY: &lt;your-api-key&gt;'\n\n# For WF Cloud\ncurl -X 'GET' \\\n'&lt;your-cloud-instance&gt;/api/v&lt;version-number&gt;/workflows?active=true&amp;limit=150' \\\n-H 'accept: application/json' \\\n-H 'X-WF-API-KEY: &lt;your-api-key&gt;'\n</code></pre> <p>The response is in JSON format, and includes a <code>nextCursor</code> value. This is an example response.</p> <pre><code>{\n\"data\": [\n// The response contains an object for each workflow\n{\n// Workflow data\n}\n],\n\"nextCursor\": \"MTIzZTQ1NjctZTg5Yi0xMmQzLWE0NTYtNDI2NjE0MTc0MDA\"\n}\n</code></pre> <p>Then to request the next page:</p> <pre><code># For a self-hosted WF instance\ncurl -X 'GET' \\\n'&lt;WF_HOST&gt;:&lt;WF_PORT&gt;/&lt;WF_PATH&gt;/api/v&lt;version-number&gt;/workflows?active=true&amp;limit=150&amp;cursor=MTIzZTQ1NjctZTg5Yi0xMmQzLWE0NTYtNDI2NjE0MTc0MDA' \\\n-H 'accept: application/json'\n\n# For WF Cloud\ncurl -X 'GET' \\\n'&lt;your-cloud-instance&gt;/api/v&lt;version-number&gt;/workflows?active=true&amp;limit=150&amp;cursor=MTIzZTQ1NjctZTg5Yi0xMmQzLWE0NTYtNDI2NjE0MTc0MDA' \\\n-H 'accept: application/json'\n</code></pre>","tags":["WF\u00b2","API"]},{"location":"workflow/api/using-api-playground/","title":"Using the API playground","text":"<p>The Workflow\u00b2 API comes with a built-in Swagger UI playground. This provides interactive documentation, allowing you to try out requests. The path to access the playground depends on your hosting.</p> <p>For self-hosted users, n8n constructs the path from values set in your environment variables:</p> <pre><code>N8N_HOST:N8N_PORT/N8N_PATH/api/v&lt;version-number&gt;/docs\n</code></pre> <p>For n8n Cloud users, the API playground path contains your cloud instance URL:</p> <pre><code>&lt;your-cloud-instance&gt;/api/v&lt;version-number&gt;/docs\n</code></pre> <p>The API includes built-in documentation about credential formats. This is available using the <code>credentials</code> endpoint:</p> <pre><code>/api/credentials/schema/{id}\n</code></pre> <p>Real data</p> <p>If you click Authorize and enter your API key in the API playground, you have access to your live data. This is useful for trying out requests. However, be aware you can change or delete real data.</p>","tags":["WF\u00b2","API"]},{"location":"workflow/code-examples/","title":"Code examples","text":"<p>There are two places in Doc\u00b2 where you need to use code:</p> <ul> <li>In expressions, for example programmatically setting the value of a field based on incoming data.</li> <li>In the function node, when you need to add JavaScript to your workflow.</li> </ul> <p>This section covers:</p>"},{"location":"workflow/code-examples/#expressions","title":"Expressions:","text":"<pre><code>* [Introduction to expressions in n8n](/workflow//code-examples/expressions/).\n* Built in [methods](/workflow//code-examples/expressions/methods/) and [variables](/workflow//code-examples/expressions/variables/).\n* Supported libraries: [Luxon](/workflow//code-examples/expressions/luxon/) (for data and time) and [JMESPath](/workflow//code-examples/expressions/jmespath/) (for working with JSON).\n</code></pre>"},{"location":"workflow/code-examples/#javascript","title":"JavaScript:","text":"<pre><code>* [Introduction to JavaScript in n8n](/workflow//code-examples/javascript-functions/).\n* Built in [methods](/workflow//code-examples/javascript-functions/methods/) and [variables](/code-examples/javascript-functions/variables/).\n* [Checking incoming data](/workflow//code-examples/javascript-functions/check-incoming-data/).\n* [Get the number of items returned by the last node](/workflow//code-examples/javascript-functions/number-items-last-node/).\n</code></pre>"},{"location":"workflow/code-examples/expressions/","title":"Expressions","text":"<p>Expressions allow you to set node parameters dynamically based on data from:</p> <ul> <li>Previous nodes</li> <li>The workflow</li> <li>Your Doc\u00b2 environment</li> </ul> <p>n8n uses the riot-tmpl templating language, and extends it with custom methods and variables. </p> <p>You can execute JavaScript within an expression. </p> <p>n8n supports two libraries that make common tasks easier:</p> <ul> <li>Luxon, for working with data and time.</li> <li>JMESPath, for querying JSON.</li> </ul>","tags":["Workflow\u00b2","Expressions","Code Example"]},{"location":"workflow/code-examples/expressions/#writing-expressions","title":"Writing expressions","text":"<p>To use an expression to set a parameter value:</p> <ol> <li>Select Parameter options for the parameter where you want to use an expression.</li> <li>Select Add expression.</li> <li>Write your expression in the expression editor. You can browse some of the available data in the Variable selector. All expressions have the format <code>{{ your expression here }}</code>.</li> </ol>","tags":["Workflow\u00b2","Expressions","Code Example"]},{"location":"workflow/code-examples/expressions/#example-get-data-from-webhook-body","title":"Example: get data from webhook body","text":"<p>Consider the following scenario: you have a webhook trigger that receives data through the webhook body. You want to extract some of that data for use in the workflow.</p> <p>Your webhook data looks similar to this:</p> <pre><code>[\n{\n\"headers\": {\n\"host\": \"n8n.instance.address\",\n...\n},\n\"params\": {},\n\"query\": {},\n\"body\": {\n\"name\": \"Jim\",\n\"age\": 30,\n\"city\": \"New York\"\n}\n}\n]\n</code></pre> <p>In the next node in the workflow, you want to get just the value of <code>city</code>. You can use the following expression:</p> <pre><code>{{$json.body.city}}\n</code></pre> <p>This expression:</p> <ol> <li>Accesses the incoming JSON-formatted data using n8n's custom <code>$json</code> variable.</li> <li>Finds the value of <code>city</code> (in this example, \"New York\"). Note that this example uses JMESPath syntax to query the JSON data. You can also write this expression as <code>{{$json['body']['city']}}</code>.</li> </ol>","tags":["Workflow\u00b2","Expressions","Code Example"]},{"location":"workflow/code-examples/expressions/#example-writing-longer-javascript","title":"Example: writing longer JavaScript","text":"<p>An expression contains one line of JavaScript. This means you can'd do things like variable assignments or multiple standalone operations.</p> <p>To understand the limitations of JavaScript in expressions, and start thinking about workarounds, look at the following two pieces of code. Both code examples use the Luxon date and time library to find the time between two dates in months, and encloses the code in handlebar brackets, like an expression. </p> <p>However, the first example isn't a valid Doc\u00b2 expression:</p> <pre><code>// This example is split over multiple lines for readability\n// It is still invalid when formatted as a single line\n{{\nfunction example() {\nlet end = DateTime.fromISO('2017-03-13');\nlet start = DateTime.fromISO('2017-02-13');\nlet diffInMonths = end.diff(start, 'months');\nreturn diffInMonths.toObject();\n}\nexample();\n}}\n</code></pre> <p>While the second example is valid:</p> <pre><code>{{DateTime.fromISO('2017-03-13').diff(DateTime.fromISO('2017-02-13'), 'months').toObject()}}\n</code></pre>","tags":["Workflow\u00b2","Expressions","Code Example"]},{"location":"workflow/code-examples/expressions/jmespath/","title":"Query JSON with JMESPath","text":"<p>JMESPath is a query language for JSON, allowing you to extract and transform elements from a JSON document. For full details of how to use JMESPath, refer to the JMESPath documentation.</p>","tags":["Workflow\u00b2","Expressions","Code Example"]},{"location":"workflow/code-examples/expressions/jmespath/#the-jmespath-method","title":"The <code>$jmespath()</code> method","text":"<p>n8n provides a custom method, <code>$jmespath()</code>, for use in expressions. It allows you to perform a search on a JSON object using the JMESPath query language.</p> <p>The basic syntax is: </p> <pre><code>$jmespath(object, searchString)\n</code></pre> <p>To help understand what the method does, here is the equivalent JavaScript. Note that you must use the custom method, not the JavaScript approach, because expressions must be single-line:</p> <pre><code>var jmespath = require('jmespath');\njmespath.search(object, searchString);\n</code></pre> <p><code>object</code> is a JSON object, such as the output of a previous node. <code>searchString</code> is an expression written in the JMESPath query language. The JMESPath Specification provides a list of supported expressions, while their Tutorial and Examples provide interactive examples.</p> <p>Search parameter order</p> <p>The examples in the JMESPath Specification follow the pattern <code>search(searchString, object)</code>. The JMESPath JavaScript library, which Doc\u00b2 uses, supports <code>search(object, searchString)</code> instead. This means that when using examples from the JMESPath documentation, you may need to change the order of the search function parameters.</p>","tags":["Workflow\u00b2","Expressions","Code Example"]},{"location":"workflow/code-examples/expressions/jmespath/#common-tasks","title":"Common tasks","text":"<p>This section provides examples for some common operations. Many more examples, and detailed guidance, are available in JMESPath's own documentation.</p>","tags":["Workflow\u00b2","Expressions","Code Example"]},{"location":"workflow/code-examples/expressions/jmespath/#a-shorter-way-to-write-basic-operations","title":"A shorter way to write basic operations","text":"<p>JMESPath provides a shorter and more readable way to write basic JSON queries. </p> <p>Consider the following scenario: you have a webhook trigger that receives data through the webhook body. You want to extract some of that data for use in the workflow.</p> <p>Your webhook data looks similar to this:</p> <pre><code>[\n{\n\"headers\": {\n\"host\": \"n8n.instance.address\",\n...\n},\n\"params\": {},\n\"query\": {},\n\"body\": {\n\"name\": \"Jim\",\n\"age\": 30,\n\"city\": \"New York\",\n\"dogs\": [\"Fido\", \"Spot\"]\n}\n}\n]\n</code></pre> <p>Extract the city:</p> <pre><code>// With JMESPath\n{{$json.body.city}}\n// Without JMESPath\n{{$json['body']['city']}}\n</code></pre> <p>Get the first dog in <code>dogs[]</code>:</p> <pre><code>// With JMESPath\n{{$json.body.dogs[0]}}\n// Without JMESPath\n{{$json['body']['dogs'][0]}}\n</code></pre>","tags":["Workflow\u00b2","Expressions","Code Example"]},{"location":"workflow/code-examples/expressions/jmespath/#apply-a-jmespath-expression-to-a-collection-of-elements-with-projections","title":"Apply a JMESPath expression to a collection of elements with projections","text":"<p>From the JMESPath projections documentation:</p> <p>Projections are one of the key features of JMESPath. It allows you to apply an expression to a collection of elements. There are five kinds of projections:</p> <ul> <li>List Projections</li> <li>Slice Projections</li> <li>Object Projections</li> <li>Flatten Projections</li> <li>Filter Projections</li> </ul> <p>The following example shows basic usage of list, slice, and object projections. Refer to the JMESPath projections documentation for detailed explanations of each projection type, and more examples.</p> <p>Given this JSON from a webhook node:</p> <pre><code>[\n{\n\"headers\": {\n\"host\": \"n8n.instance.address\",\n...\n},\n\"params\": {},\n\"query\": {},\n\"body\": {\n\"people\": [\n{\n\"first\": \"James\",\n\"last\": \"Green\"\n},\n{\n\"first\": \"Jacob\",\n\"last\": \"Jones\"\n},\n{\n\"first\": \"Jayden\",\n\"last\": \"Smith\"\n}\n],\n\"dogs\": {\n\"Fido\": {\n\"color\": \"brown\",\n\"age\": 7\n},\n\"Spot\": {\n\"color\": \"black and white\",\n\"age\": 5\n}\n}\n}\n}\n]\n</code></pre> <p>Retrieve a list of all the people's first names:</p> <pre><code>{{$jmespath($json.body.people, \"[*].first\" )}}\n// Returns [\"James\", \"Jacob\", \"Jayden\"]\n</code></pre> <p>Get a slice of the first names:</p> <pre><code>{{$jmespath($json.body.people, \"[:2].first\")}}\n// Returns [\"James\", \"Jacob\"]\n</code></pre> <p>Get a list of the dogs' ages using object projections:</p> <pre><code>{{$jmespath($json.body.dogs, \"*.age\")}}\n// Returns [7,5]\n</code></pre>","tags":["Workflow\u00b2","Expressions","Code Example"]},{"location":"workflow/code-examples/expressions/jmespath/#select-multiple-elements-and-create-a-new-list-or-object","title":"Select multiple elements and create a new list or object","text":"<p>Multiselect allows you to select elements from a JSON object and combine them into a new list or object.</p> <p>Given this JSON from a webhook node:</p> <pre><code>[\n{\n\"headers\": {\n\"host\": \"n8n.instance.address\",\n...\n},\n\"params\": {},\n\"query\": {},\n\"body\": {\n\"people\": [\n{\n\"first\": \"James\",\n\"last\": \"Green\"\n},\n{\n\"first\": \"Jacob\",\n\"last\": \"Jones\"\n},\n{\n\"first\": \"Jayden\",\n\"last\": \"Smith\"\n}\n],\n\"dogs\": {\n\"Fido\": {\n\"color\": \"brown\",\n\"age\": 7\n},\n\"Spot\": {\n\"color\": \"black and white\",\n\"age\": 5\n}\n}\n}\n}\n]\n</code></pre> <p>Use multiselect list to get the first and last names and create new lists containing both names:</p> <pre><code>{{$jmespath($json.body.people, \"[].[first, last]\")}}\n// Returns [[\"James\",\"Green\"],[\"Jacob\",\"Jones\"],[\"Jayden\",\"Smith\"]]\n</code></pre>","tags":["Workflow\u00b2","Expressions","Code Example"]},{"location":"workflow/code-examples/expressions/luxon/","title":"Date and time with Luxon","text":"<p>Luxon is a JavaScript library that makes it easier to work with date and time. For full details of how to use Luxon, refer to Luxon's documentation. </p>"},{"location":"workflow/code-examples/expressions/luxon/#variables","title":"Variables","text":"<p>n8n uses Luxon to provide two custom variables:</p> <ul> <li><code>$now</code>: a Luxon object containing the current timestamp. Equivalent to <code>DateTime.now()</code>.</li> <li><code>$today</code>: a Luxon object containing the current timestamp, rounded down to the day. Equivalent to <code>DateTime.now().set({ hour: 0, minute: 0, second: 0, millisecond: 0 })</code>.</li> </ul> <p>Note that these variables can return different time formats when cast as a string. This is the same behavior as Luxon's <code>DateTime.now()</code>.</p> <pre><code>{{$now}}\n// Returns [Object: \"&lt;ISO formatted timestamp&gt;\"]\n// For example [Object: \"2022-03-09T14:00:25.058+00:00\"]\n{{$now.toString()}}\n// Returns the ISO formatted timestamp\n// For example 2022-03-09T14:02:37.065+00:00\n{{\"Today's date is \" + $now}}\n// Returns \"Today's date is &lt;unix timestamp&gt;\"\n// For example \"Today's date is 1646834498755\"\n</code></pre>"},{"location":"workflow/code-examples/expressions/luxon/#setting-the-timezone-in-n8n","title":"Setting the timezone in n8n","text":"<p>Luxon uses the Doc\u00b2 timezone. This value is either:</p> <ul> <li>Default: <code>America/New York</code></li> <li>A custom timezone for your Doc\u00b2 instance, set using the <code>GENERIC_TIMEZONE</code> environment variable.</li> <li>A custome timezone for an individual workflow, configured in workflow settings.</li> </ul>"},{"location":"workflow/code-examples/expressions/luxon/#common-tasks","title":"Common tasks","text":"<p>This section provides examples for some common operations. Many more examples, and detailed guidance, are available in Luxon's own documentation.</p>"},{"location":"workflow/code-examples/expressions/luxon/#get-n-days-from-today","title":"Get n days from today","text":"<p>Get a number of days before or after today. </p> <p>For example, you want to set a field to always show the date seven days before the current date.</p> <p>In the expressions editor, enter:</p> <pre><code>{{$today.minus({days: 7})}}\n</code></pre> <p>On the 23rd June 2019, this returns <code>[Object: \"2019-06-16T00:00:00.000+00:00\"]</code>.</p> <p>This example uses n8n's custom variable <code>$today</code> for convenience. It is the equivalent of <code>DateTime.now().set({ hour: 0, minute: 0, second: 0, millisecond: 0 }).minus({days: 7})</code>.</p> <p>For more detailed information and examples, refer to:</p> <ul> <li>Luxon's guide to math</li> <li>Their API documentation on DateTime plus and DateTime minus</li> </ul>"},{"location":"workflow/code-examples/expressions/luxon/#create-human-readable-dates","title":"Create human-readable dates","text":"<p>In Get n days from today, the example gets the date seven days before the current date, and returns it as <code>[Object: \"yyyy-mm-dd-T00:00:00.000+00:00\"]</code>. To make this more readable, you can use Luxon's formatting functions.</p> <p>For example, you want the field containing the date to be formatted as DD/MM/YYYY.</p> <p>This expression gets the date seven days before today, and converts it to the DD/MM/YYYY format. So on the 23rd June 2019, it returns 23/06/2019:</p> <pre><code>{{$today.minus({days: 7}).toLocaleString()}}\n</code></pre> <p>You can alter the format. For example:</p> <pre><code>{{$today.minus({days: 7}).toLocaleString({month: 'long', day: 'numeric', year: 'numeric'})}}\n</code></pre> <p>On 23rd June 2019, this returns \"16 June 2019\".</p> <p>Refer to Luxon's guide on toLocaleString (strings for humans) for more information.</p>"},{"location":"workflow/code-examples/expressions/luxon/#convert-date-string-to-luxon","title":"Convert date string to Luxon","text":"<p>You can convert date strings and other date formats to a Luxon DateTime object. You can convert from standard formats and from arbitrary strings.</p> <p>If you have a date in a supported standard technical format: </p> <p>Luxon provides functions to handle the conversion. Refer to Luxon's guide to Parsing technical formats for details.</p> <p>If you have a date as a string that does not use a standard format: </p> <p>Use Luxon's Ad-hoc parsing. To do this, use the <code>fromFormat()</code> function, providing the string and a set of tokens that describe the format.</p> <p>For example, you have n8n's founding date, 23rd June 2019, formatted as '23-06-2019'. You want to turn this into a Luxon object:</p> <pre><code>{{DateTime.fromFormat(\"23-06-2019\", \"dd-MM-yyyy\")}}\n</code></pre> <p>When using ad-hoc parsing, note Luxon's warning about Limitations. If you see unexpected results, try their Debugging guide.</p>"},{"location":"workflow/code-examples/expressions/luxon/#get-the-time-between-two-dates","title":"Get the time between two dates","text":"<p>To get the time between two dates, use Luxon's diffs feature. This subtracts one date from another and returns a duration.</p> <p>For example, get the number of months between two dates:</p> <pre><code>{{DateTime.fromISO('201-06-23').diff(DateTime.fromISO('2019-05-23'), 'months').toObject()}}\n</code></pre> <p>This returns <code>[Object: {\"months\":1}]</code>.</p> <p>Refer to Luxon's Diffs for more information.</p>"},{"location":"workflow/code-examples/expressions/luxon/#a-longer-example-how-many-days-to-christmas","title":"A longer example: how many days to Christmas?","text":"<p>This example brings together several Luxon features, uses JMESPath, and does some basic string manipulation. </p> <p>The scenario: you want a countdown to 25th December. Every day, it should tell you the number of days remaining to Christmas. You don't want to update it for next year - it needs to seamelessly work for every year.</p> <pre><code>{{\"There are \" + $today.diff(DateTime.fromISO($today.year + '-12-25'), 'days').toObject().days.toString().substring(1) + \" days to Christmas!\"}}\n</code></pre> <p>This outputs <code>\"There are &lt;number of days&gt; days to Christmas!\"</code>. For example, on 9th March, it outputs \"There are 291 days to Christmas!\".</p> <p>A detailed explanation of what the expression does:</p> <ul> <li><code>{{</code>: indicates the start of the expression.</li> <li><code>\"There are \"</code>: a string. </li> <li><code>+</code>: used to join two strings.</li> <li><code>$today.diff()</code>: This is similar to the example in Get the time between two dates, but it uses n8n's custom <code>$today</code> variable.</li> <li><code>DateTime.fromISO($today.year + '-12-25'), 'days'</code>: this part gets the current year using <code>$today.year</code>, turns it into an ISO string along with the month and date, and then takes the whole ISO string and converts it to a Luxon DateTime data structure. It also tells Luxon that you want the duration in days.</li> <li><code>toObject()</code> turns the result of diff() into a more usable object. At this point, the expression returns <code>[Object: {\"days\":-&lt;number-of-days&gt;}]</code>. For example, on 9th March, <code>[Object: {\"days\":-291}]</code>.</li> <li><code>.days</code> uses JMESPath syntax to retrieve just the number of days from the object. For more information on using JMESPath with Doc\u00b2, refer to our JMESpath documentation. This gives you the number of days to Christmas, as a negative number.</li> <li><code>.toString().substring(1)</code> turns the number into a string and removes the <code>-</code>.</li> <li><code>+ \" days to Christmas!\"</code>: another string, with a <code>+</code> to join it to the previous string.</li> <li><code>}}</code>: indicates the end of the expression.</li> </ul>"},{"location":"workflow/code-examples/expressions/methods/","title":"Custom methods","text":"<p>Workflow\u00b2 provides the following methods:</p> <ul> <li><code>$evaluateExpression</code>: evaluates a string as an expression.</li> <li><code>$items</code>: returns items from a given node</li> <li><code>$item</code>: returns an item at a given index</li> <li><code>$jmespath()</code>: perform a search on a JSON object using JMESPath.</li> <li><code>$node</code>: data from a specified node</li> </ul>"},{"location":"workflow/code-examples/expressions/variables/","title":"Custom variables","text":"<p>WF\u00b2 provides the following variables:</p> <ul> <li><code>$binary</code>: incoming binary data from a node</li> <li><code>$data</code>: incoming raw data from a node</li> <li><code>$env</code>: contains environment variables</li> <li><code>$json</code>: incoming JSON data from a node</li> <li><code>$now</code>: a Luxon object containing the current timestamp. Equivalent to <code>DateTime.now()</code>.</li> <li><code>$parameters</code>: parameters of the current node</li> <li><code>$position</code>: the index of an item in a list of items</li> <li><code>$resumeWebhookUrl</code>: the webhook URL to call to resume a waiting workflow.</li> <li><code>$runIndex</code>: how many times the node has been executed. Zero-based (the first run is 0, the second is 1, and so on).</li> <li><code>$today</code>: a Luxon object containing the current timestamp, rounded down to the day. Equivalent to <code>DateTime.now().set({ hour: 0, minute: 0, second: 0, millisecond: 0 })</code>.</li> <li><code>$workflow</code>: workflow metadata</li> </ul>"},{"location":"workflow/code-examples/expressions/variables/#examples","title":"Examples","text":""},{"location":"workflow/code-examples/expressions/variables/#workflow","title":"$workflow","text":"<p>Gives information about the current workflow.</p> <pre><code>// Boolean. Whether the workflow is active (true) or not (false)\n$workflow.active\n// Number. The workflow ID.\n$workflow.id\n// String. The workflow name.\n$workflow.name\n</code></pre>"},{"location":"workflow/code-examples/expressions/variables/#resumewebhookurl","title":"$resumeWebhookUrl","text":"<p>The webhook URL to call to resume a waiting workflow.</p> <p>See the Wait &gt; On webhook call documentation to learn more.</p>"},{"location":"workflow/code-examples/javascript-functions/","title":"JavaScript Code Snippets","text":"<p>In Doc\u00b2, you can write custom JavaScript code snippets to add, remove, and update the data you receive from a node. You can also use code snippets to modify the data structure of the data returned by a node.</p> <p>Keep in mind</p> <p>We are using Set node for illustrating expressions here. However, you can use the code snippets as an expression in any node. To do that, click on the gears icon next to a field and click on Add Expression.</p> <p>For each section, we'll share code snippets that can be used in the function node as well as the expressions. You can read more about Expressions and adding code snippets to the Function node in our documentation.</p>"},{"location":"workflow/code-examples/javascript-functions/check-incoming-data/","title":"Check incoming data","text":"<p>At times, you may want to check the incoming data. If the incoming data doesn't satisfy a condition, you may want to return a different value. For example, you want to check if a variable from the previous node is empty and return a string if it is empty. Use the following code snippet to return <code>not found</code> if the variable is empty.</p> <pre><code>{{$json[\"variable_name\"]? $json[\"variable_name\"] :\"not found\"}}\n</code></pre> <p>The above expression uses the ternary operator. You can learn more about the ternary operator here.</p>"},{"location":"workflow/code-examples/javascript-functions/methods/","title":"Custom methods","text":"<p>Workflow\u00b2 provides the following methods:</p> <ul> <li><code>$evaluateExpression</code>: evaluates a string as an expression.</li> <li><code>$items</code>: returns items from a given node</li> <li><code>$item</code>: returns an item at a given index</li> <li><code>$jmespath()</code>: perform a search on a JSON object using JMESPath.</li> <li><code>$node</code>: data from a specified node</li> </ul>"},{"location":"workflow/code-examples/javascript-functions/methods/#evaluateexpressionexpression-string-itemindex-number","title":"$evaluateExpression(expression: string, itemIndex: number)","text":"<p>Evaluates a given string as expression. If no <code>itemIndex</code> is provided it uses by default in the Function-Node the data of item 0 and in the Function Item-Node the data of the current item.</p> <p>Example:</p> <pre><code>items[0].json.variable1 = $evaluateExpression('{{1+2}}');\nitems[0].json.variable2 = $evaluateExpression($node[\"Set\"].json[\"myExpression\"], 1);\n\nreturn items;\n</code></pre>"},{"location":"workflow/code-examples/javascript-functions/methods/#itemsnodename-string-outputindex-number-runindex-number","title":"$items(nodeName?: string, outputIndex?: number, runIndex?: number)","text":"<p>This gives access to all the items of current or parent nodes. If no parameters are supplied, it returns all the items of the current node. If a node-name is given, it returns the items the node output on its first output (index: 0, most nodes only have one output, exceptions are IF and Switch-Node) on its last run.</p> <p>Example:</p> <pre><code>// Returns all the items of the current node and current run\nconst allItems = $items();\n\n// Returns all items the node \"IF\" outputs (index: 0 which is Output \"true\" of its most recent run)\nconst allItems = $items(\"IF\");\n\n// Returns all items the node \"IF\" outputs (index: 0 which is Output \"true\" of the same run as current node)\nconst allItems = $items(\"IF\", 0, $runIndex);\n\n// Returns all items the node \"IF\" outputs (index: 1 which is Output \"false\" of run 0 which is the first run)\nconst allItems = $items(\"IF\", 1, 0);\n</code></pre>"},{"location":"workflow/code-examples/javascript-functions/methods/#itemindex-number-runindex-number","title":"$item(index: number, runIndex?: number)","text":"<p>This method allows you to return an item at a specific index. The index is zero-based. Hence, <code>$item(0)</code> will return the first item, <code>$item(1)</code> the second one, and so on. Refer to this documentation to learn more.</p> <p>Example:</p> <pre><code>// Returns the first item returned by the Example node\nconst firstItem = $item(0).$node[\"Example Node\"];\n\n// Returns the second item returned by the Example node\nconst secondItem = $item(1).$node[\"Example Node\"];\n</code></pre> <p>Refer to this example workflow to learn how this method can be used.</p>"},{"location":"workflow/code-examples/javascript-functions/methods/#node","title":"$node","text":"<p>Returns the data of a specified node. Similar to <code>$item</code>, with the difference that it always returns the data of the first output and the last run of the node.</p> <pre><code>// Returns the fileName of binary property \"data\" of Node \"HTTP Request\"\nconst fileName = $node[\"HTTP Request\"].binary[\"data\"][\"fileName\"]}}\n\n// Returns the context data \"noItemsLeft\" of Node \"SplitInBatches\"\nconst noItemsLeft = $node[\"SplitInBatches\"].context[\"noItemsLeft\"];\n\n// Returns the value of the JSON data property \"myNumber\" of Node \"Set\"\nconst myNumber = $node[\"Set\"].json['myNumber'];\n\n// Returns the value of the parameter \"channel\" of Node \"Slack\"\nconst channel = $node[\"Slack\"].parameter[\"channel\"];\n\n// Returns the index of the last run of Node \"HTTP Request\"\nconst runIndex = $node[\"HTTP Request\"].runIndex}}\n</code></pre>"},{"location":"workflow/code-examples/javascript-functions/number-items-last-node/","title":"Get number of items returned by the last node","text":"<p>Depending on your use-case, you might want to get the number of items returned by the last node. Use the following snippet in the Function node.</p> <pre><code>if (Object.keys(items[0].json).length === 0) {\nreturn [\n{\njson: {\nresults: 0,\n}\n}\n]\n}\nreturn [\n{\njson: {\nresults: items.length,\n}\n}\n];\n</code></pre> <p>The output will then be similar to the following.</p> <pre><code>[\n{\n\"results\": 8\n}\n]\n</code></pre>"},{"location":"workflow/code-examples/javascript-functions/variables/","title":"Custom variables","text":"<p>WF\u00b2 provides the following variables:</p> <ul> <li><code>$binary</code>: incoming binary data from a node</li> <li><code>$data</code>: incoming raw data from a node</li> <li><code>$env</code>: contains environment variables</li> <li><code>$json</code>: incoming JSON data from a node</li> <li><code>$now</code>: a Luxon object containing the current timestamp. Equivalent to <code>DateTime.now()</code>.</li> <li><code>$parameters</code>: parameters of the current node</li> <li><code>$position</code>: the index of an item in a list of items</li> <li><code>$resumeWebhookUrl</code>: the webhook URL to call to resume a waiting workflow.</li> <li><code>$runIndex</code>: how many times the node has been executed. Zero-based (the first run is 0, the second is 1, and so on).</li> <li><code>$today</code>: a Luxon object containing the current timestamp, rounded down to the day. Equivalent to <code>DateTime.now().set({ hour: 0, minute: 0, second: 0, millisecond: 0 })</code>.</li> <li><code>$workflow</code>: workflow metadata</li> </ul>"},{"location":"workflow/code-examples/javascript-functions/variables/#examples","title":"Examples","text":""},{"location":"workflow/code-examples/javascript-functions/variables/#executionid","title":"$executionId","text":"<p>Contains the unique ID of the current workflow execution.</p> <pre><code>const executionId = $executionId;\n\nreturn [{json:{executionId}}];\n</code></pre>"},{"location":"workflow/code-examples/javascript-functions/variables/#runindex","title":"$runIndex","text":"<p>Contains the index of the current run of the node.</p> <pre><code>// Returns all items the node \"IF\" outputs (index: 0 which is Output \"true\" of the same run as current node)\nconst allItems = $items(\"IF\", 0, $runIndex);\n</code></pre>"},{"location":"workflow/code-examples/javascript-functions/variables/#workflow","title":"$workflow","text":"<p>Gives information about the current workflow.</p> <pre><code>// Boolean. Whether the workflow is active (true) or not (false)\n$workflow.active\n// Number. The workflow ID.\n$workflow.id\n// String. The workflow name.\n$workflow.name\n</code></pre>"},{"location":"workflow/code-examples/javascript-functions/variables/#resumewebhookurl","title":"$resumeWebhookURL","text":"<p>The weebhook URL to call to resume a waiting workflow.</p> <p>See the Wait &gt; On weebhook call documentation to learn more.</p>"},{"location":"workflow/courses/","title":"Courses","text":"<p>If you've found your way here, it means you're serious about your interest in automation. Maybe you're tired of manually entering data into the same spreadsheet every day, of clicking through a series of tabs and buttons for that one piece of information you need, of managing tens of different tools and systems.</p> <p>Whatever the reason, one thing is clear: you shouldn't spend precious time doing things that don't spark joy or contribute to your personal and professional growth.</p> <p>These tasks can and should be automated! And you don't need advanced technical knowledge or excellent coding skills to do this\u2013with no-code tools like n8n, automation is for everyone.</p>","tags":["Workflow\u00b2","Courses"]},{"location":"workflow/courses/#available-courses","title":"Available courses","text":"<ul> <li>Level 1: Beginner course</li> <li>Level 2: Intermediate course</li> </ul>","tags":["Workflow\u00b2","Courses"]},{"location":"workflow/courses/level-one/","title":"Introduction","text":"<p>Welcome to the n8n Course Level 1!</p>","tags":["Workflow\u00b2","Course Level 1"]},{"location":"workflow/courses/level-one/#is-this-course-right-for-me","title":"Is this course right for me?","text":"<p>This course teaches you how to automate processes with no code using n8n and is meant to jumpstart your qualification as an automation expert.</p> <p>This course is for you if you:</p> <ul> <li>Want to automate things in your personal life</li> <li>Are looking for quick ways to automate common business processes</li> </ul>","tags":["Workflow\u00b2","Course Level 1"]},{"location":"workflow/courses/level-one/#what-will-i-learn-in-this-course","title":"What will I learn in this course?","text":"<p>We believe in learning by doing. You can expect some theoretical information about the basic concepts and components of n8n, followed by practice of building workflows step by step.</p> <p>By the end of this course you will know:</p> <ul> <li>How to set up n8n and navigate the Editor UI</li> <li>How data is structured in n8n</li> <li>How to configure different node parameters and add credentials</li> <li>When and how to use conditional logic in workflows</li> <li>How to schedule and control workflows</li> <li>How to import, download, and share workflows with others</li> </ul> <p>You will build two workflows:</p> <ul> <li>A two-node workflow to get articles from Hacker News</li> <li>A seven-node workflow to help your client get records from a data warehouse, filter them, make calculations, and notify team members about the results</li> </ul>","tags":["Workflow\u00b2","Course Level 1"]},{"location":"workflow/courses/level-one/#what-do-i-need-to-get-started","title":"What do I need to get started?","text":"<ul> <li>n8n set up: You can use the self-hosted version, n8n.cloud, or the desktop app.</li> <li>A user ID: Sign up here to get your unique ID and other credentials you will need in the course.</li> <li>Basic knowledge of JavaScript and APIs would be helpful, but is not necessary.</li> </ul>","tags":["Workflow\u00b2","Course Level 1"]},{"location":"workflow/courses/level-one/#how-long-does-the-course-take","title":"How long does the course take?","text":"<p>Completing the course should take around two hours. You do not have to complete it in one go, feel free to take breaks and resume whenever you are ready.</p>","tags":["Workflow\u00b2","Course Level 1"]},{"location":"workflow/courses/level-one/#how-do-i-complete-the-course","title":"How do I complete the course?","text":"<p>There are two milestones in this course that test your knowledge of what you have learned in the lessons:</p> <ul> <li>[x] Building the main workflow</li> <li>[x] Passing the quiz at the end of the course</li> </ul> <p>You can always check your progress throughout the course by entering your unique ID here.</p> <p>If you successfully complete the milestones above, you will get a badge and an avatar in your forum profile. You can then share your profile and course verification ID to showcase your n8n skills to others.</p> Let's get started!","tags":["Workflow\u00b2","Course Level 1"]},{"location":"workflow/courses/level-one/chapter-1/","title":"Navigating the Editor UI","text":"<p>In this lesson you will learn how to navigate the Editor UI. We will walk through the canvas and show you what each icon means and where to find things you will need while building workflows in n8n.</p>"},{"location":"workflow/courses/level-one/chapter-1/#getting-started","title":"Getting started","text":"<p>First of all, you need to get n8n. There are different ways to set up n8n, choose the option that best suits your skills and needs.</p> <p>n8n version</p> <p>This course was developed on n8n version 0.175.1. In other versions, the Editor UI might look different, but the core functionality of the workflows should not be impacted.</p> <p>Once you have n8n running, open the Editor UI in a browser window. It should look like this:</p> Editor UI <p>Next, you'll learn how to navigate the Editor UI.</p>"},{"location":"workflow/courses/level-one/chapter-1/#editor-ui-settings","title":"Editor UI settings","text":"<p>The Editor UI represents the web interface where you build workflows. Think of it as a canvas on which the artist in you designs automations. From the Editor UI you can access all your workflows and credentials, as well as support pages.</p>"},{"location":"workflow/courses/level-one/chapter-1/#left-side-panel","title":"Left-side panel","text":"<p>In the upper left corner, click on the round arrow icon. This will open the left-side menu, which contains the core functionalities and settings for managing workflows.</p> <p>The panel contains the following sections:</p> <ul> <li>Admin Panel: Access the management Dashboard (for n8n.cloud users).</li> <li>Workflows: Contains operations for creating and editing workflows.</li> <li>Credentials: Contains operations for creating credentials.</li> <li>Executions: Contains information about your workflow executions.</li> <li>Help: Contains resources around n8n product and community.</li> </ul> Editor UI left-side menu"},{"location":"workflow/courses/level-one/chapter-1/#top-bar","title":"Top bar","text":"<p>The top bar of the Editor UI contains the following information:</p> <ul> <li>Name of the current workflow. By default, a new workflow is named \"My Workflow\", but can edit this name anytime.</li> <li>Tag of the current workflow. Tags help you organize your workflows by category, use case, or whatever is relevant for you. Tags are optional.</li> <li>Save button that saves the current workflow.</li> <li>Toggle button that activates or deactivates the current workflow. By default, workflows are deactivated.</li> </ul> Editor UI top bar"},{"location":"workflow/courses/level-one/chapter-1/#canvas","title":"Canvas","text":"<p>The canvas is the gray grid background in the Editor UI. On the canvas, there are several icons and a node with different functionalities:</p> <ul> <li>Buttons to zoom the canvas to fit the screen, zoom in or out of the canvas, and reset the canvas to the original resolution.</li> <li>A button to Execute Workflow. When you click on it, all nodes on the canvas are executed.</li> <li>A button with a + sign inside. This button opens the nodes panel.</li> <li>A button with a note icon inside. This button adds a sticky note to the canvas.</li> <li>A square with a green play icon inside. This is the Start node. You will learn more about nodes in the next section.</li> </ul> Workflow canvas <p>Moving the canvas</p> <p>You can move the workflow canvas around in two ways:</p> <ul> <li>Click Ctrl + Left Mouse Button on the canvas and move it around</li> <li>Place two fingers on your touchpad and slide</li> </ul> <p>Don't worry about workflow execution and activation for now, we will explain these concepts later on in the course.</p>"},{"location":"workflow/courses/level-one/chapter-1/#nodes","title":"Nodes","text":"<p>You can think of nodes as building blocks that serve different functions but, when put together, they make up a functioning machinery \u2013 an automated workflow.</p> <p>Node</p> <p>A node is an individual step in your workflow \u2014 one that either (a) loads, (b) processes or (c) sends data.</p> <p>Based on their function, nodes can be classified into two types:</p> <ul> <li>Regular Nodes add, remove, and edit data, as well as request and send external data.</li> <li>Trigger Nodes start a workflow and supply the initial data.</li> </ul> <p>Keep in mind</p> <p>Among the Regular and Trigger nodes there are some nodes that do not represent any app or service, instead they serve general functions like scheduling workflows (e.g. Cron and Interval nodes) or adding JavaScript functions (e.g. Function and Function Item nodes). We refer to these as Core Nodes.</p>"},{"location":"workflow/courses/level-one/chapter-1/#start-node","title":"Start node","text":"<p>The Start node is the default starting point in any workflow. Every time you create a new workflow, a Start node will be included by default.</p> <p>The Start node cannot be deleted or duplicated. If you have a workflow in which you don't use the Start node, you can remove the connection, deactivate it, and move it away from the workflow. If you need more than one Start node, you probably need to use other Trigger nodes or create separate workflows.</p> <p>You've probably figured out already that the Start node is a Core Trigger node. Apart from it, there are over 290 other Regular and Trigger nodes for various functions, apps, and services.</p>"},{"location":"workflow/courses/level-one/chapter-1/#finding-nodes","title":"Finding nodes","text":"<p>You can find all available nodes in the nodes panel on the right side of the Editor UI. There are three ways in which you can open the nodes panel:</p> <ul> <li>Click the + icon in the top right corner of the canvas.</li> <li>Click the gray dot on the right side of an existing node on the canvas (the node to which you want to add another one) and pull the connection line to the right.</li> <li>Click the Tab key on your keyboard.</li> </ul> Nodes panel <p>In the nodes panel, notice that the nodes are grouped in three tabs: All, Regular, and Trigger. In addition, nodes are also grouped by their functionality domain (like Analytics or Sales). This makes it easier to find the nodes you need.</p> <p>If you want to get a specific node, type in the name of the node, app, or service in the search field and select the respective tab.</p>"},{"location":"workflow/courses/level-one/chapter-1/#adding-nodes","title":"Adding nodes","text":"<p>There are two ways to add nodes to your canvas:</p> <ul> <li>Click on the node you want in the nodes panel. The new node will automatically be connected to the selected node on the canvas.</li> <li>Drag and drop the node from the nodes panel to the canvas.</li> </ul> <p>To review, here's a walkthrough of the Editor UI touching on all the settings you've learned so far:</p> Editor UI walkthrough"},{"location":"workflow/courses/level-one/chapter-1/#node-buttons","title":"Node buttons","text":"<p>If you hover on a node, you'll notice that four icons appear on top:</p> <ul> <li>Delete the node</li> <li>Deactivate/Activate the node</li> <li>Duplicate the node</li> <li>Execute the node</li> </ul> The four node buttons <p>Moving a workflow</p> <p>To move a workflow around the canvas, select all nodes with your mouse or by clicking Ctrl + A, click and hold on a node, then drag it to any point you want on the canvas.</p>"},{"location":"workflow/courses/level-one/chapter-1/#summary","title":"Summary","text":"<p>In this lesson you learned how to navigate the Editor UI, what the icons mean, how to access the left-side and node panels, and how to add nodes to the canvas and interpret their execution results.</p> <p>In the next lesson, you will build a mini-workflow to put into practice what you've learned so far.</p>"},{"location":"workflow/courses/level-one/chapter-2/","title":"Building a Mini-workflow","text":"<p>In this lesson, you will build a small workflow that gets 10 articles about automation from Hacker News. The workflow consists of four steps:</p> <p>1. Add the Hacker News node 2. Configure the Hacker News node 3. Save the workflow 4. Execute the node</p>"},{"location":"workflow/courses/level-one/chapter-2/#1-add-the-hacker-news-node","title":"1. Add the Hacker News node","text":"<p>Open the nodes panel, search for the Hacker News node, and click on it to add it to the Editor UI. Connect the Hacker News node to the Start node.</p>"},{"location":"workflow/courses/level-one/chapter-2/#2-configure-the-hacker-news-node","title":"2. Configure the Hacker News node","text":"<p>When you add a new node to the Editor UI, the node will be automatically activated and open a window with two tabs on the left side: Parameters and Settings.</p> <p>Parameters vs Settings</p> <p>Parameters are different for each node, depending on its functionality. Settings are the same for all nodes.</p>"},{"location":"workflow/courses/level-one/chapter-2/#parameters","title":"Parameters","text":"<p>The Hacker News node has several parameters that need to be configured in order to make it work:</p> <ul> <li>Resource: All  This resource selects all data records (articles).</li> <li>Operation: Get All  This operation fetches all the selected articles.</li> <li>Limit: 10  This parameter sets a limit to how many results are returned by the Get All operation.</li> <li>Additional fields &gt; Add Field &gt; Keyword: automation  Additional fields are options that you can add to certain nodes to make your request more specific or filter the results. In our case, we want to get only articles that include the keyword \u201cautomation\u201d. </li> </ul> <p>The configuration of the parameters for the Hacker News node should now look like this:</p> Hacker News node parameters"},{"location":"workflow/courses/level-one/chapter-2/#settings","title":"Settings","text":"<p>The Settings section includes several options for node design and executions. In this case, we'll configure only the first two settings, which set the node's appearance in the Editor UI. In the Hacker News node settings, edit:</p> <ul> <li>Notes: Get the 10 latest articles</li> </ul> <p>Node notes</p> <p>It is often helpful, especially for complex or shared workflows, to add a short description in the node about what it does.</p> <ul> <li>Display note in flow?: toggle to true This option will display the description note under the node in the Editor UI.</li> </ul> <p>The configuration of the settings for the Hacker News node looks like this:</p> Hacker News node renaming <p>Renaming a node</p> <p>You can rename the node with a name that's more descriptive for your use case. There are two ways to do this:</p> <ul> <li>Select the node you want to rename and at the same time press the F2 key on your keyboard.</li> <li>Double-click on the node to open the node window. Click on the name of the node in the top left corner of the window, rename it as you like, then click Rename to save the node under the new name.</li> </ul> <p>Renaming a node from the keyboard</p>"},{"location":"workflow/courses/level-one/chapter-2/#3-save-the-workflow","title":"3. Save the workflow","text":"<p>Save the workflow under the name \u201cHacker News workflow\u201d By default, your workflow is automatically saved as \u201cMy workflow\u201d.</p> <p>There are two ways in which you can save a workflow:</p> <ul> <li>From the Canvas in Editor UI, click Ctrl + S or Cmd + S on your keyboard</li> <li>Click the Save button in the top right corner of the Editor UI</li> </ul>"},{"location":"workflow/courses/level-one/chapter-2/#4-execute-the-node","title":"4. Execute the node","text":"<p>Click on the Execute Node button in the top right corner of the node window. You should see 10 results in Table view.</p> Results in Table view for the Hacker News node"},{"location":"workflow/courses/level-one/chapter-2/#node-executions","title":"Node executions","text":"<p>Node execution</p> <p>A node execution represents a run of that node to retrieve the specified data.</p> <p>If a node executed successfully a small green circle with a number inside will appear on top of the node.</p> Successfully executed workflow <p>If the parameters are configured correctly and everything works fine, the requested data will be displayed in the node window in Table and JSON format. You can switch between these views by selecting the one you want from the JSON|Table button at the top of the node window.</p> <p>Table vs JSON views</p> <p>The Table view is the default. It displays the requested data in a table, where the rows are the records and the columns are the available attributes of those records.</p> Results in JSON view for the Hacker News node <p>The node window displays more information about the node execution:</p> <ul> <li>In the top left corner of the results window, you'll notice another piece of information: Items: 10. This field displays the number of items (records) that are returned by the node request. In our case, it's expected to be 10, since this is the limit we set in the node. But if you don't set a limit, it's useful to see how many records are actually returned.</li> <li>Next to the Items information, notice a small orange i icon. If you hover on it, you'll get two more pieces of information: Start Time (when the node execution started) and Execution Time (how long it took for the node to return the results from the moment it started executing). Start Time and Execution Time can provide insights into the performance of each individual node.</li> <li>In the bottom right corner right under the node window, there is a reference link to the node's documentation. Check it out if you run into trouble or are not sure how to configure the node's parameters.</li> </ul> <p>Error in nodes</p> <p>A red warning icon on a node means that the node has errors. This might happen if the node credentials are missing or incorrect, or the node parameters are not configured correctly.</p> Error in nodes"},{"location":"workflow/courses/level-one/chapter-2/#summary","title":"Summary","text":"<p>Congratulations, you just built your first workflow! In this lesson, you learned how to use Regular nodes, configure their parameters and settings, and save and execute your workflow.</p> <p>In the next lesson you will be introduced to your client, Nathan, who needs to automate his sales reporting work. You will build a more complex workflow for his use case, helping him become more productive at work.</p>"},{"location":"workflow/courses/level-one/chapter-3/","title":"Automating a (Real-world) Use Case","text":"<p>Meet Nathan \ud83d\ude4b. Nathan works as an Analytics Manager at ABCorp. His job is to support the ABCorp team with reporting and analytics. Being a true jack of all trades, he also handles several miscellaneous initiatives.</p> <p>Some of the things that Nathan does are very repetitive and mind-numbing. He wants to automate some of these tasks so that he doesn't burn out. As an Automation Expert, you are meeting with Nathan today to help him understand how he can offload some of his responsibilities to n8n.</p>"},{"location":"workflow/courses/level-one/chapter-3/#understanding-the-scenario","title":"Understanding the scenario","text":"<p>You \ud83d\udc69\u200d\ud83d\udd27: Nice to meet you, Nathan. Glad to be doing this! What's a repetitive task that is error-prone and that you'd like to get off your plate first?</p> <p>Nathan \ud83d\ude4b: Thanks for coming in! The most annoying one's gotta be the weekly sales reporting.</p> <p>I have to collect sales data from our legacy data warehouse, which manages data from the main business processes of an organization, such as sales or production. Now, each sales order can have the status Processing or Booked. I have to calculate the sum of all the Booked orders and announce them in the company Discord every Monday. Then I have to create a spreadsheet of all the Processing sales so that the Sales Managers can review them and check if they need to follow up with customers.</p> <p>This manual work is tough and requires high attention to detail to make sure that all the numbers are right. Inevitably, I sometimes lose my focus and mistype a number or don't get to do it on time. I've been criticized once by my manager for miscalculating the data.</p> <p>You \ud83d\udc69\u200d\ud83d\udd27: Oh no! Doesn't the data warehouse have a way to export the data?</p> <p>Nathan \ud83d\ude4b: The data warehouse was written in-house ages ago. It doesn't have a CSV export but they recently added a couple of API endpoints that expose this data, if that helps.</p> <p>You \ud83d\udc69\u200d\ud83d\udd27: Perfect! That's a good start. If you have a generic API, we can add some custom code and a couple of services to make an automated workflow. This gig has n8n written all over it. Let's get started!</p>"},{"location":"workflow/courses/level-one/chapter-4/","title":"Designing the Workflow","text":"<p>Now that we have an idea of what Nathan wants to automate, let's enumerate the steps he needs to take to achieve this:</p> <ol> <li>Get the relevant data (order id, order status, order value, employee name) from the data warehouse</li> <li>Filter the orders by their status (processing or booked)</li> <li>Calculate the total value of all the booked orders</li> <li>Notify the team members about the booked orders in the company's Discord channel</li> <li>Insert the details about the processing orders in Airtable for follow-up</li> <li>Schedule this workflow to run every Monday morning</li> </ol> <p>Nathan's workflow involves sending data from the company's data warehouse to two external services: Discord and Airtable. In between, the data has to be wrangled with general functions (conditional filtering, calculation, scheduling).</p> <p>n8n provides integrations for all these steps, so Nathan's workflow in n8n would look like this:</p> Nathan's workflow <p>You will build this workflow in 8 steps:</p> <ol> <li>Getting data from the data warehouse</li> <li>Inserting data into Airtable</li> <li>Filtering orders</li> <li>Setting values for processing orders</li> <li>Calculating booked orders</li> <li>Notifying the team</li> <li>Scheduling the workflow</li> <li>Activating and examining the workflow</li> </ol> <p>To build this workflow, you will need credentials that are sent in the email from n8n when you sign up for this course. If you haven't signed up already, you can do it here. If you haven't received a confirmation email after signing up, contact us.</p> Start building!"},{"location":"workflow/courses/level-one/chapter-6/","title":"Exporting and importing workflows","text":"<p>In this chapter you will learn how to export and import workflows.</p>"},{"location":"workflow/courses/level-one/chapter-6/#exporting-and-importing-workflows_1","title":"Exporting and importing workflows","text":"<p>n8n workflows can be saved locally as JSON files. This is useful if you want to share your workflow with someone else, or import a workflow from someone else.</p> <p>Sharing credentials</p> <p>Note that the exported JSON file of your workflow will contain your credentials as well. If you don't want to share your credentials (recommended), delete them from the JSON file.</p> <p>You can export and import workflows in two ways:</p> <ul> <li>From the Editor UI:<ul> <li>Export: In the left panel, in the Workflow section, click on Download. This will download your current workflow as a JSON file on your computer.</li> <li>Import: In the left panel, click on Import from URL (to import a published workflow) or Import from File (to import a workflow as a JSON file).</li> </ul> </li> <li>From the command line:<ul> <li>Export: See the full list of commands  for exporting workflows or credentials.</li> <li>Import: See the full list of commands  for importing workflows or credentials.</li> </ul> </li> </ul>"},{"location":"workflow/courses/level-one/chapter-7/","title":"Test your knowledge","text":"<p>Congratulations, you finished the n8n Course Level 1!</p> <p>You've learned a lot about workflow automation and built your first business workflow. Why not showcase your skills?</p> <p>You can test your knowledge by taking a quiz, which consists of questions about the theoretical concepts and workflows covered in this course.</p> <pre><code>- You need to have at least 80% correct answers in each part to pass the quiz.\n- You can take the quiz as many times as you want.\n- There is no time limit on answering the quiz questions.\n</code></pre> <p></p> Take the quiz!"},{"location":"workflow/courses/level-one/chapter-7/#whats-next","title":"What's next?","text":"<ul> <li>Create new workflows for your work or personal use and share them with us. Don't have any ideas? Find inspiration on our blog, YouTube channel, community forum, and Discord server.</li> <li>Take the n8n Course Level 2.</li> </ul>"},{"location":"workflow/courses/level-one/chapter-5/chapter-5.1/","title":"1. Getting Data From the Data Warehouse","text":"<p>In this part of the workflow you will learn how to get data by making HTTP requests using the HTTP Request node.</p> <p>First, let's set up the scene for building Nathan's workflow. Open your Editor UI and create a new workflow with one of the two possible commands:</p> <ul> <li>Click Ctrl + Alt + N or Cmd + Option + N on your keyboard</li> <li>Open the left menu and click on New under the Workflow section</li> </ul> <p>Name this new workflow \u201cNathan's workflow\u201d.</p> <p>The first thing you need to do is get data from ABCorp's old data warehouse.</p> <p>In the previous chapter, you used a regular node for a specific app (YCombinator). However, not all apps or services have dedicated nodes \u2013 like the legacy data warehouse from Nathan's company.</p> <p>Though it's not possible to directly export the data, the data warehouse has a couple of API endpoints. That's all we need to access the data via the HTTP Request node in n8n.</p> <p>No node for that service?</p> <p>The HTTP Request node is one of the most versatile nodes, allowing you to make HTTP requests which can be used to query data from apps and services. You can use it to access data from apps or services that don't have a dedicated node in n8n.</p> <p>Now, in your Editor UI, add an HTTP Request node like you learned in the lesson Adding nodes. The node window will open, where you need to configure some parameters.</p> HTTP Request node <p>In the left panel, select:</p> <ul> <li>URL: The Dataset URL your received in the email when you signed up for this course.</li> <li>Options &gt; Add Option &gt; Split Into Items: toggle to true.     This option will output each element of an array as its own item.</li> <li>Headers &gt; Add Header:</li> <li>Name: <code>unique_id</code></li> <li>Value: The Unique ID your received in the email when you signed up for this course.</li> <li>Authentication: Header Auth     This option requires credentials to allow you to access the data.</li> </ul> <p>Credentials</p> <p>Credentials are unique pieces of information that identify a user or a service and enable them to access apps or services (in our case, represented as n8n nodes). A common form of credentials is a username and a password, but they can take other forms depending on the service.</p> <p>To add your credentials, click on the field Credential for Header Auth and select Create New. This will open the Credentials window.</p> <p>In the Connection tab, fill in the two fields:</p> <ul> <li>Name: The Header Auth name you received in the email when you signed up for this course.</li> <li>Value: The Header Auth value you received in the email when you signed up for this course.</li> </ul> <p>Credentials naming</p> <p>New credentials are named \"node name account\" by default. You can rename the credentials by clicking on the name, similarly to renaming nodes. It's good practice to give them names that identify the app/service, type, and purpose of the credential. A naming convention makes it easier to keep track of and identify your credentials.</p> <p>Click on the Save button in the top right corner to save your credentials. Your Credentials Connection window should look like this:</p> HTTP Request node credentials <p>Now click the Save button in the bottom right corner of the window.</p> <p>In the HTTP Request node window, click the Execute Node button. The result of the HTTP request should look like this:</p> HTTP Request node window <p>This view should be familiar to you from the Hacker News mini-workflow. This is the data from ABCorp's data warehouse that Nathan needs to work with. This data set includes sales information of 30 customers with 5 features:</p> <ul> <li>orderID: The unique id of each order.</li> <li>customerID: The unique id of each customer.</li> <li>employeeName: The name of Nathan's colleagues who are responsible for each client.</li> <li>orderPrice: The total price of the customer's order.</li> <li>orderStatus: Whether the customer's order is booked or still in processing.</li> </ul>"},{"location":"workflow/courses/level-one/chapter-5/chapter-5.1/#whats-next","title":"What's next?","text":"<p>Nathan \ud83d\ude4b: This is great! You already automated an important part of my job with only one node. Now instead of manually accessing the data every time I need it, I can use the HTTP Node to automatically get the information.</p> <p>You \ud83d\udc69\u200d\ud83d\udd27: Exactly! In the next step, I'll help you one step further and insert the received data into Airtable, as you need it.</p>"},{"location":"workflow/courses/level-one/chapter-5/chapter-5.2/","title":"2. Inserting Data into Airtable","text":"<p>In this step of the workflow you will learn how to insert the data received via the HTTP Request node into Airtable using the Airtable node.</p> <p>At this point, your workflow should look like this:</p> Workflow with the Airtable node <p>If we are going to insert data into Airtable, we first need to set up a table there. To do this:</p> <ol> <li>Create an Airtable account.</li> <li> <p>In your Airtable workspace add a new base from scratch and name it, for example, beginner course.</p> <p>Create an Airtable base</p> </li> <li> <p>In the beginner course base you have by default a Table 1 with four fields: Name, Notes, Attachment, and Status. These fields are not relevant for us since they are not in our orders data set. This brings us to the next point: the names of the fields in Airtable have to match the names of the columns in the node result.</p> <ul> <li>Replace the four default table fields with the five column names from the data set, selecting <code>Number</code> field type for orderID, customerID, and orderPrice, and <code>Single line text</code> for employeeName and orderStatus.</li> <li>Delete the 3 blank rows created by default.</li> <li>Also, rename the table from Table 1 to orders to make it easier to identify.</li> </ul> </li> </ol> <p>Now your table should look like this:</p> Orders table in Airtable <p>Now that the table is prepared let's return to the workflow in the Editor UI.</p> <p>Add an Airtable node connected to the HTTP Request node.</p> <p>Spreadsheet nodes</p> <p>You can replace the Airtable node with another spreadsheet app/service. For example, n8n also has nodes for Google Sheets and Spreadsheet File.</p> <p>In the Airtable node window, configure the following parameters:</p> <ul> <li>Airtable API:<ul> <li>Name: The name of your credentials (e.g. airtable_api)</li> <li>API Key: Your API key. Adding credentials for Airtable is similar to the HTTP Request node you configured in the previous chapter. However, the process of obtaining an API key for Airtable (and other apps/services) is different.</li> </ul> </li> <li>Operation: Append This operation will append the new data to the table.</li> <li>Base ID: The ID of the beginner_course base. To get the base Base ID, go to Airtable's API page and click on the base you want to use. The Base ID will be listed in the introduction.</li> <li>Table: orders</li> </ul> <p>Now execute the Airtable node and you should get the following result:</p> Airtable node results <p>All 30 data records will now appear in the orders table:</p> Imported records in the orders table"},{"location":"workflow/courses/level-one/chapter-5/chapter-5.2/#whats-next","title":"What's next?","text":"<p>Nathan \ud83d\ude4b: Wow, this automation is really useful! But this inserts all collected data from the HTTP Request node into Airtable. Remember that I actually need to insert only processing orders in the table and calculate the price of booked orders?</p> <p>You \ud83d\udc69\u200d\ud83d\udd27: Sure, no problem. As a next step, I'll use a new node to filter the orders based on their status.</p>"},{"location":"workflow/courses/level-one/chapter-5/chapter-5.3/","title":"3. Filtering Orders","text":"<p>In this step of the workflow you will learn how to filter data using conditional logic and how to use expressions in nodes using the IF node.</p> <p>To insert only processing orders into Airtable we need to filter our data by orderStatus. Basically, we want to tell the program that if the orderStatus is processing, then insert all records with this status into Airtable; else, i.e. if the orderStatus is not processing, calculate the sum of all orders with the other orderStatus (booked).</p> <p>This if-then-else command is conditional logic. In n8n workflows, conditional logic can be implemented with the IF node, which splits a workflow conditionally based on comparison operations.</p> <p>IF vs Switch</p> <p>If you need to filter data on more than two conditional routes that are possible with the IF node (true and false), use the Switch node. The Switch node is similar to the IF node, but supports up to four conditional routes.</p> <p>Back to your workflow, remove the connection between the HTTP Request node and the Airtable node. Add an IF node connected to the HTTP Request node.</p> <p>In the IF node window click on Add Condition &gt; string and configure the parameters:</p> <ul> <li> <p>Value 1: Current Node &gt; Input Data &gt; JSON &gt; orderStatus \u2192 <code>{{$json[\"orderStatus\"]}}</code>  To select this value, click on the wheel icon \u201cAdd Expression\u201d on the right side of the Value 1 field.</p> <p>Expressions</p> <p>An expression is a string of characters and symbols in a programming language that represents a value depending upon its input. In n8n workflows, you can use expressions in a node to refer to another node for input data. In our example, the IF node references the data output by the HTTP Request node.</p> <p>Expression Editor in the IF node</p> </li> <li> <p>Operation: equal</p> </li> <li>Value 2: processing</li> </ul> <p>Data Type</p> <p>Make sure to select the correct data type (boolean, date &amp; time, number, or string) of the referenced data in Add Condition.</p> <p>Now execute the IF node and have a look at the resulting data, which should look like this:</p> IF node <p>Next, we want to insert this data into Airtable. You already know how to do this from the previous chapter where we inserted all data into the orders table.</p> <p>At this stage, your workflow should look like this:</p> Workflow with the IF node"},{"location":"workflow/courses/level-one/chapter-5/chapter-5.3/#whats-next","title":"What's next?","text":"<p>Nathan \ud83d\ude4b: This IF node is really useful for filtering data! Now I have all the information about processing orders. I actually only need the employeeName and orderId, but I guess I can keep all the other fields just in case.</p> <p>You \ud83d\udc69\u200d\ud83d\udd27: Actually, I wouldn't recommend doing that. Inserting more data requires more computational power, the data transfer is slower and takes longer, and takes up more storage resources in your table. In this particular case, 14 records with 5 features might not seem like a lot to make a significant difference, but if your business grows to thousands of records and tens of features, things add up and even one extra column can affect performance.</p> <p>Nathan \ud83d\ude4b: Oh, that's good to know. So, can you select only two fields from the processing orders?</p> <p>You \ud83d\udc69\u200d\ud83d\udd27: Sure, I'll do that in the next step.</p>"},{"location":"workflow/courses/level-one/chapter-5/chapter-5.4/","title":"4. Setting Values for Processing Orders","text":"<p>In this step of the workflow you will learn how to select and set data before transferring it to Airtable using the Set node.</p> <p>The next step in Nathan's workflow is to insert the employeeName and orderId of all processing orders into Airtable.</p> <p>For this, you need to use the Set node, which allows you to select and set the data you want to be transferred from one app/service to another.</p> <p>Set node</p> <p>The Set node can set completely new data as well as overwrite data that already exists. This node is crucial in workflows which expect incoming data from previous nodes, such as when inserting values into spreadsheets or databases.</p> <p>In your workflow, add a new Set node between the IF node and the Airtable node. In the Set node window you need to toggle Keep Only Set to true and then add two values:</p> <ul> <li>Add Value &gt; Number:</li> <li>Name: orderId</li> <li>Value: <code>{{$json[\"orderID\"]}}</code> Current Node &gt; Input Data &gt; JSON &gt; orderID</li> <li>Add Value &gt; String:</li> <li>Name: employeeName</li> <li>Value: <code>{{$json[\"employeeName\"]}}</code> Current Node &gt; Input Data &gt; JSON &gt; employeeName</li> </ul> <p>After setting the two values click on Execute Node and you should see the following results:</p> Set node <p>Next, we need to insert these values into Airtable. Go to your Airtable account and add a new table called processingOrders with two columns, orderId and employeeName, just like you learned in the lesson Inserting data into Airtable.</p> <p>Remember to update the Airtable node configuration to point to this new table.</p> <p>Once that's done, execute the Airtable node in the workflow and you should see the records inserted in the table.</p> <p>At this stage, it looks like this:</p> Workflow with the Set node"},{"location":"workflow/courses/level-one/chapter-5/chapter-5.4/#whats-next","title":"What's next?","text":"<p>Nathan \ud83d\ude4b: You've already automated half of my work! Now I still need to calculate the booked orders for my colleagues. Can that be automated as well?</p> <p>You \ud83d\udc69\u200d\ud83d\udd27: Of course! In the next step, I'll use some JavaScript code in a node to calculate the booked orders.</p>"},{"location":"workflow/courses/level-one/chapter-5/chapter-5.5/","title":"5. Calculating Booked Orders","text":"<p>In this step of the workflow you will learn how n8n data is structured and how to add custom JavaScript code to perform calculations using the Function node.</p> <p>The next step in Nathan's workflow is to calculate two values from the booked orders:</p> <ul> <li>The total number of booked orders</li> <li>The total value of all booked orders</li> </ul> <p>To calculate data and add more functionality to your workflows you can use the Function node, which lets you write custom JavaScript code.</p> <p>Function vs Function Item</p> <p>n8n also provides a Function Item node, which should not be confused with the Function node. The Function Item node is used to add custom snippets of JavaScript code that should be executed once for every item that it receives as the input. Learn more about the difference between the Function and Function Item nodes here.</p> <p>Before going into the setup of the Function node, you should first learn the data structure of n8n. This is important if you want to:</p> <ul> <li>Create your own node.</li> <li>Write custom expressions.</li> <li>Use the Function or Function Item node.</li> <li>Get the most out of n8n.</li> </ul> <p>In n8n, the data that is passed between nodes is an array of objects with the following structure:</p> <pre><code>[\n{\n// Each item has to contain a \"json\" property. But it can be an empty object like {}.\n// Any kind of JSON data is allowed. So arrays and the data being deeply nested is fine.\njson: { // The actual data n8n operates on (required)\n// This data is only an example it could be any kind of JSON data\njsonKeyName: 'keyValue',\nanotherJsonKey: {\nlowerLevelJsonKey: 1\n}\n},\n// Binary data of item. The most items in n8n do not contain any (optional)\nbinary: {\n// The key-name \"binaryKeyName\" is only an example. Any kind of key-name is possible.\nbinaryKeyName: {\ndata: '....', // Base64 encoded binary data (required)\nmimeType: 'image/png', // Optional but should be set if possible (optional)\nfileExtension: 'png', // Optional but should be set if possible (optional)\nfileName: 'example.png', // Optional but should be set if possible (optional)\n}\n}\n},\n...\n]\n</code></pre> <p>Now let's see how to implement this.</p> <p>In your workflow, add a Function node connected to the false branch of the IF node. In the Function node window paste the following code in the JavaScript Code box:</p> <pre><code>let totalBooked = items.length;\nlet bookedSum = 0;\n\nfor(let i=0; i &lt; items.length; i++) {\nbookedSum = bookedSum + items[i].json.orderPrice;\n}\nreturn [{json:{totalBooked, bookedSum}}];\n</code></pre> <p>Notice the format in which we return the results of the calculation: <code>return [{json:{totalBooked, bookedSum}}]</code></p> <p>Data structure error</p> <p>If you don't use the correct data structure, you will get an error message: <code>Error: Always an Array of items has to be returned!</code></p> <p>Now execute the node and you should see the following results:</p> Function node"},{"location":"workflow/courses/level-one/chapter-5/chapter-5.5/#whats-next","title":"What's next?","text":"<p>Nathan \ud83d\ude4b: Wow, the Function node is really powerful! So if I have some basic JavaScript skills I can power up my workflows.</p> <p>You \ud83d\udc69\u200d\ud83d\udd27: Exactly \u2013 you can progress from no-code to low-code!</p> <p>Nathan \ud83d\ude4b: Now, how do I send the calculations for the booked orders to my team's Discord channel?</p> <p>You \ud83d\udc69\u200d\ud83d\udd27: There's an n8n node for that \u2013 I'll set it up in the next step.</p>"},{"location":"workflow/courses/level-one/chapter-5/chapter-5.6/","title":"6. Notifying the Team","text":"<p>In this step of the workflow you will learn how to send messages to a Discord channel using the Discord node.</p> <p>Now that you have a calculated summary of the booked orders, you need to notify Nathan's team in their Discord channel. For this workflow, you will send messages to the n8n server on Discord.</p> <p>Communication nodes</p> <p>You can replace the Discord node with another communication app. For example, n8n also has nodes for Slack and Mattermost.</p> <p>In your workflow, add a Discord node connected to the Function node. In the Discord node window, configure the parameters:</p> <ul> <li>Webhook URL: Enter the URL that you received in the email from n8n when you signed up for this course.</li> <li>Text (Expression): This week we have <code>{{$json[\"totalBooked\"]}}</code> booked orders with a total value of <code>{{$json[\"bookedSum\"]}}</code>. My Unique ID: <code>{{$node[\"HTTP Request\"].parameter[\"headerParametersUi\"][\"parameter\"][0][\"value\"]}}</code></li> </ul> Discord node expression <p>Now execute the Discord node. If all works well, your message should appear in the Discord channel #course-level-1.</p> Discord message"},{"location":"workflow/courses/level-one/chapter-5/chapter-5.6/#whats-next","title":"What's next?","text":"<p>Nathan \ud83d\ude4b: Incredible, you've saved me so many hours of tedious work already! Now I can simply execute this workflow when I need it. I just need to remember to run it every Monday morning at 9 am...</p> <p>You \ud83d\udc69\u200d\ud83d\udd27: Don't worry about that, you can actually schedule the workflow to run on a specific day, time, or interval. I'll set this up in the next step.</p>"},{"location":"workflow/courses/level-one/chapter-5/chapter-5.7/","title":"7. Scheduling the Workflow","text":"<p>In this step of the workflow you will learn how to schedule your workflow so that it runs automatically at a set time/interval using the Cron node.</p> <p>The workflow you've built so far executes only when you click on Execute Workflow. But Nathan needs it to run automatically every Monday morning. You can do this with the Cron node, which allows you to schedule workflows to run periodically at fixed dates, times, or intervals.</p> <p>In your workflow, replace the Start node with the Cron node, and configure its parameters:</p> <ul> <li>Mode: Every Week</li> <li>Hour: 9</li> <li>Minute: 0</li> <li>Weekday: Monday</li> </ul> Cron node <p>Keep in mind</p> <p>To ensure accurate scheduling with the Cron node, be sure the timezone is set correctly for your n8n instance (or the workflow).</p>"},{"location":"workflow/courses/level-one/chapter-5/chapter-5.7/#whats-next","title":"What's next?","text":"<p>You \ud83d\udc69\u200d\ud83d\udd27: That was it for the workflow! I've added and configured all necessary nodes. Now every time you click on Execute Workflow, all nodes will be executed: getting, filtering, calculating, and transferring the sales data.</p> <p>Nathan \ud83d\ude4b: This is just what I needed! So now my workflow will run automatically every Monday morning?</p> <p>You \ud83d\udc69\u200d\ud83d\udd27: Not so fast. To do that, you need to activate your workflow. I'll do this in the next step and show you how to interpret the execution log.</p>"},{"location":"workflow/courses/level-one/chapter-5/chapter-5.8/","title":"8. Activating and Examining the Workflow","text":"<p>In this step of the workflow you will learn how to activate your workflow and change the default workflow settings.</p> <p>Activating a workflow means that it will run automatically every time a trigger node receives input or meets a condition. By default, all newly created workflows are deactivated.</p> <p>To activate your workflow toggle the Active button on the top right corner of the Editor UI. Nathan's workflow will now be executed automatically every Monday at 9 am.</p> Activated workflow <p>Workflow Executions</p> <p>An execution represents a completed run of a workflow, from the first to the last node. n8n logs workflow executions, allowing you to see if the workflow was completed successfully or not. The execution log is useful for debugging your workflow and seeing at what stage it runs into issues.</p> <p>To see the execution log, in your Editor UI click on Executions in the left panel. This will open the Workflow Executions window.</p> Workflow Execution List <p>The Workflow Executions window displays a table with the following information:</p> <ul> <li>Started At / ID: The date and time when the workflow started, followed by the ID of this workflow execution</li> <li>Name: The name of the workflow</li> <li>Status: The status of the workflow (Error, Running, or Success)</li> <li>Mode: How the workflow was triggered (trigger or webhook)</li> <li>Running Time: The duration it took the workflow to execute</li> </ul> <p>Workflow execution status</p> <p>In the Workflow Executions window you can filter the displayed executions by workflow and by status (All, Error, Running, or Success).\\</p> <p>The information displayed here depends on what workflows and executions you set up in Workflow Settings to be saved.</p> <p>Workflow Settings</p> <p>You can customize your workflows and executions, or overwrite some of the global default settings in Workflow Settings. These settings are located in the left panel of the Editor UI, under the Workflows section.</p> Workflow Settings <p>In the Workflow Settings window you can configure the following settings:</p> <ul> <li>Error Workflow: A workflow to run in case the execution of the current workflow fails.</li> <li>Timezone: The timezone to use in the current workflow. If not set, the global Timezone (by default \"New York\") is used. This setting is particularly important for the Cron node, as you want to make sure that the workflow gets executed at the right time.</li> <li>Save Data Error Execution: If the Execution data of the workflow should be saved when it fails.</li> <li>Save Data Success Execution: If the Execution data of the workflow should be saved when it succeeds.</li> <li>Save Manual Executions: If executions started from the Editor UI should be saved.</li> <li>Save Execution Progress: If the execution data of each node should be saved. If Yes, you can resume the workflow from where it stopped in case of an error, though keep in mind that this might make the execution slower.</li> </ul>"},{"location":"workflow/courses/level-one/chapter-5/chapter-5.8/#whats-next","title":"What's next?","text":"<p>You \ud83d\udc69\u200d\ud83d\udd27: That was it! Now you have a 7-node workflow that will run automatically every Monday morning. You don't have to worry about remembering to wrangle the data. Instead, you can start your week with more meaningful or exciting work.</p> <p>Nathan \ud83d\ude4b: This workflow is incredibly helpful, thank you! Now, what's next for you?</p> <p>You \ud83d\udc69\u200d\ud83d\udd27: I'd like to build more workflows, share them with others, and use some workflows built by other people.</p>"},{"location":"workflow/courses/level-two/","title":"Introduction","text":"<p>Welcome to the n8n Course Level 2!</p>","tags":["Workflow\u00b2","Course Level 2"]},{"location":"workflow/courses/level-two/#is-this-course-right-for-me","title":"Is this course right for me?","text":"<p>This course is for you if you:</p> <ul> <li>Want to automate somewhat complex business processes.</li> <li>Want to dive deeper into n8n after taking the Level 1 course.</li> </ul>","tags":["Workflow\u00b2","Course Level 2"]},{"location":"workflow/courses/level-two/#what-will-i-learn-in-this-course","title":"What will I learn in this course?","text":"<p>The focus in this course is on working with data. You will learn how to:</p> <ul> <li>Use the data structure of n8n correctly.</li> <li>Process different data types (for example, XML, HTML, date, time, and binary data).</li> <li>Merge data from different sources (for example, a database, spreadsheet, or CRM).</li> <li>Use functions and JavaScript code in the Function node.</li> <li>Deal with error workflows and workflow errors.</li> </ul> <p>You will learn all this by completing short practical exercises after the theoretical explanations, and building a business workflow following instructions.</p>","tags":["Workflow\u00b2","Course Level 2"]},{"location":"workflow/courses/level-two/#what-do-i-need-to-get-started","title":"What do I need to get started?","text":"<p>To follow along this course (at a comfortable pace) you will need the following:</p> <ul> <li>n8n set up: You can use the self-hosted version, n8n.cloud, or the desktop app.</li> <li>A user ID: Sign up here to get your unique ID and other credentials you will need in the course.</li> <li>Basic n8n skills. We strongly recommend taking the Level 1 course prior to this one.</li> <li>Basic JavaScript understanding.</li> </ul>","tags":["Workflow\u00b2","Course Level 2"]},{"location":"workflow/courses/level-two/#how-long-does-the-course-take","title":"How long does the course take?","text":"<p>Completing the course should take around two hours. You do not have to complete it in one go, feel free to take breaks and resume whenever you are ready.</p>","tags":["Workflow\u00b2","Course Level 2"]},{"location":"workflow/courses/level-two/#how-do-i-complete-the-course","title":"How do I complete the course?","text":"<p>There are two milestones in this course that test your knowledge of what you have learned in the lessons:</p> <ul> <li>[x] Building the main workflow</li> <li>[x] Passing the quiz at the end of the course</li> </ul> <p>You can always check your progress throughout the course by entering your unique ID here.</p> <p>If you successfully complete the milestones above, you will get a badge and an avatar in your forum profile. You can then share your profile and course verification ID to showcase your n8n skills to others.</p>","tags":["Workflow\u00b2","Course Level 2"]},{"location":"workflow/courses/level-two/chapter-1/","title":"Understanding the data structure","text":"<p>In this chapter, you will learn about the data structure of n8n and how to use the Function node to transform data and simulate node outputs.</p>"},{"location":"workflow/courses/level-two/chapter-1/#data-structure-of-n8n","title":"Data structure of n8n","text":"<p>In a basic sense, n8n nodes function as an Extract, Transform, Load (ETL) tool. The nodes allow you to access (extract) data from multiple disparate sources, modify (transform) that data in a particular way, and pass (load) it along to where it needs to be.</p> <p>The data that moves along from node to node in your workflow must be in a format (structure) that can be recognized and interpreted by each node. In n8n, this required structure is an array of objects.</p> <p>What is an array of objects?</p> <p>An array is a list of values. The array can be empty or contain several elements. Each element is stored at a position (index) in the list, starting at 0, and can be referenced by the index number. For example, in the array <code>[\"Leonardo\", \"Michelangelo\", \"Donatello\", \"Raphael\"];</code> the element <code>Donatello</code> is stored at index 2.</p> <p>An object stores key-value pairs, instead of values at numbered indexes as in arrays. The order of the pairs is not important, as the values can be accessed by referencing the key name. For example, the object below contains two properties (<code>name</code> and <code>color</code>):</p> <pre><code>{\nname: 'Michelangelo',\ncolor: 'blue',\n}\n</code></pre> <p>An array of objects is an array that contains one or more objects. For example, the array <code>turtles</code> below contains four objects:</p> <pre><code>var turtles = [\n{\nname: 'Michelangelo',\ncolor: 'orange',\n},\n{\nname: 'Donatello',\ncolor: 'purple',\n},\n{\nname: 'Raphael',\ncolor: 'red',\n},\n{\nname: 'Leonardo',\ncolor: 'blue',\n}\n];\n</code></pre> <p>You can access the properties of an object using dot notation with the syntax <code>object.property</code>. For example, <code>turtles[1].color</code> gets the color of the second turtle.</p> <p>Data sent from one node to another is sent as an array of JSON objects. The elements in this collection are called Items.</p> Items <p>An n8n node performs its action on each item of incoming data.</p> Items in the Customer Datastore node"},{"location":"workflow/courses/level-two/chapter-1/#creating-data-sets-with-the-function-node","title":"Creating data sets with the Function node","text":"<p>Now that you are familiar with the n8n data structure, you can use it to create your own data sets or simulate node outputs. To do this, use the Function node to write JavaScript code defining your array of objects with the following structure:</p> <pre><code>return [\n{\njson: {\nkey: 'value',\n}\n}\n];\n</code></pre> <p>For example, the array of objects representing the Ninja turtles would look like this in the Function node:</p> Array of objects in the Function node <p>JSON objects</p> <p>Notice that this array of objects contains an extra key: <code>json</code>. n8n expects you to wrap each object in an array in another object, with the key <code>json</code>.</p> <p>Illustration of data structure in n8n</p> <p>It's good practice to pass the data in the right structure used by n8n. But don't worry if you forget to add the <code>json</code> key to an item, n8n (version 0.166.0 and above) adds it automatically.</p> <p>You can also have nested pairs, for example if you want to define a primary and a secondary color. In this case, you need to further wrap the key-value pairs in curly braces <code>{}</code>.</p> <p>n8n data structure video</p> <p>This talk offers a more detailed explanation of data structure in n8n.</p> <p></p>"},{"location":"workflow/courses/level-two/chapter-1/#exercise","title":"Exercise","text":"<p>In a Function node, create an array of objects named <code>myContacts</code> that contains the properties <code>name</code> and <code>email</code>, and the <code>email</code> property is further split into <code>personal</code> and <code>work</code>.</p> <p>??? note \"Show me the solution\"</p> <pre><code>In the Function node, in the JavaScript Code field you have to write the following code:\n\n```js\n    var myContacts = [\n        {\n            json: {\n                name: 'Alice',\n                email: {\n                    personal: 'alice@home.com',\n                    work: 'alice@wonderland.org'\n                },\n            }\n        },\n        {\n            json: {\n                name: 'Bob',\n                email: {\n                    personal: 'bob@mail.com',\n                    work: 'contact@thebuilder.com'\n                    },\n            }\n        },\n    ];\n\n    return myContacts;\n```\n\nWhen you execute the Function node, the result should look like this:\n\n&lt;figure&gt;&lt;img src=\"assets/images/courses/level-two/chapter-one/exercise_function.png\" alt=\"\" style=\"width:100%\"&gt;&lt;figcaption align = \"center\"&gt;&lt;i&gt;Result of Function node&lt;/i&gt;&lt;/figcaption&gt;&lt;/figure&gt;\n</code></pre>"},{"location":"workflow/courses/level-two/chapter-1/#referencing-node-data-with-the-function-node","title":"Referencing node data with the Function node","text":"<p>Just like you can use expressions to reference data from other nodes, you can also use some methods and variables in the Function node.</p>"},{"location":"workflow/courses/level-two/chapter-1/#exercise_1","title":"Exercise","text":"<p>Let's build on the previous exercise, in which you used the Function node to create a data set of two contacts with their names and emails. Now, connect a second Function node to the first one. In the new node, write code to create a new column named <code>workEmail</code> that references the work email of the first contact.</p> <p>??? note \"Show me the solution\"     In the Function node, in the JavaScript Code field you have to write the following code:</p> <pre><code>    items[0].json.workEmail = items[0].json.email['work'];\n    return items;\n\n\nWhen you execute the Function node, the result should look like this:\n\n&lt;figure&gt;&lt;img src=\"assets/images/courses/level-two/chapter-one/exercise_function_reference.png\" alt=\"\" style=\"width:100%\"&gt;&lt;figcaption align = \"center\"&gt;&lt;i&gt;Function node reference&lt;/i&gt;&lt;/figcaption&gt;&lt;/figure&gt;\n</code></pre>"},{"location":"workflow/courses/level-two/chapter-1/#transforming-data","title":"Transforming data","text":"<p>The incoming data from some nodes may have a different data structure than the one used in n8n. In this case, you need to transform the data, so that each item can be processed individually.</p> <p>The two most common operations for data transformation are:</p> <ul> <li>Creating multiple items from one item</li> <li>Creating a single item from multiple items</li> </ul> <p>There are several ways to transform data for the purposes mentioned above:</p> <ul> <li>With the HTTP Request node, you can toggle the option <code>Split Into Items</code> to create multiple items from a single item. This is the easiest way to transform incoming web data with one click.</li> <li>With the Item Lists node, you can <code>Split Out Items</code> or <code>Aggregate Items</code>. This node is the easy way to modify the structure of incoming data that contain lists (arrays), without needing to use JavaScript code in the Function node.</li> <li> <p>With the Function node, you can write JavaScript functions to modify the data structure of incoming data:</p> <p>To create multiple items from a single item, you can use this JavaScript code:</p> <pre><code>return items[0].json.map(item =&gt; {\nreturn {\njson: item\n}\n});\n</code></pre> <p>To create a single item from multiple items, you can use this JavaScript code:</p> <pre><code>  return [\n{\njson: {\ndata_object: items.map(item =&gt; item.json)\n}\n}\n];\n</code></pre> </li> </ul>"},{"location":"workflow/courses/level-two/chapter-1/#exercise_2","title":"Exercise","text":"<p>Use the HTTP Request node to make a GET request to the Poemist API <code>https://www.poemist.com/api/v1/randompoems</code>. Transform the incoming data with the <code>Split Into Items</code> option and with the Function node.</p> <p>??? note \"Show me the solution\"</p> <pre><code>To get the poems from the Poemist API, execute the *HTTP Request node* with the following parameters:\n\n- Authentication: None\n- Request Method: GET\n- URL: https://www.poemist.com/api/v1/randompoems\n\nThe result should look like this:\n\n&lt;figure&gt;&lt;img src=\"assets/images/courses/level-two/chapter-one/exercise_transforming_noSplitItems.png\" alt=\"\" style=\"width:100%\"&gt;&lt;figcaption align = \"center\"&gt;&lt;i&gt;HTTP Request node without split items&lt;/i&gt;&lt;/figcaption&gt;&lt;/figure&gt;\n\n\nTo transform the data from the HTTP Request node, toggle the switch `Split Into Items`. The result should look like this:\n\n&lt;figure&gt;&lt;img src=\"assets/images/courses/level-two/chapter-one/exercise_transforming_splitItems.png\" alt=\"\" style=\"width:100%\"&gt;&lt;figcaption align = \"center\"&gt;&lt;i&gt;HTTP Request node with split items&lt;/i&gt;&lt;/figcaption&gt;&lt;/figure&gt;\n\nTo transform the data with the Function node, connect this node to the *HTTP Request node* (without the toggle for splitting data) and write the following code in the JavaScript Code field:\n\n```js\n    return items[0].json.map(item =&gt; {\n        return {\n            json: item\n        }\n    });\n```\n\nThe result should look like this:\n\n&lt;figure&gt;&lt;img src=\"assets/images/courses/level-two/chapter-one/exercise_transforming_function.png\" alt=\"\" style=\"width:100%\"&gt;&lt;figcaption align = \"center\"&gt;&lt;i&gt;Function node with code to transform items&lt;/i&gt;&lt;/figcaption&gt;&lt;/figure&gt;\n</code></pre>"},{"location":"workflow/courses/level-two/chapter-2/","title":"Processing different data types","text":"<p>In this chapter, you will learn how to process different types of data using n8n core nodes.</p>"},{"location":"workflow/courses/level-two/chapter-2/#html-and-xml-data","title":"HTML and XML data","text":"<p>You're most likely familiar with HTML and XML.</p> <p>HTML vs. XML</p> <p>HTML is a markup language used to describe the structure and semantics of a web page. XML looks similar to HTML, but the tag names are different, as they describe the kind of data they hold.</p> <p>If you need to process HTML or XML data in your n8n workflows, use the HTML Extract node or XML node.</p> <p>The HTML Extract node allows you to extract HTML content of a webpage, by referencing CSS selectors. This is useful if you want to collect structured information from a website (web-scraping).</p>"},{"location":"workflow/courses/level-two/chapter-2/#exercise","title":"Exercise","text":"<p>Use the HTTP Request node to make a GET request to the URL <code>https://www.daysoftheyear.com/days/mar/2022/</code>. Then, connect an HTML Extract node and configure it to extract the date of the returned events.</p> <p>??? note \"Show me the solution\"</p> <pre><code>Configure the HTTP Request node with the following parameters:\n\n- Authentication: None\n- Request Method: GET\n- URL: https://www.daysoftheyear.com/days/mar/2022/\n\nThe result should look like this:\n\n&lt;figure&gt;&lt;img src=\"assets/images/courses/level-two/chapter-two/exercise_html_httpRequestNode.png\" alt=\"\" style=\"width:100%\"&gt;&lt;figcaption align = \"center\"&gt;&lt;i&gt;Result of HTTP Request node&lt;/i&gt;&lt;/figcaption&gt;&lt;/figure&gt;\n\nConnect an *HTML Extract node* to the HTTP Request node and configure the former's parameters:\n\n- Source Data: JSON\n- JSON Property: data\n- Extraction Values:\n    - Key: event\n    - CSS Selector: .js-link-target\n    - Return Value: HTML\n\n    You can add more values to extract more data.\n\nThe result should look like this:\n\n&lt;figure&gt;&lt;img src=\"assets/images/courses/level-two/chapter-two/exercise_html_htmlExtractNode.png\" alt=\"\" style=\"width:100%\"&gt;&lt;figcaption align = \"center\"&gt;&lt;i&gt;Result of HTML Extract node&lt;/i&gt;&lt;/figcaption&gt;&lt;/figure&gt;\n&lt;/details&gt;\n</code></pre> <p>The XML node allows you to convert XML to JSON and JSON to XML. This operation is useful if you work with different web services that use either XML or JSON, and need to get and submit data between them in the two formats.</p>"},{"location":"workflow/courses/level-two/chapter-2/#exercise_1","title":"Exercise","text":"<p>In a previous exercise, you used an HTTP Request node to make a request to an API. Now, use the XML node to convert the JSON output to XML.</p> <p>??? note \"Show me the solution\"</p> <pre><code>Get data from the Poemist API using the HTTP Request node and connect an XML node to it with the following parameters:\n\n- Mode: **JSON to XML**\n- Property name: **data**\n\nThe result should look like this:\n\n&lt;figure&gt;&lt;img src=\"assets/images/courses/level-two/chapter-two/exercise_html_xmlNode_json.png\" alt=\"\" style=\"width:100%\"&gt;&lt;figcaption align = \"center\"&gt;&lt;i&gt;XML node (JSON to XML) \u2013 JSON View&lt;/i&gt;&lt;/figcaption&gt;&lt;/figure&gt;\n\n&lt;figure&gt;&lt;img src=\"assets/images/courses/level-two/chapter-two/exercise_html_xmlNode_table.png\" alt=\"\" style=\"width:100%\"&gt;&lt;figcaption align = \"center\"&gt;&lt;i&gt;XML node (JSON to XML) \u2013 Table View&lt;/i&gt;&lt;/figcaption&gt;&lt;/figure&gt;\n\nTo transform data the other way around, select the mode **XML to JSON**.\n</code></pre>"},{"location":"workflow/courses/level-two/chapter-2/#date-time-and-interval-data","title":"Date, time, and interval data","text":"<p>Date and time data types include <code>DATE</code>, <code>TIME</code>, <code>DATETIME</code>, <code>TIMESTAMP</code>, and <code>YEAR</code>. The dates and times can be passed in different formats, for example:</p> <ul> <li><code>DATE</code>: March 29 2022, 29-03-2022, 2022/03/29</li> <li><code>TIME</code>: 08:30:00, 8:30, 20:30</li> <li><code>DATETIME</code>: 2022/03/29 08:30:00</li> <li><code>TIMESTAMP</code>: 1616108400 (Unix timestamp), 1616108400000 (Unix ms timestamp)</li> <li><code>YEAR</code>: 2022, 22</li> </ul> <p>If you need to convert date and time data to different formats, and calculate dates, use the Date &amp; Time node.</p> <p>You can also schedule workflows to run at a specific time, interval, or duration, using the two trigger nodes:</p> <ul> <li>Cron node triggers the workflow at fixed dates and/or times (for example, every Monday at 9am).</li> <li>Interval node triggers the workflow in regular intervals of time (for example, every 10 minutes).</li> </ul> <p>In some cases, you might need to pause the workflow execution. This might be necessary, for example, if you know that a service doesn't process the data instantly or it is generally slower, so you don't want the incomplete data to be passed to the next node. In this case, you can use the Wait node after the node that you want to delay. The Wait node pauses the workflow execution and resumes it at a specific time, after a time interval, or on a webhook call.</p>"},{"location":"workflow/courses/level-two/chapter-2/#exercise_2","title":"Exercise","text":"<p>Build a workflow that adds five days to an input date. Then, if the calculated date occurred after today, the workflow waits 1 minute before setting the calculated date as a value. The workflow should be triggered every 30 minutes.</p> <p>??? note \"Show me the solution\"</p> <pre><code>You can build this workflow using the data from the *Customer Datastore node*, the three nodes for managing date and time, an *IF node* for conditional routing, and a *Set node* for setting the new calculated date. The workflow looks like this:\n\n&lt;figure&gt;&lt;img src=\"assets/images/courses/level-two/chapter-two/exercise_dateTime.png\" alt=\"\" style=\"width:100%\"&gt;&lt;figcaption align = \"center\"&gt;&lt;i&gt;Workflow for transforming dates&lt;/i&gt;&lt;/figcaption&gt;&lt;/figure&gt;\n\nTo check the configuration of each node, you can copy the JSON code of this workflow and paste it in your Editor UI.\n\n```json\n{\n    \"nodes\": [\n        {\n            \"parameters\": {\n                \"action\": \"calculate\",\n                \"value\": \"={{$json[\\\"created\\\"]}}\",\n                \"duration\": 5,\n                \"options\": {}\n            },\n            \"name\": \"Date &amp; Time\",\n            \"type\": \"n8n-nodes-base.dateTime\",\n            \"typeVersion\": 1,\n            \"position\": [\n                880,\n                1500\n            ]\n        },\n        {\n            \"parameters\": {\n                \"unit\": \"hours\"\n            },\n            \"name\": \"Interval\",\n            \"type\": \"n8n-nodes-base.interval\",\n            \"typeVersion\": 1,\n            \"position\": [\n                520,\n                1500\n            ]\n        },\n        {\n            \"parameters\": {\n                \"unit\": \"minutes\"\n            },\n            \"name\": \"Wait\",\n            \"type\": \"n8n-nodes-base.wait\",\n            \"typeVersion\": 1,\n            \"position\": [\n                1240,\n                1500\n            ],\n            \"webhookId\": \"d17effb8-ad90-4a74-bb88-daa3d3d18583\"\n        },\n        {\n            \"parameters\": {\n                \"conditions\": {\n                    \"dateTime\": [\n                        {\n                            \"value1\": \"={{$json[\\\"data\\\"]}}\",\n                            \"value2\": \"2022-02-03T11:45:38.932Z\"\n                        }\n                    ]\n                }\n            },\n            \"name\": \"IF\",\n            \"type\": \"n8n-nodes-base.if\",\n            \"typeVersion\": 1,\n            \"position\": [\n                1060,\n                1500\n            ]\n        },\n        {\n            \"parameters\": {\n                \"values\": {\n                    \"string\": [\n                        {\n                            \"value\": \"={{$node[\\\"IF\\\"].json[\\\"data\\\"]}}\"\n                        }\n                    ]\n                },\n                \"options\": {}\n            },\n            \"name\": \"Set\",\n            \"type\": \"n8n-nodes-base.set\",\n            \"typeVersion\": 1,\n            \"position\": [\n                1420,\n                1500\n            ]\n        },\n        {\n            \"parameters\": {\n                \"operation\": \"getAllPeople\",\n                \"returnAll\": true\n            },\n            \"name\": \"Customer Datastore\",\n            \"type\": \"n8n-nodes-base.n8nTrainingCustomerDatastore\",\n            \"typeVersion\": 1,\n            \"position\": [\n                700,\n                1500\n            ]\n        }\n    ],\n    \"connections\": {\n        \"Date &amp; Time\": {\n            \"main\": [\n                [\n                    {\n                        \"node\": \"IF\",\n                        \"type\": \"main\",\n                        \"index\": 0\n                    }\n                ]\n            ]\n        },\n        \"Interval\": {\n            \"main\": [\n                [\n                    {\n                        \"node\": \"Customer Datastore\",\n                        \"type\": \"main\",\n                        \"index\": 0\n                    }\n                ]\n            ]\n        },\n        \"Wait\": {\n            \"main\": [\n                [\n                    {\n                        \"node\": \"Set\",\n                        \"type\": \"main\",\n                        \"index\": 0\n                    }\n                ]\n            ]\n        },\n        \"IF\": {\n            \"main\": [\n                [\n                    {\n                        \"node\": \"Wait\",\n                        \"type\": \"main\",\n                        \"index\": 0\n                    }\n                ]\n            ]\n        },\n        \"Customer Datastore\": {\n            \"main\": [\n                [\n                    {\n                        \"node\": \"Date &amp; Time\",\n                        \"type\": \"main\",\n                        \"index\": 0\n                    }\n                ]\n            ]\n        }\n    }\n}\n```\n</code></pre>"},{"location":"workflow/courses/level-two/chapter-2/#binary-data","title":"Binary data","text":"<p>So far, you have mainly worked with text data. But what if you want to process data that is not text? For example, images or PDF files. This is binary data, as it is represented in the binary numeral system. In this form, binary data doesn't offer you useful information, so it needs to be converted into a readable form.</p> <p>In n8n, you can process binary data with the following nodes:</p> <ul> <li>Move Binary Data node to move data between binary and JSON properties.</li> <li>Read Binary File node to read a file from the host machine that runs n8n.</li> <li>Read Binary Files to read multiple files from the host machine that runs n8n.</li> <li>Write Binary File to write a file to the host machine that runs n8n.</li> <li>Spreadsheet File node to read from or write to spreadsheet files of different formats (for example, CSV, XLSX).</li> </ul> <p>To read or write a binary file, you need to write the path (location) of the file in the node's <code>File Name</code> parameter.</p> <p>Naming the right path</p> <p>The file path looks slightly different on n8n cloud compared to desktop or self-hosted:</p> <ul> <li>n8n desktop and self-hosted: <code>./Documents/my_file.json</code></li> <li>n8n cloud: <code>/home/node/.n8n/my_file.json</code></li> </ul>"},{"location":"workflow/courses/level-two/chapter-2/#exercise_3","title":"Exercise","text":"<p>Make an HTTP request to get this PDF file: <code>https://media.kaspersky.com/pdf/Kaspersky_Lab_Whitepaper_Anti_blocker.pdf.</code> Then, use the Move Binary Data node to convert the file from binary to JSON, with base64 encoding.</p> <p>??? note \"Show me the solution\"</p> <pre><code>In the HTTP Request node, you should see the PDF file in JSON, Table, and Binary view, like this:\n\n&lt;figure&gt;&lt;img src=\"assets/images/courses/level-two/chapter-two/exercise_binaryData_httpRequest_file.png\" alt=\"\" style=\"width:100%\"&gt;&lt;figcaption align = \"center\"&gt;&lt;i&gt;HTTP Request node to get PDF&lt;/i&gt;&lt;/figcaption&gt;&lt;/figure&gt;\n\nWhen you convert the PDF from binary to JSON with base64 encoding using the *Move Binary Data node*, the result should look like this:\n\n&lt;figure&gt;&lt;img src=\"assets/images/courses/level-two/chapter-two/exercise_binaryData_moveData_btoj.png\" alt=\"\" style=\"width:100%\"&gt;&lt;figcaption align = \"center\"&gt;&lt;i&gt;Move Binary Data node (Binary to JSON) with base64 encoding&lt;/i&gt;&lt;/figcaption&gt;&lt;/figure&gt;\n\nTo check the configuration of the nodes, you can copy-paste the JSON code of the workflow:\n\n```json\n{\n    \"nodes\": [\n        {\n            \"parameters\": {\n                \"url\": \"https://media.kaspersky.com/pdf/Kaspersky_Lab_Whitepaper_Anti_blocker.pdf\",\n                \"responseFormat\": \"file\",\n                \"options\": {}\n            },\n            \"name\": \"HTTP Request\",\n            \"type\": \"n8n-nodes-base.httpRequest\",\n            \"typeVersion\": 1,\n            \"position\": [\n                1340,\n                1080\n            ]\n        },\n        {\n            \"parameters\": {\n                \"setAllData\": false,\n                \"options\": {\n                    \"encoding\": \"base64\"\n                }\n            },\n            \"name\": \"Move Binary Data\",\n            \"type\": \"n8n-nodes-base.moveBinaryData\",\n            \"typeVersion\": 1,\n            \"position\": [\n                1600,\n                1080\n            ]\n        }\n    ],\n    \"connections\": {\n        \"HTTP Request\": {\n            \"main\": [\n                [\n                    {\n                        \"node\": \"Move Binary Data\",\n                        \"type\": \"main\",\n                        \"index\": 0\n                    }\n                ]\n            ]\n        }\n    }\n}\n```\n</code></pre>"},{"location":"workflow/courses/level-two/chapter-2/#exercise_4","title":"Exercise","text":"<p>Make an HTTP request to the Poemist API <code>https://www.poemist.com/api/v1/randompoems</code> and move the returned data from JSON to binary. Then, write the new binary data to a file. Finally, to check that it worked out, read the generated binary file referencing it with an expression in the node.</p> <p>??? note \"Show me the solution\"</p> <pre><code>The workflow for this exercise looks like this:\n\n&lt;figure&gt;&lt;img src=\"assets/images/courses/level-two/chapter-two/exercise_binaryData.png\" alt=\"\" style=\"width:100%\"&gt;&lt;figcaption align = \"center\"&gt;&lt;i&gt;Workflow for moving JSON to binary data&lt;/i&gt;&lt;/figcaption&gt;&lt;/figure&gt;\n\nTo check the configuration of the nodes, you can copy-paste the JSON code of the workflow:\n\n```json\n{\n    \"nodes\": [\n        {\n            \"parameters\": {\n                \"filePath\": \"={{$json[\\\"fileName\\\"]}}\"\n            },\n            \"name\": \"Read Binary File\",\n            \"type\": \"n8n-nodes-base.readBinaryFile\",\n            \"typeVersion\": 1,\n            \"position\": [\n                1060,\n                500\n            ]\n        },\n        {\n            \"parameters\": {\n                \"url\": \"https://www.poemist.com/api/v1/randompoems\",\n                \"options\": {\n                    \"splitIntoItems\": true\n                }\n            },\n            \"name\": \"HTTP Request\",\n            \"type\": \"n8n-nodes-base.httpRequest\",\n            \"typeVersion\": 1,\n            \"position\": [\n                520,\n                500\n            ]\n        },\n        {\n            \"parameters\": {\n                \"fileName\": \"/home/node/.n8n/poemist.json\"\n            },\n            \"name\": \"Write Binary File\",\n            \"type\": \"n8n-nodes-base.writeBinaryFile\",\n            \"position\": [\n                880,\n                500\n            ],\n            \"typeVersion\": 1\n        },\n        {\n            \"parameters\": {\n                \"mode\": \"jsonToBinary\",\n                \"options\": {}\n            },\n            \"name\": \"Move Binary Data\",\n            \"type\": \"n8n-nodes-base.moveBinaryData\",\n            \"position\": [\n                700,\n                500\n            ],\n            \"typeVersion\": 1\n        }\n    ],\n    \"connections\": {\n        \"HTTP Request\": {\n            \"main\": [\n                [\n                    {\n                        \"node\": \"Move Binary Data\",\n                        \"type\": \"main\",\n                        \"index\": 0\n                    }\n                ]\n            ]\n        },\n        \"Write Binary File\": {\n            \"main\": [\n                [\n                    {\n                        \"node\": \"Read Binary File\",\n                        \"type\": \"main\",\n                        \"index\": 0\n                    }\n                ]\n            ]\n        },\n        \"Move Binary Data\": {\n            \"main\": [\n                [\n                    {\n                        \"node\": \"Write Binary File\",\n                        \"type\": \"main\",\n                        \"index\": 0\n                    }\n                ]\n            ]\n        }\n    }\n}\n```\n</code></pre>"},{"location":"workflow/courses/level-two/chapter-3/","title":"Merging and splitting data","text":"<p>In this chapter, you will learn how to merge and split data, and in what cases it might be useful to perform these operations.</p>"},{"location":"workflow/courses/level-two/chapter-3/#merging-data","title":"Merging data","text":"<p>In some cases, you might need to merge (combine) and process data from different sources.</p> <p>Merging data can involve:</p> <ul> <li>Creating one data set from multiple sources.</li> <li>Synchronizing data between multiple systems. For example, removing duplicate data, or updating data in one system when it changes in another.</li> </ul> <p>One-way vs. two-way sync<p>In a one-way sync, data is synchronized in one direction. One system serves as the single source of truth. When information changes in that main system, it automatically changes in the secondary system; but if information changes in the secondary system, the changes are not reflected in the main system.</p> <p>In a two-way sync, data is synchronized in both directions (between both systems). When information changes in either of the two systems, it automatically changes in the other one as well.</p> <p>This blog tutorial explains how to sync data one-way and two-way between two CRMs.</p> </p> <p>In n8n, you can merge data from two different nodes using the Merge node, which provides several merging modes:</p> <ul> <li>Append</li> <li>Keep Key Matches</li> <li>Merge By Index</li> <li>Merge By Key</li> <li>Multiples</li> <li>Pass-through</li> <li>Remove Key Matches</li> <li>Wait</li> </ul> <p>Notice that three of these modes require a key (Merge By Key, Keep Key Matches, Remove Key Matches). This key represents a common property between the two data sources, based on which the data can be merged. In the Merge node, they are called <code>Property Input 1</code> and <code>Property Input 2</code>.</p> Property Input fields in the Merge node <p>Property Input in dot notation</p> <p>If you want to reference nested values in the Merge node parameters <code>Property Input 1</code> and <code>Property Input 2</code>, you need to enter the property key in dot-notation format (as text, not as an expression).</p> <p>Note</p> <p>You can also find the Merge node under the alias Join. This might be more intuitive if you're familiar with SQL joins.</p>"},{"location":"workflow/courses/level-two/chapter-3/#exercise","title":"Exercise","text":"<p>Build a workflow that merges data from the Customer Datastore node and Function node.</p> <ul> <li>Add a Merge node that takes Input 1 from a Customer Datastore node and Input 2 from a Function node.</li> <li>In the Customer Datastore node, run the operation Get All People.</li> <li>In the Function node, create an array of two objects with three properties: <code>name</code>, <code>language</code>, and <code>country</code>, where the property <code>country</code> has two sub-properties <code>code</code> and <code>name</code>. Fill out the values of these properties with the information of two characters from the Customer Database. For example, Jay Gatsby's language would be English and country name would be United States.</li> <li>In the Merge node, try out different merge modes.</li> </ul> <p>??? note \"Show me the solution\"</p> <pre><code>The workflow for this exercise looks like this:\n\n&lt;figure&gt;&lt;img src=\"assets/images/courses/level-two/chapter-three/exercise_merge.png\" alt=\"\" style=\"width:100%\"&gt;&lt;figcaption align = \"center\"&gt;&lt;i&gt;Workflow exercise for merging data&lt;/i&gt;&lt;/figcaption&gt;&lt;/figure&gt;\n\nIf you merge data with the option *Keep Key Matches* using the country code as the common key, the result should look like this:\n\n&lt;figure&gt;&lt;img src=\"assets/images/courses/level-two/chapter-three/exercise_merge_kkm.png\" alt=\"\" style=\"width:100%\"&gt;&lt;figcaption align = \"center\"&gt;&lt;i&gt;Output of Merge node with option to keep key matches&lt;/i&gt;&lt;/figcaption&gt;&lt;/figure&gt;\n</code></pre>"},{"location":"workflow/courses/level-two/chapter-3/#looping","title":"Looping","text":"<p>In some cases, you might need to perform the same operation on each element of an array / each data item (for example sending a message to every contact in your address book). In technical terms, you need to iterate through the data (with loops).</p> <p>n8n handles this repetitive processing automatically, as the nodes run once for each item, so you don't need to build loops into your workflows. However, there are some exceptions of nodes and operations for which you need to build a loop into your workflow.</p> <p>To create a loop in an n8n workflow, you need to connect the output of one node to the input of a previous node, and add an IF node to check when to stop the loop.</p>"},{"location":"workflow/courses/level-two/chapter-3/#splitting-data-in-batches","title":"Splitting data in batches","text":"<p>If you need to process large incoming data, execute the Function node multiple times, or avoid API rate limits, it's best to split the data into batches (groups) and process these batches. You can do this with the Split in Batches node. This node splits input data into a specified batch size and, with each iteration, returns a predefined amount of data.</p> <p>Execution of Split in Batches node</p> <p>The Split In Batches node stops executing after all the incoming items get divided into batches and passed on to the next node in the workflow, so it is not necessary to add an IF node to stop the loop.</p>"},{"location":"workflow/courses/level-two/chapter-3/#exercise_1","title":"Exercise","text":"<p>Build a workflow that reads the RSS feed from Medium and dev.to. The workflow should consist of three nodes:</p> <ul> <li>A Function node that returns the URLs of the RSS feeds of Medium (<code>https://medium.com/feed/n8n-io</code>) and dev.to (<code>https://dev.to/feed/n8n</code>)</li> <li>A Split In Batches node with <code>Batch Size: 1</code>, that takes in the inputs from the Function node and RSS node and iterates over the items.</li> <li>An RSS Read node that gets the URL of the Medium RSS feed, passed as an expression: <code>{{$node[\"SplitInBatches\"].json[\"url\"]}}</code>. The RSS Read node is one of the exception nodes which processes only the first item it receives, so the Split in Batches node is necessary for iterating over multiple items.</li> </ul> <p>??? note \"Show me the solution\"</p> <pre><code>The workflow for this exercise looks like this:\n\n&lt;figure&gt;&lt;img src=\"assets/images/courses/level-two/chapter-three/exercise_splitInBatches.png\" alt=\"\" style=\"width:100%\"&gt;&lt;figcaption align = \"center\"&gt;&lt;i&gt;Workflow for getting RSS feeds from two blogs&lt;/i&gt;&lt;/figcaption&gt;&lt;/figure&gt;\n\nTo check the configuration of the nodes, you can copy-paste the JSON code of the workflow:\n\n```json\n{\n    \"nodes\": [\n        {\n            \"parameters\": {\n                \"functionCode\": \"return [\\n  {\\n    json: {\\n      url: 'https://medium.com/feed/n8n-io',\\n    }\\n  },\\n  {\\n    json: {\\n      url: 'https://dev.to/feed/n8n',\\n    }\\n  }\\n];\"\n            },\n            \"name\": \"Function\",\n            \"type\": \"n8n-nodes-base.function\",\n            \"position\": [\n                480,\n                1880\n            ],\n            \"typeVersion\": 1\n        },\n        {\n            \"parameters\": {\n                \"url\": \"={{$node[\\\"SplitInBatches\\\"].json[\\\"url\\\"]}}\"\n            },\n            \"name\": \"RSS Feed Read\",\n            \"type\": \"n8n-nodes-base.rssFeedRead\",\n            \"position\": [\n                880,\n                1880\n            ],\n            \"typeVersion\": 1\n        },\n        {\n            \"parameters\": {\n                \"batchSize\": 1,\n                \"options\": {}\n            },\n            \"name\": \"SplitInBatches\",\n            \"type\": \"n8n-nodes-base.splitInBatches\",\n            \"position\": [\n                680,\n                1880\n            ],\n            \"typeVersion\": 1\n        }\n    ],\n    \"connections\": {\n        \"Function\": {\n            \"main\": [\n                [\n                    {\n                        \"node\": \"SplitInBatches\",\n                        \"type\": \"main\",\n                        \"index\": 0\n                    }\n                ]\n            ]\n        },\n        \"RSS Feed Read\": {\n            \"main\": [\n                [\n                    {\n                        \"node\": \"SplitInBatches\",\n                        \"type\": \"main\",\n                        \"index\": 0\n                    }\n                ]\n            ]\n        },\n        \"SplitInBatches\": {\n            \"main\": [\n                [\n                    {\n                        \"node\": \"RSS Feed Read\",\n                        \"type\": \"main\",\n                        \"index\": 0\n                    }\n                ]\n            ]\n        }\n    }\n}\n```\n</code></pre>"},{"location":"workflow/courses/level-two/chapter-4/","title":"Dealing with errors in workflows","text":"<p>Sometimes it can happen that you're building a nice workflow, but when you try to execute it, it fails. There are many reasons why workflows executions may fail (some more or less mysterious), for example when a node is not configured correctly or a third-party service that you're trying to connect to is not working properly.</p> <p>But don't panic. We will show you some ways in which you can troubleshoot the issue, so you can get your workflow up and running as soon as possible.</p>"},{"location":"workflow/courses/level-two/chapter-4/#checking-failed-workflows","title":"Checking failed workflows","text":"<p>When one of your workflows fails, it's helpful to check the execution log by clicking on Executions in the left-side panel. The executions log shows you a list of the latest execution time, status, mode, and running time of your saved workflows.</p> <p>To investigate a specific workflow from the list, click on the folder icon on the row of the respective workflow.</p> Workflow Executions window <p>This will open the workflow in read-only mode, where you can see the execution of each node. This representation can help you identify at what point the workflow ran into issues.</p> Workflow execution view"},{"location":"workflow/courses/level-two/chapter-4/#catching-erroring-workflows","title":"Catching erroring workflows","text":"<p>To catch failed workflows, create a separate Error Workflow with the Error Trigger node, which gets executed if the main execution fails.</p> <p>Then, you can take further actions by connecting other nodes, for example sending notifications via email or Slack about the failed workflow and its errors. To receive error messages for a failed workflow, you need to select the option <code>Error Workflow</code> in the Workflow Settings of the respective workflow.</p> <p>The only difference between a regular workflow and an Error Workflow is that the latter contains an Error Trigger node. Make sure to create this node before you set a workflow as Error Workflow.</p> <p>Error workflows</p> <ul> <li>You don't need to activate workflows that use the Error Workflow node.</li> <li>A workflow that uses the Error Trigger node uses itself as the error workflow.</li> <li>The Error Trigger node is designed to get triggered only when the monitored workflow gets executed automatically. This means you can't test this (to see the result of) an error workflow while executing the monitored workflow manually.</li> <li>You can set the same Error Workflow for multiple workflows.</li> </ul>"},{"location":"workflow/courses/level-two/chapter-4/#exercise","title":"Exercise","text":"<p>In the previous chapters, you've built several small workflows. Now, pick one of them that you want to monitor. Create an Error Workflow that sends a message to a communication platform (for example, Slack, Discord, Telegram, or even email) if that workflow fails. Don't forget to set this Error Workflow in the settings of the monitored workflow.</p> <p>??? note \"Show me the solution\"</p> <pre><code>The workflow for this exercise looks like this:\n\n&lt;figure&gt;&lt;img src=\"assets/images/courses/level-two/chapter-four/exercise_errors_errorTriggerNode_workflow.png\" alt=\"\" style=\"width:100%\"&gt;&lt;figcaption align = \"center\"&gt;&lt;i&gt;Error workflow&lt;/i&gt;&lt;/figcaption&gt;&lt;/figure&gt;\n\nTo check the configuration of the nodes, you can copy-paste the JSON code of the workflow:\n\n```json\n{\n    \"nodes\": [\n        {\n            \"parameters\": {},\n            \"name\": \"Error Trigger\",\n            \"type\": \"n8n-nodes-base.errorTrigger\",\n            \"typeVersion\": 1,\n            \"position\": [\n                720,\n                -380\n            ]\n        },\n        {\n            \"parameters\": {\n                \"channel\": \"channelname\",\n                \"text\": \"=This workflow {{$node[\\\"Error Trigger\\\"].json[\\\"workflow\\\"][\\\"name\\\"]}}failed.\\nHave a look at it here: {{$node[\\\"Error Trigger\\\"].json[\\\"execution\\\"][\\\"url\\\"]}}\",\n                \"attachments\": [],\n                \"otherOptions\": {}\n            },\n            \"name\": \"Slack\",\n            \"type\": \"n8n-nodes-base.slack\",\n            \"position\": [\n                900,\n                -380\n            ],\n            \"typeVersion\": 1,\n            \"credentials\": {\n                \"slackApi\": {\n                    \"id\": \"17\",\n                    \"name\": \"slack_credentials\"\n                }\n            }\n        }\n    ],\n    \"connections\": {\n        \"Error Trigger\": {\n            \"main\": [\n                [\n                    {\n                        \"node\": \"Slack\",\n                        \"type\": \"main\",\n                        \"index\": 0\n                    }\n                ]\n            ]\n        }\n    }\n}\n```\n</code></pre>"},{"location":"workflow/courses/level-two/chapter-4/#throwing-exceptions-in-workflows","title":"Throwing exceptions in workflows","text":"<p>Another way of troubleshooting workflows is to include a Stop and Error node in your workflow. This node throws an error, which can be set to one of two error types: an error message or an error object. The error message returns a custom message about the error, while the error object returns the type of error.</p> <p>The Stop and Error node can only be added as the last node in a workflow.</p> <p>When to throw errors</p> <p>Throwing exceptions with the Stop and Error node is useful for verifying the data (or assumptions about the data) from a node and returning custom error messages.</p> <p>If you are working with data from a third-party service, you may come across problems such as: wrongly formatted JSON output, data with the wrong type (for example, numeric data that has a non-numeric value), missing values, or errors from remote servers.</p> <p>Though this kind of invalid data might not cause the workflow to fail right away, it could cause problems later on, and then it can become difficult to track the source error. This is why it is better to throw an error at the time you know there might be a problem.</p> <p>Stop and Error node with error message</p>"},{"location":"workflow/courses/level-two/chapter-6/","title":"Test your knowledge","text":"<p>Congratulations, you finished the n8n Course Level 2!</p> <p>You've learned a lot about workflow automation and built quite a complex business workflow. Why not showcase your skills?</p> <p>You can test your knowledge by taking a quiz, which consists of questions about the theoretical concepts and workflows covered in this course.</p> <ul> <li>You need to have at least 80% correct answers to pass the quiz.</li> <li>You can take the quiz as many times as you want.</li> <li>There is no time limit on answering the quiz questions.</li> </ul> Take the quiz!"},{"location":"workflow/courses/level-two/chapter-6/#whats-next","title":"What's next?","text":"<ul> <li>Create new workflows for your work or personal use and share them with us. Don't have any ideas? Find inspiration on the workflows page and on our blog.</li> <li>Dive deeper into n8n's features by reading the docs.</li> </ul>"},{"location":"workflow/courses/level-two/chapter-5/chapter-5.0/","title":"Automating a business workflow","text":"<p>Remember our friend Nathan?</p> <p>Nathan \ud83d\ude4b: Hello, it's me again. My manager was so impressed with my first workflow automation solution, that she entrusted me with more responsibility. You \ud83d\udc69\u200d\ud83d\udd27: More work and responsibility. Congratulations, I guess. What do you need to do now? Nathan \ud83d\ude4b: I got access to all sales data and am responsible for creating two reports: one for regional sales and one for orders prices. They are based on data from different sources and come in different formats. You \ud83d\udc69\u200d\ud83d\udd27: Sounds like a lot of manual work\u2013but the kind that can be automated. So let's do it!</p>"},{"location":"workflow/courses/level-two/chapter-5/chapter-5.0/#workflow-design","title":"Workflow design","text":"<p>Now that we have an idea of what Nathan wants to automate, let's list the steps he needs to take to achieve this:</p> <ol> <li>Get and combine data from all necessary sources.</li> <li>Sort the data and format the dates.</li> <li>Write binary files.</li> <li>Send notifications via email and Discord.</li> </ol> <p>n8n provides core nodes for all these steps. This use case is somewhat complex and it will be made up of three separate workflows:</p> <ol> <li>A workflow that merges the company data with external information.</li> <li>A workflow that generates the reports.</li> <li>A workflow that monitors errors in the second workflow.</li> </ol>"},{"location":"workflow/courses/level-two/chapter-5/chapter-5.0/#workflow-prerequisites","title":"Workflow prerequisites","text":"<p>To build the workflows, you will need the following:</p> <ul> <li>An Airtable account and credentials.</li> <li>A Google account and credentials to access Gmail.</li> <li>A Discord account and webhook URL (you receive this via email when you sign up for this course).</li> </ul> <p>Next, you will build these three workflows with step-by-step instructions.</p>"},{"location":"workflow/courses/level-two/chapter-5/chapter-5.1/","title":"Workflow 1 \u2013 Merging data","text":"<p>The company's customer data is stored in Airtable. It contains information about the customers' ID, country, email, and join date, but lacks data about their respective region and subregion. You need to fill in these last two fields in order to create the reports for regional sales.</p> <p>To accomplish this task, you first need to make a copy of this table in your Airtable account:</p> <p>Next, you have to build a small workflow that merges data from Airtable and a REST API.</p> <ol> <li>Use the Airtable node to list the data in the Airtable table named <code>customers</code>.</li> <li>use the HTTP Request node to get data from the REST Countries API: <code>https://restcountries.com/v3.1/all</code>. This will return data about world countries. Note that the incoming data needs to be split into items.</li> <li>Use the Merge node to merge data from Airtable and the Countries API by country name (the common key), represented as <code>customerCountry</code> in Airtable and <code>name.common</code> in the Countries API, respectively.</li> <li>Use the Airtable node to update the fields <code>region</code> and <code>subregion</code> in Airtable with the data from the Countries API.</li> </ol> <p>The workflow should look like this:</p> Workflow 1 for merging data from Airtable and the Countries API <p>Quiz questions</p> <ul> <li>How many items does the HTTP Request node return?</li> <li>How many items does the Merge node return?</li> <li>How many unique regions are assigned in the customers table?</li> <li>What is the subregion assigned to the customerID 10?</li> </ul>"},{"location":"workflow/courses/level-two/chapter-5/chapter-5.2/","title":"Workflow 2 \u2013 Generating reports","text":"<p>In this workflow, you will merge data from different sources, transform binary data, generate files, and send notifications about them. The final workflow should look like this:</p> Workflow 2 for aggregating data and generating files <p>To make things easier, let's split the workflow into three parts.</p>"},{"location":"workflow/courses/level-two/chapter-5/chapter-5.2/#part-1-getting-data-from-different-sources","title":"Part 1 \u2013 Getting data from different sources","text":"<p>The first part of the workflow consists of five nodes:</p> Workflow 1 \u2013 Getting data from different sources <ol> <li> <p>Use the HTTP Request node to get data from the API endpoint that stores company data. Configure the following node parameters:</p> <ul> <li>Authentication: Header Auth</li> <li>Credentials for Header Auth: The Header Auth name and Header Auth value you received in the email when you signed up for this course.</li> <li>URL: The Dataset URL you received in the email when you signed up for this course.</li> <li>Options &gt; Add Option &gt; Split Into Items: toggle to true.</li> <li>Headers &gt; Add Header:<ul> <li>Name: unique_id</li> <li>Value: The unique ID you received in the email when you signed up for this course.</li> </ul> </li> </ul> </li> <li> <p>Use the Airtable node to list data from the <code>customers</code> table (where you updated the fields <code>region</code> and <code>subregion</code>).</p> </li> <li>Use the Merge node to merge data from the Airtable and HTTP Request node, based on the common key <code>customer ID</code>.</li> <li>Use the Item Lists node to sort data by orderPrice in descending order.</li> </ol> <p>Quiz questions</p> <ul> <li>What is the name of the employee assigned to customer 1?</li> <li>What is the order status of customer 6?</li> <li>What is the highest order price?</li> </ul>"},{"location":"workflow/courses/level-two/chapter-5/chapter-5.2/#part-2-generating-file-for-regional-sales","title":"Part 2 \u2013 Generating file for regional sales","text":"<p>The second part of the workflow consists of five nodes:</p> Workflow 2 \u2013 Generating file for regional sales <ol> <li>Use the IF node to filter order from the region Americas.</li> <li>Use the Move Binary Data node to transform the incoming data from JSON to binary format. Note that you need to convert all data.</li> <li>Use the Write Binary File node to create and store files with the orders information. In the File Name field, use an expression to include the oder id in the file name, like this: <code>report_orderID{oder_id}.json</code> (you need to replace the <code>{order id}</code> with the reference the Move Binary Data node).</li> <li>Use the Gmail node (or another email node) to send the files via email to an address you have access to. Note that you need to add an attachment with the data property.</li> <li>Use the Discord node to send a message in the n8n Discord channel <code>#course-level-two</code>. In the node, configure the following parameters:<ul> <li>Webhook URL: The webhook URL you received in the email when you signed up for this course.</li> <li>Text: \"I sent the file via email with the label ID <code>{label ID}</code> and wrote the binary file <code>{file name}</code>. My ID: \" followed by your ID.  Note that you need to replace the text in curly braces <code>{}</code> with expressions that reference the data from the nodes.</li> </ul> </li> </ol> <p>Quiz questions</p> <ul> <li>How many orders are assigned to the region Americas?</li> <li>What is the total price of the orders in the region Americas?</li> <li>How many items are returned by the Write Binary File node?</li> </ul>"},{"location":"workflow/courses/level-two/chapter-5/chapter-5.2/#part-3-generating-files-for-total-sales","title":"Part 3 \u2013 Generating files for total sales","text":"<p>The third part of the workflow consists of seven nodes:</p> Workflow 3 \u2013 Generating files for total sales <ol> <li>Use the Split In Batches node to split data from the Item Lists node into batches of 5.</li> <li>Use the Set node to set four values, referenced with expressions from the previous node: <code>customerEmail</code>, <code>customerRegion</code>, <code>customerSince</code>, and <code>orderPrice</code>.</li> <li>Use the Date &amp; Time node to change the date format of the field <code>customerSince</code> to the format MM/DD/YYYY.</li> <li>Use the Spreadsheet File node to create a CSV spreadsheet with the file name set as the expression: <code>{{$runIndex &gt; 0 ? 'file_low_orders':'file_high_orders'}}</code>.</li> <li>Use the Discord node to send a message in the n8n Discord channel <code>#course-level-two</code>. In the node, configure the following parameters:<ul> <li>Webhook URL: The webhook URL you received in the email when you signed up for this course.</li> <li>Text: \"I created the spreadsheet <code>{file name}</code>. My ID:\" followed by your ID.  The <code>{file name}</code> should be an expression that references data from the Spreadsheet File node.</li> </ul> </li> </ol> <p>Quiz questions</p> <ul> <li>What is the lowest order price in the first batch of items?</li> <li>What is the formatted date of customer 7?</li> <li>How many items are returned by the Spreadsheet File node?</li> </ul>"},{"location":"workflow/courses/level-two/chapter-5/chapter-5.3/","title":"Workflow 3 \u2013 Monitoring workflow errors","text":"<p>To accomplish this task, you have to create an Error workflow that monitors the main workflow.</p> <ol> <li>Add an Error Trigger node (and execute it as a test).</li> <li> <p>To the Error Trigger node, connect a Discord node and configure the fields:</p> <ul> <li>Webhook URL: The URL that you received in the email from n8n when you signed up for this course.</li> <li> <p>Text: The workflow <code>{workflow name}</code> failed, with the error message: <code>{execution error message}</code>. Last node executed: <code>{name of the last executed node}</code>. Check this workflow execution here: <code>{execution URL}</code>.</p> <p>Note that you need to replace the text in curly brackets <code>{}</code> with expressions that take the respective information from the Error Trigger node.</p> </li> </ul> </li> <li> <p>Execute the Discord node.</p> </li> <li>Set the newly created workflow as Error Workflow for the main workflow.</li> </ol> <p>The workflow should look like this:</p> Workflow 3 for monitoring workflow errors <p>Quiz questions</p> <ul> <li>What fields does the Error Trigger node return?</li> <li>What information about the execution does the Error Trigger node return?</li> <li>What information about the workflow does the Error Trigger node return?</li> <li>What is the expression to reference the workflow name?</li> </ul>"},{"location":"workflow/data/","title":"Overview","text":"<p>Data represents units of information that are collected by and transmitted through nodes. For \"basic usage\" it is not necessarily needed to understand how the data that gets passed from one node to another is structured. However, it becomes important if you want to:</p> <ul> <li>Create your own node</li> <li>Write custom expressions</li> <li>Use the Function or Function Item node</li> </ul> <p>This section covers: </p> <ul> <li>Data structure</li> <li>Transforming data</li> <li>Using code</li> </ul>","tags":["Workflow","Data structure","Transforming data","Using code"]},{"location":"workflow/data/code/","title":"Processing data with code","text":""},{"location":"workflow/data/code/#function","title":"Function","text":"<p>A function is a block of code designed to perform a certain task. In Workflow\u00b2, you can write custom JavaScript code snippets to add, remove, and update the data you receive from a node.</p> <p>The Function and Function Item nodes are the most powerful in Workflow\u00b2. Both nodes work very similarly, they give you access to the incoming data and you can manipulate it. With these nodes you can implement any function you want using JavaScript code.</p> <p>The code of the Function node gets executed only once. The node receives the full items (JSON and binary data) as an array and expects an array of items as a return value. The items returned can be totally different from the incoming ones. So it is not only possible to remove and edit existing items, but also to add or return totally new ones.</p> <p>The code of the Function Item node gets executed once for every item. The node receives one item (just the JSON data) at a time as input. As a return value, it expects the JSON data of one single item. That makes it possible to add, remove, and edit JSON properties of items, but it is not possible to add new or remove existing items. Accessing and changing binary data is only possible via the methods <code>getBinaryData</code> and <code>setBinaryData</code>.</p> <p>Both the Function node and Function Item node support promises. So instead of returning the item or items directly, it is also possible to return a promise which resolves accordingly.</p> <p>Here is a comparative overview of the Function and Function Item nodes:</p> Data to access Function FunctionItem JSON data items[index].json item Binary data items[index].binary getBinaryData()"},{"location":"workflow/data/data-structure/","title":"Data structure","text":"<p>In Doc\u00b2, all data passed between nodes is an array of objects. It has the following structure:</p> <pre><code>[\n{\n// For most data:\n// Wrap each item in another object, with the key 'json'\n\"json\": {\n// Example data\n\"jsonKeyName\": \"keyValue\",\n\"anotherJsonKey\": {\n\"lowerLevelJsonKey\": 1\n}\n},\n// For binary data:\n// Wrap each item in another object, with the key 'binary'\n\"binary\": {\n// Example data\n\"binaryKeyName\": {\n\"data\": \"....\", // Base64 encoded binary data (required)\n\"mimeType\": \"image/png\", // Best practice to set if possible (optional)\n\"fileExtension\": \"png\", // Best practice to set if possible (optional)\n\"fileName\": \"example.png\", // Best practice to set if possible (optional)\n}\n}\n},\n]\n</code></pre> <p>Skipping the 'json' key and array syntax</p> <p>From 0.166.0 onwards, Doc\u00b2 automatically adds the <code>json</code> key if it is missing. It also automatically wraps your items in an array (<code>[]</code>) if needed.</p>"},{"location":"workflow/data/data-structure/#data-flow","title":"Data flow","text":"<p>Nodes do not only process one \"item\", they process multiple ones. For example, if the Trello node is set to <code>Create-Card</code> and it has an expression set for <code>Name</code> to be set depending on <code>name</code> property, it will create a card for each item, always choosing the <code>name-property-value</code> of the current one.</p> <p>This data would, for example, create two cards. One named <code>test1</code> the other one named <code>test2</code>:</p> <pre><code>[\n{\nname: \"test1\"\n},\n{\nname: \"test2\"\n}\n]\n</code></pre>"},{"location":"workflow/data/transforming-data/","title":"Transforming data","text":"<p>n8n uses a predefined data structure that allows all nodes to process incoming data correctly.</p> <p>Your incoming data may have a different data structure, in which case you will need to transform it to allow each item to be processed individually.</p> <p>For example, the image below shows the output of an HTTP Request node that returns data incompatible with n8n\u2019s data structure. The node returns the data and displays that only one item was returned.</p> <p></p> <p>To transform this kind of structure into the Doc\u00b2 data structure you will have to use the Item Lists node.</p> <p>Note<p>If you\u2019re using the HTTP Request node, you should use the Split Into items option to transform the data. You don\u2019t have to use a Function node in that case.</p> </p>"},{"location":"workflow/flow-logic/","title":"Overview","text":"<p>Workflow\u00b2 allows you to represent complex logic in your workflows.</p> <ul> <li>Merging</li> <li>Looping</li> <li>Error handling</li> </ul>"},{"location":"workflow/flow-logic/error-handling/","title":"Error handling","text":"","tags":["Workflow\u00b2"]},{"location":"workflow/flow-logic/error-handling/#error-workflow","title":"Error workflow","text":"<p>For each workflow, an optional Error Workflow can be set in the Workflow Settings. It gets executed if the original execution fails. That makes it possible to, for instance, inform the user via Email or Slack if something goes wrong. The same Error Workflow can be set on multiple workflows.</p> <p>The only difference between a regular workflow and an Error Workflow is that it contains an Error Trigger node, so it is important to make sure that this node gets created before setting a workflow as Error Workflow.</p> <p>The Error Trigger node will trigger in case the execution fails and receives information about it. The data looks like this:</p> <pre><code>[\n{\n\"execution\": {\n\"id\": \"231\",\n\"url\": \"https://n8n.example.com/execution/231\",\n\"retryOf\": \"34\",\n\"error\": {\n\"message\": \"Example Error Message\",\n\"stack\": \"Stacktrace\"\n},\n\"lastNodeExecuted\": \"Node With Error\",\n\"mode\": \"manual\"\n},\n\"workflow\": {\n\"id\": \"1\",\n\"name\": \"Example Workflow\"\n}\n}\n]\n</code></pre> <p>All information is always present except:</p> <ul> <li>execution.id: Only present when the execution gets saved in the database</li> <li>execution.url: Only present when the execution gets saved in the database</li> <li>execution.retryOf: Only present when the execution is a retry of a previously failed execution</li> </ul>","tags":["Workflow\u00b2"]},{"location":"workflow/flow-logic/looping/","title":"Looping in Workflow\u00b2","text":"<p>Looping enables you to repeatedly perform the same actions, stopping only after a set number of repetitions (e.g. fetch the 10 most recent items) or when a specific condition is met (e.g. no new items exist).</p> <p>Looping is useful when you want to process multiple similar items, for example sending a message to every contact in your address book. In Doc\u00b2 this repetitive processing is handled automatically, meaning you do not need to specifically build loops into your workflows. There are some special cases where this isn\u2019t true.</p>","tags":["Workflow\u00b2"]},{"location":"workflow/flow-logic/looping/#using-loops-in-workflow2","title":"Using loops in Workflow\u00b2","text":"<p>Workflow\u00b2 nodes take any number of items as input, process these items, and output the results. You can think of each item as a single data point (or a single row in the output table of a node).</p> <p>The following image shows the output from the Customer Datastore node, where each row is an individual item.</p> <p></p> <p>Nodes usually run once for each item. For example, if you want to send the name and notes of the customers as a message on Slack, connect the Slack node to the Customer Datastore node, configure the parameters, and execute the node. You will receive 5 messages \u2014 one for each item.</p> <p>This is how you can process multiple items without having to explicitly connect nodes in a loop.</p> <p> Keep in mind</p> <p>Your data must be in the proper structure for Doc\u00b2 to process it as described here. See Transforming Data to learn more.</p>","tags":["Workflow\u00b2"]},{"location":"workflow/flow-logic/looping/#executing-nodes-once","title":"Executing nodes once","text":"<p>For situations where you do not want a node to process all received items, for example sending a Slack message only to the first customer, you can do so by toggling the Execute Once parameter in the Settings tab of that node.</p> <p>This setting is helpful when the incoming data contains multiple items and you want to only process the first one. Using the Customer Datastore and Slack example from above, it would look like the following:</p> <p></p> <p>You can see a message was sent only for the first customer - Jay Gatsby.</p>","tags":["Workflow\u00b2"]},{"location":"workflow/flow-logic/looping/#executions-indicator","title":"Executions indicator","text":"<p>When you execute a node a green number gets displayed on its icon. This number represents the number of times the node has executed, it doesn't represent the number of items returned by the node. Each execution may return multiple items.</p> <p></p> <p>If a node receives input from multiple nodes, it will execute separately for each set of input data. For example, if the above node has two input nodes, it will execute twice, once for each input as pictured below.</p> <p></p> <p>Note: The only exception to this is the Merge node.</p> <p>In the above image, notice that the Customer Datastore node gets executed twice, once for each input. To view the output for each input node, select the execution from the Data of Execution dropdown list:</p> <p></p> <p>When you have a loop in a workflow, the node gets executed multiple times. The number on the node will represent the total number of executions:</p> <p></p>","tags":["Workflow\u00b2"]},{"location":"workflow/flow-logic/looping/#creating-loops","title":"Creating loops","text":"<p>As discussed above, Doc\u00b2 typically handles the iteration for all incoming items. However, there are certain scenarios where you will have to create a loop to iterate through all items. You can learn more about these here.</p> <p>To create a loop in an Doc\u00b2 workflow, connect the output of one node to the input of a previous node. Make sure you add an IF node to check when to stop the loop. You now have a loop that iterates over each item.</p> <p>Here is an example workflow that implements a loop with an <code>IF</code> node:</p> <p></p> <p>You should use the Split In Batches node when you want to batch the data in groups and process these batches. This approach is useful for avoiding API rate limits when processing large incoming data or when you only want to process a specific group of returned items.</p> <p>Note: The Split In Batches node stops executing after all the incoming items get divided into batches and passed on to the next node in the workflow so it is not necessary to add an IF node to stop the loop.</p>","tags":["Workflow\u00b2"]},{"location":"workflow/flow-logic/looping/#node-exceptions","title":"Node exceptions","text":"<p>There are a limited number of nodes and operations where you need to design a loop into your workflow:</p> <ul> <li>Airtable node:<ul> <li>List: This operation executes only once, not for each incoming item.</li> </ul> </li> <li>Coda node:<ul> <li>Get All: For the Table and View resources, this operation executes only once.</li> </ul> </li> <li>CrateDB node will execute and iterate over all incoming items only for Postgres related functions (e.g. <code>pgInsert</code>, <code>pgUpdate</code>, <code>pqQuery</code>).</li> <li>Execute Workflow node executes only once by default.</li> <li>Function node processes all the items based on the entered code snippet, but it gets executed only once. If you need to execute the Function node multiple times you have to create a loop using the Split In Batches node.</li> <li>Google Cloud Firestore node:<ul> <li>Get All: For the Collection and Document resources, this operation executes only once.</li> </ul> </li> <li>Google Drive node:<ul> <li>List: This operation executes only once, not for each incoming item.</li> </ul> </li> <li>Google Sheets node:<ul> <li>Read: This operation executes only once for the <code>Sheet</code> resource.</li> <li>Update: This operation updates multiple rows if they are in the same range. It does not iterate through additional ranges.</li> </ul> </li> <li>HTTP Request node: You must handle pagination yourself. If your API call returns paginated results you must create a loop to fetch one page at a time.</li> <li>Microsoft SQL node does not natively handle looping, so if you want the node to process all incoming items you must create a loop.</li> <li>Postgres node will execute and iterate over all incoming items only for Postgres related functions (for example, <code>pgInsert</code>, <code>pgUpdate</code>, <code>pqQuery</code>).</li> <li>QuestDB node will execute and iterate over all incoming items only for Postgres related functions (e.g. <code>pgInsert</code>, <code>pgUpdate</code>, <code>pqQuery</code>).</li> <li>Read Binary Files node will fetch the files from the specified path only once. This node doesn\u2019t execute multiple times based on the incoming data. However, if the path is referenced from the incoming data, the node will fetch the files for all the valid paths.</li> <li>Redis node:<ul> <li>Info: This operation executes only once, regardless of the number of items in the incoming data.</li> </ul> </li> <li>RSS nodes executes only once regardless of the number of items in the incoming data.</li> <li>Spreadsheet node processes all the incoming data and creates a single file with all the incoming data. If you want to create individual files for each incoming item, you have to create a loop.</li> <li>TimescaleDB node will execute and iterate over all incoming items only for Postgres related functions (e.g. <code>pgInsert</code>, <code>pgUpdate</code>, <code>pqQuery</code>).</li> </ul>","tags":["Workflow\u00b2"]},{"location":"workflow/flow-logic/merging/","title":"Merging items","text":"<p>You might want to merge items together in your workflows. For example when your data contains hundreds of items that you don't want to process individually.</p> <p>There are three different use cases for merging items:</p> <ul> <li>Merge items of a single execution: You can merge all incoming items into a single item using the Item Lists node. Please note that since you are merging different items into a single item the next node in the workflow will now process just that single item.</li> <li>Merge items returned by different nodes: If you want to merge items returned by different nodes, use the Merge node.</li> <li>Merge items of different executions: You can also merge items that get returned in different executions. Refer to this workflow to learn how:     </li> </ul>","tags":["Workflow\u00b2"]},{"location":"workflow/integrations/","title":"Integrations","text":"<p>In Workflow\u00b2, integrations are called nodes.</p> <p>Nodes are the building blocks of workflows in Workflow\u00b2. They are an entry point for retrieving data, a function to process data or an exit for sending data. The data process includes filtering, recomposing and changing data. There can be one or several nodes for your API, service or app. You can connect multiple nodes, which allows you to create simple and complex workflows with them intuitively.</p>"},{"location":"workflow/integrations/#node-types","title":"Node types","text":"<p>There are two main node types in Workflow\u00b2: Trigger nodes and Regular nodes.</p>"},{"location":"workflow/integrations/#trigger-nodes","title":"Trigger Nodes","text":"<p>The Trigger nodes start a workflow and supply the initial data. A workflow can contain multiple trigger nodes but with each execution, only one of them will execute. This is because the other trigger nodes would not have any input as they are the nodes from which the execution of the workflow starts.</p>"},{"location":"workflow/integrations/#regular-nodes","title":"Regular Nodes","text":"<p>These nodes do the actual work. They can add, remove, and edit the data in the flow as well as request and send data to external APIs. They can do everything possible with Node.js in general.</p>"},{"location":"workflow/integrations/#credentials","title":"Credentials","text":"<p>External services need a way to identify and authenticate users. This data can range from an API key over an email/password combination to a very long multi-line private key and can be saved in Workflow\u00b2 as credentials.</p> <p>Nodes in Workflow\u00b2 can then request that credential information. As an additional layer of security credentials can only be accessed by node types which specifically have the right to do so.</p> <p>To make sure that the data is secure, it gets saved to the database encrypted. A random personal encryption key is used which gets automatically generated on the first run of Workflow\u00b2 and then saved under <code>~/.n8n/config</code>.</p>"},{"location":"workflow/integrations/#requesting-new-integrations-or-integration-features","title":"Requesting new integrations or integration features","text":"<p>You can request new integrations to be added to our forum. There is a special section for that where other users can also upvote it so that we know which integrations are important and should be created next. Request a new feature here.</p> <p>Adding new functionality to an existing integration is normally not that complicated. So the chance is high that we can do that quite fast. Post your feature request in the forum and we'll see what we can do. Request a new feature here.</p>"},{"location":"workflow/integrations/#where-to-go-next","title":"Where to go next?","text":"<ol> <li>If you are looking to create your own node, head over to the Creating Nodes section.</li> <li>If you'd like to learn more about the different nodes in Workflow\u00b2, their functionalities and example usage, check out our node libraries: core nodes, nodes, and trigger nodes.</li> <li>If you'd like to learn how to add the credentials for the different nodes, head over to the Credentials section.</li> </ol>"},{"location":"workflow/integrations/core-nodes/","title":"Overview","text":"<p>This section provides information about a variety of n8n's core nodes.</p> <ul> <li>Activation Trigger</li> <li>Compression</li> <li>Cron</li> <li>Crypto</li> <li>Date &amp; Time</li> <li>Edit Image</li> <li>Error Trigger</li> <li>Execute Command</li> <li>Execute Workflow</li> <li>FTP</li> <li>Function</li> <li>Function Item</li> <li>Git</li> <li>GraphQL</li> <li>HTML Extract</li> <li>HTTP Request</li> <li>iCalendar</li> <li>IF</li> <li>IMAP Email</li> <li>Interval</li> <li>Item Lists</li> <li>Local File Trigger</li> <li>Merge</li> <li>Move Binary Data</li> <li>No Operation, do nothing</li> <li>Read Binary File</li> <li>Read PDF</li> <li>Rename Keys</li> <li>Respond to Webhook</li> <li>RSS Read</li> <li>Send Email</li> <li>Set</li> <li>Split In Batches</li> <li>Spreadsheet File</li> <li>SSE Trigger</li> <li>SSH</li> <li>Start</li> <li>Stop And Error</li> <li>Switch</li> <li>Wait</li> <li>Webhook</li> <li>Workflow Trigger</li> <li>Doc\u00b2 Trigger</li> <li>Write Binary File</li> <li>XML</li> </ul>"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.activationTrigger/","title":"Activation Trigger","text":"<p>The Activation Trigger node gets triggered when an event gets fired by Workflow\u00b2 or a workflow.</p> <p>Warning</p> <p>The Activation Trigger node has been deprecated. It has been replaced by two new nodes - the n8n Trigger and the Workflow Trigger node. For more details, check out the entry in the breaking changes page.</p> <p> Keep in mind</p> <p>If you want to use the Activation Trigger node for a workflow, add the node to the workflow. You don't have to create a separate workflow.</p> <p>The Activation Trigger node gets triggered for the workflow that it gets added to. The Activation Trigger node can be used to trigger a workflow to notify the state of the workflow.</p>","tags":["Workflow\u00b2"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.activationTrigger/#node-reference","title":"Node Reference","text":"<ul> <li>Events<ul> <li>Activation: Run when the workflow gets activated</li> <li>Start: Run when Doc\u00b2 starts or restarts</li> <li>Update: Run when the workflow gets saved while it is active</li> </ul> </li> </ul>","tags":["Workflow\u00b2"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.activationTrigger/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to receive a message on Mattermost when a workflow is updated. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Activation Trigger - Mattermost</p> <p>The final workflow should look like the following image.</p> <p></p>","tags":["Workflow\u00b2"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.activationTrigger/#1-activation-trigger-node","title":"1. Activation Trigger node","text":"<p>Open the workflow where you want to add the activation workflow. Add the Activation Trigger node to the workflow.</p> <p>The Activation Trigger node will trigger the workflow when the workflow gets updated.</p> <ol> <li>Select 'Update' from the Events dropdown list.</li> </ol> <p>In the screenshot below, you will notice that the node triggers the workflow when the workflow gets updated.</p> <p></p>","tags":["Workflow\u00b2"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.activationTrigger/#2-mattermost-node-post-message","title":"2. Mattermost node (post: message)","text":"<p>This node will send a message in the <code>workflow</code> channel on Mattermost.</p> <ol> <li>First of all, you'll have to enter credentials for the Mattermost node. You can find out how to enter credentials for this node here.</li> <li>Select a channel from the Channel ID dropdown list.</li> <li> <p>Click on the gears icon next to the Message field click on Add Expression.</p> </li> <li> <p>Enter the following message in the Expression field: <code>The workflow {{$workflow.name}}, was updated.</code>. <code>$workflow.name</code> returns the name of the workflow.</p> </li> <li>Click on Execute Node to run the workflow.</li> </ol> <p>In the screenshot below, you will notice that the node sends a message to Mattermost.</p> <p></p>","tags":["Workflow\u00b2"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.compression/","title":"Compression","text":"<p>The Compression node is useful to compress and decompress files. You can either use the <code>gzip</code> or <code>zip</code> file format.</p>"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.compression/#node-reference","title":"Node Reference","text":"<ul> <li>Operations<ul> <li>Compress</li> <li>Decompress</li> </ul> </li> <li>Options<ul> <li>Binary Property field: This field allows you to specify the name of the binary property</li> <li>Output Prefix field: This field allows you to specify a prefix for the name of the file that gets generated. This field gets displayed for the 'Decompress' operation and the 'gzip' output format for the 'Compress' operation</li> <li>Output Format field: This field allows you to select an output format. This field is displayed when 'Compress' gets selected from the Operation dropdown list. The following are the available formats:<ul> <li>gzip</li> <li>zip</li> </ul> </li> <li>File Name field: This field allows you to specify a file name. This field is displayed when 'zip' gets selected from the Output Format dropdown list.</li> <li>Binary Property Output field: This field allows you to specify a name for the file that gets generated. This field is displayed when 'zip' gets selected from the Output Format dropdown list.</li> </ul> </li> </ul>"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.compression/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to compress binary files to zip format and upload them to Dropbox. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Start - HTTP Request - Dropbox</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.compression/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.compression/#2-http-request-node-get","title":"2. HTTP Request node (GET)","text":"<p>This example workflow uses the HTTP Request node to fetch an image from a URL. You can also use the Read Binary File node to read a file from the path you specify.</p> <ol> <li>Enter the URL of the image in the URL field. For example, <code>https://docs.n8n.io/assetsassets/images/insight2/final-workflow.f380b957.png</code>.</li> <li>Select 'File' from the Response Format dropdown list.</li> <li>Enter <code>workflow_image</code> in the Binary Property field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the HTTP Request node fetches the image from the URL. This image gets passed on as binary data to the next node in the workflow.</p> <p></p>"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.compression/#3-http-request1-node-get","title":"3. HTTP Request1 node (GET)","text":"<p>This node fetches an image from a URL. You can also use the Read Binary File node to read a file from the path you specify.</p> <ol> <li>Enter the URL of the image in the URL field. For example, <code>https://n8n.io/n8n-logo.png</code>.</li> <li>Select 'File' from the Response Format dropdown list.</li> <li>Enter <code>logo</code> in the Binary Property field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the HTTP Request node fetches the image from the URL. This image gets passed on as binary data to the next node in the workflow.</p> <p></p>"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.compression/#4-compression-node-compress","title":"4. Compression node (compress)","text":"<p>This node compresses the binary file that we received from the HTTP Request nodes in a zip file. If you want to compress them in <code>gzip</code> format, select that option instead.</p> <ol> <li>Select 'Compress' from the Operation dropdown list.</li> <li>Enter <code>logo,workflow_image</code> in the Binary Property field.</li> <li>Select 'zip' from the Output Format dropdown list.</li> <li>Enter <code>images.zip</code> in the File Name field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node compresses the files and generates <code>images.zip</code>.</p> <p></p>"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.compression/#5-dropbox-node-upload-file","title":"5. Dropbox node (upload: file)","text":"<p>This node will upload the compressed file to your Dropbox account.</p> <ol> <li>First of all, you'll have to enter credentials for the Dropbox node. You can find out how to do that here.</li> <li>Enter <code>/images.zip</code> in the File Path field.</li> <li>Toggle Binary Data to <code>true</code>. This option allows us to upload binary data from the previous node.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node uploads the compressed file that we generated in the previous node.</p> <p></p>"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.cron/","title":"Cron","text":"<p>The Cron node is useful to schedule the workflows to run periodically at fixed dates, times, or intervals. This works in a similar way to the cron software utility in Unix-like systems. This core node is a Trigger node.</p> <p> Keep in mind</p> <ol> <li>If a workflow is using the Cron node as a trigger, make sure that you save and activate the workflow.</li> </ol> <ol> <li>Make sure that the timezone is set correctly for the Doc\u00b2 instance (or the workflow).</li> </ol>","tags":["Workflow\u00b2","Cron","Node Reference","FAQs"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.cron/#node-reference","title":"Node Reference","text":"<p>You can configure the node by clicking on the Add Cron Time button under the Trigger Times section. There are a couple of different options available for the Mode field in the form of a dropdownlist.</p> <ul> <li>Mode<ul> <li>Every Minute</li> <li>Every Hour</li> <li>Every Day</li> <li>Every Week</li> <li>Every Month</li> <li>Every X</li> <li>Custom</li> </ul> </li> </ul> <p>The 'Every X' option allows you to specify the workflow to be triggered every x minutes or hours. You can specify x by entering a number in the Value field. The 'Custom' option allows you to enter a custom cron expression in the Cron Expression field.</p>","tags":["Workflow\u00b2","Cron","Node Reference","FAQs"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.cron/#faqs","title":"FAQs","text":"","tags":["Workflow\u00b2","Cron","Node Reference","FAQs"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.cron/#how-to-generate-a-custom-cron-expression","title":"How to generate a custom Cron expression?","text":"<p>To generate a Cron expression, you can use crontab guru. Paste the Cron expression that you generated using crontab guru in the Cron Expression field in Workflow\u00b2.</p>","tags":["Workflow\u00b2","Cron","Node Reference","FAQs"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.cron/#why-there-are-six-asterisks-in-the-cron-expression","title":"Why there are six asterisks (*) in the Cron Expression?","text":"<p>The sixth asterisk in the Cron Expression represents seconds. Setting this is optional. The node will execute even if you don't set the value for seconds.</p> * * * * * * second minute hour day week month <p>If you want to trigger your workflow, for example, every day at 04:08:30, enter the following in the Cron Expression field. <pre><code>30 8 4 * * *\n</code></pre></p> <p>If you want to trigger your workflow, for example, every day at 04:08, enter the following in the Cron Expression field. <pre><code>8 4 * * *\n</code></pre></p>","tags":["Workflow\u00b2","Cron","Node Reference","FAQs"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.crypto/","title":"Crypto","text":"<p>The Crypto node is used to encrypt data in workflows.</p>"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.crypto/#node-reference","title":"Node Reference","text":"<p>You can configure further options for each action by selecting the type of encryption and encoding to be used, in the Type and Encoding fields respectively.</p> <ul> <li>Action<ul> <li>Hash a text in a specified format</li> <li>Hmac a text in a specified format</li> <li>Sign a string using a private key</li> </ul> </li> <li>Type<ul> <li>MD5</li> <li>SHA256</li> <li>SHA384</li> <li>SHA512</li> </ul> </li> <li>Encoding<ul> <li>BASE64</li> <li>HEX</li> </ul> </li> </ul>"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.crypto/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to encrypt data using the Crypto node. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - Crypto</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.crypto/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.crypto/#2-crypto-node","title":"2. Crypto node","text":"<ol> <li>Enter the data that you want to encrypt in the Value field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.dateTime/","title":"Date &amp; Time","text":"<p>The Date &amp; Time node is used to manipulate date and time data and convert it to different formats.</p> <p> Keep in mind</p> <p>Make sure that the timezone is set correctly for the Doc\u00b2 instance (or the workflow).</p>","tags":["Workflow\u00b2","Date & Time"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.dateTime/#node-reference","title":"Node Reference","text":"<ul> <li>Action<ul> <li>Convert a date to a different format</li> </ul> </li> </ul> <p>You can specify the format that the date has to be converted to from the To Format dropdown list.</p> <ul> <li>To Format<ul> <li>MM/DD/YYYY</li> <li>YYYY/MM/DD</li> <li>MMMM DD YYYY</li> <li>MM-DD-YYYY</li> <li>YYYY-MM-DD</li> <li>Unix Timestamp</li> <li>Unix Ms Timestamp</li> </ul> </li> </ul> <p>You can also specify a custom format by setting the Custom Format toggle to 'On'.</p> <ul> <li>Options<ul> <li>From Format field: Allows you to specify the format of the input values. Refer to the FAQs to learn about the possible vaules.</li> <li>From Timezone field: Allows you to specify the timezone of the input values, for input timezones that are different from n8n's system clock.</li> <li>To Timezone field: Allows you to specify the timezone that the input values have to be converted to.</li> </ul> </li> </ul>","tags":["Workflow\u00b2","Date & Time"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.dateTime/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to convert a date from one format to another using the Date &amp; Time node. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - Date &amp; Time</p> <p>The final workflow should look like the following image.</p> <p></p>","tags":["Workflow\u00b2","Date & Time"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.dateTime/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>","tags":["Workflow\u00b2","Date & Time"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.dateTime/#2-date-time-node","title":"2. Date &amp; Time node","text":"<ol> <li>Enter the date that you want to convert in the Value field.</li> <li>Click on the Add Option dropdown.</li> <li>Click on the From Format option, and enter the format of the input date.</li> <li>Select the format you want to convert it to from the To Format dropdown list.</li> <li>Click on Execute Node to run the workflow.</li> </ol>","tags":["Workflow\u00b2","Date & Time"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.dateTime/#faqs","title":"FAQs","text":"","tags":["Workflow\u00b2","Date & Time"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.dateTime/#what-values-can-i-use-in-the-from-format-field","title":"What values can I use in the From Format field?","text":"<p>You can use the following values in the From Format field:</p> Input Example Description X 1616108400 Unix timestamp x 1616108400000 Unix ms timestamp DD-MM-YYYY 19-03-2021 Date, month, and year separated by <code>-</code> DD/MM/YYYY 19/03/2021 Date, month, and year separated by <code>/</code> DD.MM.YYYY 19.03.2021 Date, month, and year separated by <code>.</code> DD.MM.YYYY HHss 19.03.2021 08:00:00 Date, month, year, hours, minutes, and seconds MM/DD/YYYY 03/19/2021 Month, date, and year separated by <code>/</code> MM-DD-YYYY 03-19-2021 Month, date, and year separated by <code>-</code> MM.DD.YYYY 03.19.2021 Month, date, and year separated by <code>.</code> MM/DD/YYYY HHss 03/19/2021 08:00:00 Month, date, year, hours, minutes, and seconds YYYY/MM/DD 2021/03/19 Year, month, and date separated by <code>/</code> YYYY-MM-DD 2021-03-19 Year, month, and date separated by <code>-</code> YYYY.MM.DD 2021.03.19 Year, month, and date separated by <code>.</code> YYYY/MM/DD HHss 2021/03/19 08:00:00 Year, month, date, hours, minutes, and seconds MMMM DD YYYY March 03 2021 Month, date, and year MMMM DD YYYY HHss March 03 2021 08:00:00 Month, date, year, hours, minutes, and seconds DD MMMM YYYY 03 March 2021 Date, month, and year DD MMMM YYYY HHss 03 March 2021 08:00:00 Date, month, year, hours, minutes, and seconds","tags":["Workflow\u00b2","Date & Time"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.editImage/","title":"Edit Image","text":"<p>The Edit Image node is used to manipulate and edit images.</p> <p> Keep in mind</p> <ol> <li>You will need to use an additional node such as the Read Binary File node or the HTTP Request node to pass the image file as a data property to the Edit Image node.</li> </ol>"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.editImage/#node-reference","title":"Node Reference","text":"<ul> <li>Operations<ul> <li>Add a blur to the image to reduce sharpness</li> <li>Add a border to the image</li> <li>Create a new image</li> <li>Crop the image</li> <li>Composite an image on top of another image</li> <li>Draw on an image</li> <li>Get information about the image</li> <li>Rotate the image</li> <li>Change the size of the image</li> <li>Shear image along the X or Y axis</li> <li>Add text to the image</li> </ul> </li> </ul> <p>You can also specify a file format using the Format field in the Add Option dropdown list.</p> <ul> <li>Options<ul> <li>File Name field: Allows you to specify the filename of the output file.</li> <li>Format field: Allows you to specify the image format of the output file:<ul> <li>BMP</li> <li>GIF</li> <li>JPEG</li> <li>PNG</li> <li>TIFF</li> </ul> </li> </ul> </li> </ul>"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.editImage/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to add text to an image downloaded from the internet using the Edit Image node. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Start - HTTP Request - Edit Image</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.editImage/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.editImage/#2-http-request-node","title":"2. HTTP Request node","text":"<ol> <li>Enter <code>https://docs.n8n.io/assetsassets/images/insight2/final-workflow.f380b957.png</code> in the URL field.</li> <li>Select 'File' from the Response Format dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol>"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.editImage/#3-edit-image-node","title":"3. Edit Image node","text":"<ol> <li>Select 'Text' from the Operation dropdown list.</li> <li>Enter <code>This is n8n</code>in the Text field.</li> <li>Enter 100 in the Font Size field.</li> <li>Enter 300 in the Position X field.</li> <li>Enter 500 in the Position Y field.</li> <li>Click on Execute Node to run the node.</li> </ol>"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.errorTrigger/","title":"Error Trigger","text":"<p>The Error Trigger node triggers a workflow when another workflow has an error. Once a workflow fails, this node gets details about the failed workflow and the errors. This triggers the error workflow.</p> <p> Keep in mind</p> <ol> <li>If a workflow is using the Error Trigger node, you don't have to activate the workflow.</li> </ol> <ol> <li>If you want to receive error messages for a workflow, make sure that you select the 'Error Workflow' in the Workflow Settings for the workflow.</li> <li>If a workflow is using the Error Trigger node, by default, the workflow will use itself as the Error Workflow.</li> <li>The Error Trigger node is designed to get triggered ONLY when the workflows execute automatically which means you will not be able to test this while running the workflows manually.</li> </ol>"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.errorTrigger/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to send an SMS when a workflow fails. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Twilio</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.errorTrigger/#1-error-trigger-node","title":"1. Error Trigger node","text":"<p>This node will execute when an error occurs.</p>"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.errorTrigger/#2-twilio-node-send-sms","title":"2. Twilio node (send: sms)","text":"<ol> <li>First of all, you'll have to enter credentials for the Twilio node. You can find out how to do that here.</li> <li>Enter the Twilio phone number in the From field.</li> <li>Enter the receiver's phone number in the To field.</li> <li> <p>Click on the gears icon next to the Message field and click on Add Expression.</p> </li> <li> <p>Enter <code>Your workflow with ID: {{$node[\"Error Trigger\"].json[\"workflow\"][\"id\"]}} and name: {{$node[\"Error Trigger\"].json[\"workflow\"][\"name\"]}} failed to execute.</code> in the Expression field.</p> </li> <li>The node will execute when the Error Trigger node is triggered.</li> </ol>"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.errorTrigger/#faqs","title":"FAQs","text":""},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.errorTrigger/#how-to-set-an-error-workflow-for-an-doc2-workflow","title":"How to set an error workflow for an Doc\u00b2 workflow?","text":"<p>Let's say we want to get a notification every time Workflow A fails. Create a new workflow, Workflow B. Add an Error Trigger node and set Workflow B as the error workflow for Workflow A by following these steps. - Open Workflow A. - Click on Workflows in the left menu and select 'Settings' from the dropdown list. - Select Workflow B from the Error Workflow dropdown list. - Click on the Save button.</p>"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.errorTrigger/#can-we-send-a-custom-error-message","title":"Can we send a custom error message?","text":"<p>The Error Trigger node sends the actual error message thrown by the workflow. You can use this information as shown in the Example Usage section as well as send a custom error message like in the Twilio node. However, you cannot send a custom error message to the Error Trigger node.</p>"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.errorTrigger/#how-do-we-call-the-error-workflow-manually","title":"How do we call the Error Workflow manually?","text":"<p>There is currently no functionality to call an Error Workflow manually.</p>"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.executeCommand/","title":"Execute Command","text":"<p>The Execute Command node is used to run shell commands on the host machine that runs Workflow\u00b2.</p> <p> Keep in mind</p> <ol> <li>If you are running Doc\u00b2 in Docker, your command will run on the Doc\u00b2 container and not the Docker host.</li> </ol> <ol> <li>This node will execute the command in the default shell of the host machine. For example, this will be PowerShell on Windows and zsh on macOS.</li> </ol>","tags":["Workflow\u00b2"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.executeCommand/#node-reference","title":"Node Reference","text":"<p>The Execute Command node has two properties: 1. Execute Once toggle: This is a boolean field that is used to specify whether you want the node to execute only once, or once for every item it receives an input. 2. Command field: This is a text field that is used to specify the command that will be executed on the host machine.</p>","tags":["Workflow\u00b2"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.executeCommand/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to execute a command that returns the percentage of the hard disk that is full using the Execute Command node. The workflow is triggered twice a day, and if the memory usage exceeds 80%, it will send an SMS using the Twilio node. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Cron - Execute Command - IF - Twilio - No Operation, do nothing</p> <p>The final workflow should look like the following image.</p> <p></p>","tags":["Workflow\u00b2"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.executeCommand/#1-cron-node","title":"1. Cron node","text":"<p>The Cron node will trigger the workflow twice a day, at 9 AM and 4 PM.</p> <ol> <li>Click on Add Cron Time.</li> <li>Select 'Every Day' from the Mode dropdown list.</li> <li>Enter <code>9</code> in the Hour field.</li> <li>Click on Add Cron Time.</li> <li>Select 'Every Day' from the Mode dropdown list.</li> <li>Enter <code>16</code> in the Hour field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p></p>","tags":["Workflow\u00b2"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.executeCommand/#2-execute-command-node","title":"2. Execute Command node","text":"<p>The Execute Command node will execute the command and return the percentage of hard disk space used on the host machine.</p> <ol> <li>Enter <code>df -k / | tail -1 | awk '{print $5}'</code> in the Command field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node executes the command and returns the percentage of the hard disk that is full.</p> <p></p>","tags":["Workflow\u00b2"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.executeCommand/#3-if-node","title":"3. IF node","text":"<p>This node will compare the percentage of the hard disk space used we got from the Execute Command node. If the usage of the memory exceeds 80%, it will return true otherwise false.</p> <ol> <li>Click on Add Condition and select 'Number' from the dropdown list.</li> <li>Click on the gears icon next to the Value 1 field and click on Add Expression.</li> <li>Enter <code>{{parseInt($node[\"Execute Command\"].json[\"stdout\"])}}</code> in the Expression field. The output from the Execute Command node is a string. The <code>parseInt()</code> method converts the string into an integer.</li> <li>Select 'Larger' from the Operation dropdown list.</li> <li>Set Value 2 to 80.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns an output when the percentage of hard disk space used exceeds 80%.</p> <p></p>","tags":["Workflow\u00b2"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.executeCommand/#4-twilio-node-send-sms","title":"4. Twilio node (send: sms)","text":"<p>This node sends an SMS to the specified phone number when the usage of hard disk space  exceeds 80%.</p> <ol> <li>Create a Twilio node connected to the 'true' output of the IF node.</li> <li>You'll have to enter credentials for the Twilio node. You can find out how to do that here.</li> <li>Enter the Twilio phone number in the From field.</li> <li>Enter the receiver's phone number in the To field.</li> <li> <p>Click on the gears icon next to the Message field and click on Add Expression.</p> </li> <li> <p>Enter <code>Your hard disk space is filling up fast! Your hard disk is {{$node[\"Execute Command\"].json[\"stdout\"]}} full.</code> in the Expression field.</p> </li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node sends an SMS with the percentage of the hard disk space used that we got from the Execute Command node.</p> <p></p>","tags":["Workflow\u00b2"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.executeCommand/#5-noop-node","title":"5. NoOp node","text":"<p>Adding this node here is optional, as the absence of this node won't make a difference to the functioning of the workflow.</p> <ol> <li>Create a NoOp node connected to the 'false' output of the IF node.</li> <li>Click on Execute Node to run the node.</li> </ol> <p></p>","tags":["Workflow\u00b2"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.executeCommand/#faqs","title":"FAQs","text":"","tags":["Workflow\u00b2"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.executeCommand/#how-to-run-multiple-commands-in-the-execute-command-node","title":"How to run multiple commands in the Execute Command node?","text":"<p>You can combine multiple commands using <code>&amp;&amp;</code>. For example, you can combine the change directory (cd) command with the list (ls) command using <code>&amp;&amp;</code>. <pre><code>cd bin &amp;&amp; ls\n</code></pre></p> <p>To run multiple commands, you can also write the commands on separate lines. For example, you can write the list (ls) command on a new line after the change directory (cd) command. <pre><code>cd bin\nls\n</code></pre></p>","tags":["Workflow\u00b2"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.executeCommand/#how-to-run-the-curl-command-in-the-execute-command-node","title":"How to run the curl command in the Execute Command node?","text":"<p>You can also use the HTTP Request node to make a cURL request.</p> <p>If you want to run the curl command in the Execute Command node, you will have to build a Docker image based on the existing Doc\u00b2 image. The default Doc\u00b2 Docker image uses Alpine Linux. You will have to install the curl package. 1. Create a file named Dockerfile. 2. Add the below code snippet to the Dockerfile. <pre><code>FROM n8nio/n8n\nRUN apk --update add curl\n</code></pre> 3. In the same folder, execute the command below command to build the Docker image. <pre><code>docker build -t n8n-curl\n</code></pre> 4. Replace the Docker image you used before. For example, replace <code>n8nio/n8n</code> with <code>n8n-curl</code>. 5. Run the newly created Docker image, and you will now be able to execute ssh via the Execute Command-Node.</p>","tags":["Workflow\u00b2"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.executeWorkflow/","title":"Execute Workflow","text":"<p>The Execute Workflow node is used to run a different workflow on the host machine that runs Workflow\u00b2.</p>"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.executeWorkflow/#node-reference","title":"Node Reference","text":"<p>The Execute Workflow node has two properties:</p> <ul> <li>Source: This field is used to specify from where to get the workflow's information.<ul> <li>Database</li> <li>Local File</li> <li>Parameter</li> <li>URL</li> </ul> </li> <li>Workflow: This field contains information about the workflow, such as the workflow ID, URL, or a file.</li> </ul>"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.executeWorkflow/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to execute another workflow on the host machine using the Execute Workflow node. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Start - Execute Workflow</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.executeWorkflow/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.executeWorkflow/#2-execute-workflow-node","title":"2. Execute Workflow node","text":"<ol> <li>Enter the ID of the workflow that you want to execute in the Workflow ID field. You can find instructions on how to obtain the ID of a workflow in the FAQs below.</li> <li>Click on Execute Node to run the workflow.</li> </ol>"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.executeWorkflow/#faqs","title":"FAQs","text":""},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.executeWorkflow/#how-do-i-find-the-workflow-id","title":"How do I find the workflow ID?","text":"<ol> <li>Open the workflow for which you want to get the workflow ID.</li> <li>Copy the number after <code>workflow/</code> in your URL and paste that in the Workflow ID field.</li> </ol>"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.executeWorkflow/#how-does-data-get-passed-from-one-workflow-to-another","title":"How does data get passed from one workflow to another?","text":"<p>Let's say, that there's a Execute Workflow node in Workflow A. The Execute Workflow node calls another workflow, Workflow B. - The Execute Workflow node passes the data to the Start node of Workflow B. - The last node of Workflow B sends the data back to the Execute Workflow node in Workflow A.</p>"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.ftp/","title":"FTP","text":"<p>The FTP node is useful to access and upload files to an FTP server.</p> <p>\ud83d\udd11 Credential</p> <p>You can find authentication information for this node here.</p>","tags":["Workflow\u00b2","FTP"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.ftp/#basic-operations","title":"Basic Operations","text":"<ul> <li>Delete a file</li> <li>Download a file</li> <li>List contents of a folder</li> <li>Rename/move content from old path to new path</li> <li>Upload a file</li> </ul> <p>Note: To attach a file for upload, you will need to use an additional node such as the Read Binary File node or the HTTP Request node to pass the file as a data property.</p>","tags":["Workflow\u00b2","FTP"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.ftp/#node-reference","title":"Node Reference","text":"<ul> <li>Protocol: A dropdown list to choose between the FTP or SFTP protocol.</li> <li>Path: A field used to specify the remote path that you would like to connect to.</li> <li>Recursive: A toggle that can be used to include all subdirectories and files.</li> </ul>","tags":["Workflow\u00b2","FTP"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.ftp/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to upload a file to an FTP server and get a list of all files using the FTP node. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Start - HTTP Request - FTP</p> <p>The final workflow should look like the following image.</p> <p></p>","tags":["Workflow\u00b2","FTP"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.ftp/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>","tags":["Workflow\u00b2","FTP"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.ftp/#2-http-request-node","title":"2. HTTP Request node","text":"<ol> <li>Enter the URL of the file you want to download in the URL field.</li> <li>Select File from the Response Format dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol>","tags":["Workflow\u00b2","FTP"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.ftp/#3-ftp-node-ftp-upload","title":"3. FTP node (ftp: upload)","text":"<ol> <li>First of all, you'll have to enter credentials for the FTP node. You can find out how to do that here.</li> <li>Select Upload from the Operation dropdown list.</li> <li>Enter the path where you would like to upload the file in the Path field.</li> <li>Click on Execute Node to run the node.</li> </ol>","tags":["Workflow\u00b2","FTP"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.ftp/#4-ftp1-node-ftp-list","title":"4. FTP1 node (ftp: list)","text":"<ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select List from the Operation dropdown list.</li> <li>Enter the path to the folder where you uploaded the file in the previous step in the Path field.</li> <li>Click on Execute Node to run the node.</li> </ol>","tags":["Workflow\u00b2","FTP"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.function/","title":"Function","text":"<p>Using the function node, you can:</p> <ul> <li>Transform data from other nodes</li> <li>Implement custom functionality</li> </ul> <p>Function node and function item node</p> <p>Note that the Function node is different from the Function Item node. Refer to Data | Code to learn about the difference between the two.</p> <p>The Function node supports promises. So instead of returning the items directly, it is also possible to return a promise which resolves accordingly.</p> <p>The Function node supports writing to your browser console using <code>console.log</code>, useful for debugging and troubleshooting your workflows.</p>","tags":["Workflow\u00b2","Function"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.function/#data-structure","title":"Data structure","text":"<p>In Doc\u00b2, all data passed between nodes is an array of objects. It has the following structure:</p> <pre><code>[\n{\n// For most data:\n// Wrap each item in another object, with the key 'json'\n\"json\": {\n// Example data\n\"jsonKeyName\": \"keyValue\",\n\"anotherJsonKey\": {\n\"lowerLevelJsonKey\": 1\n}\n},\n// For binary data:\n// Wrap each item in another object, with the key 'binary'\n\"binary\": {\n// Example data\n\"binaryKeyName\": {\n\"data\": \"....\", // Base64 encoded binary data (required)\n\"mimeType\": \"image/png\", // Best practice to set if possible (optional)\n\"fileExtension\": \"png\", // Best practice to set if possible (optional)\n\"fileName\": \"example.png\", // Best practice to set if possible (optional)\n}\n}\n},\n...\n]\n</code></pre> <p>Skipping the 'json' key and array syntax</p> <p>From 0.166.0 onwards, Doc\u00b2 automatically adds the <code>json</code> key if it is missing. It also automatically wraps your items in an array (<code>[]</code>) if needed.</p>","tags":["Workflow\u00b2","Function"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.function/#example-usage","title":"Example usage","text":"<p>This workflow allows you to get today's date and day using the Function node. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - Function</p> <p>The final workflow should look like the following image.</p> <p></p>","tags":["Workflow\u00b2","Function"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.function/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>","tags":["Workflow\u00b2","Function"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.function/#2-function-node","title":"2. Function node","text":"<ol> <li>Paste the following JavaScript code snippet in the Function field. <pre><code>var date = new Date().toISOString();\nvar day = new Date().getDay();\nconst weekday = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n\nitems[0].json.date_today = date;\nitems[0].json.day_today = weekday[day];\n\nreturn items;\n</code></pre></li> <li>Click on Execute Node to run the workflow.</li> </ol>","tags":["Workflow\u00b2","Function"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.function/#node-reference","title":"Node reference","text":"<p>You can also use the methods and variables mentioned in the Expressions page in the Function node.</p>","tags":["Workflow\u00b2","Function"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.function/#variable-items","title":"Variable: items","text":"<p>It contains all the items that the node has received as an input.</p> <p>Information about how the data is structured can be found on this page about data structures.</p> <p>The data can be accessed and manipulated like this:</p> <pre><code>// Sets the JSON data property \"myFileName\" of the first item to the name of the\n// file which is set in the binary property \"image\" of the same item.\nitems[0].json.myFileName = items[0].binary.image.fileName;\n\nreturn items;\n</code></pre> <p>This example creates 10 dummy items with the ids 0 to 9:</p> <pre><code>const newItems = [];\n\nfor (let i=0;i&lt;10;i++) {\nnewItems.push({\njson: {\nid: i\n}\n});\n}\n\nreturn newItems;\n</code></pre>","tags":["Workflow\u00b2","Function"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.function/#method-itemindex-number-runindex-number","title":"Method: $item(index: number, runIndex?: number)","text":"<p>With <code>$item</code> it is possible to access the data of parent nodes. That can be the item data but also the parameters. It expects as input an index of the item the data should be returned for. This is needed because for each item the data returned can be different. This is probably straightforward for the item data itself but maybe less for data like parameters. The reason why it is also needed, is that they may contain an expression. Expressions get always executed of the context for an item. If that would not be the case, for example, the Email Send node not would be able to send multiple emails at once to different people. Instead, the same person would receive multiple emails.</p> <p>The index is 0 based. So <code>$item(0)</code> will return the first item, <code>$item(1)</code> the second one, and so on.</p> <p>By default the item of the last run of the node  will be returned. So if the referenced node ran 3x (its last runIndex is 2) and the current node runs the first time (its runIndex is 0) the data of runIndex 2 of the referenced node will be returned.</p> <p>For more information about what data can be accessed via <code>$node</code>, check out the <code>Variable: $node</code> section.</p> <p>Example:</p> <pre><code>// Returns the value of the JSON data property \"myNumber\" of Node \"Set\" (first item)\nconst myNumber = $item(0).$node[\"Set\"].json[\"myNumber\"];\n// Like above but data of the 6th item\nconst myNumber = $item(5).$node[\"Set\"].json[\"myNumber\"];\n\n// Returns the value of the parameter \"channel\" of Node \"Slack\".\n// If it contains an expression the value will be resolved with the\n// data of the first item.\nconst channel = $item(0).$node[\"Slack\"].parameter[\"channel\"];\n// Like above but resolved with the value of the 10th item.\nconst channel = $item(9).$node[\"Slack\"].parameter[\"channel\"];\n</code></pre>","tags":["Workflow\u00b2","Function"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.function/#method-getworkflowstaticdatatype","title":"Method: getWorkflowStaticData(type)","text":"<p>This gives access to the static workflow data. It is possible to save data directly with the workflow. This data should, however, be very small. A common use case is to for example to save a timestamp of the last item that got processed from an RSS-Feed or database. It will always return an object. Properties can then read, delete or set on that object. When the workflow execution succeeds, Doc\u00b2 will check automatically if the data has changed and will save it, if necessary.</p> <p>There are two types of static data. The \"global\" and the \"node\" one. Global static data is the same in the whole workflow. And every node in the workflow can access it. The node static data , however, is different for every node and only the node which set it can retrieve it again.</p> <p>Example:</p> <pre><code>// Get the global workflow static data\nconst staticData = getWorkflowStaticData('global');\n// Get the static data of the node\nconst staticData = getWorkflowStaticData('node');\n\n// Access its data\nconst lastExecution = staticData.lastExecution;\n\n// Update its data\nstaticData.lastExecution = new Date().getTime();\n\n// Delete data\ndelete staticData.lastExecution;\n</code></pre> <p>It is important to know that the static data can not be read and written when testing via the UI. The data there will always be empty and the changes will not persist. Only when a workflow is active and it gets called by a Trigger or Webhook, the static data will be saved.</p>","tags":["Workflow\u00b2","Function"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.function/#external-libraries","title":"External libraries","text":"<p>You can import and use built-in and external npm modules in the Function node. To learn how to enable external moduels, refer the Configuration guide.</p>","tags":["Workflow\u00b2","Function"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.function/#further-reading","title":"Further reading","text":"","tags":["Workflow\u00b2","Function"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.functionItem/","title":"Function Item","text":"<p>The Function Item node is used to add custom snippets to JavaScript code that should be executed once for every item that it receives as the input.</p> <p> Keep in mind</p> <p>Please note that the Function Item node is different from the Function node. Check out this page to learn about the difference between the two.</p> <p>The Function Item node supports promises. So instead of returning the items directly, it is also possible to return a promise which resolves accordingly.</p> <p>It also provides the ability to write to your browser console using <code>console.log</code>, useful for debugging and troubleshooting your workflows.</p>","tags":["Workflow\u00b2","Function"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.functionItem/#node-reference","title":"Node Reference","text":"<p>You can also use the methods and variables mentioned in the Expressions page in the Function Item node.</p>","tags":["Workflow\u00b2","Function"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.functionItem/#variable-item","title":"Variable: item","text":"<p>It contains the \"json\" data of the currently processed item.</p> <p>The data can be accessed and manipulated like this:</p> <pre><code>// Uses the data of an already existing key to create a new additional one\nitem.newIncrementedCounter = item.existingCounter + 1;\nreturn item;\n</code></pre>","tags":["Workflow\u00b2","Function"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.functionItem/#method-getbinarydata","title":"Method: getBinaryData()","text":"<p>Returns all the binary data (all keys) of the item which gets currently processed. <pre><code>item.filename = getBinaryData().attachment_0.fileName;\nreturn item;\n</code></pre></p>","tags":["Workflow\u00b2","Function"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.functionItem/#method-setbinarydatabinarydata","title":"Method: setBinaryData(binaryData)","text":"<p>Sets all the binary data (all keys) of the item which gets currently processed.</p>","tags":["Workflow\u00b2","Function"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.functionItem/#method-getworkflowstaticdatatype","title":"Method: getWorkflowStaticData(type)","text":"<p>This gives access to the static workflow data. It is possible to save data directly with the workflow. This data should, however, be very small. A common use case is to for example to save a timestamp of the last item that got processed from an RSS-Feed or database. It will always return an object. Properties can then read, delete or set on that object. When the workflow execution succeeds, Doc\u00b2 will check automatically if the data has changed and will save it, if necessary.</p> <p>There are two types of static data. The \"global\" and the \"node\" one. Global static data is the same in the whole workflow. And every node in the workflow can access it. The node static data, however, is different for every node and only the node which set it can retrieve it again.</p> <p>Note: The static data cannot be read and written when executing via manual executions. The data will always be empty, and the changes will not persist. The static data will only be saved when a workflow is active.</p>","tags":["Workflow\u00b2","Function"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.functionItem/#example","title":"Example","text":"<pre><code>// Get the global workflow static data\nconst staticData = getWorkflowStaticData('global');\n// Get the static data of the node\nconst staticData = getWorkflowStaticData('node');\n\n// Access its data\nconst lastExecution = staticData.lastExecution;\n\n// Update its data\nstaticData.lastExecution = new Date().getTime();\n\n// Delete data\ndelete staticData.lastExecution;\n</code></pre>","tags":["Workflow\u00b2","Function"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.functionItem/#external-libraries","title":"External libraries","text":"<p>You can import and use built-in and external npm modules in the Function Item node. To learn how to enable external moduels, refer the Configuration guide.</p>","tags":["Workflow\u00b2","Function"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.git/","title":"Git","text":"<p>Git is a free and open-source distributed version control system designed to handle everything from small to large projects with speed and efficiency.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.git/#basic-operations","title":"Basic Operations","text":"<ul> <li>Add a file or folder to commit</li> <li>Add configuration property</li> <li>Clone a repository</li> <li>Commit files or folders to git</li> <li>Fetch from remote repository</li> <li>Return current configuration</li> <li>Return git commit history</li> <li>Pull from remote repository</li> <li>Push to remote repository</li> <li>Push Tags to remote repository</li> <li>Return status of current repository</li> <li>Create a new tag</li> <li>Set the user</li> </ul>"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.git/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to add, commit, and push changes to a git repository. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Start - Git</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.git/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.git/#2-git-node-add","title":"2. Git node (Add)","text":"<p>This node will add the <code>README.md</code> file to the staging area. If you want to add a different file, enter the path of that file instead.</p> <ol> <li>Select 'Add' from the Operation dropdown list.</li> <li>Enter the repository path in the Repository Path field.</li> <li>Enter the file path in the Paths to Add field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node adds the <code>README.md</code> file to the staging area.</p> <p></p>"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.git/#3-git1-node-commit","title":"3. Git1 node (Commit)","text":"<p>This node will commit all the changes that were added to the staging area by the previous node.</p> <ol> <li>Select 'Commit' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Repository Path field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Git &gt; Parameters &gt; repositoryPath. You can also add the following expression: <code>{{$node[\"Git\"].parameter[\"repositoryPath\"]}}</code>.</li> <li>Enter a commit message in the Message field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node creates a new commit.</p> <p></p>"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.git/#4-git2-node-log","title":"4. Git2 node (Log)","text":"<p>This node will return the commit logs of your repository.</p> <ol> <li>Click on the gears icon next to the Repository Path field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Git &gt; Parameters &gt; repositoryPath. You can also add the following expression: <code>{{$node[\"Git\"].parameter[\"repositoryPath\"]}}</code>.</li> <li>Toggle Return All to <code>true</code>. This option will return all the logs.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node creates a new commit.</p> <p></p>"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.git/#5-git3-node-push","title":"5. Git3 node (Push)","text":"<p>This node will push the changes to a cloud repository.</p> <ol> <li>Select 'Push' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Repository Path field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Git &gt; Parameters &gt; repositoryPath. You can also add the following expression: <code>{{$node[\"Git\"].parameter[\"repositoryPath\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>Note: If you're not using SSH, you will have to create credentials to authenticate yourself. You also need to set an upstream branch to push the changes. This is required only once. You can set up an upstream branch by executing the command <code>git push -u origin master</code> from a terminal.</p> <p>In the screenshot below, you will notice that the node pushes the local changes to a cloud repository.</p> <p></p>"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.graphql/","title":"GraphQL","text":"<p>GraphQL is an open-source data query and manipulation language for APIs, and a runtime for fulfilling queries with existing data.</p>","tags":["Workflow\u00b2"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.graphql/#basic-operations","title":"Basic Operations","text":"<ul> <li>Query a GraphQL endpoint</li> </ul>","tags":["Workflow\u00b2"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.graphql/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to get information about the five most recent SpaceX launches from spacex.land. You can also find the workflow on the website. This example usage workflow uses the following two nodes. - Start - GraphQL</p> <p>The final workflow should look like the following image.</p> <p></p>","tags":["Workflow\u00b2"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.graphql/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>","tags":["Workflow\u00b2"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.graphql/#2-graphql-node","title":"2. GraphQL node","text":"<ol> <li>Enter <code>https://api.spacex.land/graphql/</code> in the Endpoint field.</li> <li>Select the 'JSON' option from the Request Format dropdown list.</li> <li>Enter the GraphQL query shown below in the Query field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>","tags":["Workflow\u00b2"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.graphql/#graphql-query","title":"GraphQL query","text":"<pre><code>{\nlaunchesPast(limit: 5) {\nmission_name\nlaunch_date_local\nlaunch_site {\nsite_name_long\n}\nlinks {\narticle_link\nvideo_link\n}\nrocket {\nrocket_name\nfirst_stage {\ncores {\nflight\ncore {\nreuse_count\nstatus\n}\n}\n}\nsecond_stage {\npayloads {\npayload_type\npayload_mass_kg\npayload_mass_lbs\n}\n}\n}\nships {\nname\nhome_port\nimage\n}\n}\n}\n</code></pre>","tags":["Workflow\u00b2"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.htmlExtract/","title":"HTML Extract","text":"<p>The HTML Extract node is useful to extract the HTML content of a webpage.</p>"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.htmlExtract/#node-reference","title":"Node Reference","text":"<ul> <li>Source Data: This field specifies if HTML should be read from binary or JSON data. In this dropdown list, there are two options.<ul> <li>Binary</li> <li>JSON</li> </ul> </li> <li>JSON Property: The name of the JSON property in which the HTML (from which to extract the data) can be found. This field is displayed when 'JSON' is selected in the Source Data field.</li> <li>Binary Property: The name of the binary property in which the HTML (from which to extract the data) can be found. This field is displayed when 'Binary' is selected in the Source Data field. The property can either contain a string or an array of strings.</li> <li>Extraction Values:<ul> <li>Key: The key under which the extracted value should be saved.</li> <li>CSS Selector: The CSS selector to use.</li> <li>Return Value: The kind of data that should be returned. In this dropdown list there are four options.<ul> <li>Attribute: Get an attribute value like 'class' from an element.<ul> <li>Attribute: The name of the attribute to return the value of.</li> </ul> </li> <li>HTML: Get the HTML that the element contains.</li> <li>Text: Get only the text content of the element.</li> <li>Value: Get the value of an input, select, or textarea.</li> </ul> </li> <li>Return Array: Returns the values as an array so that if multiple ones are found, they also get returned separately. If not set, all values will be returned as a single string.</li> </ul> </li> <li>Options:<ul> <li>Trim Values: Removes all spaces and newlines from the beginning and end of the values.</li> </ul> </li> </ul>"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.htmlExtract/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to extract titles and URLs of all the articles from the  Hackernoon homepage using the HTML Extract node. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Start - HTTP Request - HTML Extract</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.htmlExtract/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.htmlExtract/#2-http-request-node-get","title":"2. HTTP Request node (GET)","text":"<ol> <li>Enter <code>https://hackernoon.com</code> in the URL field.</li> <li>Select 'String' from the Response Format dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol>"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.htmlExtract/#3-html-extract-node-json-data","title":"3. HTML Extract node (json: data)","text":"<ol> <li>Click on the Add Value button.</li> <li>Enter <code>item</code> in the Key field.</li> <li>Enter <code>h2</code> in the CSS Selector field.</li> <li>Select 'HTML' from the Return Value dropdown list.</li> <li>Toggle Return Array to true.</li> <li>Click on Execute Node to run the node.</li> </ol>"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.htmlExtract/#4-html-extract1-node-json-item","title":"4. HTML Extract1 node (json: item)","text":"<ol> <li>Enter <code>item</code> in the JSON Property field.</li> <li>Click on the Add Value button.</li> <li>Enter <code>title</code> in the Key field.</li> <li>Enter <code>a</code> in the CSS Selector field.</li> <li>Click on the Add Value button.</li> <li>Enter <code>url</code> in the Key field.</li> <li>Enter <code>a</code> in the CSS Selector field.</li> <li>Select 'Attribute' from the Return Value dropdown list.</li> <li>Enter <code>href</code> in the Attribute field.</li> <li>Click on Execute Node to run the node.</li> </ol>"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.httpRequest/","title":"HTTP Request","text":"<p>The HTTP Request node is one of the most versatile nodes in Workflow\u00b2. It allows you to make HTTP requests which can be used to query data from apps and services.</p> <p>\ud83d\udd11 Credential</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.httpRequest/#node-reference","title":"Node Reference","text":"<ul> <li>Authentication: Select the authentication method to use for the request from the following:<ul> <li>Basic Auth</li> <li>Digest Auth</li> <li>Header Auth</li> <li>OAuth1</li> <li>OAuth2</li> <li>None</li> </ul> </li> <li>Request Method: Select the method to be used for the request:<ul> <li>DELETE</li> <li>GET</li> <li>HEAD</li> <li>PATCH</li> <li>POST</li> <li>PUT</li> </ul> </li> <li>URL: This field is where the URL to request has to be entered.</li> <li>Ignore SSL Issues: This option can be used to download the response even if SSL validation is not possible.</li> <li>Response Format: Select the format in which the data gets returned from the URL. You can choose between File, JSON, and String.</li> <li>JSON/RAW Parameters: This option can be used to specify whether the body/query parameter should be set via the value-key pair UI or JSON/RAW.</li> <li>Options<ul> <li>Batch Interval: The time (in milliseconds) between each batch of requests. Set to <code>0</code> to disable.</li> <li>Batch Size: If set, input will be split in batches to throttle requests. Use <code>-1</code> to disable. <code>0</code> will be treated as <code>1</code>.</li> <li>Full Response: This option can be used to retrieve the full response instead of only the body from the URL.</li> <li>Follow Redirect: This option can be used to follow any redirections with a status code <code>3xx</code>.</li> <li>Ignore Response Code: This option can be used to let the node execute even when the HTTP status code is not 2xx.</li> <li>Proxy: This field is used to specify an HTTP proxy that you may want to use.</li> <li>Split Into Items: This option can be used to flatten the node output as a simple array. See the FAQ section to learn more.</li> <li>Timeout: The maximum time (in ms) to wait for a response header from the server before aborting the request.</li> <li>Use Querystring: Set this option to <code>true</code> if you need arrays to be serialized as <code>foo=bar&amp;foo=baz</code> instead of the default <code>foo[0]=bar&amp;foo[1]=baz</code>.</li> <li>Headers: This section is used to specify any optional HTTP request headers you may want to include with your request.</li> <li>Query Parameters: This section is used to specify any HTTP query parameters you may want to include with your request.</li> </ul> </li> </ul>"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.httpRequest/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to GET a sample list of users from reqres.in, add a new user using a POST request, and update the user using a PATCH request. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Start - HTTP Request</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.httpRequest/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.httpRequest/#2-http-request-node-get","title":"2. HTTP Request node (GET)","text":"<ol> <li>Enter <code>https://reqres.in/api/users</code> in the URL field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.httpRequest/#3-http-request1-node-post","title":"3. HTTP Request1 node (POST)","text":"<ol> <li>Select 'POST' from the Request Method dropdown list.</li> <li>Enter <code>https://reqres.in/api/users</code> in the URL field.</li> <li>Click on the Add Parameter button in the Body Parameters section.</li> <li>Enter <code>name</code> in the Name field.</li> <li>Enter <code>Neo</code> in the Value field.</li> <li>Click on the Add Parameter button in the Body Parameters section.</li> <li>Enter <code>job</code> in the Name field.</li> <li>Enter <code>Programmer</code> in the Value field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.httpRequest/#4-http-request2-node-patch","title":"4. HTTP Request2 node (PATCH)","text":"<ol> <li>Select 'PATCH' from the Request Method dropdown list.</li> <li>Enter <code>https://reqres.in/api/users/2</code> in the URL field.</li> <li>Click on the Add Parameter button in the Body Parameters section.</li> <li>Enter <code>name</code> in the Name field.</li> <li>Enter <code>Neo</code> in the Value field.</li> <li>Click on the Add Parameter button in the Body Parameters section.</li> <li>Enter <code>job</code> in the Name field.</li> <li>Enter <code>The Chosen One</code> in the Value field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.httpRequest/#faqs","title":"FAQs","text":""},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.httpRequest/#how-to-fetch-a-binary-file-from-a-url","title":"How to fetch a binary file from a URL?","text":"<ol> <li>Enter the URL of the file in the URL field. For example, you can enter <code>https://n8n.io/n8n-logo.png</code> to fetch the Doc\u00b2 logo.</li> <li>Select 'File' from the Response Format dropdown list.</li> <li>(Optional) Change the binary property value in the Binary Property field. Throughout the workflow, you can refer to the binary data with the value you set in this field.</li> <li>Click on Execute Node to run the node.</li> <li>After the node gets executed, click on the Binary tab.</li> <li>Click on the Show Binary Data button to view the file.</li> </ol>"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.httpRequest/#how-to-send-a-binary-file-to-an-api-endpoint","title":"How to send a binary file to an API endpoint?","text":"<p>Depending on your use-case, you might want to send a binary file to an API endpoint. To do that, follow the steps mentioned below.</p> <ol> <li>Connect the HTTP Request node with a node that has previously fetched the binary file. This node can be an HTTP Request node, Read Binary File node, Google Drive node or any such node.</li> <li>Select 'POST' from the Request Method dropdown list (Note: Refer to the API documentation of your API to make sure that you have selected the correct HTTP request method).</li> <li>Enter the URL where you want to send the binary file in the URL field.</li> <li>Toggle JSON/RAW Parameters to <code>true</code>.</li> <li>Toggle Send Binary Data to <code>true</code>.</li> <li>Click on Add Option and select 'Body Content Type' from the dropdown list.</li> <li>Select 'Form-Data Multipart' from the Body Content Type dropdown list.</li> <li>If you are referring to the binary property with a different value, enter that value in the Binary Property field (name displayed in the binary tab after executing the previous node). Note: To set a name for the form field, separate the field name with a colon, example <code>sendKey:binaryProperty</code>. If you want to send multiple files, separate them with comma, example: <code>sendKey1:binaryProperty1,sendKey2:binaryProperty2</code></li> <li>Click on Execute Node to run the node.</li> </ol> <p>Refer to this example workflow.</p>"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.httpRequest/#how-to-get-the-http-status-code-after-an-execution","title":"How to get the HTTP status code after an execution?","text":"<ol> <li>Click on Add Option and select 'Full Response'.</li> <li>Toggle Full Response to <code>true</code>.</li> </ol> <p>When the node gets executed, you will receive the HTTP status code, the HTTP status message, and the header parameters.</p>"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.httpRequest/#how-to-send-xml-data","title":"How to send XML data?","text":"<ol> <li>Toggle JSON/RAW Parameters to <code>true</code>.</li> <li>Click on Add Option and select 'Body Content Type'.</li> <li>Select 'RAW/Custom' from the Body Content Type field.</li> <li>Enter the XML data in the Body field.</li> </ol>"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.httpRequest/#when-to-use-the-split-into-items-parameter","title":"When to use the Split Into Items parameter?","text":"<p>Not all incoming data you receive will be properly structured to allow nodes to process each individual item.</p> <p>Typically you would need to use the Item List node to modify data structure. The HTTP Request node allows you to do this automatically by enabling the Split Into Items parameter.</p>"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.iCal/","title":"iCalendar","text":"<p>The iCalendar node allows you to create event files that can be shared as an attachment.</p>"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.iCal/#basic-operations","title":"Basic Operations","text":"<ul> <li>Create Event File</li> </ul>"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.iCal/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to create an event file and send it as an attachment via email. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Start - Send Email</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.iCal/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.iCal/#2-icalendar-node-createeventfile","title":"2. iCalendar node (createEventFile)","text":"<p>This node will create an event file. We use this file as an attachment in the next node.</p> <ol> <li>Enter the event title in the Event Title field.</li> <li>Select the event start date and time in the Start field.</li> <li>Select the event end date and time in the End field.</li> <li>Select 'Get All' from the Operation dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node creates the event file.</p> <p></p>"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.iCal/#3-send-email-node","title":"3. Send Email node","text":"<p>This node will send the event file as an attachment.</p> <ol> <li>First of all, you'll have to enter credentials for the Send Email node. You can find out how to do that here.</li> <li>Enter the sender's email address in the From Email field.</li> <li>Enter the receiver's email address in the To Email field.</li> <li>Enter a subject in the Subject field.</li> <li>Enter the email content in the Text field.</li> <li>Enter <code>data</code> in the Attachments field. If you used a different name for the Binary Property, use that name instead. We add the name of the Binary Property and not the file name in the Attachments field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node sends an email with the event file as an attachment.</p> <p></p>"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.if/","title":"IF","text":"<p>The IF node is used to split a workflow conditionally based on comparison operations.</p>"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.if/#node-reference","title":"Node Reference","text":"<p>You can add comparison conditions using the Add Condition dropdown. Conditions can be created based on the data type, the available comparison operations vary for each data type.</p> <p>Boolean - Equal - Not Equal</p> <p>Number - Smaller - Smaller Equal - Equal - Not Equal - Larger - Larger Equal - Is Empty</p> <p>String - Contains - Equal - Not Contains - Not Equal - Regex - Is Empty</p> <p>You can choose to split a workflow when any of the specified conditions are met, or only when all the specified conditions are met using the options in the Combine dropdown list.</p>"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.if/#example-usage","title":"Example Usage","text":"<p>This workflow executes two different Set nodes based on the output given by an IF node. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Start - Function - IF - Set</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.if/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.if/#2-function-node","title":"2. Function node","text":"<ol> <li>Enter the following code in the Function field. <pre><code>return [\n  {\n    json: {\n      id: 0,\n    }\n  },\n  {\n    json: {\n      id: 1,\n    }\n  }\n];\n</code></pre></li> <li>Click on Execute Node to run the workflow.</li> </ol>"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.if/#3-if-node","title":"3. IF node","text":"<ol> <li>Click on the Add Condition button and select 'Number' from the dropdown list.</li> <li>Click on the gears icon next to the Value 1 field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Function &gt; Output Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$node[\"Function\"].json[\"id\"]}}</code>.</li> <li>From the Operation dropdown list, select 'Equal'.</li> <li>Click on Execute Node to run the workflow.</li> </ol>"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.if/#4-set-node-for-true-condition","title":"4. Set node (for 'true' condition)","text":"<ol> <li>Create a Set node connected to the 'true' output of the IF node.</li> <li>Click on the Add Value button and select 'String' from the dropdown list.</li> <li>Enter <code>name</code> in the Name field.</li> <li>Enter <code>n8n</code> in the Value field.</li> <li>Click on Execute Node to run the workflow.</li> </ol> <p>Note: Notice that only the id with the value 0 made its way to this Set node.</p> <p></p>"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.if/#5-set1-node-for-false-condition","title":"5. Set1 node (for 'false' condition)","text":"<ol> <li>Create a Set node connected to the 'false' output of the IF node.</li> <li>Click on the Add Value button and select 'String' from the dropdown list.</li> <li>Enter <code>name</code> in the Name field.</li> <li>Enter <code>nodemation</code> in the Value field.</li> <li>Click on Execute Node to run the workflow.</li> </ol> <p>Note: Notice that only the id with the value 1 made its way to this Set node.</p> <p></p>"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.imapEmail/","title":"IMAP Email","text":"<p>The IMAP Email node is used to receive emails via an IMAP email server. This node is a trigger node.</p> <p>\ud83d\udd11 Credential</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.imapEmail/#basic-operations","title":"Basic Operations","text":"<ul> <li>Receive an email</li> </ul>"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.imapEmail/#node-reference","title":"Node Reference","text":"<ul> <li>Mailbox Name field: The mailbox from which you want to receive emails.</li> <li>Action field: Used to specify whether or not an email should be marked as read when Doc\u00b2 receives it.</li> <li>Download Attachment field: Used to specify whether or not you want to download any attachments received with the emails.</li> </ul>"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.imapEmail/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to receive an email using the IMAP Email node. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - IMAP Email</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.imapEmail/#1-imap-email-node","title":"1. IMAP Email node","text":"<ol> <li>First of all, you'll have to enter credentials for the IMAP Email node. You can find out how to do that here.</li> <li>Enter the name of the mailbox from which you want to receive emails in the Mailbox Name field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.interval/","title":"Interval","text":"<p>The Interval node is used to trigger the workflow to run in regular intervals of time. This node is a Trigger node.</p> <p> Keep in mind</p> <p>If a workflow is using the Interval node as a trigger, make sure that you save and activate the workflow.</p> <p>The Interval node has two fields: 1. Interval field: This is a numerical field where you can specify the interval after which the workflow should get triggered again. 2. Unit field: This is a dropdown list which allows you to select a unit for the value that was provided for the Interval field. This field offers the following options for its dropdown list:     - Seconds     - Minutes     - Hours</p> <p></p>"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.itemLists/","title":"Item Lists","text":"<p>The Item Lists node simplifies working with returned data that contain lists (arrays), enabling you to easily modify the structure for further processing without the need to use Function nodes and write custom JavaScript.</p>"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.itemLists/#operations","title":"Operations","text":"<p>The Item Lists node enables you to perform the following operations:</p> <ul> <li>Split Out Items: Create separate items from a list of data within an item.</li> <li>Aggregate Items: Merge multiple items into a single new item.</li> <li>Remove Duplicates: Remove extraneous items.</li> <li>Sort: Change the ordering of items.</li> <li>Limit: Remove items beyond a defined maximum number.</li> </ul> <p>Usually, you shouldn't use expressions for fields that expect a <code>key</code> value (for example, Field to Split Out). Expressions usually return values, not keys.</p>"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.itemLists/#split-out-items","title":"Split Out Items","text":"<p>This operation is useful if your data contains a list of items, for example a list of customers, and you want to split them so that you have an item for each customer.</p> <p></p> <p>When using the Split Out Items operation, configure the following parameters and options:</p> <ul> <li>Field to Split Out: The field containing the list you want to separate out into individual items (e.g. <code>Name</code> in the example here). Must be plaintext and not an expression.</li> <li>Include: Select if any other fields from the input data should be kept with each new individual item. You can select:<ul> <li>No Other Fields</li> <li>All Other Fields</li> <li>Selected Other Fields: When selected, a Fields to Include field is displayed. Enter a comma separated list of desired fields.</li> </ul> </li> <li>Disable Dot Notation: When disabled, child fields (in the format <code>parent.child</code>) cannot be referenced.</li> <li>Destination Field Name: Optionally set the field name under which to put the new split contents.</li> </ul>"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.itemLists/#aggregate-items","title":"Aggregate Items","text":"<p>The Aggregate Items operations is useful when you want to take many separate items, or just particular portions of them, and group them together into individual items. For example, the image below shows customer names and email addresses being grouped into individual items from a series of individual customer records that contained many other details.</p> <p></p> <p>When using the Aggregate Items operation, configure the following parameters and options:</p> <ul> <li>Field To Aggregate: The name of the field in the input data to be aggregated together.</li> <li>Rename Field: Enable this toggle to enter a field name for the aggregated output data. When aggregating multiple fields you must provide new output field names, multiple fields cannot be left undefined.</li> <li>Output Field Name: Displayed only when Rename Field is enabled. The field name for the aggregated output data.</li> <li>Disable Dot Notation: When disabled, child fields (in the format <code>parent.child</code>) cannot be referenced.</li> <li>Preserve Aggregated Lists: If enabled, fields to aggregate that are lists will output a list of lists (rather than being merged into a single list).</li> </ul>"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.itemLists/#remove-duplicates","title":"Remove Duplicates","text":"<p>There are many situations where you can end up with duplicate data, a user creating multiple accounts, a customer submitting the same order multiple time, etc. When working with large datasets it becomes more difficult to easily spot and remove these items.</p> <p>The Remove Duplicates operation allows you to identify those items that are identical across all fields or only a desired subset of fields.</p> <p></p> <p>When using the Remove Duplicates operation, configure the following parameters and options:</p> <ul> <li>Compare: Provide which fields of the input data should be compared to check if they are the same. The following options are available:</li> <li>All Fields: Compares all fields of the input data.</li> <li>All Fields Except: Enter which input data fields should be excluded from the comparison. Multiple values can be provided separated by commas.</li> <li>Selected Fields: Enter which input data fields should be included in the comparison. Multiple values can be provided separated by commas.</li> <li>Disable Dot Notation: When disabled, child fields (in the format <code>parent.child</code>) cannot be referenced.</li> </ul>"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.itemLists/#sort","title":"Sort","text":"<p>The Sort operation allows you to organize lists of in a desired ordering, or generate a random selection if desired (i.e. assign tasks to users randomly).</p> <p> Keep in mind</p> <p>The Sort operation uses the default JavaScript operation where the elements to be sorted are converted into strings and their values compared. See here to learn more.</p> <p></p> <p>When using the Sort operation, configure the following parameters and options:</p> <ul> <li>Type: Use the dropdown to select how you want to input the sorting. The following options are available:</li> <li>Simple: When you selected, you can use the Add Field To Sort By button to input the desired fields, and select whether Ascending or Descending* order is desired.</li> <li>Random: Select to create a random order in the list.</li> <li>Code: When selected, displays a code input field where you can enter custom JavaScript code to perform the sort operation.</li> </ul>"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.itemLists/#limit","title":"Limit","text":"<p>If you want to keep and process only a specific number of items from your incoming data, the Limit operation allows you to select the desired number of items to keep and whether they should be taken from the beginning or end of the data (e.g. take the 5 highest priority tickets, the oldest order, etc.).</p> <p></p> <p>When using the Limit operation, configure the following parameters and options:</p> <ul> <li>Max Items: Enter the maximum number of items that should be kept. If the input data contains more than this value, items will be removed.</li> <li>Keep: When items must be removed, select if the input items at the beginning or end are kept.</li> </ul>"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.localFileTrigger/","title":"Local File Trigger","text":"<p>The Local File Trigger node starts a workflow when changes on the file system are detected. These changes involve a file or folder geting added, changed or deleted.</p>"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.localFileTrigger/#node-reference","title":"Node Reference","text":"<ul> <li>Trigger On:<ul> <li>Changes to a Specifc File: Triggers when the specified file is changed</li> <li>Changes Involving a Specific Folder: Triggers when the a change in the selected folder occurs</li> </ul> </li> <li>Additional Fields:<ul> <li>File to Watch: The path to the file to watch. This field is shown when 'Trigger On' is set to 'Changes to a Specifc File'.</li> <li>Folder to Watch: The path of the folder to watch. This field is shown when 'Trigger On' is set to 'Changes Involving a Specific Folder'.</li> <li>Watch for: The type of change to watch for. This field is shown when 'Trigger On' is set to 'Changes Involving a Specific Folder'.</li> <li>Options:<ul> <li>Include Linked Files/Folders: Also watch for changes to linked files or folders.</li> <li>Ignore: Files or paths to ignore. The whole path is tested, not just the filename. Supports the Anymatch syntax.</li> <li>Max Folder Depth: How deep into the folder structure to watch for changes.</li> </ul> </li> </ul> </li> </ul>"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.merge/","title":"Merge","text":"<p>The Merge node is useful to merge data of multiple streams, once data of both streams is available.</p>"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.merge/#node-reference","title":"Node Reference","text":""},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.merge/#mode","title":"Mode","text":"<p> Keep in mind</p> <p>The items passed into Input 1 of the Merge node will take precedence. For example, if 5 items are received in Input 1 and 10 items are received in Input 2, the Merge node will only process 5 items. The remaining 5 items from Input 2 will not be processed.</p> <p>You can specify how data of branches should be merged. The following options are available:</p> <ul> <li>Append: Combines data of both inputs. The output will contain items of input 1 and input 2.</li> <li>Keep Key Matches: Keeps data of input 1 if it finds a match with data of input 2.</li> <li>Merge By Index: Merges data of both the inputs. The output will contain the data of input 1 merged with the data of input 2. The merge occurs based on the index of the items. For example, the first item of input 1 will be merged with the first item of input 2.</li> <li>Merge By Key: Merges data of both the inputs. The output will contain the data of input 1 merged with the data of input 2. The merge occurs depending on a defined key.</li> <li>Multiples: Merges each value of one input with each value of the other input. The output will contain (m*n) items where (m) and (n) are lengths of the inputs.</li> <li>Pass-through: Passes through the data of one input. The output will contain items of the defined input.</li> <li>Remove Key Matches: Keeps the data of input 1 if it does not find a match with the data of input 2.</li> <li>Wait: Waits till the data of both the inputs is available. It will then output a single empty item.</li> </ul>"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.merge/#additional-fields","title":"Additional Fields","text":"<ul> <li>Property Input 1: The name of the property which decides which items of input 1 to merge. This field is displayed when 'Keep Key Matches', 'Merge By Key', or 'Remove Key Matches' is selected in the Mode dropdown list.</li> <li>Property Input 2: The name of the property which decides which items of input 2 to merge. This field is displayed when 'Keep Key Matches', 'Merge By Key', or 'Remove Key Matches' is selected in the Mode dropdown list.</li> <li>Join: Use this to specify how many items the output should contain if inputs contain different amount of items. This field is displayed when 'Merge By Index' is selected in the Mode dropdown list. You can select from the following options.<ul> <li>Inner Join: Merges as many items as both the inputs contains. For example, if input 1 contains 3 items and input 2 contains 3 items, the output will contain 3 items.</li> <li>Left Join: Merges as many items as the first input contains. For example, if input 1 contains 3 items and input 2 contains 5 items, the output will contain 3 items.</li> <li>Outer Join: Merges as many items as input contains with most items. For example, if input 1 contains 3 items and input 2 contains 5 items, the output will contain 5 items.</li> </ul> </li> <li>Overwrite: Select when to overwrite the values from Input1 with values from Input 2. This field is displayed when 'Merge By Key' is selected from the Mode dropdown list. You can select from the following options.<ul> <li>Always: Always overwrites everything.</li> <li>If Blank: Overwrites only values of 'null', 'undefined' or the empty strings.</li> <li>If Missing: Only adds values which do not exist yet.</li> </ul> </li> <li>Output Data: Defines which input data should be used as the output of the node. This field is displayed when 'Pass-through' is selected from the Mode dropdown list. You can select from the following options.<ul> <li>Input 1</li> <li>Input 2</li> </ul> </li> </ul>"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.merge/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to merge greetings for the users based on their associated language using the Merge node. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Start - Funtion - Merge</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.merge/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.merge/#2-function-node","title":"2. Function node","text":"<ol> <li>Paste the following JavaScript code snippet in the Function field. <pre><code>return [\n{\njson: {\nname: 'Stefan',\nlanguage: 'de',\n}\n},\n{\njson: {\nname: 'Jim',\nlanguage: 'en',\n}\n},\n{\njson: {\nname: 'Hans',\nlanguage: 'de',\n}\n}\n];\n</code></pre></li> <li>Click on Execute Node to run the node.</li> </ol>"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.merge/#3-function1-node","title":"3. Function1 node","text":"<ol> <li>Paste the following JavaScript code snippet in the Function field. <pre><code>return [\n{\njson: {\ngreeting: 'Hallo',\nlanguage: 'de',\n}\n},\n{\njson: {\ngreeting: 'Hello',\nlanguage: 'en',\n}\n}\n];\n</code></pre></li> <li>Click on Execute Node to run the node.</li> </ol>"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.merge/#4-merge-node-mergebykey","title":"4. Merge node (mergeByKey)","text":"<ol> <li>Select 'Merge By Key' from the Mode dropdown list.</li> <li>Enter <code>language</code> in the Property Input 1 field.</li> <li>Enter <code>language</code> in the Property Input 2 field.</li> <li>Click on Execute Node to run the node.</li> </ol>"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.moveBinaryData/","title":"Move Binary Data","text":"<p>The Move Binary Data node is useful to move data between binary and JSON properties.</p> <p> Hint</p> <p>If you need to convert an entire CSV file to JSON, use the Spreadsheet File node.</p>"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.moveBinaryData/#node-reference","title":"Node Reference","text":"<ul> <li>Mode: This field specifies from where and to the data should be moved.<ul> <li>Binary to JSON</li> <li>JSON to Binary</li> </ul> </li> <li>Set all Data: If set to active, all JSON data is replaced with the data retrieved from binary key. If it is not set to active, the data will be written to a single key. This field is displayed when 'Binary to JSON' is selected from the Mode dropdown list.</li> <li>Source Key: The name of the binary key to get data from. It is also possible to define deep keys by using dot-notation. For example, \"level1.level2.currentKey\". This field is displayed when 'Binary to JSON' is selected from the Mode dropdown list.</li> <li>Destination Key: The name the JSON key to copy data to. It is also possible to define deep keys by using dot-notation. For example, \"level1.level2.newKey\". This field is displayed when 'Binary to JSON' is selected from the Mode dropdown list.</li> <li>Convert all Data: If set to active all JSON data will be converted to binary. If it is not set to active only the data with one key will be converted. This field is displayed when 'JSON to Binary' is selected from the Mode dropdown list.</li> <li> <p>Destination Key: The name of the binary key to copy data to. It is also possible to define deep keys by using dot-notation. For example, \"level1.level2.newKey\". This field is displayed when 'JSON to Binary' is selected from the Mode dropdown list.</p> </li> <li> <p>Options</p> <ul> <li>Keep Source: Keep the source key. By default it gets deleted.</li> <li>Encoding: Set the encoding of the data stream.</li> <li>The following are the options when 'Binary to JSON' is selected from the Mode dropdown list.<ul> <li>JSON Parse: Run JSON parse on the data to get proper object data. This field is displayed when Set all Data is set to 'false'.</li> <li>Keep As Base64: Keeps the binary data as base64 string. This field is displayed when Set all Data is set to 'false'.</li> <li>Strip BOM: Strip the byte order mark (BOM) from the string. This field is displayed when Encoding is selected.</li> </ul> </li> <li>The following are the options when 'JSON to Binary' is selected from the Mode dropdown list.<ul> <li>Add BOM: Add the byte order mark (BOM) to the string. This field is displayed when Encoding is selected.</li> <li>File Name: The file name to set.</li> <li>Mime Type: The mime-type to set. By default the JSON mime-type will be set.</li> <li>Use Raw Data: Use data as is and do not stringify it.</li> <li>Data is Base64: Keeps the binary data as base64 string. This field is displayed when Convert all Data is set to 'false'.</li> </ul> </li> </ul> </li> </ul>"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.moveBinaryData/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to store the JSON data received from the CocktailDB API to your machine. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Start - HTTP Request - Write Binary Data</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.moveBinaryData/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.moveBinaryData/#2-http-request-node-get","title":"2. HTTP Request node (GET)","text":"<ol> <li>Enter <code>https://www.thecocktaildb.com/api/json/v1/1/random.php</code> in the URL field.</li> <li>Click on Execute Node to run the node.</li> </ol>"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.moveBinaryData/#3-move-binary-data-node-json-to-binary","title":"3. Move Binary Data node (JSON to Binary)","text":"<ol> <li>Select 'JSON to Binary' from the Mode dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol>"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.moveBinaryData/#4-write-binary-file-node","title":"4. Write Binary File node","text":"<ol> <li>Enter the file name in the File Name field.</li> <li>Click on Execute Node to run the node.</li> </ol>"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.noOp/","title":"No Operation, do nothing","text":"<p>The No Operation, do nothing node is used when you don't want to perform any operations. The purpose of this node is to make the workflow easier to read and understand where the flow of data stops. This can sometimes help others with a better understanding of the workflow, visually.</p>"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.readBinaryFile/","title":"Read Binary File","text":"<p>The Read Binary File node is used to read a file from the host machine that runs Workflow\u00b2.</p> <p> Keep in mind</p> <ol> <li>If you are running Doc\u00b2 in Docker, your command will run on the Doc\u00b2 container and not the Docker host.</li> </ol> <ol> <li>This node will look for files relative to the Doc\u00b2 install path. It is recommended to use absolute file paths to prevent any errors.</li> </ol>"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.readBinaryFile/#node-reference","title":"Node Reference","text":"<ol> <li>File Path field: This field specifies the path to the file.</li> <li>Property Name field: Name of the binary property to which to write the data of the read file.</li> </ol>"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.readBinaryFile/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to read a file from the host machine using the Read Binary File node. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - Read Binary File</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.readBinaryFile/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.readBinaryFile/#2-read-binary-file-node","title":"2. Read Binary File node","text":"<ol> <li>Enter the path to the file you want to read in the File Path field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.readBinaryFiles/","title":"Read Binary Files","text":"<p>The Read Binary Files node is used to read multiple files from the host machine that runs Workflow\u00b2.</p> <p> Keep in mind</p> <ol> <li>If you are running Workflow\u00b2 in Docker, your command will run on the Doc\u00b2 container and not the Docker host.</li> </ol> <ol> <li>This node will look for files relative to the Doc\u00b2 install path. It is recommended to use absolute file paths to prevent any errors.</li> </ol>","tags":["Workflow\u00b2","Read Binary Files"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.readBinaryFiles/#node-reference","title":"Node Reference","text":"<ol> <li>File Selector field: This is a field that is used to specify the type of files to be read. For example, <code>*.jpg</code>.</li> <li>Property Name field: Name of the binary property to which to write the data of the read files.</li> </ol> <p>It is also possible to select files from a certain directory, by specifying the path in the File Selector field. For example, <code>/data/folder/*.jpg</code>.</p>","tags":["Workflow\u00b2","Read Binary Files"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.readBinaryFiles/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to read multiple files from the host machine using the Read Binary Files node. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - Read Binary Files</p> <p>The final workflow should look like the following image.</p> <p></p>","tags":["Workflow\u00b2","Read Binary Files"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.readBinaryFiles/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>","tags":["Workflow\u00b2","Read Binary Files"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.readBinaryFiles/#2-read-binary-files-node","title":"2. Read Binary Files node","text":"<ol> <li>Enter the type of files you want to read in the File Selector field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>","tags":["Workflow\u00b2","Read Binary Files"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.readPDF/","title":"Read PDF","text":"<p>The Read PDF node is used to read data from PDF documents and extract its content as text.</p> <p> Keep in mind</p> <p>You will need to use an additional node such as the Read Binary File node or the HTTP Request node to pass the image file as a data property to the Read PDF node.</p>","tags":["Workflow\u00b2","Read PDF"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.readPDF/#node-reference","title":"Node Reference","text":"<p>The Read PDF node has one property:</p> <ol> <li>Binary Property field: This field specifies the name of the data property used to read the PDF file in Workflow\u00b2.</li> </ol>","tags":["Workflow\u00b2","Read PDF"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.readPDF/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to read a PDF file using the Read PDF node. You can also find the workflow on the website. This example usage workflow would use the following three nodes. - Start - Read Binary File - PDF Read</p> <p>The final workflow should look like the following image.</p> <p></p>","tags":["Workflow\u00b2","Read PDF"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.readPDF/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>","tags":["Workflow\u00b2","Read PDF"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.readPDF/#2-read-binary-file","title":"2. Read Binary File","text":"<ol> <li>Enter the path to the PDF file you want to read in the File Path field.</li> </ol>","tags":["Workflow\u00b2","Read PDF"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.readPDF/#3-read-pdf-node","title":"3. Read PDF node","text":"<ol> <li>Enter the Property Name you used in the previous node in the Binary Property field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>","tags":["Workflow\u00b2","Read PDF"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.renameKeys/","title":"Rename Keys","text":"<p>The Rename Keys node is used to rename the keys of a key-value pair in Workflow\u00b2.</p>","tags":["Workflow\u00b2","Rename Keys"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.renameKeys/#node-reference","title":"Node Reference","text":"<p>You can rename one or multiple keys using the Rename Keys node. Click on the Add new key button to rename a key.</p> <p>There are two properties in the Rename Keys node.</p> <ul> <li>Current Key Name field: The current name of the key that you would like to rename.</li> <li>New Key Name field: The new name that you would like to assign to the key.</li> </ul>","tags":["Workflow\u00b2","Rename Keys"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.renameKeys/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to rename a key using the Rename Keys node. You can also find the workflow on the website. This example usage workflow would use the following three nodes. - Start - Set - Rename Keys</p> <p>The final workflow should look like the following image.</p> <p></p>","tags":["Workflow\u00b2","Rename Keys"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.renameKeys/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>","tags":["Workflow\u00b2","Rename Keys"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.renameKeys/#2-set-node","title":"2. Set node","text":"<ol> <li>Click on the Add Value button and select the 'String' option from the dropdown list.</li> <li>Enter a name for the key in the Name field and enter a value in the Value field.</li> </ol>","tags":["Workflow\u00b2","Rename Keys"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.renameKeys/#3-rename-keys-node","title":"3. Rename Keys node","text":"<ol> <li>Click on the Add new key button.</li> <li>Enter the name of the key you created in the previous step in the Current Key Name field.</li> <li>Enter the new name that you would like to give the key in the New Key Name field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>","tags":["Workflow\u00b2","Rename Keys"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.respondToWebhook/","title":"Respond to Webhook","text":"<p>The Respond to Webhook node can be used in workflows with a Webhook node. It allows controlling the response to incoming webhooks. In the Webhook node, the Using 'Respond to Webhook' node option would need to be selected in the Response dropdown for the Respond to Webhook node to work.</p> <p>Expressions</p> <p>When using expressions, the Respond to Webhook node will only run for the first item in the input data</p>","tags":["Workflow\u00b2","Respond to Webhook"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.respondToWebhook/#node-reference","title":"Node reference","text":"<p>The node supports the following modes through the Respond With field:</p> <ul> <li>First Incoming Item: Respond with the first incoming item's JSON.</li> <li>Text: Respond with a text defined in the Response Body field.</li> <li>JSON: Respond with a JSON object defined in the Response Body field.</li> <li>Binary: Respond with a binary file defined in the Response Data Source field.</li> <li>No Data: No response payload is sent.</li> </ul> <p>Available options:</p> <ul> <li>Response Code: Set the response code to be used.</li> <li>Response Headers: Define response headers to be sent.</li> </ul>","tags":["Workflow\u00b2","Respond to Webhook"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.respondToWebhook/#workflow-behaviour","title":"Workflow behaviour","text":"<p>When using the Respond to Webhook node, workflows will behave as follows:</p> <ul> <li>When the workflow finishes without executing the Respond to Webhook node, a standard message is returned with a 200 status.</li> <li>If a second Respond to Webhook node is executed after the first one, it is ignored.</li> <li>If the workflow errors before the first Respond to Webhook node is executed, an error message is returned with a 500 status.</li> <li>If a Respond to Webhook node is executed but there was no webhook, the Respond to Webhook node is ignored.</li> </ul>","tags":["Workflow\u00b2","Respond to Webhook"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.respondToWebhook/#example-usage","title":"Example Usage","text":"<p>This workflow allows serves an HTML page when receiving a GET requests. You can find the complete workflow here on Workflow\u00b2.io. The example workflow uses the following nodes:</p> <ul> <li>Webhook</li> <li>Respond to Webhook</li> </ul> <p></p>","tags":["Workflow\u00b2","Respond to Webhook"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.respondToWebhook/#1-webhook-node","title":"1. Webhook node","text":"<p>This node will receive incoming requests (for example, when the webhook URL is opened with a browser).</p> <ol> <li>Enter a human-readable value in the path field, for example <code>my-form</code>.</li> <li>Choose the Using 'Respond to Webhook' node option Response dropdown.</li> <li>Click on Execute Node to run the node.</li> <li>Open the URL shown in the Test URL field under Webhook URLs in a new browser tab.</li> </ol> <p></p>","tags":["Workflow\u00b2","Respond to Webhook"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.respondToWebhook/#2-respond-to-webhook-node","title":"2. Respond to Webhook node","text":"<p>This node will define the response to the request received in the previous step.</p> <ol> <li>Connect the Webhook node from the previous step to the new Respond to Webhook node.</li> <li>Choose the Text option in the Respond With dropdown.</li> <li>Enter some basic HTML into the Response Body field (for example the Bootstrap Starter template).</li> <li>Click Add Option &gt; Response Headers &gt; Add Response Header to add a header to the response.</li> <li>Enter <code>Content-Type</code> in the Name field and <code>text/html; charset=UTF-8</code> in the value field of the new header.</li> <li>Close the Respond to Webhook modal and click the Execute Workflow button.</li> <li>Open the Test URL from the Webhook node in a new browser tab. The browser should now show the page added defined in the Response Body field of the Respond to Webhook node.</li> </ol> <p></p>","tags":["Workflow\u00b2","Respond to Webhook"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.rssFeedRead/","title":"RSS Read","text":"<p>The RSS Read node is used to read data from RSS feeds published on the internet.</p>","tags":["Workflow\u00b2","RSS Read"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.rssFeedRead/#node-reference","title":"Node Reference","text":"<p>The RSS Read node has only one property:</p> <ul> <li>URL field: This field is used to specify the web address of the RSS publication.</li> </ul>","tags":["Workflow\u00b2","RSS Read"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.rssFeedRead/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to read an RSS Feed using the RSS Read node. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - RSS Read</p> <p>The final workflow should look like the following image.</p> <p></p>","tags":["Workflow\u00b2","RSS Read"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.rssFeedRead/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>","tags":["Workflow\u00b2","RSS Read"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.rssFeedRead/#2-rss-read-node","title":"2. RSS Read node","text":"<ol> <li>Enter the URL of the RSS feed that you want to read in the URL field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>","tags":["Workflow\u00b2","RSS Read"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.sendEmail/","title":"Send Email","text":"<p>The Send Email node is used to send an email via an SMTP email server.</p> <p>\ud83d\udd11 Credential</p> <p>You can find authentication information for this node here.</p> <p> Keep in mind</p> <ol> <li>Before sending, ensure that you have already created email addresses that are approved for sending on your SMTP service.</li> </ol> <ol> <li>The Send Email node merely sends an email via your SMTP server and plays no part in email deliverability.</li> <li>To attach a file, you will need to use an additional node such as the Read Binary File node or the HTTP Request node to pass a file as a data property.</li> </ol>","tags":["Workflow\u00b2","Send Email"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.sendEmail/#basic-operations","title":"Basic Operations","text":"<ul> <li>Send an email</li> </ul>","tags":["Workflow\u00b2","Send Email"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.sendEmail/#node-reference","title":"Node Reference","text":"<ul> <li>From Email: The email address you are sending from.</li> <li>To Email: The recipient email address.</li> <li>CC Email: A field that can be used to specify an email address for a carbon copy of the email.</li> <li>BCC Email: A field that can be used to specify an email address for a blind carbon copy of the email.</li> <li>Subject: The subject of your message.</li> <li>Text: Your message, in plaintext.</li> <li>HTML: Your message, in HTML.</li> <li>Attachments: A field that can be used to attach any attachments as data properties.</li> </ul>","tags":["Workflow\u00b2","Send Email"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.sendEmail/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to send an email using the Send Email node. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - Send Email</p> <p>The final workflow should look like the following image.</p> <p></p>","tags":["Workflow\u00b2","Send Email"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.sendEmail/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>","tags":["Workflow\u00b2","Send Email"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.sendEmail/#2-send-email-node","title":"2. Send Email node","text":"<ol> <li>First of all, you'll have to enter credentials for the Send Email node. You can find out how to do that here.</li> <li>Enter the email address you want to send from in the From Email field.</li> <li>Enter the recipient email address in the To Email field.</li> <li>Enter a subject for your message in the Subject field.</li> <li>Enter your message in the Text field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>","tags":["Workflow\u00b2","Send Email"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.set/","title":"Set","text":"<p>The Set node allows you to set workflow data. This node can set completely new data as well as overwrite data that already exists. This node is crucial in workflows which expect incoming data from previous nodes, such as when inserting values to Google Sheets or databases.</p>","tags":["Workflow\u00b2","Set"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.set/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to assign values to variables using the Set node. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - Set</p> <p>The final workflow should look like the following image.</p> <p></p>","tags":["Workflow\u00b2","Set"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.set/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>","tags":["Workflow\u00b2","Set"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.set/#2-set-node","title":"2. Set node","text":"<ol> <li>Click on the Add Value button and select 'Number' from the dropdown list.</li> <li>Enter <code>number</code>in the Name field.</li> <li>Enter the value for the above field in the Value field.</li> <li>Click on the Add Value button and select 'String' from the dropdown list.</li> <li>Enter <code>string</code>in the Name field.</li> <li>Enter the value for the above field in the Value field.</li> <li>Click on the Add Value button and select 'Boolean' from the dropdown list.</li> <li>Enter <code>boolean</code>in the Name field.</li> <li>Toggle the value for the above field in the Value field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>","tags":["Workflow\u00b2","Set"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.set/#node-reference","title":"Node Reference","text":"","tags":["Workflow\u00b2","Set"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.set/#keep-only-set","title":"Keep Only Set","text":"<p>There's an option to toggle the Keep Only Set field. Setting this to true ensures that only the values set on this node should be kept, and the values from all the previous nodes are removed.</p>","tags":["Workflow\u00b2","Set"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.set/#dot-notation","title":"Dot Notation","text":"<p>By default, the node follows the dot notation for the Name field. That means if you set the name in the Name field as <code>number.one</code> and the value in the Value field as <code>20</code>, the resulting JSON would look like the following:</p> <pre><code>{ \"number\": { \"one\": 20} }\n</code></pre> <p>You can deactivate this behaviour by clicking on the Add Option button and setting the Dot Notion field to off. Now the resulting JSON would look like the following:</p> <pre><code>{ \"number.one\": 20 }\n</code></pre>","tags":["Workflow\u00b2","Set"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.splitInBatches/","title":"Split In Batches","text":"<p>The Split In Batches node saves the original incoming data, and with each iteration, it returns a predefined amount of data. This node can be used to loop through the data.</p>","tags":["Workflow\u00b2","Split In Batches"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.splitInBatches/#node-reference","title":"Node Reference","text":"<ul> <li>Batch Size: The number of items to return with each call.</li> <li>Options<ul> <li>Reset: If set to true, the node will reset.</li> </ul> </li> </ul> <p>Warning</p> <p>Doc\u00b2 natively processes incoming items. You may not need the Split In Batches node in your workflow. To learn more about how Doc\u00b2 handles multiple items, refer to the documentation on Looping in n8n.</p>","tags":["Workflow\u00b2","Split In Batches"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.splitInBatches/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to read RSS feed from two different sources using the Split In Batches node. The Split in Batches node is needed in the workflow since the RSS Read node only processes the first item it receives. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Start - Function - Split In Batches - RSS Feed Read</p> <p>The final workflow should look like the following image.</p> <p></p>","tags":["Workflow\u00b2","Split In Batches"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.splitInBatches/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>","tags":["Workflow\u00b2","Split In Batches"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.splitInBatches/#2-function-node","title":"2. Function node","text":"<ol> <li>Paste the following JavaScript code snippet in the Function field.</li> </ol> <p><pre><code>return [\n{\njson: {\nurl: 'https://medium.com/feed/n8n-io',\n}\n},\n{\njson: {\nurl: 'https://dev.to/feed/n8n',\n}\n}\n];\n</code></pre> 2. Click on Execute Node to run the node.</p> <p></p>","tags":["Workflow\u00b2","Split In Batches"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.splitInBatches/#3-splitinbatches-node","title":"3. SplitInBatches node","text":"<ol> <li>Set the batch size to <code>1</code> in the Batch Size field.</li> <li>Click on Execute Node to run the node.</li> </ol>","tags":["Workflow\u00b2","Split In Batches"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.splitInBatches/#4-rss-read-node","title":"4. RSS Read node","text":"<ol> <li>Click on the gears icon next to the URL field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; SplitInBatches &gt; Output Data &gt; JSON &gt; url. You can also add the following expression: <code>{{$node[\"SplitInBatches\"].json[\"url\"]}}</code>.</li> <li>Click on Execute Node to run the workflow.</li> </ol>","tags":["Workflow\u00b2","Split In Batches"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.splitInBatches/#faqs","title":"FAQs","text":"","tags":["Workflow\u00b2","Split In Batches"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.splitInBatches/#how-to-identify-that-no-items-are-left-to-be-processed-by-the-node","title":"How to identify that no items are left to be processed by the node?","text":"<p>To identify if items are left to be processed by node use the following expression: <code>{{$node[\"SplitInBatches\"].context[\"noItemsLeft\"]}}</code>. This expression returns a boolean value. If there is data yet to be processed, the expression will return <code>false</code>, otherwise <code>true</code>.</p> <p>Refer to this workflow to try it out.</p>","tags":["Workflow\u00b2","Split In Batches"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.splitInBatches/#how-to-get-the-current-running-index-of-the-node","title":"How to get the current running index of the node?","text":"<p>To get the current running index of the node, use the following expression: <code>{{$node[\"SplitInBatches\"].context[\"currentRunIndex\"];}}</code>.</p> <p>Refer to this workflow to try it out.</p>","tags":["Workflow\u00b2","Split In Batches"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.spreadsheetFile/","title":"Spreadsheet File","text":"<p>The Spreadsheet File node is used to access data from spreadsheet files.</p> <p> Keep in mind</p> <p>You will need to use an additional node such as the Read Binary File node or the HTTP Request node to pass the image file as a data property to the Spreadsheet File node.</p>","tags":["Workflow\u00b2","Spreadsheet File"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.spreadsheetFile/#basic-operations","title":"Basic Operations","text":"<ul> <li>Read from file</li> <li>Write to file</li> </ul>","tags":["Workflow\u00b2","Spreadsheet File"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.spreadsheetFile/#node-reference","title":"Node Reference","text":"<p>When writing to a spreadsheet file, the File Format field can be used to specify the format of the file to save the data as.</p> <ul> <li> <p>File Format</p> <ul> <li>CSV (Comma-separated values)</li> <li>HTML (HTML Table)</li> <li>ODS (OpenDocument Spreadsheet)</li> <li>RTF (Rich Text Format)</li> <li>XLS (Excel)</li> <li>XLSX (Excel)</li> </ul> </li> <li> <p>Binary Property field: Name of the binary property in which to save the binary data of the spreadsheet file.</p> </li> <li> <p>Options</p> <ul> <li>Sheet Name field: This field specifies the name of the sheet from which the data should be read or written to.</li> <li>Read As String field: This toggle enables you to parse all input data as strings.</li> <li>RAW Data field: This toggle enables you to skip the parsing of data.</li> <li>File Name field: This field can be used to specify a custom file name when writing a spreadsheet file to disk.</li> </ul> </li> </ul>","tags":["Workflow\u00b2","Spreadsheet File"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.spreadsheetFile/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to read a spreadsheet file using the Spreadsheet File node. You can also find the workflow on the website. This example usage workflow would use the following three nodes. - Start - Read Binary File - Spreadsheet File</p> <p>The final workflow should look like the following image.</p> <p></p>","tags":["Workflow\u00b2","Spreadsheet File"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.spreadsheetFile/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>","tags":["Workflow\u00b2","Spreadsheet File"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.spreadsheetFile/#2-read-binary-file","title":"2. Read Binary File","text":"<ol> <li>Enter the path to the spreadsheet file you want to read in the File Path field.</li> </ol>","tags":["Workflow\u00b2","Spreadsheet File"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.spreadsheetFile/#3-spreadsheet-file-node","title":"3. Spreadsheet File node","text":"<ol> <li>Enter the Property Name you used in the previous node in the Binary Property field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>","tags":["Workflow\u00b2","Spreadsheet File"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.sseTrigger/","title":"SSE Trigger","text":"<p>Server-Sent Events (SSE) is a server push technology enabling a client to receive automatic updates from a server via HTTP connection. The SSE Trigger node is used to receive server-sent events and is a trigger node.</p>","tags":["Workflow\u00b2","SSE Trigger"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.sseTrigger/#node-reference","title":"Node Reference","text":"<p>URL: This field specifies the URL from which to receive the server-sent events.</p>","tags":["Workflow\u00b2","SSE Trigger"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.sseTrigger/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to receive server-sent events using the SSE Trigger node. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following node. - SSE Trigger</p> <p>The final workflow should look like the following image.</p> <p></p>","tags":["Workflow\u00b2","SSE Trigger"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.sseTrigger/#1-sse-trigger-node","title":"1. SSE Trigger node","text":"<ol> <li>Enter the URL in the URL field.</li> <li>Click on Execute Node to run the node.</li> </ol>","tags":["Workflow\u00b2","SSE Trigger"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.ssh/","title":"SSH","text":"<p>The SSH node is useful for executing commands via the Secure Shell Protocol.</p> <p>\ud83d\udd11 Credential</p> <p>You can find authentication information for this node here.</p>","tags":["Workflow\u00b2","SSH"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.ssh/#basic-operations","title":"Basic Operations","text":"<ul> <li>Execute a command</li> <li>Download a file</li> <li>Upload a file</li> </ul> <p>Note: To attach a file for upload, you will need to use an additional node such as the Read Binary File node or the HTTP Request node to pass the file as a data property.</p>","tags":["Workflow\u00b2","SSH"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.ssh/#node-reference","title":"Node Reference","text":"<ul> <li>Authentication: A dropdown list to choose between Password or Private Key authentication.</li> <li>Resource: A dropdown list used to specify if you are executing a command or processing a file.</li> <li>Operation: A dropdown list to select the action to be performed. When selecting Command as the Resource, only Execute is available. For a File Resource you can select either Upload or Download.</li> <li>Command: Only visible for Command resources. The command to execute on the remote machine.</li> <li>Working Directory: Only visible for Command resources. The directory where the command should be executed.</li> <li>Path: Only visible for Download operation on file resources. The path where the desired file is found.</li> <li>Binary Property: Only visible for file resources. The name of the binary property which contains the data for the file to be uploaded.</li> <li>Target Directory: Only visible for Upload operations on file resources. The directory to upload the file to. The name of the file does not need to be specified, it's taken from the binary data file name. To override this behavior, set the parameter File Name under options.</li> </ul>","tags":["Workflow\u00b2","SSH"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.ssh/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to remotely connect to your computer via SSH. This example usage workflow would use the following nodes. - Start - SSH</p> <p>The final workflow should look like the following image.</p> <p></p>","tags":["Workflow\u00b2","SSH"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.ssh/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>","tags":["Workflow\u00b2","SSH"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.ssh/#2-ssh-node","title":"2. SSH node","text":"<ol> <li>From the SSH Credentials dropdown, select Create New or an existing credential.</li> <li>Select Password from the Authentication dropdown list.</li> <li>Select Command from the Resource dropdown list.</li> <li>The Execute option is automatically selected as the Operation.</li> <li>In the Command field enter the command to execute. Here we used <code>ls</code> just to see the local directory contents.</li> <li>In the Working Directory field you can enter where the command should be executed. Here we ran it in the root directory.</li> <li>Click on Execute Node to run the node.</li> </ol>","tags":["Workflow\u00b2","SSH"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.start/","title":"Start","text":"<p>The start node is the first node in a workflow. It exists by default when you create a new workflow and looks like the following image.</p> <p></p> <p>In case there is no Trigger node in the workflow, the workflow always starts from the Start node. The Start node cannot be deleted. Even if a workflow contains a Trigger node, there would still be a Start node.</p>","tags":["Workflow\u00b2","Start"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.start/#faqs","title":"FAQs","text":"","tags":["Workflow\u00b2","Start"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.start/#when-is-it-necessary-to-use-the-start-node","title":"When is it necessary to use the Start node?","text":"<p>When using the Execute Workflow node in workflow A to execute workflow B, the Start node will act as the trigger node in workflow B. The second node in workflow B needs to be connected to the Start node for the workflow to execute correctly.</p>","tags":["Workflow\u00b2","Start"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.stopAndError/","title":"Stop And Error","text":"<p>The Stop And Error node is used to throw an exception in workflows, enabling an error message or object to be displayed.</p>","tags":["Workflow\u00b2","Stop And Error"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.stopAndError/#basic-operations","title":"Basic operations","text":"<ul> <li>Error Message</li> <li>Error Object</li> </ul>","tags":["Workflow\u00b2","Stop And Error"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.switch/","title":"Switch","text":"<p>The Switch node is used to route a workflow conditionally based on comparison operations. It is similar to the IF node, but supports up to four conditional routes.</p>","tags":["Workflow\u00b2","Switch"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.switch/#node-reference","title":"Node Reference","text":"<p>Mode: This dropdown is used to select whether the conditions will be defined as rules in the node, or as an expression, programmatically.</p> <p>You can add comparison conditions using the Add Routing Rule dropdown. Conditions can be created based on the data type. The available comparison operations vary for each data type.</p> <ul> <li>Boolean<ul> <li>Equal</li> <li>Not Equal</li> </ul> </li> <li>Number<ul> <li>Smaller</li> <li>Smaller Equal</li> <li>Equal</li> <li>Not Equal</li> <li>Larger</li> <li>Larger Equal</li> </ul> </li> <li>String<ul> <li>Contains</li> <li>Equal</li> <li>Not Contains</li> <li>Not Equal</li> <li>Regex</li> </ul> </li> </ul> <p>You can route a workflow when none of the specified conditions are met using Fallback Output dropdown list.</p>","tags":["Workflow\u00b2","Switch"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.switch/#example-usage","title":"Example Usage","text":"<p>This workflow executes four different Set nodes based on the output given by a Switch node. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Start - Function - Switch - Set - NoOp</p> <p>The final workflow should look like the following image.</p> <p></p>","tags":["Workflow\u00b2","Switch"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.switch/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>","tags":["Workflow\u00b2","Switch"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.switch/#2-function-node","title":"2. Function node","text":"<ol> <li>Enter the following code in the Function field. <pre><code>return [\n  {\n    json: {\n      id: 0,\n    }\n  },\n  {\n    json: {\n      id: 1,\n    }\n  },\n  {\n    json: {\n      id: 2,\n    }\n  }\n];\n</code></pre></li> <li>Click on Execute Node to run the workflow.</li> </ol>","tags":["Workflow\u00b2","Switch"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.switch/#3-switch-node","title":"3. Switch node","text":"<ol> <li>Click on the gears icon next to the Value 1 field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Function &gt; Output Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$node[\"Function\"].json[\"id\"]}}</code>.</li> <li>Click on the Add Routing Rule button.</li> <li>From the Operation dropdown list, select 'Equal'.</li> <li>Enter '0' in the Value 2 and the Output fields.</li> <li>Click on the Add Routing Rule button.</li> <li>From the Operation dropdown list, select 'Equal'.</li> <li>Enter '1' in the Value 2 and the Output fields.</li> <li>Click on the Add Routing Rule button.</li> <li>From the Operation dropdown list, select 'Equal'.</li> <li>Enter '2' in the Value 2 and the Output fields.</li> <li>Select '3' from the Fallback Output dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol>","tags":["Workflow\u00b2","Switch"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.switch/#4-set-node-for-0-route","title":"4. Set node (for '0' route)","text":"<ol> <li>Create a Set node connected to the '0' output of the Switch node.</li> <li>Click on the Add Value button and select 'String' from the dropdown list.</li> <li>Enter <code>name</code> in the Name field.</li> <li>Enter <code>n8n</code> in the Value field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>Note: Notice that only the id with the value 0 made its way to this Set node.</p> <p></p>","tags":["Workflow\u00b2","Switch"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.switch/#5-set1-node-for-1-route","title":"5. Set1 node (for '1' route)","text":"<ol> <li>Create a Set node connected to the '1' output of the Switch node.</li> <li>Click on the Add Value button and select 'String' from the dropdown list.</li> <li>Enter <code>name</code> in the Name field.</li> <li>Enter <code>nodemation</code> in the Value field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>Note: Notice that only the id with the value 1 made its way to this Set node.</p> <p></p>","tags":["Workflow\u00b2","Switch"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.switch/#6-set2-node-for-2-route","title":"6. Set2 node (for '2' route)","text":"<ol> <li>Create a Set node connected to the '2' output of the Switch node.</li> <li>Click on the Add Value button and select 'String' from the dropdown list.</li> <li>Enter <code>name</code> in the Name field.</li> <li>Enter <code>nathan</code> in the Value field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>Note: Notice that only the id with the value 2 made its way to this Set node.</p> <p></p>","tags":["Workflow\u00b2","Switch"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.switch/#7-noop-node-for-3-route","title":"7. NoOp node (for '3' route)","text":"<ol> <li>Create a NoOp node connected to the '3' output of the Switch node.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>Note: Notice that none of the ids made their way to this node since the values of the all the ids were either 0, 1, or 2.</p> <p></p>","tags":["Workflow\u00b2","Switch"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.wait/","title":"Wait","text":"<p>The Wait node is used to create a pause of any desired duration in your workflows. When the workflow is paused the execution data is offloaded to the database, and when the resume condition is met it is reloaded and the execution continues.</p> <p>The Wait node can be set to resume on the following conditions:</p> <ul> <li>After time interval</li> <li>At specified time</li> <li>On webhook call</li> </ul> <p> Keep in mind</p> <p>For the time-based resume operations, note that:</p> <ul> <li>For wait times less than 65 seconds, execution data is not offloaded to the database to resume later but rather the process continues to run and execution resumes after the specified interval passes.</li> <li>The Doc\u00b2 server time is always used regardless of the timezone setting. Workflow timezone settings, and any changes made to them, do not affect the Wait node interval or specified time.</li> </ul>","tags":["Workflow\u00b2","Wait"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.wait/#time-interval","title":"Time interval","text":"<p>Use the After time interval resume operation to set a desired interval after which the execution will resume.</p> <p>Set the desired Amount and the corresponding Unit for the Wait operation. Decimals can be used for fractional units, for example <code>1.5</code> minutes instead of <code>90</code> seconds.</p> <p>To automatically resume workflow execution after 15 minutes, the Wait node configuration would look like this:</p> <p></p>","tags":["Workflow\u00b2","Wait"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.wait/#specified-time","title":"Specified time","text":"<p>Use the At specified time resume operation to set a particular date and time in the future when the workflow execution should resume.</p> <p>For example, if you want the workflow execution to continue at midnight of New Year's Day 2022 the Wait node configuration would look like this:</p> <p></p>","tags":["Workflow\u00b2","Wait"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.wait/#webhook-call","title":"Webhook call","text":"<p>The resume On webhook call option enables your workflows to resume when an HTTP call is received.</p> <p>The webhook URL that will resume the execution when called is only generated at runtime. The Wait node provides the <code>$resumeWebhookUrl</code> variable so that you can reference and send (the yet to be generated URL) wherever needed, for example to a third-party service or in an email (see example below).</p> <p>When the workflow executes, the resume URL is generated and the webhook(s) in your workflow using the <code>$resumeWebhookUrl</code> reference become functional. This generated URL is unique to each execution, meaning that your workflow can contain multiple Wait nodes and as the webhook URL is called it will resume each Wait node sequentially.</p>","tags":["Workflow\u00b2","Wait"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.wait/#reference","title":"Reference","text":"<p>See the Webhook node documentation to learn more about the Authentication, Method, and Response parameters when configuring the Wait node to resume on a webhook call.</p> <p>In addition to the parameters shared with the Webhook mode, the Wait node has the following additional configuration options:</p> <ul> <li>Limit wait time: Set the maximum amount of time to wait before the execution is resumed by default (i.e. even with no webhook call received).</li> <li> <p>Add Option &gt; Webhook Suffix: Provide a suffix that you want to appended to the resume URL. This is useful for creating unique webhook URLs for each Wait node when a workflow contains multiple Wait nodes.</p> <p>Note: The generated <code>$resumeWebhookUrl</code> will not automatically include this suffix, you must manually append it to the webhook URL before exposing it.</p> </li> </ul>","tags":["Workflow\u00b2","Wait"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.wait/#limitations","title":"Limitations","text":"<p>There are a few functional limitations to keep in mind when working with the On Webhook Call operations of the Wait node:</p> <ul> <li>Partial executions of your workflow will change the <code>$resumeWebhookUrl</code>, so be sure that the node being used to send this URL to your desired third-party runs in the same execution as the Wait node.</li> <li>When testing your workflow via the Editor UI, you cannot see the rest of the execution following the Wait node. To inspect the execution results ensure you have enabled Save Manual Executions in you workflow settings to be able to review the execution results there.</li> </ul>","tags":["Workflow\u00b2","Wait"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.wait/#example-usage","title":"Example usage","text":"<p>This workflow allows you to complete a user sign-up flow by adding their details contact details in an Airtable, sending a confirmation email, and updating the Airtable record after they have confirmed their email address.</p> <p>For our example here, we assume there is an existing workflow/webpage where new users sign-up and this workflow begins when they hit \"Submit\" there.</p> <p>This example workflow uses the following nodes. - Wait - Webhook - Set - Send Email - Airtable</p> <p>The final workflow should look like the following image.</p> <p></p>","tags":["Workflow\u00b2","Wait"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.wait/#1-webhook-node","title":"1. Webhook node","text":"<p>This node is triggered when a new user submits their details in your contact form. It is configured as displayed below:</p> <p></p>","tags":["Workflow\u00b2","Wait"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.wait/#2-set-node","title":"2. Set node","text":"<p>This node is used to set the values submitted by the user (first name, last name, and email address) as values corresponding to what you want to enter in the Airtable.</p> <p></p> <p>Note that expressions are used based on the input data received from the previous Webhook node:</p> <p></p>","tags":["Workflow\u00b2","Wait"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.wait/#3-airtable-node","title":"3. Airtable node","text":"<p>In this node we add the new users contact details to the desired table, Newsletter in our example:</p> <p></p>","tags":["Workflow\u00b2","Wait"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.wait/#4-send-email-node","title":"4. Send Email node","text":"<p>This node uses your desired email address (via SMTP) to send a confirmation email to the user:</p> <p></p> <p>This is where the <code>$resumeWebhookUrl</code> is passed, meaning the workflow will wait until the user clicks the confirmation link in this email before resuming execution:</p> <p></p>","tags":["Workflow\u00b2","Wait"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.wait/#5-wait-node","title":"5. Wait node","text":"<p>The Wait node will resume execution once the new user clicks the confirmation link in their email (containing the <code>$resumeWebhookUrl</code>):</p> <p></p>","tags":["Workflow\u00b2","Wait"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.wait/#6-set-node","title":"6. Set node","text":"<p>In this node set the <code>id</code> of the user and new Verified boolean value to true:</p> <p></p>","tags":["Workflow\u00b2","Wait"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.wait/#7-airtable-node","title":"7. Airtable node","text":"<p>Finally you update the table to reflect this newly created Verified field:</p> <p></p>","tags":["Workflow\u00b2","Wait"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.webhook/","title":"Webhook","text":"<p>The Webhook node is one of the most powerful nodes in Workflow\u00b2. It allows you to create webhooks which can be used to receive data from apps and services when an event occurs. It is a Trigger node, which means that it serves as the starting point for an Doc\u00b2 workflow. This allows several different services to connect to Doc\u00b2 and run a workflow when data is received.</p> <p> Keep in mind</p> <ol> <li>When using the Webhook node on the localhost, ensure that Doc\u00b2 is running with the tunnel mode: npm with tunnel or Docker with tunnel.</li> </ol> <ol> <li>When working with a Production webhook, please ensure that you have saved and activated the workflow. Don\u2019t forget that the data flowing through the webhook won\u2019t be visible in the Editor UI with the Production webhook.</li> </ol> <p>Webhook nodes can be used as triggers for workflows when we want to receive data and run a workflow based on the data. The Webhook node also supports returning the data generated at the end of a workflow. This makes it very useful to build a workflow to process data and return the results, like an API endpoint.</p> <p>While building or testing a workflow, we recommend that you use a test webhook URL. Using a test webhook ensures that you can view the incoming data in the Editor UI, which is useful for debugging. Make sure that you click on the Execute Node button to register the webhook before sending the data to the test webhook. The test webhook stays active for 120 seconds.</p> <p>\ud83c\udfa5 The following playlist will help you learn how to use the Webhook node in Workflow\u00b2.</p>","tags":["Workflow\u00b2","Webhook"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.webhook/#node-reference","title":"Node Reference","text":"<p>First of all, in the parameters section, we have the Webhook URLs. Clicking on that will reveal the URLs for the webhook. Here you have two options, let\u2019s understand the difference between them.</p> <ol> <li> <p>Webhook URLs</p> <ul> <li> <p>Production: A Production webhook is only registered when a workflow has been activated (via the switch on the top right of the page). You will never see its data in the Editor UI. To save the executions, you can either set that as a global default or you can specify that on a per-workflow basis in the workflow settings. You will then see the data from the workflow under \u2018Past Executions\u2019.</p> </li> <li> <p>Test: A Test webhook is only registered in the time between executing a workflow via the UI and until the first call gets made (when it displays \u201cwaiting for Webhook call\u201d). After the Test webhook gets called for the first time, it displays the data in the Editor UI, and then gets deactivated.</p> </li> </ul> </li> <li> <p>Authentication: The Webhook node supports two methods of authenticating a request that it receives.</p> <ul> <li>Basic Auth \u2014 A method of authentication where the specified username and password must be passed along with the request.</li> <li>Header Auth \u2014 A method of authentication where the specified header parameter must be passed along with the request. This method can be used when you want to authenticate using an API key or an access token, for example.     !!! tip  Keep in mind         The Credential Data required for Header Auth credentials will vary on the type used. For example, if you need to provide an <code>Authorization: Bearer &lt;token&gt;</code> header, the Credential Data <code>Name</code> would be <code>Authorization</code> and the <code>Value</code> would be <code>Bearer &lt;token&gt;</code>.</li> </ul> </li> <li> <p>HTTP Method: The Webhook node supports receiving two types of HTTP Requests.</p> <ul> <li>GET Request \u2014 GET requests are typically used to request data from a resource. This type of request is typically used to retrieve data from a service.</li> <li>POST Request \u2014 POST requests are typically used to send data to a resource for a create/update operation. This type of request is typically used to send data to a service.</li> </ul> </li> <li> <p>Path: By default, this field contains a randomly generated webhook URL path, to avoid conflicts with other webhook nodes. You can also manually specify a URL path if necessary. A good example would be if you were using Doc\u00b2 to prototype an API; and wanted consistent endpoint URLs.</p> </li> <li> <p>Response Code: Allows you to customize the HTTP response code that the Webhook node will return upon successful execution.</p> </li> <li> <p>Response When: This dropdown list allows you to select between two response modes.</p> <ul> <li>Webhook received: When this option is selected, the Webhook node will return the specified response code along with the message \u201cWorkflow got started.\u201d.</li> <li>Last node finishes: When this option is selected, the Webhook node will return the specified response code along with the data output from the last node executed in the workflow.</li> </ul> </li> </ol> <p>Optional Parameters: The Webhook node also supports several optional methods that can be used during configuration.</p> <ul> <li>Response Headers \u2014 This option allows you to specify additional headers in the Webhook response.</li> <li>Raw Body \u2014 This option is used to specify when the Webhook node will receive data in a RAW format, such as JSON or XML.</li> <li>Binary Data \u2014 This option is available only when the Webhook node is set to receive POST requests. Setting this to \u2018true\u2019 lets the Webhook node know that it will receive binary data (such as an image/audio). You can use this option when you expect to receive a file via your Webhook node.</li> </ul> <p>Conditional Parameters: The Webhook node also supports several other parameters, that are used only in certain configurations.</p> <ul> <li>Response Data: This option is available only when set to respond when \u2018Last node finishes\u2019. It allows you to choose which data to return:<ul> <li>All Entries \u2014 Choose this option to return all the data generated by the last node in the workflow, as an array.</li> <li>First Entry JSON \u2014 Choose this option to return the first data entry of the last node in the workflow, as a JSON object.</li> <li>First Entry Binary \u2014 Choose this option to return the binary data of the first entry of the last node in the workflow, as a binary file.</li> </ul> </li> </ul>","tags":["Workflow\u00b2","Webhook"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.webhook/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to receive the weather information of a city using the Webhook and the OpenWeatherMap nodes. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Webhook - OpenWeatherMap - Set</p> <p>The final workflow should look like the following image.</p> <p></p>","tags":["Workflow\u00b2","Webhook"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.webhook/#1-webhook-node","title":"1. Webhook node","text":"<p>This node will trigger the workflow. We will make a GET request to the Test URL and pass on a query parameter <code>city</code>. We will use the value of this query parameter in the next node in the workflow.</p> <ol> <li>Click on Webhook URLs and select the 'Test' tab.</li> <li>Copy the displayed URL. We will make a GET request to this URL later on.</li> <li>Select 'Last Node' from the Response Mode. This will return the data from the last executed node.</li> <li>Select 'All Entries' from the Response Data. This will return all the entries of the last executed node.</li> <li>Save the workflow to register the webhook.</li> <li>Click on Execute Node to run the node.</li> <li>In a new browser tab, paste the URL you copied in the previous step and append it with <code>?city=Berlin</code>. Your URL should look similar to the following URL:<code>https://your-n8n.url/webhook/path?city=Berlin</code>. We are passing a query parameter <code>city</code> and assigning it the value <code>Berlin</code>.</li> <li>Press Enter (or Return) to make a request to the Test Webhook URL.</li> </ol> <p>In the screenshot below, you will notice that the node triggers the workflow and receives a query parameter. We will use the value of the query parameter in the next node in the workflow.</p> <p></p>","tags":["Workflow\u00b2","Webhook"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.webhook/#2-openweathermap-node-current-weather","title":"2. OpenWeatherMap node (Current Weather)","text":"<p>This node will return data about the current weather for the city that we received in the previous node.</p> <ol> <li>First of all, you'll have to enter credentials for the OpenWeatherMap node. You can find out how to do that here.</li> <li> <p>Click on the gears icon next to the City field and click on Add Expression.</p> </li> <li> <p>Select the following in the Variable Selector section: Nodes &gt; Webhook &gt; Output Data &gt; JSON &gt; query &gt; city. You can also add the following expression: <code>{{$node[\"Webhook\"].json[\"query\"][\"city\"]}}</code>.</p> </li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns data about the current weather in Berlin.</p> <p></p>","tags":["Workflow\u00b2","Webhook"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.webhook/#3-set-node","title":"3. Set node","text":"<p>We will use the Set node to ensure that only the data that we set in this node gets returned to the workflow. We will set the value of <code>temp</code> and <code>description</code> in this node.</p> <ol> <li>Click on Add Value and select 'String' from the dropdown list.</li> <li>Enter <code>temp</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; OpenWeatherMap &gt; Output Data &gt; JSON &gt; main &gt; temp. You can also add the following expression: <code>{{$node[\"OpenWeatherMap\"].json[\"main\"][\"temp\"]}}</code>.</li> <li>Click on Add Value and select 'String' from the dropdown list.</li> <li>Enter <code>description</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; OpenWeatherMap &gt; Output Data &gt; JSON &gt; weather &gt; [Item: 0] &gt; description. You can also add the following expression: <code>{{$node[\"OpenWeatherMap\"].json[\"weather\"][0][\"description\"]}}</code>.</li> <li>Toggle Keep Only Set to <code>true</code>. We set this option to true to ensure that only the data that we have set in this node get passed on to the next nodes in the workflow.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node sets the values of <code>temp</code> and <code>description</code>.</p> <p></p> <p>Save the workflow and execute it again by clicking on the Execute Workflow button in the Editor UI. This time you will receive the temperature and description as the response in the browser.</p> <p> Activate workflow for production</p> <p>This example workflow uses the Webhook node, which is a Trigger node. You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered every time a GET request is sent to the Production webhook URL.</p>","tags":["Workflow\u00b2","Webhook"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.webhook/#faqs","title":"FAQs","text":"","tags":["Workflow\u00b2","Webhook"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.webhook/#where-to-find-the-webhook-urls","title":"Where to find the Webhook URLs?","text":"<p>The Webhook node has two URLs - Test URL and Production URL. To get these URLs, follow the steps mentioned below. 1. Click on Webhook URLs. By default, the node displays the Production URL. 2. If you want the Test URL, click on the Test tab. 3. To copy the URL, click on the displayed URL.</p> <p>Here is a GIF demonstrating how to retrieve the test and production webhook URLs in Workflow\u00b2.</p> <p></p>","tags":["Workflow\u00b2","Webhook"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.webhook/#how-to-use-the-http-request-node-to-trigger-the-webhook-node","title":"How to use the HTTP Request node to trigger the Webhook node?","text":"<p>The HTTP Request node is used to make HTTP requests to the URL you specify. To use the HTTP Request node to trigger the Webhook node, follow the steps mentioned below. 1. Create a new workflow. 2. Add the HTTP Request node to the workflow. 3. Select the appropriate method from the Request Method dropdown list. For example, if you have selected GET as the HTTP method in your Webhook node, select GET as the request method in the HTTP Request node. 4. Copy the URL from the Webhook node, and paste it in the URL field in the HTTP Request node. 5. Execute the workflow with the Webhook node if you're using the Test URL. 6. Execute the HTTP Request node.</p> <p>Here is a video demonstrating how to send a request to a Webhook based workflow using the HTTP Request node:</p>","tags":["Workflow\u00b2","Webhook"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.webhook/#how-to-use-route-parameters","title":"How to use route parameters?","text":"<p>You can add route parameters to the webhook URL path. This is useful when you are creating an API. The Path field can take the following values:</p> <ul> <li><code>/:variable</code></li> <li><code>/path/:variable</code></li> <li><code>/:variable/path</code></li> <li><code>/:variable1/path/:variable2</code></li> <li><code>/:variable1/:variable2</code></li> </ul>","tags":["Workflow\u00b2","Webhook"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.webhook/#how-to-use-curl-to-trigger-the-webhook-node","title":"How to use cURL to trigger the Webhook node?","text":"<p>You can use cURL to make HTTP requests that will trigger the Webhook node. To use cURL, make sure that you have installed it on your machine. You can follow this guide to install cURL on your machine. Based on your use-case, you can make an HTTP request with or without any parameters. You can also send files with the HTTP request using cURL.</p> <p>Note: In the following commands, replace <code>https://your-n8n.url/webhook/path</code> with your webhook URL.</p> <pre><code>curl --request GET https://your-n8n.url/webhook/path\n</code></pre> <p>To make a POST request, use the following command.</p> <pre><code>curl --request POST https://your-n8n.url/webhook/path\n</code></pre> <p>To make an HTTP request with a body parameter, use the following command.</p> <pre><code>curl --request GET https://your-n8n.url/webhook/path --data 'key=value'\n</code></pre> <p>To make an HTTP request with a header parameter, use the following command.</p> <pre><code>curl --request GET https://your-n8n.url/webhook/path --header 'key=value'\n</code></pre> <p>To send a file with the HTTP request, use the following command.</p> <p><pre><code>curl --request GET https://your-n8n.url/webhook/path --from 'key=@/path/to/file'\n</code></pre> Replace <code>/path/to/file</code> with the path of the file you want to send.</p>","tags":["Workflow\u00b2","Webhook"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.webhook/#make-an-http-request-without-any-parameters","title":"Make an HTTP request without any parameters","text":"To make a GET request without any parameters, use the following command in your terminal.","tags":["Workflow\u00b2","Webhook"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.webhook/#make-an-http-request-with-body-parameter","title":"Make an HTTP request with body parameter","text":"","tags":["Workflow\u00b2","Webhook"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.webhook/#make-an-http-request-with-header-parameter","title":"Make an HTTP request with header parameter","text":"","tags":["Workflow\u00b2","Webhook"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.webhook/#make-an-http-request-to-send-a-file","title":"Make an HTTP request to send a file","text":"","tags":["Workflow\u00b2","Webhook"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.webhook/#how-to-send-a-response-of-type-string","title":"How to send a response of type <code>string</code>?","text":"<p>To send a response of type string, follow the steps mentioned below. 1. Select 'Last Node' from the Response Mode dropdown list. 2. Select 'First Entry JSON' from the Response Data dropdown list. 3. Click on 'Add Option' and select 'Property Name' from the dropdown list. 4. Enter the name of the property that contains the response. 5. Connect a Set node to the Webhook node. 6. In the Set node, click on 'Add Value' and select 'String'. 7. Enter the name of the property in the Name field. The name should match the property name from step 4. 8. Enter the string value in the Value field. 9. Toggle Keep Only Set to <code>true</code>.</p> <p>When the Webhook gets called, it will send the string response that was set in the Set node.</p>","tags":["Workflow\u00b2","Webhook"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.workflowTrigger%202/","title":"Workflow Trigger","text":"<p>The Workflow Trigger node gets triggered when a workflow is updated or activated.</p> <p> Keep in mind</p> <p>If you want to use the Workflow Trigger node for a workflow, add the node to the workflow. You don't have to create a separate workflow.</p> <p>The Workflow Trigger node gets triggered for the workflow that it gets added to. The Workflow Trigger node can be used to trigger a workflow to notify the state of the workflow.</p>","tags":["Workflow\u00b2","Workflow Trigger"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.workflowTrigger%202/#node-reference","title":"Node Reference","text":"<ul> <li>Events<ul> <li>Active Workflow Updated: Triggers when this workflow is updated</li> <li>Workflow Activated: Triggers when this workflow is activated</li> </ul> </li> </ul>","tags":["Workflow\u00b2","Workflow Trigger"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.workflowTrigger%202/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to receive a message on Mattermost when a workflow is updated. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Workflow Trigger - Mattermost</p> <p>The final workflow should look like the following image.</p> <p></p>","tags":["Workflow\u00b2","Workflow Trigger"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.workflowTrigger%202/#1-workflow-trigger-node","title":"1. Workflow Trigger node","text":"<p>Open the workflow where you want to add the Workflow Trigger workflow. Add the Workflow Trigger node to the workflow.</p> <p>The Workflow Trigger node will trigger the workflow when the workflow gets updated.</p> <ol> <li>Select 'Active Workflow Updated' from the Events dropdown list.</li> </ol> <p>In the screenshot below, you will notice that the node triggers the workflow when the workflow gets updated.</p> <p></p>","tags":["Workflow\u00b2","Workflow Trigger"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.workflowTrigger%202/#2-mattermost-node-post-message","title":"2. Mattermost node (post: message)","text":"<p>This node will send a message in the <code>workflow</code> channel on Mattermost.</p> <ol> <li>First of all, you'll have to enter credentials for the Mattermost node. You can find out how to enter credentials for this node here.</li> <li>Select a channel from the Channel ID dropdown list.</li> <li> <p>Click on the gears icon next to the Message field click on Add Expression.</p> </li> <li> <p>Enter the following message in the Expression field: <code>The workflow {{$workflow.name}}, was updated.</code>. <code>$workflow.name</code> returns the name of the workflow.</p> </li> <li>Click on Execute Node to run the workflow.</li> </ol> <p>In the screenshot below, you will notice that the node sends a message to Mattermost.</p> <p></p>","tags":["Workflow\u00b2","Workflow Trigger"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.workflowTrigger/","title":"DOC\u00b2 Trigger","text":"<p>The DOC\u00b2 Trigger node gets triggered when the DOC\u00b2 instance is started or restarted. The DOC\u00b2 Trigger node can be used to notify when the DOC\u00b2 instance starts.</p>"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.workflowTrigger/#node-reference","title":"Node Reference","text":"<ul> <li>Events<ul> <li>Instance started: Triggers when the DOC\u00b2 instance is started or restarted</li> </ul> </li> </ul>"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.workflowTrigger/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to receive a message on Mattermost when your DOC\u00b2 instance starts. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - n8n Trigger - Mattermost</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.workflowTrigger/#1-doc2-trigger-node","title":"1. DOC\u00b2 Trigger node","text":"<p>The DOC\u00b2 Trigger node will trigger the workflow whenever DOC\u00b2 starts.</p> <ol> <li>Select 'Instance started' from the Events dropdown list.</li> </ol> <p>In the screenshot below, you will notice that the node triggers the workflow when the DOC\u00b2 instance starts.</p> <p></p>"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.workflowTrigger/#2-mattermost-node-post-message","title":"2. Mattermost node (post: message)","text":"<p>This node will send a message in the <code>workflow</code> channel on Mattermost.</p> <ol> <li>First of all, you'll have to enter credentials for the Mattermost node. You can find out how to enter credentials for this node here.</li> <li>Select a channel from the Channel ID dropdown list.</li> <li> <p>Click on the gears icon next to the Message field click on Add Expression.</p> </li> <li> <p>Enter the following message in the Expression field: <code>Your DOC\u00b2 instance started at {{$json[\"timestamp\"]}}.</code>.</p> </li> <li>Click on Execute Node to run the workflow.</li> </ol> <p>In the screenshot below, you will notice that the node sends a message to Mattermost.</p> <p></p> <p> Activate workflow for production</p> <p>This example workflow uses the DOC\u00b2 Trigger node, which is a Trigger node. You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow.</p>"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.writeBinaryFile/","title":"Write Binary File","text":"<p>The Write Binary File node is used to write a file to the host machine that runs Workflow\u00b2.</p> <p> Keep in mind</p> <ol> <li>If you are running Doc\u00b2 in Docker, your command will run on the Doc\u00b2 container and not the Docker host.</li> </ol> <ol> <li>This node will look for files relative to the Doc\u00b2 install path. It is recommended to use absolute file paths to prevent any errors.</li> </ol>","tags":["Workflow\u00b2","Write Binary File"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.writeBinaryFile/#node-reference","title":"Node Reference","text":"<ol> <li>File Name field: This field specifies the path to which the file should be written, along with the file name.</li> <li>Property Name field: Name of the binary property to which to write the data of the read file.</li> </ol>","tags":["Workflow\u00b2","Write Binary File"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.writeBinaryFile/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to write a file to the host machine using the Write Binary File node. You can also find the workflow on the website. This example usage workflow would use the following three nodes. - Start - HTTP Request - Write Binary File</p> <p>The final workflow should look like the following image.</p> <p></p>","tags":["Workflow\u00b2","Write Binary File"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.writeBinaryFile/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>","tags":["Workflow\u00b2","Write Binary File"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.writeBinaryFile/#2-http-request-node","title":"2. HTTP Request node","text":"<ol> <li>Enter <code>https://docs.n8n.io/assetsassets/images/insight2/n8n-logo.png</code> in the URL field.</li> <li>Select the 'File' option from the Response Format dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol>","tags":["Workflow\u00b2","Write Binary File"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.writeBinaryFile/#3-write-binary-file-node","title":"3. Write Binary File node","text":"<ol> <li>Enter the path to which the file should be written along with the file name in the File Name field.</li> <li>Click on Execute Node to run the node.</li> </ol>","tags":["Workflow\u00b2","Write Binary File"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.xml/","title":"XML","text":"<p>The XML node is useful to convert data from and to XML.</p>","tags":["Workflow\u00b2","XML"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.xml/#node-reference","title":"Node Reference","text":"<ul> <li>Mode: The format the data should be converted from and to.<ul> <li>JSON to XML: Converts data from JSON to XML</li> <li>XML to JSON: Converts data from XML to JSON</li> </ul> </li> <li>Property Name: The name of the property which contains the data to convert.</li> <li>Options<ul> <li>Allow Surrogate Chars: Allows using characters from the Unicode surrogate blocks. This field is displayed when 'JSON to XML' is selected from the Mode dropdown list.</li> <li>cdata:  Wrap text nodes instead of escaping when necessary. This field is displayed when 'JSON to XML' is selected from the Mode dropdown list.</li> <li>Headless: Omit the XML header. This field is displayed when 'JSON to XML' is selected from the Mode dropdown list.</li> <li>Root Name: Root element name to be used. This field is displayed when 'JSON to XML' is selected from the Mode dropdown list.</li> <li>Explicit Array: Always put child nodes in an array if true; otherwise an array is created. This field is displayed when 'XML to JSON' is selected from the Mode dropdown list.</li> <li>Explicit Root: Set this if you want to get the root node in the resulting object. This field is displayed when 'XML to JSON' is selected from the Mode dropdown list.</li> <li>Ignore Attributes: Ignore all XML attributes and only create text nodes. This field is displayed when 'XML to JSON' is selected from the Mode dropdown list.</li> <li>Merge Attributes: Merge attributes and child elements as properties of the parent, instead of keying attributes off a child attribute object. This option is ignored if 'Ignore Attribute' is true. This field is displayed when 'XML to JSON' is selected from the Mode dropdown list.</li> <li>Normalize: Trim whitespaces inside the text nodes. This field is displayed when 'XML to JSON' is selected from the Mode dropdown list.</li> <li>Normalize Tags: Normalize all tag names to lowercase. This field is displayed when 'XML to JSON' is selected from the Mode dropdown list.</li> <li>Trim: Trim the whitespace at the beginning and end of text nodes. This field is displayed when 'XML to JSON' is selected from the Mode dropdown list.</li> <li>Attribute Key: Prefix that is used to access the attributes.</li> <li>Character Key: Prefix that is used to access the character content.</li> </ul> </li> </ul>","tags":["Workflow\u00b2","XML"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.xml/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to convert the JSON data received from the CocktailDB API to XML. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Start - HTTP Request - XML</p> <p>The final workflow should look like the following image.</p> <p></p>","tags":["Workflow\u00b2","XML"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.xml/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>","tags":["Workflow\u00b2","XML"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.xml/#2-http-request-node-get","title":"2. HTTP Request node (GET)","text":"<ol> <li>Enter <code>https://www.thecocktaildb.com/api/json/v1/1/random.php</code> in the URL field.</li> <li>Click on Execute Node to run the node.</li> </ol>","tags":["Workflow\u00b2","XML"]},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.xml/#3-xml-node-json-to-xml","title":"3. XML node (JSON to XML)","text":"<ol> <li>Select 'JSON to XML' from the Mode dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol>","tags":["Workflow\u00b2","XML"]},{"location":"workflow/integrations/creating-nodes/","title":"Creating nodes","text":"<p>Learn how to build your own custom nodes.</p> <ul> <li>Standards</li> <li>Create your first node</li> <li>Creating WF-nodes-module</li> <li>Create a trigger node</li> <li>Use the node developer CLI</li> <li>Node UI elements</li> <li>Making HTTP Requests</li> <li>Nodelinter</li> <li>Node Review Checklist</li> <li>Troubleshooting</li> </ul>","tags":["Workflow\u00b2","How To","create","nodes"]},{"location":"workflow/integrations/creating-nodes/code/create-first-node/","title":"Creating Your First Node","text":"<p>Today, you will learn how to create your first node for Workflow\u00b2.</p>"},{"location":"workflow/integrations/creating-nodes/code/create-first-node/#prerequisites","title":"Prerequisites","text":"<p>You have knowledge of:</p> <ul> <li>JavaScript/TypeScript</li> <li>REST APIs</li> <li>Expressions in n8n</li> </ul> <p>Install the following tools:</p> <ul> <li>Git: You can find instructions on how to install Git here.</li> <li> <p>Node.js and npm: You can find instructions how to install both using nvm (Node Version Manager) here. The current minimum version is <code>14.15</code>. In case you already have Node.js and npm installed, you can check the current version with the following command:     <code>bash     node -v     npm -v</code> NOTE: Use node version <code>14.x</code> and npm version <code>6.x</code>. If using npm version <code>7+</code>, you must enable legacy peer dependencies by setting: <code>npm config set legacy-peer-deps true</code>.</p> </li> <li> <p>Lerna: You can install lerna globally with the following command:     <pre><code>npm install --global lerna\n</code></pre></p> </li> </ul>"},{"location":"workflow/integrations/creating-nodes/code/create-first-node/#selecting-the-node","title":"Selecting the node","text":"<p>The first thing that we have to do is pick the service we want to create the node for. We will use SendGrid as an example.</p> <p>For the sake of brevity, we will only showcase how to add the functionality to create a contact. Since n8n's repository already has a SendGrid node, we will name this node FriendGrid to avoid conflicts.</p>"},{"location":"workflow/integrations/creating-nodes/code/create-first-node/#cloning-the-repository","title":"Cloning the repository","text":"<p>In GitHub, fork the n8n repository. Clone it by running the following command in your terminal (don't forget to replace <code>&lt;USERNAME&gt;</code> with your GitHub username):</p> <pre><code>git clone https://github.com/&lt;USERNAME&gt;/n8n.git &amp;&amp; cd n8n\n</code></pre> <p>n8n is built from four main packages:</p> <ul> <li>cli</li> <li>core</li> <li>editor-ui</li> <li>nodes-base</li> </ul> <p>All these packages are under the <code>/packages</code> folder in the main Doc\u00b2 folder. We will be working in the <code>nodes-base</code> folder as it contains everything related to nodes. Specifically, <code>/packages/nodes-base/nodes</code>, <code>packages/nodes-base/credentials</code>, and <code>packages/nodes-base/package.json</code>.</p> <ul> <li>The folder <code>nodes</code>, contains all the nodes in Workflow\u00b2.</li> <li>The folder <code>credentials</code> contains all the credentials that the different nodes use. Each node can define multiple credentials. For example, OAuth2 or API Key. Each credential requires different parameters that the user will have to input. The credentials data that the user provides is stored in an encrypted format in n8n's database.</li> <li>The file <code>package.json</code> contains all the npm packages that the nodes use. It also contains all the nodes and credentials that are loaded when Doc\u00b2 is started.</li> </ul> <p></p>"},{"location":"workflow/integrations/creating-nodes/code/create-first-node/#creating-the-node","title":"Creating the node","text":"<ol> <li>Go to <code>packages/nodes-base/nodes</code>.</li> <li>Create a folder called <code>FriendGrid</code> (the folder names are PascalCase).</li> <li>Within the FriendGrid folder, create a file called <code>FriendGrid.node.ts</code> (YourNodeName.node.ts).</li> <li>Download and add the FriendGrid icon to the folder. Name it <code>friendGrid.svg</code>.<ul> <li>The icon property has to be either a 60x60 pixels PNG or an SVG and must exist in the node\u2019s folder.</li> <li>An SVG is preferable. In case you have to use a PNG, make sure that it is compressed. A good tool for that is tinypng.</li> <li>A good place to find company icons is gilbarbara/logos.</li> </ul> </li> <li>Paste the following code in the <code>FriendGrid.node.ts</code> file.</li> </ol> <pre><code>import {\nIExecuteFunctions,\n} from 'n8n-core';\n\nimport {\nIDataObject,\nINodeExecutionData,\nINodeType,\nINodeTypeDescription,\n} from 'n8n-workflow';\n\nimport {\nOptionsWithUri,\n} from 'request';\n\nexport class FriendGrid implements INodeType {\ndescription: INodeTypeDescription = {\ndisplayName: 'FriendGrid',\nname: 'friendGrid',\nicon: 'file:friendGrid.svg',\ngroup: ['transform'],\nversion: 1,\ndescription: 'Consume FriendGrid API',\ndefaults: {\nname: 'FriendGrid',\ncolor: '#1A82e2',\n},\ninputs: ['main'],\noutputs: ['main'],\ncredentials: [\n],\nproperties: [\n// Node properties which the user gets displayed and\n// can change on the node.\n],\n};\n\nasync execute(this: IExecuteFunctions): Promise&lt;INodeExecutionData[][]&gt; {\nreturn [[]];\n}\n}\n</code></pre> <p>Your directory structure should now look like the following.</p> <p></p>"},{"location":"workflow/integrations/creating-nodes/code/create-first-node/#adding-the-node-to-editor-ui","title":"Adding the node to Editor UI","text":"<p>n8n uses the properties set in the property <code>description</code> to render the node in the Editor UI. These properties are <code>displayName</code>, <code>name</code>, <code>color</code>, <code>icon</code>, <code>description</code>, and <code>subtitle</code>.</p> <p>Check the following figure to see how the properties affect the looks of the node.</p> <p></p> <p>Note: The property description conforms to INodeTypeDescription.</p> <p>Let's see how the node looks in the UI by following these steps:</p> <ol> <li>Go to <code>/packages/nodes-base/package.json</code>.</li> <li>Paste <code>\"dist/nodes/FriendGrid/FriendGrid.node.js\",</code> in the nodes array to register the node (in an alphabetical order).</li> <li> <p>Go to the project's main folder (n8n) in the terminal and run the following commands (it can take a few minutes).</p> <ul> <li>The first command installs all dependencies of all the modules and links them together.</li> <li>The second command builds all the code.</li> <li>The third command starts Doc\u00b2 in development mode.</li> </ul> <pre><code>lerna bootstrap --hoist\nnpm run build\nnpm run dev\n</code></pre> </li> <li> <p>Open your browser and go to localhost:8080 and you should be able to see the Editor UI.</p> </li> <li>Open the Create Node menu, type <code>FriendGrid</code>, and click on it to add the node to the Editor UI.</li> </ol> <p>Notes - On startup, Doc\u00b2 will load all the nodes and credentials (more about credentials later) that are registered in <code>/packages/nodes-base/package.json</code>. - The property <code>description.name</code> uses camelCase. - The property <code>description.color</code> is the company branding's hexadecimal color. This is usually available on the company's website under style guide. In case the website does not include this information, there are other websites that help you get a company\u2019s branding colors. For example, brandpalettes.com.</p>"},{"location":"workflow/integrations/creating-nodes/code/create-first-node/#creating-the-ui-for-the-node","title":"Creating the UI for the node","text":"<p>Double-clicking on the FriendGrid node will open the Node Editor View. It will be empty since we haven't added any UI components yet. Luckily, Doc\u00b2 provides predefined JSON-based UI components that we can use to ask the user for different types of data.</p> <p>SendGrid's docs mention that to create a contact, we need to provide the following pieces of information:</p> <ul> <li>email - Required</li> <li>first_name - Optional</li> <li>last_name - Optional</li> </ul> <p>There are more parameters that can be provided to create a contact in FriendGrid, but we will use only these three in this tutorial.</p>"},{"location":"workflow/integrations/creating-nodes/code/create-first-node/#resources-and-operations","title":"Resources and operations","text":"<p>Now, Doc\u00b2 requires a couple of parameters as well:</p> <ul> <li>resource - Required</li> <li>operation - Required</li> </ul> <p>You can get the node to work without these two parameters, but these should be added for the sake of consistency with the other nodes. Resources and Operations help in organizing all the functionalities of a node. These ensure that all the functionalities of a node remain easily discoverable as the node grows.</p> <ul> <li>The resource value is always singular and its value is the name of the API resource that we want to use. Since we are working with contacts, the resource value would be <code>contact</code>.</li> <li>The operation value is always singular as well and it is the name of the operation to perform over the resource. Since we are creating contacts, the operation value would be <code>create</code>.</li> </ul> <p>You might say that you can \u201cAdd a contact\u201d and you are right, but we try to use the same operations (create, delete, get, getAll and update) across all the nodes.</p>"},{"location":"workflow/integrations/creating-nodes/code/create-first-node/#adding-required-fields","title":"Adding required fields","text":"<p>Let\u2019s make the Node Editor View ask for these parameters:</p> <ol> <li>Add the following under <code>description.properties</code> in <code>packages/nodes-base/nodes/FriendGrid/FriendGrid.node.ts</code>.</li> </ol> <pre><code>{\ndisplayName: 'Resource',\nname: 'resource',\ntype: 'options',\noptions: [\n{\nname: 'Contact',\nvalue: 'contact',\n},\n],\ndefault: 'contact',\nrequired: true,\ndescription: 'Resource to consume',\n},\n{\ndisplayName: 'Operation',\nname: 'operation',\ntype: 'options',\ndisplayOptions: {\nshow: {\nresource: [\n'contact',\n],\n},\n},\noptions: [\n{\nname: 'Create',\nvalue: 'create',\ndescription: 'Create a contact',\n},\n],\ndefault: 'create',\ndescription: 'The operation to perform.',\n},\n{\ndisplayName: 'Email',\nname: 'email',\ntype: 'string',\nrequired: true,\ndisplayOptions: {\nshow: {\noperation: [\n'create',\n],\nresource: [\n'contact',\n],\n},\n},\ndefault:'',\ndescription:'Primary email for the contact',\n},\n</code></pre> <ol> <li>Stop the current Doc\u00b2 process by pressing ctrl + c in the terminal in which you are running Workflow\u00b2.</li> <li>Run again, by entering the following in the terminal.     <pre><code>npm run dev\n</code></pre></li> <li>Go to localhost:8080, refresh the page, and open the node again.</li> </ol> <p>The node should now look like in the following image.</p> <p></p>"},{"location":"workflow/integrations/creating-nodes/code/create-first-node/#adding-optional-fields","title":"Adding optional fields","text":"<p>We have given the node the possibility to ask for all the required parameters needed to create a contact. But, what about the optional parameters?</p> <p>We can add them below the email parameter and set <code>required: false</code>. However, if we had more than two optional parameters, and most APIs do, the UI would become overwhelming for the users. To avoid this, we use a UI element named collection (usually called 'Additional Fields') to group all the optional parameters together.</p> <ol> <li> <p>Add the following below the <code>email</code> field in <code>packages/nodes-base/nodes/FriendGrid/FriendGrid.node.ts</code>.</p> <pre><code>{\ndisplayName: 'Additional Fields',\nname: 'additionalFields',\ntype: 'collection',\nplaceholder: 'Add Field',\ndefault: {},\ndisplayOptions: {\nshow: {\nresource: [\n'contact',\n],\noperation: [\n'create',\n],\n},\n},\noptions: [\n{\ndisplayName: 'First Name',\nname: 'firstName',\ntype: 'string',\ndefault: '',\n},\n{\ndisplayName: 'Last Name',\nname: 'lastName',\ntype: 'string',\ndefault: '',\n},\n],\n},\n</code></pre> </li> <li> <p>Stop the current Doc\u00b2 process by pressing ctrl + c in the terminal in which you are running Workflow\u00b2.</p> </li> <li>Run again, by entering the following in the terminal.     <pre><code>npm run dev\n</code></pre></li> <li>Go to localhost:8080, refresh the page, and open the node again.</li> </ol> <p>The node should now look like in the following image.</p> <p></p> <p>Now all our optional fields are presented in the UI and can be set individually depending on the user\u2019s use-case.</p>"},{"location":"workflow/integrations/creating-nodes/code/create-first-node/#creating-the-ui-for-credentials","title":"Creating the UI for credentials","text":"<p>Most REST APIs use some sort of authentication mechanism. FriendGrid's REST API uses API Keys. The API Key informs them about who is making the request to their system and gives you access to all the functionality that the API provides. Given all the things it can do, this has to be treated as a sensitive piece of information and should be kept private.</p> <p>n8n gives you the ability to ask for sensitive information using credentials. In the credentials, you can use all the generally available UI elements. Additionally, the data that is stored using the credentials would be encrypted before being saved to the database. In order to do that, Doc\u00b2 uses an encryption key.</p> <p>With that in mind, let\u2019s create the UI to ask for the user\u2019s FriendGrid API Key. The process of creating and registering credentials is similar to that of creating and registering the node:</p> <ol> <li>Go to <code>packages/nodes-base/credentials</code>.</li> <li>Within the credentials folder, create a file named <code>FriendGridApi.credentials.ts</code>.</li> <li>Paste the following code.</li> </ol> <pre><code>import {\nICredentialType,\nNodePropertyTypes,\n} from 'n8n-workflow';\n\nexport class FriendGridApi implements ICredentialType {\nname = 'friendGridApi';\ndisplayName = 'FriendGrid API';\ndocumentationUrl = 'friendGrid';\nproperties = [\n{\ndisplayName: 'API Key',\nname: 'apiKey',\ntype: 'string' as NodePropertyTypes,\ndefault: '',\n},\n];\n}\n</code></pre> <ol> <li>Go to <code>/packages/nodes-base/package.json</code>.</li> <li>Paste <code>\"dist/credentials/FriendGridApi.credentials.js\",</code> in the credentials array to register the credentials (in an alphabetical order).</li> <li>Got to <code>packages/nodes-base/nodes/FriendGrid/FriendGrid.node.ts</code>.</li> <li> <p>Associate the credentials with the node by adding the following to <code>description.credentials</code>.</p> <pre><code>{\nname: 'friendGridApi',\nrequired: true,\n},\n</code></pre> </li> <li> <p>Stop the current Doc\u00b2 process by pressing ctrl + c in the terminal in which you are running Workflow\u00b2.</p> </li> <li>Run again, by entering the following in the terminal.     <pre><code>npm run dev\n</code></pre></li> </ol> <p>When you go to the Node Editor view, you should see the following.</p> <p></p> <p></p>"},{"location":"workflow/integrations/creating-nodes/code/create-first-node/#mapping-the-ui-fields-to-the-api","title":"Mapping the UI fields to the API","text":"<p>With the UI that we added, we now have all the data that we need to make a request to the FriendGrid API and create contacts.</p> <p>This is where the <code>execute</code> method comes into play. Every time the node is executed, this method will be run. Within this method, we can have access to the input items and to the parameters that the user set in the UI, including the credentials. To map the fields to the API, perform the following steps:</p> <ol> <li>Go to <code>package/nodes-base/nodes/FriendGrid.node.ts</code>.</li> <li>Replace the current <code>execute</code> method with the following code.</li> </ol> <pre><code>async execute(this: IExecuteFunctions): Promise&lt;INodeExecutionData[][]&gt; {\nlet responseData;\nconst resource = this.getNodeParameter('resource', 0) as string;\nconst operation = this.getNodeParameter('operation', 0) as string;\n//Get credentials the user provided for this node\nconst credentials = await this.getCredentials('friendGridApi') as IDataObject;\n\nif (resource === 'contact') {\nif (operation === 'create') {\n// get email input\nconst email = this.getNodeParameter('email', 0) as string;\n// get additional fields input\nconst additionalFields = this.getNodeParameter('additionalFields', 0) as IDataObject;\nconst data: IDataObject = {\nemail,\n};\n\nObject.assign(data, additionalFields);\n\n//Make http request according to &lt;https://sendgrid.com/docs/api-reference/&gt;\nconst options: OptionsWithUri = {\nheaders: {\n'Accept': 'application/json',\n'Authorization': `Bearer ${credentials.apiKey}`,\n},\nmethod: 'PUT',\nbody: {\ncontacts: [\ndata,\n],\n},\nuri: `https://api.sendgrid.com/v3/marketing/contacts`,\njson: true,\n};\n\nresponseData = await this.helpers.request(options);\n}\n}\n\n// Map data to Doc\u00b2 data\nreturn [this.helpers.returnJsonArray(responseData)];\n}\n</code></pre> <ol> <li>Stop the current Doc\u00b2 process by pressing ctrl + c in the terminal in which you are running Workflow\u00b2.</li> <li>Run again, by entering the following in the terminal.     <pre><code>npm run dev\n</code></pre></li> <li>Enter the credentials (FriendGrid API Key), contact parameters, and execute the node.<ul> <li>Instructions to find the FriendGrid API Key can be found here.</li> </ul> </li> </ol> <p>If everything went well, you should see the following.</p> <p></p> <p>Now we can successfully create contacts in FriendGrid from Workflow\u00b2.</p>"},{"location":"workflow/integrations/creating-nodes/code/create-first-node/#processing-multiples-items","title":"Processing multiples items","text":"<p>In real life, you'll probably have a workflow with more than one node. Our current implementation does not play well with the other nodes. If the data is coming into our FriendGrid node from another node, and that outputs, for example, two contacts, our node will process just the first contact. We want our node to process as many items as it receives.</p> <p>This is when the <code>this.getInputData()</code> function comes into play. Let's update our node so that it can process multiple items.</p> <ol> <li>In the Editor UI, create a new workflow. Add a Function node and connect it to the Start node.</li> <li>Open the function node and replace the existing code with the following.</li> </ol> <pre><code> return [\n{\njson: {\nname: 'ricardo@n8n.io'\n}\n},\n{\njson: {\nname: 'hello@n8n.io'\n}\n},\n]\n</code></pre> <ol> <li> <p>Execute the Function node. We're using the function node for testing, but you can think of it as any node that is returning \u201ctwo people\u201d (or more). These two people need to be added to FriendGrid as contacts.</p> <p></p> </li> <li> <p>Add a FriendGrid node to the workflow and connect it to the Function node. Add an expression in the Email field of the FriendGrid node and reference the name property that the Function node outputs.</p> <p></p> </li> <li> <p>Replace the existing <code>execute</code> method with the following:</p> <pre><code>async execute(this: IExecuteFunctions): Promise&lt;INodeExecutionData[][]&gt; {\nconst items = this.getInputData();\nlet responseData;\nconst returnData = [];\nconst resource = this.getNodeParameter('resource', 0) as string;\nconst operation = this.getNodeParameter('operation', 0) as string;\n//Get credentials the user provided for this node\nconst credentials = await this.getCredentials('friendGridApi') as IDataObject;\n\nfor (let i = 0; i &lt; items.length; i++) {\nif (resource === 'contact') {\nif (operation === 'create') {\n// get email input\nconst email = this.getNodeParameter('email', i) as string;\n\n// i = 1 returns ricardo@n8n.io\n// i = 2 returns hello@n8n.io\n\n// get additional fields input\nconst additionalFields = this.getNodeParameter('additionalFields', i) as IDataObject;\nconst data: IDataObject = {\nemail,\n};\n\nObject.assign(data, additionalFields);\n\n//Make http request according to &lt;https://sendgrid.com/docs/api-reference/&gt;\nconst options: OptionsWithUri = {\nheaders: {\n'Accept': 'application/json',\n'Authorization': `Bearer ${credentials.apiKey}`,\n},\nmethod: 'PUT',\nbody: {\ncontacts: [\ndata,\n],\n},\nuri: `https://api.sendgrid.com/v3/marketing/contacts`,\njson: true,\n};\n\nresponseData = await this.helpers.request(options);\nreturnData.push(responseData);\n}\n}\n}\n// Map data to Doc\u00b2 data structure\nreturn [this.helpers.returnJsonArray(returnData)];\n}\n</code></pre> </li> <li> <p>Execute the workflow.</p> </li> </ol> <p>If you open the FriendGrid node, you should see the following.</p> <p>![Output of the FriendGrid node]((/_images/integrations/creating-nodes/code/final-friendgrid.png)</p> <p>As showcased above, both the items were processed. That\u2019s how all nodes in Doc\u00b2 work (with a few exceptions). They will automatically iterate over all the items and process them.</p> <p>Let\u2019s go over the final version of the <code>execute</code> method. We are getting the items returned by the <code>this.getInputData()</code> function and iterating over all of them. Additionally, while doing so, we use the item index to get the correct parameter value using the function <code>this.getNodeParameters()</code>. For example, with the following input:</p> <pre><code>[\n{\njson: {\nname: 'ricardo@n8n.io'\n}\n},\n{\njson: {\nname: 'hello@n8n.io'\n}\n},\n]\n</code></pre> <p>The <code>this.getNodeParameters(ParameterName, index)</code>function outputs the following:</p> Index Parameter Name Output 0 email ricardo@n8n.io 1 email hello@n8n.io <p>We used the <code>this.helpers.request(options)</code> method to make the HTTP Request that creates the contact in FriendGrid. The FriendGrid endpoint returns something like this:</p> <pre><code>{\njob_id: \"b82aca74-3640-4097-85ec-7801d833c2cb\"\n}\n</code></pre> <p>We then used the <code>this.helpers.returnJsonArray()</code> method to map the API\u2019s output data to n8n's data structure. The node then ends up returning the data like the following:</p> <pre><code>[\n{\njson:{\njob_id: \"b82aca74-3640-4097-85ec-7801d833c2cb\"\n}\n}\n]\n</code></pre>"},{"location":"workflow/integrations/creating-nodes/code/create-first-node/#summary","title":"Summary","text":"<p>In this tutorial, we implemented the \"Create a Contact\" functionality of the FriendGrid API. First of all, we made the node show up in the Editor UI and in the Create Node menu with FriendGrid's branding. Then, we added the fields necessary to create a contact in FriendGrid. We also added the credentials so that the API Key could be stored safely. Finally, we mapped all the parameters to the FriendGrid API.</p> <p>This is just the tip of the iceberg. We built a regular node that consumes a REST API, but a regular node can do everything that can be done with Node.js. Aside from regular nodes you can also build Trigger nodes.</p>"},{"location":"workflow/integrations/creating-nodes/code/create-first-node/#next-steps","title":"Next steps","text":"<p>Once you have created the node and want to contribute to Doc\u00b2, please check the Node Review Checklist. Make sure you complete the checklist before creating a pull request.</p>"},{"location":"workflow/integrations/creating-nodes/code/create-trigger-node/","title":"Creating Your First Trigger Node","text":"<p>Today, you will learn how to create your first trigger node for Workflow\u00b2.</p>"},{"location":"workflow/integrations/creating-nodes/code/create-trigger-node/#prerequisites","title":"Prerequisites","text":"<p>You have knowledge of:</p> <ul> <li>JavaScript/TypeScript</li> <li>REST APIs</li> <li>Webhooks</li> <li>Expressions in n8n</li> </ul> <p>Install the following tools:</p> <ul> <li>Git: You can find instructions on how to install Git here.</li> <li> <p>Node.js and npm: You can find instructions on how to install both using nvm (Node Version Manager) here. The current minimum version is <code>14.15</code>. In case you already have Node.js and npm installed, you can check the current version with the following command:     <pre><code>node -v\nnpm -v\n</code></pre> NOTE: Use node version <code>14.x</code> and npm version <code>6.x</code></p> </li> <li> <p>Lerna: Install lerna globally with the following command:     <pre><code>npm install --global lerna\n</code></pre></p> </li> </ul>"},{"location":"workflow/integrations/creating-nodes/code/create-trigger-node/#selecting-the-node","title":"Selecting the node","text":"<p>The first thing that we have to do is pick the service we want to create the node for. We will use Autopilot as an example.</p> <p>Since n8n's repository already has a Autopilot Trigger node, we will name this node Autofriend Trigger to avoid conflicts.</p>"},{"location":"workflow/integrations/creating-nodes/code/create-trigger-node/#cloning-the-repository","title":"Cloning the repository","text":"<p>In GitHub, fork the n8n repository. Clone it by running the following command in your terminal (don't forget to replace <code>&lt;USERNAME&gt;</code> with your GitHub username):</p> <pre><code>git clone https://github.com/&lt;USERNAME&gt;/n8n.git &amp;&amp; cd n8n\n</code></pre> <p>n8n is built from four main packages:</p> <ul> <li>cli</li> <li>core</li> <li>editor-ui</li> <li>nodes-base</li> </ul> <p>All these packages are under the <code>/packages</code> folder in the main Doc\u00b2 folder. We will be working in the <code>nodes-base</code> folder as it contains everything related to nodes. Specifically, <code>/packages/nodes-base/nodes</code>, <code>packages/nodes-base/credentials</code>, and <code>packages/nodes-base/package.json</code>.</p> <ul> <li>The folder <code>nodes</code>, contains all the nodes in Workflow\u00b2.</li> <li>The folder <code>credentials</code> contains all the credentials that the different nodes use. Each node can define multiple credentials. For example, OAuth2 or API Key. Each credential requires different parameters that the user will have to input. The credentials data that the user provides is stored in an encrypted format in n8n's database.</li> <li>The file <code>package.json</code> contains all the npm packages that the nodes use. It also contains all the nodes and credentials that are loaded when Doc\u00b2 is started.</li> </ul> <p></p>"},{"location":"workflow/integrations/creating-nodes/code/create-trigger-node/#creating-the-node","title":"Creating the node","text":"<ol> <li>Go to <code>packages/nodes-base/nodes</code>.</li> <li>Create a folder called <code>Autofriend</code> (the folder names are PascalCase).</li> <li>Within the Autofriend folder, create a file called <code>AutofriendTrigger.node.ts</code> (YourNodeNameTrigger.node.ts).</li> <li>Download and add the Autofriend icon to the folder. Name it <code>autopilot.svg</code>.<ul> <li>The icon property has to be either a 60x60 pixels PNG or an SVG and must exist in the node\u2019s folder.</li> <li>An SVG is preferable. In case you have to use a PNG, make sure that it is compressed. A good tool for that is tinypng.</li> <li>A good place to find company icons is gilbarbara/logos.</li> </ul> </li> <li>Paste the following code in the <code>AutofriendTrigger.node.ts</code> file.</li> </ol> <pre><code>import {\nIHookFunctions,\nIWebhookFunctions,\n} from 'n8n-core';\n\nimport {\nIDataObject,\nINodeType,\nINodeTypeDescription,\nIWebhookResponseData,\n} from 'n8n-workflow';\n\n/*\nimport {\n    autofriendApiRequest,\n} from './GenericFunctions';\n\nimport {\n    snakeCase,\n} from 'change-case';\n*/\n\n\nexport class AutofriendTrigger implements INodeType {\ndescription: INodeTypeDescription = {\ndisplayName: 'Autofriend Trigger',\nname: 'autofriendTrigger',\nicon: 'file:autofriend.svg',\ngroup: ['trigger'],\nversion: 1,\nsubtitle: '={{$parameter[\"event\"]}}',\ndescription: 'Handle Autofriend events via webhooks',\ndefaults: {\nname: 'Autofriend Trigger',\ncolor: '#6ad7b9',\n},\ninputs: [],\noutputs: ['main'],\ncredentials: [],\nwebhooks: [\n{\nname: 'default',\nhttpMethod: 'POST',\nresponseMode: 'onReceived',\npath: 'webhook',\n},\n],\nproperties: [],\n};\nasync webhook(this: IWebhookFunctions): Promise&lt;IWebhookResponseData&gt; {\nreturn {\nworkflowData: [],\n};\n}\n}\n</code></pre> <p>Your directory structure should now look like the following.</p> <p></p>"},{"location":"workflow/integrations/creating-nodes/code/create-trigger-node/#adding-the-node-to-editor-ui","title":"Adding the node to Editor UI","text":"<p>n8n uses the properties set in the property <code>description</code> to render the node in the Editor UI. These properties are <code>displayName</code>, <code>name</code>, <code>color</code>, <code>icon</code>, <code>description</code>, and <code>subtitle</code>.</p> <p>Check the following figure to see how the properties affect the looks of the node.</p> <p></p> <p>Note: The property description conforms to INodeTypeDescription.</p> <p>Let's see how the node looks in the UI by following these steps:</p> <ol> <li>Go to <code>/packages/nodes-base/package.json</code>.</li> <li>Paste <code>\"dist/nodes/Autofriend/AutofriendTrigger.node.js\",</code> in the nodes array to register the node (in an alphabetical order).</li> <li>Go to the project's main folder (n8n) in the terminal and run the following commands (it can take a few minutes).<ul> <li>The first command installs all dependencies of all the modules and links them together.</li> <li>The second command builds all the code.</li> <li>The third command starts Doc\u00b2 in development mode.</li> </ul> </li> </ol> <pre><code>lerna bootstrap --hoist\nnpm run build\nnpm run dev\n</code></pre> <ol> <li>Open your browser and go to localhost:8080 and you should be able to see the Editor UI.</li> <li>Open the Create Node menu, select the Trigger tab, type <code>Autofriend</code>, and click on it to add the node to the Editor UI.</li> </ol> <p>Notes</p> <ul> <li>On startup, Doc\u00b2 will load all the nodes and credentials (more about credentials later) that are registered in <code>/packages/nodes-base/package.json</code>.</li> <li>The property <code>description.name</code> uses camelCase.</li> <li>The property <code>description.color</code> is the company's branding color in hexadecimal. In case the website does not include this information, there are other websites that help you get a company\u2019s branding colors. For example, brandpalettes.com.</li> </ul>"},{"location":"workflow/integrations/creating-nodes/code/create-trigger-node/#creating-the-ui-for-the-node","title":"Creating the UI for the node","text":"<p>Double-clicking on the Autofriend Trigger node will open the Node Editor View. It will be empty since we haven't added any UI components yet. Luckily, Doc\u00b2 provides predefined JSON-based UI components that we can use to ask the user for different types of data.</p> <p>Autopilots's docs mention that to create a hook, we need to provide the following pieces of information:</p> <ul> <li>event - Required</li> <li>target_url - Required</li> </ul> <p>In the <code>event</code> parameter, we provide the name of the event for which we want to be notified. For example, <code>contact_added</code>. As the name implies, by providing <code>contact_added</code> as the event, we will be notified every time a contact is added to Autofriend.</p> <p>In the <code>target_url</code> parameter, we provide the URL where Autofriend will notify us when the event defined in the event parameter takes place. We don't need to ask the user for this parameter as Doc\u00b2 provides us with a method to obtain it.</p>"},{"location":"workflow/integrations/creating-nodes/code/create-trigger-node/#adding-the-fields","title":"Adding the fields","text":"<p>Let\u2019s make the Node Editor View ask for these parameters: 1. Add the following under <code>description.properties</code> in <code>packages/nodes-base/nodes/Autofriend/AutofriendTrigger.node.ts.</code>.</p> <pre><code>{\ndisplayName: 'Event',\nname: 'event',\ntype: 'options',\nrequired: true,\ndefault: '',\noptions: [\n{\nname: 'Contact Added',\nvalue: 'contactAdded',\n},\n{\nname: 'Contact Added To List',\nvalue: 'contactAddedToList',\n},\n{\nname: 'Contact Entered Segment',\nvalue: 'contactEnteredSegment',\n},\n{\nname: 'Contact Left Segment',\nvalue: 'contactLeftSegment',\n},\n{\nname: 'Contact Removed From List',\nvalue: 'contactRemovedFromList',\n},\n{\nname: 'Contact Unsubscribed',\nvalue: 'contactUnsubscribed',\n},\n{\nname: 'Contact Updated',\nvalue: 'contactUpdated',\n},\n],\n},\n</code></pre> <ol> <li>Stop the current Doc\u00b2 process by pressing <code>ctrl + c</code> in the terminal in which you are running Workflow\u00b2.</li> <li>Run again, by entering the following in the terminal. <pre><code>npm run dev\n</code></pre></li> <li>Go to localhost:8080, refresh the page, and open the node again.</li> </ol> <p>The node should now look like in the following image.</p> <p></p>"},{"location":"workflow/integrations/creating-nodes/code/create-trigger-node/#creating-the-ui-for-credentials","title":"Creating the UI for credentials","text":"<p>Most REST APIs use some sort of authentication mechanism. Autofriend's REST API uses API Keys. The API Key informs them about who is making the request to their system and gives you access to all the functionality that the API provides. Given all the things it can do, this has to be treated as a sensitive piece of information and should be kept private.</p> <p>n8n gives you the ability to ask for sensitive information using credentials. In the credentials, you can use all the generally available UI elements. Additionally, the data that is stored using the credentials would be encrypted before being saved to the database. In order to do that, Doc\u00b2 uses an encryption key.</p> <p>With that in mind, let\u2019s create the UI to ask for the user\u2019s Autofriend API Key. The process of creating and registering credentials is similar to that of creating and registering the node:</p> <ol> <li>Go to <code>packages/nodes-base/credentials</code>.</li> <li>Within the credentials folder, create a file named <code>AutofriendApi.credentials.ts</code>.</li> <li>Paste the following code.</li> </ol> <pre><code>import {\nICredentialType,\nNodePropertyTypes,\n} from 'n8n-workflow';\n\nexport class AutofriendApi implements ICredentialType {\nname = 'autofriendApi';\ndisplayName = 'Autofriend API';\nproperties = [\n{\ndisplayName: 'API Key',\nname: 'apiKey',\ntype: 'string' as NodePropertyTypes,\ndefault: '',\n},\n];\n}\n</code></pre> <ol> <li>Go to <code>/packages/nodes-base/package.json</code>.</li> <li>Paste <code>\"dist/credentials/AutofriendApi.credentials.js\",</code> in the credentials array to register the credentials (in an alphabetical order).</li> <li>Got to <code>packages/nodes-base/nodes/Autofriend/AutofriendTrigger.node.ts</code>.</li> <li>Associate the credentials with the node by adding the following to <code>description.credentials</code>.</li> </ol> <pre><code> credentials: [\n{\nname: 'autofriendApi',\nrequired: true,\n},\n],\n</code></pre> <ol> <li>Stop the current Doc\u00b2 process by pressing <code>ctrl + c</code> in the terminal in which you are running Workflow\u00b2.</li> <li>Run again, by entering the following in the terminal. <pre><code>npm run dev\n</code></pre></li> </ol> <p>When you go to the Node Editor view, you should see the following.</p> <p></p> <p></p>"},{"location":"workflow/integrations/creating-nodes/code/create-trigger-node/#understanding-the-life-cycle-for-the-webhook-method","title":"Understanding the life cycle for the webhook method","text":"<p>When a Trigger node is executed either in test or production mode, the following happens:</p>"},{"location":"workflow/integrations/creating-nodes/code/create-trigger-node/#doc2-persists-all-the-webhooks-defined-in-descriptionwebhooks","title":"Doc\u00b2 persists all the webhooks defined in description.webhooks","text":"<p>The persisted data will be used later to verify if the incoming requests to the n8n\u2019s webhook endpoint are valid.</p> <p>The property webhooks implements the interface IWebhookDescription. The interface has four properties.</p> <ol> <li>name: The property name where Doc\u00b2 will look for the life cycle methods.</li> <li>httpMethod: The HTTP method.</li> <li>responseMode: When the trigger will respond. When developing a trigger node, this property must be set to <code>onReceived</code>.</li> <li>path: The path added to the base URL.</li> </ol> <p>For example, for a Trigger node with the following <code>webhooks</code> property, Doc\u00b2 will create the following webhooks URLs.</p> <pre><code>webhooks: [\n{\nname: 'default',\nhttpMethod: 'POST',\nresponseMethod: 'onReceived',\npath: 'webhook',\n},\n]\n</code></pre> <ul> <li>Test: POST {{WEBHOOK_TUNNEL_URL || localhost}}/webhook-test/{{uuid}}/{{path}}</li> <li>Production: POST {{WEBHOOK_TUNNEL_URL || localhost}}/webhook/{{uuid}}/{{path}}</li> </ul> <p>These URLs can be found in the node under the <code>Webhook URLs</code> label.</p> <p>These webhook URLs will be used as the notification URL (also known as the callback URL or target URL) when creating the webhook in the external system.</p> <p>Note: In test mode, the webhooks are persisted in memory. In production mode, they are persisted in the database.</p>"},{"location":"workflow/integrations/creating-nodes/code/create-trigger-node/#doc2-executes-the-life-cycle-methods","title":"Doc\u00b2 executes the life cycle methods","text":"<p>The life cycle methods allow us to create, delete, and check if the webhook exists in the external system.</p> <p>Methods</p> <ul> <li><code>checkExist</code>: This is the first method that gets called. It checks if the webhook with the current path is already registered in the external system or not. If the webhook is already registered, Doc\u00b2 persists the webhook ID. If the webhook is not registered with the external system, the <code>create</code> method gets executed.</li> <li><code>create</code>: This method gets called if the <code>checkExist</code> method returns false (if the webhook with the current path does not exist in the external system). This method registers the webhook in the external system and stores the webhook ID in Workflow\u00b2.</li> <li><code>delete</code>: This method gets called when the trigger is either stopped manually or when the workflow is deactivated. It uses the ID previously persisted by either the create or the checkExist method to delete the webhook from the external system.</li> </ul> <p></p>"},{"location":"workflow/integrations/creating-nodes/code/create-trigger-node/#wait-for-new-events-to-trigger-the-workflow","title":"Wait for new events to trigger the workflow","text":"<p>Every time the external system notifies us about a change, by making an HTTP Request to the URL we previously registered in the <code>create</code> method, the <code>execute</code> method is called. Within this method, we have access to the request object and everything it contains. For example, body, headers, querystring, etc. The data the method returns is the data we want the rest of the workflow to have access to.</p> <p>Let\u2019s see how this would look for our current use-case:</p> <ol> <li>Go to <code>packages/nodes-base/nodes/Autofriend</code>, create a file named <code>GenericFunctions.ts</code>, and paste the following code.</li> </ol> <pre><code>import {\nOptionsWithUri,\n} from 'request';\n\nimport {\nIExecuteFunctions,\nILoadOptionsFunctions,\n} from 'n8n-core';\n\nimport {\nIDataObject,\nIHookFunctions,\nIWebhookFunctions,\n} from 'n8n-workflow';\n\nexport async function autofriendApiRequest(this: IExecuteFunctions | IWebhookFunctions | IHookFunctions | ILoadOptionsFunctions, method: string, resource: string, body: any = {}, query: IDataObject = {}, uri?: string, option: IDataObject = {}): Promise&lt;any&gt; { // tslint:disable-line:no-any\n\nconst credentials = await this.getCredentials('autofriendApi') as IDataObject;\n\nconst apiKey = credentials.apiKey;\n\nconst endpoint = 'https://api2.autopilothq.com/v1';\n\nconst options: OptionsWithUri = {\nheaders: {\n'Content-Type': 'application/json',\nautopilotapikey: apiKey,\n},\nmethod,\nbody,\nqs: query,\nuri: uri || `${endpoint}${resource}`,\njson: true,\n};\nif (!Object.keys(body).length) {\ndelete options.body;\n}\nif (!Object.keys(query).length) {\ndelete options.qs;\n}\n\ntry {\nreturn await this.helpers.request!(options);\n} catch (error) {\nif (error.response) {\nconst errorMessage = error.response.body.message || error.response.body.description || error.message;\nthrow new Error(`Autopilot error response [${error.statusCode}]: ${errorMessage}`);\n}\nthrow error;\n}\n}\n</code></pre> <ol> <li>Go to <code>packages/nodes-base/nodes/AutofriendTrigger.node.ts</code> and add the following code after the property description.</li> </ol> <p><pre><code>// @ts-ignore\nwebhookMethods = {\ndefault: {\nasync checkExists(this: IHookFunctions): Promise&lt;boolean&gt; {\nconst webhookData = this.getWorkflowStaticData('node');\nconst webhookUrl = this.getNodeWebhookUrl('default');\nconst event = this.getNodeParameter('event') as string;\nconst { hooks: webhooks } = await autofriendApiRequest.call(this, 'GET', '/hooks');\nfor (const webhook of webhooks) {\nif (webhook.target_url === webhookUrl &amp;&amp; webhook.event === snakeCase(event)) {\nwebhookData.webhookId = webhook.hook_id;\nreturn true;\n}\n}\nreturn false;\n},\nasync create(this: IHookFunctions): Promise&lt;boolean&gt; {\nconst webhookUrl = this.getNodeWebhookUrl('default');\nconst webhookData = this.getWorkflowStaticData('node');\nconst event = this.getNodeParameter('event') as string;\nconst body: IDataObject = {\nevent: snakeCase(event),\ntarget_url: webhookUrl,\n};\nconst webhook = await autofriendApiRequest.call(this, 'POST', '/hook', body);\nwebhookData.webhookId = webhook.hook_id;\nreturn true;\n},\nasync delete(this: IHookFunctions): Promise&lt;boolean&gt; {\nconst webhookData = this.getWorkflowStaticData('node');\ntry {\nawait autofriendApiRequest.call(this, 'DELETE', `/hook/${webhookData.webhookId}`);\n} catch (error) {\nreturn false;\n}\ndelete webhookData.webhookId;\nreturn true;\n},\n},\n};\n}\n</code></pre> 3. Replace the <code>webhook</code> function with the following. <pre><code>async webhook(this: IWebhookFunctions): Promise&lt;IWebhookResponseData&gt; {\nconst req = this.getRequestObject();\nreturn {\nworkflowData: [\nthis.helpers.returnJsonArray(req.body),\n],\n};\n</code></pre> 4. In the same file, uncomment the code snippet on the top to import <code>autoFriendApiRequest</code> and <code>snakeCase</code>. 5. Stop the current Doc\u00b2 process by pressing <code>ctrl + c</code> in the terminal where you are running Workflow\u00b2. 6. Run the project using a tunnel by entering <code>./packages/cli/bin/n8n start --tunnel</code> in the terminal. Access the Doc\u00b2 Editor UI at localhost:5678. 7. Enter the API key in the credentials. Instructions to find the API Key can be found here. 8. Go to the workflow editor, save your workflow, and execute the node.</p> <p></p> <ol> <li>Log into Autopilot and update a contact. Keep in mind that this should be done within two minutes after you executed the node. After that time frame, the webhook will be unregistered automatically and you will not be able to receive the event. If it takes you longer than that, please execute the node and update the contact again.</li> </ol> <p></p> <p>The trigger node is now receiving events. Sometimes it might take a bit longer for the payload to arrive.</p> <p>You probably noticed that this time we did not run the project using <code>npm run dev</code>, but instead using <code>./packages/cli/bin/n8n start --tunnel</code>.</p> <p>Since our server is running locally, we need a tool that lets us proxy all requests to our local machine so that Doc\u00b2 receives and handles the events from the external service (Autopilot). This gets achieved using a tunnel. The details on how a tunnel works are out of the scope of this tutorial. If you want to know about it, you can check this link. Keep in mind that the tunnel is meant for development purposes only and should not be used in production.</p>"},{"location":"workflow/integrations/creating-nodes/code/create-trigger-node/#summary","title":"Summary","text":"<p>In this tutorial, we implemented one functionality of the Autofriend webhook API. We made the node show up in the Editor UI and in the Create Node menu with Autofriend's branding. Then, we added the fields necessary to create a webhook in the external service. We also added the credentials so that the API Key could be stored safely. Finally, we mapped all the parameters to the Autofriend API.</p>"},{"location":"workflow/integrations/creating-nodes/code/create-trigger-node/#next-steps","title":"Next steps","text":"<p>Once you have created the node and want to contribute to Doc\u00b2, please check the Node Review Checklist. Make sure you complete the checklist before creating a pull request.</p>"},{"location":"workflow/integrations/creating-nodes/code/create-wf-nodes-module/","title":"Creating WF-nodes-module","text":"<p>In this guide, you\u2019ll learn to create a custom WF-nodes-module that can be installed separately alongside your Doc\u00b2 instance. The WF-nodes-module is an npm package that contains the node. Your custom node will get loaded automatically when Doc\u00b2 starts.</p> <p>Consider creating WF-nodes-module if any of the following conditions satisfy your needs: - The nodes are only for yourself, your organization, or a small group of people. - The nodes require external dependencies that are not already available in Workflow\u00b2.</p> <p>NOTE: WF-nodes-module can only be installed in self-hosted Doc\u00b2 instances. This functionality is currently not available ondoc2app.cloudintegration.eu or the desktop app. There are plans to introduce this functionality in the future.</p>"},{"location":"workflow/integrations/creating-nodes/code/create-wf-nodes-module/#prerequisites","title":"Prerequisites","text":"<p>You may already be familiar with creating nodes in Workflow\u00b2. If you are unfamiliar with how to create Doc\u00b2 nodes, you can learn about it following the instructions mentioned in the Creating Your First Node tutorial.</p> <p>Install the following tools:</p> <ul> <li>Git: You can find instructions on how to install Git here.</li> <li>Node.js and npm: You can find instructions how to install both using nvm (Node Version Manager) here. The current minimum version is <code>14.15</code>. In case you already have Node.js and npm installed, you can check the current version with the following command:     <pre><code>node -v\nnpm -v\n</code></pre></li> </ul> <p>NOTE: Use node version <code>14.x</code> and npm version <code>6.x</code>. If using npm version <code>7+</code>, you must enable legacy peer dependencies by setting: <code>npm config set legacy-peer-deps true</code>.</p> <ul> <li>Lerna: You can install lerna globally with the following command:     <pre><code>npm i\n</code></pre></li> </ul>"},{"location":"workflow/integrations/creating-nodes/code/create-wf-nodes-module/#create-custom-wf-nodes-module","title":"Create custom wf-nodes-module","text":"<p>You can create multiple wf-nodes-modules. Each individual wf-nodes-module should get created in a separate folder since they are different npm packages. A single wf-nodes-module can contain multiple nodes. If you\u2019re creating multiple nodes in the same module, as a best practice create each node in a separate folder.</p> <p>In this tutorial, you will create an n8n-nodes-module for the OpenWeatherMap API. You will name it n8n-nodes-weather.</p> <p>To quickly get started, clone the example starter using the following command:</p> <pre><code>git clone https://github.com/n8n-io/n8n-nodes-starter.git n8n-nodes-weather.\n</code></pre> <p>After the repo gets cloned, open the package.json file, and update the value of the name by replacing <code>n8n-nodes-starter</code> with <code>n8n-nodes-weather</code>.</p> <p>NOTE: The name of the module has to start with <code>n8n-nodes-</code>.</p> <p>Open the cloned repository in your code editor, and create a new folder called <code>Weather</code>, inside the nodes folder. Create <code>Weather.node.ts</code> file inside the Weather folder and paste the following code:</p> <pre><code>import {\nIExecuteFunctions,\n} from 'n8n-core';\nimport {\nIDataObject,\nINodeExecutionData,\nINodeType,\nINodeTypeDescription,\nNodeApiError,\nNodeOperationError,\n} from 'n8n-workflow';\n\nimport { OptionsWithUri } from 'request';\n\nexport class Weather implements INodeType {\ndescription: INodeTypeDescription = {\ndisplayName: 'Weather',\nname: 'Weather',\nicon: 'fa:sun',\ngroup: ['input'],\nversion: 1,\ndescription: 'Gets current and future weather information',\ndefaults: {\nname: 'Weather',\ncolor: '#554455',\n},\ninputs: ['main'],\noutputs: ['main'],\ncredentials: [\n{\nname: 'weatherApi',\nrequired: true,\n},\n],\nproperties: [\n{\ndisplayName: 'Operation',\nname: 'operation',\ntype: 'options',\noptions: [\n{\nname: 'Current Weather',\nvalue: 'currentWeather',\ndescription: 'Returns the current weather data',\n},\n{\nname: '5 day Forecast',\nvalue: '5DayForecast',\ndescription: 'Returns the weather data for the next 5 days',\n},\n],\ndefault: 'currentWeather',\ndescription: 'The operation to perform.',\n},\n{\ndisplayName: 'Format',\nname: 'format',\ntype: 'options',\noptions: [\n{\nname: 'Imperial',\nvalue: 'imperial',\ndescription: 'Fahrenheit | miles/hour',\n},\n{\nname: 'Metric',\nvalue: 'metric',\ndescription: 'Celsius | meter/sec',\n},\n{\nname: 'Scientific',\nvalue: 'standard',\ndescription: 'Kelvin | meter/sec',\n},\n],\ndefault: 'metric',\ndescription: 'The format in which format the data should be returned.',\n},\n\n// ----------------------------------\n//         Location Information\n// ----------------------------------\n{\ndisplayName: 'Location Selection',\nname: 'locationSelection',\ntype: 'options',\noptions: [\n{\nname: 'City Name',\nvalue: 'cityName',\n},\n{\nname: 'City ID',\nvalue: 'cityId',\n},\n{\nname: 'Coordinates',\nvalue: 'coordinates',\n},\n{\nname: 'Zip Code',\nvalue: 'zipCode',\n},\n],\ndefault: 'cityName',\ndescription: 'How to define the location for which to return the weather.',\n},\n\n{\ndisplayName: 'City',\nname: 'cityName',\ntype: 'string',\ndefault: '',\nplaceholder: 'berlin,de',\nrequired: true,\ndisplayOptions: {\nshow: {\nlocationSelection: [\n'cityName',\n],\n},\n},\ndescription: 'The name of the city to return the weather of.',\n},\n\n{\ndisplayName: 'City ID',\nname: 'cityId',\ntype: 'number',\ndefault: 160001123,\nrequired: true,\ndisplayOptions: {\nshow: {\nlocationSelection: [\n'cityId',\n],\n},\n},\ndescription: 'The id of city to return the weather of. List can be downloaded here: http://bulk.openweathermap.org/sample/',\n},\n\n{\ndisplayName: 'Latitude',\nname: 'latitude',\ntype: 'string',\ndefault: '',\nplaceholder: '13.39',\nrequired: true,\ndisplayOptions: {\nshow: {\nlocationSelection: [\n'coordinates',\n],\n},\n},\ndescription: 'The latitude of the location to return the weather of.',\n},\n\n{\ndisplayName: 'Longitude',\nname: 'longitude',\ntype: 'string',\ndefault: '',\nplaceholder: '52.52',\nrequired: true,\ndisplayOptions: {\nshow: {\nlocationSelection: [\n'coordinates',\n],\n},\n},\ndescription: 'The longitude of the location to return the weather of.',\n},\n\n{\ndisplayName: 'Zip Code',\nname: 'zipCode',\ntype: 'string',\ndefault: '',\nplaceholder: '10115,de',\nrequired: true,\ndisplayOptions: {\nshow: {\nlocationSelection: [\n'zipCode',\n],\n},\n},\ndescription: 'The id of city to return the weather of. List can be downloaded here: http://bulk.openweathermap.org/sample/',\n},\n\n{\ndisplayName: 'Language',\nname: 'language',\ntype: 'string',\ndefault: '',\nplaceholder: 'en',\nrequired: false,\ndescription: 'The two letter language code to get your output in (eg. en, de, ...).',\n},\n\n],\n};\n\n\nasync execute(this: IExecuteFunctions): Promise&lt;INodeExecutionData[][]&gt; {\nconst items = this.getInputData();\nconst returnData: IDataObject[] = [];\n\nconst credentials = await this.getCredentials('openWeatherMapApi');\n\nif (credentials === undefined) {\nthrow new NodeOperationError(this.getNode(), 'No credentials got returned!');\n}\n\nconst operation = this.getNodeParameter('operation', 0) as string;\n\nlet endpoint = '';\nlet locationSelection;\nlet language;\n\nlet qs: IDataObject;\n\nfor (let i = 0; i &lt; items.length; i++) {\n\ntry {\n\n// Set base data\nqs = {\nAPPID: credentials.accessToken,\nunits: this.getNodeParameter('format', i) as string,\n};\n\n// Get the location\nlocationSelection = this.getNodeParameter('locationSelection', i) as string;\nif (locationSelection === 'cityName') {\nqs.q = this.getNodeParameter('cityName', i) as string;\n} else if (locationSelection === 'cityId') {\nqs.id = this.getNodeParameter('cityId', i) as number;\n} else if (locationSelection === 'coordinates') {\nqs.lat = this.getNodeParameter('latitude', i) as string;\nqs.lon = this.getNodeParameter('longitude', i) as string;\n} else if (locationSelection === 'zipCode') {\nqs.zip = this.getNodeParameter('zipCode', i) as string;\n} else {\nthrow new NodeOperationError(this.getNode(), `The locationSelection \"${locationSelection}\" is not known!`);\n}\n\n// Get the language\nlanguage = this.getNodeParameter('language', i) as string;\nif (language) {\nqs.lang = language;\n}\n\nif (operation === 'currentWeather') {\n// ----------------------------------\n//         currentWeather\n// ----------------------------------\n\nendpoint = 'weather';\n} else if (operation === '5DayForecast') {\n// ----------------------------------\n//         5DayForecast\n// ----------------------------------\n\nendpoint = 'forecast';\n} else {\nthrow new NodeOperationError(this.getNode(), `The operation \"${operation}\" is not known!`);\n}\n\nconst options: OptionsWithUri = {\nmethod: 'GET',\nqs,\nuri: `https://api.openweathermap.org/data/2.5/${endpoint}`,\njson: true,\n};\n\nlet responseData;\ntry {\nresponseData = await this.helpers.request(options);\n} catch (error) {\nthrow new NodeApiError(this.getNode(), error);\n}\n\n\nreturnData.push(responseData as IDataObject);\n\n} catch (error) {\nif (this.continueOnFail()) {\nreturnData.push({json:{ error: error.message }});\ncontinue;\n}\nthrow error;\n}\n}\n\nreturn [this.helpers.returnJsonArray(returnData)];\n}\n}\n</code></pre> <p>The OpenWeatherMap API requires credentials to return results successfully. Create <code>WeatherApi.credentials.ts</code> file in the Credentials folder and paste the following code:</p> <pre><code>import {\nICredentialType,\nINodeProperties,\n} from 'n8n-workflow';\n\n\nexport class WeatherApi implements ICredentialType {\nname = 'weatherApi';\ndisplayName = 'Weather API';\nproperties: INodeProperties[] = [\n{\ndisplayName: 'Access Token',\nname: 'accessToken',\ntype: 'string',\ndefault: '',\n},\n];\n}\n</code></pre> <p>Add the newly created node and the credential to the package.json file. Add <code>\"dist/nodes/Weather/Weather.node.js\"</code> to the nodes array in the n8n object (<code>n8n.nodes</code>). Similarly, add <code>\"dist/credentials/WeatherApi.credentials.js\"</code> to the credentials array in the n8n object (<code>n8n.credentials</code>).</p>"},{"location":"workflow/integrations/creating-nodes/code/create-wf-nodes-module/#develop-and-test-the-module","title":"Develop and test the module","text":"<p>Once you\u2019ve created the n8n-nodes-module, you need to build the code and publish the package locally to test it. Run the following commands:</p> <pre><code># Install dependencies\nnpm install\n\n# Build the code\nnpm run build\n\n# \"Publish\" the package locally\nnpm link\n</code></pre> <p>NOTE: If you get permission errors, run the command as a root user with <code>sudo</code>, for example <code>sudo npm link</code>.</p> <p>In the terminal, open the folder where you installed Workflow\u00b2. Run the following command to install the locally published module.</p> <pre><code># \"Install\" the above locally published module\nnpm link n8n-nodes-weather\n</code></pre> <p>Start Doc\u00b2 with the below command</p> <pre><code>./node_modules/n8n/bin/n8n start\n</code></pre> <p>You will now be able to test and use your newly created n8n-nodes-module.</p>"},{"location":"workflow/integrations/creating-nodes/code/create-wf-nodes-module/#publish-the-n8n-nodes-module","title":"Publish the n8n-nodes-module","text":"<p>As mentioned, the n8n-nodes-module is an npm package. To make it available to others, you can publish it to the npm registry. Refer to the Publishing unscoped public packages guide to learn about publishing packages.</p> <p>Following the steps mentioned above, you can create multiple nodes within a single n8n-nodes-module. You can also create nodes that require dependencies that are not present in Workflow\u00b2. When creating an n8n-nodes-module make sure that you follow the following guidelines:</p> <ul> <li>The name of the module should start with <code>n8n-nodes-</code>.</li> <li>The <code>package.json</code> file has to contain a key <code>n8n</code> with the paths to nodes and credentials.</li> <li>The module has to be installed alongside Workflow\u00b2.</li> </ul>"},{"location":"workflow/integrations/creating-nodes/code/create-wf-nodes-module/#use-the-n8n-nodes-module-in-production","title":"Use the n8n-nodes-module in production","text":"<p>Once you test and publish your n8n-nodes-module you would want to use it in your production environment.</p> <p>If you\u2019re running Doc\u00b2 via Docker, you will have to create a Docker image with the node module installed in Workflow\u00b2. Follow the steps below to create your Docker image:</p> <ol> <li>Create a Dockerfile and paste the code from this Dockerfile.</li> <li>Add the following command in your Dockerfile before the font installation command.</li> </ol> <pre><code>RUN cd /usr/local/lib/node_modules/n8n &amp;&amp; npm install n8n-nodes-weather\n</code></pre> <p>Your Dockerfile should be as follow:</p> <pre><code>FROM node:14.15-alpine\n\n# ARG N8N_VERSION\n\nRUN if [ -z \"$N8N_VERSION\" ] ; then echo \"The N8N_VERSION argument is missing!\" ; exit 1; fi\n\n# Update everything and install needed dependencies\nRUN apk add --update graphicsmagick tzdata git tini su-exec\n\n# # Set a custom user to not have Doc\u00b2 run as root\nUSER root\n\n# Install Doc\u00b2 and the also temporary all the packages\n# it needs to build it correctly.\nRUN apk --update add --virtual build-dependencies python build-base ca-certificates &amp;&amp; \\\nnpm_config_user=root npm install -g full-icu Doc\u00b2 &amp;&amp; ls -a &amp;&amp; \\\napk del build-dependencies \\\n&amp;&amp; rm -rf /root /tmp/* /var/cache/apk/* &amp;&amp; mkdir /root;\n\n# Install n8n-nodes-weather module\nRUN cd /usr/local/lib/node_modules/n8n &amp;&amp; npm install n8n-nodes-weather\n\n# Install fonts\nRUN apk --no-cache add --virtual fonts msttcorefonts-installer fontconfig &amp;&amp; \\\nupdate-ms-fonts &amp;&amp; \\\nfc-cache -f &amp;&amp; \\\napk del fonts &amp;&amp; \\\nfind  /usr/share/fonts/truetype/msttcorefonts/ -type l -exec unlink {} \\; \\\n&amp;&amp; rm -rf /root /tmp/* /var/cache/apk/* &amp;&amp; mkdir /root\n\nENV NODE_ICU_DATA /usr/local/lib/node_modules/full-icu\n\nWORKDIR /data\n\nCOPY docker-entrypoint.sh /docker-entrypoint.sh\nRUN chmod +x /docker-entrypoint.sh\nENTRYPOINT [\"tini\", \"--\", \"/docker-entrypoint.sh\"]\n\nEXPOSE 5678/tcp\n</code></pre> <p>NOTE: Replace n8n-nodes-weather with the name of your n8n-nodes-module</p> <ol> <li>Build your Docker image using the <code>docker build .</code> command.</li> </ol> <p>You will now be able to use your n8n-nodes-module in Docker.</p> <p>If you\u2019re running either by installing it globally or via PM2, make sure that you install your n8n-nodes-module inside Workflow\u00b2. Doc\u00b2 will find the module and load it automatically.</p>"},{"location":"workflow/integrations/creating-nodes/code/http-helpers/","title":"Making HTTP Requests","text":"<p>While creating nodes it is very commonn to call external APIs or make HTTP requests to other services.</p> <p>This plays a major role during node development, maintenance, and improvements.</p> <p>We provide a very flexible helper for making HTTP requests that abstracts away most of the complexity with a simple to use interface.</p>","tags":["Workflow\u00b2","HTTP Requests"]},{"location":"workflow/integrations/creating-nodes/code/http-helpers/#how-to-use","title":"How to use","text":"<p>In the node code, inside the <code>execute</code> function you can easily call:</p> <pre><code>const response = await this.helpers.httpRequest(options);\n</code></pre> <p>Where <code>options</code> is an object in this format:</p> <pre><code>{\nurl: string;\nheaders?: object;\nmethod?: 'GET' | 'POST' | 'PUT' | 'DELETE' | 'HEAD';\nbody?: FormData | Array | string | number | object | Buffer | URLSearchParams;\nqs?: object;\narrayFormat?: 'indices' | 'brackets' | 'repeat' | 'comma';\nauth?: {\nusername: string,\npassword: string,\n};\ndisableFollowRedirect?: boolean;\nencoding?: 'arraybuffer' | 'blob' | 'document' | 'json' | 'text' | 'stream';\nskipSslCertificateValidation?: boolean;\nreturnFullResponse?: boolean;\nproxy?: {\nhost: string;\nport: string | number;\nauth?: {\nusername: string;\npassword: string;\n},\nprotocol?: string;\n};\ntimeout?: number;\njson?: boolean;\n}   </code></pre> <p>Where <code>url</code> is the only mandatory field. The default method is <code>GET</code>.</p> <p>Some notes about the possible fields:</p> <ul> <li>body: You can use a regular Javascript Object for JSON payload, a Buffer for file uploads, an instance of FormData for <code>multipart/form-data</code> and <code>URLSearchParams</code> for <code>application/x-www-form-urlencoded</code>.</li> <li>headers: A simple key-value pair.  <ul> <li>If <code>body</code> is an instance of <code>FormData</code> then <code>content-type: multipart/form-data</code> is injected automatically.  </li> <li>If <code>body</code> is an instance of <code>URLSearchParams</code>, then <code>content-type: application/x-www-form-urlencoded</code> is added.  </li> <li>To override this behavior, you can set any <code>content-type</code> header you wish and it won't be overridden.</li> </ul> </li> <li>arrayFormat: If your query string contains an array of data, let's say <code>const qs = {IDs: [15,17]}</code>, the values set to <code>arrayFormat</code> define how it will be sent.  <ul> <li><code>indices</code> (default): <code>{ a: ['b', 'c'] }</code> will be formatted as <code>a[0]=b&amp;a[1]=c</code> </li> <li><code>brackets</code>: <code>{ a: ['b', 'c'] }</code> will be formatted as <code>a[]=b&amp;a[]=c</code> </li> <li><code>repeat</code>: <code>{ a: ['b', 'c'] }</code> will be formatted as <code>a=b&amp;a=c</code> </li> <li><code>comma</code>: <code>{ a: ['b', 'c'] }</code> will be formatted as <code>a=b,c</code></li> </ul> </li> <li>auth: Used for Basic auth. Provide <code>username</code> and <code>password</code>.</li> <li>disableFollowRedirect: By default, we'll follow redirects. You can set this to false to prevent this from happening</li> <li>skipSslCertificateValidation: Used for calling HTTPS services without proper certificate</li> <li>returnFullResponse: Instead of returning only the body, returns an object with more data in the following format: <code>{body: body, headers: object, statusCode: 200, statusMessage: 'OK'}</code></li> <li>encoding: We usually detect the content type correctly but you can specify <code>arrayBuffer</code> to receive a Buffer you can read from and interact with.</li> </ul>","tags":["Workflow\u00b2","HTTP Requests"]},{"location":"workflow/integrations/creating-nodes/code/http-helpers/#deprecation-of-the-previous-helper","title":"Deprecation of the previous helper","text":"<p>The previous helper implementation using <code>this.helpers.request(options)</code> used and exposed the <code>request-promise</code> library which was deprecated.</p> <p>In an effort to keep maximum compatibility, we made a transparent conversion to another library called <code>axios</code>.</p> <p>If you are having issues, please report them in our Community Forums or on Github.</p> <p>Also, you can temporarily enable Doc\u00b2 to use the deprecated library by setting the environment variable <code>N8N_USE_DEPRECATED_REQUEST_LIB=true</code>.</p> <p>Please note: This behavior is permanent and we will be removing the <code>request-promise</code> library entirely in the future so please report any errors you have so we can fix them.</p>","tags":["Workflow\u00b2","HTTP Requests"]},{"location":"workflow/integrations/creating-nodes/code/http-helpers/#migration-guide-to-the-new-helper","title":"Migration guide to the new helper","text":"<p>As mentioned above, the previous helper is deprecated and will be replaced in the future. The new helper is much more robust, library agnostic, and easier to use.</p> <p>New nodes should all use the new helper, and if you have built custom nodes we strongly suggest you migrate to the new helper. Here are the main considerations when migrating:</p> <ul> <li>Only <code>url</code> is accepted. Previously <code>uri</code> was also accepted</li> <li><code>encoding: null</code> now must be <code>encoding: arrayBuffer</code></li> <li><code>rejectUnauthorized: false</code> is now <code>skipSslCertificateValidation: true</code></li> <li>Use <code>body</code> according to <code>content-type</code> headers to clarify what is being sent</li> <li><code>resolveWithFullResponse</code> is now <code>returnFullResponse</code> and has similar behavior</li> </ul>","tags":["Workflow\u00b2","HTTP Requests"]},{"location":"workflow/integrations/creating-nodes/code/http-helpers/#example","title":"Example","text":"<p>For an example, please check the Mattermost node.</p>","tags":["Workflow\u00b2","HTTP Requests"]},{"location":"workflow/integrations/creating-nodes/code/node-developer-cli/","title":"Using the Node Dev CLI","text":"<p>Using the Node Dev CLI makes sense if you do not want to ever share the node that you create. For example, for internal systems or something very specific to your internal tooling. Also, the CLI only works if there are no additional dependencies required by the node as it does not support installing additional node modules.</p> <p>If that is not the case, it is best to do follow the creating your first node tutorial or create your own custom node-package.</p>"},{"location":"workflow/integrations/creating-nodes/code/node-developer-cli/#create-the-first-basic-node","title":"Create the first basic node","text":"<ol> <li>Install the n8n-node-dev CLI: <code>npm install -g n8n-node-dev</code></li> <li>Create and go into the newly created folder in which you want to keep the code of the node</li> <li>Use CLI to create boilerplate node code: <code>n8n-node-dev new</code></li> <li>Answer the questions (the \u201cExecute\u201d node type is the regular node type that you probably want to create).     It will then create the node in the current folder.</li> <li>Program\u2026 Add the functionality to the node</li> <li>Build the node and copy to correct location: <code>n8n-node-dev build</code>     That command will build the JavaScript version of the node from the TypeScript code and copy it to the user folder where custom nodes get read from <code>~/.n8n/custom/</code></li> <li>Restart Doc\u00b2 and refresh the window so that the new node gets displayed</li> </ol>"},{"location":"workflow/integrations/creating-nodes/code/node-developer-cli/#create-own-custom-n8n-nodes-module","title":"Create own custom n8n-nodes-module","text":"<p>If you want to create multiple custom nodes which are either:</p> <ul> <li>Only for yourself/your company</li> <li>Are only useful for a small number of people</li> <li>Require many or large dependencies</li> </ul> <p>Note</p> <p>To learn how to develop and test n8n-nodes-module, refer to the Create n8n-nodes-module documentation.</p> <p>It is best to create your own <code>n8n-nodes-module</code> which can be installed separately. That is an npm package that contains the nodes and is set up in a way that Doc\u00b2 can automatically find and load them on startup.</p> <p>When creating such a module the following rules have to be followed that n8n can automatically find the nodes in the module:</p> <ul> <li>The name of the module has to start with <code>n8n-nodes-</code></li> <li>The <code>package.json</code> file has to contain a key <code>n8n</code> with the paths to nodes and credentials</li> <li>The module has to be installed alongside n8n</li> </ul> <p>An example starter module which contains one node and credentials and implements the above can be found here:</p> <p>https://github.com/n8n-io/n8n-nodes-starter</p>"},{"location":"workflow/integrations/creating-nodes/code/node-developer-cli/#setup-to-use-n8n-nodes-module","title":"Setup to use n8n-nodes-module","text":"<p>To use a custom <code>n8n-nodes-module</code>, it needs to be installed alongside Workflow\u00b2. For example like this:</p> <pre><code># Create folder for Doc\u00b2 installation\nmkdir my-n8n\ncd my-n8n\n\n# Install n8n\nnpm install n8n\n\n# Install custom nodes module\nnpm install n8n-nodes-my-custom-nodes\n\n# Start n8n\nn8n\n</code></pre>"},{"location":"workflow/integrations/creating-nodes/code/node-developer-cli/#developmenttesting-of-custom-n8n-nodes-module","title":"Development/Testing of custom n8n-nodes-module","text":"<p>This works in the same way as for any other npm module.</p> <p>Execute in the folder which contains the code of the custom <code>n8n-nodes-module</code> which should be loaded with n8n:</p> <pre><code># Build the code\nnpm run build\n\n# \"Publish\" the package locally\nnpm link\n</code></pre> <p>Then in the folder in which Doc\u00b2 is installed:</p> <pre><code># \"Install\" the above locally published module\nnpm link n8n-nodes-my-custom-nodes\n\n# Start n8n\nn8n\n</code></pre>"},{"location":"workflow/integrations/creating-nodes/code/node-linter/","title":"Nodelinter","text":"<p>Nodelinter is an extensible static analysis tool for checking your Doc\u00b2 node files to ensure Doc\u00b2 recommended best practices are followed when developing new nodes.</p> <p>This includes rules for: * Alphabetization of node parameters and options * Casing for display names and descriptions * Default values per parameter type * Required and optional key-value pairs</p> <p>See the full linting list here for more details.</p>"},{"location":"workflow/integrations/creating-nodes/code/node-linter/#installation-and-usage","title":"Installation and Usage","text":"<p>Nodelinter is a dependency of the <code>nodes-base</code> package and available upon activating Workflow\u00b2.</p> <p>You can run Nodelinter from the <code>packages/nodes-base</code> directory as follows:</p> <pre><code>npm run nodelinter -- --&lt;options&gt;\n</code></pre> <p>Keep in mind</p> <p>Be sure to run Nodelinter and verify your code before submitting a pull request.</p>"},{"location":"workflow/integrations/creating-nodes/code/node-linter/#options","title":"Options","text":"Option Description Example <code>--target</code> Path of the file or directory to lint Lint a single file:<code>--target=nodes/Stripe/Stripe.node.ts</code> Lint all files in a directory:<code>--target=nodes/Stripe</code> <code>--config</code> Path of the custom config to use <code>--config=/Users/john/Documents/myConfig.json</code> <code>--patterns</code> Lintable file patterns <code>--patterns:.node.ts,Description.ts</code> <code>--print</code> Print output to JSONA custom filename can optionally be specified. <code>--print=myLintOutput</code> <code>--errors-only</code> Enable error logs only <code>--warnings-only</code> Enable warning logs only <code>--infos-only</code> Enable info logs only"},{"location":"workflow/integrations/creating-nodes/code/node-linter/#custom-config","title":"Custom config","text":"<p>The Nodelinter default config can be overridden to, for example, change the areas and issues linted.</p> <p>To do so create a JSON file containing the key values you want to override. For example:</p> <pre><code>{\n\"target\": \"/Users/john/n8n/packages/nodes-base/nodes/Notion/Notion.node.ts\",\n\"patterns\": [\".node.ts\"],\n\"sortMethod\": \"lineNumber\",\n\"lintings\": {\n\"PARAM_DESCRIPTION_MISSING_WHERE_OPTIONAL\": {\n\"enabled\": false\n},\n\"NAME_WITH_NO_CAMELCASE\": {\n\"enabled\": false\n}\n}\n}\n</code></pre> <p>Name this file <code>nodelinter.config.json</code> and place it anywhere in your <code>nodes-base</code> directory and it will be automatically detected. Alternatively, you can specify the custom config file and location using the <code>--config</code> option.</p>"},{"location":"workflow/integrations/creating-nodes/code/node-linter/#lint-exceptions","title":"Lint exceptions","text":"<p>You can create exceptions for individual lines of code from any or all linting rules as follows:</p> <pre><code>// nodelinter-ignore-next-line &lt;LINTING_NAME&gt; &lt;LINTING_NAME&gt;\n</code></pre> <p>If no specific linting name is provided that line will be excepted from all rules. For example:</p> <p>Exception for one rule: <pre><code>// nodelinter-ignore-next-line PARAM_DESCRIPTION_WITH_EXCESS_WHITESPACE\ndescription: 'Time zone used in the response.    The default is the time zone of the calendar.',\n</code></pre></p> <p>Exception for all rules: <pre><code>// nodelinter-ignore-next-line\ndescription: 'Time zone used in the response.    The default is the time zone of the calendar.',\n</code></pre></p>"},{"location":"workflow/integrations/creating-nodes/code/review-checklist/","title":"Node Review Checklist","text":"<p>If you want to create a new node for a service - that's great, thank you! We recommend you take a look at the existing nodes to get an idea of how your code should look and work like.</p> <p>There are several things to keep in mind when creating the node. To help you, we prepared a checklist that covers the requirements for creating nodes, from preparation to submission.</p> <p>Make sure you tick the boxes below before submitting a node for review, as this will help our team review your PR easier and faster.</p>"},{"location":"workflow/integrations/creating-nodes/code/review-checklist/#preparation","title":"Preparation","text":"<p> Set up your editor for code formatting (indentation, new lines, linting). If you use Visual Studio Code, you can use the TSLint extension for linting.  Get credentials (e.g., Client ID, Client Secret, API key, user login, user password, website URL) for the service you are building a node for.</p>"},{"location":"workflow/integrations/creating-nodes/code/review-checklist/#development","title":"Development","text":"<p> Open a pull request as early as possible with <code>WIP</code> in the pull request title.  If you are creating a node requested by a community member, make sure to comment on the feature request in the community forum.  Ensure complementary operations to each resource (e.g., create, delete) have been added.  Ensure the node works with multiple items via one input.  Ensure the parameters have the correct type.  Mind the defaults: if the service has a default as true, keep it as true. Changing default values can break the existing workflows of the users.  Check if the node disposes of everything properly, in particular, if connections were properly closed.  Check your code using Nodelinter to ensure a clean lint before submitting your pull request</p>"},{"location":"workflow/integrations/creating-nodes/code/review-checklist/#testing","title":"Testing","text":"<p> Test \"create\" and \"update\" operations with all fields/operations.  Test the <code>continueOnFail</code> option with a Function node. (For example, a Widget node has a GET operation that takes a widgetId and returns information on the widget. To test that the workflow continues on fail, set the Widget node to continue on fail, create a Function node, return a valid and an invalid widgetId, connect the Function node to Widget node, and run the workflow. The Widget node should show two items: one with information on the widget and another one with the error from having passed an invalid ID.)</p>"},{"location":"workflow/integrations/creating-nodes/code/review-checklist/#code-formatting","title":"Code formatting","text":"<p> Ensure the branch lints cleanly by running <code>npm run lint</code>.  Ensure the indentation is correct. Check this in the editorconfig.  Ensure there are no extra spaces. Check this in the editorconfig.  Code comment dividers inside if-branches.  Use \"create/delete\" verbs for operations, except for tags, where you should use \"add/remove\".</p>"},{"location":"workflow/integrations/creating-nodes/code/review-checklist/#errors-and-outputs","title":"Errors and Outputs","text":"<p> Ensure empty API responses return <code>{ success: true }</code>.  Ensure the error responses are handled and displayed correctly (e.g., malformed requests, requests with invalid credentials) and use the current format. You can check this by making failing requests to the API.  Check if the response can be simplified and add a simplify function (e.g., SecurityScorecard node).  Ensure the response from <code>Create</code> is consistent with <code>Get</code>.  Ensure the response from <code>Get All</code> is consistent with <code>Get</code>.</p>"},{"location":"workflow/integrations/creating-nodes/code/review-checklist/#presentation","title":"Presentation","text":"<p> Ensure the primary menu contains only required parameters.  Ensure a JSON object is not shown in a single column in Table view.  Make sure all GetAll operations have the fields <code>return</code> and <code>limit</code>.  Ensure the property subtitle is set.  Make sure the pagination (if any) is working correctly. Set Limit 1.</p>"},{"location":"workflow/integrations/creating-nodes/code/review-checklist/#writing","title":"Writing","text":"<p> Ensure all descriptions are correct and end with a period.  Ensure that most descriptions exist, excluding redundant ones.  Ensure IDs in displayNames are capitalized (i.e.: \"IDs\", not \"ids\" or \"Ids\").  Ensure that IDs, if multiple, have descriptive qualifiers.  Ensure the <code>name</code> property in <code>description</code> in the node class is written in camelCase.  Ensure the file name and the Class name are identical.</p>"},{"location":"workflow/integrations/creating-nodes/code/review-checklist/#branding","title":"Branding","text":"<p> Ensure the name of the service is written correctly (e.g., \"GitHub\" not \"Github\"). If the node is a trigger node, ensure it is named as such, by adding \"Trigger\" after the service name (e.g., \"Trello Trigger\").  Ensure the logo is either a PNG or SVG, ideally the latter. Vecta is a good website to find SVGs of different applications.  If the logo is an SVG, ensure the canvas is a perfect square. If the logo is PNG, ensure it is 60x60 pixels and compressed.  Ensure the border color of the node matches the branding of the service.</p>"},{"location":"workflow/integrations/creating-nodes/code/review-checklist/#nice-to-haves-optional","title":"Nice-to-haves (optional)","text":"<p> Add handler for <code>continueOnFail</code>. This feature is included in some of the newest nodes (e.g Lemlist node) to continue the workflow even if the node's execution fails.  Remove <code>required: false</code> and <code>description: ''</code> in the node descriptions (e.g., Lemlist node).  At call site, specify first <code>body</code> and then <code>qs</code>.  At call site, prepend the endpoint with slash <code>/</code> (e.g., \"/campaign\").</p>"},{"location":"workflow/integrations/creating-nodes/code/standards/","title":"General Guidelines","text":"<p>Please make sure that everything works correctly and that no unnecessary code gets added. It is important to follow the following guidelines:</p>"},{"location":"workflow/integrations/creating-nodes/code/standards/#do-not-change-incoming-data","title":"Do not change incoming data","text":"<p>Never change the incoming data a node receives (which can be queried with <code>this.getInputData()</code>) as it gets shared by all nodes. If data has to get added, changed or deleted it has to be cloned and the new data returned. If that is not done, sibling nodes which execute after the current one will operate on the altered data and would process different data than they were supposed to. It is however not needed to always clone all the data. If a node for, example only, changes only the binary data but not the JSON data, a new item can be created which reuses the reference to the JSON item.</p> <p>An example can be seen in the code of the ReadBinaryFile-Node.</p>"},{"location":"workflow/integrations/creating-nodes/code/standards/#write-nodes-in-typescript","title":"Write nodes in TypeScript","text":"<p>All code of Doc\u00b2 is written in TypeScript and hence, the nodes should also be written in TypeScript. That makes development easier, faster, and avoids at least some bugs.</p>"},{"location":"workflow/integrations/creating-nodes/code/standards/#use-the-built-in-request-library","title":"Use the built in request library","text":"<p>Some third-party services have their own libraries on npm which make it easier to create an integration. It can be quite tempting to use them. The problem with those is that you add another dependency and not only one, you add but also all the dependencies of the dependencies. This means more and more code gets added, has to get loaded, can introduce security vulnerabilities, bugs, and so on. So please use the built-in module which can be used like this:</p> <pre><code>const response = await this.helpers.httpRequest(options);\n</code></pre> <p>The full documentation and migration instructions from the deprecated <code>this.helpers.request</code> can be found here.</p> <p>That is using the npm package <code>request-promise-native</code> which is the basic npm <code>request</code> module but with promises. For a full set of <code>options</code> consider looking at the underlying <code>request</code> options documentation.</p>"},{"location":"workflow/integrations/creating-nodes/code/standards/#reuse-parameter-names","title":"Reuse parameter names","text":"<p>When a node can perform multiple operations like edit and delete some kind of entity, for both operations, it would need an entity-id. Do not call them \"editId\" and \"deleteId\", call them \"id\". Doc\u00b2 can handle multiple parameters with the same name without a problem as long as only one is visible. To make sure that is the case, the \"displayOptions\" can be used. By keeping the same name, the value can be kept if a user switches the operation from \"edit\" to \"delete\".</p>"},{"location":"workflow/integrations/creating-nodes/code/standards/#create-an-additional-fields-parameter","title":"Create an 'Additional Fields' parameter","text":"<p>Some nodes may need a lot of options. Add only the very important ones to the top level and for all others, create an 'Additional Fields' parameter where they can be added if needed. This ensures that the interface stays clean and does not unnecessarily confuse people. A good example of that would be the XML node.</p>"},{"location":"workflow/integrations/creating-nodes/code/standards/#follow-existing-parameter-naming-guideline","title":"Follow existing parameter naming guideline","text":"<p>There is not much of a guideline yet but if your node can do multiple things, call the parameter which sets the behavior either \"mode\" (like \"Merge\" and \"XML\" node) or \"operation\" like the most other ones. If these operations can be done on different resources (like \"User\" or \"Order) create a \"resource\" parameter (like \"Pipedrive\" and \"Trello\" node).</p>"},{"location":"workflow/integrations/creating-nodes/code/standards/#node-icons","title":"Node icons","text":"<p>Check existing node icons as a reference when you create own ones. The resolution of an icon should be 60x60px and saved as PNG.</p>"},{"location":"workflow/integrations/creating-nodes/code/standards/#node-versions","title":"Node versions","text":"<p>n8n now supports node versioning and it's a blast! You can make changes to existing nodes without breaking the existing behavior by introducing a new version. You can check an example of a versioned node by browsing the Mattermost node.</p> <p>Node versioning in a glimpse:</p> <ul> <li>The main node file should now extend <code>NodeVersionedType</code> instead of <code>INodeType</code></li> <li>The main node file now only contains a base description containing the <code>defaultVersion</code> (usually the latest) and a list of versions</li> <li>We recommend you use <code>v1</code>, <code>v2</code>, etc. for version folder names</li> <li>A new code separation has been created and can be seen in the Mattermost node above. Highlights:  <ul> <li><code>actions</code> folder with description and implementation of each possible action  </li> <li><code>methods</code> is an optional folder with the loading dynamic parameters' functions  </li> <li><code>transport</code> is a folder with all the communication implementation</li> </ul> </li> </ul> <p>Note: For the <code>actions</code> folder we recommend using <code>resources</code> and <code>operations</code> names as subfolders hierarchically. For the implementation an description you can use separate files. Our recommendation is to use <code>execute.ts</code> and <code>description.ts</code> as file names. This make browsing through the code a lot easier. This can be simplified for nodes that have a less complicated structure.</p>"},{"location":"workflow/integrations/creating-nodes/code/troubleshooting-node-development/","title":"Troubleshooting","text":""},{"location":"workflow/integrations/creating-nodes/code/troubleshooting-node-development/#credentials","title":"Credentials","text":""},{"location":"workflow/integrations/creating-nodes/code/troubleshooting-node-development/#error-message-credentials-of-type-are-not-known","title":"Error message: 'Credentials of type \u201c*\u201d are not known'","text":"<p>Ensure that the name in the credentials array matches the name used in the property name of the credentials' class.</p> <p></p>"},{"location":"workflow/integrations/creating-nodes/code/troubleshooting-node-development/#editor-ui","title":"Editor UI","text":""},{"location":"workflow/integrations/creating-nodes/code/troubleshooting-node-development/#error-message-there-was-a-problem-loading-init-data-api-server-can-not-be-reached-it-is-probably-down","title":"Error message: 'There was a problem loading init data: API-Server can not be reached. It is probably down'","text":"<ul> <li>Ensure that the node\u2019s file name, class\u2019s name, and node\u2019s folder name matches the path added to <code>packages/nodes-base/package.json</code>.</li> <li>Ensure the names used in the <code>displayOptions</code> property are names used by UI elements in the node.</li> </ul>"},{"location":"workflow/integrations/creating-nodes/code/troubleshooting-node-development/#node-icon-doesnt-show-up-in-the-create-node-menu-and-the-editor-ui","title":"Node icon doesn't show up in the Create Node menu and the Editor UI","text":"<ul> <li>Ensure that the icon is in the same folder as the node.</li> <li>Ensure that it's either in PNG or SVG format.</li> <li>When the icon is referenced in the 'icon' property, ensure that it includes the logo extension (<code>.png</code> or <code>.svg</code>) and that it is preceded by the world <code>file:</code>. For example, <code>file:friendGrid.png</code> or <code>file:friendGrid.svg</code>.</li> </ul>"},{"location":"workflow/integrations/creating-nodes/code/troubleshooting-node-development/#node-icon-does-not-fit-correctly","title":"Node icon does not fit correctly","text":"<ul> <li>If you are using an SVG file, make sure the canvas size is square. You can find instructions to change the canvas size of an SVG file using GIMP here.</li> <li>If you are using a PNG file, make sure that it's 60x60 pixels.</li> </ul>"},{"location":"workflow/integrations/creating-nodes/code/troubleshooting-node-development/#node-does-not-show-up-in-the-create-node-menu","title":"Node does not show up in the Create Node menu","text":"<p>Ensure that the node is registered in the <code>packages/nodes-base/package.json</code> file.</p>"},{"location":"workflow/integrations/creating-nodes/code/troubleshooting-node-development/#changes-to-the-description-properties-do-not-show-in-the-ui-on-refreshing","title":"Changes to the description properties do not show in the UI on refreshing","text":"<p>Every time a change is made to the description properties, you have to stop the current Doc\u00b2 process (ctrl + c) and run it again (npm run dev).</p>"},{"location":"workflow/integrations/creating-nodes/code/ui-elements/","title":"Node UI Elements","text":"<p>n8n provides a set of predefined UI components (based on a JSON file) that allow users to input all sorts of data types. Currently, the following UI elements are available in Workflow\u00b2.</p> <p>[[toc]]</p>"},{"location":"workflow/integrations/creating-nodes/code/ui-elements/#string","title":"String","text":"<p>The <code>string</code> type is used to input string values.</p> <p>Basic configuration</p> <pre><code>{\ndisplayName: Name, // The value the user would see in the UI\nname: name, // The name use to reference the element UI within the code\ntype: string,\nrequired: true, // Whether the field is required or not\ndefault: 'n8n', // Value that would be set by default\ndescription: 'The name of the user',\n},\n</code></pre> <p></p> <p>Variation for inputting passwords</p> <pre><code>{\ndisplayName: 'Password',\nname: 'password',\ntype: 'string',\nrequired: true,\ntypeOptions: {\npassword: true,\n},\ndefault: '',\ndescription: `User's password`,\n\n},\n</code></pre> <p></p> <p>Variation with multiple rows</p> <pre><code>{\ndisplayName: 'Description',\nname: 'description',\ntype: 'string',\nrequired: true,\ntypeOptions: {\nrows: 4,\n},\ndefault: '',\ndescription: 'Description',\n},\n</code></pre> <p></p>"},{"location":"workflow/integrations/creating-nodes/code/ui-elements/#number","title":"Number","text":"<p>The <code>number</code> type is used to input numbers.</p> <p>Basic configuration</p> <pre><code>{\ndisplayName: 'Age',\nname: 'age',\ntype: 'number',\nrequired: true,\ntypeOptions: {\nmaxValue: 10,\nminValue: 0,\nnumberStepSize: 1,\n},\ndefault: 10,\ndescription: 'Your current age',\n},\n</code></pre> <p></p> <p>Variation with decimal points</p> <pre><code>{\ndisplayName: 'Amount',\nname: 'amount',\ntype: 'number',\nrequired: true,\ntypeOptions: {\nnumberPrecision: 2,\n},\ndefault: 10.00,\ndescription: 'Your current amount',\n},\n</code></pre> <p></p>"},{"location":"workflow/integrations/creating-nodes/code/ui-elements/#collection","title":"Collection","text":"<p>The <code>collection</code> type is used to input a collection of fields. For example, additional fields (or optional fields).</p> <pre><code>{\ndisplayName: 'Filters',\nname: 'filters',\ntype: 'collection',\nplaceholder: 'Add Field',\ndefault: {},\noptions: [\n{\ndisplayName: 'Type',\nname: 'type',\ntype: 'options',\noptions: [\n{\nname: 'Automated',\nvalue: 'automated',\n},\n{\nname: 'Past',\nvalue: 'past',\n},\n{\nname: 'Upcoming',\nvalue: 'upcoming',\n},\n],\ndefault: '',\n},\n],\n},\n</code></pre> <p></p>"},{"location":"workflow/integrations/creating-nodes/code/ui-elements/#datetime","title":"Datetime","text":"<p>The <code>dateTime</code> type provides a calendar from which you can pick a specific date and time.</p> <pre><code>{\ndisplayName: 'Modified Since',\nname: 'modified_since',\ntype: 'dateTime',\ndefault: '',\ndescription: 'The date and time when the file was last modified',\n},\n</code></pre> <p></p>"},{"location":"workflow/integrations/creating-nodes/code/ui-elements/#boolean","title":"Boolean","text":"<p>The <code>boolean</code> type is used to input a value that is either true or false. It is shown as a toggle that can be either on or off.</p> <pre><code>{\ndisplayName: 'Wait for Image',\nname: 'waitForImage',\ntype: 'boolean',\ndefault: true, // Initial state of the toggle\ndescription: 'Whether to wait for the image or not',\n},\n</code></pre> <p></p>"},{"location":"workflow/integrations/creating-nodes/code/ui-elements/#color","title":"Color","text":"<p>The <code>color</code> type provides a color palette from which a specific color can be selected.</p> <pre><code>{\ndisplayName: 'Background Color',\nname: 'backgroundColor',\ntype: 'color',\ndefault: '', // Initially selected color\n},\n</code></pre> <p></p>"},{"location":"workflow/integrations/creating-nodes/code/ui-elements/#options","title":"Options","text":"<p>The <code>options</code> type is used to provide options from which a single one has to be selected.</p> <pre><code>{\ndisplayName: 'Resource',\nname: 'resource',\ntype: 'options',\noptions: [\n{\nname: 'Image',\nvalue: 'image',\n},\n{\nname: 'Template',\nvalue: 'template',\n},\n],\ndefault: 'image', // The initially selected option\ndescription: 'Resource to consume',\n},\n</code></pre> <p></p>"},{"location":"workflow/integrations/creating-nodes/code/ui-elements/#multi-options","title":"Multi Options","text":"<p>The <code>multiOptions</code> type is used to provide options from which many can be selected.</p> <pre><code>{\ndisplayName: 'Events',\nname: 'events',\ntype: 'multiOptions',\noptions: [\n{\nname: 'Plan Created',\nvalue: 'planCreated',\n},\n{\nname: 'Plan Deleted',\nvalue: 'planDeleted',\n},\n],\ndefault: [], // Initially selected options\ndescription: 'The events to be monitored',\n},\n</code></pre> <p></p>"},{"location":"workflow/integrations/creating-nodes/code/ui-elements/#fixed-collection","title":"Fixed Collection","text":"<p>The `fixedCollection? type is used to present groups of fields that are semantically related.</p> <pre><code>{\ndisplayName: 'Metadata',\nname: 'metadataUi',\nplaceholder: 'Add Metadata',\ntype: 'fixedCollection',\ndefault: '',\ntypeOptions: {\nmultipleValues: true,\n},\ndescription: '',\noptions: [\n{\nname: 'metadataValues',\ndisplayName: 'Metadata',\nvalues: [\n{\ndisplayName: 'Name',\nname: 'name',\ntype: 'string',\ndefault: 'Name of the metadata key to add.',\n},\n{\ndisplayName: 'Value',\nname: 'value',\ntype: 'string',\ndefault: '',\ndescription: 'Value to set for the metadata key.',\n},\n],\n},\n],\n},\n</code></pre> <p></p>"},{"location":"workflow/integrations/creating-nodes/code/ui-elements/#json","title":"JSON","text":"<p>The <code>json</code> type is used to input data formatted as JSON.</p> <pre><code>{\ndisplayName: 'Content (JSON)',\nname: 'content',\ntype: 'json',\ndefault: '',\ndescription: '',\n},\n</code></pre> <p></p>"},{"location":"workflow/integrations/credentials/","title":"Overview","text":"<p>This section contains step-by-step information about authenticating the different nodes in Workflow\u00b2.</p>"},{"location":"workflow/integrations/credentials/actionNetwork/","title":"Action Network","text":"<p>You can use these credentials to authenticate the following nodes:</p> <ul> <li>Action Network</li> </ul>","tags":["Workflow\u00b2","Action Network"]},{"location":"workflow/integrations/credentials/actionNetwork/#prerequisites","title":"Prerequisites","text":"<ul> <li>Create an Action Network account.</li> <li>Contact Action Network to become a partner and enable API access.</li> </ul>","tags":["Workflow\u00b2","Action Network"]},{"location":"workflow/integrations/credentials/actionNetwork/#using-api-key","title":"Using API key","text":"<p>After becoming an Action Network partner:</p> <ol> <li>Open your Action Network dashboard.</li> <li>From the Start Organizing menu navigate to Details &gt; API &amp; Sync.</li> <li>Use the dropdown to select the list you want to generate a key for, your personal list or that of any groups you are an administrator of.</li> <li>From the Your API Key section, generate a new API key:</li> </ol> <p></p> <ol> <li>Copy your new key and use it with your Action Network node credentials in Workflow\u00b2.</li> </ol>","tags":["Workflow\u00b2","Action Network"]},{"location":"workflow/integrations/credentials/activeCampaign/","title":"ActiveCampaign","text":"<p>You can use these credentials to authenticate the following nodes with ActiveCampaign. - ActiveCampaign - Active Campaign Trigger</p>","tags":["Workflow\u00b2","ActiveCampaign"]},{"location":"workflow/integrations/credentials/activeCampaign/#prerequisites","title":"Prerequisites","text":"<p>Create an ActiveCampaign account.</p>","tags":["Workflow\u00b2","ActiveCampaign"]},{"location":"workflow/integrations/credentials/activeCampaign/#using-access-token","title":"Using Access Token","text":"<ol> <li>Open your ActiveCampaign dashboard.</li> <li>Click on the gears icon on the bottom left to open the Settings.</li> <li>Click on the Developer option under the Settings panel.</li> <li>In the Developer Settings, copy the 'Key' and 'URL' under the \u2018API Access\u2019 panel.</li> <li>Use these credentials with your ActiveCampaign node credentials in Workflow\u00b2.</li> </ol>","tags":["Workflow\u00b2","ActiveCampaign"]},{"location":"workflow/integrations/credentials/acuityScheduling/","title":"Acuity Scheduling","text":"<p>You can use these credentials to authenticate the following nodes with Acuity Scheduling. - Acuity Scheduling Trigger</p>"},{"location":"workflow/integrations/credentials/acuityScheduling/#prerequisites","title":"Prerequisites","text":"<p>Create an Acuity Scheduling account.</p>"},{"location":"workflow/integrations/credentials/acuityScheduling/#using-oauth","title":"Using OAuth","text":"<p>\u26c5\ufe0f Note fordoc2app.cloudintegration.eu users</p> <p>You'll only need to enter the Credentials Name and click on the circle button in the OAuth section to connect your Acuity Scheduling account to Workflow\u00b2.</p> <ol> <li>Visit the Acuity OAuth2 Account Registration page.</li> <li>Enter a name in the Account Name field.</li> <li>Enter your email address in the Email Address field.</li> <li>Enter your URL in the Website field.</li> <li>Enter a description in the Application Description field.</li> <li>Copy your OAuth Callback URL from the 'Create New Credentials' screen in Doc\u00b2 and paste in the Callback URIs section.</li> <li>Click on the Register button.</li> <li>Use the provided Client ID and the Client Secret with your Acuity Scheduling OAuth2 API credentials in Workflow\u00b2.</li> <li>Click on the circle button in the OAuth section to connect your Acuity Scheduling account to Workflow\u00b2.</li> <li>Click the Save button to save your credentials.</li> </ol> <p></p>"},{"location":"workflow/integrations/credentials/acuityScheduling/#using-access-token","title":"Using Access Token","text":"<ol> <li>Open your Acuity Scheduling dashboard.</li> <li>Click on 'Integrations' in the left sidebar.</li> <li>Scroll down and click on 'view credentials' under the API section.</li> <li>Copy the User ID and API Key from the pop-up that is displayed.</li> <li>Use these credentials with your Acuity Scheduling node credentials in Workflow\u00b2.</li> </ol>"},{"location":"workflow/integrations/credentials/affinity/","title":"Affinity","text":"<p>You can use these credentials to authenticate the following nodes with Affinity. - Affinity - Affinity Trigger</p>","tags":["Workflow\u00b2","Affinity"]},{"location":"workflow/integrations/credentials/affinity/#prerequisites","title":"Prerequisites","text":"<p>Create an Affinity account.</p>","tags":["Workflow\u00b2","Affinity"]},{"location":"workflow/integrations/credentials/affinity/#using-access-token","title":"Using Access Token","text":"<ol> <li>Open your Affinity dashboard.</li> <li>Open hamburger menu on the top left.</li> <li>Click on Settings.</li> <li>Click on API.</li> <li>Click on 'Generate an API Key\u2019 button.</li> <li>Use the API key with your Affinity node credentials in Workflow\u00b2.</li> </ol>","tags":["Workflow\u00b2","Affinity"]},{"location":"workflow/integrations/credentials/agileCrm/","title":"Agile CRM","text":"<p>You can use these credentials to authenticate the following nodes with Agile CRM. - Agile CRM</p>","tags":["Workflow\u00b2","Agile CRM"]},{"location":"workflow/integrations/credentials/agileCrm/#prerequisites","title":"Prerequisites","text":"<p>Create an Agile CRM account.</p>","tags":["Workflow\u00b2","Agile CRM"]},{"location":"workflow/integrations/credentials/agileCrm/#using-access-token","title":"Using Access Token","text":"<ol> <li>Open your Agile CRM dashboard.</li> <li>Click on your user icon in the top right of the window.</li> <li>Click on the Admin Settings button.</li> <li>Click on the 'Developers &amp; Api' button in the bottom left.</li> <li>Use the REST API key, your registered email and your Agile CRM subdomain (for instance, n8n) with your Agile CRM node credentials in Workflow\u00b2.</li> </ol>","tags":["Workflow\u00b2","Agile CRM"]},{"location":"workflow/integrations/credentials/airtable/","title":"Airtable","text":"<p>You can use these credentials to authenticate the following nodes with Airtable. - Airtable - Airtable Trigger</p>","tags":["Workflow\u00b2","Airtable"]},{"location":"workflow/integrations/credentials/airtable/#prerequisites","title":"Prerequisites","text":"<p>Create an Airtable account.</p>","tags":["Workflow\u00b2","Airtable"]},{"location":"workflow/integrations/credentials/airtable/#using-api-key","title":"Using API Key","text":"<ol> <li>Open your Airtable dashboard.</li> <li>Click on the user icon on the top right and select 'Account' from the dropdown list.</li> <li>Under the API section, click on the Generate API key button.</li> <li>Copy the displayed API key.</li> <li>Enter a name for your credentials in the Credentials Name field in the 'Airtable API' credentials in Workflow\u00b2.</li> <li>Paste the API key in the API Key field in the 'Airtable API' credentials in Workflow\u00b2.</li> <li>Click on the Create button to create the credentials.</li> </ol> <p>The following video demonstrates the steps mentioned above.</p>","tags":["Workflow\u00b2","Airtable"]},{"location":"workflow/integrations/credentials/amqp/","title":"AMQP","text":"<p>You can use these credentials to authenticate the following nodes with AMQP. - AMQP Sender - AMQP Trigger</p>","tags":["Workflow\u00b2","AMQP"]},{"location":"workflow/integrations/credentials/amqp/#prerequisites","title":"Prerequisites","text":"<p>You need to have a AMQP 1.0 compatible message broker installed.</p>","tags":["Workflow\u00b2","AMQP"]},{"location":"workflow/integrations/credentials/amqp/#using-activemq-connection","title":"Using ActiveMQ connection","text":"<p>Use your Hostname, Port, User, and Password as the AMQP Sender credential data in Workflow\u00b2.</p> <p>Note: The default username for ActiveMQ is <code>admin</code> and the default password is <code>admin</code>.</p>","tags":["Workflow\u00b2","AMQP"]},{"location":"workflow/integrations/credentials/apiTemplateIo/","title":"APITemplate.io","text":"<p>You can use these credentials to authenticate the following nodes with APITemplate.io. - APITemplate.io</p>","tags":["Workflow\u00b2","APITemplate.io"]},{"location":"workflow/integrations/credentials/apiTemplateIo/#prerequisites","title":"Prerequisites","text":"<p>Create an APITemplate.io account.</p>","tags":["Workflow\u00b2","APITemplate.io"]},{"location":"workflow/integrations/credentials/apiTemplateIo/#using-api-key","title":"Using API Key","text":"<ol> <li>Open your APITemplate.io dashboard.</li> <li>Click on API Integration on the left sidebar.</li> <li>Click on the Copy text button to copy the API key.</li> <li>Enter a name for your credentials in the Credentials Name field in the 'APITemplate.io API' credentials in Workflow\u00b2.</li> <li>Paste the API key in the API Key field in the 'APITemplate.io API' credentials in Workflow\u00b2.</li> <li>Click on the Create button to create the credentials.</li> </ol> <p>The following video demonstrates the steps mentioned above.</p>","tags":["Workflow\u00b2","APITemplate.io"]},{"location":"workflow/integrations/credentials/asana/","title":"Asana","text":"<p>You can use these credentials to authenticate the following nodes with Asana. - Asana - Asana Trigger</p>","tags":["Workflow\u00b2","Asana"]},{"location":"workflow/integrations/credentials/asana/#prerequisites","title":"Prerequisites","text":"<p>Create an Asana account.</p>","tags":["Workflow\u00b2","Asana"]},{"location":"workflow/integrations/credentials/asana/#using-oauth","title":"Using OAuth","text":"<p>\u26c5\ufe0f Note fordoc2app.cloudintegration.eu users</p> <p>You'll only need to enter the Credentials Name and click on the circle button in the OAuth section to connect your Asana account to Workflow\u00b2.</p> <ol> <li>Open your Asana dashboard.</li> <li>Click on your user icon in the top right.</li> <li>Click on My Profile Settings...</li> <li>Click on the Apps tab.</li> <li>Click on Manage Developer Apps.</li> <li>Click on New App.</li> <li>Enter a name, accept the API terms and conditions, and click on Create app.</li> <li>Copy the OAuth Callback URL from Doc\u00b2 and paste it in the Redirect URLs field and click Add.</li> <li>Use the provided Client ID and Client secret with your Asana OAuth2 API credentials in Workflow\u00b2.</li> <li>Click on the circle button in the OAuth section to connect an Asana account to Workflow\u00b2.</li> <li>Click the Save button to save your credentials in Workflow\u00b2.</li> </ol> <p></p>","tags":["Workflow\u00b2","Asana"]},{"location":"workflow/integrations/credentials/asana/#using-access-token","title":"Using Access Token","text":"<ol> <li>Open your Asana dashboard.</li> <li>Click on your user icon in the top right of the window.</li> <li>Click on My Profile Settings.</li> <li>Click on the Apps tab.</li> <li>Click on Manage Developer Apps.</li> <li>Click on New access token under the Personal access tokens section.</li> <li>Enter a name for the access token and agree to the API terms and conditions.</li> <li>Click on the Create token button.</li> <li>Copy the token and use it with your Asana node credentials in Workflow\u00b2.</li> </ol>","tags":["Workflow\u00b2","Asana"]},{"location":"workflow/integrations/credentials/automizy/","title":"Automizy","text":"<p>You can use these credentials to authenticate the following nodes with Automizy. - Automizy</p>","tags":["Workflow\u00b2","Automizy"]},{"location":"workflow/integrations/credentials/automizy/#prerequisites","title":"Prerequisites","text":"<p>Create an Automizy account.</p>","tags":["Workflow\u00b2","Automizy"]},{"location":"workflow/integrations/credentials/automizy/#using-api-token","title":"Using API Token","text":"<ol> <li>Access the Automizy dashboard.</li> <li>Click on Settings in the bottom left corner and select 'API Token'.</li> <li>Click on the CREATE TOKEN button.</li> <li>Click on the COPY &amp; CLOSE button to copy the API token.</li> <li>Use this API token with your Auotmizy node credentials in Workflow\u00b2.</li> </ol>","tags":["Workflow\u00b2","Automizy"]},{"location":"workflow/integrations/credentials/autopilot/","title":"Autopilot","text":"<p>You can use these credentials to authenticate the following nodes with Autopilot. - Autopilot - Autopilot Trigger</p>","tags":["Workflow\u00b2","Autopilot"]},{"location":"workflow/integrations/credentials/autopilot/#prerequisites","title":"Prerequisites","text":"<p>Create an Autopilot account.</p>","tags":["Workflow\u00b2","Autopilot"]},{"location":"workflow/integrations/credentials/autopilot/#using-api-key","title":"Using API Key","text":"<ol> <li>Open your Autopilot dashboard.</li> <li>Click on the gears icon on the left sidebar to open the Settings menu.</li> <li>Click on Autopilot API.</li> <li>Click on the Generate button to create the API key.</li> <li>Copy the displayed API key.</li> <li>Enter a name for your credentials in the Credentials Name field in the 'Autopilot API' credentials in Workflow\u00b2.</li> <li>Paste the API key in the API Key field in the 'Autopilot API' credentials in Workflow\u00b2.</li> <li>Click on the Create button to create the credentials.</li> </ol> <p>The following video demonstrates the steps mentioned above.</p>","tags":["Workflow\u00b2","Autopilot"]},{"location":"workflow/integrations/credentials/aws/","title":"AWS","text":"<p>You can use these credentials to authenticate the following nodes with AWS.</p> <ul> <li>AWS DynamoDB</li> <li>AWS Lambda</li> <li>AWS Rekognition</li> <li>AWS S3</li> <li>AWS SES</li> <li>AWS SNS</li> <li>AWS SNS Trigger</li> <li>AWS SQS</li> <li>AWS Textract</li> <li>AWS Transcribe</li> </ul>","tags":["Workflow\u00b2","AWS"]},{"location":"workflow/integrations/credentials/aws/#prerequisites","title":"Prerequisites","text":"<p>Create an AWS account.</p>","tags":["Workflow\u00b2","AWS"]},{"location":"workflow/integrations/credentials/aws/#using-access-token","title":"Using Access Token","text":"<ol> <li>Open your AWS Management Console.</li> <li>Click on your name on the top right and select 'My Security Credentials' from the dropdown.</li> <li>Click on the Create New Access Key button, under the Access keys (access key ID and secret access key) section</li> <li>Click on the Show Access Key button.</li> <li>Copy the displayed Access Key ID.</li> <li>Enter the name for your credentials in the Credentials Name field in the 'AWS' credentials in Workflow\u00b2.</li> <li>Paste the Access Key ID in the Access Key ID field in the 'AWS' credentials in Workflow\u00b2.</li> <li>Copy the secret access key from your AWS console.</li> <li>Paste the secret access key in the Secret Access Key field in the 'AWS' credentials in Workflow\u00b2.</li> <li>Click the Create button to save your credentials in Workflow\u00b2.</li> </ol> <p>Note: If you're running your AWS instance in a different region, please update the Region field accordingly.</p> <p>The following video demonstrates the steps mentioned above.</p>","tags":["Workflow\u00b2","AWS"]},{"location":"workflow/integrations/credentials/bambooHr/","title":"BambooHR","text":"<p>You can use these credentials to authenticate the following nodes with BambooHR. - BambooHR</p>","tags":["Workflow\u00b2","BambooHR"]},{"location":"workflow/integrations/credentials/bambooHr/#prerequisites","title":"Prerequisites","text":"<p>Create a BambooHR account.</p>","tags":["Workflow\u00b2","BambooHR"]},{"location":"workflow/integrations/credentials/bambooHr/#using-access-token","title":"Using Access Token","text":"<ol> <li>Log into your BambooHR account and click on the profile image in the upper right corner.</li> <li>Click on API Keys.</li> <li>Click on Add New Key, enter any name for your new key and hit Generate Key.</li> <li>Copy the key provided by BambooHR into the API Key field of n8n's credentials modal.</li> <li>Enter your subdomain (the part between <code>https://</code> and <code>.bamboohr.com</code>) in the Subdomain field of n8n's credentials modal.</li> <li>Click on Save.</li> </ol>","tags":["Workflow\u00b2","BambooHR"]},{"location":"workflow/integrations/credentials/bannerbear/","title":"Bannerbear","text":"<p>You can use these credentials to authenticate the following nodes with Bannerbear. - Bannerbear</p>","tags":["Workflow\u00b2","Bannerbear"]},{"location":"workflow/integrations/credentials/bannerbear/#prerequisites","title":"Prerequisites","text":"<p>Create a BannerBear account.</p>","tags":["Workflow\u00b2","Bannerbear"]},{"location":"workflow/integrations/credentials/bannerbear/#using-access-token","title":"Using Access Token","text":"<ol> <li>Open your BannerBear dashboard.</li> <li>Click on \"Create New Project\".</li> <li>Enter Project name and save.</li> <li>Click on Projects tab and enter the newly creatted project.</li> <li>Click on \"Settings / API Key\".</li> <li>Use API key in your Bannerbear node credentials in Workflow\u00b2.</li> </ol>","tags":["Workflow\u00b2","Bannerbear"]},{"location":"workflow/integrations/credentials/baserow/","title":"Baserow","text":"<p>You can use these credentials to authenticate the following node:</p> <ul> <li>Baserow</li> </ul>","tags":["Workflow\u00b2","Baserow"]},{"location":"workflow/integrations/credentials/baserow/#prerequisites","title":"Prerequisites","text":"<p>Create a Baserow account on any hosted Baserow instance or a self hosted instance.</p>","tags":["Workflow\u00b2","Baserow"]},{"location":"workflow/integrations/credentials/baserow/#using-user-account","title":"Using User Account","text":"<ol> <li>In Doc\u00b2, open the Credentials menu item and click on New</li> <li>In the Add new credential dialogue, select Baserow API and click on the Continue button</li> <li>If using the online version of Baserow, leave the Host as <code>https://api/baserow.io</code>, otherwise set it to your self-hosted instance API URL.</li> <li>Enter your Baserow username in the Username field</li> <li>Enter your Baserow password in the Password field</li> <li>Click on the Save button</li> </ol> <p>You can now use this credential in your Baserow nodes.</p>","tags":["Workflow\u00b2","Baserow"]},{"location":"workflow/integrations/credentials/beeminder/","title":"Beeminder","text":"<p>You can use these credentials to authenticate the following nodes with Beeminder. - Beeminder</p>","tags":["Workflow\u00b2","Beeminder"]},{"location":"workflow/integrations/credentials/beeminder/#prerequisites","title":"Prerequisites","text":"<p>Create a Beeminder account.</p>","tags":["Workflow\u00b2","Beeminder"]},{"location":"workflow/integrations/credentials/beeminder/#using-api-key","title":"Using API Key","text":"<ol> <li>Open your Beeminder dashboard.</li> <li>Click on your avatar at the top-right corner.</li> <li>Select 'ACCOUNT SETTINGS' from the dropdown list.</li> <li>Scroll up and click on the APPS &amp; API tab.</li> <li>Copy the Auth Token displayed in the API section.</li> <li>Enter the name for your credentials in the Credentials Name field in the 'Beeminder API' credentials in Workflow\u00b2.</li> <li>Enter your username in the User field.</li> <li>Paste the Auth Token in the Auth Token field.</li> <li>Click on the Save button to save your credentials.</li> </ol> <p>The following video demonstrates the steps mentioned above.</p>","tags":["Workflow\u00b2","Beeminder"]},{"location":"workflow/integrations/credentials/bitbucket/","title":"Bitbucket","text":"<p>You can use these credentials to authenticate the following nodes with Bitbucket. - Bitbucket Trigger</p>","tags":["Workflow\u00b2","Bitbucket"]},{"location":"workflow/integrations/credentials/bitbucket/#prerequisites","title":"Prerequisites","text":"<p>Create an Bitbucket account.</p>","tags":["Workflow\u00b2","Bitbucket"]},{"location":"workflow/integrations/credentials/bitbucket/#using-username-and-password","title":"Using Username and Password","text":"<p>Use the username and application password.</p>","tags":["Workflow\u00b2","Bitbucket"]},{"location":"workflow/integrations/credentials/bitly/","title":"Bitly","text":"<p>You can use these credentials to authenticate the following nodes with Bitly. - Bitly</p>","tags":["Workflow\u00b2","Bitly"]},{"location":"workflow/integrations/credentials/bitly/#prerequisites","title":"Prerequisites","text":"<p>Create a Bitly account.</p>","tags":["Workflow\u00b2","Bitly"]},{"location":"workflow/integrations/credentials/bitly/#using-oauth","title":"Using OAuth","text":"<p>\u26c5\ufe0f Note fordoc2app.cloudintegration.eu users</p> <p>You'll only need to enter the Credentials Name and click on the circle button in the OAuth section to connect your Bitly account to Workflow\u00b2.</p> <ol> <li>Open your Bitly dashboard.</li> <li>Click on your account button in the top right.</li> <li>Click on \"Profile Settings\".</li> <li>Click on \"Registered OAuth Applications\".</li> <li>Click on \"GET REGISTRATION CODE\".</li> <li>Use Client Secret and Client ID in your Bitly node credentials in Workflow\u00b2.</li> <li>Enter Doc\u00b2 provided redirect URL. Redirect URL Explanation here.</li> </ol> <p></p>","tags":["Workflow\u00b2","Bitly"]},{"location":"workflow/integrations/credentials/bitly/#using-access-token","title":"Using Access Token","text":"<ol> <li>Open your Bitly dashboard.</li> <li>Click on your account button in the top right.</li> <li>Click on \"Profile Settings\".</li> <li>Click on \"Generate Access Token\".</li> <li>Enter password.</li> <li>Use the access token in your Bitly node credentials in Workflow\u00b2.</li> </ol>","tags":["Workflow\u00b2","Bitly"]},{"location":"workflow/integrations/credentials/bitwarden/","title":"Bitwarden","text":"<p>You can use these credentials to authenticate the following nodes with Bitwarden. - Bitwarden</p>","tags":["Workflow\u00b2","Bitwarden"]},{"location":"workflow/integrations/credentials/bitwarden/#prerequisites","title":"Prerequisites","text":"<p>Create a Bitwarden organisation account.</p>","tags":["Workflow\u00b2","Bitwarden"]},{"location":"workflow/integrations/credentials/bitwarden/#using-api-key","title":"Using API Key","text":"<ol> <li>Open your Bitwarden vault.</li> <li>Click on your organisation under the ORGANISATIONS section.</li> <li>Click on the Settings tab.</li> <li>Click on the View API key button under the API key section.</li> <li>Enter your master password in the Master password field.</li> <li>Click on the View API key button.</li> <li>Copy the displayed client id.</li> <li>Enter the name for your credentials in the Credentials Name field in the 'Bitwarden API' credentials in Workflow\u00b2.</li> <li>Paste the client id in the Client ID field in the 'Bitwarden API' credentials in Workflow\u00b2.</li> <li>Copy the client secret from Bitwarden.</li> <li>Paste the client secret in the Client Secret field in the 'Bitwarden API' credentials in Workflow\u00b2.</li> <li>Click on the Create button to create your credentials.</li> </ol> <p>Note: If you're hosting Bitwarden on your server, select 'Self-hosted' from the Environment dropdown list. You also need to enter the domain of your hosted instance in the Self-hosted domain field.</p> <p>The following video demonstrates the steps mentioned above.</p>","tags":["Workflow\u00b2","Bitwarden"]},{"location":"workflow/integrations/credentials/box/","title":"Box","text":"<p>You can use these credentials to authenticate the following nodes with Box. - Box - Box Trigger</p>","tags":["Workflow\u00b2","Box"]},{"location":"workflow/integrations/credentials/box/#prerequisites","title":"Prerequisites","text":"<p>Create a Box account.</p>","tags":["Workflow\u00b2","Box"]},{"location":"workflow/integrations/credentials/box/#using-oauth","title":"Using OAuth","text":"<ol> <li>Access the Box Developers Console.</li> <li>Click on the Create New App button.</li> <li>Select 'Custom App' and click Next.</li> <li>Select 'Standard OAuth 2.0 (User Authentication)'and click Next.</li> <li>Enter any other necessary information and click on the Create App button.</li> <li>Copy the 'OAuth Callback URL' provided in the Box OAuth2 API credentials in Doc\u00b2 and paste it in the 'Redirect URI' field in the Box app page.</li> <li>Click the Save Changes button and use the displayed 'Client ID' and the 'Client Secret' with your Box OAuth2 API credentials in Workflow\u00b2.</li> <li>Click on the circle button in the OAuth section to connect a Box account to Workflow\u00b2.</li> <li>Click the Save button to save your credentials in Workflow\u00b2.</li> </ol>","tags":["Workflow\u00b2","Box"]},{"location":"workflow/integrations/credentials/brandfetch/","title":"Brandfetch","text":"<p>You can use these credentials to authenticate the following nodes with Brandfetch. - Brandfetch</p>","tags":["Workflow\u00b2","Brandfetch"]},{"location":"workflow/integrations/credentials/brandfetch/#prerequisites","title":"Prerequisites","text":"<p>Create a Brandfetch account.</p>","tags":["Workflow\u00b2","Brandfetch"]},{"location":"workflow/integrations/credentials/brandfetch/#using-api-key","title":"Using API Key","text":"<ol> <li>Access your Brandfetch dashboard.</li> <li>Click on API on the left sidebar.</li> <li>Select a plan and click on the Get API Key button.</li> <li>Use the App Key with your Brandfetch API credentials in Workflow\u00b2.</li> </ol>","tags":["Workflow\u00b2","Brandfetch"]},{"location":"workflow/integrations/credentials/bubble/","title":"Bubble","text":"<p>You can use these credentials to authenticate the following nodes with Bubble. - Bubble</p>","tags":["Workflow\u00b2","Bubble"]},{"location":"workflow/integrations/credentials/bubble/#prerequisites","title":"Prerequisites","text":"<p>Create a Bubble account.</p> <p>Note: You need a Personal or a higher plan to get access to the Bubble API.</p>","tags":["Workflow\u00b2","Bubble"]},{"location":"workflow/integrations/credentials/bubble/#using-api-key","title":"Using API Key","text":"<ol> <li>Open your Bubble dashboard page.</li> <li>Select an app under the My apps section to open the app.</li> <li>Click on Settings on the left-sidebar.</li> <li>Click on the API tab.</li> <li>Click on the Generate a new API token button.</li> <li>Enter a token name in the API Token Label field.</li> <li>Copy the displayed Private Key.</li> <li>Enter the name for your credentials in the Credentials Name field in the 'Bubble API' credentials in Workflow\u00b2.</li> <li>Paste the Private Key in the API Token field in the 'Bubble API' credentials in Workflow\u00b2.</li> <li>Enter the app name in the APP Name field.</li> <li>Select 'Development' from the Environment dropdown list. If you want to use the 'Live' environment, select 'Live' instead.</li> <li>Click on the Create button to create your credentials.</li> </ol> <p>Note: If you're self-hosting your Bubble app, select 'Self-hosted' from the Hosting dropdown list. You will also need to enter the domain of your hosted instance in the Domain field.</p> <p>The following video demonstrates the steps mentioned above.</p>","tags":["Workflow\u00b2","Bubble"]},{"location":"workflow/integrations/credentials/calendly/","title":"Calendly","text":"<p>You can use these credentials to authenticate the following nodes with Calendly. - Calendly Trigger</p>","tags":["Workflow\u00b2","Calendly"]},{"location":"workflow/integrations/credentials/calendly/#prerequisites","title":"Prerequisites","text":"<p>Create a Calendly premium account.</p>","tags":["Workflow\u00b2","Calendly"]},{"location":"workflow/integrations/credentials/calendly/#using-access-token","title":"Using Access Token","text":"<ol> <li>Open your Calendly dashboard.</li> <li>Click on \"Integrations\".</li> <li>Use API key in your Calendly node credentials in Workflow\u00b2.</li> </ol>","tags":["Workflow\u00b2","Calendly"]},{"location":"workflow/integrations/credentials/chargebee/","title":"Chargebee","text":"<p>You can use these credentials to authenticate the following nodes with Chargebee. - Chargebee - Chargebee Trigger</p>","tags":["Workflow\u00b2","Chargebee"]},{"location":"workflow/integrations/credentials/chargebee/#prerequisites","title":"Prerequisites","text":"<p>Create a Chargebee account.</p>","tags":["Workflow\u00b2","Chargebee"]},{"location":"workflow/integrations/credentials/chargebee/#using-access-token","title":"Using Access Token","text":"<ol> <li>Open your Chargebee dashboard.</li> <li>Click on \"Settings\".</li> <li>Click on \"Configure Chargebee\".</li> <li>Scroll down and click on \"API Keys\".</li> <li>Use selected API key and Account name in your Chargebee node credentials in Workflow\u00b2.</li> </ol>","tags":["Workflow\u00b2","Chargebee"]},{"location":"workflow/integrations/credentials/circleCi/","title":"CircleCI","text":"<p>You can use these credentials to authenticate the following nodes with CircleCI. - CircleCI</p>","tags":["Workflow\u00b2","CircleCI"]},{"location":"workflow/integrations/credentials/circleCi/#prerequisites","title":"Prerequisites","text":"<p>Create a CircleCI account.</p>","tags":["Workflow\u00b2","CircleCI"]},{"location":"workflow/integrations/credentials/circleCi/#using-access-token","title":"Using Access Token","text":"<ol> <li>Access your CircleCI User Settings.</li> <li>Visit the Personal API Tokens section.</li> <li>Click on the Create New Token button.</li> <li>Type in a name for your token and click on the Add API Token button.</li> <li>Copy the generated API Token and use it with your CircleCI API node credentials in Workflow\u00b2.</li> </ol>","tags":["Workflow\u00b2","CircleCI"]},{"location":"workflow/integrations/credentials/ciscoWebex/","title":"Webex by Cisco","text":"<p>You can use these credentials to authenticate the following nodes:</p> <ul> <li>Webex by Cisco</li> <li>Webex by Cisco Trigger</li> </ul>","tags":["Workflow\u00b2","Webex by Cisco"]},{"location":"workflow/integrations/credentials/ciscoWebex/#prerequisites","title":"Prerequisites","text":"<p>Create a Webex by Cisco account.</p>","tags":["Workflow\u00b2","Webex by Cisco"]},{"location":"workflow/integrations/credentials/ciscoWebex/#using-oauth","title":"Using OAuth","text":"<ol> <li>Navigate to Webex for Developers and sign in using your Webex by Cisco account.</li> <li>From the user menu select My Webex Apps, then Create a New App.</li> <li>From the Create a New App page select Create an Integration.</li> <li>Complete the following required fields for your new integration:<ul> <li>Integration Name: Provide a name for your Webex app.</li> <li>Contact Email: Enter your email address.</li> <li>Icon: Provide an icon for your app or select one of the available defaults.</li> <li>Description: Enter a brief description of your app.</li> <li>Redirect URIs: Enter the OAuth Callback URL from the Doc\u00b2 credentials modal.</li> <li>Scopes: Enable the following scopes:<ul> <li><code>spark:rooms_read</code></li> <li><code>spark:messages_write</code></li> <li><code>spark:messages_read</code></li> <li><code>spark:membership_read</code></li> <li><code>spark_membership_write</code></li> <li><code>meeting:recordings_write</code></li> <li><code>meeting:recordings_read</code></li> <li><code>meeting:preferences_read</code></li> <li><code>meeting:schedules_write</code></li> <li><code>meeting:schedules_read</code></li> </ul> </li> </ul> </li> <li>Click Add Integration to create your app.</li> <li>Copy the Client ID and Client Secret for this new app.</li> </ol> <p>From n8n:</p> <ol> <li>Enter a descriptive Credentials Name.</li> <li>Under Credential Data, enter the Client ID and Client Secret obtained above.</li> <li>Under OAuth, click the circle button to initiate authentication. A popup may appear prompting you to login to your Webex by Cisco account.</li> <li>After authentication is complete, click Create to save your new credentials.</li> </ol>","tags":["Workflow\u00b2","Webex by Cisco"]},{"location":"workflow/integrations/credentials/clearbit/","title":"Clearbit","text":"<p>You can use these credentials to authenticate the following nodes with Clearbit. - Clearbit</p>","tags":["Workflow\u00b2","Clearbit"]},{"location":"workflow/integrations/credentials/clearbit/#prerequisites","title":"Prerequisites","text":"<p>Create a Clearbit account.</p>","tags":["Workflow\u00b2","Clearbit"]},{"location":"workflow/integrations/credentials/clearbit/#using-access-token","title":"Using Access Token","text":"<ol> <li>Open your Clearbit dashboard.</li> <li>Click on \"API\".</li> <li>Click on \"Configure Chargebee\".</li> <li>Use selected API key in your Clearbit node credentials in Workflow\u00b2.</li> </ol>","tags":["Workflow\u00b2","Clearbit"]},{"location":"workflow/integrations/credentials/clickUp/","title":"ClickUp","text":"<p>You can use these credentials to authenticate the following nodes with ClickUp. - ClickUp - ClickUp Trigger</p>","tags":["Workflow\u00b2","ClickUp"]},{"location":"workflow/integrations/credentials/clickUp/#prerequisites","title":"Prerequisites","text":"<p>Create a ClickUp account.</p>","tags":["Workflow\u00b2","ClickUp"]},{"location":"workflow/integrations/credentials/clickUp/#using-oauth","title":"Using OAuth","text":"<p>\u26c5\ufe0f Note fordoc2app.cloudintegration.eu users</p> <p>You'll only need to enter the Credentials Name and click on the circle button in the OAuth section to connect your ClickUp account to Workflow\u00b2.</p> <ol> <li>Open your ClickUp dashboard.</li> <li>Click on your profile icon in the bottom left.</li> <li>Click on Integrations under your workspace profile.</li> <li>Click on ClickUp API.</li> <li>Click on the + Create an App button under the ClikcUp API section.</li> <li>Enter the name of your app in the App Name field.</li> <li>Copy the 'OAuth Callback URL' provided in the 'ClickUp OAuth2 API' credentials in Workflow\u00b2.</li> <li>Paste it in the Redirect URL(s) field.</li> <li>Click on the Create App button.</li> <li>Copy the displayed client ID.</li> <li>Enter a name for your credentials in the Credentials Name field in the 'ClickUp OAuth2 API' credentials in Workflow\u00b2.</li> <li>Paste the client ID in the Client ID field in the 'ClickUp OAuth2 API' credentials in Workflow\u00b2.</li> <li>Copy the client secret from ClickUp.</li> <li>Paste the client secret in the Client Secret field in the 'ClickUp OAuth2 API' credentials in Workflow\u00b2.</li> <li>Click on the circle button in the OAuth section to connect a ClickUp account to Workflow\u00b2.</li> <li>Click the Save button to save your credentials in Workflow\u00b2.</li> </ol> <p>The following video demonstrates the steps mentioned above.</p> <p>The following video demonstrates the steps to authenticate the ClickUp node on n8n.cloud.</p>","tags":["Workflow\u00b2","ClickUp"]},{"location":"workflow/integrations/credentials/clickUp/#using-access-token","title":"Using Access Token","text":"<ol> <li>Open the ClickUp dashboard.</li> <li>Click on your profile icon in the bottom left.</li> <li>Click on Apps under your user profile.</li> <li>Click on the Generate button under the API Token section.</li> <li>Click on the Copy button to copy the token.</li> <li>Enter a name for your credentials in the Credentials Name field in the 'ClickUp API' credentials in Workflow\u00b2.</li> <li>Paste the token in the Access Token field in the 'ClickUp API' credentials in Workflow\u00b2.</li> <li>Click on the Create button to create the credentials.</li> </ol>","tags":["Workflow\u00b2","ClickUp"]},{"location":"workflow/integrations/credentials/clockify/","title":"Clockify","text":"<p>You can use these credentials to authenticate the following nodes with Clockify. - Clockify - Clockify Trigger</p>","tags":["Workflow\u00b2","Clockify"]},{"location":"workflow/integrations/credentials/clockify/#prerequisites","title":"Prerequisites","text":"<p>Create a Clockify account.</p>","tags":["Workflow\u00b2","Clockify"]},{"location":"workflow/integrations/credentials/clockify/#using-access-token","title":"Using Access Token","text":"<ol> <li>Open your Clockify dashboard.</li> <li>Click on your profile.</li> <li>Click on \"Profile Settings\".</li> <li>Scroll down and click on \"Generate\" under API.</li> <li>Use selected API key in your Clockify node credentials in Workflow\u00b2.</li> </ol>","tags":["Workflow\u00b2","Clockify"]},{"location":"workflow/integrations/credentials/cockpit/","title":"Cockpit","text":"<p>You can use these credentials to authenticate the following nodes with Cockpit. - Cockpit</p>","tags":["Workflow\u00b2","Cockpit"]},{"location":"workflow/integrations/credentials/cockpit/#prerequisites","title":"Prerequisites","text":"<p>Create a Cockpit account.</p>","tags":["Workflow\u00b2","Cockpit"]},{"location":"workflow/integrations/credentials/cockpit/#using-access-token","title":"Using Access Token","text":"<ol> <li>Open your Cockpit dashboard.</li> <li>Click on your profile in the top right.</li> <li>Click on \"Account\".</li> <li>Scroll down and copy API key.</li> <li>Use selected API key and your Cockpit URL in your Cockpit node credentials in Workflow\u00b2.</li> </ol>","tags":["Workflow\u00b2","Cockpit"]},{"location":"workflow/integrations/credentials/coda/","title":"Coda","text":"<p>You can use these credentials to authenticate the following nodes with Coda. - Coda</p>","tags":["Workflow\u00b2","Coda"]},{"location":"workflow/integrations/credentials/coda/#prerequisites","title":"Prerequisites","text":"<p>Create a Coda account.</p>","tags":["Workflow\u00b2","Coda"]},{"location":"workflow/integrations/credentials/coda/#using-access-token","title":"Using Access Token","text":"<ol> <li>Open your Coda dashboard.</li> <li>Click on your profile in the top right.</li> <li>Click on the 3 dots and then Account settings..</li> <li>Scroll down and click on \"Generate\" under API.</li> <li>Use selected API access token in your Coda node credentials in Workflow\u00b2.</li> </ol>","tags":["Workflow\u00b2","Coda"]},{"location":"workflow/integrations/credentials/contentful/","title":"Contentful","text":"<p>You can use these credentials to authenticate the following nodes with Contentful. - Contentful</p>"},{"location":"workflow/integrations/credentials/contentful/#prerequisites","title":"Prerequisites","text":"<p>Create a Contentful account.</p>"},{"location":"workflow/integrations/credentials/contentful/#using-access-token","title":"Using Access Token","text":"<ol> <li>Open your Contentful dashboard.</li> <li>Open the 'Settings' dropdown list on the top bar.</li> <li>Click on API keys.</li> <li>Click on the Add API key button in the top right.</li> <li>Enter a name for the API key in the Name field and click Save.</li> <li>Use the displayed Space ID, Content Delivery API - access token, and Content Preview API - access token with your Contentful node API credentials in Workflow\u00b2.</li> <li>Click on the Save button to save your credentials.</li> </ol>"},{"location":"workflow/integrations/credentials/convertKit/","title":"ConvertKit","text":"<p>You can use these credentials to authenticate the following nodes with ConvertKit. - ConvertKit - ConvertKit Trigger</p>"},{"location":"workflow/integrations/credentials/convertKit/#prerequisites","title":"Prerequisites","text":"<p>Create a ConvertKit account.</p>"},{"location":"workflow/integrations/credentials/convertKit/#using-access-token","title":"Using Access Token","text":"<ol> <li>Access your ConvertKit dashboard.</li> <li>Click on the user icon in the top right and select Account settings.</li> <li>Click on Show in the API Secret section to reveal the access token.</li> <li>Use the access token in the API Secret section with your ConvertKit API credentials in Workflow\u00b2.</li> <li>Click on the Save button to save your credentials.</li> </ol>"},{"location":"workflow/integrations/credentials/copper/","title":"Copper","text":"<p>You can use these credentials to authenticate the following nodes with Copper. - Copper - Copper Trigger</p>"},{"location":"workflow/integrations/credentials/copper/#prerequisites","title":"Prerequisites","text":"<p>Create a Copper account.</p>"},{"location":"workflow/integrations/credentials/copper/#using-access-token","title":"Using Access Token","text":"<ol> <li>Open your Copper dashboard.</li> <li>Click on the Settings tab on the left-sidebar.</li> <li>Click on Integrations and select API Keys.</li> <li>Click on the GENERATE API KEY button.</li> <li>Copy the displayed API key.</li> <li>Enter the name for your credentials in the Credentials Name field in the 'Copper API' credentials in Workflow\u00b2.</li> <li>Paste the API key in the API Key field in the 'Copper API' credentials in Workflow\u00b2.</li> <li>Enter the email address in the Email field in the 'Copper API' credentials in Workflow\u00b2.</li> <li>Click the Create button to create your credentials in Workflow\u00b2.</li> </ol> <p>The following video demonstrates the steps mentioned above.</p>"},{"location":"workflow/integrations/credentials/cortex/","title":"Cortex","text":"<p>You can use these credentials to authenticate the following nodes with Cortex. - Cortex</p>"},{"location":"workflow/integrations/credentials/cortex/#prerequisites","title":"Prerequisites","text":"<p>Install Cortex on your server.</p>"},{"location":"workflow/integrations/credentials/cortex/#using-api-key","title":"Using API Key","text":"<ol> <li>Access your Cortex dashboard.</li> <li>Click on your user icon on the top right corner and select 'Settings'.</li> <li>Scroll down to the API Key section and click on the Reveal button.</li> <li>Use the API Key and your Cortex instance URL with your Cortex node credentials in Workflow\u00b2.</li> </ol>"},{"location":"workflow/integrations/credentials/crateDb/","title":"CrateDB","text":"<p>You can use these credentials to authenticate the following nodes with CrateDB. - CrateDB</p>"},{"location":"workflow/integrations/credentials/crateDb/#prerequisites","title":"Prerequisites","text":"<p>An available instance of CrateDB. </p>"},{"location":"workflow/integrations/credentials/crateDb/#using-database-connection","title":"Using Database Connection","text":"<ol> <li>Retrieve your CrateDB credentials and connection parameters.</li> <li>Use the credentials and connection parameters with your CrateDB node credentials in Workflow\u00b2.</li> </ol>"},{"location":"workflow/integrations/credentials/customerIo/","title":"Customer.io","text":"<p>You can use these credentials to authenticate the following nodes with Customer.io. - Customer.io - Customer.io Trigger</p>"},{"location":"workflow/integrations/credentials/customerIo/#prerequisites","title":"Prerequisites","text":"<p>Create a Customer.io account.</p>"},{"location":"workflow/integrations/credentials/customerIo/#using-access-token","title":"Using Access Token","text":"<ol> <li>Open your Customer.io dashboard.</li> <li>Click on the user icon in the top right and select Account settings.</li> <li>Click on API Credentials.</li> <li>Click on the Create Tracking API Key button.</li> <li>Enter a name for the Tracking API Key in the Name.</li> <li>Select a workspace from the Workspace dropdown list.</li> <li>Click on the Create Tracking API Key button.</li> <li>Copy the displayed 'Site ID'.</li> <li>Enter the name for your credentials in the Credentials Name field in the 'Customer.io API' credentials in Workflow\u00b2.</li> <li>Paste the Site ID in the Tracking Site ID field in the 'Customer.io API' credentials in Workflow\u00b2.</li> <li>Copy the 'API Key' from the Manage API Credentials page.</li> <li>Paste the API key in the Tracking API Key field in the 'Customer.io API' credentials in Workflow\u00b2.</li> <li>Click on the App API Keys tab on the Manage API Credentials page.</li> <li>Click on the Create App API Key button.</li> <li>Enter a name for the App API Key in the Name field.</li> <li>Select a workspace from the Workspace dropdown list.</li> <li>Click on the Create App API Key button.</li> <li>Copy the displayed API key.</li> <li>Paste the API key in the App API Key field in the 'Customer.io API' credentials in Workflow\u00b2.</li> <li>Click on the Create button to create your credentials.</li> </ol> <p>The following video demonstrates the steps mentioned above.</p>"},{"location":"workflow/integrations/credentials/customerIo/#faqs","title":"FAQs","text":""},{"location":"workflow/integrations/credentials/customerIo/#why-do-i-need-the-tracking-api-key-and-the-app-api-key","title":"Why do I need the Tracking API Key and the App API Key?","text":"<p>Customer.io uses different API Keys for different endpoints. Based on the operation you want to perform, Doc\u00b2 uses the correct API key to connect to your Customer.io account.</p>"},{"location":"workflow/integrations/credentials/deepL/","title":"DeepL","text":"<p>You can use these credentials to authenticate the following nodes with DeepL. - DeepL</p>"},{"location":"workflow/integrations/credentials/deepL/#prerequisites","title":"Prerequisites","text":"<p>Create a DeepL developer account.</p>"},{"location":"workflow/integrations/credentials/deepL/#using-api-key","title":"Using API Key","text":"<ol> <li>Open your DeepL account page.</li> <li>Scroll down to the Authentication Key for DeepL API section.</li> <li>Copy the displayed 'API Key'.</li> <li>Enter the name for your credentials in the Credentials Name field in the 'DeepL API' credentials in Workflow\u00b2.</li> <li>Paste the API key in the API Key field in the 'DeepL API' credentials in Workflow\u00b2.</li> <li>Click on the Create button to create your credentials in Workflow\u00b2.</li> </ol> <p>The following video demonstrates the steps mentioned above.</p>"},{"location":"workflow/integrations/credentials/demio/","title":"Demio","text":"<p>You can use these credentials to authenticate the following nodes with Demio. - Demio</p>"},{"location":"workflow/integrations/credentials/demio/#prerequisites","title":"Prerequisites","text":"<p>Create a Demio account.</p>"},{"location":"workflow/integrations/credentials/demio/#using-api-key","title":"Using API Key","text":"<ol> <li>Open your Demio dashboard.</li> <li>Click on your user icon in the top right.</li> <li>Click on Settings.</li> <li>Click on the API tab.</li> <li>Copy the displayed 'API Key'.</li> <li>Enter the name for your credentials in the Credentials Name field in the 'Demio API' credentials in Workflow\u00b2.</li> <li>Paste the API key in the API Key field in the 'Demio API' credentials in Workflow\u00b2.</li> <li>Copy the 'API Secret' from Demio.</li> <li>Paste the API secret in the API Secret field in the 'Demio API' credentials in Workflow\u00b2.</li> <li>Click the Create button to save your credentials in Workflow\u00b2.</li> </ol> <p>The following video demonstrates the steps mentioned above.</p>"},{"location":"workflow/integrations/credentials/dhl/","title":"DHL","text":"<p>You can use these credentials to authenticate the following nodes with DHL. - DHL</p>"},{"location":"workflow/integrations/credentials/dhl/#prerequisites","title":"Prerequisites","text":"<ul> <li>Create a DHL Developer account.</li> </ul>"},{"location":"workflow/integrations/credentials/dhl/#using-access-token","title":"Using Access Token","text":"<ol> <li>Navigate to the apps page of the DHL Developer portal.</li> <li>Click the + Create App button.</li> <li>Enter a descriptive name in the App name field.</li> <li>In the Select APIs section, search for <code>Shipment Tracking - Unified</code> in the API's name field.</li> <li>Below Add API to app, click the Plus (+) button next to the entry for <code>Shipment Tracking - Unified</code>.</li> <li>Click on the Add app button.</li> <li>Back on the apps page, click on your newly created app.</li> <li>Click the Show key link to reveal your access token. Use the token with your DHL credentials in Workflow\u00b2.</li> </ol>"},{"location":"workflow/integrations/credentials/discord/","title":"Discord","text":"<p>You can follow these instructions to create a webhook in Discord to use with the following nodes. - Discord</p>"},{"location":"workflow/integrations/credentials/discord/#prerequisites","title":"Prerequisites","text":"<p>Create a Discord account.</p>"},{"location":"workflow/integrations/credentials/discord/#creating-a-webhook-in-discord","title":"Creating a webhook in Discord","text":"<ol> <li>To create a webhook in Discord that sends content to your channel, go to the settings of your channel.</li> <li>Select 'Integrations' from the sidebar.</li> <li>Click on the Create Webhook button.</li> <li>Name your bot, and click on the Copy Webhook URL button to copy the webhook URL.</li> <li>Back in Doc\u00b2, use the copied webhook URL in your Discord node.</li> </ol>"},{"location":"workflow/integrations/credentials/discourse/","title":"Discourse","text":"<p>You can use these credentials to authenticate the following nodes with Discourse. - Discourse</p>"},{"location":"workflow/integrations/credentials/discourse/#prerequisites","title":"Prerequisites","text":"<ul> <li>Host an instance of Discourse</li> <li>Create an account on your hosted instance and make sure that you are an admin</li> </ul>"},{"location":"workflow/integrations/credentials/discourse/#using-api-key","title":"Using API Key","text":"<ol> <li>Open your Discourse dashboard.</li> <li>Click on the API tab.</li> <li>Click on the + New API Key button.</li> <li>Enter a description in the Description field.</li> <li>Based on your use-case, do one of the following:<ul> <li>If you want to create the API key for a single user, select 'Single User' from the User Level dropdown list. Enter the username in the User field and select the user from the dropdown list.</li> <li>If you want to create the API key for all your users, select 'All Users' from the User Level dropdown list.</li> </ul> </li> <li>If you want to select all the scopes, check the Global Key (allowed all actions) checkbox. Otherwise, select scopes individually under the Scopes section.</li> <li>Click on the Save button.</li> <li>Copy the displayed API key.</li> <li>Enter the name for your credentials in the Credentials Name field in the 'Discourse API' credentials in Workflow\u00b2.</li> <li>Enter the URL of your Discourse instance in the URL field in the 'Discourse API' credentials in Workflow\u00b2. For example, <code>https://community.n8n.io</code>.</li> <li>Paste the API key in the API Key field in the 'Discourse API' credentials in Workflow\u00b2.</li> <li>Enter your Discourse username in the Username field in the 'Discourse API' credentials in Workflow\u00b2.</li> <li>Click the Create button to create your credentials in Workflow\u00b2.</li> </ol> <p>The following video demonstrates the steps mentioned above.</p>"},{"location":"workflow/integrations/credentials/disqus/","title":"Disqus","text":"<p>You can use these credentials to authenticate the following nodes with Disqus. - Disqus</p>"},{"location":"workflow/integrations/credentials/disqus/#prerequisites","title":"Prerequisites","text":"<p>Create a Disqus account.</p>"},{"location":"workflow/integrations/credentials/disqus/#using-access-token","title":"Using Access Token","text":"<ol> <li>Access the Disqus Application Registration Page.</li> <li>Fill out the application information and click on Register my application.</li> <li>Click on Details at the top and use the provided 'API Key' with your Disqus node credentials in Workflow\u00b2.</li> </ol>"},{"location":"workflow/integrations/credentials/drift/","title":"Drift","text":"<p>You can use these credentials to authenticate the following nodes with Drift. - Drift</p>"},{"location":"workflow/integrations/credentials/drift/#prerequisites","title":"Prerequisites","text":"<p>Create a Drift account.</p>"},{"location":"workflow/integrations/credentials/drift/#using-oauth","title":"Using OAuth","text":"<p>\u26c5\ufe0f Note fordoc2app.cloudintegration.eu users</p> <p>You'll only need to enter the Credentials Name and click on the circle button in the OAuth section to connect your Drift account to Workflow\u00b2.</p> <ol> <li>Access your Drift apps page.</li> <li>Click on the Build Your App button. You can also select an existing app if you already have one.</li> <li>Enter a name in the App name field.</li> <li>Click on 'Oauth &amp; Scopes' in the sidebar.</li> <li>Copy your OAuth Callback URL from the 'Create New Credentials' screen in Doc\u00b2, paste in the Add Redirect URL field, and click on the Add button.</li> <li>Click on 'App Credentials' in the sidebar.</li> <li>Use the Client ID and Secret ID with your Drift OAuth2 API node credentials in Workflow\u00b2.</li> <li>Click on the circle button in the OAuth section to connect your Drift account to Workflow\u00b2.</li> <li>Click the Save button to save your credentials.</li> </ol> <p></p>"},{"location":"workflow/integrations/credentials/drift/#using-access-token","title":"Using Access Token","text":"<ol> <li>Access your Drift apps.</li> <li>Select your App (or create a new one).</li> <li>Click on \"Manage\".</li> <li>Click on \"Installing to Drift\".</li> <li>Use token with your Drift Node credentials in Workflow\u00b2.</li> </ol>"},{"location":"workflow/integrations/credentials/dropbox/","title":"Dropbox","text":"<p>You can use these credentials to authenticate the following nodes with Dropbox. - Dropbox</p>"},{"location":"workflow/integrations/credentials/dropbox/#prerequisites","title":"Prerequisites","text":"<p>Create a Dropbox account.</p>"},{"location":"workflow/integrations/credentials/dropbox/#using-oauth","title":"Using OAuth","text":"<p>\u26c5\ufe0f Note fordoc2app.cloudintegration.eu users</p> <p>You'll only need to enter the Credentials Name and click on the circle button in the OAuth section to connect your Dropbox account to Workflow\u00b2.</p> <ol> <li>Access the Dropbox app creation page.</li> <li>Select 'Scoped access' under the Choose an API section.</li> <li>Select an access type under the Choose the type of access you need. You can read more about the access type here.</li> <li>In the Name your app section, enter a name for your app.</li> <li>Click on the Create app button.</li> <li>Click on the Permissions tab and give all the permissions under the Files and folders section.</li> <li>Click on the Submit button.</li> <li>Click on the Settings tab.</li> <li>Copy your OAuth Callback URL from the 'Create New Credentials' screen in Doc\u00b2 and paste in the Redirect URIs field under the OAuth 2 section.</li> <li>Click on the Add button.</li> <li>Enter the provided App key and the App secret in the Client ID and Client Secret field, respectively, in your Dropbox OAuth2 API credentials in Workflow\u00b2.</li> <li>Click on the circle button in the OAuth section to connect your Dropbox account to Workflow\u00b2.</li> <li>Click on the Save button to save your credentials.</li> </ol> <p></p>"},{"location":"workflow/integrations/credentials/dropbox/#using-access-token","title":"Using Access Token","text":"<ol> <li>Access the Dropbox app creation page.</li> <li>Select 'Scoped access' under the Choose an API section.</li> <li>Select an access type under the Choose the type of access you need. You can read more about the access type here.</li> <li>In the Name your app section, enter a name for your app.</li> <li>Click on the Create app button.</li> <li>Click on the Permissions tab and give all the permissions under the Files and folders section.</li> <li>Click on the Submit button.</li> <li>Click on the Settings tab.</li> <li>Scroll down to the OAuth 2 section and select 'No expiration' from the Access token expiration dropdown list.</li> <li>Click on the Generate button.</li> <li>Use the displayed Generated access token with your Dropbox credentials in Workflow\u00b2.</li> </ol>"},{"location":"workflow/integrations/credentials/dropcontact/","title":"Dropcontact","text":"<p>You can use these credentials to authenticate the following nodes with Dropcontact. - Dropcontact</p>"},{"location":"workflow/integrations/credentials/dropcontact/#prerequisites","title":"Prerequisites","text":"<p>Create an account on a Dropcontact app.</p>"},{"location":"workflow/integrations/credentials/dropcontact/#using-api-key","title":"Using API Key","text":"<ol> <li>Open your Dropcontact dashboard.</li> <li>Select API from the left sidebar.</li> <li>Click on the Copy button to copy the API key.</li> <li>Paste the API key in the API Key field in the 'Credential for Dropcontact API' fields in Workflow\u00b2.</li> <li>Click on the Save button to create your credentials.</li> </ol>"},{"location":"workflow/integrations/credentials/egoi/","title":"E-goi","text":"<p>You can use these credentials to authenticate the following nodes with E-goi. - E-goi</p>"},{"location":"workflow/integrations/credentials/egoi/#prerequisites","title":"Prerequisites","text":"<p>Create an E-goi account.</p>"},{"location":"workflow/integrations/credentials/egoi/#using-api-key","title":"Using API Key","text":"<ol> <li>Access your E-goi dashboard.</li> <li>Click on your name on the top right corner and select 'Integrations'.</li> <li>Copy the API key that is displayed and use it with your E-goi node credentials in Workflow\u00b2.</li> </ol>"},{"location":"workflow/integrations/credentials/elasticSecurity/","title":"Elastic Security","text":"<p>You can use these credentials to authenticate the following nodes:</p> <ul> <li>Elastic Security</li> </ul>"},{"location":"workflow/integrations/credentials/elasticSecurity/#prerequisites","title":"Prerequisites","text":"<ul> <li>Create an Elastic Security account.</li> <li>Deploy an application.</li> </ul>"},{"location":"workflow/integrations/credentials/elasticSecurity/#using-basic-auth","title":"Using Basic Auth","text":"<p>From Elastic Security:</p> <ol> <li>Navigate to your Dashboard &gt; Deployments section and open the dashboard for the desired deployment.</li> <li>From the Applications section, copy the endpoint of your application.</li> </ol> <p>From n8n:</p> <ol> <li>In the Credential Data section, enter your:<ul> <li>Username</li> <li>Password</li> <li>Base URL: The application endpoint obtained above.</li> </ul> </li> <li>Click Save to save your credentials.</li> </ol>"},{"location":"workflow/integrations/credentials/elasticsearch/","title":"Elasticsearch","text":"<p>You can use these credentials to authenticate the following nodes:</p> <ul> <li>Elasticsearch</li> </ul>"},{"location":"workflow/integrations/credentials/elasticsearch/#prerequisites","title":"Prerequisites","text":"<ul> <li>Create an Elasticsearch account.</li> <li>Deploy an application.</li> </ul>"},{"location":"workflow/integrations/credentials/elasticsearch/#using-basic-auth","title":"Using Basic Auth","text":"<p>From Elasticsearch:</p> <ol> <li>Navigate to your Dashboard &gt; Deployments section and open the dashboard for the desired deployment.</li> <li>From the Applications section, copy the endpoint of the Elasticsearch application.</li> </ol> <p>From n8n:</p> <ol> <li>Enter a descriptive Credentials Name.</li> <li>In the Credential Data section, enter your:<ul> <li>Username</li> <li>Password</li> <li>Base URL: The Elasticsearch application endpoint obtained above.</li> </ul> </li> <li>Click Create to save your credentials.</li> </ol>"},{"location":"workflow/integrations/credentials/emelia/","title":"Emelia","text":"<p>You can use these credentials to authenticate the following nodes with Emelia. - Emelia - Emelia Trigger</p>"},{"location":"workflow/integrations/credentials/emelia/#prerequisites","title":"Prerequisites","text":"<p>Create a Emelia account.</p>"},{"location":"workflow/integrations/credentials/emelia/#using-api-key","title":"Using API Key","text":"<ol> <li>Open the Emelia dashboard page.</li> <li>Click on the avatar on the top-right and select 'API Keys'.</li> <li>Click on the Generate new API key button.</li> <li>Click on the menu icon and select 'Copy API Key' from the dropdown list.</li> <li>Enter a name for your credentials in the Credentials Name field in the 'Emelia API' credentials in Workflow\u00b2.</li> <li>Paste the API key in the API Key field in the 'Emelia API' credentials in Workflow\u00b2.</li> <li>Click the Create button to create your credentials in Workflow\u00b2.</li> </ol> <p>The following video demonstrates the steps mentioned above.</p>"},{"location":"workflow/integrations/credentials/erpnext/","title":"ERPNext","text":"<p>You can use these credentials to authenticate the following nodes with Emelia. - ERPNext</p>"},{"location":"workflow/integrations/credentials/erpnext/#prerequisites","title":"Prerequisites","text":"<ul> <li>Create a ERPNext account.</li> </ul>"},{"location":"workflow/integrations/credentials/erpnext/#using-api-key","title":"Using API Key","text":"<ol> <li>Open your ERPNext dashboard page.</li> <li>Click on Settings on the top and select 'My Settings'.</li> <li>Scroll down to the bottom of the page and click on API Access.</li> <li>Click on the Generate Keys button.</li> <li>Copy the displayed API Secret.</li> <li>Enter a name for your credentials in the Credentials Name field in the 'ERPNext API' credentials in Workflow\u00b2.</li> <li>Paste the API Secret in the API Secret field in the 'ERPNext API' credentials in Workflow\u00b2.</li> <li>Copy the API Key from ERPNext. Note: You might have to refresh the ERPNext window to view the API Key.</li> <li>Paste the API Key in the API Key field in the 'ERPNext API' credentials in Workflow\u00b2.</li> <li>Enter the subdomain of your ERPNext account in the Subdomain field in the 'ERPNext API' credentials in Workflow\u00b2. Refer to the FAQs to learn how to get your subdomain.</li> <li>Click on the Create button to create your credentials in Workflow\u00b2.</li> </ol> <p>The following video demonstrates the steps mentioned above.</p>"},{"location":"workflow/integrations/credentials/erpnext/#faqs","title":"FAQs","text":""},{"location":"workflow/integrations/credentials/erpnext/#how-to-find-the-subdomain-of-an-erpnext-account","title":"How to find the subdomain of an ERPNext account?","text":"<p>In the address bar of your browser, you can find the subdomain. The string between <code>https://</code> and <code>.erpnext.com</code> is your subdomain. For example, if the URL in the address bar is <code>https://n8n.erpnext.com</code>, the subdomain will be <code>n8n</code>.</p>"},{"location":"workflow/integrations/credentials/eventbrite/","title":"Eventbrite","text":"<p>You can use these credentials to authenticate the following nodes with Eventbrite. - Eventbrite Trigger</p>"},{"location":"workflow/integrations/credentials/eventbrite/#prerequisites","title":"Prerequisites","text":"<p>Create a Eventbrite account.</p>"},{"location":"workflow/integrations/credentials/eventbrite/#using-oauth","title":"Using OAuth","text":"<p>\u26c5\ufe0f Note fordoc2app.cloudintegration.eu users</p> <p>You'll only need to enter the Credentials Name and click on the circle button in the OAuth section to connect your Eventbrite account to Workflow\u00b2.</p> <ol> <li>Log in to your Eventbrite account.</li> <li>Click on the user icon in the top right.</li> <li>Select Account Settings in the drop down menu.</li> <li>Click on Developer links &gt; API keys in the sidebar.</li> <li>Click on the Create API Key button.</li> <li>Copy the 'OAuth Callback URL' provided in the Eventbrite OAuth API credentials in Doc\u00b2 and paste it in the 'OAuth Redirect URI' field in the Eventbrite API creation page.</li> <li>Fill out any other information that is necessary and click 'Create Key'.</li> <li>Find your API key in the 'API Keys' page and click on 'Show API key, client secret and tokens'.</li> <li>Click on 'Show API key, client secret and tokens' and use the 'API key' and the 'Client secret' with your Eventbrite OAuth API credentials in Workflow\u00b2.</li> <li>Click on the circle button in the OAuth section to connect an Eventbrite account to Workflow\u00b2.</li> <li>Click the Save button to save your credentials.</li> </ol> <p></p>"},{"location":"workflow/integrations/credentials/eventbrite/#using-access-token","title":"Using Access Token","text":"<ol> <li>Log in to your Eventbrite account.</li> <li>Visit your API keys page.</li> <li>Copy your private token.</li> <li>Use provided key with your Eventbrite node credentials in Workflow\u00b2.</li> </ol>"},{"location":"workflow/integrations/credentials/facebookApp/","title":"Facebook App","text":"<p>You can use these credentials to authenticate the following nodes with Facebook. - Facebook Trigger</p> <p>Note: If you want to create credentials for the Facebook Graph API node, follow the instructions mentioned in the Facebook Graph API credentials documentation.</p>"},{"location":"workflow/integrations/credentials/facebookApp/#prerequisites","title":"Prerequisites","text":"<p>Create a Facebook account.</p>"},{"location":"workflow/integrations/credentials/facebookApp/#using-app-access-token","title":"Using App Access Token","text":"<ol> <li>Access the Facebook for Developers portal.</li> <li>Click on My Apps on the top right corner.</li> <li>Access your app. Create an app if you don't already have one.</li> <li>Add the Webhooks product from the Add a Product section on the dashboard.</li> <li>Click on Settings in the left sidebar and select 'Basic'.</li> <li>Click on the Show button and login with your Facebook account.</li> <li>Copy the App Secret displayed on the page.</li> <li>Access the Facebook Graph API Explorer.</li> <li>Select your app from the Facebook App dropdown list on the right sidebar.</li> <li>Select 'Get App Token' from the User or Page dropdown list on the right sidebar.</li> <li>Use the app secret and the generated access token with your Facebook node credentials in Workflow\u00b2.</li> </ol>"},{"location":"workflow/integrations/credentials/facebookGraph/","title":"Facebook Graph API","text":"<p>You can use these credentials to authenticate the following nodes with Facebook. - Facebook Graph API</p> <p>Note: If you want to create credentials for the Facebook Trigger node, follow the instructions mentioned in the Facebook App credentials documentation.</p>"},{"location":"workflow/integrations/credentials/facebookGraph/#prerequisites","title":"Prerequisites","text":"<p>Create a Facebook account.</p>"},{"location":"workflow/integrations/credentials/facebookGraph/#using-access-token","title":"Using Access Token","text":"<ol> <li>Access Facebook for Developers portal.</li> <li>Click on \"My Apps\".</li> <li>Access your app. Create an app if you don't already have one.</li> <li>Access the Facebook Graph API Explorer.</li> <li>Select your app under the Facebook App dropdown list on the right sidebar.</li> <li>Click on the 'Generate Access Token' button and login with your facebook account.</li> <li>Use generated access token with your Facebook node credentials in Workflow\u00b2.</li> </ol>"},{"location":"workflow/integrations/credentials/figma/","title":"Figma","text":"<p>You can use these credentials to authenticate the following nodes:</p> <ul> <li>Figma Trigger (Beta)</li> </ul>"},{"location":"workflow/integrations/credentials/figma/#prerequisites","title":"Prerequisites","text":"<p>Create a Figma account.</p>"},{"location":"workflow/integrations/credentials/figma/#using-api-key","title":"Using API Key","text":"<ol> <li>Log in to Figma.</li> <li>Click on the avatar on the top-right and select Settings.</li> <li>Scroll down to Personal access tokens, enter a name for your token in the input field and confirm by pressing Enter.</li> <li>Click on Copy this token.</li> <li>Paste the API key in the Access Token field of the Figma API credentials screen in Workflow\u00b2.</li> <li>Click the Save button to save your credentials in Workflow\u00b2.</li> </ol>"},{"location":"workflow/integrations/credentials/fileMaker/","title":"FileMaker","text":"<p>You can use these credentials to authenticate the following nodes with FileMaker. - FileMaker</p>"},{"location":"workflow/integrations/credentials/fileMaker/#prerequisites","title":"Prerequisites","text":"<p>Create an user account on a FileMaker server. </p>"},{"location":"workflow/integrations/credentials/fileMaker/#using-database-connection","title":"Using Database Connection","text":"<ol> <li>Retrieve your FileMaker credentials and connection parameters.</li> <li>Use the credentials and connection parameters with your FileMaker node credentials in Workflow\u00b2.</li> <li>Click on the Save button to save your credentials.</li> </ol>"},{"location":"workflow/integrations/credentials/flow/","title":"Flow","text":"<p>You can use these credentials to authenticate the following nodes with Flow. - Flow - Flow Trigger</p>"},{"location":"workflow/integrations/credentials/flow/#prerequisites","title":"Prerequisites","text":"<p>Create a Flow account.</p>"},{"location":"workflow/integrations/credentials/flow/#using-access-token","title":"Using Access Token","text":"<ol> <li>Access your Flow dashboard.</li> <li>Click on your Organisation icon in the top left.</li> <li>Click on Account Preferences.</li> <li>Click on the Create a Personal Access Token button.</li> <li>As you generate your access token, you will also receive an organisation ID.</li> <li>Use provided access token and organisation ID with your Flow node credentials in Workflow\u00b2.</li> </ol>"},{"location":"workflow/integrations/credentials/formIoTrigger/","title":"Form.io Trigger","text":"<p>You can use these credentials to authenticate the following nodes:</p> <ul> <li>Form.io Trigger</li> </ul>"},{"location":"workflow/integrations/credentials/formIoTrigger/#prerequisites","title":"Prerequisites","text":"<p>Create a Form.io account.</p>"},{"location":"workflow/integrations/credentials/formIoTrigger/#using-basic-auth","title":"Using Basic auth","text":"<p>After creating your Form.io account, from n8n:</p> <ol> <li>Enter a descriptive Credentials Name.</li> <li>Select whether your Environment is Cloud-hosted or Self-hosted.</li> <li>Enter your Form.io account Email.</li> <li>Enter your Form.io account Password.</li> <li>Click Create to save your new credentials.</li> </ol>"},{"location":"workflow/integrations/credentials/formstackTrigger/","title":"Formstack Trigger","text":"<p>You can use these credentials to authenticate the following nodes:</p> <ul> <li>Formstack Trigger</li> </ul>"},{"location":"workflow/integrations/credentials/formstackTrigger/#prerequisites","title":"Prerequisites","text":"<p>Create a Formstack account.</p>"},{"location":"workflow/integrations/credentials/formstackTrigger/#using-access-token","title":"Using Access token","text":"<p>After creating your Formstack account: </p> <ol> <li>From the user menu select API.</li> <li>Select New Application.</li> <li>In the Create Application window enter the following:<ul> <li>Application Name: Provide a descriptive name.</li> <li>Redirect URI: Enter the OAuth callback URL for your Doc\u00b2 instance in the format <code>http://&lt;n8n_url&gt;/rest/oauth2-credential/callback</code>. For example <code>http://localhost:5678/rest/oauth2-credential/callback</code>.</li> <li>Description: Enter a brief description.</li> <li>Platform: Select Website.</li> </ul> </li> <li>Click Create Application.</li> <li>Copy the Access Token for your new application.</li> </ol> <p>From n8n:</p> <ol> <li>Enter a descriptive Credentials Name.</li> <li>Enter your Formstack Access Token.</li> <li>Click Create to save your new credentials.</li> </ol>"},{"location":"workflow/integrations/credentials/formstackTrigger/#using-oauth2","title":"Using OAuth2","text":"<p>After creating your Formstack account: </p> <ol> <li>From the user menu select API.</li> <li>Select New Application.</li> <li>In the Create Application window enter the following:<ul> <li>Application Name: Provide a descriptive name.</li> <li>Redirect URI: Enter the OAuth callback URL for your Doc\u00b2 instance in the format <code>http://&lt;n8n_url&gt;/rest/oauth2-credential/callback</code>. For example <code>http://localhost:5678/rest/oauth2-credential/callback</code>.</li> <li>Description: Enter a brief description.</li> <li>Platform: Select Website.</li> </ul> </li> <li>Click Create Application.</li> <li>Select your new application to view the Application Details.</li> <li>Copy the Client ID and Client Secret.</li> </ol> <p>From n8n:</p> <ol> <li>Enter a descriptive Credentials Name.</li> <li>Enter your Formstack Client ID.</li> <li>Enter your Formstack Client Secret.</li> <li>Click the circle button to initiate the OAuth2 flow.</li> <li>In the modal window select Authorize.</li> <li>Click Create to save your new credentials.</li> </ol>"},{"location":"workflow/integrations/credentials/freshdesk/","title":"Freshdesk","text":"<p>You can use these credentials to authenticate the following nodes with Freshdesk. - Freshdesk</p>"},{"location":"workflow/integrations/credentials/freshdesk/#prerequisites","title":"Prerequisites","text":"<p>Create a Freshdesk account.</p>"},{"location":"workflow/integrations/credentials/freshdesk/#using-access-token","title":"Using Access Token","text":"<ol> <li>Access your Freshdesk dashboard.</li> <li>Click on your Organisation icon in the top right.</li> <li>Click on Profile Settings.</li> <li>Find your API key on the right panel.</li> <li>Use provided API key and your subdomain (i.e n8n) with your Freshdesk node credentials in Workflow\u00b2.</li> </ol>"},{"location":"workflow/integrations/credentials/freshservice/","title":"Freshservice","text":"<p>You can use these credentials to authenticate the following nodes:</p> <ul> <li>Freshservice</li> </ul>"},{"location":"workflow/integrations/credentials/freshservice/#prerequisites","title":"Prerequisites","text":"<p>Create a Freshservice account.</p>"},{"location":"workflow/integrations/credentials/freshservice/#using-api-key","title":"Using API Key","text":"<p>From Freshservice:</p> <ol> <li>Access your Freshservice dashboard.</li> <li>Click on your User icon in the top right and select Settings.</li> <li>Click on API Settings.</li> <li>Copy your API key.</li> </ol> <p>From n8n:</p> <ol> <li>Enter a descriptive Credentials Name.</li> <li>Under Credential Data, enter the API Key obtained above in the corresponding field.</li> <li>In the Domain field enter the subdomain of your Freshservice account. This is part of the URL, for example <code>https://&lt;subdomain&gt;.freshservice.com/</code>.</li> <li>Click Save to create your new credentials.</li> </ol>"},{"location":"workflow/integrations/credentials/freshworksCrm/","title":"Freshworks CRM","text":"<p>You can use these credentials to authenticate the following nodes:</p> <ul> <li>Freshworks CRM</li> </ul>"},{"location":"workflow/integrations/credentials/freshworksCrm/#prerequisites","title":"Prerequisites","text":"<p>Create a Freshworks CRM account.</p>"},{"location":"workflow/integrations/credentials/freshworksCrm/#using-api-key","title":"Using API Key","text":"<p>From Freshworks CRM:</p> <ol> <li>Access your Freshworks CRM dashboard.</li> <li>Click on your User icon in the top right and select Settings.</li> <li>Click on API Settings.</li> <li>Copy your API key.</li> </ol> <p>From n8n:</p> <ol> <li>Enter a descriptive Credentials Name.</li> <li>Under Credential Data, enter the API Key obtained above in the corresponding field.</li> <li>In the Domain field enter the subdomain of your Freshworks CRM account. This is part of the URL, for example <code>https://&lt;subdomain&gt;.myfreshworks.com/</code>.</li> <li>Click Save to create your new credentials.</li> </ol>"},{"location":"workflow/integrations/credentials/ftp/","title":"FTP","text":"<p>You can use these credentials to authenticate the following nodes with FTP. - FTP</p>"},{"location":"workflow/integrations/credentials/ftp/#prerequisites","title":"Prerequisites","text":"<p>Create an account on an FTP server. </p>"},{"location":"workflow/integrations/credentials/ftp/#using-ftpsftp","title":"Using FTP/SFTP","text":"<ol> <li>Retrieve your login credentials, FTP/SFTP host, and port parameters.</li> <li>Use the login credentials, FTP/SFTP host, and port parameters with your FTP node credentials in Workflow\u00b2.</li> <li>Click on the Save button to save your credentials.</li> </ol>"},{"location":"workflow/integrations/credentials/getResponse/","title":"GetResponse","text":"<p>You can use these credentials to authenticate the following nodes with GetResponse. - GetResponse - GetResponse Trigger</p>"},{"location":"workflow/integrations/credentials/getResponse/#prerequisites","title":"Prerequisites","text":"<p>Create a GetResponse account.</p>"},{"location":"workflow/integrations/credentials/getResponse/#using-oauth","title":"Using OAuth","text":"<p> Callback URL with GetResponse</p> <p>Note: The Redirect URL should be a URL in your domain. For example, <code>https://mytemplatemaker.example.com/gr_callback</code>. GetResponse doesn't accept the localhost callback URL. Refer to the FAQs to learn to configure the credentials for the local environment.</p> <ol> <li>Open your GetResponse dashboard.</li> <li>Click on Menu and select 'Integrations and API'.</li> <li>Click on the Custom apps tab.</li> <li>Click on the Register your app button.</li> <li>Enter all the necessary information.</li> <li>Copy your OAuth Callback URL from the 'Create New Credentials' screen in Doc\u00b2 and paste it in the Redirect URL field.</li> <li>Click on the Add button.</li> <li>Click on the app you created to get the Client ID and the Client Secret.</li> <li>Copy the displayed Client ID.</li> <li>Enter a name for your credentials in the Credentials Name field in the 'GetResponse OAuth2 API' credentials in Workflow\u00b2.</li> <li>Paste the Client ID in the Client ID field in the 'GetResponse OAuth2 API' credentials in Workflow\u00b2.</li> <li>Copy the Client secret key from GetResponse.</li> <li>Paste it in the Client Secret field in the 'GetResponse OAuth2 API' credentials in Workflow\u00b2.</li> <li>Click on the circle button in the OAuth section to connect a GetResponse account to Workflow\u00b2.</li> <li>Click on the Save button to save your credentials in Workflow\u00b2.</li> </ol> <p>The following video demonstrates the steps mentioned above.</p>"},{"location":"workflow/integrations/credentials/getResponse/#using-api-key","title":"Using API Key","text":"<ol> <li>Open your GetResponse dashboard.</li> <li>Click on Menu and select 'Integrations and API'.</li> <li>Click on the API tab.</li> <li>Click on the Generate API key button.</li> <li>Enter a name for your key.</li> <li>Click on the Generate button.</li> <li>Copy the displayed API key.</li> <li>Enter a name for your credentials in the Credentials Name field in the 'GetResponse API' credentials in Workflow\u00b2.</li> <li>Paste the API key in the API Key field in the 'GetResponse API' credentials in Workflow\u00b2.</li> <li>Click the Create button to create your credentials in Workflow\u00b2.</li> </ol> <p>The following video demonstrates the steps mentioned above.</p>"},{"location":"workflow/integrations/credentials/getResponse/#faqs","title":"FAQs","text":""},{"location":"workflow/integrations/credentials/getResponse/#how-to-configure-the-oauth-credentials-for-the-local-environment","title":"How to configure the OAuth credentials for the local environment?","text":"<p>GetResponse doesn't accept the localhost callback  URL. However, you can follow the steps mentioned below to configure the OAuth credentials for the local environment: 1. We will use ngrok to expose the local server running on port <code>5678</code> to the internet. In your terminal, run the following command: <pre><code>ngrok http 5678\n</code></pre> 2. Run the following command in a new terminal. Replace <code>&lt;YOUR-NGROK-URL&gt;</code> with the URL that you get from the previous step. <pre><code>export WEBHOOK_URL=&lt;YOUR-NGROK-URL&gt;\n</code></pre> 3. Start your Doc\u00b2 instance. 4. Follow the instructions mentioned in the Using OAuth section to configure your credentials.</p>"},{"location":"workflow/integrations/credentials/getResponse/#further-reference","title":"Further Reference","text":"<ul> <li>OAuth 2.0 - Authorization Code</li> <li>Authentication - API key</li> </ul>"},{"location":"workflow/integrations/credentials/ghost/","title":"Ghost","text":"<p>You can use these credentials to authenticate the following nodes with Ghost. - Ghost</p>"},{"location":"workflow/integrations/credentials/ghost/#prerequisites","title":"Prerequisites","text":"<p>Create a Ghost account.</p>"},{"location":"workflow/integrations/credentials/ghost/#using-admin-api","title":"Using Admin API","text":"<ol> <li>Access your Ghost Admin dashboard.</li> <li>Click on Integrations in the left sidebar.</li> <li>Click on + Add custom integration under the CUSTOM INTEGRATIONS section.</li> <li>Enter a name for the integration in the Name field.</li> <li>Click on the Create button.</li> <li>Use this URL and Admin API Key with your Ghost node credentials in Workflow\u00b2.</li> </ol>"},{"location":"workflow/integrations/credentials/ghost/#using-content-api","title":"Using Content API","text":"<ol> <li>Access your Ghost Admin dashboard.</li> <li>Click on Integrations in the left sidebar.</li> <li>Click on + Add custom integration under the CUSTOM INTEGRATIONS section.</li> <li>Enter a name for the integration in the Name field.</li> <li>Click on the Create button.</li> <li>Use this URL and Content API Key with your Ghost node credentials in Workflow\u00b2.</li> </ol>"},{"location":"workflow/integrations/credentials/git/","title":"Git","text":"<p>You can use these credentials to authenticate the following nodes with Git. - Git</p>"},{"location":"workflow/integrations/credentials/git/#prerequisites","title":"Prerequisites","text":"<p>Create an account on GitHub, GitLab, or similar platforms.</p>"},{"location":"workflow/integrations/credentials/git/#using-username-and-password","title":"Using Username and Password","text":"<ol> <li>Enter a name for your credentials in the Credentials Name field in the 'Git' credentials in Workflow\u00b2.</li> <li>Enter your GitHub, GitLab (or similar platforms) username in the Username field in the 'Git' credentials in Workflow\u00b2.</li> <li>Enter your GitHub, GitLab (or similar platforms) password in the Password field in the 'Git' credentials in Workflow\u00b2.</li> <li>Click the Create button to create your credentials in Workflow\u00b2.</li> </ol> <p>The following video demonstrates the steps mentioned above.</p>"},{"location":"workflow/integrations/credentials/github/","title":"GitHub","text":"<p>You can use these credentials to authenticate the following nodes with GitHub. - GitHub - GitHub Trigger</p>"},{"location":"workflow/integrations/credentials/github/#prerequisites","title":"Prerequisites","text":"<p>Create a GitHub account.</p>"},{"location":"workflow/integrations/credentials/github/#using-oauth","title":"Using OAuth","text":"<p>\u26c5\ufe0f Note fordoc2app.cloudintegration.eu users</p> <p>You'll only need to enter the Credentials Name and click on the circle button in the OAuth section to connect your GitHub account to Workflow\u00b2.</p> <ol> <li>Open your GitHub dashboard.</li> <li>Click on your user icon in the top right.</li> <li>Click on Settings.</li> <li>Click on Developer settings.</li> <li>Select OAuth Apps.</li> <li>Click on the Register a new application button.</li> <li>Enter the Application name and Homepage URL.</li> <li>Copy the OAuth Callback URL from Doc\u00b2 and paste it in the Authorization callback URL field.</li> <li>Click on the Register application button.</li> <li>Copy the displayed 'Client ID'.</li> <li>Enter the name for your credentials in the Credentials Name field in the 'Github OAuth2 API' credentials in Workflow\u00b2.</li> <li>Paste the client ID in the Client ID field in the 'Github OAuth2 API' credentials in Workflow\u00b2.</li> <li>On your application page, click on the Generate a new client secret button.</li> <li>Copy the displayed 'Client Secret'.</li> <li>Paste the client secret in the Client Secret field in the 'Github OAuth2 API' credentials in Workflow\u00b2.</li> <li>Click on the circle button in the OAuth section to connect a GitHub account to Workflow\u00b2.</li> <li>Click the Save button to save your credentials in Workflow\u00b2.</li> </ol> <p>The following video demonstrates the steps mentioned above.</p> <p>The following video demonstrates the steps to authenticate the GitHub node on n8n.cloud.</p>"},{"location":"workflow/integrations/credentials/github/#using-access-token","title":"Using Access Token","text":"<ol> <li>Open your GitHub dashboard.</li> <li>Click on your user icon in the top right.</li> <li>Click on Settings.</li> <li>Click on Developer settings.</li> <li>Select Personal access tokens.</li> <li>Click on Generate new token.</li> <li>Enter a note in the Note field.</li> <li>Select the relevant scopes from the Select scopes section.</li> <li>Scroll down to the bottom and click on the Generate token button.</li> <li>Copy the displayed 'Personal access token'.</li> <li>Enter the name for your credentials in the Credentials Name field in the 'Github API' credentials in Workflow\u00b2.</li> <li>Enter your GitHub username in the User field in the 'Github API' credentials in Workflow\u00b2.</li> <li>Paste the access token in the Access Token field in the 'Github API' credentials in Workflow\u00b2.</li> <li>Click the Create button to save your credentials in Workflow\u00b2.</li> </ol> <p>The following video demonstrates the steps mentioned above.</p>"},{"location":"workflow/integrations/credentials/gitlab/","title":"GitLab","text":"<p>You can use these credentials to authenticate the following nodes with GitLab. - GitLab - GitLab Trigger</p>"},{"location":"workflow/integrations/credentials/gitlab/#prerequisites","title":"Prerequisites","text":"<p>Create a GitLab account.</p>"},{"location":"workflow/integrations/credentials/gitlab/#using-oauth","title":"Using OAuth","text":"<p>\u26c5\ufe0f Note fordoc2app.cloudintegration.eu users</p> <p>You'll only need to enter the Credentials Name and click on the circle button in the OAuth section to connect your GitLab account to Workflow\u00b2.</p> <ol> <li>Access your GitLab dashboard.</li> <li>Click on your user icon in the top right.</li> <li>Click on 'Settings'.</li> <li>Click on 'Applications' in the sidebar.</li> <li>Enter a name in the Name field.</li> <li>Copy the 'OAuth Callback URL' provided in the 'Gitlab OAuth2 API' credentials in Doc\u00b2 and paste it in the Redirect URI field in the GitLab app creation page.</li> <li>Select any scopes you plan to use and then click on Save application.</li> <li>Use the Application ID and Secret with your GitLab OAuth2 API credentials in Workflow\u00b2.</li> <li>Click on the circle button in the OAuth section to connect a GitLab account to Workflow\u00b2.</li> <li>Click on the Save button to save your credentials.</li> </ol> <p></p>"},{"location":"workflow/integrations/credentials/gitlab/#using-access-token","title":"Using Access Token","text":"<ol> <li>Access your GitLab dashboard.</li> <li>Click on your user icon in the top right.</li> <li>Click on 'Settings'.</li> <li>Click on 'Access Tokens' in the sidebar.</li> <li>Enter a name in the Name field.</li> <li>Fill out the required information to receive the access token.</li> <li>Select any scopes you plan to use and then click on Create personal access token.</li> <li>Use the generated access token with your GitLab node credentials in Workflow\u00b2.</li> <li>Click on the Save button to save your credentials.</li> </ol>"},{"location":"workflow/integrations/credentials/goToWebinar/","title":"GoToWebinar","text":"<p>You can use these credentials to authenticate the following nodes with GoToWebinar. - GoToWebinar</p>"},{"location":"workflow/integrations/credentials/goToWebinar/#prerequisites","title":"Prerequisites","text":"<p>Create a GoToWebinar account.</p>"},{"location":"workflow/integrations/credentials/goToWebinar/#using-oauth","title":"Using OAuth","text":"<ol> <li>Sign in to the GoTo Developer Center page.</li> <li>Click on the OAuth Clients tab.</li> <li>Click on the Create a client button.</li> <li>Enter a name in the Client name field.</li> <li>Copy the 'OAuth Callback URL' provided in the 'GoToWebinar OAuth2 API' credentials in Workflow\u00b2.</li> <li>Paste the URL in the Redirect URIs field and click on the Next button.</li> <li>Based on your use-case, select the required scopes.</li> <li>Click on the Save button.</li> <li>Copy the displayed Client ID.</li> <li>Enter a name for your credentials in the Credentials Name field in the 'GoToWebinar OAuth2 API' credentials in Workflow\u00b2.</li> <li>Paste the client ID in the Client ID field in the 'GoToWebinar OAuth2 API' credentials in Workflow\u00b2.</li> <li>Copy the displayed Client secret from the GoTo Client Management Portal.</li> <li>Accept the I have stored the client secret option and click on the Done button.</li> <li>Paste the client secret in the Client Secret field in the 'GoToWebinar OAuth2 API' credentials in Workflow\u00b2.</li> <li>Click on the circle button in the OAuth section to connect a GoToWebinar account to Workflow\u00b2.</li> <li>Click the Save button to save your credentials in Workflow\u00b2.</li> </ol> <p>The following video demonstrates the steps mentioned above.</p>"},{"location":"workflow/integrations/credentials/google/","title":"Google","text":"<p>There are two authentication methods available for Google services nodes, OAuth2 and the Service Account authentication. Refer to the official Google documentation to learn which is appropriate for your case case.</p> <p>Note that while all nodes are compatible with OAuth2 authentication, only some also support Service Account authentication.</p>"},{"location":"workflow/integrations/credentials/google/#prerequisites","title":"Prerequisites","text":"<ul> <li>Google Cloud account</li> <li>Google Cloud Platform project</li> <li>Request API Access (For Google Perspective Only)</li> </ul>"},{"location":"workflow/integrations/credentials/google/#compatible-nodes","title":"Compatible nodes","text":"<p>Once configured, you can use your credentials to authenticate the following nodes:</p> Node OAuth Service Account G Suite Admin Gmail Google Analytics Google BigQuery Google Books Google Calendar Google Chat Google Contacts Google Cloud Firestore Google Cloud Natural Language Google Cloud Realtime Database Google Docs Google Drive Google Drive Trigger Google Perspective Google Sheets Google Slides Google Tasks Google Translate YouTube <p>\u26c5\ufe0f Note fordoc2app.cloudintegration.eu users</p> <p>For the following nodes, you only need to enter the Credentials Name and click on the Sign in with Google button in the OAuth section to connect your Google account to n8n:</p> <ul> <li>Google Calendar</li> <li>Google Contacts</li> <li>Google Sheets</li> <li>Google Tasks</li> </ul>"},{"location":"workflow/integrations/credentials/google/#using-oauth","title":"Using OAuth","text":"<p>From your Google Cloud Console dashboard:</p> <ol> <li>Click on the hamburger menu and select APIs &amp; Services &gt; Credentials.</li> <li> <p>Click on + CREATE CREDENTIALS and select OAuth client ID.</p> <p>!!! tip \u2757\ufe0f Note for new users     If you're creating OAuth credentials for the first time, you will have to configure the consent screen.</p> </li> <li> <p>From the Application type dropdown select Web application. A name is automatically generated, change it if desired.</p> </li> <li>From the Authorized redirect URIs section, select + Add URI.</li> <li>Enter the OAuth Callback URL provided in the Google node credential modal:     </li> <li>Click the CREATE button.</li> </ol> <p>From your Doc\u00b2 instance:</p> <ol> <li>Enter your new Client ID and Client Secret from Google Cloud Console in the Doc\u00b2 Credentials modal.</li> <li>Enter a Credentials Name.</li> <li>Click on the Sign in with Google button to complete your Google authentication.</li> <li>Save your new credentials in Workflow\u00b2.</li> </ol> <p>Now you must enable each Google service (e.g. Sheets, Drive, etc.) API that you want to use.</p> <p>The following video demonstrates the steps mentioned above.</p>"},{"location":"workflow/integrations/credentials/google/#using-service-account","title":"Using Service Account","text":"<p>From your Google Cloud Console dashboard:</p> <ol> <li>Click on the hamburger menu and select APIs &amp; Services &gt; Credentials.</li> <li>Click on + CREATE CREDENTIALS and select Service account.</li> <li>Enter a name in the Service account name field.</li> <li>Click on the CREATE button.</li> <li>Based on your use-case, you may want to Select a role and Grant users access to this service account  using the corresponding sections.</li> <li>Click Done.</li> <li>Select your newly created service account under the Service Accounts section and open the Keys tab.</li> <li>Click on ADD KEY and select Create new key.</li> <li>In the modal that appears, select JSON and click Create. The file is saved to your computer.</li> </ol> <p>From you Doc\u00b2 instance:</p> <ol> <li>Enter a Credentials Name.</li> <li>In the Service Account Email field, enter the email associated with your new Service Account (visible in the Details tab).</li> <li>Enter the Private Key from the downloaded JSON file. If you are running an Doc\u00b2 version older than 0.156.0: Replace all instances of <code>\\n</code> in the JSON file with new lines.</li> <li>(Optional) Click the toggle to enable Impersonate a User and enter the desired email.</li> <li>Save your credentials.</li> </ol> <p>Now you must enable each Google service (e.g. Sheets, Drive, etc.) API that you want to use.</p> <p>The following video demonstrates the steps mentioned above.</p>"},{"location":"workflow/integrations/credentials/google/#enable-apis","title":"Enable APIs","text":"<p>To enable an API, follow the steps below:</p> <ol> <li>Access your Google Cloud Console.</li> <li>From the hamburger menu select APIs &amp; Services &gt; Library.</li> <li>Search for and select the API(s) you want to enable.</li> <li>Click on the ENABLE button.</li> </ol>"},{"location":"workflow/integrations/credentials/google/#faqs","title":"FAQs","text":""},{"location":"workflow/integrations/credentials/google/#google-hasnt-verified-this-app","title":"Google hasn't verified this app","text":"<p>If using the OAuth authentication method, you might come across the warning \"Google hasn't verified this app\". To avoid this, you can create OAuth credentials from the same account you want to authenticate. However, if you're using credentials that were generated by another account (by a developer or another third party), you can follow the steps mentioned below:</p> <ol> <li>Click on Advanced.</li> <li>Click on Go to CREDENTIALS_NAME (unsafe). <code>CREDENTIALS_NAME</code> is the name of the credentials created by the third party.</li> <li>Grant the requested permissions.</li> </ol>"},{"location":"workflow/integrations/credentials/gotify/","title":"Gotify","text":"<p>You can use these credentials to authenticate the following nodes with Gotify. - Gotify</p>"},{"location":"workflow/integrations/credentials/gotify/#prerequisites","title":"Prerequisites","text":"<p>Install Gotify on your server.</p>"},{"location":"workflow/integrations/credentials/gotify/#using-api-token","title":"Using API Token","text":"<p>Note: To create a message, the App API Token is required. To delete or retrieve all messages, you need the Client API Token.</p> <ol> <li>Access your Gotify dashboard.</li> <li>Click on APPS in the navigation menu.</li> <li>Click on the CREATE APPLICATION button.</li> <li>Enter an application name in the Name field.</li> <li>Click on the CREATE button.</li> <li>Click on CLIENTS in the navigation menu.</li> <li>Click on the CREATE CLIENT button.</li> <li>Enter a name for the client in the Name field.</li> <li>Click on the CREATE button.</li> <li>Use the App Token, Client Token, and the Host URL with your Gotify API credentials in Workflow\u00b2.</li> <li>Click the Save button to save your credentials in Workflow\u00b2.</li> </ol> <p></p>"},{"location":"workflow/integrations/credentials/grafana/","title":"Grafana","text":"<p>You can use these credentials to authenticate the following nodes with Grafana. - Grafana</p>"},{"location":"workflow/integrations/credentials/grafana/#prerequisites","title":"Prerequisites","text":"<ul> <li>Create a Grafana account.</li> </ul>"},{"location":"workflow/integrations/credentials/grafana/#using-access-token","title":"Using Access Token","text":"<ol> <li>In Grafana, click the gears icon in the sidebar on the left and select the API Keys option.</li> <li>Click the \"Add API key\" button and enter any Key name.</li> <li>Click Add and copy the key shown.</li> <li>Use the key with your Grafana credentials in Workflow\u00b2.</li> <li>Enter the base URL of your instance (e.g. <code>https://n8n.grafana.net</code>) in Workflow\u00b2.</li> </ol>"},{"location":"workflow/integrations/credentials/grist/","title":"Grist","text":"<p>You can use these credentials to authenticate the following nodes:</p> <ul> <li>Grist.</li> </ul>"},{"location":"workflow/integrations/credentials/grist/#prerequisites","title":"Prerequisites","text":"<p>Create a Grist account.</p>"},{"location":"workflow/integrations/credentials/grist/#api-key","title":"API key","text":"<p>From Grist:</p> <ol> <li>Navigate to your Profile Settings.</li> <li>In the Api key section click Create.</li> <li>Copy the generated API key for use in Workflow\u00b2.</li> </ol> <p>From n8n:</p> <ol> <li>Enter the API Key obtained above.</li> <li>Use the dropdown to select if your are using a Free or Paid plan.</li> <li>For Paid plans, enter your Custom Subdomain (e.g. <code>&lt;subdomain&gt;.getgrist.com</code>).</li> <li>Click on the Create button to create the credentials.</li> </ol>"},{"location":"workflow/integrations/credentials/gumroad/","title":"Gumroad","text":"<p>You can use these credentials to authenticate the following nodes with Gumroad. - Gumroad Trigger</p>"},{"location":"workflow/integrations/credentials/gumroad/#prerequisites","title":"Prerequisites","text":"<p>Create a Gumroad account.</p>"},{"location":"workflow/integrations/credentials/gumroad/#using-access-token","title":"Using Access Token","text":"<ol> <li>Access your Gumroad dashboard.</li> <li>Click on your user icon on the top right.</li> <li>Click on Settings.</li> <li>Click on the Advanced tab.</li> <li>Scroll down and fill out the required fields and create a new application..</li> <li>From here, you have access the ability to generate an access token.</li> <li>Use provided access token with your Gumroad node credentials in Workflow\u00b2.</li> </ol>"},{"location":"workflow/integrations/credentials/haloPSA/","title":"HaloPSA","text":"<p>You can use these credentials to authenticate the following nodes with HaloPSA. - HaloPSA</p>"},{"location":"workflow/integrations/credentials/haloPSA/#prerequisites","title":"Prerequisites","text":"<p>Create a HaloPSA account.</p>"},{"location":"workflow/integrations/credentials/haloPSA/#allow-your-application-to-use-the-api","title":"Allow your application to use the API:","text":"<ol> <li>Access your HaloPSA dashboard.</li> <li>Click on the Configuration link in the left panel.</li> <li>Under the Integrations menu entry, click on HaloPSA API.</li> <li>In the API Details section you find the values Resource Server, Authorisation Server, and Tenant.</li> <li>In the Applications section click on the View Applications button.</li> <li>Click on the New button to register a new application or click on an existing one and then the Edit button to edit it.</li> <li>Enter a name for your application (for example <code>n8n</code>).</li> <li>Choose <code>Client ID and Secret (Services)</code> as the Authentication Method.</li> <li>Make a note of both the Client ID and the Client Secret. The Client Secret will only be shown once and you will need to generate a new one when lost.</li> <li>Select <code>Agent</code> as your Login Type and one of your agents in the Agent to log in as field.</li> <li>On the Permissions tab, tick <code>all</code> and hit the Save button.</li> <li>On n8n's HaloPSA credentials screen, fill in the values obtained in the previous steps. The Tenant field will be accessible only when the Hosting Type is set to <code>Hosted Solution of Halo</code>.</li> </ol>"},{"location":"workflow/integrations/credentials/harvest/","title":"Harvest","text":"<p>You can use these credentials to authenticate the following nodes with Harvest. - Harvest</p>"},{"location":"workflow/integrations/credentials/harvest/#prerequisites","title":"Prerequisites","text":"<p>Create a Harvest account.</p>"},{"location":"workflow/integrations/credentials/harvest/#using-oauth","title":"Using OAuth","text":"<ol> <li>Access the Harvest Developer portal.</li> <li>Click on the Create New OAuth2 Application button.</li> <li>Enter an application name in the Name field.</li> <li>Copy the 'OAuth Callback URL' provided in the Harvest OAuth2 API credentials in Doc\u00b2 and paste it in the Redirect URL field.</li> <li>Click on the Create Application button.</li> <li>Copy the Client ID and Client Secret provided by the new Harvest app that you created and paste it in the Harvest OAuth2 API credentials in Workflow\u00b2.</li> <li>Click on the circle button in the OAuth section to connect your Harvest account to Workflow\u00b2.</li> <li>Click on the Save button to save your credentials.</li> </ol>"},{"location":"workflow/integrations/credentials/harvest/#using-access-token","title":"Using Access Token","text":"<ol> <li>Access the Harvest Developer portal.</li> <li>Click on the Create New Personal Access Token button.</li> <li>Enter a token name in the Name field.</li> <li>Click on the Create Personal Access Token button.</li> <li>Use the token with Harvest node credentials in Workflow\u00b2.</li> </ol>"},{"location":"workflow/integrations/credentials/helpScout/","title":"Help Scout","text":"<p>You can use these credentials to authenticate the following nodes with Help Scout. - Help Scout - Help Scout Trigger</p>"},{"location":"workflow/integrations/credentials/helpScout/#prerequisites","title":"Prerequisites","text":"<p>Create a Help Scout account.</p>"},{"location":"workflow/integrations/credentials/helpScout/#using-oauth","title":"Using OAuth","text":"<p>\u26c5\ufe0f Note fordoc2app.cloudintegration.eu users</p> <p>You'll only need to enter the Credentials Name and click on the circle button in the OAuth section to connect your Help Scout account to Workflow\u00b2.</p> <ol> <li>Log in to your Help Scout account.</li> <li>Click on the user icon in the top right.</li> <li>Select 'Your Profile' in the drop down menu.</li> <li>Click on 'My Apps' in the sidebar.</li> <li>Click on the Create My App button.</li> <li>Copy the 'OAuth Callback URL' provided in the HelpScout OAuth2 API credentials in Doc\u00b2 and paste it in the 'Redirection URL' field in Help Scout.</li> <li>Fill out any other information that is necessary and click 'Create'.</li> <li>Click on the Save button and use the 'App ID' and the 'App Secret' with your HelpScout OAuth2 API credentials in Workflow\u00b2.</li> <li>Click on the circle button in the OAuth section to connect a Help Scout account to Workflow\u00b2.</li> <li>Click the Save button to save your credentials.</li> </ol> <p></p>"},{"location":"workflow/integrations/credentials/homeAssistant/","title":"Home Assistant","text":"<p>You can use these credentials to authenticate the following nodes with Home Assistant. - Home Assistant</p>"},{"location":"workflow/integrations/credentials/homeAssistant/#prerequisites","title":"Prerequisites","text":"<ul> <li>Install Home Assistant</li> <li>Create a Home Assistant account.</li> <li>Review the Home Assistant Autentication API documentation</li> </ul>"},{"location":"workflow/integrations/credentials/homeAssistant/#using-access-token","title":"Using access token","text":"<ol> <li>Access your Home Assistant UI, for example <code>homeassistant.local:8123</code>.</li> <li>Open your user profile page and navigate to the Long-Lived Access Tokens section.</li> <li>Generate a new token and copy it.</li> <li>Use that token with your Home Assistant node credentials in Workflow\u00b2.</li> </ol>"},{"location":"workflow/integrations/credentials/httpRequest/","title":"HTTP Request","text":"<p>You can use these credentials to authenticate the following nodes:</p> <ul> <li>HTTP Request</li> </ul>"},{"location":"workflow/integrations/credentials/httpRequest/#prerequisites","title":"Prerequisites","text":"<p>You must use the authentication method required by the app or service you want to query. The following authentication methods are available:</p> <ul> <li>Basic Auth</li> <li>Digest Auth</li> <li>Header Auth</li> <li>OAuth1</li> <li>OAuth2</li> <li>None</li> </ul> <p>You can learn more about HTTP authentication here.</p>"},{"location":"workflow/integrations/credentials/httpRequest/#using-basic-auth-digest-auth","title":"Using Basic Auth / Digest Auth","text":"<ol> <li>Enter a descriptive Credentials Name.</li> <li>In the Credential Data section, enter the Username and Password for the app or service your HTTP Request is targeting. </li> <li>Click Create to save your credentials.</li> </ol>"},{"location":"workflow/integrations/credentials/httpRequest/#using-header-auth","title":"Using Header Auth","text":"<ol> <li>Enter a descriptive Credentials Name.</li> <li>In the Credential Data section, enter the header Name and Value required for the app or service your HTTP Request is targeting. Read more about HTTP headers.</li> <li>Click Create to save your credentials.</li> </ol>"},{"location":"workflow/integrations/credentials/httpRequest/#using-oauth1","title":"Using OAuth1","text":"<ol> <li>Enter a descriptive Credentials Name.</li> <li>In the Credential Data section, enter the following authentication details:<ul> <li>Authorization URL</li> <li>Access Token URL</li> <li>Consumer Key</li> <li>Consumer Secret</li> <li>Request Token URL</li> <li>Signature Method</li> </ul> </li> <li>Click Create to save your credentials.</li> </ol> <p>Read more about OAuth1.</p>"},{"location":"workflow/integrations/credentials/httpRequest/#using-oauth2","title":"Using OAuth2","text":"<ol> <li>Enter a descriptive Credentials Name.</li> <li>In the Credential Data section, enter the following authentication details:<ul> <li>Authorization URL</li> <li>Access Token URL</li> <li>Client ID</li> <li>Client Secret</li> <li>Scope</li> <li>Auth URI Query Parameters</li> <li>Authentication</li> </ul> </li> <li>Click Create to save your credentials.</li> </ol> <p>Read more about OAuth2.</p>"},{"location":"workflow/integrations/credentials/hubspot/","title":"Hubspot","text":"<ul> <li>Workflow\u00b2</li> <li>HubSpot</li> </ul>"},{"location":"workflow/integrations/credentials/hubspot/#hubspot","title":"HubSpot","text":"<p>You can use these credentials to authenticate the following nodes with HubSpot. - HubSpot - HubSpot Trigger</p>"},{"location":"workflow/integrations/credentials/hubspot/#prerequisites","title":"Prerequisites","text":"<p>Create a HubSpot account.</p>"},{"location":"workflow/integrations/credentials/hubspot/#using-oauth","title":"Using OAuth","text":"<p>\u26c5\ufe0f Note fordoc2app.cloudintegration.eu users</p> <p>You'll only need to enter the Credentials Name and click on the circle button in the OAuth section to connect your HubSpot account to Workflow\u00b2.</p> <p>\u26a0 HubSpot old accounts</p> <p>Some HubSpot accounts don't have access to all the scopes. HubSpot is migrating accounts gradually. If you can't' find all the scopes in your current HubSpot developer account, try creating a fresh developer account.</p> <ol> <li>Access your HubSpot Developer Home.</li> <li>Click on the Manage apps button.</li> <li>Click on the Create app button in the top right.</li> <li>Specify an app name in the Public app name field.</li> <li>Click on the 'Auth' tab.</li> <li>Use the provided Client ID and the Client secret with your HubSpot OAuth2 API credentials in Workflow\u00b2.</li> <li>If you are using the HubSpot Trigger node, copy the App ID along with the information in the previous step.</li> <li>Copy your OAuth Callback URL from the 'Create New Credentials' screen in Doc\u00b2 and paste in the Redirect URL section.</li> <li>In the Scopes section, select the following scopes in the Find a scope search box:<ul> <li>Trigger node:<ul> <li>oauth</li> <li>crm.objects.contacts (read),</li> <li>crm.schemas.contacts (read),</li> <li>crm.objects.companies (read),</li> <li>crm.schemas.companies (read),</li> <li>crm.objects.deals (read),</li> <li>crm.schemas.deals (read),</li> </ul> </li> <li>Regular node:<ul> <li>oauth</li> <li>crm.schemas.deals (read),</li> <li>crm.objects.owners (read),</li> <li>crm.objects.contacts (write),</li> <li>crm.objects.companies (write),</li> <li>crm.objects.companies (read),</li> <li>crm.objects.deals (read),</li> <li>crm.schemas.contacts (read),</li> <li>crm.objects.deals (write),</li> <li>crm.objects.contacts (read),</li> <li>crm.schemas.companies (read),</li> <li>forms,</li> <li>tickets,</li> </ul> </li> </ul> </li> <li>Click on the Save button to save your settings in HubSpot.</li> <li>Back in Doc\u00b2, click on the circle button in the OAuth section to connect your HubSpot account to Workflow\u00b2.</li> <li>Click the Save button to save your credentials.</li> </ol>"},{"location":"workflow/integrations/credentials/hubspot/#using-api-key","title":"Using API key","text":"<ol> <li>Access your HubSpot dashboard.</li> <li>Click on the gear icon on the top right.</li> <li>Click on Integrations and then API key.</li> <li>Click on the Create key button.</li> <li>Use the key with HubSpot node credentials in Workflow\u00b2.</li> </ol>"},{"location":"workflow/integrations/credentials/hubspot/#using-app-token","title":"Using APP Token","text":"<ol> <li>Follow the instructions in the Private Apps Documentation to get your access token.</li> <li>Set the access token as the key in your HubSpot credentials in Workflow\u00b2.</li> </ol>"},{"location":"workflow/integrations/credentials/hubspot/#using-developer-api-key-for-hubspot-trigger-node","title":"Using Developer API Key (for HubSpot Trigger node)","text":"<ol> <li>Access your HubSpot Developer Home.</li> <li>Click on Apps in the top bar.</li> <li>Click on the Get HubSpot API key button.</li> <li>Click on the Show key button.</li> <li>Use the displayed Developer API key with your HubSpot Trigger node credentials in Workflow\u00b2.</li> </ol>"},{"location":"workflow/integrations/credentials/humanticAi/","title":"Humantic AI","text":"<p>You can use these credentials to authenticate the following nodes with Humantic AI. - Humantic AI</p>"},{"location":"workflow/integrations/credentials/humanticAi/#using-api","title":"Using API","text":"<ol> <li>Access the Humantic AI API page.</li> <li>Enter your email address in the Business Email field.</li> <li>Click on the GET API KEY button.</li> <li>Enter all the necessary information.</li> <li>Click on the Get API Key button.</li> <li>Set a password for your account and click on the SET PASSWORD button.</li> <li>Use the provided api key with your Humantic AI API credentials in Workflow\u00b2.</li> </ol>"},{"location":"workflow/integrations/credentials/hunter/","title":"Hunter","text":"<p>You can use these credentials to authenticate the following nodes with Hunter. - Hunter</p>"},{"location":"workflow/integrations/credentials/hunter/#prerequisites","title":"Prerequisites","text":"<p>Create a Hunter account.</p>"},{"location":"workflow/integrations/credentials/hunter/#using-access-token","title":"Using Access Token","text":"<ol> <li>Access your Hunter dashboard.</li> <li>Click on your profile icon on the top right.</li> <li>Click on API.</li> <li>Use the key with Hunter node credentials in Workflow\u00b2.</li> </ol>"},{"location":"workflow/integrations/credentials/imap/","title":"IMAP","text":"<p>You can use these credentials to authenticate the following nodes with IMAP. - IMAP Email</p>"},{"location":"workflow/integrations/credentials/imap/#prerequisites","title":"Prerequisites","text":"<p>Create an email account on a service with IMAP support.</p>"},{"location":"workflow/integrations/credentials/imap/#using-imap","title":"Using IMAP","text":"<ol> <li>Retrieve your login credentials and IMAP connection parameters.</li> <li>Use the login credentials and IMAP connection parameters with your IMAP Email node credentials in Workflow\u00b2.</li> <li>Click on the Save button to save your credentials.</li> </ol>"},{"location":"workflow/integrations/credentials/imap/#using-gmail","title":"Using Gmail","text":"<ol> <li>Access your Gmail account.</li> <li>Click on the gears icon on the top and click on See all settings.</li> <li>Click on the Forwarding and POP/IMAP tab.</li> <li>Under the IMAP access section, select 'Enable IMAP'.</li> <li>Click on the Save Changes button.</li> <li>Go to your Google Account page.</li> <li>Click on Security on the left sidebar.</li> <li>Click on 2-Step Verification under the Signing in to Google section.</li> <li>Set up your 2-Step Verification method.</li> <li>Click on App passwords under the Signing in to Google section.</li> <li>Select 'Mail' from the Select app dropdown list.</li> <li>Select 'Other' from the Select device dropdown list.</li> <li>Enter a name in the text field.</li> <li>Click on the GENERATE button.</li> <li>Copy the displayed password.</li> <li>In the IMAP node credentials, enter your email address in the User field. For example, <code>example@gmail.com</code>.</li> <li>Paste the App password you copied in Step 15 in the Password field.</li> <li>Enter <code>imap.gmail.com</code> in the Host field.</li> <li>Toggle SSL/TLS to <code>true</code>.</li> <li>Click on Save to save your credentials.</li> </ol> <p>Note: Before executing the node, set the Ignore SSL Issues option to true as the Gmail certificate is self-signed.</p>"},{"location":"workflow/integrations/credentials/imap/#using-yahoo-mail","title":"Using Yahoo Mail","text":"<ol> <li>Open your Yahoo Mail account.</li> <li>Click on your avatar on the top right and select 'Account info'.</li> <li>Click on the Account security tab in the left sidebar.</li> <li>Scroll down to the bottom and click on Generate app password.</li> <li>Select 'Other app' from the Select your app dropdown list.</li> <li>Enter the name of the app in the Enter custom name field.</li> <li>Click on the Generate button.</li> <li>Copy the displayed password.</li> <li>Enter the name for your credentials in the Credentials Name field in the 'IMAP' credentials in Workflow\u00b2.</li> <li>Enter your email address in the User field.</li> <li>Paste the password you copied earlier in the Password field.</li> <li>Enter <code>imap.mail.yahoo.com</code> in the Host field.</li> <li>Toggle SSL/TLS to <code>true</code>.</li> <li>Click on Save to save your credentials.</li> </ol> <p>The following video demonstrates the steps mentioned above.</p>"},{"location":"workflow/integrations/credentials/imap/#using-outlookcom","title":"Using Outlook.com","text":"<ol> <li>Enter the name for your credentials in the Credentials Name field in the 'IMAP' credentials in Workflow\u00b2.</li> <li>Enter your email address in the User field.</li> <li>Enter your account password in the Password field.</li> <li>Enter <code>outlook.office365.com</code> in the Host field.</li> <li>Toggle SSL/TLS to <code>true</code>.</li> <li>Click on Create to create your credentials.</li> </ol> <p>Note If you get a connection error, please follow the steps mentioned in the FAQs.</p> <p>The following video demonstrates the steps mentioned above.</p>"},{"location":"workflow/integrations/credentials/imap/#faqs","title":"FAQs","text":""},{"location":"workflow/integrations/credentials/imap/#how-to-solve-the-connection-error-when-connecting-to-outlookcom","title":"How to solve the connection error when connecting to Outlook.com?","text":"<p>If you receive a connection error while configuring the credentials for your Outlook account, follow the steps mentioned below: 1. Go to account.live.com/activity. 2. Sign in using the email address and password of your account. 3. Under the Recent activity section, find the Session Type event that matches the most recent time you received the connection error and click to expand it. 4. Select This was me to let the system know you authorize the IMAP connection.</p> <ul> <li>Set up IMAP for Gmail account</li> <li>Sign in with App Passwords for your Gmail Account</li> <li>Set up IMAP for Yahoo mail account</li> <li>Sign in with App Passwords for your Yahoo mail Account</li> <li>POP, IMAP, and SMTP settings for Outlook.com</li> </ul>"},{"location":"workflow/integrations/credentials/intercom/","title":"Intercom","text":"<p>You can use these credentials to authenticate the following nodes with Intercom. - Intercom</p>"},{"location":"workflow/integrations/credentials/intercom/#prerequisites","title":"Prerequisites","text":"<p>Create a Intercom account.</p>"},{"location":"workflow/integrations/credentials/intercom/#using-access-token","title":"Using Access Token","text":"<ol> <li>Create an app in your workspace.</li> <li>Click on Configure, then Authentication within the Developer hub.</li> <li>Use the Access Token with the Intercom node credentials in Workflow\u00b2.</li> </ol>"},{"location":"workflow/integrations/credentials/invoiceNinja/","title":"Invoice Ninja","text":"<p>You can use these credentials to authenticate the following nodes with Invoice Ninja. - Invoice Ninja - Invoice Ninja Trigger</p>"},{"location":"workflow/integrations/credentials/invoiceNinja/#prerequisites","title":"Prerequisites","text":"<p>Create an Invoice Ninja account.</p>"},{"location":"workflow/integrations/credentials/invoiceNinja/#using-access-token","title":"Using Access Token","text":"<ol> <li>Access your Invoice Ninja dashboard.</li> <li>Click on Settings in the bottom left.</li> <li>Scroll down to API keys.</li> <li>Add new token.</li> <li>Use the key and your instance URL with Invoice Ninja node credentials in Workflow\u00b2.</li> </ol>"},{"location":"workflow/integrations/credentials/iterable/","title":"Iterable","text":"<p>You can use these credentials to authenticate the following nodes with Iterable. - Iterable</p>"},{"location":"workflow/integrations/credentials/iterable/#prerequisites","title":"Prerequisites","text":"<p>Create an Iterable account.</p>"},{"location":"workflow/integrations/credentials/iterable/#using-api-key","title":"Using API Key","text":"<ol> <li>Access the Iterable dashboard.</li> <li>Click on Integrations and select 'API keys'.</li> <li>Click on the NEW API KEY button.</li> <li>Enter a name in the Name field.</li> <li>Click on the Create button.</li> <li>Click on the Copy button to copy the API key.</li> <li>Use this API key with your Iterable node credentials in Workflow\u00b2.</li> </ol>"},{"location":"workflow/integrations/credentials/jenkins/","title":"Jenkins","text":"<p>You can use these credentials to authenticate the following nodes with CircleCI. - Jenkins</p>"},{"location":"workflow/integrations/credentials/jenkins/#prerequisites","title":"Prerequisites","text":"<p>Create an account on a Jenkins instance.</p>"},{"location":"workflow/integrations/credentials/jenkins/#using-access-token","title":"Using Access Token","text":"<ol> <li>Access your Jenkins User.</li> <li>Visit the Configure section.</li> <li>Click on the Add new Token button.</li> <li>Type in a name for your token and click on the Generate button.</li> <li>Copy the generated API Token and use it with your Jenkins API node credentials in Workflow\u00b2.</li> </ol>"},{"location":"workflow/integrations/credentials/jira/","title":"Jira","text":"<p>You can use these credentials to authenticate the following nodes with Jira. - Jira - Jira Trigger</p>"},{"location":"workflow/integrations/credentials/jira/#prerequisites","title":"Prerequisites","text":"<p>Create a Jira account.</p>"},{"location":"workflow/integrations/credentials/jira/#using-access-token","title":"Using Access Token","text":"<ol> <li>Access your Jira dashboard.</li> <li>Click on your user icon in the top right.</li> <li>Click on Account Settings.</li> <li>Click on Security tab.</li> <li>Click on Manage API Tokens.</li> <li>Create API token.</li> <li>Use the API token with Jira node credentials in Workflow\u00b2. Your email and the domain under which the Jira account is under must also be included.</li> </ol>"},{"location":"workflow/integrations/credentials/jotForm/","title":"JotForm","text":"<p>You can use these credentials to authenticate the following nodes with JotForm. - JotForm Trigger</p>"},{"location":"workflow/integrations/credentials/jotForm/#prerequisites","title":"Prerequisites","text":"<p>Create a JotForm account.</p>"},{"location":"workflow/integrations/credentials/jotForm/#using-access-token","title":"Using Access Token","text":"<ol> <li>Access your JotForm account.</li> <li>Click on the API tab on the left.</li> <li>Click on the Create New Key button.</li> <li>Change the Permissions to 'Full Access'.</li> <li>Use the key with JotForm node credentials in Workflow\u00b2.</li> </ol>"},{"location":"workflow/integrations/credentials/kafka/","title":"Kafka","text":"<p>You can use these credentials to authenticate the following nodes with Kafka. - Kafka - Kafka Trigger</p>","tags":["Workflow\u00b2","Kafka","Prerequisites Kafka"]},{"location":"workflow/integrations/credentials/kafka/#prerequisites","title":"Prerequisites","text":"<p>Have Kafka up and running. You can refer to the official documentation to learn how to do that.</p>","tags":["Workflow\u00b2","Kafka","Prerequisites Kafka"]},{"location":"workflow/integrations/credentials/kafka/#using-kafka","title":"Using Kafka","text":"<ol> <li>Enter a client ID in the Client ID field.</li> <li>Retrieve the Kafka Brokers and credentials (if any).</li> <li>Use the Client ID, Brokers (comma separated), Username, and Password with your Kafka node credentials in Workflow\u00b2.</li> </ol>","tags":["Workflow\u00b2","Kafka","Prerequisites Kafka"]},{"location":"workflow/integrations/credentials/keap/","title":"Keap","text":"<p>You can use these credentials to authenticate the following nodes with Keap. - Keap - Keap Trigger</p>"},{"location":"workflow/integrations/credentials/keap/#prerequisites","title":"Prerequisites","text":"<p>Create a Keap account.</p>"},{"location":"workflow/integrations/credentials/keap/#using-oauth","title":"Using OAuth","text":"<p>\u26c5\ufe0f Note fordoc2app.cloudintegration.eu users</p> <p>You'll only need to enter the Credentials Name and click on the circle button in the OAuth section to connect your Keap account to Workflow\u00b2.</p> <ol> <li>Access your Keap Developer Console.</li> <li>Click on your email address in the top right corner and select 'Apps' from the dropdown list.</li> <li>Click on the 'New App' button.</li> <li>Enter any necessary information, enable the 'Keap 150k' API and click on the Create button.</li> <li>Use the 'Key' and the 'Secret' displayed with your Keap OAuth2 API credentials in Workflow\u00b2.</li> <li>Click on the circle button in the OAuth section to connect a Keap account to Workflow\u00b2.</li> <li>Click the Save button to save your credentials.</li> </ol> <p></p>"},{"location":"workflow/integrations/credentials/kitemaker/","title":"Kitemaker","text":"<p>You can use these credentials to authenticate the following nodes with Kitemaker. - Kitemaker</p>"},{"location":"workflow/integrations/credentials/kitemaker/#prerequisites","title":"Prerequisites","text":"<p>Create an account on Kitemaker.</p>"},{"location":"workflow/integrations/credentials/kitemaker/#using-access-token","title":"Using Access Token","text":"<ol> <li>Open your Kitemaker work item board.</li> <li>Click on the settings icon next to the organization name in the left sidebar.</li> <li>Select 'Developer settings' from the dropdown list.</li> <li>Click on Add new personal access token under the Personal access tokens section.</li> <li>Enter a name for your token in the Personal access token name field.</li> <li>Click on the Create token button.</li> <li>Copy the displayed token.</li> <li>Enter the name for your credentials in the Credentials Name field in the 'Kitemaker API' credentials in Workflow\u00b2.</li> <li>Paste the token in the Personal Access Token field in the 'Kitemaker API' credentials in Workflow\u00b2.</li> <li>Click on the Create button to create your credentials.</li> </ol> <p>The following video demonstrates the steps mentioned above.</p>"},{"location":"workflow/integrations/credentials/kobotoolbox/","title":"KoBo Toolbox","text":"<p>You can use these credentials to authenticate the following nodes:</p> <ul> <li>KoBo Toolbox trigger</li> <li>KoBo Toolbox</li> </ul> <p>KoBo Toolbox uses an API key for authentication:</p> <ol> <li>Sign up for a KoBo Toolbox account.</li> <li>Follow the KoBo Toolbox API documentation to get your API token. </li> <li>Copy your new key and use it with your KoBo Toolbox node credentials in n8n.</li> </ol>"},{"location":"workflow/integrations/credentials/lemlist/","title":"Lemlist","text":"<p>You can use these credentials to authenticate the following nodes with Lemlist. - Lemlist - Lemlist Trigger</p>"},{"location":"workflow/integrations/credentials/lemlist/#prerequisites","title":"Prerequisites","text":"<p>Create an account on a Lemlist instance.</p>"},{"location":"workflow/integrations/credentials/lemlist/#using-api-key","title":"Using API Key","text":"<ol> <li>Open your Lemlist dashboard.</li> <li>Click on the menu on the top left and select 'Settings' from the dropdown list.</li> <li>Click on Integrations under the Misc section from the left sidebar.</li> <li>Copy the API key displayed under the API section.</li> <li>Enter the name for your credentials in the Credentials Name field in the 'Lemlist API' credentials in Workflow\u00b2.</li> <li>Paste the API key in the API Key field in the 'Lemlist API' credentials in Workflow\u00b2.</li> <li>Click on the Create button to create your credentials.</li> </ol> <p>The following video demonstrates the steps mentioned above.</p>"},{"location":"workflow/integrations/credentials/line/","title":"Line","text":"<p>You can use these credentials to authenticate the following nodes with Line. - Line</p>"},{"location":"workflow/integrations/credentials/line/#prerequisites","title":"Prerequisites","text":"<p>Create a Line account.</p>"},{"location":"workflow/integrations/credentials/line/#using-oauth","title":"Using OAuth","text":"<ol> <li>Access the LINE Notify page.</li> <li>Click on your name on the top right corner and select 'Manage registered services' from the dropdown list.</li> <li>Click on the Add service button.</li> <li>Enter all the necessary information.</li> <li>Copy your OAuth Callback URL from the 'Create New Credentials' screen in Doc\u00b2 and paste it in the Callback URL field.</li> <li>Click on the Agree and continue button.</li> <li>Click on the Add button.</li> <li>Check your inbox for the verification email.</li> <li>Click on the link under the LINE Notify Registration URL in your email.</li> <li>On the LINE Notify page, click on the My services button.</li> <li>Click on the new service you created.</li> <li>Use the provided Client ID and Client Secret with your Line Notify OAuth2 API credentials in Workflow\u00b2.</li> <li>Click on the circle button in the OAuth section to connect a Line account to Workflow\u00b2.</li> <li>Click the Save button to save your credentials in Workflow\u00b2.</li> </ol>"},{"location":"workflow/integrations/credentials/linear/","title":"Linear","text":"<p>You can use these credentials to authenticate the following nodes with Linear. - Linear Trigger</p>"},{"location":"workflow/integrations/credentials/linear/#prerequisites","title":"Prerequisites","text":"<p>Create a Linear account.</p>"},{"location":"workflow/integrations/credentials/linear/#using-the-linear-api","title":"Using the Linear API","text":"<ol> <li>Open the Linear API settings.</li> <li>Click on the Create key button.</li> <li>Copy the key into API Key field of the credentials screen in Workflow\u00b2.</li> </ol>"},{"location":"workflow/integrations/credentials/lingvaNex/","title":"LingvaNex","text":"<p>You can use these credentials to authenticate the following nodes with LingvaNex. - LingvaNex</p>"},{"location":"workflow/integrations/credentials/lingvaNex/#prerequisites","title":"Prerequisites","text":"<p>Create a LingvaNex account.</p>"},{"location":"workflow/integrations/credentials/lingvaNex/#using-api","title":"Using API","text":"<ol> <li>Open your LingvaNex account page.</li> <li>Click on the Cloud API tab.</li> <li>Click on Payment / Subscription. Note that you can use the limited Translation API without having to subscribe or add a payment method.</li> <li>Scroll to the Translation API section.</li> <li>Copy the displayed API key.</li> <li>Enter the name for your credentials in the Credentials Name field in the 'LingvaNex API' credentials in Workflow\u00b2.</li> <li>Paste the API key in the API Key field in the 'LingvaNex API' credentials in Workflow\u00b2.</li> <li>Click on the Create button to create your credentials.</li> </ol> <p>The following video demonstrates the steps mentioned above.</p>"},{"location":"workflow/integrations/credentials/linkedIn/","title":"LinkedIn","text":"<p>You can use these credentials to authenticate the following nodes with LinkedIn. - LinkedIn</p>"},{"location":"workflow/integrations/credentials/linkedIn/#prerequisites","title":"Prerequisites","text":"<p>Create a LinkedIn account.</p>"},{"location":"workflow/integrations/credentials/linkedIn/#using-oauth","title":"Using OAuth","text":"<p>\u26c5\ufe0f Note fordoc2app.cloudintegration.eu users</p> <p>You'll only need to enter the Credentials Name and click on the circle button in the OAuth section to connect your LinkedIn account to Workflow\u00b2.</p> <ol> <li>Access the LinkedIn app creation page.</li> <li>Enter a name in the App name field.</li> <li>Enter your LinkedIn Page/Profile in the LinkedIn Page field.</li> <li>Add a logo by clicking on the Upload a logo button.</li> <li>Agree to the terms and conditions in the Legal agreement section and click the Create app button at the bottom of the page.</li> <li>Verify your application. You can find instructions on how to verify your LinkedIn application in the FAQs below.</li> <li>Enable APIs for your application. You can find instructions on how and which APIs to enable for your LinkedIn application in the FAQs below.</li> <li>Back in the LinkedIn application creation page, click on the Auth tab.</li> <li>Copy the 'OAuth Callback URL' provided in the LinkedIn OAuth2 API credentials in Doc\u00b2 and add it in the 'Authorized redirect URLs for your app' section in the LinkedIn application creation page.</li> <li>Use the displayed Client ID and the Client Secret with your LinkedIn OAuth API credentials in Workflow\u00b2.</li> <li>Click on the circle button in the OAuth section to connect a LinkedIn account to Workflow\u00b2.</li> <li>Click the Save button to save your credentials in Workflow\u00b2.</li> </ol> <p></p>"},{"location":"workflow/integrations/credentials/linkedIn/#faqs","title":"FAQs","text":""},{"location":"workflow/integrations/credentials/linkedIn/#how-do-i-verify-my-linkedin-application","title":"How do I verify my LinkedIn application?","text":"<ol> <li>Open the application's page on the LinkedIn developers portal.</li> <li>Click on the Verify button.</li> <li>Click on the Generate URL button under the Verification URL section.</li> <li>Copy the generated URL and open it in your web browser.</li> <li>Click on the Verify button to verify your LinkedIn OAuth application.</li> </ol>"},{"location":"workflow/integrations/credentials/linkedIn/#how-do-i-enable-apis-for-my-linkedin-application","title":"How do I enable APIs for my LinkedIn application?","text":"<ol> <li>Click on the Products tab in your LinkedIn application page.</li> <li>Click the Select button next to the API you want to enable in the Products section.</li> <li>Click the checkbox to accept the terms and conditions and then click on the Add product button.</li> </ol> <p>Note: You will need to enable the Share on LinkedIn and Sign In with LinkedIn products to connect with Workflow\u00b2. If you would like to connect an organizational LinkedIn account to Doc\u00b2, then you also additionally need to enable the Marketing Developer Platform product.</p>"},{"location":"workflow/integrations/credentials/magento2/","title":"Magento 2","text":"<p>You can use these credentials to authenticate the following nodes:</p> <ul> <li>Magento 2</li> </ul>"},{"location":"workflow/integrations/credentials/magento2/#prerequisites","title":"Prerequisites","text":"<p>Create a Magento account.</p>"},{"location":"workflow/integrations/credentials/magento2/#using-access-token","title":"Using Access Token","text":"<p>From your Magento admin panel:</p> <ol> <li>Navigate to System &gt; Extensions &gt; Integrations.</li> <li>Select Add New Integration.</li> <li>Enter a name for your Doc\u00b2 integration and your admin password.</li> <li>Navigate to the API tab and select the Magento resources this Doc\u00b2 integration should be able to access.</li> <li>Select Save to confirm your selections.</li> <li>From the Integrations page, click Activate for the new Doc\u00b2 integration.</li> <li>Select Allow to display a dialog screen with the credentials.</li> <li>Copy the Access Token value to use in Workflow\u00b2.</li> </ol> <p>From n8n:</p> <ol> <li>Enter the Host address of your Magento store.</li> <li>Enter the Access Token obtained above.</li> <li>Click Save to create the credentials.</li> </ol>"},{"location":"workflow/integrations/credentials/mailcheck/","title":"Mailcheck","text":"<p>You can use these credentials to authenticate the following nodes with Mailcheck. - Mailcheck</p>"},{"location":"workflow/integrations/credentials/mailcheck/#prerequisites","title":"Prerequisites","text":"<p>Create a Mailcheck account.</p>"},{"location":"workflow/integrations/credentials/mailcheck/#using-api-key","title":"Using API Key","text":"<ol> <li>Open the Mailcheck dashboard page.</li> <li>Click on the API on the top menu.</li> <li>Enter a key name in the Enter the key name field.</li> <li>Click on the Create Key button.</li> <li>Click on the Copy button to copy the API key.</li> <li>Enter a name for your credentials in the Credentials Name field in the 'Mailcheck API' credentials in Workflow\u00b2.</li> <li>Paste the API key in the API Key field in the 'Mailcheck API' credentials in Workflow\u00b2.</li> <li>Click on the Create button to create your credentials in Workflow\u00b2.</li> </ol> <p>The following video demonstrates the steps mentioned above.</p> <p>Please reach out to Mailcheck support should you have any questions support@mailcheck.co</p>"},{"location":"workflow/integrations/credentials/mailchimp/","title":"Mailchimp","text":"<p>You can use these credentials to authenticate the following nodes with Mailchimp. - Mailchimp - Mailchimp Trigger</p>"},{"location":"workflow/integrations/credentials/mailchimp/#prerequisites","title":"Prerequisites","text":"<p>Create a Mailchimp account.</p>"},{"location":"workflow/integrations/credentials/mailchimp/#using-oauth","title":"Using OAuth","text":"<p>\u26c5\ufe0f Note fordoc2app.cloudintegration.eu users</p> <p>You'll only need to enter the Credentials Name and click on the circle button in the OAuth section to connect your Mailchimp account to Workflow\u00b2.</p> <ol> <li>Access your Mailchimp dashboard.</li> <li>Click on your user icon on the top right.</li> <li>Click on 'Account' in the dropdown list.</li> <li>Click on the Extras dropdown list and then select 'Registered apps'.</li> <li>Click on the Register An App button.</li> <li>Copy the 'OAuth Callback URL' from your Doc\u00b2 Mailchimp OAuth2 API credentials and paste it in the 'Redirect URI' field of the Mailchimp form.</li> <li>Fill out any other necessary details and click on the Create button.</li> <li>Use the generated Client ID and Client secret with your Mailchimp OAuth2 API node credentials in Workflow\u00b2.</li> <li>Click on the circle button in the OAuth section to connect your Mailchimp account to Workflow\u00b2.</li> <li>Click the Save button to save your credentials.</li> </ol> <p></p>"},{"location":"workflow/integrations/credentials/mailchimp/#using-access-token","title":"Using Access Token","text":"<ol> <li>Access your Mailchimp dashboard.</li> <li>Click on your user icon on the top right.</li> <li>Click on 'Account' in the dropdown list.</li> <li>Click on the Extras dropdown list and then select 'API Keys'.</li> <li>Scroll down and create a new key by clicking on 'Create a Key' under the 'Your API keys' section.</li> <li>Use the API key with your Mailchimp node credentials in Workflow\u00b2.</li> </ol>"},{"location":"workflow/integrations/credentials/mailerLite/","title":"MailerLite","text":"<p>You can use these credentials to authenticate the following nodes with MailerLite. - MailerLite - MailerLite Trigger</p>"},{"location":"workflow/integrations/credentials/mailerLite/#prerequisites","title":"Prerequisites","text":"<p>Create a MailerLite account.</p>"},{"location":"workflow/integrations/credentials/mailerLite/#using-api-key","title":"Using API Key","text":"<ol> <li>Access the MailerLite dashboard.</li> <li>Click on the profile icon on the top right corner.</li> <li>Select 'Integrations' from the dropdown list.</li> <li>Click on 'Developer API' in the MailerLite API section.</li> <li>Copy the API key that is displayed and use it with your MailerLite node credentials in Workflow\u00b2.</li> </ol>"},{"location":"workflow/integrations/credentials/mailgun/","title":"Mailgun","text":"<p>You can use these credentials to authenticate the following nodes with Mailgun. - Mailgun</p>"},{"location":"workflow/integrations/credentials/mailgun/#prerequisites","title":"Prerequisites","text":"<p>Create a Mailgun account.</p>"},{"location":"workflow/integrations/credentials/mailgun/#using-access-token","title":"Using Access Token","text":"<ol> <li>Access your Mailgun dashboard.</li> <li>Click on Settings on the left panel.</li> <li>Click on API Keys.</li> <li>Click on the eye icon to uncover your API key.</li> <li>Use the API key with Mailgun node credentials in Workflow\u00b2.</li> </ol>"},{"location":"workflow/integrations/credentials/mailjet/","title":"Mailjet","text":"<p>You can use these credentials to authenticate the following nodes with Mailjet. - Mailjet - Mailjet Trigger</p>"},{"location":"workflow/integrations/credentials/mailjet/#prerequisites","title":"Prerequisites","text":"<p>Create a Mailjet account.</p>"},{"location":"workflow/integrations/credentials/mailjet/#using-access-token","title":"Using Access Token","text":"<ol> <li>Access your Mailjet dashboard.</li> <li>Click on your user icon in the top right.</li> <li>Click on 'Account Settings'.</li> <li>Under REST API, click on 'Master API Key &amp; Sub API key management'.</li> <li>Use the API key and Secret Key with Mailjet node credentials in Workflow\u00b2.</li> </ol>"},{"location":"workflow/integrations/credentials/mandrill/","title":"Mandrill","text":"<p>You can use these credentials to authenticate the following nodes with Mandrill. - Mandrill</p>"},{"location":"workflow/integrations/credentials/mandrill/#prerequisites","title":"Prerequisites","text":"<p>Create a Mandrill account.</p>"},{"location":"workflow/integrations/credentials/mandrill/#using-access-token","title":"Using Access Token","text":"<ol> <li>Access your Mandrill dashboard.</li> <li>Click on the Settings icon in the sidebar.</li> <li>Click on the + New API Key button and create a new API Key.</li> <li>Use the key with your Mandrill API credentials in Workflow\u00b2.</li> </ol>"},{"location":"workflow/integrations/credentials/marketstack/","title":"Marketstack","text":"<p>You can use these credentials to authenticate the following nodes:</p> <ul> <li>Marketstack</li> </ul>"},{"location":"workflow/integrations/credentials/marketstack/#prerequisites","title":"Prerequisites","text":"<p>Create an account on Marketstack.</p>"},{"location":"workflow/integrations/credentials/marketstack/#using-api-key","title":"Using API Key","text":"<p>From Marketstack:</p> <ol> <li>Access your Marketstack dashboard.</li> <li>Copy the key provided in the Your API Access Key field.</li> </ol> <p>From n8n:</p> <ol> <li>Enter a descriptive Credentials Name.</li> <li>Under Credential Data, enter the key obtained above in the corresponding field.</li> <li>Click Save to create your new credentials.</li> </ol>"},{"location":"workflow/integrations/credentials/matrix/","title":"Matrix","text":"<p>You can use these credentials to authenticate the following nodes with Matrix. - Matrix</p>"},{"location":"workflow/integrations/credentials/matrix/#prerequisites","title":"Prerequisites","text":"<p>Create an account on a Matrix server.</p>"},{"location":"workflow/integrations/credentials/matrix/#using-access-token","title":"Using Access Token","text":"<ol> <li>Access the Matrix server.</li> <li>Click on your username in the top left corner.</li> <li>Select 'All settings' from the dropdown list.</li> <li>Click on Help &amp; About in the left sidebar.</li> <li>Scroll down to the Advanced section.</li> <li>Click on click to reveal next to 'Access Token'.</li> <li>Copy the 'Homeserver URL' under the Advanced section if you are using a custom server.</li> <li>Use this Homeserver URL and Access Token with your Matrix node credentials in Workflow\u00b2.</li> </ol>"},{"location":"workflow/integrations/credentials/mattermost/","title":"Mattermost","text":"<p>You can use these credentials to authenticate the following nodes with Mattermost. - Mattermost</p>"},{"location":"workflow/integrations/credentials/mattermost/#prerequisites","title":"Prerequisites","text":"<ul> <li>Create a Mattermost account.</li> </ul> <p>Note: A system administrator has to grant permission to the user to generate an access token. Refer to the FAQs to learn how a system administrator can grant this permission.</p>"},{"location":"workflow/integrations/credentials/mattermost/#using-access-token","title":"Using Access Token","text":"<ol> <li>Click on your username on the top left corner and select 'Account Settings' from the dropdown list.</li> <li>Click on the Security tab.</li> <li>Click on Edit in the Personal Access Tokens section.</li> <li>Click on the Create Token button.</li> <li>Enter a description in the Token Description field.</li> <li>Click on the Save button.</li> <li>Click on the Yes, Create button.</li> <li>Use this Acess Token with your Mattermost node credentials in Workflow\u00b2.</li> </ol>"},{"location":"workflow/integrations/credentials/mattermost/#faqs","title":"FAQs","text":""},{"location":"workflow/integrations/credentials/mattermost/#how-to-grant-permissions-to-the-users-to-generate-access-tokens","title":"How to grant permissions to the users to generate access tokens?","text":"<p>A system admin has to grant permissions to the users for the user to create access tokens. If you're a system admin, follow the steps mentioned below.</p> <ol> <li>Click on your username on the top left corner and select 'System Console' from the dropdown list.</li> <li>Click on Integration Management under the INTEGRATIONS section on the left sidebar.</li> <li>Go to Integration Management.</li> <li>Scroll down to the Enable Personal Access Tokens and enable personal access tokens.</li> <li>Click on the Save button.</li> <li>Click on Users under the USER MANAGEMENT section on the left sidebar.</li> <li>Personal access tokens are generated for individual users, so they must be enabled for each user. Click on Member next to the user you want to grant permission to, and select 'Manage Roles' from the dropdown list.</li> <li>Check the Allow this account to generate personal access tokens checkbox.</li> <li>Select any additional permissions you want to grant the user and click on the Save button.</li> </ol> <p>Note: You may also create a bot account and apply the same for it.</p> <p>The user can now generate a personal access token by going to  their account settings and following the steps mentioned above.</p> <p></p> <ul> <li>Personal Access Tokens</li> </ul>"},{"location":"workflow/integrations/credentials/mautic/","title":"Mautic","text":"<p>You can use these credentials to authenticate the following nodes with Mautic. - Mautic - Mautic Trigger</p>"},{"location":"workflow/integrations/credentials/mautic/#prerequisites","title":"Prerequisites","text":"<p>Create an account on a Mautic instance.</p>"},{"location":"workflow/integrations/credentials/mautic/#using-oauth","title":"Using OAuth","text":"<ol> <li>Open your Mautic dashboard.</li> <li>Click on the gear icon on the top right and select API Credentials.</li> <li>Click on the + New button on the top right.</li> <li>Select 'OAuth 2' from the Authorization Protocol dropdown list.</li> <li>Enter the name of the credentials in the Name field.</li> <li>Copy the 'OAuth Callback URL' provided in the 'Mautic OAuth2 API' credentials in Workflow\u00b2.</li> <li>Paste it in the Redirect URI field on the Mautic credentials page.</li> <li>Click on the Apply button.</li> <li>Enter the name for your credentials in the Credentials Name field in the 'Mautic OAuth2 API' credentials in Workflow\u00b2.</li> <li>Copy the Client ID from the Mautic credentials page.</li> <li>Paste it in the Client ID field in the 'Mautic OAuth2 API' credentials in Workflow\u00b2.</li> <li>Copy the Client Secret from the Mautic credentials page.</li> <li>Paste it in the Client Secret field in the 'Mautic OAuth2 API' credentials in Workflow\u00b2.</li> <li>Enter the URL of your Mautic instance in the URL field.</li> <li>Click on the circle button in the OAuth section to connect a Mautic account to Workflow\u00b2.</li> <li>Click on the Save button to save your credentials.</li> </ol> <p>The following video demonstrates the steps mentioned above.</p>"},{"location":"workflow/integrations/credentials/mautic/#using-credentials","title":"Using Credentials","text":"<ol> <li>Open your Mautic dashboard.</li> <li>Click on the gear icon on the top right and select Configuration.</li> <li>Select 'API Settings' from the left sidebar.</li> <li>Select 'Yes' under the Enable HTTP basic auth? section.</li> <li>Click on the Apply button.</li> <li>Enter the name for your credentials in the Credentials Name field in the 'Mautic API' credentials in Workflow\u00b2.</li> <li>Enter the URL of your Mautic instance in the URL field in the 'Mautic API' credentials in Workflow\u00b2.</li> <li>Enter your Mautic username in the Username field in the 'Mautic API' credentials in Workflow\u00b2.</li> <li>Enter your Mautic password in the Password field in the 'Mautic API' credentials in Workflow\u00b2.</li> <li>Click on the Create button to create your credentials.</li> </ol> <p>The following video demonstrates the steps mentioned above.</p>"},{"location":"workflow/integrations/credentials/medium/","title":"Medium","text":"<p>You can use these credentials to authenticate the following nodes with Medium. - Medium</p>"},{"location":"workflow/integrations/credentials/medium/#prerequisites","title":"Prerequisites","text":"<ul> <li>Create an account on Medium.</li> <li>Request access to credentials by emailing yourfriends@medium.com.</li> </ul>"},{"location":"workflow/integrations/credentials/medium/#using-oauth","title":"Using OAuth","text":"<ol> <li>Log in to your Medium account.</li> <li>Click on the avatar on the top right corner.</li> <li>Select 'Settings' in the drop-down menu.</li> <li>Select 'Developers' from the menu on the left.</li> <li>Click on the 'Manage applications' button.</li> <li>Click on the 'New application' button.</li> <li>Give your application a Name, and provide a Description.</li> <li>Select the 'OAuth 2' option from the Authorization Protocol dropdown list.</li> <li>Copy the 'OAuth Callback URL' provided in the Medium OAuth2 API credentials in Doc\u00b2 and paste it in the 'Callback URLs' field in the Medium application page.</li> <li>Click on 'Save' to generate the credentials.</li> <li>Copy and paste Client ID and Client Secret in the Medium OAuth2 API credentials in Workflow\u00b2.</li> <li>Click on the circle button in the OAuth section to connect a Medium account to Workflow\u00b2.</li> <li>Click the Save button to save your credentials in Workflow\u00b2.</li> </ol>"},{"location":"workflow/integrations/credentials/medium/#using-access-token","title":"Using Access Token","text":"<ol> <li>Log in to your Medium account.</li> <li>Click on the avatar on the top right corner.</li> <li>Select 'Settings' in the drop-down menu.</li> <li>Select 'Integration tokens' from the menu on the left.</li> <li>Enter a description for your token in the field.</li> <li>Click on the 'Get integration token' button.</li> <li>Copy and paste Token in the Medium API credentials in Workflow\u00b2.</li> <li>Click the Save button to save your credentials in Workflow\u00b2.</li> </ol>"},{"location":"workflow/integrations/credentials/messageBird/","title":"MessageBird","text":"<p>You can use these credentials to authenticate the following nodes with MessageBird. - MessageBird</p>"},{"location":"workflow/integrations/credentials/messageBird/#prerequisites","title":"Prerequisites","text":"<p>Create a MessageBird account.</p>"},{"location":"workflow/integrations/credentials/messageBird/#using-access-token","title":"Using Access Token","text":"<ol> <li>Access your MessageBird dashboard.</li> <li>Go to the Developers section.</li> <li>Click on API access.</li> <li>Click on 'Add access key' and create a new API key.</li> <li>Use this API key with your MessageBird API node credentials in Workflow\u00b2.</li> </ol>"},{"location":"workflow/integrations/credentials/microsoft-old/","title":"Microsoft","text":"<p>You can use these credentials to authenticate the following nodes with Microsoft. - Microsoft Dynamics CRM - Microsoft Excel - Microsoft Graph Security - Microsoft OneDrive - Microsoft Outlook - Microsoft Teams - Microsoft To Do</p>"},{"location":"workflow/integrations/credentials/microsoft-old/#prerequisites","title":"Prerequisites","text":"<p>Create a Microsoft Azure account.</p>"},{"location":"workflow/integrations/credentials/microsoft-old/#using-oauth","title":"Using OAuth","text":"<p>\u26c5\ufe0f Note fordoc2app.cloudintegration.eu users</p> <p>You'll only need to enter the Credentials Name and click on the circle button in the OAuth section to connect your Microsoft account to Workflow\u00b2.</p> <ol> <li>Access the Microsoft Application Registration Portal.</li> <li>Click on the Register an application button.</li> <li>Enter a name for your app in the Name field.</li> <li>Select 'Accounts in any organizational directory (Any Azure AD directory - Multitenant) and personal Microsoft accounts (eg. Skype, Xbox)' under the Supported account types section.</li> <li>Copy the 'OAuth Callback URL' provided in the Microsoft node credentials in Workflow\u00b2.</li> <li>Paste it in the Redirect URI (optional) field on the Register an application page.</li> <li>Click on the Register button.</li> <li>Copy the Application (client) ID.</li> <li>Enter the name for your credentials in the Credentials Name field in the Microsoft node credentials in Workflow\u00b2.</li> <li>Paste the Application ID in the Client ID field in the Microsoft node credentials in Workflow\u00b2.</li> <li>On your Microsoft application page, click on Certificates &amp; secrets in the left sidebar.</li> <li>Click on the + New client secret button under the Client secrets section.</li> <li>Enter a description in the Description field.</li> <li>Click on the Add button.</li> <li>Copy the displayed secret under the Value column.</li> <li>Paste the secret in the Client Secret field in the Microsoft node credentials in Workflow\u00b2.</li> <li>Click on the circle button in the OAuth section to connect a Microsoft account to Workflow\u00b2.</li> <li>Login to your Microsoft account and allow the app to access your info.</li> <li>Click on the Save button in the Microsoft node credentials in Doc\u00b2 to save your credentials.</li> </ol> <p>The following video demonstrates the steps mentioned above.</p>"},{"location":"workflow/integrations/credentials/microsoft/","title":"Microsoft","text":"<p>You can use these credentials to authenticate the following nodes with Microsoft. - Microsoft Dynamics CRM - Microsoft Excel - Microsoft Graph Security - Microsoft OneDrive - Microsoft Outlook - Microsoft Teams - Microsoft To Do</p>"},{"location":"workflow/integrations/credentials/microsoft/#prerequisites","title":"Prerequisites","text":"<p>Create a Microsoft Azure account.</p>"},{"location":"workflow/integrations/credentials/microsoft/#using-oauth","title":"Using OAuth","text":"<p>\u26c5\ufe0f Note fordoc2app.cloudintegration.eu users</p> <p>You'll only need to enter the Credentials Name and click on the circle button in the OAuth section to connect your Microsoft account to Workflow\u00b2.</p> <p>1. Access the Microsoft Application Registration Portal 2. Click on the <code>+ New registration</code> button      3. Enter a name for your app in the <code>Name</code> field. 4. Select <code>Accounts in any organizational directory (Any Azure AD directory - Multitenant) and personal     Microsoft accounts (eg. Skype, Xbox)</code> under the Supported account types section. 5. Copy the <code>OAuth Callback URL</code> provided in the Microsoft node credentials in Workflow\u00b2. 6. Choose Web and paste it in the next field under the <code>Redirect URI (optional)</code> section.      7. Click on the <code>Register</code> button at the bottom left. 8. Copy the Application (client) ID. 9. Paste the Application ID in the <code>Client ID</code> field in the Microsoft node credentials in Workflow\u00b2.      10. On your Microsoft application page, click on Certificates &amp; secrets in the left sidebar.      11. Click on the <code>+ New client secret</code> button under the Client secrets section.      12. Enter a description in the Description field. 13. Click on the <code>Add</code> button. 14. Copy the displayed secret under the Value column. 15. Paste the secret in the Client Secret field in the Microsoft node credentials in Workflow\u00b2.      16. Click on the button in the OAuth section to connect a Microsoft account to Workflow\u00b2. 17. Login to your Microsoft account and allow the app to access your info. 18. Click on the <code>Save</code> button in the Microsoft node credentials in DOC\u00b2 to save your credentials.</p> <p>The following video demonstrates the steps mentioned above.</p>"},{"location":"workflow/integrations/credentials/microsoftSql/","title":"Microsoft SQL","text":"<p>You can use these credentials to authenticate the following nodes with Microsoft SQL. - Microsoft SQL</p>"},{"location":"workflow/integrations/credentials/microsoftSql/#prerequisites","title":"Prerequisites","text":"<p>Create an user account on a Microsoft SQL server. </p>"},{"location":"workflow/integrations/credentials/microsoftSql/#using-database-connection","title":"Using Database Connection","text":"<ol> <li>Retrieve your Microsoft SQL credentials and connection parameters.</li> <li>Use the credentials and connection parameters with your Microsoft SQL node credentials in Workflow\u00b2.</li> </ol>"},{"location":"workflow/integrations/credentials/mindee/","title":"Mindee","text":"<p>You can use these credentials to authenticate the following nodes with Mindee. - Mindee</p>","tags":["Workflow\u00b2","Mindee","Prerequisites Mindee","Using API Key"]},{"location":"workflow/integrations/credentials/mindee/#prerequisites","title":"Prerequisites","text":"<p>Create a Mindee account.</p>","tags":["Workflow\u00b2","Mindee","Prerequisites Mindee","Using API Key"]},{"location":"workflow/integrations/credentials/mindee/#using-api-key","title":"Using API Key","text":"<ol> <li>Access the Mindee APIs Hub.</li> <li>Click on the API card that you want to use.</li> <li>Click on the Try for free button under the Pricing section.</li> <li>Click on API Keys in the left sidebar.</li> <li>Click on the Add key button.</li> <li>Enter a name for the token.</li> <li>Click on Add new key.</li> <li>Use this API key with your Mindee node credentials in Workflow\u00b2.</li> </ol>","tags":["Workflow\u00b2","Mindee","Prerequisites Mindee","Using API Key"]},{"location":"workflow/integrations/credentials/misp/","title":"MISP","text":"<p>You can use these credentials to authenticate the following nodes:</p> <ul> <li>MISP</li> </ul>"},{"location":"workflow/integrations/credentials/misp/#prerequisites","title":"Prerequisites","text":"<p>Install and run a MISP instance.</p>"},{"location":"workflow/integrations/credentials/misp/#using-api-key","title":"Using API Key","text":"<p>From your MISP UI: 1. Navigate to the Event Actions &gt; Automation menu. 2. Copy the API Key provided there.</p> <p>From n8n:</p> <ol> <li>Enter your API key and application Base URL.</li> <li>Use the toggle to select if you want to Allow Unauthorized Certificates.</li> <li>Click Save to create your credentials.</li> </ol>"},{"location":"workflow/integrations/credentials/mocean/","title":"Mocean","text":"<p>You can use these credentials to authenticate the following nodes with Mocean. - Mocean</p>"},{"location":"workflow/integrations/credentials/mocean/#prerequisites","title":"Prerequisites","text":"<p>Create a Mocean account.</p>"},{"location":"workflow/integrations/credentials/mocean/#using-access-token","title":"Using Access Token","text":"<ol> <li>Access your Mocean Dashboard.</li> <li>Your API key and secret will be visible.</li> <li>Use the API key and secret in your Mocean node credentials in Workflow\u00b2.</li> </ol>"},{"location":"workflow/integrations/credentials/mondayCom/","title":"monday.com","text":"<p>You can use these credentials to authenticate the following nodes with monday.com. - monday.com</p>"},{"location":"workflow/integrations/credentials/mondayCom/#prerequisites","title":"Prerequisites","text":"<p>Create a monday.com account.</p>"},{"location":"workflow/integrations/credentials/mondayCom/#using-access-token","title":"Using Access Token","text":"<ol> <li>Access your monday.com dashboard.</li> <li>Click on the user icon in the bottom left.</li> <li>Click on Admin.</li> <li>Click on API and generate an API V2 Token.</li> <li>Use the token in your monday.com node credentials in Workflow\u00b2.</li> </ol>"},{"location":"workflow/integrations/credentials/mongoDb/","title":"MongoDB","text":"<p>You can use these credentials to authenticate the following nodes with MongoDB. - MongoDB</p>"},{"location":"workflow/integrations/credentials/mongoDb/#prerequisites","title":"Prerequisites","text":"<p>Create an user account with the appropriate permissions on a MongoDB server.</p>"},{"location":"workflow/integrations/credentials/mongoDb/#using-access-token","title":"Using Access Token","text":"<ol> <li>Retrieve your MongoDB credentials and connection parameters.</li> <li>Use the credentials and connection parameters with your MongoDB node credentials in Workflow\u00b2.</li> </ol>"},{"location":"workflow/integrations/credentials/monicaCrm/","title":"Monica CRM","text":"<p>You can use these credentials to authenticate the following nodes:</p> <ul> <li>Monica CRM</li> </ul>"},{"location":"workflow/integrations/credentials/monicaCrm/#prerequisites","title":"Prerequisites","text":"<p>Sign up for a Monica CRM account or self-host an instance.</p>"},{"location":"workflow/integrations/credentials/monicaCrm/#using-access-token","title":"Using Access Token","text":"<p>From Monica CRM:</p> <ol> <li>Access your dashboard and navigate to the *Settings menu.</li> <li>From the API tab select Create New Token.</li> <li>Enter a name for your new token and click Create.</li> <li>Copy the access token that is displayed in the popup window.</li> </ol> <p>From n8n:</p> <ol> <li>Enter a descriptive Credentials Name.</li> <li>From the Credential Data section, select your environment type: Cloud-hosted or Self-hosted.</li> <li>(Self-hosted Only) Enter the domain of your Monica CRM instance.</li> <li>In the *API Token field enter the token created above.</li> <li>Click Create to save your new credentials.</li> </ol>"},{"location":"workflow/integrations/credentials/mqtt/","title":"MQTT","text":"<p>You can use these credentials to authenticate the following nodes with MQTT. - MQTT - MQTT Trigger</p>"},{"location":"workflow/integrations/credentials/mqtt/#prerequisites","title":"Prerequisites","text":"<p>You need to have a MQTT broker installed.</p>"},{"location":"workflow/integrations/credentials/mqtt/#using-mqtt","title":"Using MQTT","text":"<p>Use your Protocol, Host, Port, Username, and Password as the MQTT Trigger credential data in Workflow\u00b2.</p> <p>Optionally, you can enable SSL and provide a CA or Client certificate.</p>"},{"location":"workflow/integrations/credentials/msg91/","title":"MSG91","text":"<p>You can use these credentials to authenticate the following nodes with MSG91. - MSG91</p>"},{"location":"workflow/integrations/credentials/msg91/#prerequisites","title":"Prerequisites","text":"<p>Create a MSG91 account.</p>"},{"location":"workflow/integrations/credentials/msg91/#using-access-token","title":"Using Access Token","text":"<ol> <li>Login to your account.</li> <li>Click on the dashboard button on the lop left.</li> <li>Click on 'Developer Platform'.</li> <li>Click on 'Authkey' in the left panel.</li> <li>Click on Create New.</li> <li>Enter the details and click on the Add button.</li> <li>Use the token in your MSG91 node credentials in Workflow\u00b2.</li> </ol>"},{"location":"workflow/integrations/credentials/mySql/","title":"MySQL","text":"<p>You can use these credentials to authenticate the following nodes with MySQL. - MySQL</p>"},{"location":"workflow/integrations/credentials/mySql/#prerequisites","title":"Prerequisites","text":"<p>Create an user account on a MySQL server.</p>"},{"location":"workflow/integrations/credentials/mySql/#using-database-connection","title":"Using Database Connection","text":"<ol> <li>Retrieve your MySQL credentials and connection parameters.</li> <li>Use the credentials and connection parameters with your MySQL node credentials in Workflow\u00b2.</li> </ol>"},{"location":"workflow/integrations/credentials/nasa/","title":"NASA","text":"<p>You can use these credentials to authenticate the following nodes with NASA. - NASA</p>"},{"location":"workflow/integrations/credentials/nasa/#using-api-key","title":"Using API Key","text":"<ol> <li>Access the NASA Open APIs page.</li> <li>Scroll down to the Generate API Key section.</li> <li>Enter the required information.</li> <li>Click on the Signup button.</li> <li>Use this API Key with your NASA node credentials in Workflow\u00b2.</li> </ol>"},{"location":"workflow/integrations/credentials/netlify/","title":"Netlify","text":"<p>You can use these credentials to authenticate the following nodes:</p> <ul> <li>Netlify</li> <li>Netlify Trigger</li> </ul>","tags":["Workflow\u00b2","Netlify","Prerequisites Netlify","Access Token"]},{"location":"workflow/integrations/credentials/netlify/#prerequisites","title":"Prerequisites","text":"<p>Create a Netlify account.</p>","tags":["Workflow\u00b2","Netlify","Prerequisites Netlify","Access Token"]},{"location":"workflow/integrations/credentials/netlify/#using-access-token","title":"Using Access Token","text":"<p>From the Netlify UI:</p> <ol> <li>Navigate to User Settings &gt; Personal Access Tokens.</li> <li>Select New access token.</li> <li>Enter a description and select Generate token.</li> </ol> <p>From n8n:</p> <ol> <li>Enter the access token obtained above.</li> <li>Click Save to create your credentials.</li> </ol>","tags":["Workflow\u00b2","Netlify","Prerequisites Netlify","Access Token"]},{"location":"workflow/integrations/credentials/nextCloud/","title":"Nextcloud","text":"<p>You can use these credentials to authenticate the following nodes with Nextcloud. - Nextcloud</p>"},{"location":"workflow/integrations/credentials/nextCloud/#prerequisites","title":"Prerequisites","text":"<p>Create a Nextcloud account.</p>"},{"location":"workflow/integrations/credentials/nextCloud/#using-oauth","title":"Using OAuth","text":"<ol> <li>Log in to your Nextcloud account.</li> <li>Click on the user icon in the top right.</li> <li>Select 'Settings' in the drop down menu.</li> <li>Click on 'Security' under Administration in the sidebar.</li> <li>Copy the 'OAuth Callback URL' provided in the Nextcloud OAuth2 API credentials in Doc\u00b2 and paste it in the Redirection URI field under the 'OAuth 2.0 clients' section in the Nextcloud page.</li> <li>Fill out any other information that is necessary and click on the 'Add' button.</li> <li>Click on the eye icon to reveal the Secret and use the 'Client Identifier' and the 'Secret' with your Nextcloud OAuth2 API credentials in Workflow\u00b2.</li> <li>Replace your domain in the samples for the Authorization URL and Access Token URL fields.</li> <li>Enter your Web DAV URL in the Web DAV URL field.</li> <li>Click on the circle button in the OAuth section to connect a Nextcloud account to Workflow\u00b2.</li> <li>Click the Save button to save your credentials.</li> </ol>"},{"location":"workflow/integrations/credentials/nextCloud/#using-username-and-password","title":"Using Username and Password","text":"<p>Use your Web DAV URL along with your Nextcloud username and password in the node credentials.</p>"},{"location":"workflow/integrations/credentials/nocoDb/","title":"NocoDB","text":"<p>You can use these credentials to authenticate the following nodes:</p> <ul> <li>NocoDB</li> </ul>"},{"location":"workflow/integrations/credentials/nocoDb/#prerequisites","title":"Prerequisites","text":"<ul> <li>Install NocoDB</li> <li>Enable API Access</li> </ul>"},{"location":"workflow/integrations/credentials/nocoDb/#using-auth-token","title":"Using Auth Token","text":"<p>From n8n:</p> <ol> <li>Enter a descriptive Credentials Name.</li> <li>In the Credentials Data section enter the following:<ul> <li>API Token: The authentication token for your NocoDB project, obtained when enabling API access (above).</li> <li>Host: The host of your NocoDB instance, for example <code>http://localhost:8080</code>.</li> </ul> </li> <li>Click Create to save your new credentials.</li> </ol>"},{"location":"workflow/integrations/credentials/notion/","title":"Notion","text":"<p>You can use these credentials to authenticate the following nodes with Notion. - Notion - Notion Trigger</p>"},{"location":"workflow/integrations/credentials/notion/#prerequisites","title":"Prerequisites","text":"<p>Create a Notion account.</p>"},{"location":"workflow/integrations/credentials/notion/#using-api-key","title":"Using API Key","text":"<ol> <li>Open your Notion workspace.</li> <li>Click on Settings &amp; Members in the left-sidebar.</li> <li>Select Integrations and click on Develop your own integrations.</li> <li>Click on the + New integration button or the Create new integration card.</li> <li>Enter a name for your app in the Name field.</li> <li>Select a workspace to install the integration from the Associated workspace dropdown list.</li> <li>Click on the Submit button.</li> <li>Click on Show next to the Internal Integration Token field.</li> <li>Click on Copy to copy the displayed token.</li> <li>Enter the name for your credentials in the Credentials Name field in the 'Notion API' credentials in Workflow\u00b2.</li> <li>Paste the token in the API Key field in the 'Notion API' credentials in Workflow\u00b2.</li> <li>Click on the Create button to create your credentials.</li> </ol> <p>Note: Share the specific pages with the app for those pages to be accessed using the API.</p> <p>The following video demonstrates the steps mentioned above.</p>"},{"location":"workflow/integrations/credentials/odoo/","title":"Odoo credentials","text":"<p>You can use these credentials to authenticate the following nodes with Odoo:</p> <ul> <li> <p>Odoo</p> </li> <li> <p>Sign up for Odoo and create an API key or password. Refer to Odoo's documentation for more information: External API. Note that some Odoo modules and settings require API keys, not passwords.</p> </li> <li>In Doc\u00b2, create a new credential. You can either:<ul> <li>Click Credentials &gt; New, then search for Odoo API. After selecting Odoo API, click Continue.</li> <li>In an Odoo node, click the Credential for Odoo API dropdown, then click Create new.</li> </ul> </li> <li>Enter your Odoo information:<ul> <li>Site URL: the domain of your Odoo instance.</li> <li>Username: username as displayed on the user's Change password screen in Odoo.</li> <li>Database name: the name of the Odoo instance.</li> <li>Password or API key: the credential you created in step one.</li> </ul> </li> <li>Click Save. Doc\u00b2 tests the key to check it can connect to Odoo.</li> </ul>"},{"location":"workflow/integrations/credentials/oneSimpleApi/","title":"One Simple API","text":"<p>You can use these credentials to authenticate the following nodes with Nextcloud. - One Simple API</p>"},{"location":"workflow/integrations/credentials/oneSimpleApi/#prerequisites","title":"Prerequisites","text":"<p>Create a One Simple API account.</p>"},{"location":"workflow/integrations/credentials/oneSimpleApi/#using-an-api-token","title":"Using an API Token","text":"<ol> <li>Log in to your One Simple API account.</li> <li>Create a new API token on the API Tokens page.</li> <li>Check the required permissions for your new API token.</li> <li>Click the Create button.</li> <li>Copy the API token provided by One Simple API. </li> <li>Paste the API token into the API Token field of Workflow\u00b2. </li> <li>Click the Save button.</li> </ol>"},{"location":"workflow/integrations/credentials/onfleet/","title":"Onfleet credentials","text":"<p>You can use these credentials to authenticate the following nodes with Onfleet:</p> <ul> <li>Onfleet</li> <li> <p>Onfleet Trigger</p> </li> <li> <p>Sign up for Onfleet and create an API key. Refer to Onfleet's documentation for more information:</p> <ul> <li>Creating an API key</li> <li>Getting started with the Onfleet API</li> </ul> </li> <li>In Doc\u00b2, create a new credential. You can either:<ul> <li>Click Credentials &gt; New, then search for Onfleet API. After selecting Onfleet API, click Continue.</li> <li>In an Onfleet node, click the Credential for Onfleet API dropdown, then click Create new.</li> </ul> </li> <li>In the Onfleet account modal, paste your Onfleet API key into API key. </li> <li>By default, this credential is available to both the Onfleet and Onfleet Trigger nodes. You can change this using the settings on the Details tab.</li> <li>After entering the key and editing the credential details, click Save. Doc\u00b2 tests the key to check it can connect to Onfleet.</li> </ul>"},{"location":"workflow/integrations/credentials/openWeatherMap/","title":"OpenWeatherMap","text":"<p>You can use these credentials to authenticate the following nodes with OpenWeatherMap. - OpenWeatherMap</p>"},{"location":"workflow/integrations/credentials/openWeatherMap/#prerequisites","title":"Prerequisites","text":"<p>Create a OpenWeatherMap account.</p>"},{"location":"workflow/integrations/credentials/openWeatherMap/#using-access-token","title":"Using Access Token","text":"<ol> <li>Access your OpenWeatherMap account page.</li> <li>In the 'Create key' section, type a name and click on the Generate button.</li> <li>Copy the API Key that you just generated.</li> <li>Use this API key with your OpenWeatherMap API node credentials in Workflow\u00b2.</li> </ol>"},{"location":"workflow/integrations/credentials/orbit/","title":"Orbit","text":"<p>You can use these credentials to authenticate the following nodes with Orbit. - Orbit</p>"},{"location":"workflow/integrations/credentials/orbit/#prerequisites","title":"Prerequisites","text":"<p>Create an Orbit account.</p>"},{"location":"workflow/integrations/credentials/orbit/#using-api-token","title":"Using API Token","text":"<ol> <li>Access the Account Settings page.</li> <li>Scroll down to the API Token section.</li> <li>Click on the Copy button to copy the API Token.</li> <li>Use this API Token in with your Orbit node credentials in Workflow\u00b2.</li> </ol>"},{"location":"workflow/integrations/credentials/orbit/#further-reference","title":"Further Reference","text":"<ul> <li>Orbit API Documentation</li> </ul>"},{"location":"workflow/integrations/credentials/oura/","title":"Oura","text":"<p>You can use these credentials to authenticate the following nodes with Oura. - Oura</p>"},{"location":"workflow/integrations/credentials/oura/#prerequisites","title":"Prerequisites","text":"<p>Create a Oura account.</p>"},{"location":"workflow/integrations/credentials/oura/#using-access-token","title":"Using Access Token","text":"<ol> <li>Open the Personal Access Tokens page.</li> <li>On the top-right corner of the page, click on the Create A New Personal Access Token button.</li> <li>Enter a note for the new Personal Access Token you are about to generate.</li> <li>Click on the Create Personal Access Token to create the Personal Access Token.</li> <li>Copy the displayed Personal Access Token.</li> <li>Enter a name for your credentials in the Credentials Name field in the 'Oura API' credentials in Workflow\u00b2.</li> <li>Paste the Personal Access Token in the Personal Access Token field in the 'Oura API' credentials in Workflow\u00b2.</li> <li> <p>Click on the Create button to create your credentials.</p> </li> <li> <p>Oura API Documentation</p> </li> </ol>"},{"location":"workflow/integrations/credentials/paddle/","title":"Paddle","text":"<p>You can use these credentials to authenticate the following nodes with Paddle. - Paddle</p>"},{"location":"workflow/integrations/credentials/paddle/#prerequisites","title":"Prerequisites","text":"<p>Create a Paddle account.</p>"},{"location":"workflow/integrations/credentials/paddle/#using-access-token","title":"Using Access Token","text":"<ol> <li>Open your Paddle dashboard.</li> <li>Open the Developer Tools dropdown list in the sidebar and select Authentication.</li> <li>Enter a name and description in the Generate Auth Code section and click on Generate Key.</li> <li>Click on the Reveal Auth Code button to reveal the access token.</li> <li>Use the displayed vendor_id and Auth Code with your Paddle API credentials in Workflow\u00b2.</li> <li>Click on the Save button to save your credentials.</li> </ol>"},{"location":"workflow/integrations/credentials/pagerDuty/","title":"PagerDuty","text":"<p>You can use these credentials to authenticate the following nodes with PagerDuty. - PagerDuty</p>"},{"location":"workflow/integrations/credentials/pagerDuty/#prerequisites","title":"Prerequisites","text":"<p>Create a PagerDuty account.</p>"},{"location":"workflow/integrations/credentials/pagerDuty/#using-oauth","title":"Using OAuth","text":"<p>\u26c5\ufe0f Note fordoc2app.cloudintegration.eu users</p> <p>You'll only need to enter the Credentials Name and click on the circle button in the OAuth section to connect your PagerDuty account to Workflow\u00b2.</p> <ol> <li>Access your PagerDuty dashboard.</li> <li>Select 'Developer Mode' from the number pad icon in the top right.</li> <li>Click on the Create New App button.</li> <li>Enter a name in the App Name field, and a description in the Brief Description field.</li> <li>Select 'Infrastructure Automation' from the Category dropdown list.</li> <li>Choose the appropriate option for the publication of your app and click on the Save button.</li> <li>Click on the Add button in the 'OAuth 2.0' section.</li> <li>Copy the 'OAuth Callback URL' provided in the 'PagerDuty OAuth2 API' credentials in Doc\u00b2 and paste it in the Redirect URL field in the PagerDuty app creation page.</li> <li>Use the provided Client ID and Client Secret with your PagerDuty OAuth2 API credentials in Workflow\u00b2.</li> <li>Select 'Read/Write' from the Set Permission Scopes dropdown list and then click on Save.</li> <li>Click on the circle button in the OAuth section of Doc\u00b2 to connect a PagerDuty account to Workflow\u00b2.</li> <li>Click on the Save button to save your credentials.</li> </ol> <p></p>"},{"location":"workflow/integrations/credentials/pagerDuty/#using-access-token","title":"Using Access Token","text":"<ol> <li>Access your PagerDuty dashboard.</li> <li>Click on configuration.</li> <li>Click on API access.</li> <li>Create a new API key.</li> <li>Use this API key with your PagerDuty node credentials in Workflow\u00b2.</li> </ol>"},{"location":"workflow/integrations/credentials/payPal/","title":"PayPal","text":"<p>You can use these credentials to authenticate the following nodes with PayPal. - PayPal - PayPal Trigger</p>"},{"location":"workflow/integrations/credentials/payPal/#prerequisites","title":"Prerequisites","text":"<p>Create a PayPal account.</p>"},{"location":"workflow/integrations/credentials/payPal/#using-oauth","title":"Using OAuth","text":"<ol> <li>Access your PayPal dashboard.</li> <li>Click on Log in to Dashboard.</li> <li>Enter your PayPal account credentials.</li> <li>In the section 'REST API apps', click on Create app.</li> <li>Enter a name for your app in App Name and click on Create App.</li> <li>Return to Doc\u00b2 and enter the Client ID and Client Secret in your PayPal API credentials.</li> <li>Choose the environment: sandbox or live.</li> </ol>"},{"location":"workflow/integrations/credentials/peekalink/","title":"Peekalink","text":"<p>You can use these credentials to authenticate the following nodes with Peekalink. - Peekalink</p>"},{"location":"workflow/integrations/credentials/peekalink/#prerequisites","title":"Prerequisites","text":"<p>Create a Peekalink account.</p>"},{"location":"workflow/integrations/credentials/peekalink/#using-api-key","title":"Using API Key","text":"<ol> <li>Open your Peekalink dashboard.</li> <li>Copy the API key displayed under the Your API Key section.</li> <li>Enter a name for your credentials in the Credentials Name field in the 'Peekalink API' credentials in Workflow\u00b2.</li> <li>Paste the API key in the API Key field in the 'Peekalink API' credentials in Workflow\u00b2.</li> <li>Click on the Create button to create your credentials.</li> </ol> <p>The following video demonstrates the steps mentioned above.</p>"},{"location":"workflow/integrations/credentials/phantombuster/","title":"Phantombuster","text":"<p>You can use these credentials to authenticate the following nodes with Phantombuster. - Phantombuster</p>"},{"location":"workflow/integrations/credentials/phantombuster/#prerequisites","title":"Prerequisites","text":"<p>Create a Phantombuster account.</p>"},{"location":"workflow/integrations/credentials/phantombuster/#using-api","title":"Using API","text":"<ol> <li>Access your Phantombuster dashboard.</li> <li>Click on your name on the top right and select 'Org settings'.</li> <li>Scroll down to the Third party API keys section.</li> <li>Click on the + Add third party API key button.</li> <li>Use this API Key with your Phantombuster node credentials in Workflow\u00b2.</li> </ol>"},{"location":"workflow/integrations/credentials/philipsHue/","title":"Philips Hue","text":"<p>You can use these credentials to authenticate the following nodes with Philips Hue. - Philips Hue</p>"},{"location":"workflow/integrations/credentials/philipsHue/#prerequisites","title":"Prerequisites","text":"<p>Create a Philips Hue Developer account.</p>"},{"location":"workflow/integrations/credentials/philipsHue/#using-oauth","title":"Using OAuth","text":"<ol> <li>Access the Add new Hue Remote API app page.</li> <li>Enter a name in the App name field.</li> <li>Enter a description in the Application description field.</li> <li>Copy the 'OAuth Callback URL' provided in the Philips Hue OAuth2 API credentials in Doc\u00b2 and paste it in the Callback URL field in the Add new Hue Remote API app page.</li> <li>Click on the Submit button.</li> <li>Click on the AppId to reveal the credentials.</li> <li>Use the displayed AppId, ClientId and the ClientSecret with your Philips Hue OAuth2 API credentials in Workflow\u00b2.</li> <li>Click on the circle button in the OAuth section to connect a Philips Hue account to Workflow\u00b2.</li> <li>Click the Save button to save your credentials in Workflow\u00b2.</li> </ol>"},{"location":"workflow/integrations/credentials/pipedrive/","title":"Pipedrive","text":"<p>You can use these credentials to authenticate the following nodes with Pipedrive. - Pipedrive - Pipedrive Trigger</p>"},{"location":"workflow/integrations/credentials/pipedrive/#prerequisites","title":"Prerequisites","text":"<p>Create a Pipedrive account.</p>"},{"location":"workflow/integrations/credentials/pipedrive/#using-oauth","title":"Using OAuth","text":"<ol> <li>Create a Developer Sandbox Account.</li> <li>Open your Pipedrive Dashboard.</li> <li>Click on your user profile in the top right and select 'Tools and integrations' from the dropdown list.</li> <li>From the sidebar under the Tools section, select 'Marketplace manager'.</li> <li>Click on the Create new app button.</li> <li>Select either 'Yes' or 'No' when asked if you would like to publish your app on the Pipedrive marketplace.</li> <li>Click on the Next button.</li> <li>Enter the name of the app in the App name field.</li> <li>Copy the 'OAuth Callback URL' provided in the 'Pipedrive OAuth2 API' credentials in Workflow\u00b2.</li> <li>On the Pipedrive app creation page, scroll down to the OAuth &amp; Access scopes section and paste the URL in the Callback URL field.</li> <li>Based on your use-case, select the scopes from the Access scopes section.</li> <li>Scroll up and click on the Save button on the top.</li> <li>Select your app from the 'Marketplace manager'</li> <li>Scroll down to OAuth &amp; Access scopes section and copy the Client ID.</li> <li>Enter the name for your credentials in the Credentials Name field in the 'Pipedrive OAuth2 API' credentials in Workflow\u00b2.</li> <li>Paste the client ID in the Client ID field in the 'Pipedrive OAuth2 API' credentials in Workflow\u00b2.</li> <li>On the Pipedrive application page, click on the Show button next to Client Secret.</li> <li>Copy the Client Secret.</li> <li>Paste the client secret in the Client Secret field in the 'Pipedrive OAuth2 API' credentials in Workflow\u00b2.</li> <li>Click on the circle button in the OAuth section to connect a Pipedrive account to Workflow\u00b2.</li> <li>Click on the Save button to save your credentials.</li> </ol> <p>The following video demonstrates the steps mentioned above.</p>"},{"location":"workflow/integrations/credentials/pipedrive/#using-api-token","title":"Using API Token","text":"<ol> <li>Open your Pipedrive Dashboard.</li> <li>Click on your user profile in the top right.</li> <li>Select 'Personal preferences' from the dropdown list.</li> <li>Click on the API tab.</li> <li>Click on the Copy button to copy the API Token.</li> <li>Enter the name for your credentials in the Credentials Name field in the 'Pipedrive API' credentials in Workflow\u00b2.</li> <li>Paste the API token in the API Token field in the 'Pipedrive API' credentials in Workflow\u00b2.</li> <li>Click on the Create button to save your credentials.</li> </ol> <p>The following video demonstrates the steps mentioned above.</p>"},{"location":"workflow/integrations/credentials/plivo/","title":"Plivo","text":"<p>You can use these credentials to authenticate the following nodes with Plivo. - Plivo</p>"},{"location":"workflow/integrations/credentials/plivo/#prerequisites","title":"Prerequisites","text":"<p>Create a Plivo account.</p>"},{"location":"workflow/integrations/credentials/plivo/#using-access-token","title":"Using Access Token","text":"<ol> <li>Open your Plivo console.</li> <li>Copy the displayed Auth ID under the Account and Payments section.</li> <li>Enter a name for your credentials in the Credentials Name field in the 'Plivo API' credentials in Workflow\u00b2.</li> <li>Paste the Auth ID in the Auth ID field in the 'Plivo API' credentials in Workflow\u00b2.</li> <li>Copy the Auth Token displayed on your Plivo console.</li> <li>Paste the Auth Token in the Auth Token field in the 'Plivo API' credentials in Workflow\u00b2.</li> <li>Click on the Create button to create your credentials.</li> </ol> <p>The following video demonstrates the steps mentioned above.</p>"},{"location":"workflow/integrations/credentials/postHog/","title":"PostHog","text":"<p>You can use these credentials to authenticate the following nodes with PostHog. - PostHog</p>"},{"location":"workflow/integrations/credentials/postHog/#prerequisites","title":"Prerequisites","text":"<p>Create a PostHog account or host PostHog on your server.</p>"},{"location":"workflow/integrations/credentials/postHog/#using-api-key","title":"Using API Key","text":"<ol> <li>Open your PostHog dashboard.</li> <li>Click on Project on the left sidebar.</li> <li>Click on the Safety &amp; Privacy tab.</li> <li>Scroll down to the Project API Key section and copy the displayed API key.</li> <li>Enter a name for your credentials in the Credentials Name field in the 'PostHog API' credentials in Workflow\u00b2.</li> <li>If you're hosting PostHog on your own server, update the URL of your PostHog instance in the URL field.</li> <li>Paste the API key in the API Key field in the 'PostHog API' credentials in Workflow\u00b2.</li> <li>Click on the Create button to create your credentials.</li> </ol> <p>The following video demonstrates the steps mentioned above.</p>"},{"location":"workflow/integrations/credentials/postgres/","title":"Postgres","text":"<p>You can use these credentials to authenticate the following nodes with Postgres. - Postgres</p>","tags":["Workflow\u00b2","Postgres","Prerequisites Postgres","Using Database Connection"]},{"location":"workflow/integrations/credentials/postgres/#prerequisites","title":"Prerequisites","text":"<p>Create an user account on a Postgres server.</p>","tags":["Workflow\u00b2","Postgres","Prerequisites Postgres","Using Database Connection"]},{"location":"workflow/integrations/credentials/postgres/#using-database-connection","title":"Using Database Connection","text":"<ol> <li>Retrieve your Postgres credentials and connection parameters.</li> <li>Use the credentials and connection parameters with your Postgres node credentials in Workflow\u00b2.</li> </ol>","tags":["Workflow\u00b2","Postgres","Prerequisites Postgres","Using Database Connection"]},{"location":"workflow/integrations/credentials/postmark/","title":"Postmark","text":"<p>You can use these credentials to authenticate the following nodes with Postmark. - Postmark Trigger</p>"},{"location":"workflow/integrations/credentials/postmark/#prerequisites","title":"Prerequisites","text":"<p>Create a Postmark account.</p>"},{"location":"workflow/integrations/credentials/postmark/#using-access-token","title":"Using Access Token","text":"<ol> <li>Access the Postmark API Tokens page.</li> <li>Enter your postmark server name in the Search for a server field.</li> <li>From the displayed dropdown list, select your server and click on the Get a server API token button.</li> <li>Use the displayed Server API token with your Postmark API credentials in Workflow\u00b2.</li> <li>Click the Save button to save your credentials in Workflow\u00b2.</li> </ol>"},{"location":"workflow/integrations/credentials/profitWell/","title":"ProfitWell","text":"<p>You can use these credentials to authenticate the following nodes with ProfitWell. - ProfitWell</p>"},{"location":"workflow/integrations/credentials/profitWell/#prerequisites","title":"Prerequisites","text":"<p>Create a ProfitWell account.</p>"},{"location":"workflow/integrations/credentials/profitWell/#using-api","title":"Using API","text":"<ol> <li>Access the ProfitWell dashboard page.</li> <li>Click on the gears icon on the left panel and select 'Integrations'.</li> <li>Click on the API KEYS/DEV KIT tab.</li> <li>Copy the YOUR PRIVATE KEY displayed.</li> <li>Use this Private Key with your ProfitWell node credentials in Workflow\u00b2.</li> </ol>"},{"location":"workflow/integrations/credentials/pushbullet/","title":"Pushbullet","text":"<p>You can use these credentials to authenticate the following nodes with Pushbullet. - Pushbullet</p>"},{"location":"workflow/integrations/credentials/pushbullet/#prerequisites","title":"Prerequisites","text":"<p>Create a Pushbullet account.</p>"},{"location":"workflow/integrations/credentials/pushbullet/#using-oauth","title":"Using OAuth","text":"<ol> <li>Access the create client page.</li> <li>Enter an app name in the name field.</li> <li>Copy your OAuth Callback URL from the 'Create New Credentials' screen in Doc\u00b2 and paste it in the redirect_uri field.</li> <li>Click on the Add A New OAuth Client button.</li> <li>Use the provided client_id and client_secret with your Pushbullet OAuth2 API credentials in Workflow\u00b2.</li> <li>Click the Connect my account button to connect to Pushbullet and save your credentials in Workflow\u00b2.</li> </ol> <p> Pushbullet OAuth Test Link</p> <p>Pushbullet does offer a test link during the client creation process described above. This link is not compatible with Workflow\u00b2. In order to verify the authentication works, simply use the Connect my account button in Workflow\u00b2.</p> <p></p>"},{"location":"workflow/integrations/credentials/pushcut/","title":"Pushcut","text":"<p>You can use these credentials to authenticate the following nodes with Pushcut. - Pushcut - Pushcut Trigger</p>"},{"location":"workflow/integrations/credentials/pushcut/#prerequisites","title":"Prerequisites","text":"<p>Download the Pushcut app.</p>"},{"location":"workflow/integrations/credentials/pushcut/#using-api-key","title":"Using API Key","text":"<ol> <li>Access the Pushcut application on your device.</li> <li>Click on the Account button.</li> <li>Click on the Add API Key under the INTEGRATIONS section.</li> <li>Click on the Generate button.</li> <li>Use the API Key with your Pushcut node credentials in Workflow\u00b2.</li> </ol>"},{"location":"workflow/integrations/credentials/pushover/","title":"Pushover","text":"<p>You can use these credentials to authenticate the following nodes with Pushover. - Pushover</p>"},{"location":"workflow/integrations/credentials/pushover/#prerequisites","title":"Prerequisites","text":"<p>Create a Pushover account.</p>"},{"location":"workflow/integrations/credentials/pushover/#using-api-key","title":"Using API Key","text":"<ol> <li>Access the Pushover dashboard.</li> <li>Scroll down to the bottom and click on Create an Application/API Token.</li> <li>Enter the name of your application in the Name field.</li> <li>Read the 'Terms of Services' and the 'Guide to Being Friendly to our API' and, if you agree to them, check the checkbox.</li> <li>Click on the Create Application button.</li> <li>Use this API Key with your Pushover node credentials in Workflow\u00b2.</li> </ol>"},{"location":"workflow/integrations/credentials/questDb/","title":"QuestDB","text":"<p>You can use these credentials to authenticate the following nodes with QuestDB. - QuestDB</p>"},{"location":"workflow/integrations/credentials/questDb/#prerequisites","title":"Prerequisites","text":"<p>An available instance of QuestDB. </p>"},{"location":"workflow/integrations/credentials/questDb/#using-database-connection","title":"Using Database Connection","text":"<ol> <li>Retrieve your QuestDB credentials and connection parameters.</li> <li>Use the credentials and connection parameters with your QuestDB node credentials in Workflow\u00b2.</li> </ol>"},{"location":"workflow/integrations/credentials/quickbase/","title":"Quick Base","text":"<p>You can use these credentials to authenticate the following nodes with Quick Base. - Quick Base</p>"},{"location":"workflow/integrations/credentials/quickbase/#prerequisites","title":"Prerequisites","text":"<p>Create a Quick Base account.</p>"},{"location":"workflow/integrations/credentials/quickbase/#using-api","title":"Using API","text":"<ol> <li>Access your Quick Base dashboard.</li> <li>Click on your name on the top right and select 'My preferences' from the dropdown list.</li> <li>Click on Manage my user tokens under the My User Information section.</li> <li>Click on the + New user token button.</li> <li>Enter a name in the Name field.</li> <li>Select an app from the Assign token to apps dropdown list.</li> <li>Click on the Save button.</li> <li>Copy the string of characters located between <code>https://</code> and <code>/db</code> in your Quick Base URL. This string is the hostname.</li> <li>Use this Hostname and User Token with your Quick Base node credentials in Workflow\u00b2.</li> </ol>"},{"location":"workflow/integrations/credentials/quickbase/#further-reference","title":"Further Reference","text":"<ul> <li>Quick Base API Portal</li> </ul>"},{"location":"workflow/integrations/credentials/quickbooks/","title":"QuickBooks","text":"<p>You can use these credentials to authenticate the following nodes with QuickBooks. - QuickBooks</p>"},{"location":"workflow/integrations/credentials/quickbooks/#prerequisites","title":"Prerequisites","text":"<p>Create a Intuit developer account.</p>"},{"location":"workflow/integrations/credentials/quickbooks/#using-oauth","title":"Using OAuth","text":"<ol> <li>Open the Intuit Developer dashboard page.</li> <li>Click on the + Create an app button.</li> <li>Select the QuickBooks Online and Payments platform.</li> <li>Enter the name of the app in the What's your app name? field.</li> <li>Select the required scopes under the Select Scope section.</li> <li>Click on the Create app button.</li> <li>Click on Keys &amp; OAuth under the Development section.</li> <li>Scroll down to the Redirect URIs section and click on the Add URI button.</li> <li>Copy the 'OAuth Callback URL' provided in the 'QuickBooks OAuth2 API' credentials in Workflow\u00b2.</li> <li>Paste the URL in the Link field.</li> <li>Click on the Save button.</li> <li>Copy the displayed Client ID.</li> <li>Enter a name for your credentials in the Credentials Name field in the 'QuickBooks OAuth2 API' credentials in Workflow\u00b2.</li> <li>Paste the client ID in the Client ID field in the 'QuickBooks OAuth2 API' credentials in Workflow\u00b2.</li> <li>Copy the displayed Client Secret from the Keys page.</li> <li>Paste the client secret in the Client Secret field in the 'QuickBooks OAuth2 API' credentials in Workflow\u00b2.</li> <li>Select 'Sandbox' from the Environment dropdown list in the 'QuickBooks OAuth2 API' credentials in Workflow\u00b2.</li> <li>Click on the circle button in the OAuth section to connect a QuickBooks account to Workflow\u00b2.</li> <li>Click the Save button to save your credentials in Workflow\u00b2.</li> </ol> <p>Note: To build the application in production, you will have to fulfill all the requirements mentioned by Intuit. You can learn more on Intuit's documentation.</p> <p>The following video demonstrates the steps mentioned above.</p>"},{"location":"workflow/integrations/credentials/rabbitmq/","title":"RabbitMQ","text":"<p>You can use these credentials to authenticate the following nodes with RabbitMQ. - RabbitMQ - RabbitMQ Trigger</p>","tags":["Workflow\u00b2","RabbitMQ","Prerequisites RabbitMQ"]},{"location":"workflow/integrations/credentials/rabbitmq/#prerequisites","title":"Prerequisites","text":"<p>You need to have a RabbitMQ broker installed.</p>","tags":["Workflow\u00b2","RabbitMQ","Prerequisites RabbitMQ"]},{"location":"workflow/integrations/credentials/rabbitmq/#using-rabbitmq","title":"Using RabbitMQ","text":"<p>Use your Hostname, Port, Username, Password, and Vhost as the RabbitMQ credential data in Workflow\u00b2.</p>","tags":["Workflow\u00b2","RabbitMQ","Prerequisites RabbitMQ"]},{"location":"workflow/integrations/credentials/raindrop/","title":"Raindrop","text":"<p>You can use these credentials to authenticate the following nodes with Raindrop. - Raindrop</p>"},{"location":"workflow/integrations/credentials/raindrop/#prerequisites","title":"Prerequisites","text":"<p>Create a Raindrop account.</p>"},{"location":"workflow/integrations/credentials/raindrop/#using-oauth","title":"Using OAuth","text":"<ol> <li>Open the Raindrop dashboard page.</li> <li>Click on your username on the top left and select 'Settings' from the dropdown list.</li> <li>Click on the Integrations tab.</li> <li>Click on + Create new app under the For Developers section.</li> <li>Enter the name of the app in the Name field.</li> <li>Accept the Raindrop.io API Terms and Guidelines.</li> <li>Click on the Create button.</li> <li>Under the For Developers section, select the app that you created.</li> <li>Enter a description in the Description field.</li> <li>Enter a URL in the Site field.</li> <li>Copy the 'OAuth Callback URL' provided in the 'Raindrop OAuth2 API' credentials in Workflow\u00b2.</li> <li>Paste the URL in the Redirect URI field and click on the Save button.</li> <li>Copy the displayed Client ID.</li> <li>Enter a name for your credentials in the Credentials Name field in the 'Raindrop OAuth2 API' credentials in Workflow\u00b2.</li> <li>Paste the client ID in the Client ID field in the 'Raindrop OAuth2 API' credentials in Workflow\u00b2.</li> <li>Copy the displayed Client secret from the Raindrop.</li> <li>Paste the client secret in the Client Secret field in the 'Raindrop OAuth2 API' credentials in Workflow\u00b2.</li> <li>Click on the circle button in the OAuth section to connect a Raindrop account to Workflow\u00b2.</li> <li>Click the Save button to save your credentials in Workflow\u00b2.</li> </ol> <p>The following video demonstrates the steps mentioned above.</p>"},{"location":"workflow/integrations/credentials/reddit/","title":"Reddit","text":"<p>You can use these credentials to authenticate the following nodes with Reddit. - Reddit</p>"},{"location":"workflow/integrations/credentials/reddit/#prerequisites","title":"Prerequisites","text":"<p>Create a Reddit account.</p>"},{"location":"workflow/integrations/credentials/reddit/#using-oauth","title":"Using OAuth","text":"<ol> <li>Open Reddit.</li> <li>Click on your avatar on the top right and select 'User Settings'.</li> <li>Click on the Safety &amp; Privacy tab.</li> <li>Scroll to the bottom and click on Manage third-party app authorization.</li> <li>Click on the are you a developer? create an app... button.</li> <li>Enter the name of your application in the name field.</li> <li>Copy the 'OAuth Callback URL' provided in the 'Reddit OAuth2 API' credentials in Workflow\u00b2.</li> <li>Paste the URL in the redirect uri field.</li> <li>Click on the create app button.</li> <li>Copy the client ID displayed next to the app's icon.</li> <li>Enter a name for your credentials in the Credentials Name field in the 'Reddit OAuth2 API' credentials in Workflow\u00b2.</li> <li>Paste the client ID in the Client ID field in the 'Reddit OAuth2 API' credentials in Workflow\u00b2.</li> <li>Copy the client secret from Reddit and paste it in the Client Secret field in the 'Reddit OAuth2 API' credentials in Workflow\u00b2.</li> <li>Click on the circle button in the OAuth section to connect a Reddit account to Workflow\u00b2.</li> <li>Click on the Save button to save your credentials.</li> </ol> <p>The following video demonstrates the steps mentioned above.</p>"},{"location":"workflow/integrations/credentials/redis/","title":"Redis","text":"<p>You can use these credentials to authenticate the following nodes with Redis. - Redis</p>"},{"location":"workflow/integrations/credentials/redis/#prerequisites","title":"Prerequisites","text":"<p>Create an user account on a Redis server.</p>"},{"location":"workflow/integrations/credentials/redis/#using-database-connection","title":"Using Database Connection","text":"<ol> <li>Retrieve your Redis credentials and connection parameters.</li> <li>Use the credentials and connection parameters with your Redis node credentials in Workflow\u00b2.</li> </ol>"},{"location":"workflow/integrations/credentials/rocketchat/","title":"Rocket.Chat","text":"<p>You can use these credentials to authenticate the following nodes with Rocket.Chat. - Rocket.Chat</p>"},{"location":"workflow/integrations/credentials/rocketchat/#prerequisites","title":"Prerequisites","text":"<ul> <li>Create a Rocket.Chat account.</li> <li>Have the necessary permission <code>create-personal-access-tokens</code> (from administrator) to be able to generate personal access tokens.</li> </ul>"},{"location":"workflow/integrations/credentials/rocketchat/#using-access-token","title":"Using Access Token","text":"<ol> <li>Access your Rocket.Chat instance.</li> <li>Click on the profile icon in the top left.</li> <li>Click on My Account.</li> <li>Click on Personal Access Tokens from the panel on the left.</li> <li>Enter a name for your Personal access token and click on the Add button.</li> <li>Copy the Token and enter that in the Auth Key field in Workflow\u00b2.</li> <li>Copy the User Id and enter that in the User Id field in Workflow\u00b2.</li> </ol>"},{"location":"workflow/integrations/credentials/rundeck/","title":"Rundeck","text":"<p>You can use these credentials to authenticate the following nodes with Rundeck. - Rundeck</p>"},{"location":"workflow/integrations/credentials/rundeck/#prerequisites","title":"Prerequisites","text":"<p>Create a Rundeck account.</p>"},{"location":"workflow/integrations/credentials/rundeck/#using-access-token","title":"Using Access Token","text":"<ol> <li>Access your Rundeck dashboard.</li> <li>Click on your user icon in the top right.</li> <li>Click on 'Profile'.</li> <li>Next to 'User API Tokens', click on the plus button and generate a new token.</li> <li>Click on 'Show Token' to reveal the token you generated.</li> <li>Use the API token with your Rundeck node credentials in Workflow\u00b2.</li> </ol>"},{"location":"workflow/integrations/credentials/s3/","title":"S3","text":"<p>You can use these credentials to authenticate the following nodes with S3. - S3</p>"},{"location":"workflow/integrations/credentials/s3/#prerequisites","title":"Prerequisites","text":"<p>Create an account on S3 compatible server.</p>"},{"location":"workflow/integrations/credentials/s3/#using-access-token","title":"Using Access Token","text":"<ol> <li>Retrieve your S3 endpoint, access key ID, and secret access key from your S3 compatible server.</li> <li>Use the S3 endpoint, access key ID, and the secret access key in your S3 node credentials in Workflow\u00b2.</li> <li>Click on the Save button to save your credentials.</li> </ol>"},{"location":"workflow/integrations/credentials/salesforce/","title":"Salesforce","text":"<p>You can use these credentials to authenticate the following nodes with Salesforce. - Salesforce</p>","tags":["Workflow\u00b2","Salesforce"]},{"location":"workflow/integrations/credentials/salesforce/#prerequisites","title":"Prerequisites","text":"<p>Create a Salesforce account.</p> <ol> <li>Access your Salesforce Dashboard.</li> <li>Click on the gear icon in the top right and select Setup from the dropdown list.</li> <li>In the Platform Tools category of the sidebar, select App Manager under the Apps section.</li> <li>Click on the New Connected App button.</li> <li>Enter any necessary information and click on the Enable OAuth Settings checkbox.</li> <li>Copy the OAuth Callback URL provided in the 'Salesforce OAuth2 API' credentials in Workflow\u00b2.</li> <li>On the Salesforce app creation page, paste the URL in the Callback URL field.</li> <li>Add the \"Perform requests on your behalf at any time (refresh_token, offline_access)\" scope in the Selected OAuth Scopes section.</li> <li>Add any other scopes you plan to use in the  Selected OAuth Scopes section.</li> <li>Click on the Save button at the bottom of the page.</li> <li>On the New Connected App page, click on the Continue button.</li> <li>In the 'API (Enable OAuth Settings)' section of the page, click on the Click to reveal button to reveal the consumer secret.</li> <li>Copy the displayed Consumer Key and the Consumer Secret and use these with your Salesforce OAuth2 API credentials in Workflow\u00b2.</li> <li>In the Doc\u00b2 credentials window select your Environment Type, where Production or Sandbox.</li> <li>Click on the circle button in the OAuth section to connect a Salesforce account to Workflow\u00b2.</li> <li>Click on the Save button to save your credentials.</li> </ol> <p></p>","tags":["Workflow\u00b2","Salesforce"]},{"location":"workflow/integrations/credentials/salesforce/#using-oauth-jwt","title":"Using OAuth JWT","text":"<p>To use the OAuth JWT authentication method with the Salesforce node you need to create a private key. Follow the instructions mentioned in the documentation here to create a private key.</p> <ol> <li>Access your Salesforce Dashboard.</li> <li>Click on the gear icon in the top right and select Setup from the dropdown list.</li> <li>In the Platform Tools category of the sidebar, select App Manager under the Apps section.</li> <li>Click on the New Connected App button.</li> <li>Enter any necessary information and click on the Enable OAuth Settings checkbox.</li> <li>Copy the OAuth Callback URL provided in the 'Salesforce OAuth2 API' credentials in Workflow\u00b2.</li> <li>On the Salesforce app creation page, paste the URL in the Callback URL field.</li> <li>Click on the Use digital signatures checkbox.</li> <li>Upload the private key that you created earlier.</li> <li>Add the \"Perform requests on your behalf at any time (refresh_token, offline_access)\" scope in the Selected OAuth Scopes section.</li> <li>Add any other scopes you plan to use in the  Selected OAuth Scopes section.</li> <li>Click on the Save button at the bottom of the page.</li> <li>On the New Connected App page, click on the Continue button.</li> <li>Copy the displayed Consumer Key and paste it in the Client ID field in your Salesforce JWT API credentials in Workflow\u00b2.</li> <li>Use your Salesforce username in the Username field.</li> <li>Copy the private key that you created earlier and paste it in the Private Key field in your Salesforce JWT API credentials in Workflow\u00b2.</li> <li>Click on the Save button to save your credentials.</li> </ol>","tags":["Workflow\u00b2","Salesforce"]},{"location":"workflow/integrations/credentials/salesmate/","title":"Salesmate","text":"<p>You can use these credentials to authenticate the following nodes with Salesmate. - Salesmate</p>","tags":["Workflow\u00b2","Salesmate"]},{"location":"workflow/integrations/credentials/salesmate/#prerequisites","title":"Prerequisites","text":"<p>Create a Salesmate account.</p>","tags":["Workflow\u00b2","Salesmate"]},{"location":"workflow/integrations/credentials/salesmate/#using-access-token","title":"Using Access Token","text":"<ol> <li>Access your Salesmate Dashboard.</li> <li>Click on your user icon in the top right.</li> <li>Click on My Account.</li> <li>Click on Access Key in the left panel.</li> <li>Copy the session key.</li> <li>Use session key and domain name for your Salesmate node credentials in Workflow\u00b2.</li> </ol>","tags":["Workflow\u00b2","Salesmate"]},{"location":"workflow/integrations/credentials/seaTable/","title":"SeaTable","text":"<p>You can use these credentials to authenticate the following nodes:</p> <ul> <li>SeaTable</li> <li>SeaTable Trigger</li> </ul>","tags":["Workflow\u00b2","SeaTable"]},{"location":"workflow/integrations/credentials/seaTable/#prerequisites","title":"Prerequisites","text":"<p>You need to have a SeaTable instance or cloud account.</p>","tags":["Workflow\u00b2","SeaTable"]},{"location":"workflow/integrations/credentials/seaTable/#using-api-key","title":"Using API key","text":"<p>From your SeaTable dashboard:</p> <ol> <li>From the Bases menu select the base you want to enable access for.</li> <li>Navigate to the base options &gt; Advanced &gt; API Token.</li> <li>In the modal, enter a name for this token and select the Read-Write permission.</li> <li>Click Submit and copy the new API token.</li> </ol> <p>From n8n:</p> <ol> <li>Select your environment type: Cloud-hosted or Self-hosted.</li> <li>For Self-hosted environments enter the domain of your instance.</li> <li>Enter the API token obtained above and click Save to create your credential.</li> </ol>","tags":["Workflow\u00b2","SeaTable"]},{"location":"workflow/integrations/credentials/securityScorecard/","title":"SecurityScorecard","text":"<p>You can use these credentials to authenticate the following nodes with SecurityScorecard. - SecurityScorecard</p>","tags":["Workflow\u00b2","SecurityScorecard"]},{"location":"workflow/integrations/credentials/securityScorecard/#prerequisites","title":"Prerequisites","text":"<p>Create a SecurityScorecard account.</p>","tags":["Workflow\u00b2","SecurityScorecard"]},{"location":"workflow/integrations/credentials/securityScorecard/#using-api","title":"Using API","text":"<ol> <li>Open your SecurityScorecard dashboard.</li> <li>Click on Integrations and select 'Get an API Key'.</li> <li>Click on Generate new API token.</li> <li>Click on the Confirm button.</li> <li>Copy the generated API key.</li> <li>Enter a name for your credentials in the Credentials Name field in the 'SecurityScorecard API' credentials in Workflow\u00b2.</li> <li>Paste the API key in the API Key field in the 'Security Scorecard API' credentials in Workflow\u00b2.</li> <li>Click on the Create button to create your credentials.</li> </ol> <p>The following video demonstrates the steps mentioned above.</p>","tags":["Workflow\u00b2","SecurityScorecard"]},{"location":"workflow/integrations/credentials/segment/","title":"Segment","text":"<p>You can use these credentials to authenticate the following nodes with Segment. - Segment</p>","tags":["Workflow\u00b2","Segment"]},{"location":"workflow/integrations/credentials/segment/#prerequisites","title":"Prerequisites","text":"<p>Create a Segment account.</p>","tags":["Workflow\u00b2","Segment"]},{"location":"workflow/integrations/credentials/segment/#using-access-token","title":"Using Access Token","text":"<ol> <li>Access your Segment Dashboard.</li> <li>Click on Sources, on the left panel.</li> <li>Click on Add Source.</li> <li>Select Node.js.</li> <li>Copy write key.</li> <li>Use session write key for your Segment node credentials in Workflow\u00b2.</li> </ol>","tags":["Workflow\u00b2","Segment"]},{"location":"workflow/integrations/credentials/sendEmail/","title":"Send Email","text":"<p>You can use these credentials to authenticate the following nodes with SMTP. - Send Email</p>","tags":["Workflow\u00b2","Send Email"]},{"location":"workflow/integrations/credentials/sendEmail/#prerequisites","title":"Prerequisites","text":"<p>Create an email account on a service with SMTP support. </p>","tags":["Workflow\u00b2","Send Email"]},{"location":"workflow/integrations/credentials/sendEmail/#using-smtp","title":"Using SMTP","text":"<ol> <li>Retrieve your login credentials and SMTP connection parameters.</li> <li>Use the login credentials and SMTP connection parameters with your Send Email node credentials in Workflow\u00b2.</li> </ol>","tags":["Workflow\u00b2","Send Email"]},{"location":"workflow/integrations/credentials/sendgrid/","title":"SendGrid","text":"<p>You can use these credentials to authenticate the following nodes with SendGrid. - SendGrid</p>","tags":["Workflow\u00b2","SendGrid"]},{"location":"workflow/integrations/credentials/sendgrid/#prerequisites","title":"Prerequisites","text":"<p>Create a SendGrid account.</p>","tags":["Workflow\u00b2","SendGrid"]},{"location":"workflow/integrations/credentials/sendgrid/#using-api-key","title":"Using API Key","text":"<ol> <li>Open your SendGrid dashboard.</li> <li>Click on Settings on the left sidebar.</li> <li>Click on API Keys.</li> <li>Click on the Create API Key button.</li> <li>Enter the name of the key in the API Key Name field.</li> <li>Click on the Create &amp; View button.</li> <li>Click on the displayed API key to copy the key.</li> <li>Enter the name for your credentials in the Credentials Name field in the 'SendGrid API' credentials in Workflow\u00b2.</li> <li>Paste the 'API Key' in the API Key field.</li> <li>Click on the Create button to save your credentials.</li> </ol> <p>The following video demonstrates the steps mentioned above.</p>","tags":["Workflow\u00b2","SendGrid"]},{"location":"workflow/integrations/credentials/sendy/","title":"Sendy","text":"<p>You can use these credentials to authenticate the following nodes with Sendy. - Sendy</p>","tags":["Workflow\u00b2","Sendy"]},{"location":"workflow/integrations/credentials/sendy/#prerequisites","title":"Prerequisites","text":"<p>Host a Sendy application.</p>","tags":["Workflow\u00b2","Sendy"]},{"location":"workflow/integrations/credentials/sendy/#using-api-key","title":"Using API Key","text":"<ol> <li>Access your Sendy application.</li> <li>Click on the username on the top right corner and select 'Settings'.</li> <li>Copy the API key displayed under the Your API key section.</li> <li>Use this API key and the installation URL with your Sendy node credentials in Workflow\u00b2.</li> </ol>","tags":["Workflow\u00b2","Sendy"]},{"location":"workflow/integrations/credentials/sentryIo/","title":"Sentry.io","text":"<p>You can use these credentials to authenticate the following nodes with Sentry.io. - Sentry.io</p>"},{"location":"workflow/integrations/credentials/sentryIo/#prerequisites","title":"Prerequisites","text":"<p>Create a Sentry.io account.</p>"},{"location":"workflow/integrations/credentials/sentryIo/#using-oauth","title":"Using OAuth","text":"<p>\u26c5\ufe0f Note fordoc2app.cloudintegration.eu users</p> <p>You'll only need to enter the Credentials Name and click on the circle button in the OAuth section to connect your Sentry.io account to Workflow\u00b2.</p> <ol> <li>Access your Sentry.io Applications Page.</li> <li>Click on the Create New Application button in the top right.</li> <li>Enter a name in the Name field.</li> <li>Copy the 'OAuth Callback URL' provided in the 'Sentry.io OAuth2 API' credentials in Doc\u00b2 and paste it in the Authorized Redirect URIs field in the Sentry.io Application Details page.</li> <li>Use the displayed Client ID and Client Secret with your Sentry.io OAuth2 API credentials in Workflow\u00b2.</li> <li>Click on the circle button in the OAuth section to connect a Sentry.io account to Workflow\u00b2.</li> <li>Click on the Save button to save your credentials.</li> </ol> <p></p>"},{"location":"workflow/integrations/credentials/sentryIo/#using-access-token","title":"Using Access Token","text":"<ol> <li>Access your Sentry.io Auth Tokens page.</li> <li>Click on the Create New Token button in the top right.</li> <li>Select any scopes you plan to use and then click on Create Token.</li> <li>Use the generated access token with your Sentry.io API credentials in Workflow\u00b2.</li> <li>Click on the Save button to save your credentials.</li> </ol>"},{"location":"workflow/integrations/credentials/serviceNow/","title":"ServiceNow","text":"<p>You can use these credentials to authenticate the following nodes with serviceNow. - ServiceNow</p>"},{"location":"workflow/integrations/credentials/serviceNow/#prerequisites","title":"Prerequisites","text":"<p>Create a ServiceNow account.</p>"},{"location":"workflow/integrations/credentials/serviceNow/#using-oauth","title":"Using OAuth","text":"<p>From your ServiceNow instance:</p> <ol> <li>Navigate to System OAuth &gt; Application Registry.</li> <li>Click New button &gt; Create an OAuth API endpoint for external clients.</li> </ol> <p></p> <ol> <li>Complete the following fields:<ul> <li>Name: Enter a descriptive name for the new endpoint.</li> <li>Client ID: Auto populated field, you will need this ID to configure your Doc\u00b2 credentials.</li> <li>Client Secret: Enter your desired secret or leave blank to auto generate a random string. You will need this to configure your Doc\u00b2 credentials.</li> <li>Redirect URL: Copy the OAuth Callback URL from the Doc\u00b2 credentials window and enter it here.</li> </ul> </li> <li>Click Submit to save and create your new endpoint.</li> </ol> <p>From n8n:</p> <ol> <li>Enter a descriptive Credentials Name.</li> <li>Under Credential Data complete the following fields:<ul> <li>Client ID: Enter the client ID generated above.</li> <li>Client Secret: Enter your client secret created above.</li> <li>Subdomain: Enter the subdomain of your ServiceNow instance. This can be seen in your instance URL: <code>https://&lt;subdomain&gt;.service-now.com/</code>.</li> </ul> </li> <li>From the OAuth section, click the circle button to establish the connection.</li> <li>Click Save to finalize your Doc\u00b2 credentials.</li> </ol>"},{"location":"workflow/integrations/credentials/shopify/","title":"Shopify","text":"<p>You can use these credentials to authenticate the following nodes with Shopify. - Shopify - Shopify Trigger</p>"},{"location":"workflow/integrations/credentials/shopify/#prerequisites","title":"Prerequisites","text":"<p>Create a Shopify account.</p>"},{"location":"workflow/integrations/credentials/shopify/#using-api-key","title":"Using API Key","text":"<ol> <li>Access the Apps section of your Shopify Store's admin console.</li> <li>Click on 'Manage private apps' near the bottom of the page.</li> <li>Click on the 'Create new private app' button and create a new app by entering any necessary information. Make sure that you set appropriate for the methods you plan to use under the 'Admin API' section.</li> <li>Upon app creation, scroll down, and you will see your API key, Password, and Shared Secret.</li> <li>Use your password, API key, secret, and shop subdomain with your Shopify node credentials in Workflow\u00b2.</li> </ol> <p>Note: Use the subdomain without <code>.myshopify.com</code> in Workflow\u00b2.</p> <p></p>"},{"location":"workflow/integrations/credentials/signl4/","title":"SIGNL4","text":"<p>You can use these credentials to authenticate the following nodes with SIGNL4. - SIGNL4</p>"},{"location":"workflow/integrations/credentials/signl4/#prerequisites","title":"Prerequisites","text":"<p>Create a SIGNL4 account.</p>"},{"location":"workflow/integrations/credentials/signl4/#using-access-token","title":"Using Access Token","text":"<ol> <li>Open the '\u2705 Sign up complete' email you received when you signed up for SIGNL4.</li> <li>Your team secret is the last part of the webhook URL. If your webhook URL is <code>https://connect.signl4.com/webhook/helloworld</code>, your team secret would be <code>helloworld</code>.</li> </ol>"},{"location":"workflow/integrations/credentials/slack/","title":"Slack","text":"<p>You can use these credentials to authenticate the following nodes:</p> <ul> <li>Slack</li> </ul>"},{"location":"workflow/integrations/credentials/slack/#prerequisites","title":"Prerequisites","text":"<p>Create a Slack account.</p>"},{"location":"workflow/integrations/credentials/slack/#using-oauth","title":"Using OAuth","text":"<p>\u26c5\ufe0f Note fordoc2app.cloudintegration.eu users</p> <p>You'll only need to enter the Credentials Name and click on the circle button in the OAuth section to connect your Slack account to Workflow\u00b2.</p> <ol> <li>Open the Slack API page.</li> <li>Click on the Create an app button and select From scratch.</li> <li>Enter an App Name in the corresponding field.</li> <li>Select a workspace for your app from the dropdown list.</li> <li>Click on the Create App button.</li> <li>Scroll down to the App Credentials section.</li> <li>Copy and paste Client ID and Client Secret in the corresponding fields of your Doc\u00b2 credentials.</li> <li>On the Basic Information page, navigate to Building Apps for Slack &gt; Add features and functionality &gt; Permissions.</li> <li>In the Redirect URLs section, click on Add New Redirect URL.</li> <li>Copy the OAuth Callback URL provided in Doc\u00b2 and paste it here.</li> <li>Click on the Save URLs button.</li> <li>Scroll down to the Scopes section.</li> <li>Add the required scopes under the Bot Token Scopes section. You can refer to the list of scopes on the Scopes and permissions documentation on Slack.</li> <li>Click on the circle button in the OAuth section to connect a Slack account to Workflow\u00b2.</li> <li>Click the Save button to save your credentials in Workflow\u00b2.</li> <li>Return to the Slack OAuth &amp; Permissions page, scroll up to the OAuth Tokens for Your Workspace section and click on Install to Workspace button.</li> <li>Click on the Allow button.</li> </ol>"},{"location":"workflow/integrations/credentials/slack/#using-access-token","title":"Using Access Token","text":"<ol> <li>Open the Slack API page.</li> <li>Click on the Create an app button and select From scratch.</li> <li>Enter an App Name in the corresponding field.</li> <li>Select a workspace for your app from the dropdown list.</li> <li>Click on the Create App button.</li> <li>In the Add features and functionality section select Permissions.</li> <li> <p>Scroll down to the Scopes section and:</p> <ul> <li>If you want your app to act on behalf of users that authorize the app, add the required scopes under the User Token Scopes section.</li> <li>If you're building a bot, add the required scopes under the Bot Token Scopes section. </li> </ul> <p>Tip</p> <p>You can refer to the list of scopes on the officials Slack Scopes and permissions documentation.</p> </li> <li> <p>From the OAuth Tokens for Your Workspace section click on the Install to Workspace button.</p> </li> <li>Click on the Allow button.</li> <li>In Doc\u00b2, enter the Access Token created above.</li> <li>Click the Save button to save your credentials in Workflow\u00b2.</li> </ol>"},{"location":"workflow/integrations/credentials/slack/#privacy-policy","title":"Privacy policy","text":"<p>For details about how you data is collected and used, see the n8n and Slack privacy policies.</p>"},{"location":"workflow/integrations/credentials/sms77/","title":"sms77","text":"<p>You can use these credentials to authenticate the following nodes with sms77. - sms77</p>"},{"location":"workflow/integrations/credentials/sms77/#prerequisites","title":"Prerequisites","text":"<p>Create an sms77 account.</p>"},{"location":"workflow/integrations/credentials/sms77/#using-access-token","title":"Using Access Token","text":"<ol> <li>Access your sms77 dashboard.</li> <li>Click on the gear icon in the bottom left.</li> <li>Click on the HTTP API tab.</li> <li>Use the API key provided with your sms77 node credentials in Workflow\u00b2.</li> </ol>"},{"location":"workflow/integrations/credentials/snowflake/","title":"Snowflake","text":"<p>You can use these credentials to authenticate the following nodes with Snowflake. - Snowflake</p>"},{"location":"workflow/integrations/credentials/snowflake/#prerequisites","title":"Prerequisites","text":"<p>Create a Snowflake account.</p>"},{"location":"workflow/integrations/credentials/snowflake/#using-api-key","title":"Using API Key","text":"<ol> <li>Access your Snowflake instance.</li> <li>Copy the string of characters located between <code>https://</code> and <code>snowflakecomputing.com</code> in your Snowflake URL. This string is the name of your Snowflake Account. For example, if the URL of your Snowflake account is <code>https://abc.eu-central-1.snowflakecomputing.com</code> then the name of your account is <code>sx48547.eu-central-1</code>.</li> <li>Use this account name, database name, username, password, schema, and role with your Snowflake credentials in Workflow\u00b2.</li> </ol>"},{"location":"workflow/integrations/credentials/snowflake/#further-reference","title":"Further Reference","text":"<ul> <li>Snowflake API Documentation</li> </ul>"},{"location":"workflow/integrations/credentials/splunk/","title":"Splunk","text":"<p>You can use these credentials to authenticate the following nodes:</p> <ul> <li>Splunk</li> </ul>"},{"location":"workflow/integrations/credentials/splunk/#prerequisites","title":"Prerequisites","text":"<ul> <li>Download and install Splunk Enterprise</li> </ul>"},{"location":"workflow/integrations/credentials/splunk/#using-api-key","title":"Using API Key","text":"<p>From your Splunk UI:</p> <ol> <li>Navigate to the Settings &gt; Tokens menu.</li> <li>Select Enable Token Authentication and create a New Token.</li> <li>Copy the API Key provided there.</li> </ol> <p>From n8n:</p> <ol> <li>Enter your API key and application Base URL (e.g. <code>https://localhost:8089</code>).</li> <li>Use the toggle to select if you want to Allow Unauthorized Certificates.</li> <li>Click Save to create your credentials.</li> </ol>"},{"location":"workflow/integrations/credentials/spontit/","title":"Spontit","text":"<p>You can use these credentials to authenticate the following nodes with Spontit. - Spontit</p>"},{"location":"workflow/integrations/credentials/spontit/#prerequisites","title":"Prerequisites","text":"<p>Create a Spontit account.</p>"},{"location":"workflow/integrations/credentials/spontit/#using-api-key","title":"Using API Key","text":"<ol> <li>Access the Spontit dashboard.</li> <li>On the navigation menu, click on API, and select 'Get Secret Keys' from the dropdown list.</li> <li>Click on + Create New Key to generate a new API Key.</li> <li>Click on the PROFILE tab on the navigation menu.</li> <li>Copy the displayed username.</li> <li>Use this API Key and Username with your Spontit credentials in Workflow\u00b2.</li> </ol>"},{"location":"workflow/integrations/credentials/spontit/#further-reference","title":"Further Reference","text":"<ul> <li>Spontit API Documentation</li> </ul>"},{"location":"workflow/integrations/credentials/spotify/","title":"Spotify","text":"<p>You can use these credentials to authenticate the following nodes with Spotify. - Spotify</p>"},{"location":"workflow/integrations/credentials/spotify/#prerequisites","title":"Prerequisites","text":"<p>Create a Spotify Developer account.</p>"},{"location":"workflow/integrations/credentials/spotify/#using-oauth","title":"Using OAuth","text":"<p>\u26c5\ufe0f Note fordoc2app.cloudintegration.eu users</p> <p>You'll only need to enter the Credentials Name and click on the circle button in the OAuth section to connect your Spotify account to Workflow\u00b2.</p> <ol> <li>Access your Spotify for Developers dashboard.</li> <li>Click the Create an App button at the top of your dashboard. Enter in the app's name and description and click Create.</li> <li>Use provided Client Secret and Client ID with your Spotify node credentials in Workflow\u00b2.</li> <li>Open the app settings and add the Doc\u00b2 provided redirect URL to the app's redirect URI list. Redirect URL Explanation here.</li> </ol> <p></p>"},{"location":"workflow/integrations/credentials/ssh/","title":"SSH","text":"<p>You can use these credentials to authenticate the following nodes:</p> <ul> <li>SSH</li> </ul>"},{"location":"workflow/integrations/credentials/ssh/#prerequisites","title":"Prerequisites","text":"<p>Authentication for the SSH node requires that you have a username and password for connecting to the remote server, or an SSH key configured for the server or service you are connecting to. See Connecting to GitHub with SSH for an example.</p>"},{"location":"workflow/integrations/credentials/ssh/#using-password","title":"Using Password","text":"<ol> <li>From the SSH Credentials dropdown, select Create New and complete the following fields:<ul> <li>Credentials Name: Enter a descriptive name, here we used <code>ssh_demo</code>.</li> <li>Host: Enter the IP address of the server you are connecting to. Here we are using <code>192.168.1.8</code> for a local Mac set up for SSH access.</li> <li>Port: Enter the port to use for this connection. SSH used port 22 by default.</li> <li>User: Enter the your username for this server.</li> <li>Password: Enter your password for the provided username.</li> </ul> </li> <li>Click Save to make these credentials available for use.</li> </ol>"},{"location":"workflow/integrations/credentials/ssh/#using-private-key","title":"Using Private Key","text":"<ol> <li>With Private Key selected in the Authentication field, from the SSH Credentials dropdown select Create New.</li> <li>Complete the following fields:<ul> <li>Credentials Name: Enter a descriptive name, here we used <code>ssh_demo</code>.</li> <li>Host: Enter the IP address of the server you are connecting to.</li> <li>Port: Enter the port to use for this connection. SSH used port 22 by default.</li> <li>Private Key: Enter your SSH private key.</li> <li>Passphrase: Enter your passphrase used to secure this key.</li> </ul> </li> </ol>"},{"location":"workflow/integrations/credentials/stackby/","title":"Stackby","text":"<p>You can use these credentials to authenticate the following nodes with Stackby. - Stackby</p>"},{"location":"workflow/integrations/credentials/stackby/#prerequisites","title":"Prerequisites","text":"<p>Create a Stackby account.</p>"},{"location":"workflow/integrations/credentials/stackby/#using-api-key","title":"Using API Key","text":"<ol> <li>Open your Stackby dashboard.</li> <li>Click on the user icon on the top right and select 'Account' from the dropdown list.</li> <li>Under the API section, click on the Create API key button.</li> <li>Copy the displayed API key.</li> <li>Enter a name for your credentials in the Credentials Name field in the 'Stackby API' credentials in Workflow\u00b2.</li> <li>Paste the API key in the API Key field in the 'Stackby API' credentials in Workflow\u00b2.</li> <li>Click on the Create button to create the credentials.</li> </ol> <p>The following video demonstrates the steps mentioned above.</p>"},{"location":"workflow/integrations/credentials/storyblok/","title":"Storyblok","text":"<p>You can use these credentials to authenticate the following nodes with Storyblok. - Storyblok</p>"},{"location":"workflow/integrations/credentials/storyblok/#prerequisites","title":"Prerequisites","text":"<p>Create a Storyblok account.</p>"},{"location":"workflow/integrations/credentials/storyblok/#using-api-key-to-access-the-content-api","title":"Using API Key to access the Content API","text":"<ol> <li>Access the spaces page.</li> <li>Select a space you want to use from the left sidebar.</li> <li>Click on Settings in the left sidebar.</li> <li>Select the API-Keys tab.</li> <li>Select an access level from the Access Level dropdown list.</li> <li>Click on the Create Token button.</li> <li>Use this API Key with your Storyblok Content API credentials in Workflow\u00b2.</li> </ol>"},{"location":"workflow/integrations/credentials/storyblok/#using-api-key-to-access-the-management-api","title":"Using API Key to access the Management API","text":"<ol> <li>Access the My Account page.</li> <li>Scroll down to the Personal access tokens section.</li> <li>Click on the Generate new Token button.</li> <li>Use this API Key with your Storyblok Management API credentials in Workflow\u00b2.</li> </ol>"},{"location":"workflow/integrations/credentials/storyblok/#further-reference","title":"Further Reference","text":"<ul> <li>Content API Documentation</li> <li>Management API Documentation</li> </ul>"},{"location":"workflow/integrations/credentials/strapi/","title":"Strapi","text":"<p>You can use these credentials to authenticate the following nodes with Strapi. - Strapi</p>","tags":["Workflow\u00b2","Strapi","Prerequisites Strapi","Using API"]},{"location":"workflow/integrations/credentials/strapi/#prerequisites","title":"Prerequisites","text":"<p>Install Strapi on your server.</p>","tags":["Workflow\u00b2","Strapi","Prerequisites Strapi","Using API"]},{"location":"workflow/integrations/credentials/strapi/#using-api","title":"Using API","text":"<ol> <li>Access your Strapi Admin dashboard.</li> <li>Click on Settings in the left sidebar.</li> <li>Click on Roles under the USERS &amp; PERMISSIONS PLUGIN section.</li> <li>Click on the pencil icon next to the role you want to edit.</li> <li>In the Permissions section, give the required permissions.</li> <li>Click on the Save button.</li> <li>Click on Users in the left sidebar.</li> <li>Click on the + Add New user button.</li> <li>Enter the required information.</li> <li>Click on ON for the Confirmed field.</li> <li>Select the role that you set the permissions for in the previous steps from the Role dropdown list.</li> <li>Click on the Save button.</li> <li>Use this email, password, and the URL of your Strapi instance with your Strapi node credentials in Workflow\u00b2.</li> </ol>","tags":["Workflow\u00b2","Strapi","Prerequisites Strapi","Using API"]},{"location":"workflow/integrations/credentials/strava/","title":"Strava","text":"<p>You can use these credentials to authenticate the following nodes with Strava. - Strava - Strava Trigger</p>"},{"location":"workflow/integrations/credentials/strava/#prerequisites","title":"Prerequisites","text":"<p>Create a Strava account.</p>"},{"location":"workflow/integrations/credentials/strava/#using-oauth","title":"Using OAuth","text":"<ol> <li>Access the My API Application page.</li> <li>Enter the application name in the Application Name field.</li> <li>Enter the website URL in the Website field.</li> <li>Copy the string of characters between <code>https://</code> (or <code>http://</code>) and <code>/oauth2/callback</code> (or <code>/rest/oauth2-credential/callback</code>) from 'OAuth Callback URL' in Workflow\u00b2. Paste it in the Authorization Callback Domain in Strava.</li> <li>Read 'Strava's API Agreement', and if you agree, check the checkbox.</li> <li>Click on the Create button.</li> <li>Click on App Icon and select an image from the browser window.</li> <li>Click on the Save button.</li> <li>Use this Client ID and Client Secret with your Strava node credentials in Workflow\u00b2.</li> </ol>"},{"location":"workflow/integrations/credentials/stripe/","title":"Stripe","text":"<p>You can use these credentials to authenticate the following nodes with Stripe. - Stripe Trigger - Stripe</p>"},{"location":"workflow/integrations/credentials/stripe/#prerequisites","title":"Prerequisites","text":"<p>Create a Stripe account.</p>"},{"location":"workflow/integrations/credentials/stripe/#using-access-token","title":"Using Access Token","text":"<ol> <li>Access your Stripe dashboard.</li> <li>Click on the developers button in the left panel.</li> <li>Click on API keys.</li> <li>Use the secret key with your Stripe node credentials in Workflow\u00b2.</li> </ol>"},{"location":"workflow/integrations/credentials/sugarcrm/","title":"SugarCRM","text":"<p>You can use these credentials to authenticate the following nodes with SugarCRM. - SugarCRM</p>"},{"location":"workflow/integrations/credentials/sugarcrm/#prerequisites","title":"Prerequisites","text":"<p>Create a SugarCRM account.</p>"},{"location":"workflow/integrations/credentials/sugarcrm/#using-your-login","title":"Using your login","text":"<p>All you need to do is enter your username, password and your base sugarcrm URL. The node will take care of the rest.</p>"},{"location":"workflow/integrations/credentials/supabase/","title":"Supabase","text":"<p>You can use these credentials to authenticate the following nodes with Supabase. - Supabase</p>"},{"location":"workflow/integrations/credentials/supabase/#prerequisites","title":"Prerequisites","text":"<p>Create a Supabase account.</p>"},{"location":"workflow/integrations/credentials/supabase/#using-access-token","title":"Using Access Token","text":"<ol> <li>In the Supabase UI, navigate to the project you would like to connect to.</li> <li>Navigate to Settings page (through the gears button in the left sidebar).</li> <li>Under Project settings, click on API.</li> <li>Copy the value from the Supabase <code>URL</code> field into the <code>Host</code> field of your Supabase credentials in Workflow\u00b2.</li> <li>Copy the value from the Supabase <code>service_role secret</code> field into the <code>Service Role Secret</code> field of your Supabase credentials in Workflow\u00b2.</li> <li>Click <code>Save</code> on the Doc\u00b2 credentials screen.</li> </ol>"},{"location":"workflow/integrations/credentials/surveyMonkey/","title":"SurveyMonkey","text":"<p>You can use these credentials to authenticate the following nodes with SurveyMonkey. - SurveyMonkey Trigger</p>"},{"location":"workflow/integrations/credentials/surveyMonkey/#prerequisites","title":"Prerequisites","text":"<p>Create a SurveyMonkey account.</p>"},{"location":"workflow/integrations/credentials/surveyMonkey/#using-oauth","title":"Using OAuth","text":"<ol> <li>Access your SurveyMonkey dashboard.</li> <li>Click on the context menu in the top right.</li> <li>Click on Integrations &amp; Plug-ins</li> <li>Click on Develop.</li> <li>Click on My Apps in the top panel.</li> <li>Create a new app, fill in details.</li> <li>Once created, go to settings.</li> <li>Use the client ID and client secret with your SurveyMonkey OAuth API credentials in Workflow\u00b2.</li> </ol>"},{"location":"workflow/integrations/credentials/surveyMonkey/#using-access-token","title":"Using Access Token","text":"<ol> <li>Access your SurveyMonkey dashboard.</li> <li>Click on the context menu in the top right.</li> <li>Click on Integrations &amp; Plug-ins</li> <li>Click on Develop.</li> <li>Click on My Apps in the top panel.</li> <li>Create a new app, fill in details.</li> <li>Once created, go to settings.</li> <li>Use the access token, client ID and client secret with your SurveyMonkey node credentials in Workflow\u00b2.</li> </ol>"},{"location":"workflow/integrations/credentials/syncroMsp/","title":"SyncroMSP","text":"<p>You can use these credentials to authenticate the following nodes with SyncroMSP. - SyncroMSP</p>"},{"location":"workflow/integrations/credentials/syncroMsp/#prerequisites","title":"Prerequisites","text":"<p>Create a SyncroMSP account.</p>"},{"location":"workflow/integrations/credentials/syncroMsp/#using-access-token","title":"Using Access Token","text":"<ol> <li>With administrator privileges, navigate to the API Tokens page in SyncroMSP.</li> <li>Click on the <code>+ New Token</code> button.</li> <li>On the <code>Custom Permissions</code> tab, enter a name for your new token and adjust the permissions to match your requirements.</li> <li>Click <code>Create API Token</code> once done.</li> <li>Copy the key shown by SyncroMSP into the <code>API Key</code> field of your SyncroMSP credentials in Workflow\u00b2.</li> <li>Enter your SyncroMSP subdomain (the part between <code>https://</code> and <code>.syncromsp.com</code>) in the <code>Subdomain</code> field of your SyncroMSP credentials in Workflow\u00b2.</li> <li>Click <code>Save</code> on the Doc\u00b2 credentials screen.</li> </ol>"},{"location":"workflow/integrations/credentials/taiga/","title":"Taiga","text":"<p>You can use these credentials to authenticate the following nodes with Taiga. - Taiga - Taiga Trigger</p>"},{"location":"workflow/integrations/credentials/taiga/#prerequisites","title":"Prerequisites","text":"<p>Create a Taiga account.</p>"},{"location":"workflow/integrations/credentials/taiga/#using-username-and-password","title":"Using Username and Password","text":"<p>Use your username and password with the Taiga node credentials in Workflow\u00b2.</p> <p>Note: For self-hosted instances, you will have to additionally use your Taiga URL with the Taiga node credentials in Workflow\u00b2.</p>"},{"location":"workflow/integrations/credentials/tapfiliate/","title":"Tapfiliate","text":"<p>You can use these credentials to authenticate the following nodes with Tapfiliate. - Tapfiliate</p>"},{"location":"workflow/integrations/credentials/tapfiliate/#prerequisites","title":"Prerequisites","text":"<p>Create a Tapfiliate account.</p>"},{"location":"workflow/integrations/credentials/tapfiliate/#using-api-key","title":"Using API Key","text":"<ol> <li>Open your Tapfiliate dashboard page.</li> <li>Click on your avatar on the bottom left of the window.</li> <li>Select 'Profile Settings' from the dropdown list.</li> <li>Scroll down to the API Key section.</li> <li>Copy the displayed API Key.</li> <li>Enter a name for your credentials in the Credentials Name field in the 'Tapfiliate API' credentials in Workflow\u00b2.</li> <li>Paste the API key in the API Key field in the 'Tapfiliate API' credentials in Workflow\u00b2.</li> <li>Click the Create button to create your credentials in Workflow\u00b2.</li> </ol> <p>The following video demonstrates the steps mentioned above.</p>"},{"location":"workflow/integrations/credentials/telegram/","title":"Telegram","text":"<p>You can use these credentials to authenticate the following nodes with Telegram. - Telegram - Telegram Trigger</p>"},{"location":"workflow/integrations/credentials/telegram/#prerequisites","title":"Prerequisites","text":"<p>Create a Telegram account.</p>"},{"location":"workflow/integrations/credentials/telegram/#using-bot-access-token","title":"Using Bot Access Token","text":"<ol> <li>Start a chat with the Botfather.</li> <li>Enter <code>/newbot</code> and reply with your new bot's display name and username.</li> <li>Copy the bot token and use it in the Telegram node credentials in Workflow\u00b2.</li> </ol>"},{"location":"workflow/integrations/credentials/tempo/","title":"Tempo io","text":"<p>You can use these credentials to authenticate the following nodes with Tempo io.</p>"},{"location":"workflow/integrations/credentials/tempo/#prerequisites","title":"Prerequisites","text":"<p>Create a Tempo/Jira account.</p>"},{"location":"workflow/integrations/credentials/tempo/#using-your-login","title":"Using your login","text":"<p>All you need to do is create a Tempo API Accesspoint in your Tempo settings and paste that Token into your Tempo node credentials menu. The node will take care of the rest.</p>"},{"location":"workflow/integrations/credentials/theHive/","title":"TheHive","text":"<p>You can use these credentials to authenticate the following nodes with The Hive. - TheHive</p>"},{"location":"workflow/integrations/credentials/theHive/#prerequisites","title":"Prerequisites","text":"<p>Install TheHive on your server.</p>"},{"location":"workflow/integrations/credentials/theHive/#using-api-key","title":"Using API Key","text":"<ol> <li>Access your TheHive dashboard.</li> <li>Click on the Organization tab in the top right.</li> <li>Click on the Create API Key button for the user you want to generate the API Key for.</li> <li>Use this API Key and your instance URL with your TheHive node credentials in Workflow\u00b2.</li> </ol>"},{"location":"workflow/integrations/credentials/timescaleDb/","title":"TimescaleDB","text":"<p>You can use these credentials to authenticate the following nodes with TimescaleDB. - TimescaleDB</p>"},{"location":"workflow/integrations/credentials/timescaleDb/#prerequisites","title":"Prerequisites","text":"<p>An available instance of TimescaleDB.</p>"},{"location":"workflow/integrations/credentials/timescaleDb/#using-database-connection","title":"Using Database Connection","text":"<ol> <li>Retrieve your TimescaleDB credentials and connection parameters.</li> <li>Use the credentials and connection parameters with your TimescaleDB node credentials in Workflow\u00b2.</li> </ol>"},{"location":"workflow/integrations/credentials/todoist/","title":"Todoist","text":"<p>You can use these credentials to authenticate the following nodes with Todoist. - Todoist</p>"},{"location":"workflow/integrations/credentials/todoist/#prerequisites","title":"Prerequisites","text":"<p>Create a Todoist account.</p>"},{"location":"workflow/integrations/credentials/todoist/#using-oauth","title":"Using OAuth","text":"<p>\u26c5\ufe0f Note fordoc2app.cloudintegration.eu users</p> <p>You'll only need to enter the Credentials Name and click on the circle button in the OAuth section to connect your Todoist account to Workflow\u00b2.</p> <ol> <li>Access your Todoist App Management Console</li> <li>Enter a name in the App display name field and click on the Create app button.</li> <li>Copy the OAuth Callback URL from Doc\u00b2 and paste it in the OAuth redirect URL field.</li> <li>Click on the Save settings button.</li> <li>Use the provided Client ID and Client secret with your Todoist OAuth2 API credentials in Workflow\u00b2.</li> <li>Click on the circle button in the OAuth section to connect a Todoist account to Workflow\u00b2.</li> <li>Click the Save button to save your credentials in Workflow\u00b2.</li> </ol> <p></p>"},{"location":"workflow/integrations/credentials/todoist/#using-access-token","title":"Using Access Token","text":"<ol> <li>Access your Todoist dashboard.</li> <li>Click on the gear icon in the top right.</li> <li>Select Integrations on the left panel.</li> <li>Scroll down to see your API token.</li> <li>Use the API token with your Todoist node credentials in Workflow\u00b2.</li> </ol>"},{"location":"workflow/integrations/credentials/toggl/","title":"Toggl","text":"<p>You can use these credentials to authenticate the following nodes with Toggl. - Toggl Trigger</p>"},{"location":"workflow/integrations/credentials/toggl/#prerequisites","title":"Prerequisites","text":"<p>Create a Toggl account.</p>"},{"location":"workflow/integrations/credentials/toggl/#using-username-and-password","title":"Using Username and Password","text":"<ol> <li>Use your Toggle username and password with your node credentials in Workflow\u00b2.</li> </ol>"},{"location":"workflow/integrations/credentials/travisCi/","title":"Travis CI","text":"<p>You can use these credentials to authenticate the following nodes with Travis CI. - Travis CI</p>"},{"location":"workflow/integrations/credentials/travisCi/#prerequisites","title":"Prerequisites","text":"<p>Create a Travis CI account.</p>"},{"location":"workflow/integrations/credentials/travisCi/#using-access-token","title":"Using Access Token","text":"<ol> <li>Open your Travis CI dashboard.</li> <li>Click on the user icon in the top right.</li> <li>Click on 'Settings' in the dropdown list.</li> <li>Click on the Settings tab on the page.</li> <li>Copy the Token from the API authentication section and use it with your Travis API credentials in Workflow\u00b2.</li> <li>Click on the Save button to save your credentials.</li> </ol>"},{"location":"workflow/integrations/credentials/trello/","title":"Trello","text":"<p>You can use these credentials to authenticate the following nodes with Trello. - Trello - Trello Trigger</p>"},{"location":"workflow/integrations/credentials/trello/#prerequisites","title":"Prerequisites","text":"<p>Create a Trello account.</p>"},{"location":"workflow/integrations/credentials/trello/#using-access-token","title":"Using Access Token","text":"<ol> <li>Access Trello API Key  portal.</li> <li>Gather your API key at the top.</li> <li>Scroll down and you will find your OAuth secret.</li> <li>Click on \"generate a Token\" where you will find your token.</li> <li>Use the API token, OAuth secret and API key with your node credentials in Workflow\u00b2.</li> </ol>"},{"location":"workflow/integrations/credentials/twake/","title":"Twake","text":"<p>You can use these credentials to authenticate the following nodes with Twake. - Twake</p>"},{"location":"workflow/integrations/credentials/twake/#prerequisites","title":"Prerequisites","text":"<p>Create a Twake account.</p>"},{"location":"workflow/integrations/credentials/twake/#using-access-token","title":"Using Access Token","text":"<ol> <li>Access your Twake workspace.</li> <li>Click on Main in the top left corner.</li> <li>Select 'Workspace settings' from the dropdown list.</li> <li>Select Applications and connectors.</li> <li>Click on the Search applications... button.</li> <li>Search for <code>n8n</code> and click on the Display button.</li> <li>Click on Install and select Confirm.</li> <li>Click on Configure and copy the Workspace Key.</li> <li>Use the Workspace Key with your Twake node credentials in Workflow\u00b2.</li> </ol>"},{"location":"workflow/integrations/credentials/twilio/","title":"Twilio","text":"<p>You can use these credentials to authenticate the following nodes with Twilio. - Twilio</p>"},{"location":"workflow/integrations/credentials/twilio/#prerequisites","title":"Prerequisites","text":"<p>Create a Twilio account.</p>"},{"location":"workflow/integrations/credentials/twilio/#using-auth-token","title":"Using Auth Token","text":"<ol> <li>Open your Twilio project dashboard.</li> <li>Copy the displayed Account SID.</li> <li>Enter a name for your credentials in the Credentials Name field in the 'Twilio API' credentials in Workflow\u00b2.</li> <li>Paste the Account SID in the Account SID field in the 'Twilio API' credentials in Workflow\u00b2.</li> <li>Copy the Auth Token from the Twilio project dashboard.</li> <li>Paste the Auth Token in the Auth Token field in the 'Twilio API' credentials in Workflow\u00b2.</li> <li>Click on the Create button to create the credentials.</li> </ol> <p>The following video demonstrates the steps mentioned above.</p>"},{"location":"workflow/integrations/credentials/twilio/#using-api-key","title":"Using API Key","text":"<ol> <li>Open your Twilio project dashboard.</li> <li>Copy the displayed Account SID.</li> <li>Enter a name for your credentials in the Credentials Name field in the 'Twilio API' credentials in Workflow\u00b2.</li> <li>Select 'API Key' from the Auth Type dropdown list.</li> <li>Paste the Account SID in the Account SID field in the 'Twilio API' credentials in Workflow\u00b2.</li> <li>Click on Settings in the left-sidebar.</li> <li>Select API Keys under the Settings.</li> <li>Click on the Create new API Key button.</li> <li>Enter a name in the Friendly Name field.</li> <li>Click on the Create API Key button.</li> <li>Copy the displayed SID.</li> <li>Paste the SID in the API Key SID field in the 'Twilio API' credentials in Workflow\u00b2.</li> <li>Copy the Secret from the Twilio dashboard.</li> <li>Paste the Secret in the API Key Secret field in the 'Twilio API' credentials in Workflow\u00b2.</li> <li>Click on the Create button to create the credentials.</li> </ol> <p>The following video demonstrates the steps mentioned above.</p>"},{"location":"workflow/integrations/credentials/twist/","title":"Twist","text":"<p>You can use these credentials to authenticate the following nodes with Twist. - Twist</p>"},{"location":"workflow/integrations/credentials/twist/#prerequisites","title":"Prerequisites","text":"<p>Create a Twist account.</p>"},{"location":"workflow/integrations/credentials/twist/#using-oauth","title":"Using OAuth","text":"<p> Callback URL with Twist</p> <p>Note: The Redirect URL should be a URL in your domain. For example, <code>https://mytemplatemaker.example.com/gr_callback</code>. Twist doesn't accept the localhost callback URL. Refer to the FAQs to learn to configure the credentials for the local environment.</p> <ol> <li>Access your Twist workspace.</li> <li>Click on your avatar in the top right corner.</li> <li>Select 'Add integrations...' from the dropdown list.</li> <li>Click on Build on the top.</li> <li>Click on the Add a new integration button.</li> <li>Enter a name in the Integration name field.</li> <li>Enter a description in the Description field.</li> <li>Select 'General integration' from the Integration type dropdown list.</li> <li>Click on the Create my integration button.</li> <li>Click on OAuth Authentication from the left sidebar.</li> <li>Copy the 'OAuth Callback URL' provided in the Twist OAuth2 API credentials in Doc\u00b2 and paste it in the OAuth 2 redirect URL field on your Twist integration page.</li> <li>Click on the Update integration button.</li> <li>Use the Client ID and Client Secret with your Twist node credentials in Workflow\u00b2.</li> <li>Click on the circle button in the OAuth section to connect a Twist account to Workflow\u00b2.</li> <li>Click the Save button to save your credentials in Workflow\u00b2.</li> </ol> <p></p>"},{"location":"workflow/integrations/credentials/twist/#faqs","title":"FAQs","text":""},{"location":"workflow/integrations/credentials/twist/#how-to-configure-the-oauth-credentials-for-the-local-environment","title":"How to configure the OAuth credentials for the local environment?","text":"<p>Twist doesn't accept the localhost callback  URL. However, you can follow the steps mentioned below to configure the OAuth credentials for the local environment: 1. We will use ngrok to expose the local server running on port <code>5678</code> to the internet. In your terminal, run the following command: <pre><code>ngrok http 5678\n</code></pre> 2. Run the following command in a new terminal. Replace <code>&lt;YOUR-NGROK-URL&gt;</code> with the URL that you get from the previous step. <pre><code>export WEBHOOK_URL=&lt;YOUR-NGROK-URL&gt;\n</code></pre> 3. Start your Doc\u00b2 instance. 4. Follow the instructions mentioned in the Using OAuth section to configure your credentials.</p>"},{"location":"workflow/integrations/credentials/twitter/","title":"Twitter","text":"<p>You can use these credentials to authenticate the following nodes with Twitter. - Twitter</p>","tags":["Workflow\u00b2","Twitter"]},{"location":"workflow/integrations/credentials/twitter/#prerequisites","title":"Prerequisites","text":"<p>Create a Twitter developer account.</p>","tags":["Workflow\u00b2","Twitter"]},{"location":"workflow/integrations/credentials/twitter/#using-oauth","title":"Using OAuth","text":"<ol> <li>Access the Twitter Developer portal.</li> <li>Fill out the questionnaire to gain essential access and click Next once done. </li> <li>Confirm the Developer agreement by checking the box and clicking Submit once done. </li> <li>Twitter will now send you a confirmation email. Click the Confirm your email button in the email. </li> <li>After confirming your email, you are redirected to the #Welcome to the Twitter Developer Platform page. Enter a name for your Twitter application and click the Get keys button.</li> <li>Copy the API Key, API Key Secret shown on the next page. </li> <li>Click the Skip to dashboard link at the bottom of the page and click the Yes, I saved them button.</li> <li>Click the Gear button next to your newly created app to open it's App settings. </li> <li>In the Authentication settings sections, click Edit.</li> <li>Turn on the Enable 3-legged OAuth switch and paste the URL shown in the OAuth Redirect URL of the Doc\u00b2 credentials screen into the Callback URLs field of your Twitter apps authentication settings.</li> <li>Enter a valid Website URL in the respective field (for example https://n8n.io). </li> <li>Save your input by clicking the Save button at the bottom of the page.</li> <li>Under App permissions, click Edit and choose the appropriate permissions for your app (pick Read and write and Direct message if you want to use all functions of the Twitter Doc\u00b2 in n8n) and click Save to confirm.</li> <li>In the sidebar on the left, click on the Project your app has been created in (usually Project 1) and then on the Apply for Elevated button.</li> <li>Fill out the questionnaire and confirm the inputs on each questionnaire page with a click on Next (Submit on the final page). </li> <li>Once you receive confirmation that your application has been approved, you're ready to use the Doc\u00b2 Twitter node.</li> <li>In the Doc\u00b2 credentials screen, paste your API Key from steps 6 above into the Consumer Key field, and your API Key Secret into the Consumer Secret field.</li> <li>Click Connect my account and confirm the connection by clicking Authorize app.</li> </ol>","tags":["Workflow\u00b2","Twitter"]},{"location":"workflow/integrations/credentials/twitter/#further-reference","title":"Further Reference","text":"<ul> <li>Application-only Authentication</li> </ul>","tags":["Workflow\u00b2","Twitter"]},{"location":"workflow/integrations/credentials/typeform/","title":"Typeform","text":"<p>You can use these credentials to authenticate the following nodes with Typeform. - Typeform Trigger</p>","tags":["Workflow\u00b2","Typeform"]},{"location":"workflow/integrations/credentials/typeform/#prerequisites","title":"Prerequisites","text":"<p>Create a Typeform account.</p>","tags":["Workflow\u00b2","Typeform"]},{"location":"workflow/integrations/credentials/typeform/#using-oauth","title":"Using OAuth","text":"<ol> <li>Access your Typeform dashboard.</li> <li>Go to your user profile in the top right.</li> <li>Click on 'Settings' and then click on 'Developer apps' in the sidebar.</li> <li>Click on the Register a new app button.</li> <li>Copy the 'OAuth Callback URL' provided in the Typeform OAuth2 API credentials in Doc\u00b2 and paste it in the Redirect URI(s) section in the Typeform app registration page.</li> <li>Enter any other information necessary and click on the Register app button.</li> <li>Use the displayed Client ID and Client secret with your Typeform OAuth2 API credentials in Workflow\u00b2.</li> <li>Click on the circle button in the OAuth section to connect a Typeform account to Workflow\u00b2.</li> <li>Click the Save button to save your credentials.</li> </ol>","tags":["Workflow\u00b2","Typeform"]},{"location":"workflow/integrations/credentials/typeform/#using-access-token","title":"Using Access Token","text":"<ol> <li>Open the Typeform dashboard.</li> <li>Click on your avatar on the top right and select 'Settings'.</li> <li>Click on Personal tokens under the Profile section in the sidebar.</li> <li>Click on the Generate a new token button.</li> <li>Enter a name in the Token name field.</li> <li>Click on the Generate token button.</li> <li>Click on the Copy button to copy the access token.</li> <li>Enter a name for your credentials in the Credentials Name field in the 'Typeform API' credentials in Workflow\u00b2.</li> <li>Paste the access token in the Access Token field in the 'Typeform API' credentials in Workflow\u00b2.</li> <li>Click the Create button to save your credentials in Workflow\u00b2.</li> </ol> <p>The following video demonstrates the steps mentioned above.</p>","tags":["Workflow\u00b2","Typeform"]},{"location":"workflow/integrations/credentials/uProc/","title":"uProc","text":"<p>You can use these credentials to authenticate the following nodes with uProc. - uProc</p>","tags":["Workflow\u00b2","uProc"]},{"location":"workflow/integrations/credentials/uProc/#prerequisites","title":"Prerequisites","text":"<p>Create a uProc account.</p>","tags":["Workflow\u00b2","uProc"]},{"location":"workflow/integrations/credentials/uProc/#using-api-key","title":"Using API Key","text":"<ol> <li>Access the uProc dashboard.</li> <li>Click on the Settings tab on the left sidebar.</li> <li>Click on the Integrations tab.</li> <li>Use the displayed Email and API Key (real) with your uProc node credentials in Workflow\u00b2.</li> </ol>","tags":["Workflow\u00b2","uProc"]},{"location":"workflow/integrations/credentials/unleashedSoftware/","title":"Unleashed Software","text":"<p>You can use these credentials to authenticate the following nodes with Unleashed Software. - Unleashed Software</p>"},{"location":"workflow/integrations/credentials/unleashedSoftware/#prerequisites","title":"Prerequisites","text":"<p>Create an Unleashed Software account.</p>"},{"location":"workflow/integrations/credentials/unleashedSoftware/#using-access-token","title":"Using Access Token","text":"<ol> <li>Access your Unleashed Software dashboard.</li> <li>Click on Integration in the left sidebar and select Unleashed API Access.</li> <li>Use the displayed API Id and API Key with your Unleashed API credentials in Workflow\u00b2.</li> <li>Click on the Save button to save your credentials.</li> </ol>"},{"location":"workflow/integrations/credentials/uplead/","title":"UpLead","text":"<p>You can use these credentials to authenticate the following nodes with UpLead. - UpLead</p>","tags":["Workflow\u00b2","UpLead"]},{"location":"workflow/integrations/credentials/uplead/#prerequisites","title":"Prerequisites","text":"<p>Create an UpLead account.</p>","tags":["Workflow\u00b2","UpLead"]},{"location":"workflow/integrations/credentials/uplead/#using-access-token","title":"Using Access Token","text":"<ol> <li>Access your UpLead dashboard.</li> <li>Click on your name in the bottom left.</li> <li>Click on Profile.</li> <li>Scroll down and click on the Generate New API Key.</li> <li>Use the API Key with your UpLead node credentials in Workflow\u00b2.</li> </ol>","tags":["Workflow\u00b2","UpLead"]},{"location":"workflow/integrations/credentials/uptimeRobot/","title":"UptimeRobot","text":"<p>You can use these credentials to authenticate the following nodes with UptimeRobot. - UptimeRobot</p>","tags":["Workflow\u00b2","UptimeRobot"]},{"location":"workflow/integrations/credentials/uptimeRobot/#prerequisites","title":"Prerequisites","text":"<p>Create an UptimeRobot account.</p>","tags":["Workflow\u00b2","UptimeRobot"]},{"location":"workflow/integrations/credentials/uptimeRobot/#using-api-key","title":"Using API Key","text":"<ol> <li>Open your UptimeRobot dashboard.</li> <li>Click on My Settings in the navigation menu.</li> <li>Scroll down to the API Settings at the bottom.</li> <li>Click on Create the main API key under the Main API Key section.</li> <li>Click on Create the main API key button.</li> <li>Copy the displayed API key.</li> <li>Enter the name for your credentials in the Credentials Name field in the 'UptimeRobot API' credentials in Workflow\u00b2.</li> <li>Paste the API key in the API Key field in the 'UptimeRobot API' credentials in Workflow\u00b2.</li> <li>Click on the Create button to create your credentials.</li> </ol> <p>The following video demonstrates the steps mentioned above.</p>","tags":["Workflow\u00b2","UptimeRobot"]},{"location":"workflow/integrations/credentials/urlScanIo/","title":"urlscan.io","text":"<p>You can use these credentials to authenticate the following nodes with UptimeRobot. - urlscan.io</p>","tags":["Workflow\u00b2","urlscan.io"]},{"location":"workflow/integrations/credentials/urlScanIo/#prerequisites","title":"Prerequisites","text":"<p>Create an urlscan.io account.</p>","tags":["Workflow\u00b2","urlscan.io"]},{"location":"workflow/integrations/credentials/urlScanIo/#using-api-key","title":"Using API key","text":"<p>From urlscan.io:</p> <ol> <li>Navigate to your Settings&amp;API page.</li> <li>Under the API Keys section click + Create new API key.</li> <li>Enter a description for your new API key as prompted and click + Create API key.</li> <li>Copy the new API key for use in Workflow\u00b2.</li> </ol> <p>From n8n:</p> <ol> <li>Enter the API Key obtained above.</li> <li>Click Save to create your credentials.</li> </ol>","tags":["Workflow\u00b2","urlscan.io"]},{"location":"workflow/integrations/credentials/vero/","title":"Vero","text":"<p>You can use these credentials to authenticate the following nodes with Vero. - Vero</p>","tags":["Workflow\u00b2","Vero"]},{"location":"workflow/integrations/credentials/vero/#prerequisites","title":"Prerequisites","text":"<p>Create a Vero account.</p>","tags":["Workflow\u00b2","Vero"]},{"location":"workflow/integrations/credentials/vero/#using-access-token","title":"Using Access Token","text":"<ol> <li>Access your Vero dashboard.</li> <li>Click on the cog icon in the bottom left.</li> <li>Scroll down to see your Auth token.</li> <li>Use the auth token with your Vero node credentials in Workflow\u00b2.</li> </ol>","tags":["Workflow\u00b2","Vero"]},{"location":"workflow/integrations/credentials/vonage/","title":"Vonage","text":"<p>You can use these credentials to authenticate the following nodes with Vonage. - Vonage</p>","tags":["Workflow\u00b2","Vonage"]},{"location":"workflow/integrations/credentials/vonage/#prerequisites","title":"Prerequisites","text":"<p>Create a Vonage account.</p>","tags":["Workflow\u00b2","Vonage"]},{"location":"workflow/integrations/credentials/vonage/#using-api-key","title":"Using API Key","text":"<ol> <li>Access the Vonage API dashboard.</li> <li>Copy the API key and the API Secret from the dashboard.</li> <li>Use this API Key and API Secret with your Vonage node credentials in Workflow\u00b2.</li> </ol>","tags":["Workflow\u00b2","Vonage"]},{"location":"workflow/integrations/credentials/webflow/","title":"Webflow","text":"<p>You can use these credentials to authenticate the following nodes with Webflow. - Webflow - Webflow Trigger</p>","tags":["Workflow\u00b2","Webflow"]},{"location":"workflow/integrations/credentials/webflow/#prerequisites","title":"Prerequisites","text":"<p>Create a Webflow account.</p>","tags":["Workflow\u00b2","Webflow"]},{"location":"workflow/integrations/credentials/webflow/#using-oauth","title":"Using OAuth","text":"<p>\u26c5\ufe0f Note fordoc2app.cloudintegration.eu users</p> <p>You'll only need to enter the Credentials Name and click on the circle button in the OAuth section to connect your Webflow account to Workflow\u00b2.</p> <ol> <li>Access your Webflow dashboard.</li> <li>Click on 'Account' on the top right corner.</li> <li>Select 'Account Settings' from the dropdown list.</li> <li>Click on the 'Integrations' tab.</li> <li>Click on the + Register New Application button in the 'My Applications' section.</li> <li>Enter the name of your application in the Application Name field.</li> <li>Enter the description of your application in the Application Description field.</li> <li>Copy the 'OAuth Callback URL' provided in the 'Webflow OAuth2 API' credentials in Doc\u00b2 and paste it in the Redirect URI field in the Webflow integrations page.</li> <li>Enter the homepage URL of your application in the Application Homepage field.</li> <li>Click on the Create button.</li> <li>Click on the View Details button to get the Client Id and Client Secret.</li> <li>Use these credentials with your 'Webflow OAuth2 API' credentials in Workflow\u00b2.</li> <li>Click on the circle button in the OAuth section of Doc\u00b2 to connect a Webflow account to Workflow\u00b2.</li> <li>Click on the Save button to save your credentials.</li> </ol> <p></p>","tags":["Workflow\u00b2","Webflow"]},{"location":"workflow/integrations/credentials/webflow/#using-access-token","title":"Using Access Token","text":"<ol> <li>Access your Webflow dashboard.</li> <li>Click on your desired project.</li> <li>Click on the W icon in the top left.</li> <li>Click on Project Settings.</li> <li>Click on the Integrations tab.</li> <li>Scroll down and click generate API token.</li> <li>Use the api token with your Webflow node credentials in Workflow\u00b2.</li> </ol>","tags":["Workflow\u00b2","Webflow"]},{"location":"workflow/integrations/credentials/wekan/","title":"Wekan","text":"<p>You can use these credentials to authenticate the following nodes with Wekan. - Wekan</p>","tags":["Workflow\u00b2","Wekan"]},{"location":"workflow/integrations/credentials/wekan/#prerequisites","title":"Prerequisites","text":"<p>Install Wekan on your server.</p>","tags":["Workflow\u00b2","Wekan"]},{"location":"workflow/integrations/credentials/wekan/#using-api-key","title":"Using API Key","text":"<ol> <li>Use the Wekan username, password, and URL with your Wekan node credentials in Workflow\u00b2.</li> </ol>","tags":["Workflow\u00b2","Wekan"]},{"location":"workflow/integrations/credentials/wise/","title":"Wise","text":"<p>You can use these credentials to authenticate the following nodes with Wise. - Wise - Wise Trigger</p>","tags":["Workflow\u00b2","Wise"]},{"location":"workflow/integrations/credentials/wise/#prerequisites","title":"Prerequisites","text":"<p>Create a Wise account.</p>","tags":["Workflow\u00b2","Wise"]},{"location":"workflow/integrations/credentials/wise/#using-api-token","title":"Using API Token","text":"<ol> <li>Open your Wise dashboard.</li> <li>Click on the username on the top right and select 'Settings' from the dropdown list.</li> <li>Scroll down to the bottom and click on API tokens.</li> <li>Click on the Add new token button.</li> <li>Enter a name in the Name or description field.</li> <li>Click on the Create token button.</li> <li>Scroll down to the bottom and click on API tokens.</li> <li>Click on Reveal key to reveal the newly generated API key.</li> <li>Enter your Wise account password in the Please enter your password field.</li> <li>Copy the displayed API key.</li> <li>Enter the name for your credentials in the Credentials Name field in the 'Wise API' credentials in Workflow\u00b2.</li> <li>Paste the API key in the API Token field in the 'Wise API' credentials in Workflow\u00b2.</li> <li>If you're using a Wise sandbox account, select 'Test' from the Environment dropdown list in the 'Wise API' credentials in Workflow\u00b2.</li> <li>Click on the Create button to create your credentials.</li> </ol> <p>The following video demonstrates the steps mentioned above.</p>","tags":["Workflow\u00b2","Wise"]},{"location":"workflow/integrations/credentials/wooCommerce/","title":"WooCommerce","text":"<p>You can use these credentials to authenticate the following nodes with WooCommerce. - WooCommerce - WooCommerce Trigger</p>"},{"location":"workflow/integrations/credentials/wooCommerce/#prerequisites","title":"Prerequisites","text":"<p>Install the WooCommerce plugin on your WordPress website.</p>"},{"location":"workflow/integrations/credentials/wooCommerce/#using-access-token","title":"Using Access Token","text":"<ol> <li>Access your WordPress dashboard.</li> <li>Select 'Settings' from the WooCommerce dropdown list.</li> <li>Click on the Advanced tab.</li> <li>Click on REST API.</li> <li>Click on the Create an API Key button.</li> <li>Enter the necessary details.</li> <li>Select 'Read/Write' from the Permissions dropdown list.</li> <li>Click on the Generate API Key button.</li> <li>Use your WooCommerce website URL, Consumer key &amp; Consumer secret with your WooCommerce node credentials in Workflow\u00b2.</li> </ol>"},{"location":"workflow/integrations/credentials/wordpress/","title":"WordPress","text":"<p>You can use these credentials to authenticate the following nodes with WordPress. - WordPress</p>"},{"location":"workflow/integrations/credentials/wordpress/#prerequisites","title":"Prerequisites","text":"<ul> <li>Create a WordPress account or deploy WordPress on a server.</li> </ul>"},{"location":"workflow/integrations/credentials/wordpress/#using-username-and-password","title":"Using Username and Password","text":"<ol> <li>Log in to your WordPress dashboard.</li> <li>Click on Profile in the left side menu, and scroll down to the Application Password section.</li> <li>Enter an application name in the New Application Password Name field.</li> <li>Click on the Add New Application Password button.</li> <li>Copy the displayed application password.</li> <li>Enter your WordPress username in the Username field in the 'WordPress API' credentials in Workflow\u00b2.</li> <li>Paste the application password in the Password field in the 'WordPress API' credentials in Workflow\u00b2.</li> <li>Enter your WordPress website URL in the WordPress URL field in the 'WordPress API' credentials in Workflow\u00b2.</li> <li>Click on the Save button to save the credentials.</li> </ol>"},{"location":"workflow/integrations/credentials/workable/","title":"Workable","text":"<p>You can use these credentials to authenticate the following nodes:</p> <ul> <li>Workable Trigger</li> </ul>"},{"location":"workflow/integrations/credentials/workable/#prerequisites","title":"Prerequisites","text":"<p>Create a Workable account.</p>"},{"location":"workflow/integrations/credentials/workable/#using-api-key","title":"Using API Key","text":"<ol> <li>Log in to Workable.</li> <li>Click on the avatar on the top-right and select Settings, then Integrations.</li> <li>Scroll down to Access Token and click Generate new token.</li> <li>Copy the newly generated token.</li> <li>Paste the token in the Access Token field of the Workable API credentials screen in Workflow\u00b2.</li> <li>Add the part between <code>https://</code> and <code>.workable.com</code> of your Workable subdomain in the Subdomain field of the Doc\u00b2 credentials screen.</li> <li>Click the Save button to save your credentials in Workflow\u00b2.</li> </ol>"},{"location":"workflow/integrations/credentials/wufoo/","title":"Wufoo","text":"<p>You can use these credentials to authenticate the following nodes with Wufoo. - Wufoo Trigger</p>"},{"location":"workflow/integrations/credentials/wufoo/#prerequisites","title":"Prerequisites","text":"<p>Create a Wufoo account.</p>"},{"location":"workflow/integrations/credentials/wufoo/#using-api-key","title":"Using API Key","text":"<ol> <li>Access the Wufoo Form Manager.</li> <li>To the right of the form, click on ... and select API Information from the dropdown list.</li> <li>Copy the API Key.</li> <li>Click on Account  from the top right corner and select 'My Account' from the dropdown list.</li> <li>Copy the Subdomain.</li> <li>Use this API Key and Subdomain with your Wufoo Trigger node credentials in Workflow\u00b2.</li> </ol>"},{"location":"workflow/integrations/credentials/xero/","title":"Xero","text":"<p>You can use these credentials to authenticate the following nodes with Xero.</p> <ul> <li>Xero</li> </ul>","tags":["Workflow\u00b2","Xero","Prerequisites Xero","Using OAuth"]},{"location":"workflow/integrations/credentials/xero/#prerequisites","title":"Prerequisites","text":"<p>Create a Xero account.</p>","tags":["Workflow\u00b2","Xero","Prerequisites Xero","Using OAuth"]},{"location":"workflow/integrations/credentials/xero/#using-oauth","title":"Using OAuth","text":"<ol> <li>Go to the apps page in the Xero developer portal.</li> <li>Click on the New app button and fill in any necessary information.</li> <li>Copy the 'OAuth Callback URL' provided in the Xero OAuth API credentials in Doc\u00b2 and paste it in the OAuth 2.0 redirect URI field in the Xero app creation page.</li> <li>Click on the Create app button.</li> <li>Click on Generate a secret and use the 'Client id' and the 'Client secret' with your Xero OAuth API credentials in Workflow\u00b2.</li> <li>Click on the circle button in the OAuth section to connect a Xero account to Workflow\u00b2.</li> <li>Click the Save button to save your credentials.</li> </ol>","tags":["Workflow\u00b2","Xero","Prerequisites Xero","Using OAuth"]},{"location":"workflow/integrations/credentials/yourls/","title":"Yourls","text":"<p>You can use these credentials to authenticate the following nodes with Yourls. - Yourls</p>"},{"location":"workflow/integrations/credentials/yourls/#prerequisites","title":"Prerequisites","text":"<p>Install Yourls on your server.</p>"},{"location":"workflow/integrations/credentials/yourls/#using-api","title":"Using API","text":"<ol> <li>Access your Yourls Admin dashboard.</li> <li>Click on Tools on the top left.</li> <li>Scroll down to the Secure passwordless API call section.</li> <li>Copy the signature token.</li> <li>Use this Signature and the URL of your Yourls instance with your Yourls node credentials in Workflow\u00b2.</li> </ol>"},{"location":"workflow/integrations/credentials/zammad/","title":"Zammad","text":"<p>You can use these credentials to authenticate the following nodes with Zammad. - Zammad</p>"},{"location":"workflow/integrations/credentials/zammad/#prerequisites","title":"Prerequisites","text":"<ol> <li>Create a hosted Zammad account or set up your own Zammad instance.</li> <li>For the token-based authentication make sure <code>Token Access</code> is enabled in the API section of your Zammad instance's System settings.</li> </ol>"},{"location":"workflow/integrations/credentials/zammad/#basic-auth","title":"Basic Auth","text":"<ol> <li>Enter the URL of your Zammad instance in the Base URL field of the Doc\u00b2 credentials screen.</li> <li>Enter your Zammad email om the Email field and your password in the Password field.</li> </ol>"},{"location":"workflow/integrations/credentials/zammad/#token-auth","title":"Token Auth","text":"<ol> <li>Log in to your Zammad instance</li> <li>Click your avatar in the lower left corner, then click on Profile</li> <li>Select Token Access and click Create</li> <li>Enter a name for your new token and pick all required permissions. Click Create once done.</li> <li>Copy the token shown into the Access Token field in Workflow\u00b2. Enter the URL of your Zammad instance in the Base URL field.</li> </ol>"},{"location":"workflow/integrations/credentials/zendesk/","title":"Zendesk","text":"<p>You can use these credentials to authenticate the following nodes with Zendesk. - Zendesk - Zendesk Trigger</p>"},{"location":"workflow/integrations/credentials/zendesk/#prerequisites","title":"Prerequisites","text":"<p>Create a Zendesk account.</p>"},{"location":"workflow/integrations/credentials/zendesk/#using-oauth","title":"Using OAuth","text":"<ol> <li>Open your Zendesk dashboard.</li> <li>Click on the gear icon on the left.</li> <li>Click on 'API' under the CHANNELS section in the sidebar.</li> <li>Click on the OAuth Clients tab.</li> <li>Click on the Add OAuth client button.</li> <li>Enter the client name in the Client Name field.</li> <li>Enter a description in the Description field.</li> <li>Copy the 'OAuth Callback URL' provided in the 'Zendesk OAuth2 API' credentials in Workflow\u00b2.</li> <li>Paste it in the Redirect URLs field on the Zendesk API credentials page.</li> <li>Click on the Save button.</li> <li>Click on the OK button on the Please store the secret that will appear pop-up.</li> <li>Scroll down to the Secret section and copy the displayed Secret.</li> <li>Paste this secret in the Client Secret field in the 'Zendesk OAuth2 API' credentials in Workflow\u00b2.</li> <li>Copy the Unique identifier from the Zendesk API credentials page.</li> <li>Paste it in the Client ID field in the 'Zendesk OAuth2 API' credentials in Workflow\u00b2.</li> <li>Enter your Zendesk subdomain in the Subdomain field in the 'Zendesk OAuth2 API' credentials in Workflow\u00b2. Refer to the FAQs to learn more about subdomain.</li> <li>Enter the name for your credentials in the Credentials Name field in the 'Zendesk OAuth2 API' credentials in Workflow\u00b2.</li> <li>Click on the circle button in the OAuth section to connect a Zendesk account to Workflow\u00b2.</li> <li>Click on the Save button to save your credentials.</li> </ol> <p>The following video demonstrates the steps mentioned above.</p>"},{"location":"workflow/integrations/credentials/zendesk/#using-access-token","title":"Using Access Token","text":"<ol> <li>Open your Zendesk dashboard.</li> <li>Click on the gear icon on the left.</li> <li>Click on 'API' under the CHANNELS section in the sidebar.</li> <li>If Token access is disabled, click on the switch to toggle it to 'Enabled'.</li> <li>Click on the Add API token button.</li> <li>Enter a description in the API token description field.</li> <li>Click on the Copy button to copy the API token.</li> <li>Click on the Save button.</li> <li>Enter the name for your credentials in the Credentials Name field in the 'Zendesk API' credentials in Workflow\u00b2.</li> <li>Enter your Zendesk subdomain in the Subdomain field. Refer to the FAQs to learn more about subdomain.</li> <li>Enter your Zendesk email address in the Email field.</li> <li>Paste the API token in the API Token field.</li> <li>Click on the Save button to save your credentials.</li> </ol> <p>The following video demonstrates the steps mentioned above.</p>"},{"location":"workflow/integrations/credentials/zendesk/#faqs","title":"FAQs","text":""},{"location":"workflow/integrations/credentials/zendesk/#how-do-i-get-my-zendesk-subdomain","title":"How do I get my Zendesk subdomain?","text":"<p>To get your Zendesk subdomain, follow the steps mentioned below. 1. Access your Zendesk dashboard. 2. Copy the string of characters located between <code>https://</code> and <code>.zendesk.com/agent/dashboard</code> in your Zendesk URL. This string is the subdomain. For example, if your Zendesk URL is <code>https://example.zendesk.com/agent/dashboard</code>, the subdomain will be <code>example</code>.</p>"},{"location":"workflow/integrations/credentials/zoho/","title":"Zoho","text":"<p>You can use these credentials to authenticate the following nodes with Zoho. - Zoho CRM</p>"},{"location":"workflow/integrations/credentials/zoho/#prerequisites","title":"Prerequisites","text":"<p>Create a Zoho account.</p>"},{"location":"workflow/integrations/credentials/zoho/#using-oauth","title":"Using OAuth","text":"<p>\u26c5\ufe0f Note fordoc2app.cloudintegration.eu users</p> <p>You'll only need to enter the Credentials Name and click on the circle button in the OAuth section to connect your Zoho account to Workflow\u00b2.</p> <ol> <li>Access your Zoho Developer Console.</li> <li>Click on the 'GET STARTED' button.</li> <li>Click on the 'Server-based Applications' box.</li> <li>Copy the 'OAuth Callback URL' provided in the Zoho OAuth2 API credentials in Doc\u00b2 and paste it in the Authorized Redirect URIs field in the Zoho API Console app creation page.</li> <li>Fill in any other necessary information and click on the 'CREATE' button.</li> <li>Use the 'Client ID' and the 'Client Secret' displayed with your Zoho OAuth2 API credentials in Workflow\u00b2.</li> <li>Click on the circle button in the OAuth section to connect a Zoho CRM account to Workflow\u00b2.</li> <li>Click the Save button to save your credentials.</li> </ol> <p></p>"},{"location":"workflow/integrations/credentials/zoom/","title":"Zoom","text":"<p>You can use these credentials to authenticate the following nodes with Zoom. - Zoom</p>"},{"location":"workflow/integrations/credentials/zoom/#prerequisites","title":"Prerequisites","text":"<p>Create a Zoom account.</p>"},{"location":"workflow/integrations/credentials/zoom/#using-oauth","title":"Using OAuth","text":"<ol> <li>Visit the Zoom App Marketplace and select the 'Build App' option in the Develop dropdown on the top-right corner.</li> <li>Create a new OAuth app.</li> <li>Select 'User-managed app'.</li> <li>Set the \"Would you like to publish this app on Zoom App Marketplace?\" slider to off.</li> <li>Click on the Create button.</li> <li>Copy the 'OAuth Callback URL' provided in the Zoom OAuth2 API credentials in Doc\u00b2 and paste it in the 'Redirect URL for OAuth' section in the Zoom app creation page.</li> <li>Copy the Whitelist URL' provided in the Zoom OAuth2 API credentials in Doc\u00b2 and paste it in the 'Redirect URL for OAuth' section in the Zoom app creation page.</li> <li>Copy the Client ID and Client Secret provided in the Zoom app creation page and paste it in the Zoom OAuth2 API credentials in Workflow\u00b2.</li> <li>Enter any necessary information and click continue.</li> <li>In the 'Scopes' section, click Add Scopes and choose the scopes that you plan to use.</li> <li>Click on the circle button in the OAuth section to connect your Zoom account to Workflow\u00b2.</li> <li>Click the Save button to save your credentials.</li> </ol>"},{"location":"workflow/integrations/credentials/zoom/#using-access-token","title":"Using Access Token","text":"<ol> <li>Visit the Zoom App Marketplace and select the 'Build App' option in the Develop dropdown on the top-right corner.</li> <li>Create a new JWT app and enter any necessary information.</li> <li>Go to the 'App Credentials' tab.</li> <li>Click on View JWT Token and copy the given token. </li> <li>Go to the 'Activation' tab and click on the Activate your app button.</li> <li>Use the JWT token you copied with your Zoom API credentials in Workflow\u00b2.</li> </ol>"},{"location":"workflow/integrations/credentials/zulip/","title":"Zulip","text":"<p>You can use these credentials to authenticate the following nodes with Zulip. - Zulip</p>"},{"location":"workflow/integrations/credentials/zulip/#prerequisites","title":"Prerequisites","text":"<p>Create a Zulip account.</p>"},{"location":"workflow/integrations/credentials/zulip/#using-access-token","title":"Using Access Token","text":"<ol> <li>Access your Zulip dashboard.</li> <li>Click on the gear icon on the top right.</li> <li>Click on Settings.</li> <li>Click on the Show/change your API key button under the API Key section.</li> <li>Use your Email, URL, and API Key in your Zulip credentials.</li> </ol>"},{"location":"workflow/integrations/nodes/","title":"Overview","text":"","tags":["Workflow","nodes"]},{"location":"workflow/integrations/nodes/#this-section-provides-information-about-a-variety-of-n8ns-nodes","title":"This section provides information about a variety of n8n's nodes.","text":"<ul> <li>Brandfetch</li> <li>Action Network</li> <li>ActiveCampaign</li> <li>Affinity</li> <li>Agile CRM</li> <li>Airtable</li> <li>AMQP Sender</li> <li>APITemplate.io</li> <li>Asana</li> <li>Automizy</li> <li>Autopilot</li> <li>AWS Comprehend</li> <li>AWS DynamoDB</li> <li>AWS Lambda</li> <li>AWS Rekognition</li> <li>AWS S3</li> <li>AWS SES</li> <li>AWS SNS</li> <li>AWS SQS</li> <li>AWS Textract</li> <li>AWS Transcribe</li> <li>BambooHR</li> <li>Bannerbear</li> <li>Baserow</li> <li>Beeminder</li> <li>Bitly</li> <li>Bitwarden</li> <li>Box</li> <li>Bubble</li> <li>Chargebee</li> <li>CircleCI</li> <li>Webex by Cisco</li> <li>Clearbit</li> <li>ClickUp</li> <li>Clockify</li> <li>Cockpit</li> <li>Coda</li> <li>CoinGecko</li> <li>Contentful</li> <li>ConvertKit</li> <li>Copper</li> <li>Cortex</li> <li>CrateDB</li> <li>Customer.io</li> <li>DeepL</li> <li>Demio</li> <li>DHL</li> <li>Discord</li> <li>Discourse</li> <li>Disqus</li> <li>Drift</li> <li>Dropbox</li> <li>Dropcontact</li> <li>E-goi</li> <li>Elastic Security</li> <li>Elasticsearch</li> <li>Emelia</li> <li>ERPNext</li> <li>Facebook Graph API</li> <li>FileMaker</li> <li>Flow</li> <li>Freshdesk</li> <li>Freshservice</li> <li>Freshworks CRM</li> <li>G Suite Admin</li> <li>GetResponse</li> <li>Ghost</li> <li>GitHub</li> <li>GitLab</li> <li>Gmail</li> <li>GoToWebinar</li> <li>Google Analytics</li> <li>Google BigQuery</li> <li>Google Books</li> <li>Google Calendar</li> <li>Google Chat</li> <li>Google Cloud Firestore</li> <li>Google Cloud Natural Language</li> <li>Google Cloud Realtime Database</li> <li>Google Contacts</li> <li>Google Docs</li> <li>Google Drive</li> <li>Google Perspective</li> <li>Google Sheets</li> <li>Google Slides</li> <li>Google Tasks</li> <li>Google Translate</li> <li>Gotify</li> <li>Grafana</li> <li>Grist</li> <li>Hacker News</li> <li>HaloPSA</li> <li>Harvest</li> <li>Help Scout</li> <li>Home Assistant</li> <li>HubSpot</li> <li>Humantic AI</li> <li>Hunter</li> <li>Intercom</li> <li>Invoice Ninja</li> <li>Iterable</li> <li>Jenkins</li> <li>Jira</li> <li>Kafka</li> <li>Keap</li> <li>Kitemaker</li> <li>KoBo Toolbox</li> <li>Lemlist</li> <li>Line</li> <li>Linear</li> <li>LingvaNex</li> <li>LinkedIn</li> <li>Magento 2</li> <li>Mailcheck</li> <li>Mailchimp</li> <li>MailerLite</li> <li>Mailgun</li> <li>Mailjet</li> <li>Mandrill</li> <li>Marketstack</li> <li>Matrix</li> <li>Mattermost</li> <li>Mautic</li> <li>Medium</li> <li>MessageBird</li> <li>Microsoft Dynamics CRM</li> <li>Microsoft Excel</li> <li>Microsoft Graph Security</li> <li>Microsoft OneDrive</li> <li>Microsoft Outlook</li> <li>Microsoft SQL</li> <li>Microsoft Teams</li> <li>Microsoft To Do</li> <li>Mindee</li> <li>MISP</li> <li>Mocean</li> <li>monday.com</li> <li>MongoDB</li> <li>Monica CRM</li> <li>MQTT</li> <li>MSG91</li> <li>MySQL</li> <li>NASA</li> <li>Netlify</li> <li>Nextcloud</li> <li>NocoDB</li> <li>Notion</li> <li>Odoo</li> <li>One Simple API</li> <li>Onfleet</li> <li>OpenThesaurus</li> <li>OpenWeatherMap</li> <li>Orbit</li> <li>Oura</li> <li>Paddle</li> <li>PagerDuty</li> <li>PayPal</li> <li>Peekalink</li> <li>Phantombuster</li> <li>Philips Hue</li> <li>Pipedrive</li> <li>Plivo</li> <li>PostHog</li> <li>Postgres</li> <li>ProfitWell</li> <li>Pushbullet</li> <li>Pushcut</li> <li>Pushover</li> <li>QuestDB</li> <li>Quick Base</li> <li>QuickBooks</li> <li>RabbitMQ</li> <li>Raindrop</li> <li>Reddit</li> <li>Redis</li> <li>Rocket.Chat</li> <li>Rundeck</li> <li>S3</li> <li>Salesforce</li> <li>Salesmate</li> <li>SeaTable</li> <li>SecurityScorecard</li> <li>Segment</li> <li>SendGrid</li> <li>Sendy</li> <li>Sentry.io</li> <li>ServiceNow</li> <li>Shopify</li> <li>SIGNL4</li> <li>Slack</li> <li>sms77</li> <li>Snowflake</li> <li>Splunk</li> <li>Spontit</li> <li>Spotify</li> <li>Stackby</li> <li>Stackby</li> <li>Storyblok</li> <li>Storyblok</li> <li>Strapi</li> <li>Strava</li> <li>Stripe</li> <li>SugarCRM</li> <li>Supabase</li> <li>SyncroMSP</li> <li>Taiga</li> <li>Tapfiliate</li> <li>Telegram</li> <li>TheHive</li> <li>TimescaleDB</li> <li>Todoist</li> <li>Travis CI</li> <li>Trello</li> <li>Twake</li> <li>Twilio</li> <li>Twist</li> <li>Twitter</li> <li>Unleashed Software</li> <li>UpLead</li> <li>uProc</li> <li>UptimeRobot</li> <li>urlscan.io</li> <li>Vero</li> <li>Vonage</li> <li>Webflow</li> <li>Wekan</li> <li>Wise</li> <li>WooCommerce</li> <li>WordPress</li> <li>Customer Datastore (n8n Training)</li> <li>Customer Messenger (n8n Training)</li> <li>Xero</li> <li>YouTube</li> <li>Yourls</li> <li>Zammad</li> <li>Zendesk</li> <li>Zoho CRM</li> <li>Zoom</li> <li>Zulip</li> </ul>","tags":["Workflow","nodes"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.Brandfetch/","title":"Brandfetch","text":"<p>Brandfetch is a brand search engine that helps you find logos, colors, fonts, images, and more.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.Brandfetch/#basic-operations","title":"Basic Operations","text":"<ul> <li>Return a company's colors</li> <li>Return a company's data</li> <li>Return a company's fonts</li> <li>Return a company's industry</li> <li>Return a company's logo &amp; icon</li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.Brandfetch/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to get the logo, icon, and information of a company and store it in Airtable. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Start - Brandfetch - Set - Airtable</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.Brandfetch/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.Brandfetch/#2-brandfetch-node-logo","title":"2. Brandfetch node (logo)","text":"<p>This node will fetch the URL of the logo and icon of Workflow\u00b2. If you want the logo and icon of a different company, enter the domain name of that company instead.</p> <ol> <li>First of all, you'll have to enter credentials for the Brandfetch node. You can find out how to do that here.</li> <li>Enter <code>n8n.io</code> in the Domain field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node retrieves the URL of n8n's logo and icon.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.Brandfetch/#3-brandfetch1-node-company","title":"3. Brandfetch1 node (company)","text":"<p>This node will fetch company data about Workflow\u00b2.</p> <ol> <li>Select the credentials that you entered in the previous Brandfetch node.</li> <li>Select 'Company' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Domain field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Brandfetch &gt; Parameters &gt; domain. You can also add the following expression: <code>{{$node[\"Brandfetch\"].parameter[\"domain\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns company data about Workflow\u00b2.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.Brandfetch/#4-set-node","title":"4. Set node","text":"<p>We will use the Set node to ensure that only the data that we set in this node gets passed on to the next nodes in the workflow. We will set the value of <code>Name</code>, <code>Icon URL</code>, and <code>Logo URL</code>in this node.</p> <ol> <li>Click on the Add Value button and select 'String' from the dropdown list.</li> <li>Enter <code>Name</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Brandfetch1 &gt; Output Data &gt; JSON &gt; name. You can also add the following expression: <code>{{$node[\"Brandfetch1\"].json[\"name\"]}}</code>.</li> <li>Click on the Add Value button and select 'String' from the dropdown list.</li> <li>Enter <code>Icon URL</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Brandfetch &gt; Output Data &gt; JSON &gt; icon &gt; image. You can also add the following expression: <code>{{$node[\"Brandfetch\"].json[\"icon\"][\"image\"]}}</code>.</li> <li>Click on the Add Value button and select 'String' from the dropdown list.</li> <li>Enter <code>Logo URL</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Brandfetch &gt; Output Data &gt; JSON &gt; logo &gt; image. You can also add the following expression: <code>{{$node[\"Brandfetch\"].json[\"logo\"][\"image\"]}}</code>.</li> <li>Toggle Keep Only Set to <code>true</code>. We set this option to true to ensure that only the data that we have set in this node get passed on to the next nodes in the workflow.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node sets the value of <code>Name</code>, <code>Icon URL</code>, and <code>Logo URL</code>. This value is passed to the next node in the workflow.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.Brandfetch/#5-airtable-node-append","title":"5. Airtable node (Append)","text":"<p>This node will append the data that we set in the previous node to a table. Create a table like this in your Airtable base.</p> <ol> <li>First of all, you'll have to enter credentials for the Airtable node. You can find out how to do that here.</li> <li>Select 'Append' from the Operation dropdown list.</li> <li>Enter the Base ID in the Base ID field. For obtaining the Base ID, head over to their API page and select the correct base. You\u2019ll find the Base ID there.</li> <li>Enter the name of your table in the Table field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node appends the data that we had set in the previous node.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.TrainingCustomerDatastore/","title":"Customer Datastore (workflow Training)","text":"<p>This node is used exclusively for the Doc\u00b2 new user onboarding tutorial. It provides dummy data for testing purposes and has no further functionality.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.TrainingCustomerMessenger/","title":"Customer Messenger (workflow Training)","text":"<p>This node is used exclusively for the Doc\u00b2 new user onboarding tutorial. It provides no further functionality.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.actionNetwork/","title":"Action Network","text":"<p>Action Network is an open platform that empowers individuals and groups to organize for progressive causes.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","tags":["Workflow\u00b2","Action Network"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.actionNetwork/#basic-operations","title":"Basic operations","text":"<ul> <li>Attendance<ul> <li>Create</li> <li>Get</li> <li>Get All</li> </ul> </li> <li>Event<ul> <li>Create</li> <li>Get</li> <li>Get All</li> </ul> </li> <li>Person<ul> <li>Create</li> <li>Get</li> <li>Get All</li> <li>Update</li> </ul> </li> <li>Person Tag<ul> <li>Add</li> <li>Remove</li> </ul> </li> <li>Petition<ul> <li>Create</li> <li>Get</li> <li>Get All</li> <li>Update</li> </ul> </li> <li>Signature<ul> <li>Create</li> <li>Get</li> <li>Get All</li> <li>Update</li> </ul> </li> <li>Tag<ul> <li>Create</li> <li>Get</li> <li>Get All</li> </ul> </li> </ul>","tags":["Workflow\u00b2","Action Network"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.actionNetwork/#example","title":"Example","text":"<p>This workflow allows you to create a new event in Action Network, then create a new person and mark them as having attended your event. This workflow uses the following two nodes. - Start - ActiveCampaign</p> <p>The final workflow should look like the following image.</p> <p></p>","tags":["Workflow\u00b2","Action Network"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.actionNetwork/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>","tags":["Workflow\u00b2","Action Network"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.actionNetwork/#2-action-network-node","title":"2. Action Network node","text":"<ol> <li>First enter your credentials. You can find out how to do that here.</li> <li>Fill in the remaining parameters as follows:<ul> <li>Resource: Select Event from the dropdown list.</li> <li>Operation: Select Create from the dropdown list.</li> <li>Origin System: Enter where this event originated. Workflow\u00b2.io in our example.</li> <li>Title: Enter the name of your event, July Meetup in our example here.</li> </ul> </li> <li>Enable the Simple toggle to return an easier to view response as opposed to the complete raw data.</li> <li>Use the Additional Fields to enter any further details about your event. Here we provided the Start Date.</li> </ol>","tags":["Workflow\u00b2","Action Network"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.actionNetwork/#3-action-network1-node","title":"3. Action Network1 node","text":"<ol> <li>First enter your credentials. You can find out how to do that here.</li> <li>Fill in the remaining parameters as follows:<ul> <li>Resource: Select Person from the dropdown list.</li> <li>Operation: Select Create from the dropdown list.</li> </ul> </li> <li>Enable the Simple toggle to return an easier to view response as opposed to the complete raw data.</li> <li>In the Email Address section, enter the address and status for this person (here we Subscribe them).</li> <li>Use the Additional Fields to enter any further details about this person. Here we provided their given name.</li> </ol>","tags":["Workflow\u00b2","Action Network"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.actionNetwork/#4-action-network2-node","title":"4. Action Network2 node","text":"<ol> <li>First enter your credentials. You can find out how to do that here.</li> <li>Fill in the remaining parameters as follows:<ul> <li>Resource: Select Attendance from the dropdown list.</li> <li>Operation: Select Create from the dropdown list.</li> <li>Person ID: Enter the ID for the person created by the previous node.</li> <li>Event ID: Enter the ID for the event created in the first node.</li> </ul> </li> <li>Enable the Simple toggle to return an easier to view response as opposed to the complete raw data.</li> </ol>","tags":["Workflow\u00b2","Action Network"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.activeCampaign/","title":"ActiveCampaign","text":"<p>ActiveCampaign is a cloud software platform for small-to-mid-sized business. The company offers software for customer experience automation, which combines the email marketing, marketing automation, sales automation, and CRM categories.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.activeCampaign/#basic-operations","title":"Basic Operations","text":"<ul> <li>Account<ul> <li>Create an account</li> <li>Delete an account</li> <li>Get data of an account</li> <li>Get data of all accounts</li> <li>Update an account</li> </ul> </li> <li>Account Contact<ul> <li>Create an association</li> <li>Delete an association</li> <li>Update an association</li> </ul> </li> <li>Contact<ul> <li>Create a contact</li> <li>Delete a contact</li> <li>Get data of a contact</li> <li>Get data of all contact</li> <li>Update a contact</li> </ul> </li> <li>Contact List<ul> <li>Add contact to a list</li> <li>Remove contact from a list</li> </ul> </li> <li>Contact Tag<ul> <li>Add a tag to a contact</li> <li>Remove a tag from a contact</li> </ul> </li> <li>Connection<ul> <li>Create a connection</li> <li>Delete a connection</li> <li>Get data of a connection</li> <li>Get data of all connections</li> <li>Update a connection</li> </ul> </li> <li>Deal<ul> <li>Create a deal</li> <li>Delete a deal</li> <li>Get data of a deal</li> <li>Get data of all deals</li> <li>Update a deal</li> <li>Create a deal note</li> <li>Update a deal note</li> </ul> </li> <li>E-commerce Order<ul> <li>Create a order</li> <li>Delete a order</li> <li>Get data of a order</li> <li>Get data of all orders</li> <li>Update a order</li> </ul> </li> <li>E-Commerce Customer<ul> <li>Create a E-commerce Customer</li> <li>Delete a E-commerce Customer</li> <li>Get data of a E-commerce Customer</li> <li>Get data of all E-commerce Customer</li> <li>Update a E-commerce Customer</li> </ul> </li> <li>E-commerce Order Products<ul> <li>Get data of all order products</li> <li>Get data of a ordered product</li> <li>Get data of an order's products</li> </ul> </li> <li>List<ul> <li>Get all lists</li> </ul> </li> <li>Tag<ul> <li>Create a tag</li> <li>Delete a tag</li> <li>Get data of a tag</li> <li>Get data of all tags</li> <li>Update a tag</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.activeCampaign/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to create a contact in ActiveCampaign. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - ActiveCampaign</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.activeCampaign/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.activeCampaign/#2-activecampaign-node","title":"2. ActiveCampaign node","text":"<ol> <li>First of all, you'll have to enter credentials for the ActiveCampaign node. You can find out how to do that here.</li> <li>Enter the email of the contact in the Email field.</li> <li>Toggle the Update if exists option to yes.</li> <li>Under the Additional Fields section, click on the Add Field button and select First Name.</li> <li>Enter the first name of the contact in the First Name field.</li> <li>Click on Add Field again and select Last Name.</li> <li>Enter the last name of the contact in the Last name field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.affinity/","title":"Affinity","text":"<p>Affinity is a powerful relationship intelligence platform enabling teams to leverage their network to close the next big deal.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.affinity/#basic-operations","title":"Basic Operations","text":"<ul> <li>List<ul> <li>Get a list</li> <li>Get all lists</li> </ul> </li> <li>List Entry<ul> <li>Create a list entry</li> <li>Delete a list entry</li> <li>Get a list entry</li> <li>Get all list entries</li> </ul> </li> <li>Organization<ul> <li>Create an organization</li> <li>Delete an organization</li> <li>Get an organization</li> <li>Get all organizations</li> <li>Update an organization</li> </ul> </li> <li>Person<ul> <li>Create a person</li> <li>Delete a person</li> <li>Get a person</li> <li>Get all persons</li> <li>Update a person</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.affinity/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to create an organization in Affinity. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - Affinity</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.affinity/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.affinity/#2-affinity-node","title":"2. Affinity node","text":"<ol> <li>First of all, you'll have to enter credentials for the Affinity node. You can find out how to do that here.</li> <li>Enter the name of the organization in the Name field.</li> <li>Enter the domain name of the organization in the Domain field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.agileCrm/","title":"Agile CRM","text":"<p>Agile CRM is a CRM with Sales, Marketing and Service automation in single platform. It has sales tracking, contact management, marketing automation, web analytics, two-way emails, telephony, and a helpdesk.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.agileCrm/#basic-operations","title":"Basic Operations","text":"<ul> <li>Company<ul> <li>Create a new company</li> <li>Delete a company</li> <li>Get a company</li> <li>Get all companies</li> <li>Update company properties</li> </ul> </li> <li>Contact<ul> <li>Create a new contact</li> <li>Delete a contact</li> <li>Get a contact</li> <li>Get all contacts</li> <li>Update contact properties</li> </ul> </li> <li>Deal<ul> <li>Create a new deal</li> <li>Delete a deal</li> <li>Get a deal</li> <li>Get all deals</li> <li>Update deal properties</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.agileCrm/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to create a new contact in Agile CRM. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - Agile CRM</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.agileCrm/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.agileCrm/#2-agile-crm-node","title":"2. Agile CRM node","text":"<ol> <li>First of all, you'll have to enter credentials for the Agile CRM node. You can find out how to do that here.</li> <li>Select the 'Create' option from the Operation dropdown list.</li> <li>Under the Additional Fields section, click on the Add Field button and select First Name.</li> <li>Enter the first name of the contact in the First Name field.</li> <li>Click on Add Field again and select Last Name.</li> <li>Enter the last name of the contact in the Last name field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.airtable/","title":"Airtable","text":"<p>Airtable is a spreadsheet-database hybrid, with the features of a database but applied to a spreadsheet. The fields in an Airtable table are similar to cells in a spreadsheet, but have types such as 'checkbox', 'phone number', and 'drop-down list', and can reference file attachments like images.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.airtable/#basic-operations","title":"Basic Operations","text":"<ul> <li>Append the data to a table</li> <li>Delete data from a table</li> <li>List data from a table</li> <li>Read data from a table</li> <li>Update data in a table</li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.airtable/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to insert and update data from a table in Airtable. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Start - Set - Airtable</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.airtable/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.airtable/#2-set-node","title":"2. Set node","text":"<p>We will use the Set node to set the values for the name and id fields for a new record.</p> <ol> <li>Click on the Add Value button and select 'Number' from the dropdown list.</li> <li>Enter <code>ID</code> in the Name field.</li> <li>Enter an id in the Value field.</li> <li>Click on the Add Value button and select 'String' from the dropdown list.</li> <li>Enter <code>Name</code> in the Name field.</li> <li>Enter a name in the Value field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node sets the value for <code>ID</code> and <code>Name</code>.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.airtable/#3-airtable-node-append","title":"3. Airtable node (Append)","text":"<p>This node will append the data that we set in the previous node to a table. Create a table like this in your Airtable base.</p> <ol> <li>First of all, you'll have to enter credentials for the Airtable node. You can find out how to do that here.</li> <li>Select 'Append' from the Operation dropdown list.</li> <li>Enter the Base ID in the Base ID field. For obtaining the Base ID, head over to their API page and select the correct base. You\u2019ll find the Base ID there.</li> <li>Enter the name of your table in the Table field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node appends the data that we had set in the previous node.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.airtable/#4-airtable1-node-list","title":"4. Airtable1 node (List)","text":"<p>This node will list all the records with the name <code>n8n</code>. If you want to list records with a different name, use that name instead.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select the 'List' option from the Operation dropdown list.</li> <li>Click on the gears icon next to the Base ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Airtable &gt; Parameters &gt; application. You can also add the following expression: <code>{{$node[\"Airtable\"].parameter[\"application\"]}}</code>.</li> <li>Click on the gears icon next to the Table field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Airtable &gt; Parameters &gt; table. You can also add the following expression: <code>{{$node[\"Airtable\"].parameter[\"table\"]}}</code>.</li> <li>Click on Add Option and select 'Filter By Formula' from the dropdown list.</li> <li>Enter <code>Name='n8n'</code> in the Filter By Formula field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node only returns the record with the name <code>n8n</code>.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.airtable/#5-set1-node","title":"5. Set1 node","text":"<p>We will use the Set node to ensure that only the data that we set in this node gets passed on to the next nodes in the workflow. We will set the value of <code>Name</code> in this node.</p> <ol> <li>Click on the Add Value button and select 'String' from the dropdown list.</li> <li>Enter <code>Name</code> in the Name field.</li> <li>Enter <code>nodemation</code> in the Value field.</li> <li>Toggle Keep Only Set to <code>true</code>. We set this option to true to ensure that only the data that we have set in this node get passed on to the next nodes in the workflow.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node sets the value of <code>Name</code>. This value is passed to the next node in the workflow.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.airtable/#6-airtable2-node-update","title":"6. Airtable2 node (Update)","text":"<p>This node will update the Name field of the record that we received from the previous Airtable node.</p> <ol> <li>Select the credentials that you entered in the previous Airtable node.</li> <li>Select 'Update' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Base ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Airtable &gt; Parameters &gt; application. You can also add the following expression: <code>{{$node[\"Airtable\"].parameter[\"application\"]}}</code>.</li> <li>Click on the gears icon next to the Table field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Airtable &gt; Parameters &gt; table. You can also add the following expression: <code>{{$node[\"Airtable\"].parameter[\"table\"]}}</code>.</li> <li>Click on the gears icon next to the Id field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Airtable1 &gt; Output Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$node[\"Airtable1\"].json[\"id\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node updates the Name field.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.airtable/#faqs","title":"FAQs","text":""},{"location":"workflow/integrations/nodes/workflow-nodes-base.airtable/#how-to-get-the-record-id","title":"How to get the Record ID?","text":"<p>To fetch data for a particular record, you need the Record ID. There are two ways to get the Record ID.</p> <p>Create a Record ID column in Airtable</p> <p>To create a <code>Record ID</code> column in your table, refer to this article. You can then use this Record ID in your Airtable node.</p> <p>Use the List operation</p> <p>To get the Record ID of your record, you can use the List operation of the Airtable node. This operation will return the Record ID along with the fields. You can then use this Record ID in your Airtable node.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.airtable/#how-to-filter-records-when-using-the-list-operation","title":"How to filter records when using the List operation?","text":"<p>To filter records from your Airtable base, use the Filter By Formula option. For example, if you want to return all the users that belong to the organization <code>n8n</code>, follow the steps mentioned below: 1. Select 'List' from the Operation dropdown list. 2. Enter the base ID and the table name in the Base ID and Table field, respectively. 3. Click on Add Option and select 'Filter By Formula' from the dropdown list. 4. Enter the following formula in the Filter By Formula field: <code>{Organization}='n8n'</code>.</p> <p>Similarly, if you want to return all the users that do not belong to the organization <code>n8n</code>, use the following formula: <code>NOT({Organization}='n8n')</code>.</p> <p>Refer to the Airtable documentation to learn more about the formulas.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.amqp/","title":"AMQP Sender","text":"<p>AMQP is an open standard application layer protocol for message-oriented middleware. The defining features of AMQP are message orientation, queuing, routing, reliability and security. This node supports AMQP 1.0 compatible message brokers.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.amqp/#basic-operations","title":"Basic Operations","text":"<ul> <li>Send message</li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.amqp/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to send updates about the position of the ISS every minute to an ActiveMQ queue using the AMQP Sender node. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Cron - HTTP Request - Set - AMQP Sender</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.amqp/#1-cron-node","title":"1. Cron node","text":"<p>The Cron node will trigger the workflow every minute.</p> <ol> <li>Click on Add Cron Time.</li> <li>Select 'Every Minute' from the Mode dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the Cron node is configured to trigger the workflow every minute.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.amqp/#2-http-request-node-get","title":"2. HTTP Request node (GET)","text":"<p>This node will make a GET request to the API <code>https://api.wheretheiss.at/v1/satellites/25544/positions</code> to fetch the position of the ISS. This information gets passed on to the next node in the workflow.</p> <ol> <li>Enter <code>https://api.wheretheiss.at/v1/satellites/25544/positions</code> in the URL field.</li> <li>Click on the Add Parameter button in the Query Parameters section.</li> <li>Enter <code>timestamps</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Enter the following expression: <code>{{Date.now()}}</code>. This expression will return the current timestamp.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node makes a GET request to the API and returns the information about the location of the ISS.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.amqp/#3-set-node","title":"3. Set node","text":"<p>We will use the Set node to ensure that only the data that we set in this node gets passed on to the next nodes in the workflow.</p> <ol> <li>Click on Add Value and select 'String' from the dropdown list.</li> <li>Enter <code>Name</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; HTTP Request &gt; Output Data &gt; JSON &gt; 0 &gt; name. You can also add the following expression: <code>{{$node[\"HTTP Request\"].json[\"0\"][\"name\"]}}</code>.</li> <li>Click on Add Value and select 'String' from the dropdown list.</li> <li>Enter <code>Latitude</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; HTTP Request &gt; Output Data &gt; JSON &gt; 0 &gt; latitude. You can also add the following expression: <code>{{$node[\"HTTP Request\"].json[\"0\"][\"latitude\"]}}</code>.</li> <li>Click on Add Value and select 'String' from the dropdown list.</li> <li>Enter <code>Longitude</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; HTTP Request &gt; Output Data &gt; JSON &gt; 0 &gt; longitude. You can also add the following expression: <code>{{$node[\"HTTP Request\"].json[\"0\"][\"longitude\"]}}</code>.</li> <li>Click on Add Value and select 'String' from the dropdown list.</li> <li>Enter <code>Timestamp</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; HTTP Request &gt; Output Data &gt; JSON &gt; 0 &gt; timpestamp. You can also add the following expression: <code>{{$node[\"HTTP Request\"].json[\"0\"][\"timestamp\"]}}</code>.</li> <li>Toggle Keep Only Set to <code>true</code>. We set this option to true to ensure that only the data that we have set in this node get passed on to the next nodes in the workflow.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node uses the data from the previous node and returns the data that we set for the workflow.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.amqp/#4-amqp-sender-node","title":"4. AMQP Sender node","text":"<p>This node will send the data from the previous node to the <code>iss-position</code> queue in ActiveMQ. If you have created a queue with a different name in ActiveMQ, you can use that queue instead.</p> <ol> <li>First of all, you'll have to enter credentials for the AMQP Sender node. You can find out how to do that here.</li> <li>Enter the name of the queue or topic in the Queue / Topic field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node sends the data from the previous node to the <code>iss-position</code> queue in ActiveMQ.</p> <p></p> <p> Activate workflow for production</p> <p>This example workflow uses the Cron node, which is a Trigger node. You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Cron node.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.apiTemplateIo/","title":"APITemplate.io","text":"<p>APITemplate.io allows you to auto-generate images and PDF documents.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.apiTemplateIo/#basic-operations","title":"Basic Operations","text":"<ul> <li>Account</li> <li>Get</li> <li>Image</li> <li>Create</li> <li>PDF</li> <li>Create</li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.apiTemplateIo/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to create an invoice with the information received via a Typeform submission. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Typeform Trigger - APITemplate.io</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.apiTemplateIo/#1-typeform-trigger-node","title":"1. Typeform Trigger node","text":"<p>This node will trigger the workflow when a form is submitted. Make sure to create a form that collects the following information:</p> <ul> <li>Bill To (Short Text)</li> <li>Client's Email Address (Email)</li> <li>Item Description (Short Text)</li> <li>Item Price (Number)</li> <li>Item Description (Short Text)</li> <li> <p>Item Price (Number)</p> </li> <li> <p>Select 'Access Token' from the Authentication dropdown list.</p> </li> <li>Enter the credentials for the Typeform Trigger node. You can find out how to do that here.</li> <li>Select the invoice form from the Form dropdown list.</li> <li>Toggle Simplify Answers to <code>false</code>. By setting this option to false, the node returns the values for the fields with duplicate names.</li> <li>Click on Execute Node to run the node.</li> </ul> <p>In the screenshot below, you will notice that the node triggers the workflow when the form is submitted. We will pass this information to the next nodes in the workflow.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.apiTemplateIo/#2-apitemplateio-node-create-pdf","title":"2. APITemplate.io node (create: pdf)","text":"<p>This node will generate an invoice using the information from the previous node. Create an invoice template in APITemplate.io, if you don't already have one.</p> <ol> <li>First of all, you'll have to enter credentials for the APITemplate.io node. You can find out how to do that here.</li> <li>Select 'PDF' from the Resource dropdown list.</li> <li>Select your invoice template from the Template ID dropdown list.</li> <li>Toggle JSON Parameters to <code>true</code>. By setting this option to true, the node allows us to write custom JSON data.</li> <li>Toggle Download to <code>true</code>.</li> <li>Click on the gears icon next to the Properties (JSON) field.</li> <li>Enter the following expression in the Edit Expression field: <pre><code>{\n\"company\": \"n8n\",\n\"email\": \"{{$json[\"1\"][\"email\"]}}\",\n\"invoice_no\": \"213223444\",\n\"invoice_date\": \"18-03-2021\",\n\"invoice_due_date\": \"17-04-2021\",\n\"address\": \"Berlin, Germany\",\n\"company_bill_to\": \"{{$json[\"0\"][\"text\"]}}\",\n\"website\": \"https://n8n.io\",\n\"document_id\": \"889856789012\",\n\"items\": [\n{\n\"item_name\": \"{{$json[\"2\"][\"text\"]}}\",\n\"price\": \"EUR {{$json[\"3\"][\"number\"]}}\"\n},\n{\n\"item_name\": \"{{$json[\"4\"][\"text\"]}}\",\n\"price\": \"EUR {{$json[\"5\"][\"number\"]}}\"\n}\n]\n}\n</code></pre></li> <li>Click on the Add Field button.</li> <li>Enter a file name in the File Name field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node creates an invoice using the data from the previous node.</p> <p></p> <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Typeform Trigger node.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.asana/","title":"Asana","text":"<p>Asana is a web and mobile application designed to help teams organize, track, and manage their work.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.asana/#basic-operations","title":"Basic Operations","text":"<ul> <li>Project<ul> <li>Create a new project</li> <li>Delete a project</li> <li>Get a project</li> <li>Get all projects</li> <li>Update a project</li> </ul> </li> <li>Subtask<ul> <li>Create a subtask</li> <li>Get all substasks</li> </ul> </li> <li>Task<ul> <li>Create a task</li> <li>Delete a task</li> <li>Get a task</li> <li>Get all tasks</li> <li>Move a task</li> <li>Search for tasks</li> <li>Update a task</li> </ul> </li> <li>Task Comment<ul> <li>Add a comment to a task</li> <li>Remove a comment from a task</li> </ul> </li> <li>Task Tag<ul> <li>Add a tag to a task</li> <li>Remove a tag from a task</li> </ul> </li> <li>Task Project<ul> <li>Add a task to a project</li> <li>Remove a task from a project</li> </ul> </li> <li>User<ul> <li>Get a user</li> <li>Get all users</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.asana/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to create a new task in Asana. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - Asana</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.asana/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.asana/#2-asana-node","title":"2. Asana node","text":"<ol> <li>First of all, you'll have to enter credentials for the Asana node. You can find out how to do that here.</li> <li>Select your workspace from the Workspace dropdown list.</li> <li>Enter the name of the task in the Name field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.automizy/","title":"Automizy","text":"<p>Automizy is an email marketing automation software that offers AI-powered Subject Line Tester, AB testing, and email automation.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.automizy/#basic-operations","title":"Basic Operations","text":"<ul> <li>Contact<ul> <li>Create a contact</li> <li>Delete a contact</li> <li>Get a contact</li> <li>Get all contacts</li> <li>Update a contact</li> </ul> </li> <li>List<ul> <li>Create a list</li> <li>Delete a list</li> <li>Get a list</li> <li>Get all lists</li> <li>Update a list</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.automizy/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to create a new list, add a new contact to that list, update the contact, and get all contacts in the list using the Automizy node. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Start - Automizy</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.automizy/#1-start-node","title":"1. Start node","text":"<p>The Start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.automizy/#2-automizy-node-create-list","title":"2. Automizy node (create: list)","text":"<p>This node will create a new list called <code>n8n-docs</code> in Automizy.</p> <ol> <li>First of all, you'll have to enter credentials for the Automizy node. You can find out how to do that here.</li> <li>Select 'List' from the Resource dropdown list.</li> <li>Enter <code>n8n-docs</code> in the Name field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node creates a new list with the name <code>n8n-docs</code>.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.automizy/#3-automizy1-node-create-contact","title":"3. Automizy1 node (create: contact)","text":"<p>This node creates a new contact and adds it to the list created in the previous node.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Enter the email address of the contact you want to add to the list in the Email field.</li> <li>Click on the gears icon next to the List ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Automizy &gt; Output Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$node[\"Automizy\"].json[\"id\"]}}</code>.</li> <li>Click on Add Field and select 'Status' from the dropdown list.</li> <li>Select 'Active' from the Status dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node creates a new contact with the email address <code>example@n8n.io</code> and status <code>Active</code> and adds it to the list <code>n8n-docs</code> created in the previous node.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.automizy/#4-automizy2-node-update-contact","title":"4. Automizy2 node (update: contact)","text":"<p>This node updates the contact that we created in the previous node by adding the tag <code>reviewer</code> to it. Make sure that you create a tag in Automizy.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Update' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Email field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Automizy1 &gt; Output Data &gt; JSON &gt; email. You can also add the following expression: <code>{{$node[\"Automizy1\"].json[\"email\"]}}</code>.</li> <li>Click on Add Field and select 'Tags' from the dropdown list.</li> <li>Select a tag from the Tags dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node updates the contact created in the previous node by adding the tag <code>reviewer</code> to it.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.automizy/#5-automizy3-node-getall-contact","title":"5. Automizy3 node (getAll: contact)","text":"<p>This node returns all the contacts of the <code>n8n-docs</code> list that we created using the Automizy node.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Get All' from the Operation dropdown list.</li> <li>Click on the gears icon next to the List ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Automizy &gt; Output Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$node[\"Automizy\"].json[\"id\"]}}</code>.</li> <li>Toggle Return All to true.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns all the contacts that are present in the list <code>n8n-docs</code>.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.autopilot/","title":"Autopilot","text":"<p>Autopilot is a visual marketing software that allows you to automate and personalize your marketing across the entire customer journey.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.autopilot/#basic-operations","title":"Basic Operations","text":"<ul> <li>Contact<ul> <li>Create/Update a contact</li> <li>Delete a contact</li> <li>Get a contact</li> <li>Get all contacts</li> </ul> </li> <li>Contact Journey<ul> <li>Add contact to list</li> </ul> </li> <li>Contact List<ul> <li>Add contact to list.</li> <li>Check if contact is on list.</li> <li>Get all contacts on list.</li> <li>Remove a contact from a list.</li> </ul> </li> <li>List<ul> <li>Create a list.</li> <li>Get all lists</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.autopilot/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to create a new list, add a new contact to that list, update the contact, and get all contacts in the list using the Autopilot node. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Start - Autopilot</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.autopilot/#1-start-node","title":"1. Start node","text":"<p>The Start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.autopilot/#2-autopilot-node-create-list","title":"2. Autopilot node (create: list)","text":"<p>This node will create a new list called <code>n8n-docs</code> in Autopilot.</p> <ol> <li>First of all, you'll have to enter credentials for the Autopilot node. You can find out how to do that here.</li> <li>Select 'List' from the Resource dropdown list.</li> <li>Enter <code>n8n-docs</code> in the Name field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node creates a new list with the name <code>n8n-docs</code>.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.autopilot/#3-autopilot1-node-upsert-contact","title":"3. Autopilot1 node (upsert: contact)","text":"<p>This node creates a new contact and adds it to the list created in the previous node.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Enter the email address of the contact you want to add to the list in the Email field.</li> <li>Click on Add Field and select 'List ID' from the dropdown list.</li> <li>Click on the gears icon next to the List ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; list_id. You can also add the following expression: <code>{{$json[\"list_id\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node creates a new contact with the email address <code>harshil@n8n.io</code> and adds it to the list <code>n8n-docs</code> created in the previous node.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.autopilot/#4-autopilot2-node-update-contact","title":"4. Autopilot2 node (update: contact)","text":"<p>This node updates the information of the contact that we created in the previous node.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Click on the gears icon next to the Email field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Autopilot1 &gt; Parameters &gt; email. You can also add the following expression: <code>{{$node[\"Autopilot1\"].parameter[\"email\"]}}</code>.</li> <li>Click on Add Field and select 'Company' from the dropdown list.</li> <li>Enter <code>n8n</code> in the Company field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node updates the contact created in the previous node by adding the tag <code>reviewer</code> to it.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.autopilot/#5-autopilot3-node-getall-contact","title":"5. Autopilot3 node (getAll: contact)","text":"<p>This node returns all the contacts of the <code>n8n-docs</code> list that we created using the Autopilot node.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Contact List' from the Resource dropdown list.</li> <li>Select 'Get All' from the Operation dropdown list.</li> <li>Click on the gears icon next to the List ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Autopilot &gt; Output Data &gt; JSON &gt; list_id. You can also add the following expression: <code>{{$node[\"Autopilot\"].json[\"list_id\"]}}</code>.</li> <li>Toggle Return All to true.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns all the contacts that are present in the list <code>n8n-docs</code>.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.awsComprehend/","title":"AWS Comprehend","text":"<p>AWS Comprehend is a natural language processing (NLP) service that uses machine learning to find insights and relationships in a text.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.awsComprehend/#basic-operations","title":"Basic Operations","text":"<p>Text</p> <ul> <li>Identify the dominant language</li> <li>Analyse the sentiment of the text</li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.awsComprehend/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to analyze the sentiment of feedback received via a Typeform submission and send a message on Mattermost if that feedback is negative. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Typeform Trigger - AWS Comprehend - IF - Mattermost - No Operation, do nothing</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.awsComprehend/#1-typeform-trigger-node","title":"1. Typeform Trigger node","text":"<p>This node will trigger the workflow when a feedback form is submitted. Make sure to create a feedback form for your event.</p> <ol> <li>Select 'Access Token' from the Authentication dropdown list.</li> <li>Enter the credentials for the Typeform Trigger node. You can find out how to do that here.</li> <li>Select the event feedback form from the Form dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node triggers the workflow when feedback is submitted. We will pass this feedback to the next nodes in the workflow.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.awsComprehend/#2-aws-comprehend-node-detectsentiment-text","title":"2. AWS Comprehend node (detectSentiment: text)","text":"<p>This node will analyze the sentiment of the feedback that we got from the previous node. We will pass the analysis score to the next node in the workflow.</p> <ol> <li>First of all, you'll have to enter credentials for the AWS Comprehend node. You can find out how to enter credentials for this node here.</li> <li>Select 'Detect Sentiment' from the Operation dropdown list.</li> <li> <p>Click on the gears icon next to the Text field and click on Add Expression.</p> </li> <li> <p>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; What did you think about the event? You can also add the following expression: <code>{{$json[\"What did you think about the event?\"]}}</code>. If you want to analyze the sentiment for a different question, select that question instead.</p> </li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node analyzes the sentiment of the feedback and gives a score based on that.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.awsComprehend/#3-if-node","title":"3. IF node","text":"<p>This node will check if the sentiment we got from the previous node is negative. If the sentiment is negative, it will return true otherwise false.</p> <ol> <li>Click on Add Condition and select 'String'.</li> <li>Click on the gears icon next to the Value 1 field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; Sentiment. You can also add the following expression: <code>{{$json[\"Sentiment\"]}}</code>.</li> <li>Enter <code>NEGATIVE</code> in the Value 2 field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node checks the sentiment that we received from the previous node and returns <code>true</code> if the sentiment is negative.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.awsComprehend/#4-mattermost-node-post-message","title":"4. Mattermost node (post: message)","text":"<p>This node will send the feedback and the analysis score to the <code>feedback</code> channel in Mattermost. If you have a different channel, use that instead.</p> <ol> <li>Create a Mattermost node connected to the 'true' output of the IF node.</li> <li>You'll have to enter credentials for the Mattermost node. You can find out how to enter credentials for this node here.</li> <li>Select a channel from the Channel ID dropdown list.</li> <li> <p>Click on the gears icon next to the Message field click on Add Expression.</p> </li> <li> <p>Enter the following message in the Expression field: <code>You got new feedback with a score of {{$json[\"SentimentScore\"][\"Negative\"]}}. Here is what it says:{{$node[\"Typeform Trigger\"].json[\"What did you think about the event?\"]}}</code>.</p> </li> <li>Click on Execute Node to run the workflow.</li> </ol> <p>In the screenshot below, you will notice that the node sends the feedback and the analysis score to the <code>feedback</code> channel in Mattermost.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.awsComprehend/#5-noop-node","title":"5. NoOp node","text":"<p>Adding this node here is optional, as the absence of this node won't make a difference to the functioning of the workflow.</p> <ol> <li>Create a NoOp node connected to the 'false' output of the IF node.</li> <li>Click on Execute Node to run the node.</li> </ol> <p></p> <p> Activate workflow for production</p> <p>This example workflow uses the Typeform Trigger node. You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered when a new form is submitted.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.awsDynamoDb/","title":"AWS DynamoDB","text":"<p>AWS DynamoDB is a key-value and document database provided by Amazon as a part of Amazon Web Services.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.awsDynamoDb/#basic-operations","title":"Basic operations","text":"<ul> <li>Item</li> <li>Create a new record, or update the current one if it already exists (upsert/put)</li> <li>Delete an item</li> <li>Get an item</li> <li>Get all items</li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.awsDynamoDb/#example-usage","title":"Example usage","text":"<p>This workflow allows you to insert an item into your DynamoDB database. This example usage workflow would use the following two nodes. - Start - Function - AWS DynamoDB</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.awsDynamoDb/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.awsDynamoDb/#2-function-node","title":"2. Function node","text":"<p>The function node will return the item to insert, properly formatted for our table structure <code>id: number</code>.</p> <ol> <li>Enter the following snippet:     <pre><code>return [\n{\njson: {\nid: {\n'N': '1'\n}\n}\n}\n]\n</code></pre></li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.awsDynamoDb/#3-aws-dynamodb-node","title":"3. AWS DynamoDB node","text":"<ol> <li>First enter credentials for the AWS DynamoDB node. You can find out how to do that here.</li> <li>The Item Resource is selected by default.</li> <li>Select the Create or Update Operation.</li> <li>Enter the Table Name where you are inserting data.</li> <li>In Data to Send select Define Below for Each Column.</li> <li>Click on Execute Node to run the workflow.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.awsLambda/","title":"AWS Lambda","text":"<p>AWS Lambda is an event-driven, serverless computing platform provided by Amazon as a part of Amazon Web Services. It is a computing service that runs code in response to events and automatically manages the computing resources required by that code.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.awsLambda/#basic-operations","title":"Basic Operations","text":"<ul> <li>Invoke a function</li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.awsLambda/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to invoke a function using AWS Lambda. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - AWS Lambda</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.awsLambda/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.awsLambda/#2-aws-lambda-node","title":"2. AWS Lambda node","text":"<ol> <li>First of all, you'll have to enter credentials for the AWS Lambda node. You can find out how to do that here.</li> <li>Select the function that you want to invoke from the Function dropdown list.</li> <li>Click on Execute Node to run the workflow.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.awsRekognition/","title":"AWS Rekognition","text":"<p>AWS Rekognition allows you to add image and video analysis to your applications. With AWS Rekognition, you can identify faces, labels, and celebrities in images.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.awsRekognition/#basic-operations","title":"Basic Operations","text":"<p>Image</p> <ul> <li>Analyze</li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.awsRekognition/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to detect a face from an image using the AWS Rekognition node. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Start - HTTP Request - AWS Rekognition</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.awsRekognition/#1-start-node","title":"1. Start node","text":"<p>The Start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.awsRekognition/#2-http-request-node-get","title":"2. HTTP Request node (GET)","text":"<p>This example workflow uses the HTTP Request node to fetch an image from a URL. You can also use the Read Binary File node to read an image file from the path you specify.</p> <ol> <li>Enter the URL of the image in the URL field. For example, <code>https://n8n.io/_nuxtassets/images/insight2/04c67e5.png</code>.</li> <li>Select 'File' from the Response Format dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the HTTP Request node fetches the image from the URL. This image gets passed on as binary data to the next node in the workflow.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.awsRekognition/#3-aws-rekognition-node-analyze-image","title":"3. AWS Rekognition node (analyze: image)","text":"<p>This node will detect faces in the image that we fetched in the previous node. You can also use this node to analyze an image stored in your AWS Bucket.</p> <ol> <li>First of all, you'll have to enter credentials for the AWS Rekognition node. You can find out how to enter credentials for this node here.</li> <li>Set Binary Data to <code>true</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will observe that the node detects the face in the image that we got from the HTTP Request node.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.awsS3/","title":"AWS S3","text":"<p>AWS S3 is a service offered by Amazon Web Services that provides object storage through a web service interface.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.awsS3/#basic-operations","title":"Basic Operations","text":"<ul> <li>Bucket<ul> <li>Create a bucket</li> <li>Delete a bucket</li> <li>Get all buckets</li> <li>Search within a bucket</li> </ul> </li> <li>File<ul> <li>Copy a file</li> <li>Delete a file</li> <li>Download a file</li> <li>Get all files</li> <li>Upload a file</li> </ul> </li> <li>Folder<ul> <li>Create a folder</li> <li>Delete a folder</li> <li>Get all folders</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.awsS3/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to create a bucket on AWS S3. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - AWS S3</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.awsS3/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.awsS3/#2-aws-s3-node","title":"2. AWS S3 node","text":"<ol> <li>First of all, you'll have to enter credentials for the AWS S3 node. You can find out how to do that here.</li> <li>Select 'Bucket' from the Resource dropdown list.</li> <li>Enter a name for your bucket in the Name field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.awsSes/","title":"AWS SES","text":"<p>AWS SES is a cost-effective, flexible, and scalable email service that enables developers to send mail from within any application.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.awsSes/#basic-operations","title":"Basic Operations","text":"<ul> <li>Custom Verification Email<ul> <li>Create a new custom verification email template</li> <li>Delete an existing custom verification email template</li> <li>Get the custom email verification template</li> <li>Get all the existing custom verification email templates for your account</li> <li>Add an email address to the list of identities</li> <li>Update an existing custom verification email template.</li> </ul> </li> <li>Email<ul> <li>Send</li> <li>Send Template</li> </ul> </li> <li>Template<ul> <li>Create a template</li> <li>Delete a template</li> <li>Get a template</li> <li>Get all templates</li> <li>Update a template</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.awsSes/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to send an email using AWS SES. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - AWS SES</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.awsSes/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.awsSes/#2-aws-sns-node","title":"2. AWS SNS node","text":"<ol> <li>First of all, you'll have to enter credentials for the AWS SES node. You can find out how to do that here.</li> <li>Enter a subject for your email in the Subject field.</li> <li>Enter your message in the Body field.</li> <li>Enter the email address from which you want to send the email in the From Email field.</li> <li>Click on the Add To Email button and add your recipient email addresses.</li> <li>Click on Execute Node to run the workflow.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.awsSns/","title":"AWS SNS","text":"<p>AWS SNS is a notification service provided as part of Amazon Web Services. It provides a low-cost infrastructure for the mass delivery of messages, predominantly to mobile users.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.awsSns/#basic-operations","title":"Basic Operations","text":"<ul> <li>Publish a message to a topic</li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.awsSns/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to publish a message using AWS SNS. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - AWS SNS</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.awsSns/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.awsSns/#2-aws-sns-node","title":"2. AWS SNS node","text":"<ol> <li>First of all, you'll have to enter credentials for the AWS SNS node. You can find out how to do that here.</li> <li>Select the topic in the Topic dropdown list. You can find instructions on how to create a new topic in AWS SNS here.</li> <li>Enter a subject for your message in the Subject field.</li> <li>Enter your message in the Message field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.awsSqs/","title":"AWS SQS","text":"<p>AWS SQS is a fully managed message queuing service that enables you to decouple and scale microservices, distributed systems, and serverless applications.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.awsSqs/#basic-operations","title":"Basic Operations","text":"<ul> <li>Send a message to a queue.</li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.awsSqs/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to send position updates of the ISS every minute to a queue using the AWS SQS node. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Cron - HTTP Request - Set - AWS SQS</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.awsSqs/#1-cron-node","title":"1. Cron node","text":"<p>The Cron node will trigger the workflow every minute.</p> <ol> <li>Click on Add Cron Time.</li> <li>Select 'Every Minute' from the Mode dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the Cron node is configured to trigger the workflow every minute.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.awsSqs/#2-http-request-node-get","title":"2. HTTP Request node (GET)","text":"<p>This node will make a GET request to the API <code>https://api.wheretheiss.at/v1/satellites/25544/positions</code> to fetch the position of the ISS. This information gets passed on to the next node in the workflow.</p> <ol> <li>Enter <code>https://api.wheretheiss.at/v1/satellites/25544/positions</code> in the URL field.</li> <li>Click on the Add Parameter button in the Query Parameters section.</li> <li>Enter <code>timestamps</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Enter the following expression: <code>{{Date.now()}}</code>. This expression will return the current timestamp.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node makes a GET request to the API and returns the information about the location of the ISS.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.awsSqs/#3-set-node","title":"3. Set node","text":"<p>We will use the Set node to ensure that only the data that we set in this node gets passed on to the next nodes in the workflow.</p> <ol> <li>Click on Add Value and select 'String' from the dropdown list.</li> <li>Enter <code>Name</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; HTTP Request &gt; Output Data &gt; JSON &gt; 0 &gt; name. You can also add the following expression: <code>{{$node[\"HTTP Request\"].json[\"0\"][\"name\"]}}</code>.</li> <li>Click on Add Value and select 'Number' from the dropdown list.</li> <li>Enter <code>Latitude</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; HTTP Request &gt; Output Data &gt; JSON &gt; 0 &gt; latitude. You can also add the following expression: <code>{{$node[\"HTTP Request\"].json[\"0\"][\"latitude\"]}}</code>.</li> <li>Click on Add Value and select 'Number' from the dropdown list.</li> <li>Enter <code>Longitude</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; HTTP Request &gt; Output Data &gt; JSON &gt; 0 &gt; longitude. You can also add the following expression: <code>{{$node[\"HTTP Request\"].json[\"0\"][\"longitude\"]}}</code>.</li> <li>Click on Add Value and select 'Number' from the dropdown list.</li> <li>Enter <code>Timestamp</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; HTTP Request &gt; Output Data &gt; JSON &gt; 0 &gt; timpestamp. You can also add the following expression: <code>{{$node[\"HTTP Request\"].json[\"0\"][\"timestamp\"]}}</code>.</li> <li>Toggle Keep Only Set to <code>true</code>. We set this option to true to ensure that only the data that we have set in this node get passed on to the next nodes in the workflow.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node uses the data from the previous node and returns the data that we set for the workflow.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.awsSqs/#4-aws-sqs-node","title":"4. AWS SQS node","text":"<p>This node will send the data from the previous node to the <code>iss-position</code> queue. If you have created a queue with a different one, you can use that queue instead.</p> <ol> <li>First of all, you'll have to enter credentials for the AWS SQS node. You can find out how to do that here.</li> <li>Select the queue from the Queue dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node sends the data from the previous node to the <code>iss-position</code> queue in ActiveMQ.</p> <p></p> <p> Activate workflow for production</p> <p>This example workflow uses the Cron node, which is a Trigger node. You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Cron node.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.awsTextract/","title":"AWS Textract","text":"<p>AWS Textract is a service that extracts printed text, handwriting, and data from any document.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.awsTextract/#basic-operations","title":"Basic Operations","text":"<ul> <li>Analyze Receipt or Invoice</li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.awsTextract/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to extract data from a an invoice stored in AWS S3. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Start - AWS S3 - AWS Textract</p> <p>The final workflow looks like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.awsTextract/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.awsTextract/#2-aws-s3-node-download-file","title":"2. AWS S3 node (download: file)","text":"<p>This node will retrieve an image file with a receipt from an S3 bucket.</p> <ol> <li>Choose your credentials for the AWS S3 node. See here for information on how to create these credentials.</li> <li>Enter the bucket name in the Bucket Name field.</li> <li>Enter the file key in the File Key field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below you can see the file returned by the node.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.awsTextract/#3-aws-textract-node-analyzeexpense","title":"3. AWS Textract node (analyzeExpense)","text":"<p>This node will extract data from the receipt returned by the previous node.</p> <ol> <li>Choose your AWS credentials.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you can see the receipt data extracted by AWS Textract and returned by the node.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.awsTranscribe/","title":"AWS Transcribe","text":"<p>AWS Transcribe is a service that recognizes speech in your audio or video and transcribes that speech into text.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.awsTranscribe/#basic-operations","title":"Basic Operations","text":"<p>Transcription Job - Create a transcription job - Delete a transcription job - Get a transcription job - Get all transcriptions job</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.awsTranscribe/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to create transcription jobs for all your audio and video files stored in AWS S3. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Start - AWS S3 - AWS Transcribe</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.awsTranscribe/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.awsTranscribe/#2-aws-s3-node-getall-file","title":"2. AWS S3 node (getAll: file)","text":"<p>This node will retrieve all the files from an S3 bucket you specify.</p> <ol> <li>First of all, you'll have to enter credentials for the AWS S3 node. You can find out how to do that here.</li> <li>Select 'Get All' from the Operation dropdown list.</li> <li>Enter the bucket name in the Bucket Name field.</li> <li>Toggle Return All to <code>true</code>. This option will return information on all the files stored in the S3 bucket.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns information of all the files stored in the bucket you specified.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.awsTranscribe/#3-aws-transcribe-node-create-transcriptionjob","title":"3. AWS Transcribe node (create: transcriptionJob)","text":"<p>This node will create a transcription job for the files that get returned by the previous node.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Click on the gears icon next to the Job Name field and click on Add Expression.</li> <li>Enter <code>{{$json[\"Key\"].replace(/\\s/g,'-')}}</code> in the Expression field. The code snippet fetches the name of the file and replaces the white-spaces with a hyphen (-).</li> <li>Click on the gears icon next to the Media File URI field and click on Add Expression.</li> <li>Enter <code>s3://{{$node[\"AWS S3\"].parameter[\"bucketName\"]}}/{{$json[\"Key\"]}}</code> in the Expression field.</li> <li>Toggle Detect Language to <code>true</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node creates a transcription job for the files stored in an S3 bucket.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.bambooHr/","title":"BambooHR","text":"<p>BambooHR provides human resources software as a service.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.bambooHr/#basic-operations","title":"Basic Operations","text":"<ul> <li>Company Report<ul> <li>Get a company report</li> </ul> </li> <li>Employee<ul> <li>Create an employee</li> <li>Get an employee</li> <li>Get all employees</li> <li>Update an employee</li> </ul> </li> <li>Employee Document<ul> <li>Delete an employee document</li> <li>Download an employee document</li> <li>Get all employee document</li> <li>Update an employee document</li> <li>Upload an employee document</li> </ul> </li> <li>File<ul> <li>Delete a company file</li> <li>Download a company file</li> <li>Get all company files</li> <li>Update a company file</li> <li>Upload a company file</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.bannerbear/","title":"Bannerbear","text":"<p>Bannerbear is an API-based image generation service that automatically generates variations of graphic templates.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.bannerbear/#basic-operations","title":"Basic Operations","text":"<ul> <li>Image<ul> <li>Create an image</li> <li>Get an image</li> </ul> </li> <li>Template<ul> <li>Get a template</li> <li>Get all templates</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.bannerbear/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to create an image using the Bannerbear welcome template. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - Bannerbear</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.bannerbear/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.bannerbear/#2-bannerbear-node","title":"2. Bannerbear node","text":"<ol> <li>First of all, you'll have to enter credentials for the Bannerbear node. You can find out how to do that here.</li> <li>Select 'Welcome Template' from the Template ID dropdown list.</li> <li>Click on the Add Field dropdown, select 'Wait for Image', and set the slider is set to 'on'.</li> <li>Click on the Add Modification button and select 'message' from the Name dropdown list.</li> <li>Enter the text in the Text field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.baserow/","title":"Baserow","text":"<p>Baserow is an open source no-code database and Airtable alternative.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.baserow/#basic-operations","title":"Basic operations","text":"<ul> <li>Row<ul> <li>Create a row</li> <li>Delete a row</li> <li>Retrieve a row</li> <li>Retrieve all rows</li> <li>Update a row</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.baserow/#example","title":"Example","text":"<p>This workflow allows you to create, find, and delete rows in Baserow default Customer table. This example workflow uses the following nodes.</p> <ul> <li>Start</li> <li>Set</li> <li>Baserow</li> </ul> <p>The final workflow should look like the following image:</p> <p></p> <p>For this workflow you need an account to any Baserow instance with the demo table <code>Customers</code>.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.baserow/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.baserow/#2-set-node","title":"2. Set node","text":"<p>We will use the Set node to set the values for the <code>name</code> and <code>id</code> fields of a new record.</p> <ol> <li>Click on the Add Value button and select 'String' from the dropdown list.</li> <li>Enter <code>Name</code> in the Name field.</li> <li>Enter a name in the Value field.</li> <li>Click on the Add Value button and select 'String' from the dropdown list.</li> <li>Enter <code>Last name</code> in the Name field.</li> <li>Enter a last name in the Value field.</li> <li>Click on the Add Value button and select 'Boolean' from the dropdown list.</li> <li>Enter <code>Active</code> in the Name field.</li> <li>Check the value.</li> <li>Click on Execute Node to run the node.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.baserow/#3-baserow-node-create","title":"3. Baserow node (Create)","text":"<p>This node will create a row in the <code>Customers</code> table with the content from the previous node.</p> <ol> <li>Enter your credentials for the Baserow node. You can find out how to create credentials here.</li> <li>Enter your Baserow instance URL (default value is for official version).</li> <li>Select 'Create' from the Operation dropdown list.</li> <li>Enter the Table ID in the Table ID field. For obtaining the Table ID, see the Database API page available from the database menu.</li> <li>Click on Execute Node to run the node.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.baserow/#4-baserow-node-list","title":"4. Baserow node (List)","text":"<p>This node will list all the rows with the name <code>Bill</code>. If you want to list records with a different name, use that name instead.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Click on the gears icon next to the Host field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Baserow &gt; Parameters &gt; Host. You can also add the following expression: <code>{{$node[\"Baserow\"].parameter[\"host\"]}}</code>.</li> <li>Select the 'List' option from the Operation dropdown list.</li> <li>Click on the gears icon next to the Table ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Baserow &gt; Parameters &gt; Table. You can also add the following expression: <code>{{$node[\"Baserow\"].parameter[\"table\"]}}</code>.</li> <li>Click on Add Option and select 'Search' from the dropdown list.</li> <li>Enter <code>Bill</code> in the Search field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>You will notice that the node only returns the record with a column containing <code>Bill</code>.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.baserow/#5-baserow-node-delete","title":"5. Baserow node (Delete)","text":"<p>This node will delete all the rows listed from the previous node.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Click on the gears icon next to the Host field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Baserow &gt; Parameters &gt; Host. You can also add the following expression: <code>{{$node[\"Baserow\"].parameter[\"host\"]}}</code>.</li> <li>Select the 'Delete' option from the Operation dropdown list.</li> <li>Click on the gears icon next to the Table ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Baserow &gt; Parameters &gt; Table. You can also add the following expression: <code>{{$node[\"Baserow\"].parameter[\"table\"]}}</code>.</li> <li>Click on the gears icon next to the Row ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$json[\"id\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.beeminder/","title":"Beeminder","text":"<p>Beeminder is a service that helps you to self-track and stick to your goals.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.beeminder/#basic-operations","title":"Basic Operations","text":"<p>Datapoint - Create datapoint for a goal - Delete a datapoint - Get all datapoints for a goal - Update a datapoint</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.beeminder/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to add a datapoint to Beeminder when a new activity gets added to Strava. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Strava Trigger - Beeminder</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.beeminder/#1-strava-trigger-node","title":"1. Strava Trigger node","text":"<p>This node will trigger the workflow whenever a new activity gets added to your Strava account.</p> <ol> <li>First of all, you'll have to enter credentials for the Strava Trigger node. You can find out how to do that here.</li> <li>Select 'created' from the Event dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node triggers the workflow when a new activity gets added to Strava.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.beeminder/#2-beeminder-node-create-datapoint","title":"2. Beeminder node (create: datapoint)","text":"<p>This node will create a datapoint for the goal <code>testing</code>. If you have created a goal with a different name, select that goal instead.</p> <ol> <li>First of all, you'll have to enter credentials for the Beeminder node. You can find out how to do that here.</li> <li>Select a goal from the Goal Name dropdown list.</li> <li>Click on Add Field and select 'Comment'.</li> <li> <p>Click on the gears icon next to the Comment field and click on Add Expression.</p> </li> <li> <p>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; object_data &gt; name. You can also add the following expression: <code>{{$json[\"object_data\"][\"name\"]}}</code>.</p> </li> <li> <p>Click on Execute Node to run the node.</p> </li> </ol> <p>In the screenshot below, you will notice that the node creates a datapoint in Beeminder.</p> <p></p> <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Strava Trigger node.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.bitly/","title":"Bitly","text":"<p>Bitly is URL shortening service and a link management platform that allows users to shorten, create and share trusted, powerful links for businesses.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.bitly/#basic-operations","title":"Basic Operations","text":"<ul> <li>Link<ul> <li>Create a link</li> <li>Get a link</li> <li>Update a link</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.bitly/#example-usage","title":"Example Usage","text":"<p>This workflow shows you how to create a new link. You can also find the workflow on the website. This example usage workflow uses the following two nodes. - Start - Bitly</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.bitly/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.bitly/#2-bitly-node","title":"2. Bitly node","text":"<ol> <li>First of all, you'll have to enter credentials for the Twilio node. You can find out how to do that here.</li> <li>Enter the URL in the Long URL field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.bitwarden/","title":"Bitwarden","text":"<p>Bitwarden is an open-source password management solution for individuals, teams, and business organizations.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.bitwarden/#basic-operations","title":"Basic Operations","text":"<ul> <li>Collection<ul> <li>Delete</li> <li>Get</li> <li>Get All</li> <li>Update</li> </ul> </li> <li>Event<ul> <li>Get All</li> </ul> </li> <li>Group<ul> <li>Create</li> <li>Delete</li> <li>Get</li> <li>Get All</li> <li>Get Members</li> <li>Update</li> <li>Update Members</li> </ul> </li> <li>Member<ul> <li>Create</li> <li>Delete</li> <li>Get</li> <li>Get All</li> <li>Get Groups</li> <li>Update</li> <li>Update Groups</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.bitwarden/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to create a group, add members to the group, and get the members of the group in Bitwarden. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Start - Bitwarden</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.bitwarden/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.bitwarden/#2-bitwarden-node-create-group","title":"2. Bitwarden node (create: group)","text":"<p>This node will create a new group called <code>documentation</code> in Bitwarden.</p> <ol> <li>First of all, you'll have to enter credentials for the Bitwarden node. You can find out how to do that here.</li> <li>Select 'Group' from the Resource dropdown list.</li> <li>Select 'Create' from the Operation dropdown list.</li> <li>Enter <code>documentation</code> in the Name field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node creates a new group in Bitwarden.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.bitwarden/#3-bitwarden1-node-getall-member","title":"3. Bitwarden1 node (getAll: member)","text":"<p>This node will get all the members from Bitwarden.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Member' from the Resource dropdown list.</li> <li>Select 'Get All' from the Operation dropdown list.</li> <li>Toggle Return All to <code>true</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node retrieves all the members from Bitwarden.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.bitwarden/#4-bitwarden2-node-updatemembers-group","title":"4. Bitwarden2 node (updateMembers: group)","text":"<p>This node will update all the members in the group that we created earlier.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Group' from the Resource dropdown list.</li> <li>Select 'Update Members' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Group ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Bitwarden &gt; Output Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$node[\"Bitwarden\"].json[\"id\"]}}</code>.</li> <li>Click on the gears icon next to the Member IDs field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$json[\"id\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node updates the members of the group.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.bitwarden/#5-bitwarden3-node-getmembers-group","title":"5. Bitwarden3 node (getMembers: group)","text":"<p>This node will get all the members in the group that we created earlier.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Group' from the Resource dropdown list.</li> <li>Select 'Get Members' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Group ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Bitwarden &gt; Output Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$node[\"Bitwarden\"].json[\"id\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node retrieves the members in the group.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.box/","title":"Box","text":"<p>Box is a cloud computing company which provides file sharing, collaborating, and other tools for working with files that are uploaded to its servers.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.box/#basic-operations","title":"Basic Operations","text":"<ul> <li>File<ul> <li>Copy a file</li> <li>Delete a file</li> <li>Download a file</li> <li>Get a file</li> <li>Search files</li> <li>Share a file</li> <li>Upload a file</li> </ul> </li> <li>Folder<ul> <li>Create a folder</li> <li>Get a folder</li> <li>Delete a folder</li> <li>Search files</li> <li>Share a folder</li> <li>Update folder</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.box/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to create a folder on Box. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - Box</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.box/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.box/#2-box-node","title":"2. Box node","text":"<ol> <li>First of all, you'll have to enter credentials for the Box node. You can find out how to do that here.</li> <li>Select the 'Folder' option from the Resource dropdown list.</li> <li>Enter the name of the folder in the Name field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.bubble/","title":"Bubble","text":"<p>Bubble lets you create interactive, multi-user apps for desktop and mobile web browsers.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.bubble/#basic-operations","title":"Basic Operations","text":"<ul> <li>Object<ul> <li>Create</li> <li>Delete</li> <li>Get</li> <li>Get All</li> <li>Update</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.bubble/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to create, update, and get an object from Bubble. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Start - Bubble</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.bubble/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.bubble/#2-bubble-node-create-object","title":"2. Bubble node (create: object)","text":"<p>This node will create a new object of the type <code>Doc</code> in Bubble. If you want to create an object with a different type, use that type instead.</p> <ol> <li>First of all, you'll have to enter credentials for the Bubble node. You can find out how to do that here.</li> <li>Select 'Create' from the Operation dropdown list.</li> <li>Enter <code>Doc</code> in the Type Name field.</li> <li>Click on the Add Property button.</li> <li>Enter <code>Name</code> in the Key field. If you're using a different type, enter the field name present in the type.</li> <li>Enter <code>Bubble</code> in the Value field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node creates a new object of the type <code>Doc</code> in Bubble.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.bubble/#3-bubble1-node-update-object","title":"3. Bubble1 node (update: object)","text":"<p>This node will update the object that we created using the previous node.</p> <ol> <li>Select the credentials that you entered in the previous Bubble node.</li> <li>Select 'Update' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Type Name field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Bubble &gt; Parameters &gt; typeName. You can also add the following expression: <code>{{$node[\"Bubble\"].parameter[\"typeName\"]}}</code>.</li> <li>Click on the gears icon next to the Object ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$json[\"id\"]}}</code>.</li> <li>Click on the Add Property button.</li> <li>Enter <code>Name</code> in the Key field. If you're using a different type, enter the field name present in the type.</li> <li>Enter <code>Bubble node</code> in the Value field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node updates the information of the object that got created previously.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.bubble/#4-bubble2-node-get-object","title":"4. Bubble2 node (get: object)","text":"<p>This node will retrieve the information of the object that we created earlier.</p> <ol> <li>Select the credentials that you entered in the previous Bubble node.</li> <li>Click on the gears icon next to the Type Name field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Bubble &gt; Parameters &gt; typeName. You can also add the following expression: <code>{{$node[\"Bubble\"].parameter[\"typeName\"]}}</code>.</li> <li>Click on the gears icon next to the Object ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Bubble &gt; Output Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$node[\"Bubble\"].json[\"id\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node retrieves the information of the object that we created earlier.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.chargebee/","title":"Chargebee","text":"<p>Chargebee is a billing platform for subscription based SaaS and eCommerce businesses. Chargebee integrates with payment gateways to let you automate recurring payment collection along with invoicing, taxes, accounting, email notifications, SaaS Metrics and customer management.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.chargebee/#basic-operations","title":"Basic Operations","text":"<ul> <li>Customer<ul> <li>Create a customer</li> </ul> </li> <li>Invoice<ul> <li>Return the invoices</li> <li>Get URL for the invoice PDF</li> </ul> </li> <li>Subscription<ul> <li>Cancel a subscription</li> <li>Delete a subscription</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.chargebee/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to create a new customer in Chargebee. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - Chargebee</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.chargebee/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.chargebee/#2-chargebee-node","title":"2. Chargebee node","text":"<ol> <li>First of all, you'll have to enter credentials for the Chargebee node. You can find out how to do that here.</li> <li>Select the 'Customer' option from the Resource dropdown list.</li> <li>Under the Properties section, click on the Add Property button and select First Name.</li> <li>Enter the first name of the contact in the First Name field.</li> <li>Click on Add Property again and select Last Name.</li> <li>Enter the last name of the contact in the Last name field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.circleCi/","title":"CircleCI","text":"<p>CircleCI is a continuous integration and delivery platform helps teams release quality code, faster.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.circleCi/#basic-operations","title":"Basic Operations","text":"<ul> <li>Pipeline<ul> <li>Get a pipeline</li> <li>Get all pipelines</li> <li>Trigger a pipeline</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.circleCi/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to get a pipeline in CircleCI. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - CircleCI</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.circleCi/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.circleCi/#2-circleci-node","title":"2. CircleCI node","text":"<ol> <li>First of all, you'll have to enter credentials for the CircleCI node. You can find out how to do that here.</li> <li>Select the VCS provider from the dropdown in the Provider field.</li> <li>Enter the project slug in the Project Slug field.</li> <li>Enter the number of the pipeline in CircleCI that you want to get in the Pipeline Number field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.ciscoWebex/","title":"Webex by Cisco","text":"<p>Webex by Cisco is a web conferencing and videoconferencing application.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.ciscoWebex/#basic-operations","title":"Basic operations","text":"<ul> <li>Meeting<ul> <li>Create</li> <li>Delete</li> <li>Get</li> <li>Get All</li> <li>Update</li> </ul> </li> <li>Message<ul> <li>Create</li> <li>Delete</li> <li>Get</li> <li>Get All</li> <li>Update</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.ciscoWebex/#example-usage","title":"Example usage","text":"<p>This workflow allows you to create a new meeting. This example usage workflow uses the following node:</p> <ul> <li>Webex by Cisco</li> </ul> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.ciscoWebex/#1-webex-by-cisco-node","title":"1. Webex by Cisco node","text":"<ol> <li>First enter your credentials for node. You can find out how to do that here.</li> <li>Select 'Meeting' from the Resource dropdown list.</li> <li>Select 'Create' from the Operation dropdown list.</li> <li>Enter a Title for your new meeting.</li> <li>Select the Start and End times for the meeting.</li> <li>Optionally, use the Additional Fields menu to add further meeting details, for example an agenda, set the invitees, or a meeting recurrence.</li> <li>Click on Execute Node to run the workflow.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.clearbit/","title":"Clearbit","text":"<p>Clearbit provides powerful products, and data APIs like contact enrichment, lead generation, financial compliance, and more to help businesses grow.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.clearbit/#basic-operations","title":"Basic Operations","text":"<ul> <li>Company<ul> <li>Auto-complete company names and retrieve logo and domain</li> <li>Look up person and company data based on an email or domain</li> </ul> </li> <li>Person<ul> <li>Look up a person and company data based on an email or domain</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.clearbit/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to look up a person using their email in Clearbit. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - Clearbit</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.clearbit/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.clearbit/#2-clearbit-node","title":"2. Clearbit node","text":"<ol> <li>First of all, you'll have to enter credentials for the Clearbit node. You can find out how to do that here.</li> <li>Select the 'Person' option from the Resource dropdown list.</li> <li>Enter the email of the person you want to look up in the Email field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.clickUp/","title":"ClickUp","text":"<p>ClickUp is a cloud-based collaboration and project management tool suitable for businesses of all sizes and industries. Features include communication and collaboration tools, task assignments and statuses, alerts and a task toolbar.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.clickUp/#basic-operations","title":"Basic Operations","text":"<ul> <li>Checklist<ul> <li>Create a checklist</li> <li>Delete a checklist</li> <li>Update a checklist</li> </ul> </li> <li>Checklist Item<ul> <li>Create a checklist item</li> <li>Delete a checklist item</li> <li>Update a checklist item</li> </ul> </li> <li>Comment<ul> <li>Create a comment</li> <li>Delete a comment</li> <li>Get all comments</li> <li>Update a comment</li> </ul> </li> <li>Folder<ul> <li>Create a folder</li> <li>Delete a folder</li> <li>Get a folder</li> <li>Get all folders</li> <li>Update a folder</li> </ul> </li> <li>Goal<ul> <li>Create a goal</li> <li>Delete a goal</li> <li>Get a goal</li> <li>Get all goals</li> <li>Update a goal</li> </ul> </li> <li>Goal Key Result<ul> <li>Create a key result</li> <li>Delete a key result</li> <li>Update a key result</li> </ul> </li> <li>List<ul> <li>Create a list</li> <li>Retrieve list's custom fields</li> <li>Delete a list</li> <li>Get a list</li> <li>Get all lists</li> <li>Get list members</li> <li>Update a list</li> </ul> </li> <li>Space Tag<ul> <li>Create a space tag</li> <li>Delete a space tag</li> <li>Get all space tags</li> <li>Update a space tag</li> </ul> </li> <li>Task<ul> <li>Create a task</li> <li>Delete a task</li> <li>Get a task</li> <li>Get all tasks</li> <li>Get task members</li> <li>Set a custom field</li> <li>Update a task</li> </ul> </li> <li>Task List<ul> <li>Add a task to a list</li> <li>Remove a task from a list</li> </ul> </li> <li>Task Tag<ul> <li>Add a tag to a task</li> <li>Remove a tag from a task</li> </ul> </li> <li>Task Dependency<ul> <li>Create a task dependency</li> <li>Delete a task dependency</li> </ul> </li> <li>Time Entry<ul> <li>Create a time entry</li> <li>Delete a time entry</li> <li>Get a time entry</li> <li>Get all time entries</li> <li>Start a time entry</li> <li>Stop the current running timer</li> <li>Update a time Entry</li> </ul> </li> <li>Time Entry Tag<ul> <li>Add tag to time entry</li> <li>Get all time entry tags</li> <li>Remove tag from time entry</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.clickUp/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to create a task in ClickUp. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - ClickUp</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.clickUp/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.clickUp/#2-clickup-node","title":"2. ClickUp node","text":"<ol> <li>First of all, you'll have to enter credentials for the ClickUp node. You can find out how to do that here.</li> <li>Select your team ID from the Team ID dropdown list.</li> <li>Select your space ID from the Space ID dropdown list.</li> <li>Select your folder ID from the Folder ID dropdown list.</li> <li>Select your list ID from the List ID dropdown list.</li> <li>Enter the name of the task in the Name field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.clockify/","title":"Clockify","text":"<p>Clockify is a free time tracker and timesheet app for tracking work hours across projects.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.clockify/#basic-operations","title":"Basic Operations","text":"<ul> <li>Project<ul> <li>Create a project</li> <li>Delete a project</li> <li>Get a project</li> <li>Get all projects</li> <li>Update a project</li> </ul> </li> <li>Tag<ul> <li>Create a tag</li> <li>Delete a tag</li> <li>Get all tags</li> <li>Update a tag</li> </ul> </li> <li>Task<ul> <li>Create a task</li> <li>Delete a task</li> <li>Get a task</li> <li>Get all tasks</li> <li>Update a task</li> </ul> </li> <li>Time Entry<ul> <li>Create a time entry</li> <li>Delete a time entry</li> <li>Get time entrie</li> <li>Update a time entry</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.clockify/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to create a project, tag, and time entry in Clockify. It also allows you to update the time entry in Clockify. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Start - Clockify</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.clockify/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.clockify/#2-clockify-node-create-project","title":"2. Clockify node (create: project)","text":"<p>This node will create a private project with a custom color. It will also add a note to the project in Clockify.</p> <ol> <li>First of all, you'll have to enter credentials for the Clockify node. You can find out how to do that here.</li> <li>Select the Workspace ID from the dropdown list.</li> <li>Enter the name of the project in the Project Name field.</li> <li>Click on Add Field and select 'Color' from the dropdown list.</li> <li>Select the color from the color-picker or enter the hexadecimal value of the color in the Color field.</li> <li>Click on Add Field and select 'Is Public' from the dropdown list.</li> <li>Toggle Is Public to false.</li> <li>Click on Add Field and select 'Note' from the dropdown list.</li> <li>Enter the note in the Note field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node creates a new private project called <code>n8n-docs</code>. This project has a custom color <code>#0000FF</code> and a note <code>For n8n-docs</code>.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.clockify/#3-clockify1-node-create-tag","title":"3. Clockify1 node (create: tag)","text":"<p>This node will create a new tag in Clockify.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Tag' from the Resource dropdown list.</li> <li>Select the Workspace ID from the dropdown list.</li> <li>Enter the name of the tag in the Name field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node creates a new tag called <code>docs</code> in the Doc\u00b2 workspace in Clockify.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.clockify/#4-clockify2-node-create-timeentry","title":"4. Clockify2 node (create: timeEntry)","text":"<p>This node creates a new time entry in Clockify with a description. It also adds the tag that we created in the previous step to the time entry.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Time Entry' from the Resource dropdown list.</li> <li>Select the Workspace ID from the dropdown list.</li> <li>Select a start date and time for the Start field.</li> <li>Click on Add Field and select 'Description' from the dropdown list.</li> <li>Enter a description in the Description field.</li> <li>Click on Add Field and select 'End' from the dropdown list.</li> <li>Select a end date and time for the End field.</li> <li>Click on Add Field and select 'Tag IDs' from the dropdown list.</li> <li>Select the tag that you created in the previous step from the Tag IDs dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node creates a new time entry with a description and adds the tag that was created in the previous node.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.clockify/#5-clockify3-node-update-timeentry","title":"5. Clockify3 node (update: timeEntry)","text":"<p>This node will add the project to the time entry that was created by the Clockify node.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Time Entry' from the Resource dropdown list.</li> <li>Select 'Update' from the Operation dropdown list.</li> <li>Select the Workspace ID from the dropdown list.</li> <li>Click on the gears icon next to the Time Entry ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Clockify2 &gt; Output Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$node[\"Clockify2\"].json[\"id\"]}}</code>.</li> <li>Click on Add Field and select 'Project ID' from the dropdown list.</li> <li>Click on the gears icon next to the Project ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Clockify &gt; Output Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$node[\"Clockify\"].json[\"id\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node has updated the time entry by adding the project ID we created in the Clockify node.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.cockpit/","title":"Cockpit","text":"<p>Cockpit is a headless CMS with an API-first approach that puts content first. It is designed to simplify the process of publication by separating content management from content consumption on the client side.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.cockpit/#basic-operations","title":"Basic Operations","text":"<ul> <li>Collection<ul> <li>Create a collection entry</li> <li>Get all collection entries</li> <li>Update a collection entry</li> </ul> </li> <li>Form<ul> <li>Store data from a form submission</li> </ul> </li> <li>Singleton<ul> <li>Get a singleton</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.cockpit/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to get entries from a collection in Cockpit. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - Cockpit</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.cockpit/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.cockpit/#2-cockpit-node","title":"2. Cockpit node","text":"<ol> <li>First of all, you'll have to enter credentials for the Cockpit node. You can find out how to do that here.</li> <li>Select your collection from the Collection dropdown list.</li> <li>Click on Execute Node to run the workflow.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.coda/","title":"Coda","text":"<p>Coda is a new type of document that blends the flexibility of documents, the power of spreadsheets, and the utility of applications into a single new canvas.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.coda/#basic-operations","title":"Basic Operations","text":"<ul> <li>Control<ul> <li>Get a control</li> <li>Get all controls</li> </ul> </li> <li>Formula<ul> <li>Get a formula</li> <li>Get all formulas</li> </ul> </li> <li>Table<ul> <li>Create/Insert a row</li> <li>Delete one or multiple rows</li> <li>Get all columns</li> <li>Get all the rows</li> <li>Get a column</li> <li>Get a row</li> <li>Pushes a button</li> </ul> </li> <li>View<ul> <li>Delete view row</li> <li>Get a view</li> <li>Get all views</li> <li>Get all views columns</li> <li>Get all views rows</li> <li>Update row</li> <li>Push view button</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.coda/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to insert data into a new row for a table in Coda. You can also find the workflow on the website. This example usage workflow would use the following three nodes. - Start - Set - Coda</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.coda/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.coda/#2-set-node","title":"2. Set node","text":"<ol> <li>Click on the Add Value button and select 'String' from the dropdown list.</li> <li>Enter <code>Column 1</code>in the Name field.</li> <li>Enter the value for the first column in the Value field.</li> <li>Repeat the first three steps of all the columns that you have in your Coda table.</li> </ol> <p>Note: Here, we've used the default table in Coda, which has three columns namely Column 1, Column 2, and Column 3. Please make sure that the column names in the Name field matches the names of the table columns in Coda.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.coda/#3-coda-node","title":"3. Coda node","text":"<ol> <li>First of all, you'll have to enter credentials for the Coda node. You can find out how to do that here.</li> <li>Select the name of your document from the Doc dropdown list.</li> <li>Select the name of your table from the Table dropdown list.</li> <li>Click on Execute Node to run the workflow.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.coinGecko/","title":"CoinGecko","text":"<p>CoinGecko provides a fundamental analysis of the crypto market. In addition to tracking price, volume and market capitalization, CoinGecko tracks community growth, open-source code development, major events, and on-chain metrics.</p> <p>\ud83d\udd11 Credentials</p> <p>The CoinGecko node does not require authentication.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.coinGecko/#basic-operations","title":"Basic Operations","text":"<ul> <li>Coin<ul> <li>Get a candlestick open-high-low-close chart for the selected currency</li> <li>Get current data for a coin</li> <li>Get all coins</li> <li>Get historical data (name, price, market, stats) at a given date for a coin</li> <li>Get prices and market related data for all trading pairs that match the selected currency</li> <li>Get historical market data include price, market cap, and 24h volume (granularity auto)</li> <li>Get the current price of any cryptocurrencies in any other supported currencies that you need</li> <li>Get coin tickers</li> </ul> </li> <li>Event<ul> <li>Get all events</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.coinGecko/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to get the price of BTC in EUR using the CoinGecko node and send an SMS when the price is greater than or equal to \u20ac9000. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Cron - CoinGecko - IF - Twilio - No Operation, do nothing</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.coinGecko/#1-cron-node","title":"1. Cron node","text":"<p>The Cron node will trigger the workflow every minute.</p> <ol> <li>Click on Add Cron Time.</li> <li>Select 'Every Minute' from the Mode dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.coinGecko/#2-coingecko-node-price-coin","title":"2. CoinGecko node (price: coin)","text":"<p>This node will get the price of BTC in EUR using the CoinGecko API. Feel free to select a different Coin ID and Currency. 1. Select 'Price' from the Operation dropdown list. 2. Select 'BTC' from the Coin IDs dropdown list. 3. Select 'EUR' from the Currencies dropdown list. 4. Click on Execute Node to run the node.</p> <p>In the screenshot below, you will notice that the node fetches the price of 1 BTC in EUR. This information will be passed on to the next nodes in the workflow.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.coinGecko/#3-if-node","title":"3. IF node","text":"<p>This node will compare the price that we got from the CoinGecko node. If the price is greater than or equal to 9000, it will return true otherwise false.</p> <ol> <li>Click on Add Condition and select 'Number' from the dropdown list.</li> <li>Click on the gears icon next to the Value 1 field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; CoinGecko &gt; Output Data &gt; JSON &gt; bitcoin &gt; eur. You can also add the following expression: <code>{{$node[\"CoinGecko\"].json[\"bitcoin\"][\"eur\"]}}</code>.</li> <li>Select 'Larger Equal' from the Operation dropdown list.</li> <li>Set Value 2 to 9000.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns an output for true when the price is greater than 9000.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.coinGecko/#4-twilio-node-send-sms","title":"4. Twilio node (send: sms)","text":"<p>This node sends an SMS to a number when the price is greater than or equal to 9000.</p> <ol> <li>Connect this node with the true output of the IF node.</li> <li>You'll have to enter credentials for the Twilio node. You can find out how to do that here.</li> <li>Enter the Twilio phone number in the From field.</li> <li>Enter the receiver's phone number in the To field.</li> <li> <p>Click on the gears icon next to the Message field and click on Add Expression.</p> </li> <li> <p>Enter <code>The price went up! The new price is \u20ac{{$node[\"CoinGecko\"].json[\"bitcoin\"][\"eur\"]}}</code> in the Expression field.</p> </li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node sends an SMS with the price that we obtained from the CoinGecko node.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.coinGecko/#5-noop-node","title":"5. NoOp node","text":"<p>Adding this node here is optional, as the absence of this node won't make a difference to the functioning of the workflow.</p> <ol> <li>Connect this node with the false output of the IF node.</li> <li>Click on Execute Node to run the node.</li> </ol> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.contentful/","title":"Contentful","text":"<p>Contentful provides a content infrastructure for digital teams to power content in websites, apps, and devices. It offers a central hub for structured content, powerful management and delivery APIs, and a customizable web app.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.contentful/#basic-operations","title":"Basic Operations","text":"<ul> <li>Asset<ul> <li>Get</li> <li>Get All</li> </ul> </li> <li>Content Type<ul> <li>Get</li> </ul> </li> <li>Entry<ul> <li>Get</li> <li>Get All</li> </ul> </li> <li>Locale<ul> <li>Get All</li> </ul> </li> <li>Space<ul> <li>Get</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.contentful/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to get all the entries using the Delivery API of Contentful. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Start - Contentful</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.contentful/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.contentful/#2-contentful-node","title":"2. Contentful node","text":"<ol> <li>First of all, you'll have to enter credentials for the Contentful node. You can find out how to do that here.</li> <li>Select 'Get All' from the Operation dropdown list.</li> <li>Toggle Return All to true.</li> <li>Click on Execute Node to run the node.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.convertKit/","title":"ConvertKit","text":"<p>ConvertKit is a fully-featured email marketing platform. ConvertKit can be used to build an email list, send email broadcasts, automate sequences, create segments, and build landing pages.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.convertKit/#basic-operations","title":"Basic Operations","text":"<ul> <li>Custom Field<ul> <li>Create a field</li> <li>Delete a field</li> <li>Get all fields</li> <li>Update a field</li> </ul> </li> <li>Form<ul> <li>Add a subscriber</li> <li>Get all forms</li> <li>List subscriptions to a form including subscriber data</li> </ul> </li> <li>Sequence<ul> <li>Add a subscriber</li> <li>Get all sequences</li> <li>Get all subscriptions to a sequence including subscriber data</li> </ul> </li> <li>Tag<ul> <li>Create a tag</li> <li>Get all tags</li> </ul> </li> <li>Tag Subscriber<ul> <li>Add a tag to a subscriber</li> <li>List subscriptions to a tag including subscriber data</li> <li>Delete a tag from a subscriber</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.convertKit/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to add a subscriber to a form, create a tag and add the subscriber to the tag using the ConvertKit node. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Start - ConvertKit</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.convertKit/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.convertKit/#2-convertkit-node-addsubscriber-form","title":"2. ConvertKit node (addSubscriber: form)","text":"<ol> <li>First of all, you'll have to enter credentials for the ConvertKit node. You can find out how to do that here.</li> <li>Select the form from the Form ID dropdown list.</li> <li>Enter the email address in the Email field.</li> <li>Click on Execute Node to run the node.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.convertKit/#3-convertkit1-node-create-tag","title":"3. ConvertKit1 node (create: tag)","text":"<ol> <li>Select the credentials that you entered in the previous ConvertKit node.</li> <li>Select 'Tag' from the Resource dropdown list.</li> <li>Enter the tag name in the Name field.</li> <li>Click on Execute Node to run the node.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.convertKit/#4-convertkit2-node-add-tagsubscriber","title":"4. ConvertKit2 node (add: tagSubscriber)","text":"<ol> <li>Select the credentials that you entered in the previous ConvertKit node.</li> <li>Select 'Tag Subscriber' from the Resource dropdown list.</li> <li>Select 'Add' from the Operation dropdown list.</li> <li>Select the tag from the Tag ID dropdown list.</li> <li>Click on the gears icon next to the Email field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; ConvertKit &gt; Output Data &gt; JSON &gt; subscriber &gt; email_address. You can also add the following expression: <code>{{$node[\"ConvertKit\"].json[\"subscriber\"][\"email_address\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.copper/","title":"Copper","text":"<p>Copper is a CRM that focuses on strong integration with Google's G Suite, targeted towards small and medium-sized businesses.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.copper/#basic-operations","title":"Basic Operations","text":"<ul> <li>Company<ul> <li>Create</li> <li>Delete</li> <li>Get</li> <li>Get All</li> <li>Update</li> </ul> </li> <li>Customer Source<ul> <li>Get All</li> </ul> </li> <li>Lead<ul> <li>Create</li> <li>Delete</li> <li>Get</li> <li>Get All</li> <li>Update</li> </ul> </li> <li>Opportunity<ul> <li>Create</li> <li>Delete</li> <li>Get</li> <li>Get All</li> <li>Update</li> </ul> </li> <li>Person<ul> <li>Create</li> <li>Delete</li> <li>Get</li> <li>Get All</li> <li>Update</li> </ul> </li> <li>Project<ul> <li>Create</li> <li>Delete</li> <li>Get</li> <li>Get All</li> <li>Update</li> </ul> </li> <li>Task<ul> <li>Create</li> <li>Delete</li> <li>Get</li> <li>Get All</li> <li>Update</li> </ul> </li> <li>User<ul> <li>Get All</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.copper/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to create, update, and get a person from Copper. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Start - Copper</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.copper/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.copper/#2-copper-node-create-person","title":"2. Copper node (create: person)","text":"<p>This node will create a new person in Copper.</p> <ol> <li>First of all, you'll have to enter credentials for the Copper node. You can find out how to do that here.</li> <li>Select 'Person' from the Resource dropdown list.</li> <li>Enter the name of the lead in the Name field.</li> <li>Click on the Add Field button and select 'Emails' from the dropdown list.</li> <li>Click on the Add Email button.</li> <li>Enter the email in the Email field.</li> <li>Enter the category of the email in the Category field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node creates a new person in Copper.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.copper/#3-copper1-node-update-person","title":"3. Copper1 node (update: person)","text":"<p>This node will update the information of the person that we created using the previous node.</p> <ol> <li>Select the credentials that you entered in the previous Copper node.</li> <li>Select 'Person' from the Resource dropdown list.</li> <li>Select 'Update' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Person ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$json[\"id\"]}}</code>.</li> <li>Click on the Add Field button and select 'Phone Numbers' from the dropdown list.</li> <li>Click on the Add Phone Number field.</li> <li>Enter the phone number in the Phone Number field.</li> <li>Enter the category in the Category field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node updates the information of the person that got created previously.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.copper/#4-copper2-node-get-person","title":"4. Copper2 node (get: person)","text":"<p>This node will retrieve the information of the person that we created earlier.</p> <ol> <li>Select the credentials that you entered in the previous Copper node.</li> <li>Select 'Person' from the Resource dropdown list.</li> <li>Select 'Update' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Person ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$json[\"id\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node retrieves the information of the person that we created earlier.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.cortex/","title":"Cortex","text":"<p>Cortex offers a powerful observable (URL, file, IP, etc) analysis mechanism. It allows you to analyze collected observables using a single tool, respond to threats, and interact with the constituency and other teams.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.cortex/#basic-operations","title":"Basic Operations","text":"<ul> <li>Analyzer<ul> <li>Execute Analyzer</li> </ul> </li> <li>Job<ul> <li>Get job details</li> <li>Get job report</li> </ul> </li> <li>Responder<ul> <li>Execute Responder</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.cortex/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to analyze a URL and get the job details using the Cortex node. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Start - Cortex</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.cortex/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.cortex/#2-cortex-node-analyzer-execute","title":"2. Cortex node (analyzer: execute)","text":"<p>This node will analyze a URL. If you want to analyze a different observable type, select that instead.</p> <ol> <li>First of all, you'll have to enter credentials for the Cortex node. You can find out how to do that here.</li> <li>Select 'Abuse_Finder_3_0' from the Analyzer Type dropdown list.</li> <li>Select 'URL' from the Observable Type dropdown list.</li> <li>Enter the URL you want to analyze in the Observable Value field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node starts the analysis of the URL.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.cortex/#3-cortex1-node-job-get","title":"3. Cortex1 node (job: get)","text":"<p>This node will return the job details for the analysis that we executed in the previous node.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Job' from the Resource dropdown list.</li> <li>Click on the gears icon next to the Job ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Cortex &gt; Output Data &gt; JSON &gt; _id. You can also add the following expression: <code>{{$node[\"Cortex\"].json[\"_id\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node starts the analysis of the URL.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.crateDb/","title":"CrateDB","text":"<p>CrateDB is an open-source distributed SQL database management system that integrates a fully searchable document-oriented data store based on a shared-nothing architecture, and is designed for high scalability.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.crateDb/#basic-operations","title":"Basic Operations","text":"<ul> <li>Execute an SQL query</li> <li>Insert rows in database</li> <li>Update rows in database</li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.crateDb/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to create a table and insert data into it in CrateDB. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Start - Set - CrateDB</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.crateDb/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.crateDb/#2-cratedb-node-execute-query","title":"2. CrateDB node (Execute Query)","text":"<ol> <li>First of all, you'll have to enter credentials for the CrateDB node. You can find out how to do that here.</li> <li>Select 'Execute Query' from the Operation dropdown list.</li> <li>Enter the following SQL query in the Query field: <code>CREATE TABLE test (id INT, name STRING);</code>.</li> <li>Click on the Node tab and toggle Always Output Data to true.</li> <li>Click on Execute Node to run the node.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.crateDb/#3-set-node","title":"3. Set node","text":"<ol> <li>Click on the Add Value button and select 'Number' from the dropdown list.</li> <li>Enter <code>id</code> in the Name field.</li> <li>Click on the Add Value button and select 'String' from the dropdown list.</li> <li>Enter <code>name</code> in the Name field.</li> <li>Enter the value for the name in the Value field.</li> <li>Click on Execute Node to run the node.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.crateDb/#4-cratedb1-node-insert","title":"4. CrateDB1 node (Insert)","text":"<ol> <li>Select the credentials that you entered in the previous CrateDB node.</li> <li>Enter <code>test</code> in the Table field.</li> <li>Enter <code>id, name</code> in the Columns field.</li> <li>Click on Execute Node to run the node.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.crateDb/#faqs","title":"FAQs","text":""},{"location":"workflow/integrations/nodes/workflow-nodes-base.crateDb/#how-to-specify-the-data-type-of-a-column","title":"How to specify the data type of a column?","text":"<p>To specify the data type of a column, append the column name with <code>:type</code>, where <code>type</code> is the data type of that column. For example, if you want to specify the type <code>int</code> for the column id and type <code>text</code> for the column name, you can use the following snippet in the Columns field: <code>id:init,name:text</code>.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.customerIo/","title":"Customer.io","text":"<p>Customer.io enables users to send newsletters to selected segments of customers using their website data. You can send targeted emails, push notifications, and SMS to lower churn, create stronger relationships, and drive subscriptions.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.customerIo/#basic-operations","title":"Basic Operations","text":"<ul> <li>Customer<ul> <li>Create/Update a customer.</li> <li>Delete a customer.</li> </ul> </li> <li>Event<ul> <li>Track a customer event.</li> <li>Track an anonymous event.</li> </ul> </li> <li>Campaign<ul> <li>Get</li> <li>Get All</li> <li>Get Metrics</li> </ul> </li> <li>Segment<ul> <li>Add Customer</li> <li>Remove Customer</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.customerIo/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to create a customer and add them to a segment in Customer.io. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Start - Customer.io</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.customerIo/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.customerIo/#2-customerio-node-upsert-customer","title":"2. CustomerIo node (upsert: customer)","text":"<ol> <li>First of all, you'll have to enter credentials for the Customer.io node. You can find out how to do that here.</li> <li>Enter a customer id in the ID field.</li> <li>Click on the Add Field button and select 'Custom Properties' from the dropdown list.</li> <li>Click on the Choose Option To Add button.</li> <li>Enter <code>name</code> in the Key field.</li> <li>Enter the name of the customer in the Value field.</li> <li>Click on Execute Node to run the node.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.customerIo/#3-customerio1-node-add-segment","title":"3. CustomerIo1 node (add: segment)","text":"<ol> <li>Select the credentials that you entered in the previous Customer.io node.</li> <li>Select 'Segment' from the Resource field.</li> <li>Click on the gears icon next to the Customer IDs field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; CustomerIo &gt; Output Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$node[\"CustomerIo\"].json[\"id\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.deepL/","title":"DeepL","text":"<p>DeepL is a machine translation service that allows you to translate text to different languages.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.deepL/#basic-operations","title":"Basic Operations","text":"<ul> <li>Language<ul> <li>Translate data</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.deepL/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to translate cocktail instructions to French. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Start - HTTP Request - DeepL</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.deepL/#1-start-node","title":"1. Start node","text":"<p>The Start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.deepL/#2-http-request-node-get","title":"2. HTTP Request node (GET)","text":"<p>This node will make a GET request to the API <code>https://www.thecocktaildb.com/api/json/v1/1/random.php</code> to fetch a random cocktail. This information gets passed on to the next node in the workflow.</p> <ol> <li>Enter <code>https://www.thecocktaildb.com/api/json/v1/1/random.php</code> in the URL field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node makes a GET request to the API and returns information about a random cocktail.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.deepL/#3-deepl-node-translate-language","title":"3. DeepL node (translate: language)","text":"<p>This node will translate the cocktail instructions that we got from the previous node to French. To translate the instructions in your language, select your language instead.</p> <ol> <li> <p>First of all, you'll have to enter credentials for the DeepL node. You can find out how to do that here.</p> </li> <li> <p>Click on the gears icon next to the Text field and click on Add Expression.</p> </li> <li>Select the following in the Variable Selector section: Current Nodes &gt; Input Data &gt; JSON &gt; drinks &gt; [item: 0] &gt; strInstructions. You can also add the following expression: <code>{{$json[\"drinks\"][0][\"strInstructions\"]}}</code>.</li> <li>Select 'French' from the Target Language dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node translates the instructions of the cocktail to French.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.demio/","title":"Demio","text":"<p>Demio provides a simple, no-download webinar experience and all the marketing tools you need to generate better results.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.demio/#basic-operations","title":"Basic Operations","text":"<ul> <li>Event<ul> <li>Get an event</li> <li>Get all events</li> <li>Register someone to an event</li> </ul> </li> <li>Report<ul> <li>Get an event report</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.demio/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to register your audience to an event on Demio via a Typeform submission. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Typeform Trigger - Demio</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.demio/#1-typeform-trigger-node","title":"1. Typeform Trigger node","text":"<p>This node will trigger the workflow when a form response is submitted.</p> <p>This example workflow uses a Typeform to collect name and email address. Create a form exactly like this for the example workflow. Below are the questions and their question types for the form.</p> Question Type Let's start with your name. Short Text What's your email address? Email <ol> <li>First of all, you'll have to enter credentials for the Typeform Trigger node. You can find out how to do that here.</li> <li>Select your form from the Form dropdown list.</li> <li>Click on Execute Node to run the workflow.</li> </ol> <p>In the screenshot below, you will notice that the Typeform Trigger node triggers the workflow and returns the response submitted by a user.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.demio/#2-demio-node-register-event","title":"2. Demio node (register: event)","text":"<p>This node will use the information from the previous node to register the user for an event on Demio. If you don't have an event on Demio, make sure to create one.</p> <ol> <li>First of all, you'll have to enter credentials for the Demio node. You can find out how to enter credentials for this node here.</li> <li>Select 'Register' from the Operation dropdown list.</li> <li>Select the event from the Event ID dropdown list.</li> <li> <p>Click on the gears icon next to the First Name field and click on Add Expression.</p> </li> <li> <p>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; Let's start with your name. You can also add the following expression: <code>{{$json[\"Let's start with your name.\"]}}</code>.</p> </li> <li>Click on the gears icon next to the Email field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; What's your email address? You can also add the following expression: <code>{{$json[\"What's your email address?\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node registers the user for an event on Demio.</p> <p></p> <p> Activate workflow for production</p> <p>This example workflow uses the Typeform Trigger node. You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered when a new form is submitted.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.dhl/","title":"DHL","text":"<p>The DHL Shipment Tracking provides shipment status reports for services provided by DPDHL under these brand names:</p> <ul> <li>Post &amp; Parcel Germany</li> <li>DHL Global Forwarding</li> <li>DHL Freight</li> <li>DHL Express</li> <li>DHL Supply Chain</li> <li>DHL eCommerce Solutions (Asia-Pacific, US, Canada, EU)</li> </ul> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.dhl/#basic-operations","title":"Basic Operations","text":"<ul> <li>Shipment<ul> <li>Get Tracking Details</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.discord/","title":"Discord","text":"<p>Discord is a voice, video, and text communications platform for groups. Discord allows users to programmatically send messages using webhooks.</p> <p>\ud83d\udd11 Credentials</p> <p>The Discord node does not require authentication, but you must have access to a channel's settings to use webhooks. You can find out how to create a webhook in Discord here.</p>","tags":["Workflow\u00b2","Discord","Basic Operations","Example Usage"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.discord/#basic-operations","title":"Basic Operations","text":"<ul> <li>Send messages in a Discord Channel</li> </ul>","tags":["Workflow\u00b2","Discord","Basic Operations","Example Usage"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.discord/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to send a message to a Discord channel using webhooks. You can also find the workflow on this website. This example usage workflow would use the following two nodes. - Start - Discord</p> <p>The final workflow should look like the following image.</p> <p></p>","tags":["Workflow\u00b2","Discord","Basic Operations","Example Usage"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.discord/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>","tags":["Workflow\u00b2","Discord","Basic Operations","Example Usage"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.discord/#2-discord-node","title":"2. Discord node","text":"<ol> <li>First of all, you'll have to create a webhook for the Discord node. You can find out how to do that here.</li> <li>Paste your webhook into the Webhook URL field.</li> <li>Enter your message in the Text field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>","tags":["Workflow\u00b2","Discord","Basic Operations","Example Usage"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.discourse/","title":"Discourse","text":"<p>Discourse is an open-source discussion platform that can be used as a mailing list, discussion forum, long-form chat room, and more.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.discourse/#basic-operations","title":"Basic Operations","text":"<ul> <li>Category<ul> <li>Create a category</li> <li>Get all categories</li> <li>Update a category</li> </ul> </li> <li>Group<ul> <li>Create a group</li> <li>Get a group</li> <li>Get all groups</li> <li>Update a group</li> </ul> </li> <li>Post<ul> <li>Create a post</li> <li>Get a post</li> <li>Get all posts</li> <li>Update a post</li> </ul> </li> <li>User<ul> <li>Create a user</li> <li>Get a user</li> <li>Get all users</li> </ul> </li> <li>User Group<ul> <li>Create a user to group</li> <li>Remove user from group</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.discourse/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to create, update, and get a post using the Discourse node. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Start - Discourse</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.discourse/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.discourse/#2-discourse-node-create-post","title":"2. Discourse node (create: post)","text":"<p>This node will create a post under the <code>Lounge</code> category. If you want to create a post under a different category, select that category instead.</p> <ol> <li>First of all, you'll have to enter credentials for the Discourse node. You can find out how to do that here.</li> <li>Enter a title for the post in the Title field.</li> <li>Enter the content of the post in the Content field.</li> <li>Click on Add Field and select 'Category ID' from the dropdown list.</li> <li>Select 'Lounge' from the Category ID dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node creates a new topic under the category <code>Lounge</code>.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.discourse/#3-discourse1-node-update-post","title":"3. Discourse1 node (update: post)","text":"<p>This node will update the content of the post that we created in the previous node.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Update' from the Operations dropdown list.</li> <li>Click on the gears icon next to the Post ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$json[\"id\"]}}</code>.</li> <li>Enter the updated content in the Content field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node updates the content of the post that we created in the previous node.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.discourse/#4-discourse2-node-get-post","title":"4. Discourse2 node (get: post)","text":"<p>This node will retrieve the post that we updated previously.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Get' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Post ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$json[\"id\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you notice that the node retrieves the post that we created earlier.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.disqus/","title":"Disqus","text":"<p>Disqus is a worldwide blog comment hosting service for web sites and online communities that use a networked platform. The company's platform includes various features, such as social integration, social networking, user profiles, spam and moderation tools, analytics, email notifications, and mobile commenting.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.disqus/#basic-operations","title":"Basic Operations","text":"<ul> <li>Forum<ul> <li>Return forum details</li> <li>Return a list of categories within a forum</li> <li>Return a list of threads within a forum</li> <li>Return a list of posts within a forum</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.disqus/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to get details of a forum in Disqus. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - Disqus</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.disqus/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.disqus/#2-disqus-node","title":"2. Disqus node","text":"<ol> <li>First of all, you'll have to enter credentials for the Disqus node. You can find out how to do that here.</li> <li>Enter the name of the forum in the Forum name field. For example, I entered <code>hackernoon</code>.</li> <li>Click on Execute Node to run the workflow.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.drift/","title":"Drift","text":"<p>Drift is a tool for managing conversations, engaging with customers, and collaborating with teammates.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.drift/#basic-operations","title":"Basic Operations","text":"<ul> <li>Contact<ul> <li>Create a contact</li> <li>Get custom attributes</li> <li>Delete a contact</li> <li>Get a contact</li> <li>Update a contact</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.drift/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to create a contact in Drift. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - Drift</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.drift/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.drift/#2-drift-node","title":"2. Drift node","text":"<ol> <li>First of all, you'll have to enter credentials for the Drift node. You can find out how to do that here.</li> <li>Enter the email of the contact in the Email field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.dropbox/","title":"Dropbox","text":"<p>Dropbox is a cloud-based file storage and sharing service, accessible through multiple devices.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.dropbox/#basic-operations","title":"Basic Operations","text":"<ul> <li>File<ul> <li>Copy a file</li> <li>Delete a file</li> <li>Download a file</li> <li>Move a file</li> <li>Upload a file</li> </ul> </li> <li>Folder<ul> <li>Copy a folder</li> <li>Create a folder</li> <li>Delete a folder</li> <li>Return the files and folders in a given folder</li> <li>Move a folder</li> </ul> </li> <li>Search<ul> <li>Query</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.dropbox/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to create a folder in Dropbox, upload a file into that folder, and list the contents of the folder. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Start - Dropbox - HTTP Request</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.dropbox/#1-start-node","title":"1. Start node","text":"<p>The Start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.dropbox/#2-dropbox-node-create-folder","title":"2. Dropbox node (create: folder)","text":"<ol> <li>First of all, you'll have to enter credentials for the Dropbox node. You can find out how to do that here.</li> <li>Select 'Folder' from the Resource dropdown list.</li> <li>Enter the name of the new folder in the Folder field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.dropbox/#3-http-request-node-get","title":"3. HTTP Request node (GET)","text":"<ol> <li>Enter <code>https://n8n.io/n8n-logo.png</code> in the URL field.</li> <li>Select 'File' from the Response Format dropdown list.</li> <li>Click on Execute Node to run the workflow.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.dropbox/#4-dropbox1-node-upload-file","title":"4. Dropbox1 node (upload: file)","text":"<ol> <li>Select the credentials that you entered in the Dropbox node.</li> <li>Enter the path of the Dropbox folder you created in the previous steps along with a file name in the File Path field.</li> <li>Set the Binary Data toggle to true.</li> <li>Click on Execute Node to run the node.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.dropbox/#5-dropbox2-node-list-folder","title":"5. Dropbox2 node (list: folder)","text":"<ol> <li>Select the credentials that you entered in the Dropbox node.</li> <li>Select 'Folder' from the Resource dropdown list.</li> <li>Select 'List' from the Operation dropdown list.</li> <li>Enter the path of the Dropbox folder you created in the previous steps in the Folder Path field.</li> <li>Click on Execute Node to run the node.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.dropcontact/","title":"Dropcontact","text":"<p>Dropcontact is an email finder platform that allows you to automatically find, verify and validate nominative emails and enrich your contacts with all efficient information to contact him.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.dropcontact/#basic-operations","title":"Basic Operations","text":"<p>Contact - Enrich - Fetch Request</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.dropcontact/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to find email and enrich your contact from a Google Sheet and add them to Lemlist. You can also find the workflow on Workflow\u00b2.io.</p> <p>This example usage workflow would use the following nodes. - Start - Google Sheets node - Dropcontact node - Lemlist node</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.dropcontact/#1-start-node","title":"1. Start Node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.dropcontact/#2-google-sheet-node","title":"2. Google Sheet node","text":"<p>This node will list all the records from Google Sheet. Create a sheet like this in your Google Drive.</p> <ol> <li> <p>First of all, you'll have to enter credentials for the Google Sheet node. You can find out how to do that here.</p> </li> <li> <p>Select the 'Sheet' option from the Ressource dropdown list.</p> </li> <li>Select the 'Read' option from the Operation dropdown list.</li> <li>Enter the Sheet ID in the Sheet ID field. Your Google Sheet ID is available in the URL <code>https://docs.google.com/spreadsheets/d/{spreadsheetId}/edit</code></li> <li>In the Range field, enter <code>A:K</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns the information of the leads.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.dropcontact/#3-dropontact-node","title":"3. Dropontact node","text":"<p>This node will find the verified email address and enrich the contact.</p> <ol> <li> <p>First of all, you'll have to enter credentials for the Dropcontact node. You can find out how to do that here.</p> </li> <li> <p>Select 'Contact' from the Resource dropdown list.</p> </li> <li>Select 'Enrich' from the Operation dropdown list.</li> <li>Click on Add Field and select 'Company Name'.</li> <li>Click on the gears icon next to the Company Name field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Node &gt; Input Data &gt; JSON &gt; fields &gt; companyName . You can also add the following expression: <code>{{$json[\"fields\"][\"companyName\"]}}</code>.</li> <li>Click on Add Field and select 'First Name'.</li> <li>Click on the gears icon next to the First Name field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Node &gt; Input Data &gt; JSON &gt; fields &gt; firstName . You can also add the following expression: <code>{{$json[\"fields\"][\"firstName\"]}}</code>.</li> <li>Click on Add Field and select 'Full Name'.</li> <li>Click on the gears icon next to the Full Name field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Node &gt; Input Data &gt; JSON &gt; fields &gt; fullName . You can also add the following expression: <code>{{$json[\"fields\"][\"fullName\"]}}</code>.</li> <li>Click on Add Field and select 'Last Name'.</li> <li>Click on the gears icon next to the Last Name field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Node &gt; Input Data &gt; JSON &gt; fields &gt; lastName . You can also add the following expression: <code>{{$json[\"fields\"][\"lastName\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the Dropcontact node has enriched your data.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.dropcontact/#4-lemlist-node","title":"4. Lemlist node","text":"<p>This node will create new leads for a campaign in Lemlist.</p> <ol> <li>First of all, you'll have to enter credentials for the Lemlist node. You can find out how to do that here.</li> <li>Select 'Lead' from the Resource dropdown list.</li> <li>Select a campaign from the Campaign ID dropdown list.</li> <li> <p>Click on the gears icon next to the Email field and click on 'Add Expression'.</p> </li> <li> <p>Select the following in the Variable Selector section: Dropcontact &gt; Input Data &gt; JSON &gt; fields &gt; email &gt; [Item: 0] &gt; email. You can also add the following expression: <code>{{$json[\"email\"][0][\"email\"]}}</code></p> </li> <li>Click on the Add Field button and select 'First Name'.</li> <li>Click on the gears icon next to the First Name field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Node &gt; Input Data &gt; JSON &gt; fields &gt; first_name . You can also add the following expression: <code>{{$json[\"fields\"][\"first_name\"]}}</code>.</li> <li>Click on the Add Field button and select 'Last Name'.</li> <li>Click on the gears icon next to the Last Name field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Node &gt; Input Data &gt; JSON &gt; fields &gt; last_name . You can also add the following expression: <code>{{$json[\"fields\"][\"last_name\"]}}</code>.</li> <li>Click on the Add Field button and select 'Company Name'.</li> <li>Click on the gears icon next to the Company Name field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Node &gt; Input Data &gt; JSON &gt; fields &gt; company_name . You can also add the following expression: <code>{{$json[\"fields\"][\"company_name\"]}}</code>.</li> <li>Click on the Add Field button and select 'Deduplicate'.</li> <li>Toggle Deduplicate to <code>true</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node creates new enriched leads in Lemlist.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.egoi/","title":"E-goi","text":"<p>E-goi is an omnichannel marketing automation platform.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.egoi/#basic-operations","title":"Basic Operations","text":"<p>Contact - Create a member - Get a member - Get all members - Update a member</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.egoi/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to create, update, and get a contact using the E-goi node. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Start - E-goi</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.egoi/#1-start-node","title":"1. Start node","text":"<p>The Start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.egoi/#2-e-goi-node-create-contact","title":"2. E-goi node (create: contact)","text":"<p>This node will create a new contact in E-goi. We will add the first name of the contact along with their email.</p> <ol> <li>First of all, you'll have to enter credentials for the E-goi node. You can find out how to do that here.</li> <li>Select a list from the List ID field.</li> <li>Enter the email address in the Email field.</li> <li>Click on the Add Field button and select 'First Name' from the dropdown list.</li> <li>Enter the name of the contact in the First Name field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node creates a new contact with their first name and email.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.egoi/#3-e-goi1-node-update-contact","title":"3. E-goi1 node (update: contact)","text":"<p>This node will update the information of the contact that we created in the previous node. We will update the first name of the contact using this node.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Update' from the Operation dropdown list.</li> <li>Click on the gears icon next to the List ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; E-goi &gt; Parameters &gt; list. You can also add the following expression: <code>{{$node[\"E-goi\"].parameter[\"list\"]}}</code>.</li> <li>Click on the gears icon next to the Contact ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; E-goi &gt; Output Data &gt; JSON &gt; base &gt; contact_id. You can also add the following expression: <code>{{$node[\"E-goi\"].json[\"base\"][\"contact_id\"]}}</code>.</li> <li>Click on the Add Field button and select 'First Name' from the dropdown list.</li> <li>Enter the first name of the contact in the First Name field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node updates the information of the contact that we created in the previous node. Here, the node has updated the first name of the contact.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.egoi/#3-e-goi2-node-get-contact","title":"3. E-goi2 node (get: contact)","text":"<p>This node will return the information of the contact that we created using the E-goi node.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Get' from the Operation dropdown list.</li> <li>Click on the gears icon next to the List ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; E-goi1 &gt; Parameters &gt; list. You can also add the following expression: <code>{{$node[\"E-goi1\"].parameter[\"list\"]}}</code>.</li> <li>Click on the gears icon next to the Contact ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; E-goi1 &gt; Output Data &gt; JSON &gt; base &gt; contact_id. You can also add the following expression: <code>{{$node[\"E-goi\"].json[\"base\"][\"contact_id\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns the information of the contact that we created using the E-goi node.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.elasticSecurity/","title":"Elastic Security","text":"<p>Elastic Security helps security teams stop threats and at cloud scale, assisting with prevention, detection, and response.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.elasticSecurity/#basic-operations","title":"Basic operations","text":"<ul> <li>Case<ul> <li>Create a case</li> <li>Delete a case</li> <li>Get a case</li> <li>Retrieve all cases</li> <li>Retrieve a summary of all case activity</li> <li>Update a case</li> </ul> </li> <li>Case Comment<ul> <li>Add a comment to a case</li> <li>Get a case comment</li> <li>Retrieve all case comments</li> <li>Remove a comment from a case</li> <li>Update a comment in a case</li> </ul> </li> <li>Case Tag<ul> <li>Add a tag to a case</li> <li>Remove a tag from a case</li> </ul> </li> <li>Connector<ul> <li>Create a connector</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.elasticsearch/","title":"Elasticsearch","text":"<p>Elasticsearch is a distributed, free and open search and analytics engine for all types of data, including textual, numerical, geospatial, structured, and unstructured.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.elasticsearch/#basic-operations","title":"Basic operations","text":"<ul> <li>Document<ul> <li>Create a document</li> <li>Delete a document</li> <li>Get a document</li> <li>Get all documents</li> <li>Update a document</li> </ul> </li> <li>Index<ul> <li>Create</li> <li>Delete</li> <li>Get</li> <li>Get All</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.elasticsearch/#example-usage","title":"Example usage","text":"<p>This workflow allows you to get all documents for a selected index. This example usage workflow uses the following nodes. - Start - Elasticsearch</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.elasticsearch/#1-start-node","title":"1. Start node","text":"<p>The Start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.elasticsearch/#2-elasticsearch-node","title":"2. Elasticsearch node","text":"<ol> <li>First enter credentials for the Elasticsearch node. You can find out how to do that here.</li> <li>Select Document from the Resource dropdown.</li> <li>Select Get All from the Operation dropdown.</li> <li>Enter the ID of your desired index in the Index ID field.</li> <li>Click on Execute Node to run the node.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.emelia/","title":"Emelia","text":"<p>Emelia is a cold-mailing tool.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.emelia/#basic-operations","title":"Basic Operations","text":"<ul> <li>Campaign<ul> <li>Add Contact</li> <li>Create</li> <li>Get</li> <li>Get All</li> <li>Pause</li> <li>Start</li> </ul> </li> <li>Contact List<ul> <li>Add</li> <li>Get All</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.emelia/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to create a campaign, add a contact, and get the campaign from Emelia. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Start - Emelia</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.emelia/#1-start-node","title":"1. Start node","text":"<p>The Start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.emelia/#2-emelia-node-campaign-create","title":"2. Emelia node (campaign: create)","text":"<p>This node will create a new campaign in Emelia.</p> <ol> <li>First of all, you'll have to enter credentials for the Emelia node. You can find out how to do that here.</li> <li>Select 'Create' from the Operation dropdown list.</li> <li>Enter the campaign name in the Campaign Name field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node creates a new campaign.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.emelia/#3-emelia1-node-campaign-addcontact","title":"3. Emelia1 node (campaign: addContact)","text":"<p>This node will add a contact to the campaign that we created in the previous node.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Add Contact' from the Operation dropdown list.</li> <li>Select the campaign from the Campaign ID dropdown list.</li> <li>Enter the contact's email address in the Contact Email field.</li> <li>Click on the Add Field button and select 'First Name'.</li> <li>Enter the first name in the First Name field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node adds the contact to the campaign that we created in the previous node.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.emelia/#4-emelia2-node-campaign-get","title":"4. Emelia2 node (campaign: get)","text":"<p>This node will get the information about the campaign that we created earlier.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Get' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Campaign ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Emelia &gt; Output Data &gt; JSON &gt; _id. You can also add the following expression: <code>{{$node[\"Emelia\"].json[\"_id\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns the information of the campaign.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.erpNext/","title":"ERPNext","text":"<p>ERPNext is an open-source integrated Enterprise Resource Planning software. It is a generic ERP software used by manufacturers, distributors, and services companies.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.erpNext/#basic-operations","title":"Basic Operations","text":"<p>Document - Create a document - Delete a document - Retrieve a document - Retrieve all documents - Update a document</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.erpNext/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to create, update, and retrieve a document from ERPNext. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Start - ERPNext</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.erpNext/#1-start-node","title":"1. Start node","text":"<p>The Start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.erpNext/#2-erpnext-node-document-create","title":"2. ERPNext node (document: create)","text":"<p>This node will create a new document in ERPNext.</p> <ol> <li>First of all, you'll have to enter credentials for the ERPNext node. You can find out how to do that here.</li> <li>Select 'Item' from the DocType dropdown list.</li> <li>Click on the Add Property button.</li> <li>Select 'Item Name' from the Field dropdown list.</li> <li>Enter <code>item 1</code> in the Value field.</li> <li>Click on the Add Property button.</li> <li>Select 'Item Code' from the Field dropdown list.</li> <li>Enter <code>item-1</code> in the Value field.</li> <li>Click on the Add Property button.</li> <li>Select 'Item Group' from the Field dropdown list.</li> <li>Enter <code>Products</code> in the Value field. Note: Make sure that the item group exists in your ERPNext account.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node creates a new item with the name <code>item 1</code>.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.erpNext/#3-erpnext1-node-document-addcontact","title":"3. ERPNext1 node (document: addContact)","text":"<p>This node will add the <code>Item Tax</code> property to the item that we created in the previous node.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Update' from the Operation dropdown list.</li> <li>Select 'Item' from the DocType dropdown list.</li> <li>Click on the gears icon next to the Item Name field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; name. You can also add the following expression: <code>{{$json[\"name\"]}}</code>.</li> <li>Click on the Add Property button.</li> <li>Select 'Item Tax' from the Field dropdown list.</li> <li>Enter <code>5</code> in the Value field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node adds the Item Tax property to the item that we created in the previous node.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.erpNext/#4-erpnext2-node-document-get","title":"4. ERPNext2 node (document: get)","text":"<p>This node will get the information about the item that we created earlier.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Get' from the Operation dropdown list.</li> <li>Select 'Item' from the DocType dropdown list.</li> <li>Click on the gears icon next to the Item Name field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; name. You can also add the following expression: <code>{{$json[\"name\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns the information of the item.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.facebookGraphAPI/","title":"Facebook Graph API","text":"<p>Facebook is a social networking site that makes it easy to connect and share with family and friends online.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.facebookGraphAPI/#basic-operations","title":"Basic operations","text":"<p>Default - GET - POST - DELETE</p> <p>Video Uploads - GET - POST - DELETE</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.facebookGraphAPI/#parameters","title":"Parameters","text":"<ul> <li>Host URL: The host URL for the request. The following options are available:<ul> <li>Default: Requests are passed to the <code>graph.facebook.com</code> host URL. Used for the majority of requests.</li> <li>Video: Requests are passed to the <code>graph-video.facebook.com</code> host URL. Used for video upload requests only.</li> </ul> </li> <li>HTTP Request Method: The method to be used for this request, from the following options:<ul> <li>GET</li> <li>POST</li> <li>DELETE</li> </ul> </li> <li>Graph API Version: The version of the Facebook Graph API to be used for this request.</li> <li>Node: The node on which to operate, for example <code>/&lt;page-id&gt;/feed</code>. Read more about it in the official Facebook Developer documentation.</li> <li>Edge: Edge of the node on which to operate. Edges represent collections of objects which are attached to the node.</li> <li>Ignore SSL Issues: Toggle to still download the response even if SSL certificate validation is not possible.</li> <li>Send Binary Data: Available for <code>POST</code> operations. If enabled binary data is sent as the body. Requires setting the following:<ul> <li>Binary Property: Name of the binary property which contains the data for the file to be uploaded.</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.facebookGraphAPI/#example-usage","title":"Example usage","text":"<p>This workflow allows you to retrieve the first and last name of a profile on Facebook. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - Facebook Graph API</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.facebookGraphAPI/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.facebookGraphAPI/#2-facebook-graph-api-node","title":"2. Facebook Graph API node","text":"<ol> <li>First of all, you'll have to enter credentials for the Facebook Graph API node. You can find out how to do that here.</li> <li>Enter <code>me</code> in the Node field.</li> <li>Click on the Add Option button and select 'Fields' from the dropdown list.</li> <li>Click on the Add Field button and enter <code>first_name</code> in the Name field.</li> <li>Click on the Add Field button and enter <code>last_name</code> in the Name field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.filemaker/","title":"FileMaker","text":"<p>FileMaker is an integrated Enterprise Resource Planning software. It is a generic ERP software used by manufacturers, distributors, and service companies.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.filemaker/#basic-operations","title":"Basic Operations","text":"<ul> <li>Find Records</li> <li>Get Records</li> <li>Get Records by Id</li> <li>Perform Script</li> <li>Create Record</li> <li>Edit Record</li> <li>Duplicate Record</li> <li>Delete Record</li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.filemaker/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to create, update, and retrieve a record from FileMaker. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Start - FileMaker</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.filemaker/#1-start-node","title":"1. Start node","text":"<p>The Start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.filemaker/#2-filemaker-node","title":"2. FileMaker node","text":"<p>This node will create a new record in FileMaker.</p> <ol> <li>First of all, you'll have to enter credentials for the FileMaker node. You can find out how to do that here.</li> <li>Select 'Create Record' from the Action dropdown list.</li> <li>Select a layout from the Layout dropdown list.</li> <li>Click on the Add Field button.</li> <li>Select a field from the Field dropdown list.</li> <li>Enter a value in the Value field.</li> <li>Click on the Add field button.</li> <li>Select a field from the Field dropdown list.</li> <li>Enter a value in the Value field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node creates a new record in FileMaker.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.filemaker/#3-filemaker1-node","title":"3. FileMaker1 node","text":"<p>This node will add a new field to the record that we created in the previous node.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Edit Record' from the Action dropdown list.</li> <li>Select a layout from the Layout dropdown list.</li> <li>Click on the gears icon next to the Record Id field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; response &gt; recordId. You can also add the following expression: <code>{{$json[\"response\"][\"recordId\"]}}</code>.</li> <li>Click on the gears icon next to the Mod Id field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; response &gt; modId. You can also add the following expression: <code>{{$json[\"response\"][\"modId\"]}}</code>.</li> <li>Click on the Add field button.</li> <li>Select a field from the Field dropdown list.</li> <li>Enter a value in the Value field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node adds the <code>address_country</code> field to the record that we created in the previous node.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.filemaker/#4-filemaker2-node","title":"4. FileMaker2 node","text":"<p>This node will get the information about the record that we created earlier.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Get Records by Id' from the Action dropdown list.</li> <li>Select a layout from the Layout dropdown list.</li> <li>Click on the gears icon next to the Record Id field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; FileMaker &gt; Output Data &gt; JSON &gt; response &gt; recordId. You can also add the following expression: <code>{{$node[\"FileMaker\"].json[\"response\"][\"recordId\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns the information of the record.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.flow/","title":"Flow","text":"<p>Flow is modern task and project management software for teams. It brings together tasks, projects, timelines, and conversations, and integrates with a lot of tools.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.flow/#basic-operations","title":"Basic Operations","text":"<ul> <li>Task<ul> <li>Create a new task</li> <li>Update a task</li> <li>Get a task</li> <li>Get all the tasks</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.flow/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to get all the tasks in Flow. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - Flow</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.flow/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.flow/#2-flow-node","title":"2. Flow node","text":"<ol> <li>First of all, you'll have to enter credentials for the Flow node. You can find out how to do that here.</li> <li>Select the 'Get All' option from the Operation dropdown list.</li> <li>Toggle the Return All slider to true.</li> <li>Click on Execute Node to run the workflow.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.freshdesk/","title":"Freshdesk","text":"<p>Freshdesk is a customer support software also classified as a ticketing software or a helpdesk that allows companies to effectively manage their customer care and support function.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.freshdesk/#basic-operations","title":"Basic Operations","text":"<ul> <li>Contact<ul> <li>Create a new contact</li> <li>Delete a contact</li> <li>Get a contact</li> <li>Get all contacts</li> <li>Update a contact</li> </ul> </li> <li>Ticket<ul> <li>Create a new ticket</li> <li>Delete a ticket</li> <li>Get a ticket</li> <li>Get all tickets</li> <li>Update a ticket</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.freshdesk/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to create a ticket on Freshdesk. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - Freshdesk</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.freshdesk/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.freshdesk/#2-freshdesk-node","title":"2. Freshdesk node","text":"<ol> <li>First of all, you'll have to enter credentials for the Freshdesk node. You can find out how to do that here.</li> <li>Select 'Email' from the Requester Identification dropdown.</li> <li>Enter the requester email in the Value field.</li> <li>Select 'Open' from the Status Dropdown.</li> <li>Click on Execute Node to run the workflow.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.freshservice/","title":"Freshservice","text":"<p>Freshservice is a cloud-based IT Service Management solution.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.freshservice/#basic-operations","title":"Basic operations","text":"<ul> <li>Agent<ul> <li>Create an agent</li> <li>Delete an agent</li> <li>Retrieve an agent</li> <li>Retrieve all agents</li> <li>Update an agent</li> </ul> </li> <li>Agent Group<ul> <li>Create an agent group</li> <li>Delete an agent group</li> <li>Retrieve an agent group</li> <li>Retrieve all agent groups</li> <li>Update an agent group</li> </ul> </li> <li>Agent Role<ul> <li>Retrieve an agent role</li> <li>Retrieve all agent roles</li> </ul> </li> <li>Announcement<ul> <li>Create an announcement</li> <li>Delete an announcement</li> <li>Retrieve an announcement</li> <li>Retrieve all announcements</li> <li>Update an announcement</li> </ul> </li> <li>Asset Type<ul> <li>Create an asset type</li> <li>Delete an asset type</li> <li>Retrieve an asset type</li> <li>Retrieve all asset types</li> <li>Update an asset type</li> </ul> </li> <li>Change<ul> <li>Create a change</li> <li>Delete a change</li> <li>Retrieve a change</li> <li>Retrieve all changes</li> <li>Update a change</li> </ul> </li> <li>Department<ul> <li>Create a department</li> <li>Delete a department</li> <li>Retrieve a department</li> <li>Retrieve all departments</li> <li>Update a department</li> </ul> </li> <li>Location<ul> <li>Create a location</li> <li>Delete a location</li> <li>Retrieve a location</li> <li>Retrieve all locations</li> <li>Update a location</li> </ul> </li> <li>Problem<ul> <li>Create a problem</li> <li>Delete a problem</li> <li>Retrieve a problem</li> <li>Retrieve all problems</li> <li>Update a problem</li> </ul> </li> <li>Product<ul> <li>Create a product</li> <li>Delete a product</li> <li>Retrieve a product</li> <li>Retrieve all products</li> <li>Update a product</li> </ul> </li> <li>Release<ul> <li>Create a release</li> <li>Delete a release</li> <li>Retrieve a release</li> <li>Retrieve all releases</li> <li>Update a release</li> </ul> </li> <li>Requester<ul> <li>Create a requester</li> <li>Delete a requester</li> <li>Retrieve a requester</li> <li>Retrieve all requesters</li> <li>Update a requester</li> </ul> </li> <li>Requester Group<ul> <li>Create a requester group</li> <li>Delete a requester group</li> <li>Retrieve a requester group</li> <li>Retrieve all requester groups</li> <li>Update a requester group</li> </ul> </li> <li>Software<ul> <li>Create a software application</li> <li>Delete a software application</li> <li>Retrieve a software application</li> <li>Retrieve all software applications</li> <li>Update a software application</li> </ul> </li> <li>Ticket<ul> <li>Create a ticket</li> <li>Delete a ticket</li> <li>Retrieve a ticket</li> <li>Retrieve all tickets</li> <li>Update a ticket</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.freshservice/#example-usage","title":"Example usage","text":"<p>This workflow allows you to fetch all Tickets with an Urgent status in Freshservice. This example usage workflow would use the following two nodes:</p> <ul> <li>Start</li> <li>Freshservice</li> </ul> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.freshservice/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.freshservice/#2-freshservice-node","title":"2. Freshservice node","text":"<ol> <li>First enter your credentials for the Freshservice node. You can find out how to do that here.</li> <li>Select Ticket from the Resource dropdown.</li> <li>Select Get All from the Operation dropdown.</li> <li>Enable the Return All toggle.</li> <li>From the Add Filter dropdown select Priority.</li> <li>From the new Priority dropdown select Urgent.</li> <li>Click on Execute Node to run the workflow.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.freshworksCrm/","title":"Freshworks CRM","text":"<p>Freshworks CRM is a cloud-based customer relationship management (CRM) solution that helps businesses manage their interactions with existing and potential customers.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.freshworksCrm/#basic-operations","title":"Basic operations","text":"<ul> <li>Account<ul> <li>Create an account</li> <li>Delete an account</li> <li>Retrieve an account</li> <li>Retrieve all accounts</li> <li>Update an account</li> </ul> </li> <li>Appointment<ul> <li>Create an appointment</li> <li>Delete an appointment</li> <li>Retrieve an appointment</li> <li>Retrieve all appointments</li> <li>Update an appointment</li> </ul> </li> <li>Contact<ul> <li>Create a contact</li> <li>Delete a contact</li> <li>Retrieve a contact</li> <li>Retrieve all contacts</li> <li>Update a contact</li> </ul> </li> <li>Deal<ul> <li>Create a deal</li> <li>Delete a deal</li> <li>Retrieve a deal</li> <li>Retrieve all deals</li> <li>Update a deal</li> </ul> </li> <li>Note<ul> <li>Create a note</li> <li>Delete a note</li> <li>Update a note</li> </ul> </li> <li>Sales Activity<ul> <li>Retrieve a sales activity</li> <li>Retrieve all sales activities</li> </ul> </li> <li>Task<ul> <li>Create a task</li> <li>Delete a task</li> <li>Retrieve a task</li> <li>Retrieve all tasks</li> <li>Update a task</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.freshworksCrm/#example-usage","title":"Example usage","text":"<p>This workflow allows you to fetch all Contacts in Freshworks CRM that you have yet to contact. This example usage workflow would use the following two nodes:</p> <ul> <li>Start</li> <li>Freshworks CRM</li> </ul> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.freshworksCrm/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.freshworksCrm/#2-freshworks-crm-node","title":"2. Freshworks CRM node","text":"<ol> <li>First enter your credentials for the Freshworks CRM node. You can find out how to do that here.</li> <li>Select Contact from the Resource dropdown.</li> <li>Select Get All from the Operation dropdown.</li> <li>Select Never Contacted from the View dropdown.</li> <li>Click on Execute Node to run the workflow.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.gSuiteAdmin/","title":"G Suite Admin","text":"<p>G Suite Admin helps you administer domain and app resources, create reports, and manage subscriptions and alerts for your G Suite organization.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.gSuiteAdmin/#basic-operations","title":"Basic Operations","text":"<ul> <li>Group<ul> <li>Create a group</li> <li>Delete a group</li> <li>Get a group</li> <li>Get all groups</li> <li>Update a group</li> </ul> </li> <li>User<ul> <li>Create a user</li> <li>Delete a user</li> <li>Get a user</li> <li>Get all users</li> <li>Update a user</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.gSuiteAdmin/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to create, update, and get a user using the G Suite Admin node. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Start - G Suite Admin</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.gSuiteAdmin/#1-start-node","title":"1. Start node","text":"<p>The Start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.gSuiteAdmin/#2-g-suite-admin-node-create-user","title":"2. G Suite Admin node (create: user)","text":"<p>This node will create a user in G Suite with the following information:  first name, last name, password, domain, and username.</p> <ol> <li>First of all, you'll have to enter credentials for the G Suite Admin node. You can find out how to do that here.</li> <li>Enter the first name of the user in the First Name field.</li> <li>Enter the last name of the user in the Last Name field.</li> <li>Enter a password for the user in the Password field.</li> <li>Select the domain from the Domain dropdown list.</li> <li>Enter the username for the user in the Username field.</li> <li>Click on Execute Node to run the workflow.</li> </ol> <p>In the screenshot below, you will observe that the node has created a new user with the first name <code>Nathan</code>, last name <code>Nat</code>, domain <code>n8n.io</code>, username <code>nat</code>, and a password, in G Suite.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.gSuiteAdmin/#3-g-suite-admin1-node-update-user","title":"3. G Suite Admin1 node (update: user)","text":"<p>This node will get the User ID from the previous node and update the user's last name to <code>Nate</code>.</p> <ol> <li>Select the credentials that you entered in the previous G Suite Admin node.</li> <li>Select 'Update' from the Operation dropdown list.</li> <li>Click on the gears icon next to the User ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; G Suite Admin &gt; Output Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$node[\"G Suite Admin\"].json[\"id\"]}}</code>.</li> <li>Click on the Add Field button and select 'Last Name' from the dropdown list.</li> <li>Enter the last name in the Last Name field.</li> <li>Click on Execute Node to run the workflow.</li> </ol> <p>In the screenshot below, you will notice that the node has updated the last name of the user that we created in the previous node.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.gSuiteAdmin/#4-g-suite-admin2-get-user","title":"4. G Suite Admin2 (get: user)","text":"<p>This node will get the information of the user we created in the G Suite Admin node.</p> <ol> <li>Select the credentials that you entered in the previous G Suite Admin node.</li> <li>Select 'Get' from the Operation dropdown list.</li> <li>Click on the gears icon next to the User ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; G Suite Admin &gt; Output Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$node[\"G Suite Admin\"].json[\"id\"]}}</code>.</li> <li>Click on Execute Node to run the workflow.</li> </ol> <p>In the screenshot below, you will notice that the node returns the information of the user we created in the G Suite Admin node.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.gSuiteAdmin/#faqs","title":"FAQs","text":""},{"location":"workflow/integrations/nodes/workflow-nodes-base.gSuiteAdmin/#what-are-the-different-ways-to-project-a-users-information","title":"What are the different ways to project a user's information?","text":"<p>There are three different ways to project a user's information:</p> <ul> <li>Basic: Does not include any custom fields.</li> <li>Custom: Includes the custom fields from schemas in customField.</li> <li>Full: Include all the fields associated with the user.</li> </ul> <p>You can include custom fields by following the steps mentioned below. 1. Select 'Custom' from the Projection dropdown list. 2. Click on the Add Options button and select 'Custom Schemas' from the dropdown list. 3. Select the schema names you want to include from the Custom Schemas dropdown list.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.getResponse/","title":"GetResponse","text":"<p>GetResponse is an online platform that offers email marketing software, landing page creator, webinar hosting, and much more.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.getResponse/#basic-operations","title":"Basic Operations","text":"<ul> <li>Contact<ul> <li>Create a new contact</li> <li>Delete a contact</li> <li>Get a contact</li> <li>Get all contacts</li> <li>Update contact properties</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.getResponse/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to get all the contacts from GetResponse and check if they belong to a specific campaign. If they don't belong to the specified campaign, the workflow updates the campaign ID of the contacts using the GetResponse node. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Start - GetResponse - IF - No Operation, do nothing</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.getResponse/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.getResponse/#2-getresponse-node-getall-contact","title":"2. GetResponse node (getAll: contact)","text":"<p>This node will retrieve all the contacts from GetResponse.</p> <ol> <li>First of all, you'll have to enter credentials for the GetResponse node. You can find out how to do that here.</li> <li>Select 'GetAll' from the Operation dropdown list.</li> <li>Toggle Return All to true.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node retrieves all the contacts from GetResponse.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.getResponse/#3-if-node","title":"3. IF node","text":"<p>This node will check if a contact belongs to the <code>n8n</code> campaign or not. If a contact does not belong to the <code>n8n</code> campaign, it will return true otherwise false. Create a campaign in GetResponse if you don't already have one.</p> <ol> <li>Click on Add Condition and select 'String'.</li> <li>Click on the gears icon next to the Value 1 field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; GetResponse &gt; Output Data &gt; JSON &gt; campaign &gt; name. You can also add the following expression: <code>{{$node[\"GetResponse\"].json[\"campaign\"][\"name\"]}}</code>.</li> <li>Select 'Not Equal' from the Operation dropdown list.</li> <li>Enter <code>n8n</code> in the Value 2 field. If you have a campaign with a different name, use that name instead.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns all the contacts that do not belong to the <code>n8n</code> campaign.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.getResponse/#4-getresponse1-node-update-contact","title":"4. GetResponse1 node (update: contact)","text":"<p>This node will update the campaign ID of all the contacts that we get from the true branch of the previous node.</p> <ol> <li>Create a GetResponse node connected to the 'true' output of the IF node.</li> <li>Select the credentials that you entered in the previous GetResponse node.</li> <li>Select 'Update' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Contact ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; IF &gt; Output Data &gt; JSON &gt; contactId. You can also add the following expression: <code>{{$node[\"IF\"].json[\"contactId\"]}}</code>.</li> <li>Click on Add Field and select 'Campaign ID' from the dropdown list.</li> <li>Select <code>n8n</code> from the Campaign ID dropdown list. If you have a campaign with a different name, select that instead.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you notice that the node updates the campaign ID of all the contacts that do not belong to the <code>n8n</code> campaign.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.getResponse/#5-noop-node","title":"5. NoOp node","text":"<p>Adding this node here is optional, as the absence of this node won't make a difference to the functioning of the workflow.</p> <ol> <li>Create a NoOp node connected to the 'false' output of the IF node.</li> <li>Click on Execute Node to run the node.</li> </ol> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.ghost/","title":"Ghost","text":"<p>Ghost is an open-source, professional publishing platform built on a Node.js technology stack.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.ghost/#basic-operations","title":"Basic Operations","text":""},{"location":"workflow/integrations/nodes/workflow-nodes-base.ghost/#admin-api","title":"Admin API","text":"<p>Post - Create a post - Delete a post - Get a post - Get all posts - Update a post</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.ghost/#content-api","title":"Content API","text":"<p>Post - Get a post - Get all posts</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.ghost/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to create, update, and get a post in Ghost. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Start - Ghost</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.ghost/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.ghost/#2-ghost-node-create-post","title":"2. Ghost node (create: post)","text":"<p>This node will create a new post with the title <code>Running ghost with n8n!</code>. If you want to create a post with a different title, use that instead.</p> <ol> <li>Select 'Admin API' from the Source dropdown list.</li> <li>You'll have to enter credentials for the Ghost node. You can find out how to do that here.</li> <li>Select 'Create' from the Operation dropdown list.</li> <li>Enter <code>Running ghost with n8n!</code> in the Title field.</li> <li>Enter the HTML content in the Content field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node creates a new post.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.ghost/#3-ghost1-node-update-post","title":"3. Ghost1 node (update: post)","text":"<p>This node will update the status of the post that we created in the previous node. We will change the status of the post to <code>Published</code>.</p> <ol> <li>Select 'Admin API' from the Source dropdown list.</li> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Update' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Post ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Ghost &gt; Output Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$node[\"Ghost\"].json[\"id\"]}}</code>.</li> <li>Click on Add Field and select 'Status'.</li> <li>Select 'Published' from the Status dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node updates the status of the post that we created in the previous node.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.ghost/#4-ghost2-node-get-post","title":"4. Ghost2 node (get: post)","text":"<p>This node returns information about the post that we created using the Ghost node. In this node, we are using the Admin API. You can also use the Content API to get the information about the post.</p> <ol> <li>Select 'Admin API' from the Source dropdown list.</li> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'ID' from the By dropdown list.</li> <li>Click on the gears icon next to the Identifier field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Ghost &gt; Output Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$node[\"Ghost\"].json[\"id\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns information about the post that we specified.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.github/","title":"GitHub","text":"<p>GitHub provides hosting for software development and version control using Git. It offers the distributed version control and source code management (SCM) functionality of Git, access control and several collaboration features such as bug tracking, feature requests, task management, and wikis for every project.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.github/#basic-operations","title":"Basic Operations","text":"<ul> <li>File<ul> <li>Create a new file in repository.</li> <li>Delete a file in repository.</li> <li>Edit a file in repository.</li> <li>Get the data of a single file.</li> <li>List contents of a folder.</li> </ul> </li> <li>Issue<ul> <li>Create a new issue.</li> <li>Create a new comment on an issue.</li> <li>Edit an issue.</li> <li>Get the data of a single issue.</li> <li>Lock an issue.</li> </ul> </li> <li>Repository<ul> <li>Get the data of a single repository.</li> <li>Returns the contents of the repository's license file, if one is detected.</li> <li>Returns issues of a repository.</li> <li>Get the community profile of a repository with metrics, health score, description, license, etc.</li> <li>Get the top 10 popular content paths over the last 14 days.</li> <li>Get the top 10 referrering domains over the last 14 days.</li> </ul> </li> <li>Release<ul> <li>Creates a new release.</li> <li>Get a release.</li> <li>Get all repository releases.</li> <li>Delete a release.</li> <li>Update a release.</li> </ul> </li> <li>Review<ul> <li>Creates a new review.</li> <li>Get a review for a pull request.</li> <li>Get all reviews for a pull request.</li> <li>Update a review.</li> </ul> </li> <li>User<ul> <li>Returns the repositories of a user.</li> <li>Invites a user to an organization.</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.github/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to get the community profile of a GitHub repository. You can also find the workflow on the website. This example usage workflow uses the following two nodes. - Start - GitHub</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.github/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.github/#2-github-node","title":"2. GitHub node","text":"<ol> <li>First of all, you'll have to enter credentials for the GitHub node. You can find out how to do that here.</li> <li>Select the 'Repository' option under the Resource field.</li> <li>Select the 'Get Profile' option under the Operation field.</li> <li>Enter the repository owner in the Repository Owner field.</li> <li>Enter the repository name in the Repository Name field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.gitlab/","title":"GitLab","text":"<p>GitLab is a web-based DevOps lifecycle tool that provides a Git-repository manager providing wiki, issue-tracking, and continuous integration/continuous installation pipeline features.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.gitlab/#basic-operations","title":"Basic Operations","text":"<ul> <li>Issue<ul> <li>Create a new issue</li> <li>Create a new comment on an issue</li> <li>Edit an issue</li> <li>Get the data of a single issue</li> <li>Lock an issue</li> </ul> </li> <li>Repository<ul> <li>Get the data of a single repository</li> <li>Returns issues of a repository</li> </ul> </li> <li>Release<ul> <li>Create a new release</li> <li>Delete a new release</li> <li>Get a new release</li> <li>Get all releases</li> <li>Update a new release</li> </ul> </li> <li>User<ul> <li>Returns the repositories of a user</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.gitlab/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to get the details of a GitLab repository. You can also find the workflow on the website. This example usage workflow uses the following two nodes. - Start - GitLab</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.gitlab/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.gitlab/#2-gitlab-node","title":"2. GitLab node","text":"<ol> <li>First of all, you'll have to enter credentials for the GitLab node. You can find out how to do that here.</li> <li>Select the 'Repository' option from the Resource dropdown list.</li> <li>Select the 'Get' option under the Operation field.</li> <li>Enter the project owner in the Project Owner field.</li> <li>Enter the project name in the Project Name field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.gmail/","title":"Gmail","text":"<p>Gmail is an email service developed by Google. Users can access Gmail on the web and using third-party programs that synchronize email content through POP or IMAP protocols.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.gmail/#basic-operations","title":"Basic Operations","text":"<ul> <li>Draft<ul> <li>Create a new email draft</li> <li>Delete a draft</li> <li>Get a draft</li> <li>Get all drafts</li> </ul> </li> <li>Label<ul> <li>Create a new label</li> <li>Delete a label</li> <li>Get a label</li> <li>Get all labels</li> </ul> </li> <li>Message<ul> <li>Send an email</li> <li>Delete a message</li> <li>Get a message</li> <li>Get all messages</li> <li>Reply to an email</li> </ul> </li> <li>Message Label<ul> <li>Add a label to a message</li> <li>Remove a label from a message</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.gmail/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to get all messages with a certain label, remove the label from the messages, and add a new label to the messages. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Start - Gmail</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.gmail/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.gmail/#2-gmail-node-getall-message","title":"2. Gmail node (getAll: message)","text":"<p>This node will return ten messages with the label <code>n8n</code> from Gmail. If you want to return all the messages toggle Return All to <code>true</code>.</p> <ol> <li>First of all, you'll have to enter credentials for the Gmail node. You can find out how to do that here.</li> <li>Select 'Message' from the Resource dropdown list.</li> <li>Select 'Get All' from the Operation dropdown list.</li> <li>Click on the Add Field button and select 'Format' from the dropdown list.</li> <li>Select 'Full' from Format dropdown menu. This option will return the full email message data with the body content parsed in the payload field.</li> <li>Click on the Add Field button and select 'Label IDs' from the dropdown list.</li> <li>Select the label from the Label IDs dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns ten email messages with the label <code>n8n</code>.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.gmail/#3-gmail1-node-remove-messagelabel","title":"3. Gmail1 node (remove: messageLabel)","text":"<p>This node will remove the label <code>n8n</code> from all the messages that you received in the previous node. If you want to remove a different label, select that label instead.</p> <ol> <li>Select the credentials that you entered in the previous Gmail node.</li> <li>Select 'Message Label' from the Resource dropdown list.</li> <li>Select 'Remove' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Message ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Gmail &gt; Output Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$node[\"Gmail\"].json[\"id\"]}}</code>.</li> <li>Select the label from the Label IDs dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node removes the <code>n8n</code> label from the messages that we received from the previous node.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.gmail/#4-gmail2-node-add-messagelabel","title":"4. Gmail2 node (add: messageLabel)","text":"<p>This node will add a new label <code>nodemation</code> to the messages that we received from the Gmail node. If you want to add a different label, select that label instead.</p> <ol> <li>Select the credentials that you entered in the previous Gmail node.</li> <li>Select 'Message Label' from the Resource dropdown list.</li> <li>Click on the gears icon next to the Message ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Gmail &gt; Output Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$node[\"Gmail\"].json[\"id\"]}}</code>.</li> <li>Select the label from the Label IDs dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node adds a new label <code>nodemation</code> to the messages that we received from the Gmail node.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.gmail/#faqs","title":"FAQs","text":""},{"location":"workflow/integrations/nodes/workflow-nodes-base.gmail/#how-to-return-all-the-messages-with-a-particular-label","title":"How to return all the messages with a particular label?","text":"<p>To return all the messages with a particular label, follow the steps mentioned below.</p> <ol> <li>Select 'Message' from the Resource dropdown list.</li> <li>Select 'Get All' from the Operation dropdown list.</li> <li>If you want to all return all the messages with a particular, toggle Return All to <code>true</code>.</li> <li>Click on Add Field and select 'Query'.</li> <li>Enter <code>label:LABEL_NAME</code> in the Query field. Replace <code>LABEL_NAME</code> with your label name.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>Refer to Search operators you can use with Gmail to learn more about filtering your search results.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.goToWebinar/","title":"GoToWebinar","text":"<p>GoToWebinar is a platform that helps you create and deliver online video conferences.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.goToWebinar/#basic-operations","title":"Basic Operations","text":"<ul> <li>Attendee<ul> <li>Get</li> <li>Get All</li> <li>Get Details</li> </ul> </li> <li>Co-Organizer<ul> <li>Create</li> <li>Delete</li> <li>Get All</li> <li>Reinvite</li> </ul> </li> <li>Panelist<ul> <li>Create</li> <li>Delete</li> <li>Get All</li> <li>Reinvite</li> </ul> </li> <li>Registrant<ul> <li>Create</li> <li>Delete</li> <li>Get</li> <li>Get All</li> </ul> </li> <li>Session<ul> <li>Get</li> <li>Get All</li> <li>Get Details</li> </ul> </li> <li>Webinar<ul> <li>Create</li> <li>Get</li> <li>Get All</li> <li>Update</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.goToWebinar/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to create, update, and get a webinar. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Start - GoToWebinar</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.goToWebinar/#1-start-node","title":"1. Start node","text":"<p>The Start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.goToWebinar/#2-gotowebinar-node-create-webinar","title":"2. GoToWebinar node (create: webinar)","text":"<p>This node will create a new webinar in GoToWebinar.</p> <ol> <li>First of all, you'll have to enter credentials for the GoToWebinar node. You can find out how to do that here.</li> <li>Select 'Webinar' from the Resource dropdown list.</li> <li>Select 'Create' from the Operation dropdown list.</li> <li>Enter a subject in the Subject field.</li> <li>Click on the Add Time Range button.</li> <li>Set the start time in the Start Time field.</li> <li>Set the end time in the End Time field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node creates a new webinar.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.goToWebinar/#3-gotowebinar1-node-update-webinar","title":"3. GoToWebinar1 node (update: webinar)","text":"<p>This node will update the description of the webinar that we created in the previous node.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Webinar' from the Resource dropdown list.</li> <li>Select 'Update' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Webinar Key field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; webinarKey. You can also add the following expression: <code>{{$json[\"webinarKey\"]}}</code>.</li> <li>Click on the Add Field button and select 'Description' from the dropdown list.</li> <li>Enter a description in the Description field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node updates the description of the webinar that we created in the previous node.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.goToWebinar/#4-gotowebinar2-node-get-webinar","title":"4. GoToWebinar2 node (get: webinar)","text":"<p>This node will get the information about the webinar that we created earlier.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Webinar' from the Resource dropdown list.</li> <li>Select 'Get' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Webinar Key field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; GoToWebinar &gt; Output Data &gt; JSON &gt; webinarKey. You can also add the following expression: <code>{{$node[\"GoToWebinar\"].json[\"webinarKey\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns the information about the webinar.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleAnalytics/","title":"Google Analytics","text":"<p>Google Analytics is a web analytics service offered by Google that lets you measure your advertising ROI as well as track your Flash, video, and social networking sites and applications.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleAnalytics/#basic-operations","title":"Basic Operations","text":"<ul> <li>Report<ul> <li>Return the analytics data</li> </ul> </li> <li>User Activity<ul> <li>Return user activity data.</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleAnalytics/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to get analytical metrics of your website using the Goole Analytics node and store it in Airtable. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Start - Google Analytics - Set - [Airtable]/integrations/nodes/workflow-nodes-base.airtable/)</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleAnalytics/#1-start-node","title":"1. Start node","text":"<p>The Start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleAnalytics/#2-google-analytics-node-get-report","title":"2. Google Analytics node (get: report)","text":"<p>This node will retrieve the session metrics grouped by country for a given date range. You can select a different dimension, metric, and date range.</p> <ol> <li>First of all, you'll have to enter credentials for the Google Analytics node. You can find out how to do that here.</li> <li>Select a view from the View ID dropdown list.</li> <li>Click on Add Field and select 'Dimensions'.</li> <li>Click on the Add Dimension button.</li> <li>Select 'Country' from the Name field.</li> <li>Click on Add Field and select 'Date Ranges'.</li> <li>Click on the Add Date Range button.</li> <li>Select a start date in the Start Date field.</li> <li>Select an end date in the End Date field.</li> <li>Click on Add Field and select 'Metrics'.</li> <li>Click on the Add Metrics button.</li> <li>Enter <code>Session</code> in the Alias field.</li> <li>Enter <code>ga:sessions</code> in the Expression field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns the information about the sessions grouped by country.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleAnalytics/#3-set-node","title":"3. Set node","text":"<p>We will use the Set node to set the values for the country and metrics. This data gets passed on to the next nodes in the workflow.</p> <ol> <li>Click on the Add Value button and select 'string' from the dropdown list.</li> <li>Enter <code>Country</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Nodes &gt; Input Data &gt; JSON &gt; country. You can also add the following expression: <code>{{$json[\"ga:country\"]}}</code>.</li> <li>Click on Add Value and select 'Number' from the dropdown list.</li> <li>Enter <code>Metric</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Nodes &gt; Input Data &gt; JSON &gt; total. You can also add the following expression: <code>{{$json[\"total\"]}}</code>.</li> <li>Toggle Keep Only Set to <code>true</code>. We set this option to true to ensure that only the data that we have set in this node get passed on to the next nodes in the workflow.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node sets the value for <code>Country</code> and <code>Metric</code>.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleAnalytics/#4-airtable-node-append","title":"4. Airtable node (Append)","text":"<p>This node will append the data that we set in the previous node to a table. Create a table like this in your Airtable base.</p> <ol> <li>First of all, you'll have to enter credentials for the Airtable node. You can find out how to do that here.</li> <li>Select 'Append' from the Operation dropdown list.</li> <li>Enter the Base ID in the Base ID field. For obtaining the Base ID, head over to their API page and select the correct base. You\u2019ll find the Base ID there.</li> <li>Enter the name of your table in the Table field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node appends the data that we had set in the previous node.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleBigQuery/","title":"Google BigQuery","text":"<p>Google BigQuery is a fully-managed, serverless data warehouse that enables scalable analysis over petabytes of data. It is a Platform as a Service that supports querying using ANSI SQL.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleBigQuery/#basic-operations","title":"Basic Operations","text":"<p>Record</p> <ul> <li>Create a new record</li> <li>Retrieve all records</li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleBigQuery/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to send position updates of the ISS every minute to a table in Google BigQuery. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Cron - HTTP Request - Set - Google BigQuery</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleBigQuery/#1-cron-node","title":"1. Cron node","text":"<p>The Cron node will trigger the workflow every minute.</p> <ol> <li>Click on Add Cron Time.</li> <li>Select 'Every Minute' from the Mode dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the Cron node is configured to trigger the workflow every minute.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleBigQuery/#2-http-request-node-get","title":"2. HTTP Request node (GET)","text":"<p>This node will make a GET request to the API <code>https://api.wheretheiss.at/v1/satellites/25544/positions</code> to fetch the position of the ISS. This information gets passed on to the next node in the workflow.</p> <ol> <li>Enter <code>https://api.wheretheiss.at/v1/satellites/25544/positions</code> in the URL field.</li> <li>Click on the Add Parameter button in the Query Parameters section.</li> <li>Enter <code>timestamps</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Enter the following expression: <code>{{Date.now()}}</code>. This expression will return the current timestamp.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node makes a GET request to the API and returns the information about the location of the ISS.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleBigQuery/#3-set-node","title":"3. Set node","text":"<p>We will use the Set node to ensure that only the data that we set in this node gets passed on to the next nodes in the workflow.</p> <ol> <li>Click on Add Value and select 'String' from the dropdown list.</li> <li>Enter <code>name</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; 0 &gt; name. You can also add the following expression: <code>{{$json[\"0\"][\"name\"]}}</code>.</li> <li>Click on Add Value and select 'Number' from the dropdown list.</li> <li>Enter <code>latitude</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Input Data &gt; JSON &gt; 0 &gt; latitude. You can also add the following expression: <code>{{$json[\"0\"][\"latitude\"]}}</code>.</li> <li>Click on Add Value and select 'Number' from the dropdown list.</li> <li>Enter <code>longitude</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Input Data &gt; JSON &gt; 0 &gt; longitude. You can also add the following expression: <code>{{$json[\"0\"][\"longitude\"]}}</code>.</li> <li>Click on Add Value and select 'Number' from the dropdown list.</li> <li>Enter <code>timestamp</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Input Data &gt; JSON &gt; 0 &gt; timpestamp. You can also add the following expression: <code>{{$json[\"0\"][\"timestamp\"]}}</code>.</li> <li>Toggle Keep Only Set to <code>true</code>. We set this option to true to ensure that only the data that we have set in this node get passed on to the next nodes in the workflow.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node uses the data from the previous node and returns the data that we set for the workflow.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleBigQuery/#4-google-bigquery-node-create-record","title":"4. Google BigQuery node (create: record)","text":"<p>This node will send the data from the previous node to the <code>position</code> table in Google BigQuery. If you have created a table with a different name, use that table instead.</p> <ol> <li>First of all, you'll have to enter credentials for the Google BigQuery node. You can find out how to do that here.</li> <li>Select a project from the Project ID dropdown list.</li> <li>Select a dataset from the Dataset ID dropdown list.</li> <li>Select the table from <code>position</code> from the Table ID dropdown list. If you created a table with a different name, select that table instead.</li> <li>Enter <code>name, latitude, longitude, timestamp</code> in the Columns field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node sends the data from the previous node to the <code>position</code> table in Google BigQuery.</p> <p></p> <p> Activate workflow for production</p> <p>This example workflow uses the Cron node, which is a Trigger node. You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Cron node.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleBooks/","title":"Google Books","text":"<p>Google Books is a service from Google to browse, buy, or borrow books online.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleBooks/#basic-operations","title":"Basic Operations","text":"<ul> <li>Bookshelf<ul> <li>Retrieve a specific bookshelf resource for the specified user</li> <li>Get all public bookshelf resource for the specified user</li> </ul> </li> <li>Bookshelf Volume<ul> <li>Add a volume to a bookshelf</li> <li>Clears all volumes from a bookshelf</li> <li>Get all volumes in a specific bookshelf for the specified user</li> <li>Moves a volume within a bookshelf</li> <li>Removes a volume from a bookshelf</li> </ul> </li> <li>Volume<ul> <li>Get a volume resource based on ID</li> <li>Get all volumes filtered by query</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleBooks/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to get a volume and add it to your bookshelf using the Google Books node. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Start - Google Books</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleBooks/#1-start-node","title":"1. Start node","text":"<p>The Start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleBooks/#2-google-books-node-get-volume","title":"2. Google Books node (get: volume)","text":"<p>This node will retrieve a volume from Google Books.</p> <ol> <li>Select 'OAuth2' from the Authentication dropdown list.</li> <li>Enter credentials for the Google Books node. You can find out how to enter credentials for this node here.</li> <li>Enter the ID of a volume in the Volume ID field.</li> <li>Click on Execute Node to run the workflow.</li> </ol> <p>In the screenshot below, you will observe that the node retrieves the information of the volume that we specify.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleBooks/#3-google-books1-node-add-bookshelfvolume","title":"3. Google Books1 node (add: bookshelfVolume)","text":"<p>This node will add the volume that we got from the previous node to a bookshelf in Google Books.</p> <ol> <li>Select 'OAuth2' in the Authentication field.</li> <li>Select the credentials that you entered in the previous Google Books node.</li> <li>Select 'Bookshelf Volume' from the Resource dropdown list.</li> <li>Select 'Add' from the Operation dropdown list.</li> <li>Enter a bookshelf id in the ID field.</li> <li>Click on the gears icon next to the Volume ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Google Books &gt; Output Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$node[\"Google Books\"].json[\"id\"]}}</code>.</li> <li>Click on Execute Node to run the workflow.</li> </ol> <p>In the screenshot below, you will notice that this node adds the volume that we got from the previous node to a bookshelf that we specified.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleBooks/#4-google-books2-node-getall-bookshelfvolume","title":"4. Google Books2 node (getAll: bookshelfVolume)","text":"<p>This node will return all the volumes in a bookshelf.</p> <ol> <li>Select 'OAuth2' in the Authentication field.</li> <li>Select the credentials that you entered in the previous Google Books node.</li> <li>Select 'Bookshelf Volume' from the Resource dropdown list.</li> <li>Select 'Get All' from the Operation dropdown list.</li> <li>Toggle My Library to true. This will return the information for your account.</li> <li>Click on the gears icon next to the Bookshelf ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Google Books1 &gt; Parameters &gt; shelfId. You can also add the following expression: <code>{{$node[\"Google Books1\"].parameter[\"shelfId\"]}}</code>.</li> <li>Click on Execute Node to run the workflow.</li> </ol> <p>In the screenshot below, you will notice that this node returns all the volumes in the bookshelf that we specified.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleCalendar/","title":"Google Calendar","text":"<p>Google Calendar is a time-management and scheduling calendar service developed by Google.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleCalendar/#basic-operations","title":"Basic Operations","text":"<ul> <li>Calendar<ul> <li>If a time-slot is available in a calendar</li> </ul> </li> <li>Event<ul> <li>Add a event to calendar</li> <li>Delete an event</li> <li>Retrieve an event</li> <li>Retrieve all events from a calendar</li> <li>Update an event</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleCalendar/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to add an event to Google Calendar. You can also find the workflow on the website. This example usage workflow uses the following two nodes. - Start - Google Calendar</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleCalendar/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleCalendar/#2-google-calendar-node","title":"2. Google Calendar node","text":"<ol> <li>First of all, you'll have to enter credentials for the Google Calendar node. You can find out how to do that here.</li> <li>Select the Calendar from the dropdown list of the user's calendar list.</li> <li>Enter the start date of your event in the Start field.</li> <li>Enter the end date of your event in the End field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleChat/","title":"Google Chat","text":"<p>Google Chat is a messaging platform.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleChat/#basic-operations","title":"Basic Operations","text":"<ul> <li>Member<ul> <li>Get a membership</li> <li>Get all memberships in a space</li> </ul> </li> <li>Message<ul> <li>Create a message</li> <li>Delete a message</li> <li>Get a message</li> <li>Update a message</li> </ul> </li> <li>Space<ul> <li>Get a space</li> <li>Get all spaces the caller is a member of</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleCloudFirestore/","title":"Google Cloud Firestore","text":"<p>Google Cloud Firestore is a flexible, scalable database for mobile, web, and server development from Firebase and Google Cloud. It keeps your data in-sync across client apps through real-time listeners and offers offline support for mobile and web.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleCloudFirestore/#basic-operations","title":"Basic Operations","text":"<ul> <li>Document<ul> <li>Create a document</li> <li>Create/Update a document</li> <li>Delete a document</li> <li>Get a document</li> <li>Get all documents from a collection</li> <li>Runs a query against your documents</li> </ul> </li> <li>Collection<ul> <li>Get all root collections</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleCloudFirestore/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to create, update, and get a document in the Google Cloud Firestore. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Start - Set - Google Cloud Firestore</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleCloudFirestore/#1-start-node","title":"1. Start node","text":"<p>The Start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleCloudFirestore/#2-set-node","title":"2. Set node","text":"<p>We will use the Set node to set the name and id.</p> <ol> <li>Click on Add Value and select 'String' from the dropdown list.</li> <li>Enter <code>name</code> in the Name field.</li> <li>Enter <code>n8n</code> in the Value field.</li> <li>Click on Add Value and select 'Number' from the dropdown list.</li> <li>Enter <code>id</code> in the Name field.</li> <li>Enter <code>1</code> in the Value field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that node sets the value for name and id.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleCloudFirestore/#3-google-cloud-firestore-node-document-create","title":"3. Google Cloud Firestore node (document: create)","text":"<p>This node will create a new document in a collection in Google Cloud Firestore with the data from the previous node.</p> <ol> <li>First of all, you'll have to enter credentials for the Google Cloud Firestore node. You can find out how to do that here.</li> <li>Select 'Create' from the Operation dropdown list.</li> <li>Select a project from the Project ID dropdown list.</li> <li>Enter the name of your collection in the Collection field.</li> <li>Enter <code>id, name</code> in the Columns / attributes field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node creates a new document using the data from the previous node.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleCloudFirestore/#4-set-node","title":"4. Set node","text":"<p>We will use the Set node to ensure that only the data that we set in this node gets passed on to the next nodes in the workflow. We will set a new value for <code>name</code>.</p> <ol> <li>Click on Add Value and select 'String' from the dropdown list.</li> <li>Enter <code>name</code> in the Name field.</li> <li>Enter <code>nodemation</code> in the Value field.</li> <li>Click on Add Value and select 'String' from the dropdown list.</li> <li>Enter <code>document_id</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Google Cloud Firestore &gt; Output Data &gt; JSON &gt; _id. You can also add the following expression: <code>{{$node[\"Google Cloud Firestore\"].json[\"_id\"]}}</code>.</li> <li>Toggle Keep Only Set to <code>true</code>. We set this option to true to ensure that only the data that we have set in this node get passed on to the next nodes in the workflow.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node sets the values of <code>name</code> and <code>document_id</code>. These values are passed to the next node in the workflow.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleCloudFirestore/#5-google-cloud-firestore1-node-document-upsert","title":"5. Google Cloud Firestore1 node (document: upsert)","text":"<p>This node will update the value of the <code>name</code> field in the document that we created using the Google Cloud Firestore node.</p> <ol> <li>Select the credentials that you entered in the previous Google Cloud Firestore node.</li> <li>Select 'Create/Update' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Project ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Google Cloud Firestore &gt; Parameters &gt; projectId. You can also add the following expression: <code>{{$node[\"Google Cloud Firestore\"].parameter[\"projectId\"]}}</code>.</li> <li>Click on the gears icon next to the Collection field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Google Cloud Firestore &gt; Parameters &gt; collection. You can also add the following expression: <code>{{$node[\"Google Cloud Firestore\"].parameter[\"collection\"]}}</code>.</li> <li>Enter <code>document_id</code> in the Update Key field.</li> <li>Enter <code>name</code> in the Column /Attributes field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node updates the value of the <code>name</code> field in the document that we created using the Google Cloud Firestore node.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleCloudFirestore/#6-google-cloud-firestore-node-document-get","title":"6. Google Cloud Firestore node (document: get)","text":"<p>This node will get the document that we created using the Google Cloud Firestore node.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Click on the gears icon next to the Project ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Google Cloud Firestore &gt; Parameters &gt; projectId. You can also add the following expression: <code>{{$node[\"Google Cloud Firestore\"].parameter[\"projectId\"]}}</code>.</li> <li>Click on the gears icon next to the Collection field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Google Cloud Firestore &gt; Parameters &gt; collection. You can also add the following expression: <code>{{$node[\"Google Cloud Firestore\"].parameter[\"collection\"]}}</code>.</li> <li>Click on the gears icon next to the Document ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Set1 &gt; Output Data &gt; JSON &gt; document_id. You can also add the following expression: <code>{{$node[\"Set1\"].json[\"document_id\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns the document that we created using the Google Cloud Firestore node.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleCloudNaturalLanguage/","title":"Google Cloud Natural Language","text":"<p>Google Cloud Natural Language uses machine learning to reveal the structure and meaning of text. You can extract information about people, places, and events, and better understand social media sentiment and customer conversations.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleCloudNaturalLanguage/#basic-operations","title":"Basic Operations","text":"<ul> <li>Document<ul> <li>Analyze Sentiment</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleCloudNaturalLanguage/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to analyze the sentiment of feedback received via a Typeform submission and send a message on Mattermost if that feedback is negative. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Typeform Trigger - Google Cloud Natural Language - IF - Mattermost - No Operation, do nothing</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleCloudNaturalLanguage/#1-typeform-trigger-node","title":"1. Typeform Trigger node","text":"<p>This node will trigger the workflow when a feedback form is submitted. Make sure to create a feedback form for your event.</p> <ol> <li>Select 'Access Token' from the Authentication dropdown list.</li> <li>Enter the credentials for the Typeform Trigger node. You can find out how to do that here.</li> <li>Select the event feedback form from the Form dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node triggers the workflow when feedback is submitted. We will pass this feedback to the next nodes in the workflow. </p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleCloudNaturalLanguage/#2-google-cloud-natural-language-node-analyzesentiment-document","title":"2. Google Cloud Natural Language node (analyzeSentiment: document)","text":"<p>This node will analyze the sentiment of the feedback that we got from the previous node. We will pass the analysis score to the next node in the workflow.</p> <ol> <li>First of all, you'll have to enter credentials for the Google Cloud Natural Language node. You can find out how to enter credentials for this node here.</li> <li> <p>Click on the gears icon next to the Content field and click on Add Expression.</p> </li> <li> <p>Select the following in the Variable Selector section: Nodes &gt; Typeform Trigger &gt; Output Data &gt; JSON &gt; What did you think about the event? You can also add the following expression: <code>{{$node[\"Typeform Trigger\"].json[\"What did you think about the event?\"]}}</code>. If you want to analyze the sentiment for a different question, select that question instead.</p> </li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node analyzes the sentiment of the feedback and gives a score based on that.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleCloudNaturalLanguage/#3-if-node","title":"3. IF node","text":"<p>This node will check if the score we got from the previous node is smaller than <code>0</code>. If the score is smaller than <code>0</code>, it will return true otherwise false.</p> <ol> <li>Click on Add Condition and select 'Number'.</li> <li>Click on the gears icon next to the Value 1 field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Google Cloud Natural Language &gt; Output Data &gt; JSON &gt; documentSentiment &gt; score. You can also add the following expression: <code>{{$node[\"Google Cloud Natural Language\"].json[\"documentSentiment\"][\"score\"]}}</code>.</li> <li>Select 'Smaller' from the Operation dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node checks if the score that we received from the previous node is smaller than <code>0</code>.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleCloudNaturalLanguage/#4-mattermost-node-post-message","title":"4. Mattermost node (post: message)","text":"<p>This node will send the feedback and the analysis score to the <code>Feedback</code> channel in Mattermost. If you have a different channel, use that instead.</p> <ol> <li>Create a Mattermost node connected to the 'true' output of the IF node.</li> <li>You'll have to enter credentials for the Mattermost node. You can find out how to enter credentials for this node here.</li> <li>Select a channel from the Channel ID dropdown list.</li> <li> <p>Click on the gears icon next to the Message field click on Add Expression.</p> </li> <li> <p>Enter the following message in the Expression field: <code>You got a new feedback with a score of {{$node[\"Google Cloud Natural Language\"].json[\"documentSentiment\"][\"score\"]}}. Here is what it says:{{$node[\"Typeform Trigger\"].json[\"What did you think about the event?\"]}}</code>.</p> </li> <li>Click on Execute Node to run the workflow.</li> </ol> <p>In the screenshot below, you will notice that the node sends the feedback and the analysis score to the <code>Feedback</code> channel in Mattermost.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleCloudNaturalLanguage/#5-noop-node","title":"5. NoOp node","text":"<p>Adding this node here is optional, as the absence of this node won't make a difference to the functioning of the workflow.</p> <ol> <li>Create a NoOp node connected to the 'false' output of the IF node.</li> <li>Click on Execute Node to run the node.</li> </ol> <p></p> <p> Activate workflow for production</p> <p>This example workflow uses the Typeform Trigger node. You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered when a new form is submitted.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleCloudRealtimeDatabase/","title":"Google Cloud Realtime Database","text":"<p>Google Cloud Realtime Database is a cloud-hosted database. Data is stored as JSON and synchronized in realtime to every connected client.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleCloudRealtimeDatabase/#basic-operations","title":"Basic Operations","text":"<ul> <li>Write data to a database</li> <li>Delete data from a database</li> <li>Get a record from a database</li> <li>Append to a list of data</li> <li>Update item on a database</li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleCloudRealtimeDatabase/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to receive updates of the position of the ISS every minute and push it to a database using the Google Cloud Realtime Database node. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Cron - HTTP Request - Set - Google Cloud Realtime Database</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleCloudRealtimeDatabase/#1-cron-node","title":"1. Cron node","text":"<p>The Cron node will trigger the workflow every minute.</p> <ol> <li>Click on Add Cron Time.</li> <li>Select 'Every Minute' from the Mode dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the Cron node is configured to trigger the workflow every minute.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleCloudRealtimeDatabase/#2-http-request-node-get","title":"2. HTTP Request node (GET)","text":"<p>This node will make a GET request to the API <code>https://api.wheretheiss.at/v1/satellites/25544/positions</code> to fetch the position of the ISS. This information gets passed on to the next node in the workflow.</p> <ol> <li>Enter <code>https://api.wheretheiss.at/v1/satellites/25544/positions</code> in the URL field.</li> <li>Click on the Add Parameter button in the Query Parameters section.</li> <li>Enter <code>timestamps</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Enter the following expression: <code>{{Date.now()}}</code>. This expression will return the current timestamp.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node makes a GET request to the API and returns the information about the location of the ISS.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleCloudRealtimeDatabase/#3-set-node","title":"3. Set node","text":"<p>We will use the Set node to ensure that only the data that we set in this node gets passed on to the next nodes in the workflow.</p> <ol> <li>Click on Add Value and select 'String' from the dropdown list.</li> <li>Enter <code>latitude</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; HTTP Request &gt; Output Data &gt; JSON &gt; 0 &gt; latitude. You can also add the following expression: <code>{{$node[\"HTTP Request\"].json[\"0\"][\"latitude\"]}}</code>.</li> <li>Click on Add Value and select 'String' from the dropdown list.</li> <li>Enter <code>longitude</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; HTTP Request &gt; Output Data &gt; JSON &gt; 0 &gt; longitude. You can also add the following expression: <code>{{$node[\"HTTP Request\"].json[\"0\"][\"longitude\"]}}</code>.</li> <li>Click on Add Value and select 'String' from the dropdown list.</li> <li>Enter <code>timestamp</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; HTTP Request &gt; Output Data &gt; JSON &gt; 0 &gt; timpestamp. You can also add the following expression: <code>{{$node[\"HTTP Request\"].json[\"0\"][\"timestamp\"]}}</code>.</li> <li>Toggle Keep Only Set to <code>true</code>. We set this option to true to ensure that only the data that we have set in this node get passed on to the next nodes in the workflow.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node uses the data from the previous node and returns the data that we set for the workflow.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleCloudRealtimeDatabase/#4-google-cloud-realtime-database-node-push","title":"4. Google Cloud Realtime Database node (push)","text":"<p>This node will push the data from the previous node to the <code>iss</code> path in Google Cloud Realtime Database. If you have created a path with a different name, you can use that path instead.</p> <ol> <li>First of all, you'll have to enter credentials for the Google Cloud Realtime Database node. You can find out how to do that here.</li> <li>Select a project from the Project ID dropdown list.</li> <li>Select 'Push' from the Operation dropdown list.</li> <li>Enter a path in the Object Path field.</li> <li>Enter <code>latitude, longitude, timestamp</code> in the Columns / Attributes field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node pushes the data from the previous node to the <code>iss</code> path in Google Cloud Realtime Database.</p> <p></p> <p> Activate workflow for production</p> <p>This example workflow uses the Cron node, which is a Trigger node. You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Cron node.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleContacts/","title":"Google Contacts","text":"<p>Google Contacts is Google's contact management tool that is available in its free email service Gmail, as a standalone service, and as a part of Google's business-oriented suite of web apps Google Apps.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleContacts/#basic-operations","title":"Basic Operations","text":"<ul> <li>Contact<ul> <li>Create a contact</li> <li>Delete a contact</li> <li>Get a contact</li> <li>Retrieve all contacts</li> <li>Update a contact</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleContacts/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to create, update, and get a contact from Google Contacts. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Start - Google Contacts</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleContacts/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleContacts/#2-google-contacts-node-create-contact","title":"2. Google Contacts node (create: contact)","text":"<ol> <li>First of all, you'll have to enter credentials for the Google Contacts node. You can find out how to do that here.</li> <li>Enter the family name in the Family Name field.</li> <li>Enter the given name in the Given Name field.</li> <li>Click on Execute Node to run the node.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleContacts/#3-google-contacts1-node-update-contact","title":"3. Google Contacts1 node (update: contact)","text":"<ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Update' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Contact ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Google Contacts &gt; Output Data &gt; JSON &gt; contactId. You can also add the following expression: <code>{{$node[\"Google Contacts\"].json[\"contactId\"]}}</code>.</li> <li>Select <code>*</code> from the Fields dropdown list.</li> <li>Click on the Add Field button and select Company.</li> <li>Click on the Add Company button.</li> <li>Toggle the value to true for the Current field.</li> <li>Enter the company's domain in the Domain field.</li> <li>Enter the company's name in the Name field.</li> <li>Enter the title in the Title field.</li> <li>Click on Execute Node to run the node.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleContacts/#4-google-contacts2-node-get-contact","title":"4. Google Contacts2 node (get: contact)","text":"<ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Get' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Contact ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Google Contacts &gt; Output Data &gt; JSON &gt; contactId. You can also add the following expression: <code>{{$node[\"Google Contacts\"].json[\"contactId\"]}}</code>.</li> <li>Select 'Organizations' from the Fields dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleDocs/","title":"Google Docs","text":"<p>Google Docs is a web-based word processor that is part of Google's office software suite within its Google Drive service.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleDocs/#basic-operations","title":"Basic operations","text":"<ul> <li>Document<ul> <li>Create</li> <li>Get</li> <li>Update</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleDocs/#example-usage","title":"Example usage","text":"<p>This workflow allows you to create a new Google Doc and add your desired text to it. This example usage workflow uses the following nodes. - Start - Google Docs</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleDocs/#1-start-node","title":"1. Start node","text":"<p>The Start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleDocs/#2-google-docs-node-create","title":"2. Google Docs node - create","text":"<p>The Document resource is selected by default. Configure the remaining parameters as follows:</p> <ol> <li>From the Authentication dropdown select your desired method and the corresponding Credentials.</li> <li>From the Operation dropdown select Create.</li> <li>From the Drive dropdown select which of your drives this file will be created in. My Drive is selected by default.</li> <li>From the Folder dropdown select which of you drive folders this file will be created in. The root folder (<code>/</code>) is selected by default.</li> <li>In the Title field enter the name of your new Google Doc.</li> </ol> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleDocs/#3-google-docs-node-update","title":"3. Google Docs node - update","text":"<p>The Document resource is selected by default. Configure the remaining parameters as follows:</p> <ol> <li>From the Operation dropdown select Update.</li> <li>In the Doc ID or URL field, enter the document ID or URL of the file created by the previous node.</li> <li>From Actions, configure the fields as follows:<ul> <li>Object: Select the object of the action. Here we use 'Text'.</li> <li>Action: Select the action to be performed on the object. Here we use 'Insert'.</li> <li>Insert Segment: Select where in the document the action should be performed. Here we use 'Body'.</li> <li>Insert Location: Select the location within the selected Segment. Here we use 'At end of specific location'.</li> <li>Text: Enter the text to be inserted.</li> </ul> </li> </ol> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleDrive/","title":"Google Drive","text":"<p>Google Drive is a file storage and synchronization service developed by Google. It allows users to store files on their servers, synchronize files across devices, and share files.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleDrive/#basic-operations","title":"Basic Operations","text":"<ul> <li>Drive<ul> <li>Create a drive</li> <li>Delete a drive</li> <li>Get a drive</li> <li>List all drives</li> <li>Update a drive</li> </ul> </li> <li>File<ul> <li>Copy a file</li> <li>Delete a file</li> <li>Download a file</li> <li>List files and folders</li> <li>Share a file</li> <li>Update a file</li> <li>Upload a file</li> </ul> </li> <li>Folder<ul> <li>Create a folder</li> <li>Delete a folder</li> <li>Share a folder</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleDrive/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to download a file from Google Drive. You can also find the workflow on the website. This example usage workflow uses the following two nodes. - Start - Google Drive - Write Binary File</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleDrive/#1-start-node","title":"1. Start node","text":"<p>The Start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleDrive/#2-google-sheets-node","title":"2. Google Sheets node","text":"<ol> <li>First of all, you'll have to enter credentials for the Google Drive node. You can find out how to do that here, in the section 'Google Drive / Sheets API'.</li> <li>Select the authentication method you plan to use from the Authentication dropdown list.</li> <li>Select 'Download' from the Operation dropdown list.</li> <li>Copy the string of characters located between <code>/d/</code> and <code>/edit</code> in your Google Drive URL. Paste that string in the File ID field.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleDrive/#3-write-binary-file-node","title":"3. Write Binary File node","text":"<ol> <li>Enter the destination file path in the File Name field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleDrive/#faqs","title":"FAQs","text":""},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleDrive/#how-do-i-list-all-filesfolders-within-a-folder","title":"How do I list all files/folders within a folder?","text":"<p>To list all the files and folders within a folder, follow the steps mentioned below.</p> <ol> <li>Toggle Use Query String to <code>true</code>.</li> <li>Copy the string of characters located after <code>https://drive.google.com/drive/u/0/folders/</code>. This string is the folder ID.</li> <li>Enter <code>'FOLDER_ID' in parents</code> in the Query String field. Replace <code>FOLDER_ID</code> with the folder ID you copied in the previous step.</li> </ol> <p>There are several additional options available to fine grain the listed results. Refer to Search for files and folders: Querystring for more information.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googlePerspective/","title":"Google Perspective","text":"<p>Google Perspective is a free API that uses machine learning to identify \"toxic\" comments, making it easier to host better conversations online.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googlePerspective/#basic-operations","title":"Basic operations","text":"<ul> <li>Analyze Comment</li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googlePerspective/#example-usage","title":"Example usage","text":"<p>This workflow allows you to analyze a comment for profanity. This example usage workflow uses the following nodes. - Start - Google Perspective</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googlePerspective/#1-start-node","title":"1. Start node","text":"<p>The Start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googlePerspective/#2-google-perspective-node","title":"2. Google Perspective node","text":"<ol> <li>First enter credentials for the Google Perspective node. You can find out how to enter credentials for this node here.</li> <li>The Analyze Comment Operation is selected by default.</li> <li>In the Text field enter the comment to be analyzed.</li> <li>From the Properties section click Add Attribute.<ul> <li>For Attribute Name select Profanity.</li> <li>For Score Threshold leave the 0.00 default setting to return all scores.</li> </ul> </li> <li>Click on Execute Node to run the workflow.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleSheets/","title":"Google Sheets","text":"<p>Google Sheets is a web-based spreadsheet program that is part of Google's office software  suite within its Google Drive service.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleSheets/#basic-operations","title":"Basic Operations","text":"<ul> <li>Spreadsheet<ul> <li>Create a spreadsheet</li> </ul> </li> <li>Sheet<ul> <li>Append data to a sheet</li> <li>Clear data from a sheet</li> <li>Create a new sheet</li> <li>Delete columns and rows from a sheet</li> <li>Look up a specific column value and return the matching row</li> <li>Read data from a sheet</li> <li>Remove a sheet</li> <li>Update rows in a sheet</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleSheets/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to append, lookup, update, and read data from Google Sheets. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Start - Set - Google Sheets</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleSheets/#1-start-node","title":"1. Start node","text":"<p>The Start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleSheets/#2-set-node","title":"2. Set node","text":"<p>This example workflow uses the Set node to generate data that we want to add to Google Sheets. You can also use other nodes, for example, the HTTP Request node, to get the data you want to add to the Google Sheets.</p> <ol> <li>Click on the Add Value button and select 'String' from the dropdown list.</li> <li>Enter <code>Name</code> in the Name field.</li> <li>Enter the name for a house in the Value field.</li> <li>Click on the Add Value button and select 'String' from the dropdown list.</li> <li>Enter <code>Rent</code> in the Name field.</li> <li>Enter the rent of the house along with the currency in the Value field. For example, <code>$1000</code>.</li> <li>Click on the Add Value button and select 'String' from the dropdown list.</li> <li>Enter <code>City</code> in the Name field.</li> <li>Enter the name of the city in the Value field.</li> <li>Click on the Add Value button and select 'Number' from the dropdown list.</li> <li>Enter <code>ID</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Paste the following expression: <code>{{Math.floor(Math.random()*1000)}}</code>. This expression will generate a three-digit random number.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the Set node has created data that will be passed to the next nodes in the workflow. Also, the output shows a random three-digit number as the ID, created by the expression.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleSheets/#3-google-sheets-node-append","title":"3. Google Sheets node (Append)","text":""},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleSheets/#creating-a-google-sheets-spreadsheet","title":"Creating a Google Sheets spreadsheet","text":"<ol> <li>Create a new Google Sheets spreadsheet.</li> <li>In your spreadsheet, enter <code>ID</code>, <code>Name</code>, <code>Rent</code>, and <code>City</code> in the cells A1, B1, C1, and D1, respectively.</li> <li>Copy the string of characters located between <code>/d/</code> and <code>/edit</code> in your spreadsheet URL. This string is the Spreadsheet ID, which we will use in the Google Sheets node.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleSheets/#configure-the-google-sheets-node","title":"Configure the Google Sheets node","text":"<p>This Google Sheets node will add the data from the Set node in a new row to the Google Sheets that we will specify using the Spreadsheet ID.</p> <ol> <li>Select 'OAuth2' from the Authentication dropdown list.</li> <li>First of all, you'll have to enter credentials for the Google Sheets node. You can find out how to enter credentials for this node here.</li> <li>Select 'Append' from the Operation dropdown list.</li> <li>Paste the Spreadsheet ID you copied in the previous step, in the Spreadsheet ID field.</li> <li>In the Range field, enter the range of columns to append the data to your spreadsheet. Make sure that your range includes enough columns for all the data in the Set node. For this workflow, enter <code>A:D</code> in the Range field.</li> <li>Click on the Add Option button and select 'Value Input Mode' from the dropdown list.</li> <li>Select 'User Entered' from the Value Input Mode dropdown list. Refer to the FAQs for more information on why we used this option.</li> <li>Click on Execute Node to run the workflow.</li> </ol> <p>In the screenshot below, you will observe that the node adds the data from the Set node to the Google Sheets. You will also notice that the values get added in the format they are set.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleSheets/#4-google-sheets1-node-lookup","title":"4. Google Sheets1 node (Lookup)","text":"<p>This node will return the entries from the Google Sheets that have <code>Berlin</code> as the City. Feel free to change the city name to something else but make sure you have at least one record with the city name you look for in your Google Sheets spreadsheet.</p> <ol> <li>Select 'OAuth2' from the Authentication dropdown list.</li> <li>Select the credentials that you entered in the previous Google Sheets node.</li> <li>Select 'Lookup' from the Operation dropdown list.</li> <li>In the Spreadsheet ID field, enter the same string used in the previous Google Sheets node.</li> <li>Enter <code>City</code> in the Lookup Column field.</li> <li>Enter <code>Berlin</code> in the Lookup Value field.</li> <li>Click on the Add Option button and select 'Return All Matches' from the dropdown list.</li> <li>Toggle Return All Matches to true. This option returns all the entries that contain <code>Berlin</code> as the City. Refer to the FAQs for more information.</li> <li>Click on the Add Option button and select 'Value Render Mode' from the dropdown list. This option determines how the values should render in the output. The 'Unformatted Value' option returns the data without formatting it. Refer to the FAQs for more information on why we used this option.</li> <li>Click on Execute Node to run the workflow.</li> </ol> <p>In the screenshot below, you will notice that the node returns all the entries that contain Berlin as the City. The output is unformatted and is passed on to the next nodes in the workflow.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleSheets/#5-set1-node","title":"5. Set1 node","text":"<p>We will use expressions to get the data from the previous node and increase the rent by $100 for the houses in Berlin.</p> <ol> <li>Click on the Add Value button and select 'String' from the dropdown list.</li> <li>Enter <code>Name</code> in the Name field.</li> <li>Click on the gears icon next to the Value field click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Google Sheets1 &gt; Output Data &gt; JSON &gt; Name. You can also add the following expression: <code>{{$node[\"Google Sheets1\"].json[\"Name\"]}}</code>.</li> <li>Click on the Add Value button and select 'String' from the dropdown list.</li> <li>Enter <code>City</code> in the Name field.</li> <li>Click on the gears icon next to the Value field click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Google Sheets1 &gt; Output Data &gt; JSON &gt; City. You can also add the following expression: <code>{{$node[\"Google Sheets1\"].json[\"City\"]}}</code>.</li> <li>Click on the Add Value button and select 'Number' from the dropdown list.</li> <li>Click on the gears icon next to the Value field click on Add Expression.</li> <li>Paste the following expression: <code>{{$node[\"Google Sheets1\"].json[\"Rent\"]+100}}</code>. This expression will increase the rent by $100.</li> <li>Click on the Add Value button and select 'Number' from the dropdown list.</li> <li>Enter <code>ID</code> in the Name field.</li> <li>Click on the gears icon next to the Value field click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Google Sheets1 &gt; Output Data &gt; JSON &gt; ID. You can also add the following expression: <code>{{$node[\"Google Sheets1\"].json[\"ID\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node uses an expression to get the data from the previous node and increases the rent of the houses by $100. This new data will be passed to the next nodes in the workflow.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleSheets/#6-google-sheets2-node-update","title":"6. Google Sheets2 node (Update)","text":"<p>This node will update the rent for the houses in Berlin with the new rent set in the previous node.</p> <ol> <li>Select 'OAuth2' in the Authentication field.</li> <li>Select the credentials that you entered in the previous Google Sheets node.</li> <li>Select 'Update' from the Operation dropdown list.</li> <li>In the Spreadsheet ID field, enter the same string used in the previous Google Sheets node.</li> <li>In the Range field, enter the same range used in the previous Google Sheets node.</li> <li>Enter <code>ID</code> in the Key field.</li> <li>Click on the Add Option button and select 'Value Input Mode' from the dropdown list.</li> <li>Select 'User Entered' from the Value Input Mode dropdown list. Refer to the FAQs for more information on why we used this option.</li> <li>Click on Execute Node to run the workflow.</li> </ol> <p>In the screenshot below, you will notice that this node updates the rent values of the houses in Berlin based on the ID in the Google Sheets. You will also see that the updated values are in the correct format.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleSheets/#7-google-sheets3-node-read","title":"7. Google Sheets3 node (Read)","text":"<p>This node will read the data from Google Sheets.</p> <ol> <li>Select 'OAuth2' in the Authentication field.</li> <li>Select the credentials that you entered in the previous Google Sheets node.</li> <li>Select 'Read' from the Operation dropdown list.</li> <li>In the Spreadsheet ID field, enter the same string used in the previous Google Sheets node.</li> <li>In the Range field, enter the same range used in the previous Google Sheets node.</li> <li>Click on the Add Option button and select 'Value Render Mode' from the dropdown list.</li> <li>Select 'Formatted Value' from the Value Render Mode dropdown list. Refer to the FAQs for more information on why we used this option.</li> <li>Click on Execute Node to run the workflow.</li> </ol> <p>In the screenshot below, you will notice that this node returns all the values from the Google Sheets in the appropriate format.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleSheets/#faqs","title":"FAQs","text":""},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleSheets/#what-are-the-various-formats-to-read-the-data-from-the-google-sheets","title":"What are the various formats to read the data from the Google Sheets?","text":"<p>There are three different formats to read the data from the Google Sheets.</p> <ul> <li>Unformatted Value: In this mode, the node calculates the values, but doesn't format them. For example, if cell A1 is 1.23, and cell A2 is =A1, and the format of these cells is currency, then values returned will be of the format number. For cell A1 and A2, the values returned will be 1.23.</li> <li>Formula: In this mode, the node will return the formula. The node does not calculate the values. For example,  if cell A1 is 1.23, and cell A2 is =A1, and the format of these cells is currency, then the value returned will be of the format number. The value returned for cell A2 will be =A1.</li> <li>Formatted Value: In this mode, the node calculates the values and returns the values with the cells' format. For example, if cell A1 is 1.23, and cell A2 is =A1, and the format of these cells is currency, then the values returned will be $1.23.</li> </ul> <p>To change the format, click on Add Option and select 'Value Render Mode' from the dropdown list. Select the appropriate option you want your output to be returned to from the Value Render Mode dropdown list.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleSheets/#how-to-enter-values-in-the-correct-format","title":"How to enter values in the correct format?","text":"<p>There are two different formats you can use to add/update data in Google Sheets.</p> <ul> <li>Raw: This is the default format. In this format, the values are stored as-is and not parsed. For example, the node stores the text 2020-10-01 as a string in the Google Sheets.</li> <li>User Entered: In this format, the node parse the values. It follows the rules that are applied when entering text into the cell via the Google Sheet UI. For example, the node stores the text 2020-10-01 as a date in the Google Sheets.</li> </ul> <p>To change the format, click on Add Option and select 'Value Input Mode' from the dropdown list. Select the appropriate option you want your data to be stored in, from the Value Input Mode dropdown list.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleSheets/#how-to-append-an-array-in-the-google-sheets","title":"How to append an array in the Google Sheets?","text":"<p>To insert the data in Google Sheets, you have to first convert the data in a valid JSON (key, value) format. You can use the Function node to convert the array into JSON format.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleSheets/#how-to-return-all-the-values-with-the-lookup-operation","title":"How to return all the values with the Lookup operation?","text":"<p>By default, the Lookup operation returns only the first value that it matches. To return all the values that match, click on Add Option and select 'Return All Matches'. Toggle Return All Matches to true.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleSheets/#how-to-specify-a-sheet","title":"How to specify a sheet?","text":"<p>By default, the Google Sheets node will operate on the default sheet, <code>Sheet 1</code>. If you rename the sheet or want to use a different sheet, you have to specify the name of the sheet. You can do that in the Range field. For example, if you need to use a sheet named <code>n8n</code> for the range <code>A</code> to <code>H</code>, enter <code>n8n!A:H</code> in the Range field.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleSlides/","title":"Google Slides","text":"<p>Google Slides is a web-based presentation program that is part of Google's office software suite within its Google Drive service. It allows you to create, edit, and collaborate.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleSlides/#basic-operations","title":"Basic Operations","text":"<ul> <li>Page<ul> <li>Get a page</li> <li>Get a thumbnail</li> </ul> </li> <li>Presentation<ul> <li>Create a presentation</li> <li>Get a presentation</li> <li>Get presentation slides</li> <li>Replace text in a presentation</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleSlides/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to get all the slides from a presentation and get the thumbnails for the pages. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Start - Google Slides</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleSlides/#1-start-node","title":"1. Start node","text":"<p>The Start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleSlides/#2-google-slides-node-getslides-presentation","title":"2. Google Slides node (getSlides: presentation)","text":""},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleSlides/#get-presentation-id","title":"Get Presentation ID","text":"<ol> <li>Open a Google Slides presentation.</li> <li>Copy the string of characters located between <code>/d/</code> and <code>/edit</code> in your presentation URL. This string is the Presentation ID, which we will use in the Google Slides node.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleSlides/#configure-the-google-slides-node","title":"Configure the Google Slides node","text":"<p>This Google Slides node will get all the slides from a presentation.</p> <ol> <li>Select 'OAuth2' from the Authentication dropdown list.</li> <li>First of all, you'll have to enter credentials for the Google Slides node. You can find out how to enter credentials for this node here.</li> <li>Select 'Get Slides' from the Operation dropdown list.</li> <li>Paste the Presentation ID you copied in the previous step, in the Presentation ID field.</li> <li>Toggle Return All to <code>true</code>.</li> <li>Click on Execute Node to run the workflow.</li> </ol> <p>In the screenshot below, you will notice that the node returns all the slides from the presentation.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleSlides/#3-google-slides1-node-getthumbnail-page","title":"3. Google Slides1 node (getThumbnail: page)","text":"<p>This node will return thumbnails of the pages that were returned by the previous node.</p> <ol> <li>Select 'OAuth2' from the Authentication dropdown list.</li> <li>Select the credentials that you entered in the previous Google Slides node.</li> <li>Select 'Page' from the Resource dropdown list.</li> <li>Select 'Get Thumbnail' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Presentation ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Google Slides &gt; Parameters &gt; presentationId. You can also add the following expression: <code>{{$node[\"Google Slides\"].parameter[\"presentationId\"]}}</code>.</li> <li>Click on the gears icon next to the Page Object ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Google Slides &gt; Output Data &gt; JSON &gt; objectId. You can also add the following expression: <code>{{$json[\"objectId\"]}}</code>.</li> <li>Toggle Download to <code>true</code>.</li> <li>Click on Execute Node to run the workflow.</li> </ol> <p>In the screenshot below, you will notice that the node returns thumbnails of the pages that were returned by the previous node.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleTasks/","title":"Google Tasks","text":"<p>Google Tasks is a task management service developed by Google. It keeps track of your daily tasks, organize multiple lists, and track important deadlines.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleTasks/#basic-operations","title":"Basic Operations","text":"<ul> <li>Task<ul> <li>Add a task to tasklist</li> <li>Delete a task</li> <li>Retrieve a task</li> <li>Retrieve all tasks from a tasklist</li> <li>Update a task</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleTasks/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to add a task to Google Tasks. You can also find the workflow on the website. This example usage workflow uses the following two nodes. - Start - Google Tasks</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleTasks/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleTasks/#2-google-tasks-node","title":"2. Google Tasks node","text":"<ol> <li>First of all, you'll have to enter credentials for the Google Tasks node. You can find out how to do that here.</li> <li>Select the TaskList from the dropdown list of the user's task-lists where a new task needs to be added.</li> <li>Enter a title for the task in the Title field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleTranslate/","title":"Google Translate","text":"<p>Google Translate is a free multilingual translation service developed by Google to translate text and websites from one language into another.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleTranslate/#basic-operations","title":"Basic Operations","text":"<ul> <li>Language<ul> <li>Translate data</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleTranslate/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to translate text from English to German using the Google Translate node. You can also find the workflow on the website. This example usage workflow uses the following nodes. - Start - Google Translate</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleTranslate/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleTranslate/#2-google-translate-node-translatelanguage","title":"2. Google Translate node (translate:language)","text":"<p>This node will translate the text <code>Hello from n8n!</code> to German. You can enter a different text as well as select another language to translate the text to.</p> <ol> <li>Select 'OAuth2' from the Authentication dropdown list.</li> <li>Next, you'll have to enter credentials for the Google Translate node. You can find out how to enter credentials for this node here.</li> <li>Enter the text <code>Hello from n8n!</code> in the Text field.</li> <li>Select 'DE' from the Translate To dropdown list. DE is the language code for German. You can refer to Language Support to view the list of all supported languages and their corresponding language codes.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node translates the text <code>Hello from n8n!</code> to German.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.gotify/","title":"Gotify","text":"<p>Gotify is a server for sending and receiving messages.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.gotify/#basic-operations","title":"Basic Operations","text":"<ul> <li>Message<ul> <li>Create</li> <li>Delete</li> <li>Get All</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.gotify/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to send daily weather updates via a message using the Gotify node. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Cron - OpenWeatherMap - Gotify</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.gotify/#1-cron-node","title":"1. Cron node","text":"<p>The Cron node will trigger the workflow daily at 9 AM.</p> <ol> <li>Click on Add Cron Time.</li> <li>Set hours to 9 in the Hour field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the Cron node is configured to trigger the workflow every day at 9 AM.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.gotify/#2-openweathermap-node-current-weather","title":"2. OpenWeatherMap node (Current Weather)","text":"<p>This node will return data about the current weather in Berlin. To get the weather updates for your city, you can enter the name of your city instead.</p> <ol> <li>First of all, you'll have to enter credentials for the OpenWeatherMap node. You can find out how to do that here.</li> <li>Enter <code>berlin</code> in the City field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns data about the current weather in Berlin.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.gotify/#3-gotify-node-create-message","title":"3. Gotify node (create: message)","text":"<p>This node will send a message with the weather update.</p> <ol> <li>First of all, you'll have to enter credentials for the Gotify node. You can find out how to do that here.</li> <li> <p>Click on the gears icon next to the Message field and click on Add Expression.</p> </li> <li> <p>Enter the following message in the Expression field: <code>Hey! The temperature outside is {{$node[\"OpenWeatherMap\"].json[\"main\"][\"temp\"]}}\u00b0C.</code>.</p> </li> <li>Click on Add Field and select 'Title' from the dropdown list.</li> <li>Enter <code>Today's Weather Update</code> in the Title field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node sends a message with the weather update.</p> <p></p> <p> Activate workflow for production</p> <p>This example workflow uses the Cron node, which is a Trigger node. You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Cron node.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.grafana/","title":"Grafana","text":"<p>Grafana is a multi-platform open source analytics and interactive visualization web application. It provides charts, graphs, and alerts for the web when connected to supported data sources.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.grafana/#basic-operations","title":"Basic Operations","text":"<ul> <li>Dashboard<ul> <li>Create a dashboard</li> <li>Delete a dashboard</li> <li>Get a dashboard</li> <li>Get all dashboards</li> <li>Update a dashboard</li> </ul> </li> <li>Team<ul> <li>Create a team</li> <li>Delete a team</li> <li>Get a team</li> <li>Retrieve all teams</li> <li>Update a team</li> </ul> </li> <li>Team Member<ul> <li>Add a member to a team</li> <li>Retrieve all team members</li> <li>Remove a member from a team</li> </ul> </li> <li>User<ul> <li>Delete a user from the current organization</li> <li>Retrieve all users in the current organization</li> <li>Update a user in the current organization</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.grist/","title":"Grist","text":"<p>Grist combines the flexibility of a spreadsheet with the robustness of a database to organize your data, your way.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.grist/#basic-operations","title":"Basic operations","text":"<ul> <li>Create rows in a table</li> <li>Delete rows from a table</li> <li>Read rows from a table</li> <li>Update rows in a table</li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.grist/#example-usage","title":"Example usage","text":"<p>This workflow allows you to insert and update data from a table in Grist. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes:</p> <ul> <li>Start</li> <li>Grist</li> </ul> <p>The final workflow should look like the following:</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.grist/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.grist/#2-grist-node-create","title":"2. Grist node (Create)","text":"<p>This workflow assumes there is a document with a table in your Grist workspace.</p> <p></p> <p>This node will create a new record in a table.</p> <ol> <li>First enter your credentials for the Grist node. You can find out how to do that here.</li> <li>Select 'Create' from the Operation dropdown list.</li> <li>Enter that ID of your document into the Document ID field.</li> <li>Enter the ID of your table in the Table ID field.</li> <li>Under Fields to Send click the Add Field button twice.</li> <li>For the first field, choose Name from the Field ID dropdown, and type a name in the Field Value.</li> <li>For the second field, choose <code>Link</code> from the Field ID dropdown, and enter a URL in the Field Value.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>Here is an example of how the configuration should look:</p> <p></p> <p>And here's the result of adding the record to the Grist table:</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.grist/#3-grist1-node-get-all","title":"3. Grist1 node (Get All)","text":"<p>This node will list all the records with a particular <code>Name</code> value.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select the 'Get All' option from the Operation dropdown list.</li> <li>Click on the gears icon next to the Document ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Grist &gt; Parameters &gt; docId.</li> <li>Click on the gears icon next to the Table field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Grist &gt; Parameters &gt; tableId.</li> <li>Click on Add Option and select 'Filter' from the dropdown list.</li> <li>Click the Add Filter button.</li> <li>Select <code>Name</code> from the Column dropdown.</li> <li>Type a name in the Values field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, the node only returned the record with the name 'Grist':</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.grist/#4-grist2-node-update","title":"4. Grist2 node (Update)","text":"<p>This node will update the Name field of the record that we received from the previous Grist node.</p> <ol> <li>Select the Grist1 node in your workflow and click 'Duplicate Node'. Now you won't need to specify the credentials, Document ID, and Table ID again.</li> <li>Double click the newly duplicated node (Grist2) to edit it.</li> <li>Select 'Update' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Row ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Grist1 &gt; Output Data &gt; JSON &gt; id.</li> <li>Under Fields to Send click the Add Field button.</li> <li>Choose <code>Name</code> from the Field ID dropdown, and type a name in the Field Value.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>Here is an example of how the configuration should look:</p> <p></p> <p>The result is that the Name in the first record changed from 'Grist' to 'Grist Labs':</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.grist/#faqs","title":"FAQs","text":""},{"location":"workflow/integrations/nodes/workflow-nodes-base.grist/#how-to-get-the-row-id","title":"How to get the Row ID?","text":"<p>To update or delete a particular record, you need the Row ID. There are two ways to get the Row ID.</p> <p>Create a Row ID column in Grist</p> <p>Create a new column in your Grist table with the formula <code>$id</code>.</p> <p>Use the Get All operation</p> <p>The Get All operation returns the Row ID of each record along with the fields.</p> <p>You can obtain it with the expression <code>{{$node[\"GristNodeName\"].json[\"id\"]}}</code>.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.grist/#how-to-filter-records-when-using-the-get-all-operation","title":"How to filter records when using the Get All operation?","text":"<ul> <li>Click on Add Option and select 'Filter' from the dropdown list.</li> <li>You can add filters for any number of columns. The result will only include records which match all the columns.</li> <li>For each column, you can enter any number of values separated by commas. The result will include records which match any of the values for that column.</li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.hackerNews/","title":"Hacker News","text":"<p>Hacker News is a social news website focusing on computer science and entrepreneurship.</p> <p>\ud83d\udd11 Credentials</p> <p>The Hacker News node does not require authentication.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.hackerNews/#basic-operations","title":"Basic Operations","text":"<ul> <li>All<ul> <li>Get all items</li> </ul> </li> <li>Article<ul> <li>Get a Hacker News article</li> </ul> </li> <li>User<ul> <li>Get a Hacker News user</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.hackerNews/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to get articles from Hacker News. You can also find the workflow on this website. This example usage workflow would use the following two nodes. - Start - Hacker News</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.hackerNews/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.hackerNews/#2-hacker-news-node","title":"2. Hacker News node","text":"<ol> <li>Select the 'All' option from the Resource dropdown list.</li> <li>Click on Execute Node to run the workflow.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.haloPSA/","title":"HaloPSA","text":"<p>HaloPSA is a intuitive PSA software. Standardise your processes and keep your customers at the center of every conversation.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.haloPSA/#basic-operations","title":"Basic Operations","text":"<ul> <li>Client<ul> <li>Create a client</li> <li>Delete a client</li> <li>Get a client</li> <li>Get all clients</li> <li>Update a client</li> </ul> </li> <li>Site<ul> <li>Create a site</li> <li>Delete a site</li> <li>Get a site</li> <li>Get all sites</li> <li>Update a site</li> </ul> </li> <li>Ticket<ul> <li>Create a ticket</li> <li>Delete a ticket</li> <li>Get a ticket</li> <li>Get all tickets</li> <li>Update a ticket</li> </ul> </li> <li>User<ul> <li>Create a user</li> <li>Delete a user</li> <li>Get a user</li> <li>Get all users</li> <li>Update a user</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.haloPSA/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to create a client in HaloPSA. This example workflow uses the following nodes. - Start - HaloPSA</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.haloPSA/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.haloPSA/#2-halopsa-node-resource-client","title":"2. HaloPSA node (resource: client)","text":"<p>This node will create a new client in HaloPSA.</p> <ol> <li>First of all, you'll have to enter credentials for the HaloPSA node. You can find out how to do that here.</li> <li>Select 'Client' in the Resource field.</li> <li>Select 'Create' in the Operation field.</li> <li>Enter the client name in the Name field.</li> <li>Add additional fields such as VIP or Website by clicking Add Field.</li> </ol> <p>In the below screenshot you can see how the node creates a new client in HaloPSA.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.harvest/","title":"Harvest","text":"<p>Harvest is a web-based time tracking tool that helps with its simple time tracking, fast online invoicing, and powerful reporting software.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.harvest/#basic-operations","title":"Basic Operations","text":"<ul> <li>Client<ul> <li>Create a client</li> <li>Delete a client</li> <li>Get data of a client</li> <li>Get data of all clients</li> <li>Update a client</li> </ul> </li> <li>Company<ul> <li>Retrieves the company for the currently authenticated user</li> </ul> </li> <li>Contact<ul> <li>Create a contact</li> <li>Delete a contact</li> <li>Get data of a contact</li> <li>Get data of all contacts</li> <li>Update a contact</li> </ul> </li> <li>Estimate<ul> <li>Create an estimate</li> <li>Delete an estimate</li> <li>Get data of an estimate</li> <li>Get data of all estimates</li> <li>Update an estimate</li> </ul> </li> <li>Expense<ul> <li>Get data of an expense</li> <li>Get data of all expenses</li> <li>Create an expense</li> <li>Update an expense</li> <li>Delete an expense</li> </ul> </li> <li>Invoice<ul> <li>Get data of an invoice</li> <li>Get data of all invoices</li> <li>Create an invoice</li> <li>Update an invoice</li> <li>Delete an invoice</li> </ul> </li> <li>Project<ul> <li>Create a project</li> <li>Delete a project</li> <li>Get data of a project</li> <li>Get data of all projects</li> <li>Update a project</li> </ul> </li> <li>Task<ul> <li>Create a task</li> <li>Delete a task</li> <li>Get data of a task</li> <li>Get data of all tasks</li> <li>Update a task</li> </ul> </li> <li>Time Entries<ul> <li>Create a time entry via duration</li> <li>Create a time entry via start and end time</li> <li>Delete a time entry</li> <li>Delete a time entry\u2019s external reference.</li> <li>Get data of a time entry</li> <li>Get data of all time entries</li> <li>Restart a time entry</li> <li>Stop a time entry</li> <li>Update a time entry</li> </ul> </li> <li>User<ul> <li>Create a user</li> <li>Delete a user</li> <li>Get data of a user</li> <li>Get data of all users</li> <li>Get data of authenticated user</li> <li>Update a user</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.harvest/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to create a client in Harvest. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - Harvest</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.harvest/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.harvest/#2-harvest-node","title":"2. Harvest node","text":"<ol> <li>First of all, you'll have to enter credentials for the Harvest node. You can find out how to do that here.</li> <li>Select the 'Client' option from the Resource dropdown list.</li> <li>Select the 'Create' option from the Operation dropdown list.</li> <li>Enter the name of the client in the Name field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.helpScout/","title":"Help Scout","text":"<p>Help Scout is a help desk software that provides an email-based customer support platform, knowledge base tool, and an embeddable search/contact widget for customer service professionals.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.helpScout/#basic-operations","title":"Basic Operations","text":"<ul> <li>Conversation<ul> <li>Create a new conversation</li> <li>Delete a conversation</li> <li>Get a conversation</li> <li>Get all conversations</li> </ul> </li> <li>Customer<ul> <li>Create a new customer</li> <li>Get a customer</li> <li>Get all customers</li> <li>Get customer property definitions</li> <li>Update a customer</li> </ul> </li> <li>Mailbox<ul> <li>Get data of a mailbox</li> <li>Get all mailboxes</li> </ul> </li> <li>Thread<ul> <li>Create a new chat thread</li> <li>Get all chat threads</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.helpScout/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to get all mailboxes from Help Scout. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - Help Scout</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.helpScout/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.helpScout/#2-help-scout-node","title":"2. Help Scout node","text":"<ol> <li>First of all, you'll have to enter credentials for the Help Scout node. You can find out how to do that here.</li> <li>Select the 'Mailbox' option from the Resource dropdown list.</li> <li>Select the 'Get All' option from the Operation dropdown list.</li> <li>Click on Execute Node to run the workflow.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.homeAssistant/","title":"Home Assistant","text":"<p>Home Assistant is a free and open-source software for home automation that is designed to be the central control system for smart home devices with focus on local control and privacy.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.homeAssistant/#basic-operations","title":"Basic operations","text":"<ul> <li>Camera Proxy<ul> <li>Get the camera screenshot</li> </ul> </li> <li>Config<ul> <li>Get the configuration</li> <li>Check the configuration</li> </ul> </li> <li>Event<ul> <li>Create an event</li> <li>Get all events</li> </ul> </li> <li>Log<ul> <li>Get a log for a specific entity</li> <li>Get all logs</li> </ul> </li> <li>Service<ul> <li>Call a service within a specific domain</li> <li>Get all services</li> </ul> </li> <li>State<ul> <li>Create a new record, or update the current one if it already exists (upsert)</li> <li>Get a state for a specific entity</li> <li>Get all states</li> </ul> </li> <li>Template<ul> <li>Create a template</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.homeAssistant/#example","title":"Example","text":"<p>This workflow allows you to retrieve your current Home Assistant configuration details. This example usage workflow would use the following two nodes. - Start - Home Assistant</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.homeAssistant/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.homeAssistant/#2-home-assistant-node","title":"2. Home Assistant node","text":"<ol> <li>First select your credentials for the Home Assistant node. You can find out how to create credentials here.</li> <li>From the Resource dropdown select Config.</li> <li>From the Operation dropdown select Get.</li> <li>Click on Execute Node to run the workflow.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.hubspot/","title":"HubSpot","text":"<p>HubSpot provides tools for social media marketing, content management, web analytics, landing pages, customer support, and search engine optimization.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.hubspot/#basic-operations","title":"Basic Operations","text":"<ul> <li>Contact<ul> <li>Create/Update a contact</li> <li>Delete a contact</li> <li>Get a contact</li> <li>Get all contacts</li> <li>Get recently created/updated contacts</li> <li>Search contacts</li> </ul> </li> <li>Contact List<ul> <li>Add contact to a list</li> <li>Remove a contact from a list</li> </ul> </li> <li>Company<ul> <li>Create a company</li> <li>Delete a company</li> <li>Get a company</li> <li>Get all companies</li> <li>Get recently created companies</li> <li>Get recently modified companies</li> <li>Search companies by domain</li> <li>Update a company</li> </ul> </li> <li>Deal<ul> <li>Create a deal</li> <li>Delete a deal</li> <li>Get a deal</li> <li>Get all deals</li> <li>Get recently created deals</li> <li>Get recently modified deals</li> <li>Search deals</li> <li>Update a deal</li> </ul> </li> <li>Engagement<ul> <li>Create an engagement</li> <li>Delete an engagement</li> <li>Get an engagement</li> <li>Get all engagements</li> </ul> </li> <li>Form<ul> <li>Get all fields from a form</li> <li>Submit data to a form</li> </ul> </li> <li>Ticket<ul> <li>Create a ticket</li> <li>Delete a ticket</li> <li>Get a ticket</li> <li>Get all tickets</li> <li>Update a ticket</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.hubspot/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to retrieve a contact from HubSpot. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - HubSpot</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.hubspot/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.hubspot/#2-hubspot-node","title":"2. HubSpot node","text":"<ol> <li>First of all, you'll have to enter credentials for the HubSpot node. You can find out how to do that here.</li> <li>Select the 'Contact' option under the Resource field.</li> <li>Select the 'Get' option under the Operation field.</li> <li>Enter the contact ID under the Contact ID field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.humanticAi/","title":"Humantic AI","text":"<p>Humantic AI provides AI-driven behavior and personality assessment of a candidate.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.humanticAi/#basic-operations","title":"Basic Operations","text":"<ul> <li>Profile<ul> <li>Create a profile</li> <li>Retrieve a profile</li> <li>Update a profile</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.humanticAi/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to create, update, and get a profile using the Humantic AI node. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Start - HTTP Request - Humantic AI</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.humanticAi/#1-start-node","title":"1. Start node","text":"<p>The Start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.humanticAi/#2-humantic-ai-node-create-profile","title":"2. Humantic AI node (create: profile)","text":"<p>This node will create a new profile for a candidate in Humantic AI. We will create a new profile using the LinkedIn URL of a candidate.</p> <ol> <li>First of all, you'll have to enter credentials for the Humantic AI node. You can find out how to do that here.</li> <li>Enter the LinkedIn URL of the candidate in the User ID field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node creates a new profile using the LinkedIn URL of the candidate.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.humanticAi/#3-http-request-node-get","title":"3. HTTP Request node (GET)","text":"<p>This node will fetch the resume of the candidate from a URL that we specify. We will pass on this resume to the next node in the workflow.</p> <ol> <li>Enter the URL of the candidate's resume in the URL field.</li> <li>Select 'File' from the Response Format dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node fetches the resume of the candidate from the URL we specified.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.humanticAi/#4-humantic-ai1-node-update-profile","title":"4. Humantic AI1 node (update: profile)","text":"<p>This node will update the information of the candidate that we created using the Humantic AI node. We will add the candidate's resume that we fetched in the previous node.</p> <ol> <li>Select the credentials that you entered in the previous Humantic AI node.</li> <li>Select 'Update' from the Operation dropdown list.</li> <li>Click on the gears icon next to the User ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Humantic AI &gt; Output Data &gt; JSON &gt; results &gt; userid. You can also add the following expression: <code>{{$node[\"Humantic AI\"].json[\"results\"][\"userid\"]}}</code>.</li> <li>Toggle Send Resume to <code>true</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node updates the information of the candidate that we created using the Humantic AI node. Here, the node has added the resume of the candidate.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.humanticAi/#5-humantic-ai2-node-get-profile","title":"5. Humantic AI2 node (get: profile)","text":"<p>This node will return the <code>Hiring</code> persona for the candidate that we created using the Humantic AI node.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Click on the gears icon next to the User ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Humantic AI &gt; Output Data &gt; JSON &gt; results &gt; userid. You can also add the following expression: <code>{{$node[\"Humantic AI\"].json[\"results\"][\"userid\"]}}</code>.</li> <li>Click on the Add Option button.</li> <li>Select 'Hiring' from the Persona dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns the <code>Hiring</code> persona for the candidate that we created using the Humantic AI node (column headers are not visible in the screenshot since we've scrolled down to show the data).</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.hunter/","title":"Hunter","text":"<p>Hunter is a company that produces a platform that helps find and verify professional email addresses.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.hunter/#basic-operations","title":"Basic Operations","text":"<ul> <li>Get every email address found on the internet using a given domain name, with sources</li> <li>Generate or retrieve the most likely email address from a domain name, a first name and a last name</li> <li>Verify the deliverability of an email address</li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.hunter/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to verify the deliverability of an email address using Hunter. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - Hunter</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.hunter/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.hunter/#2-hunter-node","title":"2. Hunter node","text":"<ol> <li>First of all, you'll have to enter credentials for the Hunter node. You can find out how to do that here.</li> <li>Select 'Email Verifier' from the Operation dropdown list.</li> <li>Enter the email in the Email field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.intercom/","title":"Intercom","text":"<p>Intercom is a company that produces a messaging platform which allows businesses to communicate with prospective and existing customers within their app, on their website, through social media, or via email.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.intercom/#basic-operations","title":"Basic Operations","text":"<ul> <li>Company<ul> <li>Create a new company</li> <li>Get data of a company</li> <li>Get data of all companies</li> <li>Update a company</li> <li>List company's users</li> </ul> </li> <li>Lead<ul> <li>Create a new lead</li> <li>Delete a lead</li> <li>Get data of a lead</li> <li>Get data of all leads</li> <li>Update new lead</li> </ul> </li> <li>User<ul> <li>Create a new user</li> <li>Delete a user</li> <li>Get data of a user</li> <li>Get data of all users</li> <li>Update a user</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.intercom/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to create a new user in Intercom. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - Intercom</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.intercom/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.intercom/#2-intercom-node","title":"2. Intercom node","text":"<ol> <li>First of all, you'll have to enter credentials for the Intercom node. You can find out how to do that here.</li> <li>Select 'Email' from the dropdown list for the Identifier Type field.</li> <li>Enter the email in the Value field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.invoiceNinja/","title":"Invoice Ninja","text":"<p>Invoice Ninja is a free open-source online invoicing app for freelancers &amp; businesses. It offers invoicing, payments, expense tracking, &amp; time-tasks.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.invoiceNinja/#basic-operations","title":"Basic Operations","text":"<ul> <li>Client<ul> <li>Create a new client</li> <li>Delete a client</li> <li>Get data of a client</li> <li>Get data of all clients</li> </ul> </li> <li>Expense<ul> <li>Create a new expense</li> <li>Delete an expense</li> <li>Get data of an expense</li> <li>Get data of all expenses</li> </ul> </li> <li>Invoice<ul> <li>Create a new invoice</li> <li>Delete a invoice</li> <li>Email an invoice</li> <li>Get data of a invoice</li> <li>Get data of all invoices</li> </ul> </li> <li>Payment<ul> <li>Create a new payment</li> <li>Delete a payment</li> <li>Get data of a payment</li> <li>Get data of all payments</li> </ul> </li> <li>Quote<ul> <li>Create a new quote</li> <li>Delete a quote</li> <li>Email an quote</li> <li>Get data of a quote</li> <li>Get data of all quotes</li> </ul> </li> <li>Task<ul> <li>Create a new task</li> <li>Delete a task</li> <li>Get data of a task</li> <li>Get data of all tasks</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.invoiceNinja/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to get multiple clients' data from Invoice Ninja. You can also find the workflow on this website. This example usage workflow uses the following two nodes.</p> <ul> <li>Start</li> <li>Invoice Ninja</li> </ul> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.invoiceNinja/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.invoiceNinja/#2-invoice-ninja-node","title":"2. Invoice Ninja node","text":"<ol> <li>First of all, you'll have to enter credentials for the Invoice Ninja node. You can find out how to do that here.</li> <li>Select the 'Get All' option from the Operation dropdown list.</li> <li>Click on Execute Node to run the workflow.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.iterable/","title":"Iterable","text":"<p>Iterable is a cross-channel platform that allows marketers to create, optimize, and measure every interaction throughout the customer journey.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.iterable/#basic-operations","title":"Basic Operations","text":"<ul> <li>Event<ul> <li>Record the actions a user perform</li> </ul> </li> <li>User<ul> <li>Create/Update a user</li> <li>Delete a user</li> <li>Get a user</li> </ul> </li> <li>User List<ul> <li>Add user to list</li> <li>Remove a user from a list</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.iterable/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to create, update, and get a user from Iterable. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Start - Iterable</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.iterable/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.iterable/#2-iterable-node-upsert-user","title":"2. Iterable node (upsert: user)","text":"<p>This node will create a new user in Iterable.</p> <ol> <li>First of all, you'll have to enter credentials for the Iterable node. You can find out how to do that here.</li> <li>Select 'Email' in the Identifier field.</li> <li>Enter the email address in the Value field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node creates a new user in Iterable.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.iterable/#3-iterable1-node-upsert-user","title":"3. Iterable1 node (upsert: user)","text":"<p>This node will update the information of the user that we created in the previous node.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Email' in the Identifier field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Iterable &gt; Parameters &gt; value. You can also add the following expression: <code>{{$node[\"Iterable\"].parameter[\"value\"]}}</code>.</li> <li>Click on the Add Field button and select Data Fields.</li> <li>Click on the Add Data Field button.</li> <li>Enter <code>Name</code> in the Key field.</li> <li>Enter the name of the user in the Value field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node updates the information of the user that we created in the previous node.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.iterable/#4-iterable2-node-get-user","title":"4. Iterable2 node (get: user)","text":"<p>This node will get the information of the user that we created using the Iterable node.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Get' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Iterable &gt; Parameters &gt; value. You can also add the following expression: <code>{{$node[\"Iterable\"].parameter[\"value\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node gets the information of the user that we created using the Iterable node.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.jenkins/","title":"Jenkins","text":"<p>Jenkins is an open source automation server that provides hundreds of plugins to support building, deploying and automating any project.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.jenkins/#basic-operations","title":"Basic Operations","text":"<ul> <li>Build<ul> <li>List Builds</li> </ul> </li> <li>Instance<ul> <li>Cancel quiet down state</li> <li>Put Jenkins in quiet mode, no builds can be started, Jenkins is ready for shutdown</li> <li>Restart Jenkins immediately on environments where it is possible</li> <li>Restart Jenkins once no jobs are running on environments where it is possible</li> <li>Shutdown once no jobs are running</li> <li>Shutdown Jenkins immediately</li> </ul> </li> <li>Job<ul> <li>Copy a specific job</li> <li>Create a new job</li> <li>Trigger a specific job</li> <li>Trigger a specific job</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.jenkins/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to get list of builds in Jenkins. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - Jenkins</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.jenkins/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.jenkins/#2-circleci-node","title":"2. CircleCI node","text":"<ol> <li>First of all, you'll have to enter credentials for the Jenkins node. You can find out how to do that here.</li> <li>Select the Build  from the dropdown in the Resources field.</li> <li>Get All Builds is not selected in Operations dropdown.</li> <li>Adjust the depth or add optional parameter by clickin Add Field button</li> <li>Click on Execute Node to run the workflow.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.jira/","title":"Jira","text":"<p>Jira is a proprietary issue tracking product developed by Atlassian that allows bug tracking and agile project management.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.jira/#basic-operations","title":"Basic Operations","text":"<ul> <li>Issue<ul> <li>Get issue changelog</li> <li>Create a new issue</li> <li>Delete an issue</li> <li>Get an issue</li> <li>Get all issues</li> <li>Create an email notification for an issue and add it to the mail queue</li> <li>Return either all transitions or a transition that can be performed by the user on an issue, based on the issue's status</li> <li>Update an issue</li> </ul> </li> <li>Issue Attachment<ul> <li>Add attachment to issue</li> <li>Get an attachment</li> <li>Get all attachments</li> <li>Remove an attachment</li> </ul> </li> <li>Issue Comment<ul> <li>Add comment to issue</li> <li>Get a comment</li> <li>Get all comments</li> <li>Remove a comment</li> <li>Update a comment</li> </ul> </li> <li>User<ul> <li>Create a new user.</li> <li>Delete a user.</li> <li>Retrieve a user.</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.jira/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to create a new issue in Jira. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - Jira</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.jira/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.jira/#2-jira-node","title":"2. Jira node","text":"<ol> <li>First of all, you'll have to enter credentials for the Jira node. You can find out how to do that here.</li> <li>Select your project from the dropdown list for the Project field.</li> <li>Select an issue type from the dropdown list for the Issue Type field.</li> <li>Enter the summary of the issue in the Summary field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.jira/#faqs","title":"FAQs","text":""},{"location":"workflow/integrations/nodes/workflow-nodes-base.jira/#how-to-fetch-issues-for-a-specific-project","title":"How to fetch issues for a specific project?","text":"<p>The 'Get All' operation returns all the issues from Jira. To fetch issues for a particular project, you need to use JQL (Jira Query Language).</p> <p>For example, if you want to receive all the issues of a project named <code>n8n</code>, follow the steps mentioned below. - Select 'Get All' from the Operation dropdown list. - Toggle Return All to true. - Click on Add Option and select 'JQL'. - Enter <code>project=n8n</code> in the JQL field.</p> <p>This query will fetch all the issues in the project named <code>n8n</code>. Enter the name of your project instead of <code>n8n</code> to fetch all the issues for your project.</p> <p>You can refer to the official documentation about JQL to learn more about it.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.kafka/","title":"Kafka","text":"<p>Kafka is an open-source distributed event streaming platform that one can use for high-performance data pipelines, streaming analytics, data integration, and mission-critical applications.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.kafka/#basic-operations","title":"Basic Operations","text":"<ul> <li>Send message</li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.kafka/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to send updates about the position of the ISS every minute to a topic in Kafka using the Kafka node. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Cron - HTTP Request - Set - Kafka</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.kafka/#1-cron-node","title":"1. Cron node","text":"<p>The Cron node will trigger the workflow every minute.</p> <ol> <li>Click on Add Cron Time.</li> <li>Select 'Every Minute' from the Mode dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the Cron node is configured to trigger the workflow every minute.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.kafka/#2-http-request-node-get","title":"2. HTTP Request node (GET)","text":"<p>This node will make a GET request to the API <code>https://api.wheretheiss.at/v1/satellites/25544/positions</code> to fetch the position of the ISS. This information gets passed on to the next node in the workflow.</p> <ol> <li>Enter <code>https://api.wheretheiss.at/v1/satellites/25544/positions</code> in the URL field.</li> <li>Click on the Add Parameter button in the Query Parameters section.</li> <li>Enter <code>timestamps</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Enter the following expression: <code>{{Date.now()}}</code>. This expression will return the current timestamp.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node makes a GET request to the API and returns the information about the location of the ISS.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.kafka/#3-set-node","title":"3. Set node","text":"<p>We will use the Set node to ensure that only the data that we set in this node gets passed on to the next nodes in the workflow.</p> <ol> <li>Click on Add Value and select 'String' from the dropdown list.</li> <li>Enter <code>Name</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; HTTP Request &gt; Output Data &gt; JSON &gt; 0 &gt; name. You can also add the following expression: <code>{{$node[\"HTTP Request\"].json[\"0\"][\"name\"]}}</code>.</li> <li>Click on Add Value and select 'String' from the dropdown list.</li> <li>Enter <code>Latitude</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; HTTP Request &gt; Output Data &gt; JSON &gt; 0 &gt; latitude. You can also add the following expression: <code>{{$node[\"HTTP Request\"].json[\"0\"][\"latitude\"]}}</code>.</li> <li>Click on Add Value and select 'String' from the dropdown list.</li> <li>Enter <code>Longitude</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; HTTP Request &gt; Output Data &gt; JSON &gt; 0 &gt; longitude. You can also add the following expression: <code>{{$node[\"HTTP Request\"].json[\"0\"][\"longitude\"]}}</code>.</li> <li>Click on Add Value and select 'String' from the dropdown list.</li> <li>Enter <code>Timestamp</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; HTTP Request &gt; Output Data &gt; JSON &gt; 0 &gt; timpestamp. You can also add the following expression: <code>{{$node[\"HTTP Request\"].json[\"0\"][\"timestamp\"]}}</code>.</li> <li>Toggle Keep Only Set to <code>true</code>. We set this option to true to ensure that only the data that we have set in this node get passed on to the next nodes in the workflow.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node uses the data from the previous node and returns the data that we set for the workflow.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.kafka/#4-kafka-node","title":"4. Kafka node","text":"<p>This node will send the data from the previous node to the <code>iss-position</code> topic in Kafka. If you have created a topic with a different name in Kafka, you can use that topic name instead.</p> <ol> <li>First of all, you'll have to enter credentials for the Kafka node. You can find out how to do that here.</li> <li>Enter the name of the topic in the Topic field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node sends the data from the previous node to the <code>iss-position</code> topic in Kafka.</p> <p></p> <p> Activate workflow for production</p> <p>This example workflow uses the Cron node, which is a Trigger node. You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Cron node.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.keap/","title":"Keap","text":"<p>Keap is an e-mail marketing and sales platform for small businesses, including products to manage and optimize the customer lifecycle, customer relationship management, marketing automation, lead capture, and e-commerce.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.keap/#basic-operations","title":"Basic Operations","text":"<ul> <li>Company<ul> <li>Create a company</li> <li>Retrieve all companies</li> </ul> </li> <li>Contact<ul> <li>Create/update a contact</li> <li>Delete an contact</li> <li>Retrieve an contact</li> <li>Retrieve all contacts</li> </ul> </li> <li>Contact Note<ul> <li>Create a note</li> <li>Delete a note</li> <li>Get a notes</li> <li>Retrieve all notes</li> <li>Update a note</li> </ul> </li> <li>Contact Tag<ul> <li>Add a list of tags to a contact</li> <li>Delete a contact's tag</li> <li>Retrieve all contact's tags</li> </ul> </li> <li>Ecommerce Order<ul> <li>Create an ecommerce order</li> <li>Get an ecommerce order</li> <li>Delete an ecommerce order</li> <li>Retrieve all ecommerce orders</li> </ul> </li> <li>Ecommerce Product<ul> <li>Create an ecommerce product</li> <li>Delete an ecommerce product</li> <li>Get an ecommerce product</li> <li>Retrieve all ecommerce product</li> </ul> </li> <li>Email<ul> <li>Create a record of an email sent to a contact</li> <li>Retrieve all sent emails</li> <li>Send Email</li> </ul> </li> <li>File<ul> <li>Delete a file</li> <li>Retrieve all files</li> <li>Upload a file</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.keap/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to get all contacts from Keap. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - Keap</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.keap/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.keap/#2-keap-node","title":"2. Keap node","text":"<ol> <li>First of all, you'll have to enter credentials for the Keap node. You can find out how to do that here.</li> <li>Select the 'Contact' option from the Resource dropdown list.</li> <li>Select the 'Get All' option from the Operation dropdown list.</li> <li>Click on Execute Node to run the workflow.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.kitemaker/","title":"Kitemaker","text":"<p>Kitemaker is a collaboration tool built for designers, engineers, and product managers in remote software development teams.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.kitemaker/#basic-operations","title":"Basic Operations","text":"<ul> <li>Organization<ul> <li>Retrieve data on the logged-in user's organization.</li> </ul> </li> <li>Space<ul> <li>Retrieve data on all the spaces in the logged-in user's organization.</li> </ul> </li> <li>User<ul> <li>Retrieve data on all the users in the logged-in user's organization.</li> </ul> </li> <li>Work Item<ul> <li>Create</li> <li>Get</li> <li>Get All</li> <li>Update</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.kitemaker/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to create, update, and get a work item from Kitemaker. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Start - Kitemaker</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.kitemaker/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.kitemaker/#2-kitemaker-node-workitem-create","title":"2. Kitemaker node (workItem: create)","text":"<p>This node will create a work item in Kitemaker.</p> <ol> <li>First of all, you'll have to enter credentials for the Kitemaker node. You can find out how to do that here.</li> <li>Select 'Create' from the Operation dropdown list.</li> <li>Enter a title in the Title field.</li> <li>Select 'In progress' from the Status ID dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node creates a new work item in Kitemaker.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.kitemaker/#3-kitemaker1-node-workitem-update","title":"3. Kitemaker1 node (workItem: update)","text":"<p>This node will update the status of the item that we created using the previous node.</p> <ol> <li>Select the credentials that you entered in the previous Kitemaker node.</li> <li>Select 'Update' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Work Item ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$json[\"id\"]}}</code>.</li> <li>Click on the Add Field button and select 'Status ID' from the dropdown list.</li> <li>Select 'Done' from the Status ID dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node updates the status of the item that got created previously.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.kitemaker/#4-kitemaker2-node-workitem-get","title":"4. Kitemaker2 node (workItem: get)","text":"<p>This node will retrieve the information about the item that we created earlier.</p> <ol> <li>Select the credentials that you entered in the previous Kitemaker node.</li> <li>Click on the gears icon next to the Work Item ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$json[\"id\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node retrieves the information of the work item that we created earlier.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.koBoToolbox/","title":"KoBo Toolbox","text":"<p>KoBo toolbox is a field survey and data collection tool that makes it easy to design interactive forms to be completed offline from mobile devices. It is available both as a free cloud solution or as a self-hosted version.</p> <p>Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.koBoToolbox/#operations","title":"Operations","text":"<ul> <li>Form<ul> <li>Get</li> <li>GetAll</li> </ul> </li> <li>Hook<ul> <li>Get</li> <li>GetAll</li> <li>Logs</li> <li>Retry All</li> <li>Retry One</li> </ul> </li> <li>Submission<ul> <li>Delete</li> <li>Get</li> <li>Get All</li> <li>Get Validation Status</li> <li>Update Validation Status</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.koBoToolbox/#options","title":"Options","text":""},{"location":"workflow/integrations/nodes/workflow-nodes-base.koBoToolbox/#query-options","title":"Query Options","text":"<p>The Query Submission operation supports query options:</p> <ul> <li>In the main section of the Parameters panel:<ul> <li>Start controls the index offset to start the query from (to use the API pagination logic).</li> <li>Limit sets the maximum number of records to return. Note that the API always has a limit of 30,000 returned records, whatver value you provide.</li> </ul> </li> <li>In the Query Options section, you can activate the following parameters:<ul> <li>Query lets you specify filter predicates in MongoDB's JSON query format. For example: <code>{\"status\": \"success\", \"_submission_time\": {\"$lt\": \"2021-11-01T01:02:03\"}}</code> queries for all submissions with the value <code>success</code> for the field <code>status</code>, and submitted before November 1st, 2021, 01:02:03.</li> <li>Fields lets you specifiy the list of fields you want to fetch, to make the response lighter.</li> <li>Sort lets you provide a list of sorting criteria in MongoDB JSON format. For example, <code>{\"status\": 1, \"_submission_time\": -1}</code> specifies a sort order by ascending status, and then descending submission time.</li> </ul> </li> </ul> <p>More details about these options can be found in the Formhub API docs</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.koBoToolbox/#submission-options","title":"Submission options","text":"<p>All operations that return form submission data offer options to tweak the response. These include:</p> <ul> <li>Download options lets you download any attachment linked to each particular form submissions, such as pictures and videos. It also lets you select the naming pattern, and the file size to download (if available - typically for images). </li> <li>Formatting options perform some reformatting as described in About reformatting.</li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.koBoToolbox/#about-reformatting","title":"About reformatting","text":"<p>The default JSON format for KoBoToolbox submission data is sometimes hard to deal with, because it is not schema-aware, and all fields are therefore returned as strings.</p> <p>This node provides a lightweight opinionated reformatting logic, enabled with the Reformat? parameter, available on all operations that return form submissions: the submission query, get, and the attachment download operations.</p> <p>When enabled, the reformatting:</p> <ul> <li>Reorganizes the JSON into a multi-level hierarchy following the form's groups. By default, question grouping hierarchy is materialized by a <code>/</code> character in the field names, for example <code>Group1/Question1</code>. With reformatting enabled, n8n reorganizes these into <code>Group1.Question1</code>, as nested JSON objects.</li> <li>Renames fields to trim <code>_</code> (not supported by many downstream systems).</li> <li>Parses all geospatial fields (Point, Line, and Area question types) into their standard GeoJSON equivalent.</li> <li>Splits all fields matching any of the the Multiselect Mask wildcard masks into an array. Since the multi-select fields appear as space-separated strings, they can't be guessed algorithmically, so you must provide a field naming mask. Format the masks as a comma-separated list. Lists support the <code>*</code> wildcard.</li> <li>Converts all fields matching any of the Number Mask wildcard masks into a JSON float.</li> </ul> <p>Here's a detailed example in JSON:</p> <pre><code>{\n\"_id\": 471987,\n\"formhub/uuid\": \"189436bb09a54957bfcc798e338b54d6\",\n\"start\": \"2021-12-05T16:13:38.527+02:00\",\n\"end\": \"2021-12-05T16:15:33.407+02:00\",\n\"Field_Details/Field_Name\": \"Test Fields\",\n\"Field_Details/Field_Location\": \"-1.932914 30.078211 1421 165\",\n\"Field_Details/Field_Shape\": \"-1.932914 30.078211 1421 165;-1.933011 30.078085 0 0;-1.933257 30.078004 0 0;-1.933338 30.078197 0 0;-1.933107 30.078299 0 0;-1.932914 30.078211 1421 165\",\n\"Field_Details/Crops_Grown\": \"maize beans avocado\",\n\"Field_Details/Field_Size_sqm\": \"2300\",\n\"__version__\": \"veGcULpqP6JNFKRJbbMvMs\",\n\"meta/instanceID\": \"uuid:2356cbbe-c1fd-414d-85c8-84f33e92618a\",\n\"_xform_id_string\": \"ajXVJpBkTD5tB4Nu9QXpgm\",\n\"_uuid\": \"2356cbbe-c1fd-414d-85c8-84f33e92618a\",\n\"_attachments\": [],\n\"_status\": \"submitted_via_web\",\n\"_geolocation\": [\n-1.932914,\n30.078211\n],\n\"_submission_time\": \"2021-12-05T14:15:44\",\n\"_tags\": [],\n\"_notes\": [],\n\"_validation_status\": {},\n\"_submitted_by\": null\n}\n</code></pre> <p>With reformatting enabled, and the appropriate masks for multi-select and number formatting (for example, <code>Crops_*</code> and <code>*_sqm</code> respecitvely), n8n parses it into:</p> <pre><code>{\n\"id\": 471987,\n\"formhub\": {\n\"uuid\": \"189436bb09a54957bfcc798e338b54d6\"\n},\n\"start\": \"2021-12-05T16:13:38.527+02:00\",\n\"end\": \"2021-12-05T16:15:33.407+02:00\",\n\"Field_Details\": {\n\"Field_Name\": \"Test Fields\",\n\"Field_Location\": {\n\"lat\": -1.932914,\n\"lon\": 30.078211\n},\n\"Field_Shape\": {\n\"type\": \"polygon\",\n\"coordinates\": [\n{\n\"lat\": -1.932914,\n\"lon\": 30.078211\n},\n{\n\"lat\": -1.933011,\n\"lon\": 30.078085\n},\n{\n\"lat\": -1.933257,\n\"lon\": 30.078004\n},\n{\n\"lat\": -1.933338,\n\"lon\": 30.078197\n},\n{\n\"lat\": -1.933107,\n\"lon\": 30.078299\n},\n{\n\"lat\": -1.932914,\n\"lon\": 30.078211\n}\n]\n},\n\"Crops_Grown\": [\n\"maize\",\n\"beans\",\n\"avocado\"\n],\n\"Field_Size_sqm\": 2300\n},\n\"version\": \"veGcULpqP6JNFKRJbbMvMs\",\n\"meta\": {\n\"instanceID\": \"uuid:2356cbbe-c1fd-414d-85c8-84f33e92618a\"\n},\n\"xform_id_string\": \"ajXVJpBkTD5tB4Nu9QXpgm\",\n\"uuid\": \"2356cbbe-c1fd-414d-85c8-84f33e92618a\",\n\"attachments\": [],\n\"status\": \"submitted_via_web\",\n\"geolocation\": {\n\"lat\": -1.932914,\n\"lon\": 30.078211\n},\n\"submission_time\": \"2021-12-05T14:15:44\",\n\"tags\": [],\n\"notes\": [],\n\"validation_status\": {},\n\"submitted_by\": null\n}\n</code></pre>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.lemlist/","title":"Lemlist","text":"<p>Lemlist is an email outreach platform that allows you to automatically generate personalized images and videos and send personalized cold emails.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.lemlist/#basic-operations","title":"Basic Operations","text":"<ul> <li>Activity<ul> <li>Get All</li> </ul> </li> <li>Campaign<ul> <li>Get All</li> </ul> </li> <li>Lead<ul> <li>Create</li> <li>Delete</li> <li>Get</li> <li>Unsubscribe</li> </ul> </li> <li>Team<ul> <li>Get</li> </ul> </li> <li>Unsubscribes<ul> <li>Add</li> <li>Delete</li> <li>Get All</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.lemlist/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to list emails from Airtable and create corresponding leads in Lemlist. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Start - [Airtable]/integrations/nodes/workflow-nodes-base.airtable/) - Lemlist</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.lemlist/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.lemlist/#2-airtable-node-list","title":"2. Airtable node (List)","text":"<p>This node will list all the records from Airtable. Create a table like this in your Airtable base.</p> <ol> <li>First of all, you'll have to enter credentials for the Airtable node. You can find out how to do that here.</li> <li>Select the 'List' option from the Operation dropdown list.</li> <li>Enter the Base ID in the Base ID field. For obtaining the Base ID, head over to their API page and select the correct base. You\u2019ll find the Base ID there.</li> <li>Enter the name of your table in the Table field.</li> <li>Click on the gears icon next to the Table field and click on Add Expression.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns the information of the leads.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.lemlist/#3-lemlist-node-create-lead","title":"3. Lemlist node (create: lead)","text":"<p>This node will create new leads for a campaign in Lemlist.</p> <ol> <li>First of all, you'll have to enter credentials for the Lemlist node. You can find out how to do that here.</li> <li>Select 'Lead' from the Resource dropdown list.</li> <li>Select a campaign from the Campaign ID dropdown list.</li> <li> <p>Click on the gears icon next to the Email field and click on Add Expression.</p> </li> <li> <p>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; fields &gt; Email. You can also add the following expression: <code>{{$json[\"fields\"][\"Email\"]}}</code>.</p> </li> <li>Click on the Add Field button and select 'First Name'.</li> <li>Click on the gears icon next to the First Name field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; fields &gt; Name. You can also add the following expression: <code>{{$json[\"fields\"][\"Name\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node creates new leads in Lemlist.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.lemlist/#4-lemlist-node-get-lead","title":"4. Lemlist node (get: lead)","text":"<p>This node will return the information of the leads that we created in the previous node.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Lead' from the Resource dropdown list.</li> <li>Select 'Get' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Email field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Airtable &gt; Output Data &gt; JSON &gt; fields &gt; Email. You can also add the following expression: <code>{{$node[\"Airtable\"].json[\"fields\"][\"Email\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns the information about the leads we created in the previous node.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.line/","title":"Line","text":"<p>Line is a mobile messenger app that allows you to make free voice calls and send messages.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.line/#basic-operations","title":"Basic Operations","text":"<ul> <li>Notification<ul> <li>Sends notifications to users or groups</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.line/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to send daily weather updates via a notification using the Line node. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Cron - OpenWeatherMap - Line</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.line/#1-cron-node","title":"1. Cron node","text":"<p>The Cron node will trigger the workflow daily at 9 AM.</p> <ol> <li>Click on Add Cron Time.</li> <li>Set hours to 9 in the Hour field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the Cron node is configured to trigger the workflow every day at 9 AM.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.line/#2-openweathermap-node-current-weather","title":"2. OpenWeatherMap node (Current Weather)","text":"<p>This node will return data about the current weather in Berlin. To get the weather updates for your city, you can enter the name of your city instead.</p> <ol> <li>First of all, you'll have to enter credentials for the OpenWeatherMap node. You can find out how to do that here.</li> <li>Enter <code>berlin</code> in the City field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns data about the current weather in Berlin.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.line/#3-line-node-send-notification","title":"3. Line node (send: notification)","text":"<p>This node will send a notification with the weather update.</p> <ol> <li>First of all, you'll have to enter credentials for the Line node. You can find out how to do that here.</li> <li> <p>Click on the gears icon next to the Message field and click on Add Expression.</p> </li> <li> <p>Enter the following message in the Expression field: <code>Hey! The temperature outside is {{$node[\"OpenWeatherMap\"].json[\"main\"][\"temp\"]}}\u00b0C.</code>.</p> </li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node sends a notification with the weather update.</p> <p></p> <p> Activate workflow for production</p> <p>This example workflow uses the Cron node, which is a Trigger node. You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Cron node.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.linear/","title":"Linear","text":"<p>Linear is a SaaS issue tracking tool.</p> <p>Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.linear/#operations","title":"Operations","text":"<ul> <li>Issue<ul> <li>Create</li> <li>Delete</li> <li>Get</li> <li>Get All</li> <li>Update</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.lingvaNex/","title":"LingvaNex","text":"<p>LingvaNex is a service that translates text, web pages, text on images, documents between English and over 112 other languages.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.lingvaNex/#basic-operations","title":"Basic Operations","text":"<ul> <li>Translate data</li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.lingvaNex/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to translate cocktail instructions to Italian. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Start - HTTP Request - LingvaNex</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.lingvaNex/#1-start-node","title":"1. Start node","text":"<p>The Start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.lingvaNex/#2-http-request-node-get","title":"2. HTTP Request node (GET)","text":"<p>This node will make a GET request to the API <code>https://www.thecocktaildb.com/api/json/v1/1/random.php</code> to fetch a random cocktail. This information gets passed on to the next node in the workflow.</p> <ol> <li>Enter <code>https://www.thecocktaildb.com/api/json/v1/1/random.php</code> in the URL field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node makes a GET request to the API and returns information about a random cocktail.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.lingvaNex/#3-lingvanex-node","title":"3. LingvaNex node","text":"<p>This node will translate the cocktail instructions that we got from the previous node to Italian. To translate the instructions in your language, select your language instead.</p> <ol> <li> <p>First of all, you'll have to enter credentials for the LingvaNex node. You can find out how to do that here.</p> </li> <li> <p>Click on the gears icon next to the Text field and click on Add Expression.</p> </li> <li>Select the following in the Variable Selector section: Nodes &gt; HTTP Request &gt; Output Data &gt; JSON &gt; drinks &gt; [item: 0] &gt; strInstructions. You can also add the following expression: <code>{{$node[\"HTTP Request\"].json[\"drinks\"][0][\"strInstructions\"]}}</code>.</li> <li>Select 'Italian' from the Translate To dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node translates the instructions of the cocktail to Italian.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.linkedIn/","title":"LinkedIn","text":"<p>LinkedIn is an employment-oriented online service. It is mainly used for professional networking, including employers posting jobs and job seekers posting their CVs.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.linkedIn/#basic-operations","title":"Basic Operations","text":"<ul> <li>Post<ul> <li>Create a new post</li> </ul> </li> </ul> <p> Keep in mind</p> <p>If posting as an Organization enter only the organization number in the URN field. For example, <code>03262013</code> not <code>urn:li:company:03262013</code>.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.linkedIn/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to get an image from a URL and post it on LinkedIn. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Start - HTTP Request - LinkedIn</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.linkedIn/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.linkedIn/#2-http-request-node","title":"2. HTTP Request node","text":"<ol> <li>Enter the URL of the image you want to download in the URL field.</li> <li>Select File from the Response Format dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.linkedIn/#3-linkedin-node","title":"3. LinkedIn node","text":"<ol> <li>First of all, you'll have to enter credentials for the LinkedIn node. You can find out how to do that here.</li> <li>Select 'Person' from the Post As dropdown list.</li> <li>Select the person you want to post as from the Person dropdown list.</li> <li>Enter a message in the Text field.</li> <li>Select 'Image' from the Media Category dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.magento2/","title":"Magento 2","text":"<p>Magento is an e-commerce platform enabling retailers and brands to build engaging online shopping experiences.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.magento2/#basic-operations","title":"Basic Operations","text":"<ul> <li>Customer<ul> <li>Create a new customer</li> <li>Delete a customer</li> <li>Get a customer</li> <li>Get all customers</li> <li>Update a customer</li> </ul> </li> <li>Invoice<ul> <li>Create an invoice</li> </ul> </li> <li>Order<ul> <li>Cancel an order</li> <li>Get an order</li> <li>Get all orders</li> <li>Ship an order</li> </ul> </li> <li>Product<ul> <li>Create a product</li> <li>Delete a product</li> <li>Get a product</li> <li>Get all producs</li> <li>Update a product</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mailcheck/","title":"Mailcheck","text":"<p>Mailcheck is an application that allows you to clean your subscription list from bounces and enrich data with customers.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mailcheck/#basic-operations","title":"Basic Operations","text":"<ul> <li>Email<ul> <li>Check</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mailcheck/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to validate emails stored in Airtable using the Mailcheck node. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Start - [Airtable]/integrations/nodes/workflow-nodes-base.airtable/) - Mailcheck - Set</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mailcheck/#1-start-node","title":"1. Start node","text":"<p>The Start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mailcheck/#2-airtable-node-list","title":"2. Airtable node (List)","text":"<p>Create a table like this in your Airtable base. The Airtable node will list all the records from a table.</p> <ol> <li>First of all, you'll have to enter credentials for the Airtable node. You can find out how to do that here.</li> <li>Select the 'List' option from the Operation dropdown list.</li> <li>Enter the Base ID in the Base ID field. For obtaining the Base ID, head over to their API page and select the correct base. You\u2019ll find the Base ID there.</li> <li>Enter the name of your table in the Table field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns all the records from the table.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mailcheck/#2-mailcheck-node-check-email","title":"2. Mailcheck node (check: email)","text":"<p>This node will check the emails that got returned by the previous node.</p> <ol> <li> <p>First of all, you'll have to enter credentials for the Mailcheck node. You can find out how to do that here.</p> </li> <li> <p>Click on the gears icon next to the Email field and click on Add Expression.</p> </li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; fields &gt; email. You can also add the following expression: <code>{{$json[\"fields\"][\"Email\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node checks the email that got returned by the previous node.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mailcheck/#3-set-node","title":"3. Set node","text":"<p>We will use the Set node to ensure that only the data that we set in this node gets passed on to the next nodes in the workflow.</p> <ol> <li>Click on the Add Value button and select 'Boolean' from the dropdown list.</li> <li>Enter <code>Valid</code> in the Name field.</li> <li>Click on the gears icon next to the Value field.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; mxExists. You can also add the following expression: <code>{{$json[\"mxExists\"]}}</code>.</li> <li>Click on the Add Value button and select 'String' from the dropdown list.</li> <li>Enter <code>ID</code> in the Name field.</li> <li>Click on the gears icon next to the Value field.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Airtable &gt; Output Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$node[\"Airtable\"].json[\"id\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node sets the value for <code>Valid</code> and <code>ID</code>.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mailcheck/#4-airtable-update","title":"4. Airtable (Update)","text":"<p>This node will update the Valid field in the table.</p> <ol> <li>Select the credentials that you entered in the previous Airtable node.</li> <li>Select 'Update' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Base ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Airtable &gt; Parameters &gt; application. You can also add the following expression: <code>{{$node[\"Airtable\"].parameter[\"application\"]}}</code>.</li> <li>Click on the gears icon next to the Table field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Airtable &gt; Parameters &gt; table. You can also add the following expression: <code>{{$node[\"Airtable\"].parameter[\"table\"]}}</code>.</li> <li>Click on the gears icon next to the Id field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; ID. You can also add the following expression: <code>{{$json[\"ID\"]}}</code>.</li> <li>Toggle Update All Fields to <code>false</code>. This option will update only the fields that we specify.</li> <li>Click on the Add Field button.</li> <li>Enter <code>Valid</code> in the Name field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node updates the Valid field in the table.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mailchimp/","title":"Mailchimp","text":"<p>Mailchimp is an integrated marketing platform that allows business owners to automate their email campaigns and track user engagement.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mailchimp/#basic-operations","title":"Basic Operations","text":"<ul> <li>Campaign<ul> <li>Delete a campaign</li> <li>Get a campaign</li> <li>Get all the campaigns</li> <li>Replicate a campaign</li> <li>Creates a Resend to Non-Openers version of this campaign</li> <li>Send a campaign</li> </ul> </li> <li>List Group<ul> <li>Get all groups</li> </ul> </li> <li>Member<ul> <li>Create a new member on list</li> <li>Delete a member on list</li> <li>Get a member on list</li> <li>Get all members on list</li> <li>Update a new member on list</li> </ul> </li> <li>Member Tag<ul> <li>Add tags from a list member</li> <li>Remove tags from a list member</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mailchimp/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to add a new member to a list in Mailchimp. You can also find the workflow on this website. This example usage workflow uses the following two nodes.</p> <ul> <li>Start</li> <li>Mailchimp</li> </ul> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mailchimp/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mailchimp/#2-mailchimp-node","title":"2. Mailchimp node","text":"<ol> <li>First of all, you'll have to enter credentials for the Mailchimp node. You can find out how to do that here.</li> <li>Select the Mailchimp list from the List dropdown list.</li> <li>Enter the email address in the Email field.</li> <li>Select the status from the Status dropdown list.</li> <li>Click on Execute Node to run the workflow.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mailerLite/","title":"MailerLite","text":"<p>MailerLite is an email marketing solution that provides you with a user-friendly content editor, simplified subscriber management, and campaign reports with the most important statistics.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mailerLite/#basic-operations","title":"Basic Operations","text":"<ul> <li>Subscriber<ul> <li>Create a new subscriber</li> <li>Get an subscriber</li> <li>Get all subscribers</li> <li>Update an subscriber</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mailerLite/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to create, update, and get a subscriber using the MailerLite node. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Start - MailerLite</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mailerLite/#1-start-node","title":"1. Start node","text":"<p>The Start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mailerLite/#2-mailerlite-node-create-subscriber","title":"2. MailerLite node (create: subscriber)","text":"<p>This node will create a new subscriber in MailerLite. We will add the name of the subscriber along with their email.</p> <ol> <li> <p>First of all, you'll have to enter credentials for the MailerLite node. You can find out how to do that here.</p> </li> <li> <p>Enter the email address in the Email field.</p> </li> <li>Click on the Add Field button and select 'Name' from the dropdown list.</li> <li>Enter the name of the subscriber in the Name field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node creates a new subscriber with their name and email.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mailerLite/#3-mailerlite1-node-update-subscriber","title":"3. MailerLite1 node (update: subscriber)","text":"<p>This node will update the information of the subscriber that we created in the previous node. We will add the information about the city of the subscriber using this node.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Update' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Subscriber Email field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; MailerLite &gt; Output Data &gt; JSON &gt; email. You can also add the following expression: <code>{{$node[\"MailerLite\"].json[\"email\"]}}</code>.</li> <li>Click on the Add Field button and select 'Custom Fields' from the dropdown list.</li> <li>Click on the Add Custom Field button.</li> <li>Select 'city' from the Field ID dropdown list.</li> <li>Enter the name of the city in the Value field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node updates the information of the subscriber that we created in the previous node. Here, the node has added information about the city of the subscriber.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mailerLite/#3-mailerlite2-node-get-subscriber","title":"3. MailerLite2 node (get: subscriber)","text":"<p>This node will return the information of the subscriber that we created using the MailerLite node.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Get' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Subscriber Email field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; MailerLite &gt; Output Data &gt; JSON &gt; email. You can also add the following expression: <code>{{$node[\"MailerLite\"].json[\"email\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns the information of the subscriber that we created using the MailerLite node.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mailgun/","title":"Mailgun","text":"<p>Mailgun is a developer-friendly email sending platform that provides API-based email services that are easy to use.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mailgun/#basic-operations","title":"Basic Operations","text":"<ul> <li>Send an email</li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mailgun/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to send an email using Mailgun. You can also find the workflow on this website. This example usage workflow uses the following two nodes.</p> <ul> <li>Start</li> <li>Mailgun</li> </ul> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mailgun/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mailgun/#2-mailgun-node","title":"2. Mailgun node","text":"<ol> <li>First of all, you'll have to enter credentials for the Mailgun node. You can find out how to do that here.</li> <li>Enter the email address from which you want to send the email in the From Email field.</li> <li>Enter the recipient email in the To Email field.</li> <li>Enter the subject for the email in the Subject field.</li> <li>Enter the content of the email in the Text field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mailjet/","title":"Mailjet","text":"<p>Mailjet is a cloud-based email sending and tracking system. The platform allows professionals to send both marketing emails and transactional emails. It includes tools for designing emails, sending massive volumes and tracking these messages.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mailjet/#basic-operations","title":"Basic Operations","text":"<ul> <li>Email<ul> <li>Send a email</li> <li>Send a email template</li> </ul> </li> <li>SMS<ul> <li>Send a sms</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mailjet/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to send an email using Mailjet. You can also find the workflow on this website. This example usage workflow uses the following two nodes.</p> <ul> <li>Start</li> <li>Mailjet</li> </ul> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mailjet/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mailjet/#2-mailjet-node","title":"2. Mailjet node","text":"<ol> <li>First of all, you'll have to enter credentials for the Mailjet node. You can find out how to do that here.</li> <li>Enter the email address from which you want to send the email in the From Email field.</li> <li>Enter the recipient email address in the To Email field.</li> <li>Enter the subject for the email in the Subject field.</li> <li>Enter the content of the email in the Text field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mandrill/","title":"Mandrill","text":"<p>Mandrill is a transactional email service developed by MailChimp.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mandrill/#basic-operations","title":"Basic Operations","text":"<ul> <li>Message<ul> <li>Send message based on template.</li> <li>Send message based on HTML.</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mandrill/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to send an email using a template via Mandrill. You can also find the workflow on this website. This example usage workflow uses the following two nodes.</p> <ul> <li>Start</li> <li>Mandrill</li> </ul> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mandrill/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mandrill/#2-mandrill-node","title":"2. Mandrill node","text":"<ol> <li>First of all, you'll have to enter credentials for the Mandrill node. You can find out how to do that here.</li> <li>Select the template you would like to use from the Template dropdown list.</li> <li>Enter the email address from which you want to send the email in the From Email field.</li> <li>Enter the recipient email address in the To Email field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.marketstack/","title":"Marketstack","text":"<p>Marketstack is a REST API that provides stock market data in JSON format.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.marketstack/#basic-operations","title":"Basic operations","text":"<ul> <li>End-of-Day Data<ul> <li>Get All</li> </ul> </li> <li>Exchange<ul> <li>Get</li> </ul> </li> <li>Ticker<ul> <li>Get</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.marketstack/#example-usage","title":"Example usage","text":"<p>This workflow allows you to get the past week's end of day data for a desired stock symbol. This example usage workflow uses the following two nodes.</p> <ul> <li>Start</li> <li>Marketstack</li> </ul> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.marketstack/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.marketstack/#2-marketstack-node","title":"2. Marketstack node","text":"<ol> <li>First enter your credentials for the Marketstack node. You can find out how to do that here.</li> <li>Select End-of-Day Data from the Resource dropdown.</li> <li>The Get All Operation is selected by default.</li> <li>Enter your desired ticker symbol, <code>AI</code> in our example.</li> <li>Click the Add Filter button and select Timeframe Start Date &gt; A Week Ago.</li> <li>Click the Add Filter button and select Timeframe End Date &gt; Today.</li> <li>Click on Execute Node to run the workflow.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.matrix/","title":"Matrix","text":"<p>Matrix is an open standard for interoperable, decentralized, real-time communication over IP.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.matrix/#basic-operations","title":"Basic Operations","text":"<ul> <li>Account<ul> <li>Get current user's account information</li> </ul> </li> <li>Event<ul> <li>Get single event by ID</li> </ul> </li> <li>Media<ul> <li>Send media to a chat room</li> </ul> </li> <li>Message<ul> <li>Send a message to a room</li> <li>Gets all messages from a room</li> </ul> </li> <li>Room<ul> <li>New chat room with defined settings</li> <li>Invite a user to a room</li> <li>Join a new room</li> <li>Kick a user from a room</li> <li>Leave a room</li> </ul> </li> <li>Room Member<ul> <li>Get all members</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.matrix/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to create a room, invite members from a different room, and send a message to the room that we created using the Matrix node. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Start - Matrix - IF - No Operation, do nothing</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.matrix/#1-start-node","title":"1. Start node","text":"<p>The Start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.matrix/#2-matrix-node-create-room","title":"2. Matrix node (create: room)","text":"<p>This node will create a new room called <code>n8n</code> on the Matrix server.</p> <ol> <li> <p>First of all, you'll have to enter credentials for the Matrix node. You can find out how to do that here.</p> </li> <li> <p>Select 'Room' from the Resource dropdown list.</p> </li> <li>Enter <code>n8n</code> in the Room Name field. You can also enter a different name for the room.</li> <li>Enter an alias for the room in the Room Alias field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node creates a room <code>n8n</code> with an alias <code>#discussion-n8n:matrix.org</code>.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.matrix/#3-matrix1-node-me-account","title":"3. Matrix1 node (me: account)","text":"<p>This node will get your account information from the Matrix server. We are doing this because Matrix will send an invite to all members of the room, including you. Since you are already a member of the room, you will get an error. We will use the data from this node later on to make sure that you don't send an invite to yourself.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Account' from the Resource dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns your user ID.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.matrix/#3-matrix2-node-getall-roommember","title":"3. Matrix2 node (getAll: roomMember)","text":"<p>This node will return the information of all the members in a room.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Room Member' from the Resource dropdown list.</li> <li>Select a room from the Room ID dropdown list. We will invite the members of this room later on in the workflow.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns the information of all the members in the room that we specified. The output of this node will be passed on to the next nodes in the workflow.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.matrix/#4-if-node","title":"4. IF node","text":"<p>This node will compare your user ID with the user ID of other members. If the user IDs are not equal, the output will be true.</p> <ol> <li>Click on Add Condition and select 'String'.</li> <li>Click on the gears icon next to the Value 1 field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Matrix1 &gt; Output Data &gt; JSON &gt; user_id. You can also add the following expression: <code>{{$node[\"Matrix1\"].json[\"user_id\"]}}</code>.</li> <li>Select 'Not Equal' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Value 2 field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Matrix2 &gt; Output Data &gt; JSON &gt; user_id. You can also add the following expression: <code>{{$node[\"Matrix2\"].json[\"user_id\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns the information of all the members of the room except your own.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.matrix/#4-matrix3-node-invite-room","title":"4. Matrix3 node (invite: room)","text":"<p>This node will send an invitation to the members returned by the previous node to join the room that we created using the Matrix node.</p> <ol> <li>Connect the node to the 'true' output of the IF node</li> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Room' from the Resource dropdown list.</li> <li>Select 'Invite' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Room ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Matrix &gt; Output Data &gt; JSON &gt; room_id. You can also add the following expression: <code>{{$node[\"Matrix\"].json[\"room_id\"]}}</code>.</li> <li>Click on the gears icon next to the User ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; IF &gt; Output Data &gt; JSON &gt; user_id. You can also add the following expression: <code>{{$node[\"IF\"].json[\"user_id\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node sends an invite to join the <code>n8n</code> room to the members of the other room.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.matrix/#5-matrix4-node-create-message","title":"5. Matrix4 node (create: message)","text":"<p>This node will send a message to the new room that we created using the Matrix node.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Click on the gears icon next to the Room ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Matrix &gt; Output Data &gt; JSON &gt; room_id. You can also add the following expression: <code>{{$node[\"Matrix\"].json[\"room_id\"]}}</code>.</li> <li>Enter a message in the Text field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node sends a message to the room that we created with the Matrix node.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.matrix/#6-noop-node","title":"6. NoOp node","text":"<p>Adding this node here is optional, as the absence of this node won't make a difference to the functioning of the workflow. We've added this as it can sometimes help others with a better understanding of the workflow, visually.</p> <ol> <li>Create a NoOp node connected to the 'false' output of the IF node.</li> <li>Click on Execute Node to run the node.</li> </ol> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mattermost/","title":"Mattermost","text":"<p>Mattermost is an open-source, self-hostable online chat service with file sharing, search, and integrations. It is designed as an internal chat for organisations and companies.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mattermost/#basic-operations","title":"Basic Operations","text":"<ul> <li>Channel<ul> <li>Add a user to a channel</li> <li>Create a new channel</li> <li>Soft delete a channel</li> <li>Get a page of members for a channel</li> <li>Restores a soft deleted channel</li> <li>Search for a channel</li> <li>Get statistics for a channel</li> </ul> </li> <li>Message<ul> <li>Soft delete a post, by marking the post as deleted in the database</li> <li>Post a message into a channel</li> <li>Post an ephemeral message into a channel</li> </ul> </li> <li>Reaction<ul> <li>Add a reaction to a post.</li> <li>Remove a reaction from a post</li> <li>Get all the reactions to one or more posts</li> </ul> </li> <li>User<ul> <li>Create a new user</li> <li>Deactivates the user and revokes all its sessions by archiving its user object.</li> <li>Retrieve all users</li> <li>Get a user by email</li> <li>Get a user by ID</li> <li>Invite user to team</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mattermost/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to create a channel, add a member, and post a message to the channel on Mattermost. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Start - Mattermost</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mattermost/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mattermost/#2-mattermost-node-create-channel","title":"2. Mattermost node (create: channel)","text":"<p>This node will create a new channel named <code>docs</code> in Mattermost. If you want to create a channel with a different name, enter that name instead.</p> <ol> <li>First of all, you'll have to enter credentials for the Mattermost node. You can find out how to do that here.</li> <li>Select 'Channel' from the Resource dropdown list.</li> <li>Select a team from the Team ID dropdown list.</li> <li>Enter <code>Docs</code> in the Display Name field.</li> <li>Enter <code>docs</code> in the Name field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node creates a new channel named <code>docs</code> in Mattermost.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mattermost/#3-mattermost1-node-adduser-channel","title":"3. Mattermost1 node (addUser: channel)","text":"<p>This node will add a member to the channel that we created in the previous node.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Channel' from the Resource dropdown list.</li> <li>Select 'Add User' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Channel ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Mattermost &gt; Output Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$node[\"Mattermost\"].json[\"id\"]}}</code>.</li> <li>Select a user from the User ID dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node adds a user to the channel that we created in the previous node.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mattermost/#4-mattermost2-node-post-message","title":"4. Mattermost2 node (post: message)","text":"<p>This node will post a message to the channel that we created using the Mattermost node.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Click on the gears icon next to the Channel ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Mattermost &gt; Output Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$node[\"Mattermost\"].json[\"id\"]}}</code>.</li> <li>Enter a message in the Message field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node posts a message to the channel that we created in the Mattermost node.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mattermost/#faqs","title":"FAQs","text":""},{"location":"workflow/integrations/nodes/workflow-nodes-base.mattermost/#how-do-i-resolve-the-error-for-the-channel-id-field","title":"How do I resolve the error for the Channel ID field?","text":"<p>If you're not the System Administrator, you might get an error <code>there was a problem loading the parameter options from server: \"Mattermost error response: You do not have the appropriate permissions.\"</code> next to the Channel ID field.</p> <p>If the system administrator has granted you the <code>post:channel</code> permissions, you will be able to execute the node successfully even with the error.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mattermost/#how-do-i-find-the-channel-id","title":"How do I find the Channel ID?","text":"<p>To find the Channel ID in Mattermost, follow the steps mentioned below.</p> <ol> <li>Select the channel from the left sidebar.</li> <li>Click on the channel name on the top and select 'View Info' from the dropdown list.</li> <li>Use the displayed ID in Workflow\u00b2.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mautic/","title":"Mautic","text":"<p>Mautic is an open-source marketing automation software that helps online businesses automate their repetitive marketing tasks such as lead generation, contact scoring, contact segmentation, and marketing campaigns.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mautic/#basic-operations","title":"Basic Operations","text":"<ul> <li>Campaign Contact<ul> <li>Add contact to a campaign</li> <li>Remove contact from a campaign</li> </ul> </li> <li>Company<ul> <li>Create a new company</li> <li>Delete a company</li> <li>Get data of a company</li> <li>Get data of all companies</li> <li>Update a company</li> </ul> </li> <li>Company Contact<ul> <li>Add contact to a company</li> <li>Remove a contact from a company</li> </ul> </li> <li>Contact<ul> <li>Create a new contact</li> <li>Delete a contact</li> <li>Edit contact's points</li> <li>Add/remove contacts from/to the do not contact list</li> <li>Get data of a contact</li> <li>Get data of all contacts</li> <li>Send email to contact</li> <li>Update a contact</li> </ul> </li> <li>Contact Segment<ul> <li>Add contact to a segment</li> <li>Remove contact from a segment</li> </ul> </li> <li>Segment Email<ul> <li>Send</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mautic/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to get all contacts from Mautic. You can also find the workflow on the website. This example usage workflow uses the following two nodes.</p> <ul> <li>Start</li> <li>Mautic</li> </ul> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mautic/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mautic/#2-mautic-node","title":"2. Mautic node","text":"<ol> <li>First of all, you'll have to enter credentials for the Mautic node. You can find out how to do that here.</li> <li>Select 'Get All' from the Operation dropdown list.</li> <li>Click on Execute Node to run the workflow.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.medium/","title":"Medium","text":"<p>Medium is an online publishing platform and home to a diverse array of stories, ideas, and perspectives. It empowers writers to share their work and ideas with the readers.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.medium/#basic-operations","title":"Basic Operations","text":"<ul> <li>Post<ul> <li>Create a post</li> </ul> </li> <li>Publication<ul> <li>Get all publications</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.medium/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to post an article to a publication on Medium. You can also find the workflow on the website. This example usage workflow uses the following two nodes.</p> <ul> <li>Start</li> <li>Medium</li> </ul> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.medium/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.medium/#2-medium-node","title":"2. Medium node","text":"<ol> <li>First of all, you'll have to enter credentials for the Medium node. You can find out how to do that here.</li> <li>Toggle Publication to true.</li> <li>Select the publication from the Publication ID dropdown list.</li> <li>Enter the title in the Title field.</li> <li>Select the format from the Content Format dropdown list.</li> <li>Enter conent of the post in the Content field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.messageBird/","title":"MessageBird","text":"<p>MessageBird is a cloud communications platform that connects enterprises to their global customers.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.messageBird/#basic-operations","title":"Basic Operations","text":"<ul> <li>SMS<ul> <li>Send text messages (SMS)</li> </ul> </li> <li>Balance<ul> <li>Get the balance</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.messageBird/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to send an SMS with MessageBird. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - MessageBird</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.messageBird/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.messageBird/#2-messagebird-node","title":"2. MessageBird node","text":"<ol> <li>First of all, you'll have to enter credentials for the MessageBird node. You can find out how to do that here.</li> <li>Enter the phone number from which you'll be sending the message in the From field.</li> <li>Enter the phone number to which you'll be sending the message in the To field.</li> <li>Enter you message in the Message field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.microsoftDynamicsCrm/","title":"Microsoft Dynamics CRM","text":"<p>Microsoft Dynamics CRM is a is a customer relationship management application developed by Microsoft.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.microsoftDynamicsCrm/#basic-operations","title":"Basic Operations","text":"<ul> <li>Account<ul> <li>Create</li> <li>Delete</li> <li>Get</li> <li>Get All</li> <li>Update</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.microsoftExcel/","title":"Microsoft Excel","text":"<p>Microsoft Excel is a spreadsheet developed by Microsoft. It features calculation, graphing tools, pivot tables, and a macro programming language called Visual Basic for Applications.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.microsoftExcel/#basic-operations","title":"Basic Operations","text":"<ul> <li>Table<ul> <li>Adds rows to the end of the table</li> <li>Retrieve a list of tablecolumns</li> <li>Retrieve a list of tablerows</li> <li>Looks for a specific column value and then returns the matching row</li> </ul> </li> <li>Workbook<ul> <li>Adds a new worksheet to the workbook.</li> <li>Get data of all workbooks</li> </ul> </li> <li>Worksheet<ul> <li>Get all worksheets</li> <li>Get worksheet content</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.microsoftExcel/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to get information about all workbooks from Microsoft Excel. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - Microsoft Excel</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.microsoftExcel/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.microsoftExcel/#2-microsoft-excel-node","title":"2. Microsoft Excel node","text":"<ol> <li>First of all, you'll have to enter credentials for the Microsoft Excel node. You can find out how to do that here.</li> <li>Select the 'Get All' option from the Operation dropdown list.</li> <li>Click on Execute Node to run the workflow.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.microsoftGraphSecurity/","title":"Microsoft Graph Security","text":"<p>The Microsoft Graph Security API allows connecting to Microsoft security products, services, and partners to streamline security operations and improve threat protection, detection, and response capabilities.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.microsoftGraphSecurity/#basic-operations","title":"Basic Operations","text":"<ul> <li>Secure Score<ul> <li>Get</li> <li>Get All</li> </ul> </li> <li>Secure Score Control Profile<ul> <li>Get</li> <li>Get All</li> <li>Update</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.microsoftOneDrive/","title":"Microsoft OneDrive","text":"<p>Microsoft OneDrive is a file hosting service and synchronization service operated by Microsoft.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.microsoftOneDrive/#basic-operations","title":"Basic Operations","text":"<ul> <li>File<ul> <li>Copy a file</li> <li>Delete a file</li> <li>Download a file</li> <li>Get a file</li> <li>Search a file</li> <li>Share a file</li> <li>Upload a file up to 4MB in size</li> </ul> </li> <li>Folder<ul> <li>Create a folder</li> <li>Delete a folder</li> <li>Get items inside a folder</li> <li>Search a folder</li> <li>Share a folder</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.microsoftOneDrive/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to create a folder in Microsoft OneDrive. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - Microsoft OneDrive</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.microsoftOneDrive/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.microsoftOneDrive/#2-microsoft-onedrive-node","title":"2. Microsoft OneDrive node","text":"<ol> <li>First of all, you'll have to enter credentials for the Microsoft OneDrive node. You can find out how to do that here.</li> <li>Select the 'Folder' option from the Resource dropdown list.</li> <li>Select the 'Create' option from the Operation dropdown list.</li> <li>Enter the folder name in the Name field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.microsoftOutlook/","title":"Microsoft Outlook","text":"<p>Microsoft Outlook is a personal information manager software system from Microsoft. Microsoft Outlook is an email client that includes calendaring, task managing, contact managing, note-taking, journal logging, and web browsing.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.microsoftOutlook/#basic-operations","title":"Basic Operations","text":"<ul> <li>Draft<ul> <li>Create a new email draft</li> <li>Delete a draft</li> <li>Get a single draft</li> <li>Send an existing draft message</li> <li>Update a draft</li> </ul> </li> <li>Folder<ul> <li>Create a new mail folder in the root folder of the user's mailbox</li> <li>Delete a folder</li> <li>Get a single folder details</li> <li>Get all folders under the root folder of the signed-in user</li> <li>Lists all child folders under the folder</li> </ul> </li> <li>Folder Message<ul> <li>Get all the messages in a folder</li> </ul> </li> <li>Message<ul> <li>Delete a message</li> <li>Get a single message</li> <li>Get all messages in the signed-in user's mailbox</li> <li>Get MIME content of a message</li> <li>Move a message</li> <li>Create reply to a message</li> <li>Send a message</li> <li>Update a message</li> </ul> </li> <li>Message Attachment<ul> <li>Add an attachment to a message</li> <li>Download attachment content</li> <li>Get an attachment from a message</li> <li>Get all the message's attachments</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.microsoftOutlook/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to create, add an attachment, and send a draft using the Microsoft Outlook node. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Start - Microsoft Outlook - HTTP Request</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.microsoftOutlook/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.microsoftOutlook/#2-microsoft-outlook-node-create-draft","title":"2. Microsoft Outlook node (create: draft)","text":"<p>This node will create a draft message that we will send using the Microsoft Outlook node later in the workflow.</p> <ol> <li>First of all, you'll have to enter credentials for the Microsoft Outlook node. You can find out how to do that here.</li> <li>Select 'Draft' from the Resource dropdown list.</li> <li>Enter the subject in the Subject field.</li> <li>Enter the following content in the Body Content field. <pre><code>&lt;h1&gt;Hello from n8n!&lt;/h1&gt;\n&lt;p&gt;We are sending this email using the Microsoft Outlook node in &lt;a href=\"https://n8n.io\"&gt;n8n&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;Best,&lt;/p&gt;\n&lt;p&gt;Sender&lt;/p&gt;\n</code></pre></li> <li>Click on Add Field and select 'Body Content Type' from the dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node creates a new draft with the subject <code>Hello from n8n!</code> and HTML body content.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.microsoftOutlook/#3-http-request-node-get","title":"3. HTTP Request node (GET)","text":"<p>This node will fetch the logo of Doc\u00b2 from a URL. We will attach this file to our draft message that we created earlier. If you want to attach a different file, enter the URL of that file instead.</p> <ol> <li>Enter <code>https://n8n.io/n8n-logo.png</code> in the URL field.</li> <li>Select 'File' from the Response Format dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns the Doc\u00b2 logo. We will attach this file to the draft message that we created using the previous node.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.microsoftOutlook/#4-microsoft-outlook1-node-add-messageattachment","title":"4. Microsoft Outlook1 node (add: messageAttachment)","text":"<p>This node will attach the file that we received from the previous node to the drat message we created using the Microsoft Outlook node.</p> <ol> <li>Select the credentials that you entered in the previous Microsoft Outlook node.</li> <li>Select 'Message Attachment' from the Resource dropdown list.</li> <li>Click on the gears icon next to the Message ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Microsoft Outlook &gt; Output Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$node[\"Microsoft Outlook\"].json[\"id\"]}}</code>.</li> <li>Click on the Add Field button.</li> <li>Enter <code>n8n.png</code> in the File Name field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node attaches the file to the draft message that we created using the Microsoft Outlook node.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.microsoftOutlook/#5-microsoft-outlook2-node-send-draft","title":"5. Microsoft Outlook2 node (send: draft)","text":"<p>This node will send the draft message that we created using the Microsoft Outlook node to a recipient.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Draft' from the Resource dropdown list.</li> <li>Select 'Send' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Message ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Microsoft Outlook &gt; Output Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$node[\"Microsoft Outlook\"].json[\"id\"]}}</code>.</li> <li>Click on the Add Field button.</li> <li>Enter the recipient's email address in the Recipients field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node sends the draft message that we created using the Microsoft Outlook node to a recipient.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.microsoftSql/","title":"Microsoft SQL","text":"<p>Microsoft SQL is a relational database management system. As a database server, it is a software product with the primary function of storing and retrieving data as requested by other software applications\u2014which may run either on the same computer or on another computer across a network.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.microsoftSql/#basic-operations","title":"Basic Operations","text":"<ul> <li>Execute an SQL query</li> <li>Insert rows in database</li> <li>Update rows in database</li> <li>Delete rows in database</li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.microsoftSql/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to execute an SQL query in Microsoft SQL. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - Microsoft SQL</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.microsoftSql/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.microsoftSql/#2-microsoft-sql-node","title":"2. Microsoft SQL node","text":"<ol> <li>First of all, you'll have to enter credentials for the Microsoft SQL node. You can find out how to do that here.</li> <li>Select 'Execute Query' from the Operation dropdown list.</li> <li>Enter your SQL query in the Query field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.microsoftTeams/","title":"Microsoft Teams","text":"<p>Microsoft Teams is a business-oriented communication and collaboration platform that combines workplace chat, video meetings, file storage , and application integration.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.microsoftTeams/#basic-operations","title":"Basic Operations","text":"<ul> <li>Channel<ul> <li>Create a channel</li> <li>Delete a channel</li> <li>Get a channel</li> <li>Get all channels</li> <li>Update a channel</li> </ul> </li> <li>Channel Message (Beta)<ul> <li>Create a message</li> <li>Get all messages</li> </ul> </li> <li>Task<ul> <li>Create a task</li> <li>Delete a task</li> <li>Get a task</li> <li>Get all tasks</li> <li>Update a task</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.microsoftTeams/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to create, update and send a message to a channel in Microsoft Teams. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Start - Microsoft Teams</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.microsoftTeams/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.microsoftTeams/#2-microsoft-teams-node-create-channel","title":"2. Microsoft Teams node (create: channel)","text":"<ol> <li>First of all, you'll have to enter credentials for the Microsoft Teams node. You can find out how to do that here.</li> <li>Select the team that you want to use from the Team ID dropdown list.</li> <li>Enter a name for the channel in the Name field.</li> <li>Click on Execute Node to run the node.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.microsoftTeams/#3-microsoft-teams1-node-update-channel","title":"3. Microsoft Teams1 node (update: channel)","text":"<ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Update' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Team ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Microsoft Teams &gt; Parameters &gt; teamId. You can also add the following expression: <code>{{$node[\"Microsoft Teams\"].parameter[\"teamId\"]}}</code></li> <li>Click on the gears icon next to the Channel ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Microsoft Teams &gt; Output &gt; JSON &gt; id. You can also add the following expression: <code>{{$node[\"Microsoft Teams\"].json[\"id\"]}}</code></li> <li>Click on the Add Field button and select 'Name' from the dropdown list.</li> <li>Enter a new channel name in the Name field.</li> <li>Click on Execute Node to run the node.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.microsoftTeams/#4-microsoft-teams2-node-create-channelmessage","title":"4. Microsoft Teams2 node (create: channelMessage)","text":"<ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Channel Message (Beta)' from the Resource dropdown list.</li> <li>Click on the gears icon next to the Team ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Microsoft Teams &gt; Parameters &gt; teamId. You can also add the following expression: <code>{{$node[\"Microsoft Teams\"].parameter[\"teamId\"]}}</code></li> <li>Click on the gears icon next to the Channel ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Microsoft Teams &gt; Output &gt; JSON &gt; id. You can also add the following expression: <code>{{$node[\"Microsoft Teams\"].json[\"id\"]}}</code></li> <li>Select 'Text' from the Message Type dropdown list.</li> <li>Enter a message in the Message field.</li> <li>Click on Execute Node to run the node.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.microsoftToDo/","title":"Microsoft To Do","text":"<p>Microsoft To Do is a cloud-based task management application. It allows users to manage their tasks from a smartphone, tablet, and computer.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.microsoftToDo/#basic-operations","title":"Basic Operations","text":"<ul> <li>Linked Resource<ul> <li>Create</li> <li>Delete</li> <li>Get</li> <li>Get All</li> <li>Update</li> </ul> </li> <li>List<ul> <li>Create</li> <li>Delete</li> <li>Get</li> <li>Get All</li> <li>Update</li> </ul> </li> <li>Task<ul> <li>Create</li> <li>Delete</li> <li>Get</li> <li>Get All</li> <li>Update</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.microsoftToDo/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to create, update and get a task in Microsoft To Do. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Start - Microsoft To Do</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.microsoftToDo/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.microsoftToDo/#2-microsoft-to-do-node-create-task","title":"2. Microsoft To Do node (create: task)","text":"<p>This node will create a task with the importance level <code>High</code> in the Tasks list. You can select a different list and the importance level.</p> <ol> <li>First of all, you'll have to enter credentials for the Microsoft To Do node. You can find out how to do that here.</li> <li>Select 'Create' from the Operation dropdown list.</li> <li>Select a list from the List ID dropdown list.</li> <li>Enter a subject in the Subject field.</li> <li>Click on Add Field and select 'Importance' from the dropdown list.</li> <li>Select 'High' from the Importance dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node creates a new task in Microsoft To Do.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.microsoftToDo/#3-microsoft-to-do1-node-update-task","title":"3. Microsoft To Do1 node (update: task)","text":"<p>This node will update the status of the task that we created in the previous node.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Update' from the Operation dropdown list.</li> <li>Click on the gears icon next to the List ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Microsoft To Do &gt; Parameters &gt; taskListId. You can also add the following expression: <code>{{$node[\"Microsoft To Do\"].parameter[\"taskListId\"]}}</code>.</li> <li>Click on the gears icon next to the Task ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input &gt; JSON &gt; id. You can also add the following expression: <code>{{$json[\"id\"]}}</code>.</li> <li>Click on the Add Field button and select 'Status' from the dropdown list.</li> <li>Select 'In progress' from the Status dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node updates the status of the task that we created in the previous node.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.microsoftToDo/#4-microsoft-to-do2-node-get-task","title":"4. Microsoft To Do2 node (get: task)","text":"<p>This node will get the task that we created earlier.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Click on the gears icon next to the List ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Microsoft To Do &gt; Parameters &gt; taskListId. You can also add the following expression: <code>{{$node[\"Microsoft To Do\"].parameter[\"taskListId\"]}}</code>.</li> <li>Click on the gears icon next to the Task ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input &gt; JSON &gt; id. You can also add the following expression: <code>{{$json[\"id\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node fetches the information of the task that we created earlier.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mindee/","title":"Mindee","text":"<p>Mindee develops API-based products for instantly extracting information from any kind of image and transforming it into usable data.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mindee/#basic-operations","title":"Basic Operations","text":"<p>Invoice - Predict</p> <p>Receipt - Predict</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mindee/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to extract information from an image of a receipt using the Mindee node. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Start - HTTP Request - Mindee</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mindee/#1-start-node","title":"1. Start node","text":"<p>The Start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mindee/#2-http-request-get","title":"2. HTTP Request (GET)","text":"<p>This example workflow uses the HTTP Request node to make a GET request to download the image of a receipt. You can also use other nodes, for example, the Box node, to get the images of the receipts you want to use.</p> <ol> <li>Enter the URL of the image in the URL field. For example, <code>https://miro.medium.com/max/1400/0*1T9GkAb93w5NSMsf</code>.</li> <li>Select 'File' from the Response Format dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the HTTP Request node downloads the image from the URL. This image (binary data) can now be used by the other nodes in the workflow.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mindee/#3-mindee-node-predict-receipt","title":"3. Mindee node (predict: receipt)","text":"<p>This node will get the image of the receipt (binary data) from the HTTP Request node and extract the information from it. 1. Select 'Receipt' from the Resource dropdown list. 2. You'll have to enter credentials for the Mindee node. You can find out how to do that  here. 3. Click on Execute Node to run the workflow.</p> <p>In the screenshot below, you will notice that the node extracts the information from the image that it got from the HTTP Request node.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.misp/","title":"MISP","text":"<p>MISP is an open source threat intelligence platform. The project develops utilities and documentation for more effective threat intelligence. </p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.misp/#basic-operations","title":"Basic Operations","text":"<ul> <li>Attribute<ul> <li>Create</li> <li>Delete</li> <li>Get</li> <li>Get All</li> <li>Update</li> </ul> </li> <li>Event<ul> <li>Create</li> <li>Delete</li> <li>Get</li> <li>Get All</li> <li>Publish</li> <li>Unpublish</li> <li>Update</li> </ul> </li> <li>Event Tag<ul> <li>Add</li> <li>Remove</li> </ul> </li> <li>Feed<ul> <li>Create</li> <li>Disable</li> <li>Enable</li> <li>Get</li> <li>Get All</li> <li>Update</li> </ul> </li> <li>Galaxy<ul> <li>Delete</li> <li>Get</li> <li>Get All</li> </ul> </li> <li>Noticelist<ul> <li>Get</li> <li>Get All</li> </ul> </li> <li>Organisation<ul> <li>Create</li> <li>Delete</li> <li>Get</li> <li>Get All</li> <li>Update</li> </ul> </li> <li>Tag<ul> <li>Create</li> <li>Delete</li> <li>Get All</li> <li>Update</li> </ul> </li> <li>User<ul> <li>Create</li> <li>Delete</li> <li>Get</li> <li>Get All</li> <li>Update</li> </ul> </li> <li>Warninglist<ul> <li>Get</li> <li>Get All</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mocean/","title":"Mocean","text":"<p>Mocean makes sending and receiving SMS easy. It also has voice API which allows you to make outbound and inbound calls.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mocean/#basic-operations","title":"Basic Operations","text":"<ul> <li>SMS<ul> <li>Send SMS/Voice message</li> </ul> </li> <li>Voice<ul> <li>Send SMS/Voice message</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mocean/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to send an SMS using the Mocean node. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Start - Mocean</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mocean/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mocean/#2-mocean-node","title":"2. Mocean node","text":"<ol> <li>First of all, you'll have to enter credentials for the Mocean node. You can find out how to do that here.</li> <li>Enter the sender ID in the From field.</li> <li>Enter the receivers' number in the To field.</li> <li>Enter the message in the Message field.</li> <li>Click on Execute Node to run the node.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mondayCom/","title":"monday.com","text":"<p>monday.com is a work operating system that enables organizations to manage tasks, projects, and team work.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mondayCom/#basic-operations","title":"Basic Operations","text":"<ul> <li>Board<ul> <li>Archive a board</li> <li>Create a new board</li> <li>Get a board</li> <li>Get all boards</li> </ul> </li> <li>Board Column<ul> <li>Create a new column</li> <li>Get all columns</li> </ul> </li> <li>Board Group<ul> <li>Delete a group in a board</li> <li>Create a group in a board</li> <li>Get list of groups in a board</li> </ul> </li> <li>Board Item<ul> <li>Add an update to an item.</li> <li>Change a column value for a board item</li> <li>Change multiple column values for a board item</li> <li>Create an item in a board's group</li> <li>Delete an item</li> <li>Get an item</li> <li>Get all items</li> <li>Get items by column value</li> <li>Move item to group</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mondayCom/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to get a board from monday.com. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - monday.com</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mondayCom/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mondayCom/#2-mondaycom-node","title":"2. monday.com node","text":"<ol> <li>First of all, you'll have to enter credentials for the monday.com node. You can find out how to do that here.</li> <li>Select the 'Get' option from the Operation dropdown list.</li> <li>Select the board you want to get from the Board ID dropdown list.</li> <li>Click on Execute Node to run the workflow.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mongoDb/","title":"MongoDB","text":"<p>MongoDB is a cross-platform document-oriented database program developed by MongoDB Inc. It is classified as a NoSQL database program. MongoDB uses JSON-like documents with optional schemas.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mongoDb/#basic-operations","title":"Basic Operations","text":"<ul> <li>Aggregate documents.</li> <li>Delete documents.</li> <li>Find documents.</li> <li>Insert documents.</li> <li>Update documents.</li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mongoDb/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to insert a document into a MongoDB collection. You can also find the workflow on the website. This example usage workflow would use the following three nodes. - Start - Set - MongoDB</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mongoDb/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mongoDb/#2-set-node","title":"2. Set node","text":"<ol> <li>Click on the Add Value button and select 'String' from the dropdown list.</li> <li>Enter <code>my_key</code>in the Name field.</li> <li>Enter <code>my_value</code> in the Value field.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mongoDb/#3-mongodb-node","title":"3. MongoDB node","text":"<ol> <li>First of all, you'll have to enter credentials for the MongoDB node. You can find out how to do that here.</li> <li>Select 'Insert' from the Operation dropdown list.</li> <li>Enter the name of your MongoDB collection in the Collection field.</li> <li>Enter <code>my_key</code> in the Fields field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.monicaCrm/","title":"Monica CRM","text":"<p>Monica CRM is an open-source web application to organize and record your interactions with your loved ones.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.monicaCrm/#basic-operations","title":"Basic operations","text":"<ul> <li>Activity<ul> <li>Create an activity</li> <li>Delete an activity</li> <li>Retrieve an activity</li> <li>Retrieve all activities</li> <li>Update an activity</li> </ul> </li> <li>Call<ul> <li>Create a call</li> <li>Delete a call</li> <li>Retrieve a call</li> <li>Retrieve all calls</li> <li>Update a call</li> </ul> </li> <li>Contact<ul> <li>Create a contact</li> <li>Delete a contact</li> <li>Retrieve a contact</li> <li>Retrieve all contacts</li> <li>Update a contact</li> </ul> </li> <li>Contact Field<ul> <li>Create a contact field</li> <li>Delete a contact field</li> <li>Retrieve a contact field</li> <li>Update a contact field</li> </ul> </li> <li>Contact Tag<ul> <li>Add</li> <li>Remove</li> </ul> </li> <li>Conversation<ul> <li>Create a conversation</li> <li>Delete a conversation</li> <li>Retrieve a conversation</li> <li>Update a conversation</li> </ul> </li> <li>Conversation Message<ul> <li>Add a message to a conversation</li> <li>Update a message in a conversation</li> </ul> </li> <li>Journal Entry<ul> <li>Create a journal entry</li> <li>Delete a journal entry</li> <li>Retrieve a journal entry</li> <li>Retrieve all journal entries</li> <li>Update a journal entry</li> </ul> </li> <li>Note<ul> <li>Create a note</li> <li>Delete a note</li> <li>Retrieve a note</li> <li>Retrieve all notes</li> <li>Update a note</li> </ul> </li> <li>Reminder<ul> <li>Create a reminder</li> <li>Delete a reminder</li> <li>Retrieve a reminder</li> <li>Retrieve all reminders</li> <li>Update a reminder</li> </ul> </li> <li>Tag<ul> <li>Create a tag</li> <li>Delete a tag</li> <li>Retrieve a tag</li> <li>Retrieve all tags</li> <li>Update a tag</li> </ul> </li> <li>Task<ul> <li>Create a task</li> <li>Delete a task</li> <li>Retrieve a task</li> <li>Retrieve all tasks</li> <li>Update a task</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.monicaCrm/#example-usage","title":"Example usage","text":"<p>This workflow allows you to create a new contact in Monica CRM. This example usage workflow would use the following three nodes. - Start - Monica CRM</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.monicaCrm/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.monicaCrm/#2-monica-crm-node","title":"2. Monica CRM node","text":"<ol> <li>First enter your credentials for the Monica CRM node. You can find out how to do that here.</li> <li>Select Contact from the Resource dropdown list.</li> <li>Select Create from the Operation dropdown list.</li> <li>Enter the First Name of your new contact.</li> <li>Enter the Gender of your new contact using the dropdown list.</li> <li>Click on Execute Node to run the workflow.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mqtt/","title":"MQTT","text":"<p>MQTT is an open OASIS and ISO standard lightweight, publish-subscribe network protocol that transports messages between devices.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mqtt/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to send position updates of the ISS every minute to a topic in MQTT using the MQTT node. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Cron - HTTP Request - Set - MQTT</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mqtt/#1-cron-node","title":"1. Cron node","text":"<p>The Cron node will trigger the workflow every minute.</p> <ol> <li>Click on Add Cron Time.</li> <li>Select 'Every Minute' from the Mode dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the Cron node is configured to trigger the workflow every minute.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mqtt/#2-http-request-node-get","title":"2. HTTP Request node (GET)","text":"<p>This node will make a GET request to the API <code>https://api.wheretheiss.at/v1/satellites/25544/positions</code> to fetch the position of the ISS. This information gets passed on to the next node in the workflow.</p> <ol> <li>Enter <code>https://api.wheretheiss.at/v1/satellites/25544/positions</code> in the URL field.</li> <li>Click on the Add Parameter button in the Query Parameters section.</li> <li>Enter <code>timestamps</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Enter the following expression: <code>{{Date.now()}}</code>. This expression will return the current timestamp.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node makes a GET request to the API and returns the information about the location of the ISS.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mqtt/#3-set-node","title":"3. Set node","text":"<p>We will use the Set node to ensure that only the data that we set in this node gets passed on to the next nodes in the workflow.</p> <ol> <li>Click on Add Value and select 'String' from the dropdown list.</li> <li>Enter <code>Name</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; 0 &gt; name. You can also add the following expression: <code>{{$json[\"0\"][\"name\"]}}</code>.</li> <li>Click on Add Value and select 'String' from the dropdown list.</li> <li>Enter <code>Latitude</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; 0 &gt; latitude. You can also add the following expression: <code>{{$json[\"0\"][\"latitude\"]}}</code>.</li> <li>Click on Add Value and select 'String' from the dropdown list.</li> <li>Enter <code>Longitude</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; 0 &gt; longitude. You can also add the following expression: <code>{{$json[\"0\"][\"longitude\"]}}</code>.</li> <li>Click on Add Value and select 'String' from the dropdown list.</li> <li>Enter <code>Timestamp</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; 0 &gt; timpestamp. You can also add the following expression: <code>{{$json[\"0\"][\"timestamp\"]}}</code>.</li> <li>Toggle Keep Only Set to <code>true</code>. We set this option to true to ensure that only the data that we have set in this node get passed on to the next nodes in the workflow.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node uses the data from the previous node and returns the data that we set for the workflow.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mqtt/#4-mqtt-node","title":"4. MQTT node","text":"<p>This node will send the data from the previous node to the <code>iss-position</code> topic in MQTT. If you have created a topic with a different name in MQTT, you can use that topic name instead.</p> <ol> <li>First of all, you'll have to enter credentials for the MQTT node. You can find out how to do that here.</li> <li>Enter the name of the topic in the Topic field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node sends the data from the previous node to the <code>iss-position</code> topic in MQTT.</p> <p></p> <p> Activate workflow for production</p> <p>This example workflow uses the Cron node, which is a Trigger node. You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Cron node.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.msg91/","title":"MSG91","text":"<p>MSG91 is an enterprise SMS Solution providing Bulk SMS, Transactional SMS API, Regional SMS, OTP Verification APIs, Promotional SMS via powerful, and a robust SMS Gateway.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.msg91/#basic-operations","title":"Basic Operations","text":"<ul> <li>SMS<ul> <li>Send SMS</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.msg91/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to send an SMS using MSG91. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - MSG91</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.msg91/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.msg91/#2-msg91-node","title":"2. MSG91 node","text":"<ol> <li>First of all, you'll have to enter credentials for the MSG91 node. You can find out how to do that here.</li> <li>Enter the sender ID in the Sender ID field. You can find instructions on how to obtain the sender ID in the FAQs below.</li> <li>Enter the phone number to which you'll be sending the message in the To field.</li> <li>Enter you message in the Message field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.msg91/#faqs","title":"FAQs","text":""},{"location":"workflow/integrations/nodes/workflow-nodes-base.msg91/#how-do-i-find-my-sender-id","title":"How do I find my Sender ID?","text":"<ol> <li>Log in to your MSG91 dasboard and click on 'Sender Id' in the left panel.</li> <li>If you don't already have one, click on Add Sender Id +, fill in the details, and click on the Save Sender Id button.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mySql/","title":"MySQL","text":"<p>MySQL is an open-source relational database management system. MySQL has stand-alone clients that allow users to interact directly with a MySQL database using SQL, but more often MySQL is used with other programs to implement applications that need relational database capability.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mySql/#basic-operations","title":"Basic Operations","text":"<ul> <li>Execute an SQL query.</li> <li>Insert rows in database.</li> <li>Update rows in database</li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mySql/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to create a table and insert data in it on a MySQL database. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Start - Set - MySQL</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mySql/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mySql/#2-mysql-node-execute-query","title":"2. MySQL node (Execute Query)","text":"<ol> <li>First of all, you'll have to enter credentials for the MySQL node. You can find out how to do that here.</li> <li>Select 'Execute Query' from the Operation dropdown list.</li> <li>Enter the following SQL query in the Query field: <code>CREATE TABLE test (id INT, name VARCHAR(255), PRIMARY KEY (id));</code>.</li> <li>Click on Execute Node to run the node.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mySql/#3-set-node","title":"3. Set node","text":"<ol> <li>Set the Keep Only Set toggle to true.</li> <li>Click on the Add Value button and select 'Number' from the dropdown list.</li> <li>Enter <code>id</code> in the Name field.</li> <li>Click on the Add Value button and select 'String' from the dropdown list.</li> <li>Enter <code>name</code> in the Name field.</li> <li>Enter the value for the name in the Value field.</li> <li>Click on Execute Node to run the node.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mySql/#4-mysql1-node-insert","title":"4. MySQL1 node (Insert)","text":"<ol> <li>Select the credentials that you entered in the previous MySQL node.</li> <li>Enter <code>test</code> in the Table field.</li> <li>Enter <code>id, name</code> in the Columns field.</li> <li>Click on Execute Node to run the node.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.nasa/","title":"NASA","text":"<p>NASA is an independent agency of the U.S. federal government responsible for the civilian space program, as well as aeronautics and space research. The NASA API makes NASA data, including imagery, accessible to application developers.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.nasa/#basic-operations","title":"Basic Operations","text":"<ul> <li>Astronomy Picture of the Day<ul> <li>Get the Astronomy Picture of the Day</li> </ul> </li> <li>Asteroid Neo-Feed<ul> <li>Retrieve a list of asteroids based on their closest approach date to Earth</li> </ul> </li> <li>Asteroid Neo-Lookup<ul> <li>Look up an asteroid based on its NASA SPK-ID</li> </ul> </li> <li>Asteroid Neo-Browse<ul> <li>Browse the overall asteroid dataset</li> </ul> </li> <li>DONKI Coronal Mass Ejection<ul> <li>Retrieve DONKI coronal mass ejection data</li> </ul> </li> <li>DONKI Interplanetary Shock<ul> <li>Retrieve DONKI interplanetary shock data</li> </ul> </li> <li>DONKI Solar Flare<ul> <li>Retrieve DONKI solar flare data</li> </ul> </li> <li>DONKI Solar Energetic Particle<ul> <li>Retrieve DONKI solar energetic particle data</li> </ul> </li> <li>DONKI Magnetopause Crossing<ul> <li>Retrieve data on DONKI magnetopause crossings</li> </ul> </li> <li>DONKI Radiation Belt Enhancement<ul> <li>Retrieve DONKI radiation belt enhancement data</li> </ul> </li> <li>DONKI High Speed Stream<ul> <li>Retrieve DONKI high speed stream data</li> </ul> </li> <li>DONKI WSA+EnlilSimulation<ul> <li>Retrieve DONKI WSA+EnlilSimulation data</li> </ul> </li> <li>DONKI Notifications<ul> <li>Retrieve DONKI notifications data</li> </ul> </li> <li>Earth Imagery<ul> <li>Retrieve Earth imagery</li> </ul> </li> <li>Earth Assets<ul> <li>Retrieve Earth assets</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.nasa/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to send the Astronomy Picture of the day daily to a Telegram channel. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Cron - NASA - Telegram</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.nasa/#1-cron-node","title":"1. Cron node","text":"<p>The Cron node will trigger the workflow daily at 8 PM.</p> <ol> <li>Click on Add Cron Time.</li> <li>Set hours to 20 in the Hour field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the Cron node is configured to trigger the workflow every day at 8 PM.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.nasa/#2-nasa-node-getastronomypictureoftheday","title":"2. NASA node (get:astronomyPictureOfTheDay)","text":"<p>This node will return the Astronomy Picture of the Day.</p> <ol> <li>First of all, you'll have to enter credentials for the NASA node. You can find out how to do that here.</li> <li>Toggle Download Image to <code>false</code>. By setting this option to false the node will not return binary data.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns data for the Astronomy Picture of the Day. This data will be used by the next node in the workflow.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.nasa/#3-telegram-node-sendphoto-message","title":"3. Telegram node (sendPhoto: message)","text":"<p>This node will send the picture that we receive from the previous node to a channel.</p> <ol> <li>First of all, you'll have to enter credentials for the Telegram node. You can find out how to do that here.</li> <li>Select 'Send Photo' from the Operation dropdown list.</li> <li>Enter a chat ID in the Chat ID field.</li> <li> <p>Click on the gears icon next to the Photo field and click on Add Expression.</p> </li> <li> <p>Select the following in the Variable Selector section: Nodes &gt; NASA &gt; Output Data &gt; JSON &gt; url. You can also add the following expression: <code>{{$node[\"NASA\"].json[\"url\"]}}</code>.</p> </li> <li>Click on Add Field and select 'Caption' from the dropdown list.</li> <li>Click on the gears icon next to the Caption field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; NASA &gt; Output Data &gt; JSON &gt; title. You can also add the following expression: <code>{{$node[\"NASA\"].json[\"title\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node sends the image with a caption to the channel that we specifiy.</p> <p></p> <p> Activate workflow for production</p> <p>This example workflow uses the Cron node, which is a Trigger node. You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Cron node.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.netlify/","title":"Netlify","text":"<p>Netlify offers hosting and serverless backend services for web applications and static websites.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.netlify/#basic-operations","title":"Basic Operations","text":"<ul> <li>Deploy<ul> <li>Cancel a deployment</li> <li>Create a new deployment</li> <li>Get a deployment</li> <li>Get all deployments</li> </ul> </li> <li>Site<ul> <li>Delete a site</li> <li>Get a site</li> <li>Returns all sites</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.nextCloud/","title":"Nextcloud","text":"<p>Nextcloud is a free and open-source suite of client-server software for creating and using file hosting services.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.nextCloud/#basic-operations","title":"Basic Operations","text":"<ul> <li>File<ul> <li>Copy a file</li> <li>Delete a file</li> <li>Download a file</li> <li>Move a file</li> <li>Share a file</li> <li>Upload a file</li> </ul> </li> <li>Folder<ul> <li>Copy a folder</li> <li>Create a folder</li> <li>Delete a folder</li> <li>Return the contents of a given folder</li> <li>Move a folder</li> <li>Share a folder</li> </ul> </li> <li>User<ul> <li>Invite a user to a NextCloud organization</li> <li>Delete a user.</li> <li>Retrieve information about a single user.</li> <li>Retrieve a list of users.</li> <li>Edit attributes related to a user.</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.nextCloud/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to create a folder in Nextcloud, upload a file into that folder, and list the contents of the folder. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Start - Nextcloud - HTTP Request</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.nextCloud/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.nextCloud/#2-nextcloud-node-create-folder","title":"2. Nextcloud node (create: folder)","text":"<ol> <li>First of all, you'll have to enter credentials for the Nextcloud node. You can find out how to do that here.</li> <li>Select the 'Folder' option from the Resource dropdown list.</li> <li>Enter a folder name in the Folder field.</li> <li>Click on Execute Node to run the node.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.nextCloud/#3-http-request-node-get","title":"3. HTTP Request node (GET)","text":"<ol> <li>Enter <code>https://n8n.io/n8n-logo.png</code> in the URL field.</li> <li>Select 'File' from the Response Format dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.nextCloud/#4-nextcloud1-node-upload-file","title":"4. Nextcloud1 node (upload: file)","text":"<ol> <li>Select the credentials that you entered in the Nextcloud node.</li> <li>Enter the path of the Nextcloud folder you created in the previous steps along with a file name in the File Path field.</li> <li>Set the Binary Data toggle to true.</li> <li>Click on Execute Node to run the node.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.nextCloud/#5-nextcloud2-node-list-folder","title":"5. Nextcloud2 node (list: folder)","text":"<ol> <li>Select the credentials that you entered in the Nextcloud node.</li> <li>Select 'Folder' from the Resource dropdown list.</li> <li>Select 'List' from the Operation dropdown list.</li> <li>Enter the name of the Nextcloud folder you created in the previous steps in the Folder Path field.</li> <li>Click on Execute Node to run the node.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.nocoDb/","title":"NocoDB","text":"<p>NocoDB is an open source Airtable alternative. It works by connecting to any relational database and transforming them into a spreadsheet interface.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.nocoDb/#basic-operations","title":"Basic operations","text":"<ul> <li>Row<ul> <li>Create a row</li> <li>Delete a row</li> <li>Retrieve all rows</li> <li>Retrieve a row</li> <li>Update a row</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.nocoDb/#example-usage","title":"Example usage","text":"<p>This workflow allows you to get all rows in your table. This example usage workflow would use the following two nodes. - Start - NocoDB</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.nocoDb/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.nocoDb/#2-nocodb-node","title":"2. NocoDB node","text":"<ol> <li>First enter your credentials for the NocoDB node. You can find out how to do that here.</li> <li>The Row Resource is selected by default.</li> <li>Select Get All from the Operation dropdown.</li> <li>Enter the NocoDB Project ID.</li> <li>Enter the name of the targeted Table.</li> <li>Click on Execute Node to run the workflow.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.notion/","title":"Notion","text":"<p>Notion is an all-in-one workspace for your notes, tasks, wikis, and databases.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.notion/#basic-operations","title":"Basic Operations","text":"<p>Block - Append a block - Get all children block</p> <p>Database - Get a database - Get all database - Query a database</p> <p>Database Record - Create a record in a database - Update a record in a database</p> <p>Page - Create a page - Get a page - Text search for pages</p> <p>User - Get a user - Get all users</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.notion/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to add a new user to your Notion database when an invite gets created via Calendly. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes.</p> <ul> <li>Calendly Trigger</li> <li>Notion</li> </ul> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.notion/#1-calendly-trigger-node","title":"1. Calendly Trigger node","text":"<p>The Calendly node will trigger the workflow when an invite gets created.</p> <ol> <li>First of all, you'll have to enter credentials for the Notion node. You can find out how to do that here.</li> <li>Select 'invitee.created' from the Events dropdown list.</li> <li>Save your workflow so that the webhook gets registered.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>Note: Since you\u2019ll be using the test webhook while building the workflow, the node only stays active for 120 seconds. After you click on the Execute Node button, create an invite via Calendly.</p> <p>In the screenshot below, you will notice that the Calendly Trigger node triggers the workflow when an invite is created.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.notion/#2-notion-node-create-databaserecord","title":"2. Notion node (create: databaseRecord)","text":"<p>This node will create a new record using the information received from the previous node.</p> <ol> <li> <p>First of all, you'll have to enter credentials for the Notion node. You can find out how to do that here.</p> </li> <li> <p>Select 'Database Record' from the Resource dropdown list.</p> </li> <li>Select the database from the Database ID dropdown list.</li> <li>Click on the Add Property button.</li> <li>Select 'Name' from the Key dropdown list.</li> <li>Click on the gears icon next to the Title field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; payload &gt; invitee &gt; name. You can also add the following expression: <code>{{$json[\"payload\"][\"invitee\"][\"name\"]}}</code>.</li> <li>Click on the Add Property button.</li> <li>Select 'Email' from the Key dropdown list.</li> <li>Click on the gears icon next to the Email field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; payload &gt; invitee &gt; email. You can also add the following expression: <code>{{$json[\"payload\"][\"invitee\"][\"email\"]}}</code>.</li> <li>Click on the Add Property button.</li> <li>Select 'Status' from the Key dropdown list.</li> <li>Select 'Scheduled' from the Option dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node creates a new record from the information that gets received from the previous node.</p> <p></p> <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Calendly Trigger node.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.odoo/","title":"Odoo","text":"<p>Odoo is a suite of open-source business apps covering functionality such as: CRM, eCommerce, accounting, inventory, point of sale, project management.</p> <p>Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.odoo/#operations","title":"Operations","text":"<ul> <li>Contact<ul> <li>Create a new contact</li> <li>Delete a contact</li> <li>Get a contact</li> <li>Get all contacts</li> <li>Update a contact</li> </ul> </li> <li>Custom Resource<ul> <li>Create a new item</li> <li>Delete an item</li> <li>Get an item</li> <li>Get all items</li> <li>Update an item</li> </ul> </li> <li>Note<ul> <li>Create a new note</li> <li>Delete a note</li> <li>Get a note</li> <li>Get all notes</li> <li>Update a note</li> </ul> </li> <li>Opportunity<ul> <li>Create a new opportunity</li> <li>Delete an opportunity</li> <li>Get an opportunity</li> <li>Get all opportunities</li> <li>Update an opportunity</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.oneSimpleApi/","title":"One Simple API","text":"<p>One Simple API is an API toolbox offering PDF generation, Currency Exchange, QR codes, Screenshots, and more.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.oneSimpleApi/#basic-operations","title":"Basic Operations","text":"<ul> <li>Information<ul> <li>Convert a value between currencies</li> <li>Retrieve image metadata from a URL</li> </ul> </li> <li>Social Profile<ul> <li>Get details about an Instagram profile</li> <li>Get details about a Spotify Artist</li> </ul> </li> <li>Utility<ul> <li>Expand a shortened url</li> <li>Generate a QR Code</li> <li>Validate an email address</li> </ul> </li> <li>Website<ul> <li>Generate a PDF from a webpage</li> <li>Get SEO information from website</li> <li>Create a screenshot from a webpage</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.onfleet/","title":"Onfleet","text":"<p>Onfleet is a logistics platform offering a last-mile delivery solution.</p> <p>Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.onfleet/#operations","title":"Operations","text":"<ul> <li>Admin<ul> <li>Create a new Onfleet admin</li> <li>Delete an Onfleet admin</li> <li>Get all Onfleet admins</li> <li>Update an Onfleet admin</li> </ul> </li> <li>Container<ul> <li>Add task at index (or append)</li> <li>Get container information</li> <li>Fully replace a container's tasks</li> </ul> </li> <li>Destination<ul> <li>Create a new destination</li> <li>Get a specific destination</li> </ul> </li> <li>Hub<ul> <li>Create a new Onfleet hub</li> <li>Get all Onfleet hubs</li> <li>Update an Onfleet hub</li> </ul> </li> <li>Organization<ul> <li>Retrieve your own organization's details</li> <li>Retrieve the details of an organization with which you are connected</li> </ul> </li> <li>Recipient<ul> <li>Create a new Onfleet recipient</li> <li>Get a specific Onfleet recipient</li> <li>Update an Onfleet recipient</li> </ul> </li> <li>Task<ul> <li>Create a new Onfleet task</li> <li>Clone an Onfleet task</li> <li>Force-complete a started Onfleet task</li> <li>Delete an Onfleet task</li> <li>Get all Onfleet tasks</li> <li>Get a specific Onfleet task</li> <li>Update an Onfleet task</li> </ul> </li> <li>Team<ul> <li>Automatically dispatch tasks assigned to a team to on-duty drivers</li> <li>Create a new Onfleet team</li> <li>Delete an Onfleet team</li> <li>Get a specific Onfleet team</li> <li>Get all Onfleet teams</li> <li>Get estimated times for upcoming tasks for a team, returns a selected driver</li> <li>Update an Onfleet team</li> </ul> </li> <li>Worker<ul> <li>Create a new Onfleet worker</li> <li>Delete an Onfleet worker</li> <li>Get a specific Onfleet worker</li> <li>Get all Onfleet workers</li> <li>Get a specific Onfleet worker schedule</li> <li>Update an Onfleet worker</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.openThesaurus/","title":"OpenThesaurus","text":"<p>OpenThesaurus is a free German dictionary for synonyms.</p> <p>\ud83d\udd11 Credentials</p> <p>The OpenThesaurus node does not require authentication.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.openThesaurus/#basic-operations","title":"Basic Operations","text":"<ul> <li>Get synonyms for a German word in German</li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.openThesaurus/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to get synonyms of a German word in German. You can also find the workflow on the website. This example usage workflow would use the following nodes. - Start - OpenThesaurus</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.openThesaurus/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.openThesaurus/#2-openthesaurus-node","title":"2. OpenThesaurus node","text":"<p>This node will return synonyms of the word <code>Hallo</code> in German. If you want to get synonyms of another German word, use that word instead.</p> <ol> <li>Enter <code>Hallo</code> in the Text field.</li> <li>Click on Execute Node to run the workflow.</li> </ol> <p>In the screenshot below, you will notice that the node returns the synonyms of the word <code>Hallo</code>.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.openWeatherMap/","title":"OpenWeatherMap","text":"<p>OpenWeatherMap is an online service that provides weather data. It provides current weather data, forecasts, and historical data.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.openWeatherMap/#basic-operations","title":"Basic Operations","text":"<ul> <li>Returns the current weather data</li> <li>Returns the weather data for the next 5 days</li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.openWeatherMap/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to get the current weather data for a city. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - OpenWeatherMap</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.openWeatherMap/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.openWeatherMap/#2-openweathermap-node","title":"2. OpenWeatherMap node","text":"<ol> <li>First of all, you'll have to enter credentials for the OpenWeatherMap node. You can find out how to do that here.</li> <li>Enter the name of the city in the City field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.orbit/","title":"Orbit","text":"<p>Orbit is a platform for managing and growing communities.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.orbit/#basic-operations","title":"Basic Operations","text":"<ul> <li>Activity<ul> <li>Create an activity for a member</li> <li>Get all activities</li> </ul> </li> <li>Member<ul> <li>Delete a member</li> <li>Get a member</li> <li>Get all members in a workspace</li> <li>Lookup a member by identity</li> <li>Update a member</li> <li>Create/Update a member</li> </ul> </li> <li>Note<ul> <li>Create a note</li> <li>Get all notes for a member</li> <li>Update a note</li> </ul> </li> <li>Post<ul> <li>Create a post</li> <li>Get all posts</li> <li>Delete a post</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.orbit/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to create a new member and update their information in Orbit using the Orbit node. It also allows you to create a note and a post for the new member in Orbit. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Start - Orbit</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.orbit/#1-start-node","title":"1. Start node","text":"<p>The Start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.orbit/#2-orbit-node-upsert-member","title":"2. Orbit node (upsert: member)","text":"<p>This node will create a new member in a workspace in Orbit. We will use the GitHub identity to create a new member.</p> <ol> <li>First of all, you'll have to enter credentials for the Orbit node. You can find out how to do that here.</li> <li>Select 'Upsert' from the Operation dropdown list.</li> <li>Select the workspace where you want to create a new member from the Workspace dropdown list.</li> <li>Click on the Add Identity button.</li> <li>Select 'GitHub' from the Source dropdown list.</li> <li>Select 'Username' from the Search By dropdown list.</li> <li>Enter the GitHub username of the member in the Username field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node creates a new member in a workspace in Orbit using the GitHub identity.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.orbit/#3-orbit1-node-update-member","title":"3. Orbit1 node (update: member)","text":"<p>This node will update the tags of the member that we created in the previous node.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Update' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Workspace field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Orbit &gt; Parameters &gt; workspaceId. You can also add the following expression: <code>{{$node[\"Orbit\"].parameter[\"workspaceId\"]}}</code>.</li> <li>Click on the gears icon next to the Member ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Orbit &gt; Output Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$node[\"Orbit\"].json[\"id\"]}}</code>.</li> <li>Click on the Add Field button and select 'Tags to Add'.</li> <li>Enter the tags in the Tags to Add field. You can add multiple tags by separating them with a comma.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node updates the information of the new member that we created in the previous node. The node adds the tags <code>n8nConf</code> and <code>MLH</code> to the new member.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.orbit/#4-orbit2-node-create-note","title":"4. Orbit2 node (create: note)","text":"<p>This node will create a note for the member that we created using the Orbit node.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Note' from the Resource dropdown list.</li> <li>Click on the gears icon next to the Workspace field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Orbit &gt; Parameters &gt; workspaceId. You can also add the following expression: <code>{{$node[\"Orbit\"].parameter[\"workspaceId\"]}}</code>.</li> <li>Click on the gears icon next to the Member ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Orbit &gt; Output Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$node[\"Orbit\"].json[\"id\"]}}</code>.</li> <li>Enter a note in the Note field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node creates a note for the member that we created using the Orbit node.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.orbit/#5-orbit3-node-create-post","title":"5. Orbit3 node (create: post)","text":"<p>This node will create a post for the member that we created using the Orbit node.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Post' from the Resource dropdown list.</li> <li>Click on the gears icon next to the Workspace field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Orbit &gt; Parameters &gt; workspaceId. You can also add the following expression: <code>{{$node[\"Orbit\"].parameter[\"workspaceId\"]}}</code>.</li> <li>Click on the gears icon next to the Member ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Orbit &gt; Output Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$node[\"Orbit\"].json[\"id\"]}}</code>.</li> <li>Enter a URL for the post in the URL field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node creates a post for the member that we created using the Orbit node.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.oura/","title":"Oura","text":"<p>Oura is a wellness ring and app that helps you keep track of your activities and sleep.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.oura/#basic-operations","title":"Basic Operations","text":"<ul> <li>Profile<ul> <li>Get the user's personal information.</li> </ul> </li> <li>Summary<ul> <li>Get the user's activity summary.</li> <li>Get the user's readiness summary.</li> <li>Get the user's sleep summary</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.oura/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to get activity summary from Oura and store the output in Airtable. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Cron - Oura - Set - Airtable</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.oura/#1-cron-node","title":"1. Cron node","text":"<p>The Cron node will trigger the workflow every Sunday at 9 AM.</p> <ol> <li>Click on Add Cron Time.</li> <li>Select 'Every Week' from the Mode dropdown list.</li> <li>Enter <code>9</code> in the Hour field.</li> <li>Select 'Sunday' from the Weekday dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.oura/#2-oura-node-getactivity-summary","title":"2. Oura node (getActivity: summary)","text":"<p>This node will return the activity summary of a week.</p> <ol> <li>First of all, you'll have to enter credentials for the Oura node. You can find out how to do that here.</li> <li>Select 'Get Activity Summary' from the Operation dropdown list.</li> <li>Toggle Return All to <code>true</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns the activity summary.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.oura/#3-set-node","title":"3. Set node","text":"<p>We will use the Set node to ensure that only the data that we set in this node gets passed on to the next nodes in the workflow.</p> <ol> <li>Click on Add Value and select 'String' from the dropdown list.</li> <li>Enter <code>Day</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; summary_date. You can also add the following expression: <code>{{$json[\"summary_date\"]}}</code>.</li> <li>Click on Add Value and select 'String' from the dropdown list.</li> <li>Enter <code>Steps</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; steps. You can also add the following expression: <code>{{$json[\"steps\"]}}</code>.</li> <li>Click on Add Value and select 'String' from the dropdown list.</li> <li>Enter <code>Activity Score</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; score. You can also add the following expression: <code>{{$json[\"score\"]}}</code>.</li> <li>Toggle Keep Only Set to <code>true</code>. We set this option to true to ensure that only the data that we have set in this node get passed on to the next nodes in the workflow.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node uses the data from the previous node and returns the data that we set for the workflow.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.oura/#4-airtable-node-append","title":"4. Airtable node (Append)","text":"<p>This node will append the data that we set in the previous node to a table. Create a table like this in your Airtable base.</p> <ol> <li>First of all, you'll have to enter credentials for the Airtable node. You can find out how to do that here.</li> <li>Select 'Append' from the Operation dropdown list.</li> <li>Enter the Base ID in the Base ID field. For obtaining the Base ID, head over to their API page and select the correct base. You\u2019ll find the Base ID there.</li> <li>Enter the name of your table in the Table field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node appends the data that we had set in the previous node.</p> <p></p> <p> Activate workflow for production</p> <p>This example workflow uses the Cron node, which is a Trigger node. You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Cron node.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.paddle/","title":"Paddle","text":"<p>Paddle is an all-in-one SaaS Commerce platform for software and SaaS companies to run and grow their business.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.paddle/#basic-operations","title":"Basic Operations","text":"<ul> <li>Coupon<ul> <li>Create a coupon.</li> <li>Get all coupons.</li> <li>Update a coupon.</li> </ul> </li> <li>Payment<ul> <li>Get all payment.</li> <li>Reschedule payment.</li> </ul> </li> <li>Plan<ul> <li>Get a plan.</li> <li>Get all plans.</li> </ul> </li> <li>Product<ul> <li>Get all products.</li> </ul> </li> <li>User<ul> <li>Get all users</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.paddle/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to create a coupon on Paddle. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Start - Paddle</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.paddle/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.paddle/#2-paddle-node-create-coupon","title":"2. Paddle node (create: coupon)","text":"<ol> <li>First of all, you'll have to enter credentials for the Paddle node. You can find out how to do that here.</li> <li>Enter the discount amount in the Discount Amount field.</li> <li>Click on the Add Field button and select 'Coupon Code' from the dropdown list.</li> <li>Enter the coupon code in the Coupon Code field.</li> <li>Click on Execute Node to run the node.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.pagerDuty/","title":"PagerDuty","text":"<p>PagerDuty is a cloud computing company that produces a SaaS incident response platform for IT departments.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.pagerDuty/#basic-operations","title":"Basic Operations","text":"<ul> <li>Incident<ul> <li>Create an incident</li> <li>Get an incident</li> <li>Get all incidents</li> <li>Update an incident</li> </ul> </li> <li>Incident Note<ul> <li>Create an incident note</li> <li>Get all incident's notes</li> </ul> </li> <li>Log Entry<ul> <li>Get a log entry</li> <li>Get all log entries</li> </ul> </li> <li>User<ul> <li>Get a user</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.pagerDuty/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to create, update, and get an incident on PagerDuty. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Start - PagerDuty</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.pagerDuty/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.pagerDuty/#2-pagerduty-node-create-incident","title":"2. PagerDuty node (create: incident)","text":"<ol> <li>First of all, you'll have to enter credentials for the PagerDuty node. You can find out how to do that here.</li> <li>Enter the title of the incident in the Title field.</li> <li>Select the Service ID from the dropdown list.</li> <li>Enter your email in the Email field.</li> <li>Click on Execute Node to run the node.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.pagerDuty/#3-pagerduty1-node-update-incident","title":"3. PagerDuty1 node (update: incident)","text":"<ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Update' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Incident ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; PagerDuty &gt; Output Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$node[\"PagerDuty\"].json[\"id\"]}}</code>.</li> <li>Click on the gears icon next to the Email field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; PagerDuty &gt; Parameters &gt; email. You can also add the following expression: <code>{{$node[\"PagerDuty\"].parameter[\"email\"]}}</code>.</li> <li>Click on the Add Field button and click on Title.</li> <li>Enter the name of the updated title in the Title field.</li> <li>Click on Execute Node to run the node.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.pagerDuty/#4-pagerduty2-node-get-incident","title":"4. PagerDuty2 node (get: incident)","text":"<ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Get' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Incident ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; PagerDuty &gt; Output Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$node[\"PagerDuty\"].json[\"id\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.payPal/","title":"PayPal","text":"<p>PayPal is a digital payment service that supports online funds transfers and that customers can use when shopping online.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.payPal/#basic-operations","title":"Basic Operations","text":"<ul> <li>Payout<ul> <li>Create a batch payout</li> <li>Show batch payout details</li> </ul> </li> <li>Payout Item<ul> <li>Cancels an unclaimed payout item</li> <li>Show payout item details</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.payPal/#example-usage","title":"Example Usage","text":"<p>This workflow shows you how to create a PayPal batch payout. You can also find the workflow on this website. This example usage workflow uses the following two nodes. - Start - PayPal</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.payPal/#1-start-node","title":"1. Start node","text":"<p>The Start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.payPal/#2-paypal-node","title":"2. PayPal node","text":"<ol> <li>First of all, you'll have to enter credentials for the PayPal node. You can find out how to do that here.</li> <li>Enter an ID in the Sender Batch ID field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.peekalink/","title":"Peekalink","text":"<p>Peekalink is an API that allows developers to preview links on the web.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.peekalink/#basic-operations","title":"Basic Operations","text":"<ul> <li>Check whether preview for a given link is available</li> <li>Return the preview for a link</li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.peekalink/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to check if preview for a link is available and return the link preview. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Start - Peekalink - IF - No Operation, do nothing</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.peekalink/#1-start-node","title":"1. Start node","text":"<p>The Start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.peekalink/#2-peekalink-node-create-room","title":"2. Peekalink node (create: room)","text":"<p>This node will check whether a preview for the specified link is available.</p> <ol> <li>First of all, you'll have to enter credentials for the Peekalink node. You can find out how to do that here.</li> <li>Select 'Is available' from the Operation dropdown list.</li> <li>Enter a URL in the URL field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns information about whether a preview for the specified link is available.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.peekalink/#3-if-node","title":"3. IF node","text":"<p>This node will check the response from the previous node. If the previous node returned <code>true</code>, the IF node will also return <code>true</code>, otherwise the IF node will return <code>false</code>.</p> <ol> <li>Click on Add Condition and select 'Boolean'.</li> <li>Click on the gears icon next to the Value 1 field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; isAvailable. You can also add the following expression: <code>{{$json[\"isAvailable\"]}}</code>.</li> <li>Toggle Value 2 to <code>true</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns the data from the previous node for the <code>true</code> branch.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.peekalink/#4-peekalink-node-preview","title":"4. Peekalink node (preview)","text":"<p>This node will return the preview of the URL that you specified in the Peekalink node.</p> <ol> <li>Connect the node to the 'true' output of the IF node</li> <li>Select the credentials that you entered in the previous Peekalink node.</li> <li>Click on the gears icon next to the URL field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Peekalink &gt; Parameters &gt; url. You can also add the following expression: <code>{{$node[\"Peekalink\"].parameter[\"url\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns the preview of the URL that you specified in the Peekalink node.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.peekalink/#5-noop-node","title":"5. NoOp node","text":"<p>Adding this node here is optional, as the absence of this node won't make a difference to the functioning of the workflow. We've added this as it can sometimes help others with a better understanding of the workflow, visually.</p> <ol> <li>Create a NoOp node connected to the 'false' output of the IF node.</li> <li>Click on Execute Node to run the node.</li> </ol> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.phantombuster/","title":"Phantombuster","text":"<p>Phantombuster is a scraping platform that allows chain actions and data extraction on the web to generate business leads, marketing audiences, and overall growth.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.phantombuster/#basic-operations","title":"Basic Operations","text":"<ul> <li>Agent<ul> <li>Delete an agent by ID.</li> <li>Get an agent by ID.</li> <li>Get all agents of the current user's organization.</li> <li>Get the output of the most recent container of an agent.</li> <li>Add an agent to the launch queue.</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.phantombuster/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to store the output of a phantom in Airtable. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Start - Phantombuster - Set - Airtable</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.phantombuster/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.phantombuster/#2-phantombuster-node-getoutput-agent","title":"2. Phantombuster node (getOutput: agent)","text":"<p>Create and launch the LinkedIn Profile Scraper in your Phantombuster account. This node will return the output of this phantom.</p> <ol> <li>First of all, you'll have to enter credentials for the Phantombuster node. You can find out how to do that here.</li> <li>Select 'Get Output' from the Operation dropdown list.</li> <li>Select a phantom from the Agent dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns the output from the LinkedIn Profile Scraper phantom.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.phantombuster/#3-set-node","title":"3. Set node","text":"<p>We will use the Set node to ensure that only the data that we set in this node gets passed on to the next nodes in the workflow.</p> <ol> <li>Click on Add Value and select 'String' from the dropdown list.</li> <li>Enter <code>Name</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Phantombuster &gt; Output Data &gt; JSON &gt; general &gt; fullName. You can also add the following expression: <code>{{$node[\"Phantombuster\"].json[\"general\"][\"fullName\"]}}</code>.</li> <li>Click on Add Value and select 'String' from the dropdown list.</li> <li>Enter <code>Email</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Phantombuster &gt; Output Data &gt; JSON &gt; details &gt; mail. You can also add the following expression: <code>{{$node[\"Phantombuster\"].json[\"details\"][\"mail\"]}}</code>.</li> <li>Click on Add Value and select 'String' from the dropdown list.</li> <li>Enter <code>Company</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Phantombuster &gt; Output Data &gt; JSON &gt; jobs&gt; [Item: 0] &gt; companyName. You can also add the following expression: <code>{{$node[\"Phantombuster\"].json[\"jobs\"][0][\"companyName\"]}}</code>.</li> <li>Toggle Keep Only Set to <code>true</code>. We set this option to true to ensure that only the data that we have set in this node get passed on to the next nodes in the workflow.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node uses the data from the previous node and returns the data that we set for the workflow.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.phantombuster/#4-airtable-node-append","title":"4. Airtable node (Append)","text":"<p>This node will append the data that we set in the previous node to a table. Create a table like this in your Airtable base.</p> <ol> <li>First of all, you'll have to enter credentials for the Airtable node. You can find out how to do that here.</li> <li>Select 'Append' from the Operation dropdown list.</li> <li>Enter the Base ID in the Base ID field. For obtaining the Base ID, head over to their API page and select the correct base. You\u2019ll find the Base ID there.</li> <li>Enter the name of your table in the Table field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node appends the data that we had set in the previous node.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.philipsHue/","title":"Philips Hue","text":"<p>Philips Hue is a line of smart color-changing LED lamps and bulbs that can be controlled wirelessly.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.philipsHue/#basic-operations","title":"Basic Operations","text":"<ul> <li>Light<ul> <li>Delete a light</li> <li>Retrieve a light</li> <li>Retrieve all lights</li> <li>Update a light</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.philipsHue/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to turn on a light and set its brightness using the Philips Hue node. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Start - Philips Hue</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.philipsHue/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.philipsHue/#2-philips-hue-node-update-light","title":"2. Philips Hue node (update: light)","text":"<ol> <li>First of all, you'll have to enter credentials for the Philips Hue node. You can find out how to do that here.</li> <li>Enter the light id in the Light ID field.</li> <li>Click on Add Field and select 'Brightness' from the dropdown list.</li> <li>Enter a value between 1 and 254 for the brightness in the Brightness field.</li> <li>Click on Execute Node to run the node.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.pipedrive/","title":"Pipedrive","text":"<p>Pipedrive is a cloud-based sales software company that aims to improve the productivity of businesses through the use of their software.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","tags":["Workflow\u00b2","Pipedrive","Basic Operations","Example Usage"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.pipedrive/#basic-operations","title":"Basic Operations","text":"<ul> <li>Activity<ul> <li>Create an activity</li> <li>Delete an activity</li> <li>Get data of an activity</li> <li>Get data of all activities</li> <li>Update an activity</li> </ul> </li> <li>Deal<ul> <li>Create a deal</li> <li>Delete a deal</li> <li>Duplicate a deal</li> <li>Get data of a deal</li> <li>Get data of all deals</li> <li>Search a deal</li> <li>Update a deal</li> </ul> </li> <li>Deal Activity<ul> <li>Get all activities of a deal</li> </ul> </li> <li>Deal Product<ul> <li>Add a product to a deal</li> <li>Get all products in a deal</li> <li>Remove a product from a deal</li> <li>Update a product in a deal</li> </ul> </li> <li>File<ul> <li>Create a file</li> <li>Delete a file</li> <li>Download a file</li> <li>Get data of a file</li> </ul> </li> <li>Lead<ul> <li>Create a lead</li> <li>Delete a lead</li> <li>Get data of a lead</li> <li>Get data of all leads</li> <li>Update a lead</li> </ul> </li> <li>Note<ul> <li>Create a note</li> <li>Delete a note</li> <li>Get data of a note</li> <li>Get data of all notes</li> <li>Update a note</li> </ul> </li> <li>Organization<ul> <li>Create an organization</li> <li>Delete an organization</li> <li>Get data of an organization</li> <li>Get data of all organizations</li> <li>Update an organization</li> <li>Search organizations</li> </ul> </li> <li>Person<ul> <li>Create a person</li> <li>Delete a person</li> <li>Get data of a person</li> <li>Get data of all persons</li> <li>Search all persons</li> <li>Update a person</li> </ul> </li> <li>Product<ul> <li>Get data of all products</li> </ul> </li> </ul>","tags":["Workflow\u00b2","Pipedrive","Basic Operations","Example Usage"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.pipedrive/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to create an deal in Pipedrive. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - Pipedrive</p> <p>The final workflow should look like the following image.</p> <p></p>","tags":["Workflow\u00b2","Pipedrive","Basic Operations","Example Usage"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.pipedrive/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>","tags":["Workflow\u00b2","Pipedrive","Basic Operations","Example Usage"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.pipedrive/#2-pipedrive-node","title":"2. Pipedrive node","text":"<ol> <li>First of all, you'll have to enter credentials for the Pipedrive node. You can find out how to do that here.</li> <li>Enter the title of the deal in the Title field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>","tags":["Workflow\u00b2","Pipedrive","Basic Operations","Example Usage"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.plivo/","title":"Plivo","text":"<p>Plivo is a cloud communications platform as a service company that allows you to add SMS, MMS, and Voice calling functionality within your apps programmatically.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.plivo/#basic-operations","title":"Basic Operations","text":"<ul> <li>Call<ul> <li>Make a voice call</li> </ul> </li> <li>MMS<ul> <li>Send an MMS message (US/Canada only)</li> </ul> </li> <li>SMS<ul> <li>Send an SMS message.</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.plivo/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to send daily weather updates via an SMS message using the Plivo node. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Cron - OpenWeatherMap - Plivo</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.plivo/#1-cron-node","title":"1. Cron node","text":"<p>The Cron node will trigger the workflow daily at 9 AM.</p> <ol> <li>Click on Add Cron Time.</li> <li>Set hours to 9 in the Hour field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the Cron node is configured to trigger the workflow every day at 9 AM.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.plivo/#2-openweathermap-node-current-weather","title":"2. OpenWeatherMap node (Current Weather)","text":"<p>This node will return data about the current weather in Berlin. To get the weather updates for your city, you can enter the name of your city instead.</p> <ol> <li>First of all, you'll have to enter credentials for the OpenWeatherMap node. You can find out how to do that here.</li> <li>Enter <code>berlin</code> in the City field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns data about the current weather in Berlin.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.plivo/#3-plivo-node-send-sms","title":"3. Plivo node (send: sms)","text":"<p>This node will send an SMS with the weather update, which was sent by the previous node.</p> <ol> <li>First of all, you'll have to enter credentials for the Plivo node. You can find out how to do that here.</li> <li>Enter a Plivo phone number in the From field.</li> <li>Enter the receiver's phone number in the To field.</li> <li> <p>Click on the gears icon next to the Message field and click on Add Expression.</p> </li> <li> <p>Enter the following message in the Expression field: <code>Hey! The temperature outside is {{$node[\"OpenWeatherMap\"].json[\"main\"][\"temp\"]}}\u00b0C.</code>.</p> </li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node sends an SMS to the phone number that we specified with the weather update.</p> <p></p> <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Cron node.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.postHog/","title":"PostHog","text":"<p>PostHog is an open-source product analytics platform. It provides tools to improve your product, such as session recording, heatmaps, and feature flags.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.postHog/#basic-operations","title":"Basic Operations","text":"<ul> <li>Alias<ul> <li>Create an alias</li> </ul> </li> <li>Event<ul> <li>Create an event</li> </ul> </li> <li>Identity<ul> <li>Create</li> </ul> </li> <li>Track<ul> <li>Track a page</li> <li>Track a screen</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.postHog/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to create an event in PostHog when a request is made to a webhook URL. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Webhook - PostHog</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.postHog/#1-webhook-node","title":"1. Webhook node","text":"<p>This node will trigger the workflow. We will make a GET request to the test webhook URL and pass on a query parameter called  <code>event</code>.</p> <ol> <li>Click on Webhook URLs and select the 'Test' tab.</li> <li>Copy the displayed URL. We will make a GET request to this URL later on.</li> <li>Save the workflow to register the webhook.</li> <li>Click on Execute Node to run the node.</li> <li>In a new browser tab, paste the URL that you copied in the previous step and append <code>?event=login</code> to it. Your URL should look similar to the following URL:<code>https://your-n8n.url/webhook/path?event=login</code>. Here, we are passing a query parameter called <code>event</code> and assigning the value <code>login</code> to it.</li> <li>Press Enter (or Return) to make a request to the test webhook URL.</li> </ol> <p>In the screenshot below, you will notice that the node triggers the workflow and receives a query parameter. We will use the value of the query parameter in the next node in the workflow.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.postHog/#2-posthog-node-createcustomer","title":"2. PostHog node (create:customer)","text":"<p>This node will create a new event in PostHog.</p> <ol> <li>First of all, you'll have to enter credentials for the PostHog node. You can find out how to do that here.</li> <li> <p>Click on the gears icon next to the Event field and click on Add Expression.</p> </li> <li> <p>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; query &gt; event. You can also add the following expression: <code>{{$json[\"query\"][\"event\"]}}</code>.</p> </li> <li> <p>Enter a distinct id in the Distinct ID field.</p> </li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node creates a new event in PostHog.</p> <p></p> <p> Activate workflow for production</p> <p>This example workflow uses the Webhook node, which is a Trigger node. You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered every time a GET request is sent to the Production webhook URL.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.postgres/","title":"Postgres","text":"<p>PostgreSQL, also known as Postgres, is a free and open-source relational database management system emphasizing extensibility and SQL compliance.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.postgres/#basic-operations","title":"Basic Operations","text":"<ul> <li>Execute an SQL query</li> <li>Insert rows in database</li> <li>Update rows in database</li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.postgres/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to run an SQL query on a Postgres instance. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Start - Set - Postgres</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.postgres/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.postgres/#2-postgres-node-execute-query","title":"2. Postgres node (Execute Query)","text":"<ol> <li>First of all, you'll have to enter credentials for the Postgres node. You can find out how to do that here.</li> <li>Select 'Execute Query' from the Operation dropdown list.</li> <li>Enter the following SQL query in the Query field: <code>CREATE TABLE test (id INT, name VARCHAR(255), PRIMARY KEY (id));</code>.</li> <li>Click on the Node tab and toggle Always Output Data to true.</li> <li>Click on Execute Node to run the node.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.postgres/#3-set-node","title":"3. Set node","text":"<ol> <li>Click on the Add Value button and select 'Number' from the dropdown list.</li> <li>Enter <code>id</code> in the Name field.</li> <li>Click on the Add Value button and select 'String' from the dropdown list.</li> <li>Enter <code>name</code> in the Name field.</li> <li>Enter the value for the name in the Value field.</li> <li>Click on Execute Node to run the node.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.postgres/#4-postgres1-node-insert","title":"4. Postgres1 node (Insert)","text":"<ol> <li>Select the credentials that you entered in the previous Postgres node.</li> <li>Enter <code>test</code> in the Table field.</li> <li>Enter <code>id, name</code> in the Columns field.</li> <li>Click on Execute Node to run the node.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.postgres/#faqs","title":"FAQs","text":""},{"location":"workflow/integrations/nodes/workflow-nodes-base.postgres/#how-to-specify-the-data-type-of-a-column","title":"How to specify the data type of a column?","text":"<p>To specify the data type of a column, append the column name with <code>:type</code>, where <code>type</code> is the data type of that column. For example, if you want to specify the type <code>int</code> for the column id and type <code>text</code> for the column name, you can use the following snippet in the Columns field: <code>id:init,name:text</code>.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.profitWell/","title":"ProfitWell","text":"<p>ProfitWell provides real-time subscription financial metrics.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.profitWell/#basic-operations","title":"Basic Operations","text":"<ul> <li>Company<ul> <li>Get your companys ProfitWell account settings</li> </ul> </li> <li>Metric<ul> <li>Retrieve financial metric broken down by day for either the current month or the last</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.profitWell/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to send financial metrics monthly to a Mattermost channel. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Cron - ProfitWell - Mattermost</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.profitWell/#1-cron-node","title":"1. Cron node","text":"<p>The Cron node will trigger the workflow on the first day of every month at 9 AM.</p> <ol> <li>Click on Add Cron Time.</li> <li>Select 'Every Month' from the Mode dropdown list.</li> <li>Set hours to 9 in the Hour field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the Cron node is configured to trigger the workflow on the first day of every month at 9 AM.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.profitWell/#2-profitwell-node-get-metric","title":"2. ProfitWell node (get: metric)","text":"<p>This node will return monthly financial metrics.</p> <ol> <li>First of all, you'll have to enter credentials for the ProfitWell node. You can find out how to do that here.</li> <li>Select 'Monthly' from the Type dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns montly financial metrics.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.profitWell/#3-mattermost-node-post-message","title":"3. Mattermost node (post: message)","text":"<p>This node will send a message with the metrics that we get from the previous node in the 'Monthly Metrics' channel in Mattermost. If you have a different channel, use that instead.</p> <ol> <li> <p>First of all, you'll have to enter credentials for the Mattermost node. You can find out how to do that here.</p> </li> <li> <p>Select a channel from the Channel ID dropdown list.</p> </li> <li>Click on the gears icon next to the Message field and click on Add Expression.</li> <li>Enter the following message in the Expression field: <pre><code>Active Customers: {{$node[\"ProfitWell\"].json[\"active_customers\"]}}\nTrailing Customers: {{$node[\"ProfitWell\"].json[\"active_trialing_customers\"]}}\nNew Customers: {{$node[\"ProfitWell\"].json[\"new_customers\"]}}\nGrowth Rate: {{$node[\"ProfitWell\"].json[\"growth_rate\"]}}\nRecurring Revenue: {{$node[\"ProfitWell\"].json[\"recurring_revenue\"]}}\n</code></pre></li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node sends a message with the metrics that we get from the previous node.</p> <p></p> <p> Activate workflow for production</p> <p>This example workflow uses the Cron node, which is a Trigger node. You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Cron node.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.pushbullet/","title":"Pushbullet","text":"<p>Pushbullet connects your devices and allows you to see your phone's notifications on your computer, transfer links, and files between devices.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.pushbullet/#basic-operations","title":"Basic Operations","text":"<ul> <li>Push<ul> <li>Create a push</li> <li>Delete a push</li> <li>Get all pushes</li> <li>Update a push</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.pushbullet/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to send daily weather updates via a push notification using the Pushbullet node. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Cron - OpenWeatherMap - Pushbullet</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.pushbullet/#1-cron-node","title":"1. Cron node","text":"<p>The Cron node will trigger the workflow daily at 9 AM.</p> <ol> <li>Click on Add Cron Time.</li> <li>Set hours to 9 in the Hour field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the Cron node is configured to trigger the workflow every day at 9 AM.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.pushbullet/#2-openweathermap-node-current-weather","title":"2. OpenWeatherMap node (Current Weather)","text":"<p>This node will return data about the current weather in Berlin. To get the weather updates for your city, you can enter the name of your city instead.</p> <ol> <li>First of all, you'll have to enter credentials for the OpenWeatherMap node. You can find out how to do that here.</li> <li>Enter <code>berlin</code> in the City field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns data about the current weather in Berlin.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.pushbullet/#3-pushbullet-node-create-push","title":"3. Pushbullet node (create: push)","text":"<p>This node will send a push notification with the weather update to the default device. If you want to send it to a specific device, select 'Device ID' from the Target dropdown list and enter the device ID in the Value field.</p> <ol> <li>First of all, you'll have to enter credentials for the Pushbullet node. You can find out how to do that here.</li> <li>Enter <code>Today's Weather Update</code> in the Title field.</li> <li> <p>Click on the gears icon next to the Body field and click on Add Expression.</p> </li> <li> <p>Enter the following message in the Expression field: <code>Hey! The temperature outside is {{$node[\"OpenWeatherMap\"].json[\"main\"][\"temp\"]}}\u00b0C.</code>.</p> </li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node sends a push notification to the default device with the weather update.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.pushcut/","title":"Pushcut","text":"<p>Pushcut is an app for iOS that lets you create smart notifications to kick off shortcuts, URLs, and online automation.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.pushcut/#basic-operations","title":"Basic Operations","text":"<ul> <li>Notification<ul> <li>Send a notification</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.pushcut/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to send daily weather updates via a push notification using the Pushcut node. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Cron - OpenWeatherMap - Pushcut</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.pushcut/#1-cron-node","title":"1. Cron node","text":"<p>The Cron node will trigger the workflow daily at 9 AM.</p> <ol> <li>Click on Add Cron Time.</li> <li>Set hours to 9 in the Hour field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the Cron node is configured to trigger the workflow every day at 9 AM.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.pushcut/#2-openweathermap-node-current-weather","title":"2. OpenWeatherMap node (Current Weather)","text":"<p>This node will return data about the current weather in Berlin. To get the weather updates for your city, you can enter the name of your city instead.</p> <ol> <li>First of all, you'll have to enter credentials for the OpenWeatherMap node. You can find out how to do that here.</li> <li>Enter <code>berlin</code> in the City field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns data about the current weather in Berlin.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.pushcut/#3-pushcut-node-send-notification","title":"3. Pushcut node (send: notification)","text":"<p>This node will send a push notification with the weather update, which was sent by the previous node.</p> <ol> <li>First of all, you'll have to enter credentials for the Pushcut node. You can find out how to do that here.</li> <li>Select a notification from the Notification Name dropdown list.</li> <li>Click on Add Field and select 'Title' from the dropdown list.</li> <li>Enter <code>Today's Weather Update</code> in the Title field.</li> <li>Click on Add Field and select 'Text' from the dropdown list.</li> <li> <p>Click on the gears icon next to the Text field and click on Add Expression.</p> </li> <li> <p>Enter the following message in the Expression field: <code>Hey! The temperature outside is {{$node[\"OpenWeatherMap\"].json[\"main\"][\"temp\"]}}\u00b0C.</code>.</p> </li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node sends a push notification to your device with the weather update.</p> <p></p> <p> Activate workflow for production</p> <p>This example workflow uses the Cron node, which is a Trigger node. You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Cron node.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.pushover/","title":"Pushover","text":"<p>Pushover is a simple push notification service that integrates easily into web apps, network monitors, shell scripts, servers, and anything else that needs to send alerts to your Android, iPhone, iPad, and Desktop.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.pushover/#basic-operations","title":"Basic Operations","text":"<ul> <li>Message<ul> <li>Push</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.pushover/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to send daily weather updates via a push notification using the Pushover node. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Cron - OpenWeatherMap - Pushover</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.pushover/#1-cron-node","title":"1. Cron node","text":"<p>The Cron node will trigger the workflow daily at 9 AM.</p> <ol> <li>Click on Add Cron Time.</li> <li>Set hours to 9 in the Hour field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the Cron node is configured to trigger the workflow every day at 9 AM.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.pushover/#2-openweathermap-node-current-weather","title":"2. OpenWeatherMap node (Current Weather)","text":"<p>This node will return data about the current weather in Berlin. To get the weather updates for your city, you can enter the name of your city instead.</p> <ol> <li>First of all, you'll have to enter credentials for the OpenWeatherMap node. You can find out how to do that here.</li> <li>Enter <code>berlin</code> in the City field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns data about the current weather in Berlin.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.pushover/#3-pushover-node-push-message","title":"3. Pushover node (push: message)","text":"<p>This node will send a push notification with the weather update, which was sent by the previous node.</p> <ol> <li>First of all, you'll have to enter credentials for the Pushover node. You can find out how to do that here.</li> <li>Enter a user key in the User Key field. You can obtain your user key from the Pushover Dashboard.</li> <li> <p>Click on the gears icon next to the Message field and click on Add Expression.</p> </li> <li> <p>Enter the following message in the Expression field: <code>Hey! The temperature outside is {{$node[\"OpenWeatherMap\"].json[\"main\"][\"temp\"]}}\u00b0C.</code>.</p> </li> <li>Select 'Normal Priority' from the Priority dropdown list. This will trigger sound, vibration, and display an alert according to the user's device settings.</li> <li>Click on Add Field and select 'Title' from the dropdown list.</li> <li>Enter <code>Today's Weather</code> in the Title field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node sends a push notification to a device with the weather update.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.questDb/","title":"QuestDB","text":"<p>QuestDB is an open-source NewSQL relational database designed to process time-series data, faster. QuestDB\u2019s stack is engineered from scratch, zero-GC Java and dependency-free. It supports a a Java API, SQL via HTTP and the PostgreSQL wire protocol.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.questDb/#basic-operations","title":"Basic Operations","text":"<ul> <li>Executes a SQL query.</li> <li>Insert rows in database.</li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.questDb/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to create a table and insert data into it in QuestDB. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Start - Set - QuestDB</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.questDb/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.questDb/#2-questdb-node-execute-query","title":"2. QuestDB node (Execute Query)","text":"<ol> <li>First of all, you'll have to enter credentials for the QuestDB node. You can find out how to do that here.</li> <li>Select 'Execute Query' from the Operation dropdown list.</li> <li>Enter the following SQL query in the Query field: <code>CREATE TABLE test (id INT, name STRING);</code>.</li> <li>Click on the Node tab and toggle Always Output Data to true.</li> <li>Click on Execute Node to run the node.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.questDb/#3-set-node","title":"3. Set node","text":"<ol> <li>Click on the Add Value button and select 'Number' from the dropdown list.</li> <li>Enter <code>id</code> in the Name field.</li> <li>Click on the Add Value button and select 'String' from the dropdown list.</li> <li>Enter <code>name</code> in the Name field.</li> <li>Enter the value for the name in the Value field.</li> <li>Click on Execute Node to run the node.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.questDb/#4-questdb1-node-insert","title":"4. QuestDB1 node (Insert)","text":"<ol> <li>Select the credentials that you entered in the previous QuestDB node.</li> <li>Enter <code>test</code> in the Table field.</li> <li>Enter <code>id, name</code> in the Columns field.</li> <li>Click on Execute Node to run the node.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.questDb/#faqs","title":"FAQs","text":""},{"location":"workflow/integrations/nodes/workflow-nodes-base.questDb/#how-to-specify-the-data-type-of-a-column","title":"How to specify the data type of a column?","text":"<p>To specify the data type of a column, append the column name with <code>:type</code>, where <code>type</code> is the data type of that column. For example, if you want to specify the type <code>int</code> for the column id and type <code>text</code> for the column name, you can use the following snippet in the Columns field: <code>id:init,name:text</code>.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.quickbase/","title":"Quick Base","text":"<p>Quick Base is a low-code application development platform. It allows you to connect data, integrate your systems in real-time, and orchestrate automated workflows using simple business logic.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.quickbase/#basic-operations","title":"Basic Operations","text":"<ul> <li>Field<ul> <li>Get all fields</li> </ul> </li> <li>File<ul> <li>Delete a file</li> <li>Download a file</li> </ul> </li> <li>Record<ul> <li>Create a record</li> <li>Delete a record</li> <li>Get all records</li> <li>Update a record</li> <li>Upsert a record</li> </ul> </li> <li>Report<ul> <li>Get a report</li> <li>Run a report</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.quickbase/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to create, update, and get all records in Quick Base. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Start - Set - Quick Base</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.quickbase/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.quickbase/#2-set-node","title":"2. Set node","text":"<p>We will use the Set node to set the name and age for a new record.</p> <ol> <li>Click on Add Value and select 'String' from the dropdown list.</li> <li>Enter <code>name</code> in the Name field.</li> <li>Enter <code>n8n</code> in the Value field.</li> <li>Click on Add Value and select 'Number' from the dropdown list.</li> <li>Enter <code>age</code> in the Name field.</li> <li>Set the value to <code>8</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that node sets the value for name and age.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.quickbase/#3-quick-base-node-create-record","title":"3. Quick Base node (create: record)","text":"<p>This node will create a new record in a table.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.quickbase/#creating-a-quick-base-table","title":"Creating a Quick Base table","text":"<ol> <li>Create a new table with the fields <code>name</code> and <code>age</code>.</li> <li>Copy the string of characters located between <code>db/</code> and <code>?a=td</code> in your Quick Base URL. This string is the Table ID that we will use in the Quick Base node.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.quickbase/#configure-the-quick-base-node","title":"Configure the Quick Base node","text":"<ol> <li>First of all, you'll have to enter credentials for the Quick Base node. You can find out how to do that here.</li> <li>Paste the Table ID you copied in the previous step, in the Table ID field.</li> <li>Enter <code>name,age</code> in the Columns field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node creates a new record in Quick Base using the information from the previous node.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.quickbase/#4-set1-node","title":"4. Set1 node","text":"<p>We will use the Set node to ensure that only the data that we set in this node gets passed on to the next nodes in the workflow. We will set the value of <code>age</code> and <code>Record ID#</code> in this node.</p> <ol> <li>Click on Add Value and select 'Number' from the dropdown list.</li> <li>Enter <code>age</code> in the Name field.</li> <li>Set the value to <code>10</code>.</li> <li>Click on Add Value and select 'Number' from the dropdown list.</li> <li>Enter <code>Record ID#</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Quick Base &gt; Output Data &gt; JSON &gt; Record ID#. You can also add the following expression: <code>{{$node[\"Quick Base\"].json[\"Record ID#\"]}}</code>.</li> <li>Toggle Keep Only Set to <code>true</code>. We set this option to true to ensure that only the data that we have set in this node get passed on to the next nodes in the workflow.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node sets the value of <code>age</code> and <code>Record ID#</code>. This value is passed to the next node in the workflow.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.quickbase/#5-quick-base1-node-update-record","title":"5. Quick Base1 node (update: record)","text":"<p>This node will update the age field with the new value that we set in the previous node.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Update' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Table ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Quick Base &gt; Parameters &gt; tableId. You can also add the following expression: <code>{{$node[\"Quick Base\"].parameter[\"tableId\"]}}</code>.</li> <li>Enter <code>age</code> in the Columns field. If you want to update a different column, enter that column name instead.</li> <li>Enter <code>Record ID#</code> in the Update Key field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node updates the age field with the new value that we set in the previous node.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.quickbase/#6-quick-base2-node-getall-record","title":"6. Quick Base2 node (getAll: record)","text":"<p>This node returns all the records from Quick Base.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Get All' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Table ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Quick Base &gt; Parameters &gt; tableId. You can also add the following expression: <code>{{$node[\"Quick Base\"].parameter[\"tableId\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns all the records from Quick Base.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.quickbooks/","title":"QuickBooks","text":"<p>QuickBooks is an accounting software package developed by Intuit.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.quickbooks/#basic-operations","title":"Basic Operations","text":"<ul> <li>Bill<ul> <li>Create</li> <li>Delete</li> <li>Get</li> <li>Get All</li> <li>Update</li> </ul> </li> <li>Customer<ul> <li>Create</li> <li>Get</li> <li>Get All</li> <li>Update</li> </ul> </li> <li>Employee<ul> <li>Create</li> <li>Get</li> <li>Get All</li> <li>Update</li> </ul> </li> <li>Estimate<ul> <li>Create</li> <li>Delete</li> <li>Get</li> <li>Get All</li> <li>Send</li> <li>Update</li> </ul> </li> <li>Invoice<ul> <li>Create</li> <li>Delete</li> <li>Get</li> <li>Get All</li> <li>Send</li> <li>Update</li> <li>Void</li> </ul> </li> <li>Item<ul> <li>Get</li> <li>Get All</li> </ul> </li> <li>Payment<ul> <li>Create</li> <li>Delete</li> <li>Get</li> <li>Get All</li> <li>Send</li> <li>Update</li> <li>Void</li> </ul> </li> <li>Purchase<ul> <li>Get</li> <li>Get All</li> </ul> </li> <li>Transaction<ul> <li>Get Report</li> </ul> </li> <li>Vendor<ul> <li>Create</li> <li>Get</li> <li>Get All</li> <li>Update</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.quickbooks/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to create a customer and an invoice, and send the invoice to the customer. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Start - QuickBooks</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.quickbooks/#1-start-node","title":"1. Start node","text":"<p>The Start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.quickbooks/#2-quickbooks-node-createcustomer","title":"2. QuickBooks node (create:customer)","text":"<p>This node will create a new customer in QuickBooks.</p> <ol> <li>First of all, you'll have to enter credentials for the QuickBooks node. You can find out how to do that here.</li> <li>Select 'Create' from the Operation dropdown list.</li> <li>Enter a display name in the Display Name field.</li> <li>Click on the Add Field button and select 'Primary Email Address'.</li> <li>Enter the email address of the customer in the Primary Email Address field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node creates a new customer.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.quickbooks/#3-quickbooks1-node-createinvoice","title":"3. QuickBooks1 node (create:invoice)","text":"<p>This node will create an invoice for the customer that we created in the previous node.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Invoice' from the Resource dropdown list.</li> <li>Select 'Create' from the Operation dropdown list.</li> <li>Click on the gears icon next to the For Customer field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; Id. You can also add the following expression: <code>{{$json[\"Id\"]}}</code>.</li> <li>Click on the Add Item button.</li> <li>Select 'Item' from the Add Line Item Property dropdown list.</li> <li>Select an item from the Item dropdown list.</li> <li>Select 'Amount' from the Add Line Item Property dropdown list.</li> <li>Enter an amount in the Amount field.</li> <li>Select 'Detail Type' from the Add Line Item Property dropdown list.</li> <li>Select a type from the Detail Type dropdown list.</li> <li>Select 'Description' from the Add Line Item Property dropdown list.</li> <li>Enter a description in the Description field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node creates an invoice for the customer that we created in the previous node.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.quickbooks/#4-quickbooks2-node-sendinvoice","title":"4. QuickBooks2 node (send:invoice)","text":"<p>This node will send the invoice that we created in the previous node.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Invoice' from the Resource dropdown list.</li> <li>Select 'Send' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Invoice ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; Id. You can also add the following expression: <code>{{$json[\"Id\"]}}</code>.</li> <li>Enter the email address of the customer in the Email field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node sends the invoice to the customer.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.rabbitmq/","title":"RabbitMQ","text":"<p>RabbitMQ is an open-source message broker that accepts and forwards messages.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","tags":["Workflow\u00b2","RabbitMQ","Cron","HTTP Request"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.rabbitmq/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to send updates about the position of the ISS every minute to a queue using the RabbitMQ node. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Cron - HTTP Request - Set - RabbitMQ</p> <p>The final workflow should look like the following image.</p> <p></p>","tags":["Workflow\u00b2","RabbitMQ","Cron","HTTP Request"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.rabbitmq/#1-cron-node","title":"1. Cron node","text":"<p>The Cron node will trigger the workflow every minute.</p> <ol> <li>Click on Add Cron Time.</li> <li>Select 'Every Minute' from the Mode dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the Cron node is configured to trigger the workflow every minute.</p> <p></p>","tags":["Workflow\u00b2","RabbitMQ","Cron","HTTP Request"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.rabbitmq/#2-http-request-node-get","title":"2. HTTP Request node (GET)","text":"<p>This node will make a GET request to the API <code>https://api.wheretheiss.at/v1/satellites/25544/positions</code> to fetch the position of the ISS. This information gets passed on to the next node in the workflow.</p> <ol> <li>Enter <code>https://api.wheretheiss.at/v1/satellites/25544/positions</code> in the URL field.</li> <li>Click on the Add Parameter button in the Query Parameters section.</li> <li>Enter <code>timestamps</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Enter the following expression: <code>{{Date.now()}}</code>. This expression will return the current timestamp.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node makes a GET request to the API and returns the information about the location of the ISS.</p> <p></p>","tags":["Workflow\u00b2","RabbitMQ","Cron","HTTP Request"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.rabbitmq/#3-set-node","title":"3. Set node","text":"<p>We will use the Set node to ensure that only the data that we set in this node gets passed on to the next nodes in the workflow.</p> <ol> <li>Click on Add Value and select 'String' from the dropdown list.</li> <li>Enter <code>Name</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; HTTP Request &gt; Output Data &gt; JSON &gt; 0 &gt; name. You can also add the following expression: <code>{{$node[\"HTTP Request\"].json[\"0\"][\"name\"]}}</code>.</li> <li>Click on Add Value and select 'String' from the dropdown list.</li> <li>Enter <code>Latitude</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; HTTP Request &gt; Output Data &gt; JSON &gt; 0 &gt; latitude. You can also add the following expression: <code>{{$node[\"HTTP Request\"].json[\"0\"][\"latitude\"]}}</code>.</li> <li>Click on Add Value and select 'String' from the dropdown list.</li> <li>Enter <code>Longitude</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; HTTP Request &gt; Output Data &gt; JSON &gt; 0 &gt; longitude. You can also add the following expression: <code>{{$node[\"HTTP Request\"].json[\"0\"][\"longitude\"]}}</code>.</li> <li>Click on Add Value and select 'String' from the dropdown list.</li> <li>Enter <code>Timestamp</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; HTTP Request &gt; Output Data &gt; JSON &gt; 0 &gt; timpestamp. You can also add the following expression: <code>{{$node[\"HTTP Request\"].json[\"0\"][\"timestamp\"]}}</code>.</li> <li>Toggle Keep Only Set to <code>true</code>. We set this option to true to ensure that only the data that we have set in this node get passed on to the next nodes in the workflow.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node uses the data from the previous node and returns the data that we set for the workflow.</p> <p></p>","tags":["Workflow\u00b2","RabbitMQ","Cron","HTTP Request"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.rabbitmq/#4-rabbitmq-node","title":"4. RabbitMQ node","text":"<p>This node will send the data from the previous node to the <code>iss-position</code> queue in RabbitMQ. If you have created a queue with a different name in RabbitMQ, you can use that queue instead.</p> <ol> <li>First of all, you'll have to enter credentials for the RabbitMQ node. You can find out how to do that here.</li> <li>Enter the name of the queue or topic in the Queue / Topic field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node sends the data from the previous node to the <code>iss-position</code> queue in RabbitMQ.</p> <p></p> <p> Activate workflow for production</p> <p>This example workflow uses the Cron node, which is a Trigger node. You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Cron node.</p>","tags":["Workflow\u00b2","RabbitMQ","Cron","HTTP Request"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.raindrop/","title":"Raindrop","text":"<p>Raindrop is a bookmarking tool that allows you to organize your bookmarks.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.raindrop/#basic-operations","title":"Basic Operations","text":"<ul> <li>Bookmark<ul> <li>Create</li> <li>Delete</li> <li>Get</li> <li>Get All</li> <li>Update</li> </ul> </li> <li>Collection<ul> <li>Create</li> <li>Delete</li> <li>Get</li> <li>Get All</li> <li>Update</li> </ul> </li> <li>Tag<ul> <li>Delete</li> <li>Get All</li> </ul> </li> <li>User<ul> <li>Get</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.raindrop/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to create a collection and create, update, and get a bookmark in Raindrop. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Start - Raindrop</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.raindrop/#1-start-node","title":"1. Start node","text":"<p>The Start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.raindrop/#2-raindrop-node-create-collection","title":"2. Raindrop node (create: collection)","text":"<p>This node will create a new collection in Raindrop.</p> <ol> <li>First of all, you'll have to enter credentials for the Raindrop node. You can find out how to do that here.</li> <li>Select 'Create' from the Operation dropdown list.</li> <li>Enter a title in the Title field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node creates a new collection with the title <code>n8n-docs</code>.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.raindrop/#3-raindrop1-node-create-bookmark","title":"3. Raindrop1 node (create: bookmark)","text":"<p>This node will create a new bookmark and add it to the collection that we created in the previous node.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Bookmark' from the Resource dropdown list.</li> <li>Select 'Create' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Collection field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; _id. You can also add the following expression: <code>{{$json[\"_id\"]}}</code>.</li> <li>Enter <code>https://docs.n8n.io</code> in the Link field.</li> <li>Click on Add Field and select 'Title' from the dropdown list.</li> <li>Enter <code>Documentation</code> in the Title field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node creates a new bookmark with the title <code>Documentation</code>.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.raindrop/#4-raindrop2-node-update-bookmark","title":"4. Raindrop2 node (update: bookmark)","text":"<p>This node will update the bookmark that we created in the previous node.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Bookmark' from the Resource dropdown list.</li> <li>Select 'Update' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Bookmark ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; _id. You can also add the following expression: <code>{{$json[\"_id\"]}}</code>.</li> <li>Click on Add Field and select 'Title' from the dropdown list.</li> <li>Enter <code>n8n Documentation</code> in the Title field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node updates the title of the bookmark that we created in the previous node.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.raindrop/#5-raindrop3-node-get-bookmark","title":"5. Raindrop3 node (get: bookmark)","text":"<p>This node will return the information about the bookmark that we created earlier.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Bookmark' from the Resource dropdown list.</li> <li>Click on the gears icon next to the Bookmark ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; _id. You can also add the following expression: <code>{{$json[\"_id\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns the information on the bookmark that we created earlier.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.reddit/","title":"Reddit","text":"<p>Reddit is a social news aggregation, web content rating, and discussion website.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.reddit/#basic-operations","title":"Basic Operations","text":"<ul> <li>Post<ul> <li>Submit a post to a subreddit</li> <li>Delete a post from a subreddit</li> <li>Get a post from a subreddit</li> <li>Get all posts from a subreddit</li> <li>Search posts in a subreddit or in all of Reddit.</li> </ul> </li> <li>Post Comment<ul> <li>Create a top-level comment in a post</li> <li>Retrieve all comments in a post</li> <li>Remove a comment from a post</li> <li>Write a reply to a comment in a post</li> </ul> </li> <li>Profile<ul> <li>Get</li> </ul> </li> <li>Subreddit<ul> <li>Retrieve background information about a subreddit.</li> <li>Retrieve information about subreddits from all of Reddit.</li> </ul> </li> <li>User<ul> <li>Get</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.reddit/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to create a post a Reddit and add a comment to that post. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Start - Reddit</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.reddit/#1-start-node","title":"1. Start node","text":"<p>The Start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.reddit/#2-reddit-node-create-post","title":"2. Reddit node (create: post)","text":"<p>This node will create a post under the subreddit <code>n8n</code>. If you want to create a post under a different subreddit, enter the name of that subreddit instead.</p> <ol> <li>First of all, you'll have to enter credentials for the Reddit node. You can find out how to do that here.</li> <li>Enter <code>n8n</code> in the Subreddit field.</li> <li>Enter a title in the Title field.</li> <li>Enter the content of the post in the Text field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node creates a new post under the subreddit <code>n8n</code>.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.reddit/#3-reddit1-node-get-post","title":"3. Reddit1 node (get: post)","text":"<p>This node will retrieve the post that we created using the previous node.</p> <ol> <li>Select the credentials you entered in the previous node.</li> <li>Select 'Get' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Subreddit field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Reddit &gt; Parameters &gt; subreddit. You can also add the following expression: <code>{{$node[\"Reddit\"].parameter[\"subreddit\"]}}</code>.</li> <li>Click on the gears icon next to the Post ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$json[\"id\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns the information of the post that we created in the previous node.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.reddit/#4-reddit-node-create-postcomment","title":"4. Reddit node (create: postComment)","text":"<p>This node will add a comment to the post that we created earlier.</p> <ol> <li>Select the credentials you entered in the previous node.</li> <li>Select 'Post Comment' from the Resource dropdown list.</li> <li>Click on the gears icon next to the Post ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$json[\"id\"]}}</code>.</li> <li>Enter your comment in the Comment Text field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node comments on the post that we created earlier.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.redis/","title":"Redis","text":"<p>Redis is an open-source, in-memory data structure store, used as a database, cache and message broker.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.redis/#basic-operations","title":"Basic Operations","text":"<ul> <li>Delete a key from Redis.</li> <li>Get the value of a key from Redis.</li> <li>Returns generic information about the Redis instance.</li> <li>Atomically increments a key by 1. Creates the key if it does not exist.</li> <li>Returns all the keys matching a pattern.</li> <li>Set the value of a key in redis.</li> <li>Publish message to redis channel.</li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.redis/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to get the value of a key in Redis. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - Redis</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.redis/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.redis/#2-redis-node","title":"2. Redis node","text":"<ol> <li>First of all, you'll have to enter credentials for the Redis node. You can find out how to do that here.</li> <li>Select the 'Get' option from the Operation dropdown list.</li> <li>Enter the key for which you want to retrieve the value in the Key field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.rocketchat/","title":"Rocket.Chat","text":"<p>Rocket.Chat is a free and open source team chat collaboration platform that allows users to communicate securely in real-time across devices.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.rocketchat/#basic-operations","title":"Basic Operations","text":"<ul> <li>Chat<ul> <li>Post a message to a channel or a direct message</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.rocketchat/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to post a message to a channel in Rocket.Chat. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - Rocket.Chat</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.rocketchat/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.rocketchat/#2-rocketchat-node","title":"2. Rocket.Chat node","text":"<ol> <li>First of all, you'll have to enter credentials for the Rocket.Chat node. You can find out how to do that here.</li> <li>Enter the name of the channel where you want to post the message in the Channel field. For example, <code>#general</code>.</li> <li>Enter the message in the Text field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.rundeck/","title":"Rundeck","text":"<p>Rundeck is an open-source runbook automation for incident management, business continuity, and self-service operations.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.rundeck/#basic-operations","title":"Basic Operations","text":"<p>Job - Execute a job - Get metadata of a job</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.rundeck/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to execute a job on Rundeck. You can also find the workflow on this website. This example usage workflow uses the following two nodes.</p> <ul> <li>Start</li> <li>Rundeck</li> </ul> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.rundeck/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.rundeck/#2-rundeck-node","title":"2. Rundeck node","text":"<ol> <li>First of all, you'll have to enter credentials for the Rundeck node. You can find out how to do that here.</li> <li>Enter your Rundeck job ID in the Job Id field. You can find instructions on how to obtain the job ID in the FAQs below.</li> <li>Click on Execute Node to run the workflow.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.rundeck/#faqs","title":"FAQs","text":""},{"location":"workflow/integrations/nodes/workflow-nodes-base.rundeck/#how-do-i-find-the-job-id","title":"How do I find the Job ID?","text":"<ol> <li>Access your Rundeck dashboard.</li> <li>Open the project that contains the job you want to use with Workflow\u00b2.</li> <li>In the sidebar, click on 'JOBS'.</li> <li>Under 'All Jobs', click on the name of the job you want to use with Workflow\u00b2.</li> <li>In the top left corner, under the name of the job, copy the string that is displayed in smaller font below the job name. This is your job ID.</li> <li>Paste this job ID in the <code>Job Id</code> field in Workflow\u00b2.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.s3/","title":"S3","text":"<p>S3 is an object storage service that allows you to block public access to all of your objects at the bucket or the account level with S3 Block Public Access. S3 maintains compliance programs, such as PCI-DSS, HIPAA/HITECH, FedRAMP, EU Data Protection Directive, and FISMA, to help you meet regulatory requirements.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.s3/#basic-operations","title":"Basic Operations","text":"<ul> <li>Bucket<ul> <li>Create a bucket</li> <li>Delete a bucket</li> <li>Get all buckets</li> <li>Search within a bucket</li> </ul> </li> <li>File<ul> <li>Copy a file</li> <li>Delete a file</li> <li>Download a file</li> <li>Get all files</li> <li>Upload a file</li> </ul> </li> <li>Folder<ul> <li>Create a folder</li> <li>Delete a folder</li> <li>Get all folders</li> </ul> </li> </ul> <p>Note: To attach a file for upload, you will need to use an additional node such as the Read Binary File node or the HTTP Request node to pass the file as a data property.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.s3/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to upload a file to an S3 compatible server and get a list of all the files in a bucket using the S3 node. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Start - HTTP Request - S3</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.s3/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.s3/#2-http-request-node-get","title":"2. HTTP Request node (GET)","text":"<ol> <li>Enter the URL of the file in the URL field.</li> <li>Select 'File' from the Response Format field.</li> <li>Click on Execute Node to run the node.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.s3/#3-s3-node-upload-file","title":"3. S3 node (upload: file)","text":"<ol> <li>First of all, you'll have to enter credentials for the S3 node. You can find out how to do that here.</li> <li>Select 'Upload' from the Operation dropdown list.</li> <li>Enter the bucket name in the Bucket Name field.</li> <li> <p>Click on the gears icon next to the File Name field and click on Add Expression.</p> </li> <li> <p>Select the following in the Variable Selector section: Nodes &gt; HTTP Request &gt; Output Data &gt; Binary &gt; data &gt; fileName. You can also add the following expression: <code>{{$node[\"HTTP Request\"].binary.data.fileName}}</code></p> </li> <li>Click on Execute Node to run the node.</li> </ol> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.s3/#4-s-node-getall-file","title":"4. S node (getAll: file)","text":"<ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Get All' from the Operation dropdown list.</li> <li>Enter the bucket name in the Bucket Name field.</li> <li>Toggle Return All to true.</li> <li>Click on Execute Node to run the node.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.s3/#faqs","title":"FAQs","text":""},{"location":"workflow/integrations/nodes/workflow-nodes-base.s3/#setting-file-permissions-in-wasabi","title":"Setting file permissions in Wasabi","text":"<p>When uploading files to Wasabi, permissions for the files must be set using the ACL dropdown and not the toggles.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.salesforce/","title":"Salesforce","text":"<p>Salesforce is a cloud-based software company. It provides customer relationship management service and also sells a complementary suite of enterprise applications focused on customer service, marketing automation, analytics, and application development.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.salesforce/#basic-operations","title":"Basic Operations","text":"<ul> <li>Account<ul> <li>Add note to an account</li> <li>Create an account</li> <li>Create a new account, or update the current one if it already exists (upsert)</li> <li>Get an account</li> <li>Get all accounts</li> <li>Returns an overview of account's metadata.</li> <li>Delete an account</li> <li>Update an account</li> </ul> </li> <li>Attachment<ul> <li>Create a attachment</li> <li>Delete a attachment</li> <li>Get a attachment</li> <li>Get all attachments</li> <li>Returns an overview of attachment's metadata.</li> <li>Update a attachment</li> </ul> </li> <li>Case<ul> <li>Add a comment to a case</li> <li>Create a case</li> <li>Get a case</li> <li>Get all cases</li> <li>Returns an overview of case's metadata</li> <li>Delete a case</li> <li>Update a case</li> </ul> </li> <li>Contact<ul> <li>Add lead to a campaign</li> <li>Add note to a contact</li> <li>Create a contact</li> <li>Create a new contact, or update the current one if it already exists (upsert)</li> <li>Delete a contact</li> <li>Get a contact</li> <li>Returns an overview of contact's metadata</li> <li>Get all contacts</li> <li>Update a contact</li> </ul> </li> <li>Custom Object<ul> <li>Create a custom object record</li> <li>Create a new record, or update the current one if it already exists (upsert)</li> <li>Get a custom object record</li> <li>Get all custom object records</li> <li>Delete a custom object record</li> <li>Update a custom object record</li> </ul> </li> <li>Document<ul> <li>Upload a document</li> </ul> </li> <li>Flow<ul> <li>Get all flows</li> <li>Invoke a flow</li> </ul> </li> <li>Lead<ul> <li>Add lead to a campaign</li> <li>Add note to a lead</li> <li>Create a lead</li> <li>Create a new lead, or update the current one if it already exists (upsert)</li> <li>Delete a lead</li> <li>Get a lead</li> <li>Get all leads</li> <li>Returns an overview of Lead's metadata</li> <li>Update a lead</li> </ul> </li> <li>Opportunity<ul> <li>Add note to an opportunity</li> <li>Create an opportunity</li> <li>Create a new opportunity, or update the current one if it already exists (upsert)</li> <li>Delete an opportunity</li> <li>Get an opportunity</li> <li>Get all opportunities</li> <li>Returns an overview of opportunity's metadata</li> <li>Update an opportunity</li> </ul> </li> <li>Search<ul> <li>Execute a SOQL query that returns all the results in a single response</li> </ul> </li> <li>Task<ul> <li>Create a task</li> <li>Delete a task</li> <li>Get a task</li> <li>Get all tasks</li> <li>Returns an overview of task's metadata</li> <li>Update a task</li> </ul> </li> <li>User<ul> <li>Get a user</li> <li>Get all users</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.salesforce/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to create, update, and add a note to a lead in Salesforce. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Start - Salesforce</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.salesforce/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.salesforce/#2-salesforce-node-create-lead","title":"2. Salesforce node (create: lead)","text":"<ol> <li>First of all, you'll have to enter credentials for the Salesforce node. You can find out how to do that here.</li> <li>Enter the name of the company in the Company field.</li> <li>Enter the last name of the contact person in the Last Name field.</li> <li>Click on Execute Node to run the node.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.salesforce/#3-salesforce1-node-update-lead","title":"3. Salesforce1 node (update: lead)","text":"<ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Update' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Lead ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Salesforce &gt; Output Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$node[\"Salesforce\"].json[\"id\"]}}</code></li> <li>Click on the Add Field button and select 'City' from the dropdown list.</li> <li>Enter a city name in the City field.</li> <li>Click on Execute Node to run the node.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.salesforce/#4-salesforce2-node-addnote-lead","title":"4. Salesforce2 node (addNote: lead)","text":"<ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select Add Note from the Operation dropdown list.</li> <li>Click on the gears icon next to the Lead ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Salesforce &gt; Output Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$node[\"Salesforce\"].json[\"id\"]}}</code></li> <li>Enter the note in the Title field.</li> <li>Click on Execute Node to run the node.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.salesmate/","title":"Salesmate","text":"<p>Salesmate is a cloud-based CRM solution that caters to small and midsize businesses across various industries. Key features include contact management, sales pipeline management, email marketing and internal chat and phone integration.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.salesmate/#basic-operations","title":"Basic Operations","text":"<ul> <li>Activity<ul> <li>Create an activity</li> <li>Delete an activity</li> <li>Get an activity</li> <li>Get all companies</li> <li>Update an activity</li> </ul> </li> <li>Company<ul> <li>Create a company</li> <li>Delete a company</li> <li>Get a company</li> <li>Get all companies</li> <li>Update a company</li> </ul> </li> <li>Deal<ul> <li>Create a deal</li> <li>Delete a deal</li> <li>Get a deal</li> <li>Get all deals</li> <li>Update a deal</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.salesmate/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to create a company in Salesmate. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - Salesmate</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.salesmate/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.salesmate/#2-salesmate-node","title":"2. Salesmate node","text":"<ol> <li>First of all, you'll have to enter credentials for the Salesmate node. You can find out how to do that here.</li> <li>Select the 'Company' option from the Resource dropdown list.</li> <li>Enter the name of the company in the Name field.</li> <li>Select the owner from the Owner dropdown list.</li> <li>Click on Execute Node to run the workflow.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.seaTable/","title":"SeaTable","text":"<p>SeaTable is a collaborative database application with a spreadsheet interface.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.seaTable/#basic-operations","title":"Basic operations","text":"<ul> <li>Row<ul> <li>Create</li> <li>Delete</li> <li>Get</li> <li>Get All</li> <li>Update</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.securityScorecard/","title":"SecurityScorecard","text":"<p>SecurityScorecard enables organizations to prove and maintain compliance with leading regulations and standards mandates that include PCI, NIST, SOX, GDPR, and many others.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.securityScorecard/#basic-operations","title":"Basic Operations","text":"<ul> <li>Company<ul> <li>Get company factor scores and issue counts</li> <li>Get company's historical factor scores</li> <li>Get company's historical scores</li> <li>Get company information and summary of their scorecard</li> <li>Get company's score improvement plan</li> </ul> </li> <li>Industry<ul> <li>Get Factor Scores</li> <li>Get Historical Factor Scores</li> <li>Get Score</li> </ul> </li> <li>Invite<ul> <li>Create an invite for a company/user</li> </ul> </li> <li>Portfolio<ul> <li>Create a portfolio</li> <li>Delete a portfolio</li> <li>Get all portfolios</li> <li>Update a portfolio</li> </ul> </li> <li>Portfolio Company<ul> <li>Add a company to portfolio</li> <li>Get all companies in a portfolio</li> <li>Remove a company from portfolio</li> </ul> </li> <li>Report<ul> <li>Download a generated report</li> <li>Generate a report</li> <li>Get list of recently generated report</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.securityScorecard/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to generate, retrieve, and download a report using the SecurityScorecard node. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Start - SecurityScorecard</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.securityScorecard/#1-start-node","title":"1. Start node","text":"<p>The Start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.securityScorecard/#2-securityscorecard-node-generate-report","title":"2. SecurityScorecard node (generate: report)","text":"<p>This node will generate a full scorecard report for a company that we specify.</p> <ol> <li>First of all, you'll have to enter credentials for the SecurityScorecard node. You can find out how to do that here.</li> <li>Select 'Report' from the Resource dropdown list.</li> <li>Select 'Generate' from the Operation dropdown list.</li> <li>Select 'Full Scorecard' from the Report dropdown list.</li> <li>Enter the domain of the company in the Scorecard Identifier field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node generates a full scorecard report of <code>n8n.io</code>.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.securityScorecard/#3-securityscorecard1-node-getall-report","title":"3. SecurityScorecard1 node (getAll: report)","text":"<p>This node will return a report from SecurityScorecard.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Report' from the Resource dropdown list.</li> <li>Select 'Get All' from the Operation dropdown list.</li> <li>Enter <code>1</code> in the Limit field. By setting it to one, the node will return a single report.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns a report from SecurityScroecard.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.securityScorecard/#4-securityscorecard2-node-download-report","title":"4. SecurityScorecard2 node (download: report)","text":"<p>This node will download the report that got returned by the previous node.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Report' from the Resource dropdown list.</li> <li>Select 'Download' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Report URL field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; download_url. You can also add the following expression: <code>{{$json[\"download_url\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node downloads the report that was returned by the previous node.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.segment/","title":"Segment","text":"<p>Segment is a customer data platform (CDP) that helps you collect, clean, and control your customer data.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.segment/#basic-operations","title":"Basic Operations","text":"<ul> <li>Group<ul> <li>Add a user to a group</li> </ul> </li> <li>Identify<ul> <li>Create an identity</li> </ul> </li> <li>Track<ul> <li>Record the actions your users perform. Every action triggers an event, which can also have associated properties.</li> <li>Record page views on your website, along with optional extra information about the page being viewed.</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.segment/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to track an event in Segment. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - Segment</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.segment/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.segment/#2-segment-node","title":"2. Segment node","text":"<ol> <li>First of all, you'll have to enter credentials for the Segment node. You can find out how to do that here.</li> <li>Select the 'Track' option from the Resource dropdown list.</li> <li>Enter the ID of the user in the User ID field.</li> <li>Enter the name of event in the Event field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.sendGrid/","title":"SendGrid","text":"<p>SendGrid provides a cloud-based service that assists businesses with email delivery.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.sendGrid/#basic-operations","title":"Basic Operations","text":"<ul> <li>Contact<ul> <li>Create/update a contact</li> <li>Delete a contact</li> <li>Get a contact by ID</li> <li>Get all contacts</li> </ul> </li> <li>List<ul> <li>Create a list</li> <li>Delete a list</li> <li>Get a list</li> <li>Get all lists</li> <li>Update a list</li> </ul> </li> <li>Mail<ul> <li>Send an email.</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.sendGrid/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to create, update and get a contact using the SendGrid node. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Start - SendGrid</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.sendGrid/#1-start-node","title":"1. Start node","text":"<p>The Start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.sendGrid/#2-sendgrid-node-upsertcontact","title":"2. SendGrid node (upsert:contact)","text":"<p>This node will create a contact in SendGrid.</p> <ol> <li>First of all, you'll have to enter credentials for the SendGrid node. You can find out how to do that here.</li> <li>Select 'Contact' from the Resource dropdown list.</li> <li>Select 'Create/Update' from the Operation dropdown list.</li> <li>Enter an email address in the Email field.</li> <li>Click on the Add Field button and select 'First Name'.</li> <li>Enter the name of the contact in the First Name field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node creates contact with their first name.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.sendGrid/#3-sendgrid1-node-upsertcontact","title":"3. SendGrid1 node (upsert:contact)","text":"<p>This node will update the contact that we created in the previous node.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Contact' from the Resource dropdown list.</li> <li>Select 'Create/Update' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Email field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; SendGrid &gt; Parameters &gt; email. You can also add the following expression: <code>{{$node[\"SendGrid\"].parameter[\"email\"]}}</code>.</li> <li>Click on the Add Field button and select 'Last Name'.</li> <li>Enter the last name of the contact in the Last Name field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node updates the contact that we created in the previous node.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.sendGrid/#4-sendgrid2-node-getcontact","title":"4. SendGrid2 node (get:contact)","text":"<p>This node will return the information of the contact that we created using the SendGrid node.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Contact' from the Resource dropdown list.</li> <li>Select 'Get' from the Operation dropdown list.</li> <li>Select 'Email' from the By dropdown list.</li> <li>Click on the gears icon next to the Email field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; SendGrid &gt; Parameters &gt; email. You can also add the following expression: <code>{{$node[\"SendGrid\"].parameter[\"email\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns the information of the contact that we created using the SendGrid node.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.sendy/","title":"Sendy","text":"<p>Sendy is a self-hosted email newsletter application that lets you send trackable emails via AWS SES.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.sendy/#basic-operations","title":"Basic Operations","text":"<ul> <li>Campaign<ul> <li>Create a campaign</li> </ul> </li> <li>Subscriber<ul> <li>Add a subscriber to a list</li> <li>Count subscribers</li> <li>Delete a subscriber from a list</li> <li>Unsubscribe user from a list</li> <li>Get the status of subscriber</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.sendy/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to add a subscriber to a list and create and send a campaign using the Sendy node. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Start - Sendy</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.sendy/#1-start-node","title":"1. Start node","text":"<p>The Start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.sendy/#2-sendy-node-add-subscriber","title":"2. Sendy node (add: subscriber)","text":"<p>This node will add a subscriber to a list in Sendy. If you don't already have a list in Sendy, make sure to create one.</p> <ol> <li>First of all, you'll have to enter credentials for the Sendy node. You can find out how to do that here.</li> <li>Enter the subscriber's email address in the Email field.</li> <li>In your Sendy dashboard, click on 'View all lists' and copy the ID of the list to which you want to add the subscriber. Paste this list ID in the List ID field in Workflow\u00b2.</li> <li>Click on the Add Field button and select 'Name'.</li> <li>Enter the name of the subscriber in the Name field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node adds a subscriber with their name to the list that we specify.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.sendy/#3-sendy1-node-create-campaign","title":"3. Sendy1 node (create: campaign)","text":"<p>This node will create a campaign with the title 'Welcome to n8n' and send it to the subscribers of the list that we specify.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Campaign' from the Resource dropdown list.</li> <li>Enter the name of the sender in the From Name field.</li> <li>Enter the email address of the sender in the From Email field.</li> <li>Enter the email address where the subscribers can reply to in the Reply To field.</li> <li>Enter the title of the campaign in the Title field.</li> <li>Enter the subject of the email in the Subject field.</li> <li>Enter the HTML snippet of the email campaign in the HTML Text field.</li> <li>Toggle Send Campaign to true.</li> <li>Click on the Add Field button and select 'List IDs'.</li> <li>Click on the gears icon next to the List IDs field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Sendy &gt; Parameters &gt; listId. You can also add the following expression: <code>{{$node[\"Sendy\"].parameter[\"listId\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node creates the campaign with the title <code>Welcome to n8n</code> and sends it to the list that we specify.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.sentryIo/","title":"Sentry.io","text":"<p>Sentry.io is a service that helps you monitor and fix crashes in realtime. Sentry\u2019s platform helps every developer diagnose, fix, and optimize the performance of their code.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.sentryIo/#basic-operations","title":"Basic Operations","text":"<ul> <li>Event<ul> <li>Get event by ID</li> <li>Get all events</li> </ul> </li> <li>Issue<ul> <li>Delete an issue</li> <li>Get issue by ID</li> <li>Get all issues</li> <li>Update an issue</li> </ul> </li> <li>Project<ul> <li>Create a new project</li> <li>Delete a project</li> <li>Get project by ID</li> <li>Get all projects</li> <li>Update a project</li> </ul> </li> <li>Release<ul> <li>Create a release</li> <li>Delete a release</li> <li>Get release by version identifier</li> <li>Get all releases</li> <li>Update a release</li> </ul> </li> <li>Organization<ul> <li>Create an organization</li> <li>Get organization by slug</li> <li>Get all organizations</li> <li>Update an organization</li> </ul> </li> <li>Team<ul> <li>Create a new team</li> <li>Delete a team</li> <li>Get team by slug</li> <li>Get all teams</li> <li>Update a team</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.sentryIo/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to create a release and get all releases using the Sentry.io node. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Start - Sentry.io</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.sentryIo/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.sentryIo/#2-sentryio-node-create-release","title":"2. Sentry.io node (create: release)","text":"<ol> <li>First of all, you'll have to enter credentials for the Sentry.io node. You can find out how to do that here.</li> <li>Select 'Release' from the Resource dropdown list.</li> <li>Select 'Create' from the Operation dropdown list.</li> <li>Select the organization from the Organization Slug dropdown list.</li> <li>Enter the version in the Version field.</li> <li>Enter the URL that points to the release in the URL field.</li> <li>Select the project from Projects dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.sentryIo/#2-sentryio-node-getall-release","title":"2. Sentry.io node (getAll: release)","text":"<ol> <li>Select the credentials that you entered in the previous Sentry.io node.</li> <li>Select 'Release' from the Resource dropdown list.</li> <li>Select 'Get All' from the Operation dropdown list.</li> <li>Select the organization from the Organization Slug dropdown list.</li> <li>Toggle Return All to true.</li> <li>Click on Execute Node to run the node.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.serviceNow/","title":"ServiceNow","text":"<p>ServiceNow is a cloud computing platform to help companies manage digital workflows for their operations.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.serviceNow/#basic-operations","title":"Basic operations","text":"<ul> <li>Business Service<ul> <li>Get All</li> </ul> </li> <li>Configuration Items<ul> <li>Get All</li> </ul> </li> <li>Department<ul> <li>Get All</li> </ul> </li> <li>Dictionary<ul> <li>Get All</li> </ul> </li> <li>Incident<ul> <li>Create</li> <li>Delete</li> <li>Get</li> <li>Get All</li> <li>Update</li> </ul> </li> <li>Table Record<ul> <li>Create</li> <li>Delete</li> <li>Get</li> <li>Get All</li> <li>Update</li> </ul> </li> <li>User<ul> <li>Create</li> <li>Delete</li> <li>Get</li> <li>Get All</li> <li>Update</li> </ul> </li> <li>User Group<ul> <li>Get All</li> </ul> </li> <li>User Role<ul> <li>Get All</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.serviceNow/#example-usage","title":"Example usage","text":"<p>This workflow allows you to get the 50 most recent incidents and view only the desired fields. This example usage workflow uses the following nodes:</p> <ul> <li>Start</li> <li>ServiceNow</li> </ul> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.serviceNow/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.serviceNow/#2-servicenow-node","title":"2. ServiceNow node","text":"<ol> <li>First enter credentials, you can find out how to do that here.</li> <li>Select Incident from the Resource dropdown.</li> <li>Select Get All from the Operation dropdown.</li> <li>Click Add Option and select Fields.</li> <li>Use the dropdown to select the fields you want to view, here we used <code>Close code</code>, <code>Severity</code>, <code>Sys ID</code>, and <code>Resolve time</code>.</li> <li>Click on Execute Node to run the workflow.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.shopify/","title":"Shopify","text":"<p>Shopify is an e-commerce platform that allows users to set up an online store and sell their products.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.shopify/#basic-operations","title":"Basic Operations","text":"<ul> <li>Order<ul> <li>Create an order</li> <li>Delete an order</li> <li>Get an order</li> <li>Get all orders</li> <li>Update an order</li> </ul> </li> <li>Product<ul> <li>Create a product</li> <li>Delete a product</li> <li>Get a product</li> <li>Get all products</li> <li>Update a product</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.shopify/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to get all orders from Shopify. You can also find the workflow on the website. This example usage workflow uses the following two nodes.</p> <ul> <li>Start</li> <li>Shopify</li> </ul> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.shopify/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.shopify/#2-shopify-node","title":"2. Shopify node","text":"<ol> <li>First of all, you'll have to enter credentials for the Shopify node. You can find out how to do that here.</li> <li>Select 'Get All' from the Operation dropdown list.</li> <li>Click on Execute Node to run the workflow.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.signl4/","title":"SIGNL4","text":"<p>SIGNL4 is a plug-and-play cloud solution produced by Derdack. It automatically notifies teams on their mobile devices in case of critical events.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.signl4/#basic-operations","title":"Basic Operations","text":"<ul> <li>Alert<ul> <li>Send an alert</li> <li>Resolve an alert</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.signl4/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to send an alert on SIGNL4. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - SIGNL4</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.signl4/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.signl4/#2-signl4-node","title":"2. SIGNL4 node","text":"<ol> <li>First of all, you'll have to enter credentials for the SIGNL4 node. You can find out how to do that here.</li> <li>Enter a message in the Message field.</li> <li>Click on the Add Field button and select 'Title'.</li> <li>Enter a title in the Title field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.slack/","title":"Slack","text":"<p>Slack is a business communication platform offering many IRC-style features, including persistent chat rooms (channels), private groups, and direct messaging.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.slack/#basic-operations","title":"Basic Operations","text":"<ul> <li>Channel<ul> <li>Archives a conversation.</li> <li>Closes a direct message or multi-person direct message.</li> <li>Initiates a public or private channel-based conversation</li> <li>Get information about a channel.</li> <li>Get all channels in a Slack team.</li> <li>Get a conversation's history of messages and events.</li> <li>Invite a user to a channel</li> <li>Joins an existing conversation.</li> <li>Removes a user from a channel.</li> <li>Leaves a conversation.</li> <li>List members of a conversation.</li> <li>Opens or resumes a direct message or multi-person direct message.</li> <li>Renames a conversation.</li> <li>Get a thread of messages posted to a channel</li> <li>Sets the purpose for a conversation.</li> <li>Sets the topic for a conversation.</li> <li>Unarchives a conversation.</li> </ul> </li> <li>File<ul> <li>Get a file info</li> <li>Get &amp; filters team files.</li> <li>Create or upload an existing file.</li> </ul> </li> <li>Message<ul> <li>Deletes a message</li> <li>Get Permanent Link of a message</li> <li>Post a message into a channel</li> <li>Post an ephemeral message to a user in channel</li> <li>Updates a message</li> </ul> </li> <li>Reaction<ul> <li>Adds a reaction to a message</li> <li>Get the reactions of a message</li> <li>Remove a reaction of a message</li> </ul> </li> <li>Star<ul> <li>Add a star to an item.</li> <li>Delete a star from an item.</li> <li>Get all stars of autenticated user.</li> </ul> </li> <li>User<ul> <li>Get information about a user</li> <li>Get online status of a user</li> </ul> </li> <li>User Group<ul> <li>Create a user group</li> <li>Disable a user group</li> <li>Enable a user group</li> <li>Get all user groups</li> <li>Update a user group</li> </ul> </li> <li>User Profile<ul> <li>Get your user's profile</li> <li>Update user's profile</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.slack/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to create a channel, invite users to the channel, post a message, and upload a file to the channel. You can also find the workflow on Workflow\u00b2.io This example usage workflow uses the following nodes. - Start - Slack - HTTP Request</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.slack/#1-start-node","title":"1. Start node","text":"<p>The Start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.slack/#2-slack-node-create-channel","title":"2. Slack node (create: channel)","text":"<p>This node will create a new channel in your Slack workspace. This operation requires the <code>channel:manage</code> scope. Add this scope under the Bot Token Scopes section on Slack. You can refer to the FAQs to learn how to add scopes.</p> <ol> <li>Select 'Access Token' from the Authentication dropdown list.</li> <li>You'll have to enter credentials for the Slack node. You can find out how to enter credentials for this node here.</li> <li>Select 'Channel' from the Resource dropdown list.</li> <li>Enter a channel name in the Channel field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that node creates a new channel in Slack.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.slack/#3-slack1-node-invite-channel","title":"3. Slack1 node (invite: channel)","text":"<p>This node will invite a member to the channel that we created in the previous node. This operation requires the <code>channel:read</code> scope. Add this scope under the Bot Token Scopes section on Slack.</p> <ol> <li>Select 'Access Token' from the Authentication dropdown list.</li> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Channel' from the Resource dropdown list.</li> <li>Select 'Invite' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Channel field click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Slack &gt; Output Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$node[\"Slack\"].json[\"id\"]}}</code>.</li> <li>Select the users from the User IDs dropdown list. The users you select in this field will be added to the channel.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that node invites the user to the channel we created using the previous node.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.slack/#4-slack2-node-post-message","title":"4. Slack2 node (post: message)","text":"<p>This node will post a message in the channel with an attachment.</p> <ol> <li>Select 'Access Token' from the Authentication dropdown list.</li> <li>Select the credentials that you entered in the previous node.</li> <li>Click on the gears icon next to the Channel field click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Slack &gt; Output Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$node[\"Slack\"].json[\"id\"]}}</code>.</li> <li>Enter a message in the Text field.</li> <li>Toggle As User to <code>true</code>. This option allows you to post a message as a bot.</li> <li>Click on the Add attachment button.</li> <li>Select 'Image URL' from the Add attachment item dropdown list.</li> <li>Enter the URL of an image in the Image URL field.</li> <li>Select 'Title' from the Add attachment item dropdown list.</li> <li>Enter a title in the Title field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that node sends a message with an attachment to the channel that we created in the previous node.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.slack/#5-http-request-node-get","title":"5. HTTP Request node (GET)","text":"<p>This node will fetch a file from a URL. You can also use the Read Binary File node to read a file from the path you specify.</p> <ol> <li>Enter the URL of a file in the URL field.</li> <li>Select 'File' from the Response Format dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the HTTP Request node fetches the file from the URL. This file gets passed on as binary data to the next node in the workflow.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.slack/#6-slack3-node-upload-file","title":"6. Slack3 node (upload: file)","text":"<p>This node will upload the file that we got from the previous node to a channel we specify.</p> <ol> <li>Select 'Access Token' from the Authentication dropdown list.</li> <li>Select the credentials that you entered in the previous Slack node.</li> <li>Select 'File' from Resource dropdown list.</li> <li>Select 'Upload' from the Operation dropdown list.</li> <li>Toggle Binary Data to true.</li> <li>Click on Add options and select 'Channels'.</li> <li>Select the channel from the Channels dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node uploads the file to the channel that we created earlier.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.slack/#faqs","title":"FAQs","text":""},{"location":"workflow/integrations/nodes/workflow-nodes-base.slack/#how-to-create-a-private-channel","title":"How to create a private channel?","text":"<p>To create a private channel, follow the steps mentioned below. 1. Select 'Channel' from the Resource dropdown list. 2. Select 'Create' from the Operation dropdown list. 3. Click on the Add Field button. 4. Toggle Is Private to <code>true</code>.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.slack/#how-to-add-oauth-scopes-to-a-slack-app","title":"How to add OAuth Scopes to a Slack app?","text":"<p>Your app needs appropriate scopes and permissions to perform actions. For example, if you want to create a new channel, your app requires the <code>channel:manage</code> scope. To add scopes and permissions, follow the steps mentioned below. 1. Navigate to the Slack App dashboard page and select your app. 2. Click on 'OAuth &amp; Permissions' under the Feature section on the left sidebar. 3. Scroll down to the Scopes section. 4. If you're building a bot, click on Add an OAuth Scope under the Bot Token Scopes. 5. Select the permissions you want to give to your bot from the dropdown list. 6. If you want the app to access user data and act on behalf of users that authorize them, add scopes under the User Token Scopes. 7. When you add new scopes, Slack will ask you to reinstall the app. Click on 'reinstall your app' on the top of the page and reinstall the app.</p> <p>You can refer to the official documentation on Scopes and permissions to learn more.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.sms77/","title":"sms77","text":"<p>sms77 is a full service messaging provider that helps improve communication with a powerful API and comprehensive products like Voice, SMS, and Text2Speech.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.sms77/#basic-operations","title":"Basic Operations","text":"<ul> <li>SMS<ul> <li>Send SMS</li> </ul> </li> <li>Voice Call<ul> <li>Converts text to voice and calls a given number</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.sms77/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to send an SMS to a specified phone number from any phone number. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - sms77</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.sms77/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.sms77/#2-sms77-node","title":"2. sms77 node","text":"<ol> <li>First of all, you'll have to enter credentials for the sms77 node. You can find out how to do that here.</li> <li>Enter the phone number from which you'll be sending the message in the From field.</li> <li>Enter the phone number to which you'll be sending the message in the To field.</li> <li>Enter you message in the Message field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.snowflake/","title":"Snowflake","text":"<p>Snowflake is a cloud data platform that provides a data warehouse-as-a-service designed for the cloud.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.snowflake/#basic-operations","title":"Basic Operations","text":"<ul> <li>Execute an SQL query.</li> <li>Insert rows in database.</li> <li>Update rows in database.</li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.snowflake/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to create a table, insert, and update data in a table in Snowflake. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Start - Set - Snowflake</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.snowflake/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.snowflake/#2-snowflake-node-execute-query","title":"2. Snowflake node (Execute Query)","text":"<p>This node will create a table named <code>docs</code> with <code>id</code> and <code>name</code> columns.</p> <ol> <li>First of all, you'll have to enter credentials for the Snowflake node. You can find out how to do that here.</li> <li>Select 'Execute Query' from the Operation dropdown list.</li> <li>Enter the following SQL query in the Query field: <code>CREATE TABLE docs (id INT, name STRING);</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node creates a table named <code>docs</code> in Snowflake.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.snowflake/#3-set-node","title":"3. Set node","text":"<p>We will use the Set node to set the values for the id and name columns for a new record.</p> <ol> <li>Click on the Add Value button and select 'Number' from the dropdown list.</li> <li>Enter <code>id</code> in the Name field.</li> <li>Enter an id in the Value field.</li> <li>Click on the Add Value button and select 'String' from the dropdown list.</li> <li>Enter <code>name</code> in the Name field.</li> <li>Enter the value for the name in the Value field.</li> <li>Toggle Keep Only Set to <code>true</code>. We set this option to true to ensure that only the data that we have set in this node get passed on to the next nodes in the workflow.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node sets the value for <code>id</code> and <code>name</code>.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.snowflake/#4-snowflake1-node-insert","title":"4. Snowflake1 node (Insert)","text":"<p>This node will insert the data that we set in the previous node into the <code>docs</code> table in Snowflake.</p> <ol> <li>Select the credentials that you entered in the previous Snowflake node.</li> <li>Enter <code>docs</code> in the Table field.</li> <li>Enter <code>id, name</code> in the Columns field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node inserts the data in the table that we created using the Snowflake node.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.snowflake/#5-set1-node","title":"5. Set1 node","text":"<p>We will use the Set node to ensure that only the data that we set in this node gets passed on to the next nodes in the workflow. We will set the value of <code>name</code> in this node.</p> <ol> <li>Click on the Add Value button and select 'Number' from the dropdown list.</li> <li>Enter <code>id</code> in the Name field.</li> <li>Enter <code>1</code> in the Value field.</li> <li>Click on the Add Value button and select 'String' from the dropdown list.</li> <li>Enter <code>name</code> in the Name field.</li> <li>Enter <code>nodemation</code> in the Value field.</li> <li>Toggle Keep Only Set to <code>true</code>. We set this option to true to ensure that only the data that we have set in this node get passed on to the next nodes in the workflow.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node sets the value of <code>name</code>. This value is passed to the next node in the workflow.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.snowflake/#6-snowflake2-node-update","title":"6. Snowflake2 node (Update)","text":"<p>This node will update the value of the <code>name</code> column for the id <code>1</code>.</p> <ol> <li>Select the credentials that you entered in the previous Snowflake node.</li> <li>Select 'Update' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Table field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Snowflake1 &gt; Parameters &gt; table. You can also add the following expression: <code>{{$node[\"Snowflake1\"].parameter[\"table\"]}}</code>.</li> <li>Enter <code>name</code> in the Columns field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node updates the value of the name field for the record with id <code>1</code>.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.splunk/","title":"Splunk","text":"<p>Splunk produces software for searching, monitoring, and analyzing machine-generated data via a Web-style interface. It indexes and correlates information in a container that makes it searchable, and makes it possible to generate alerts, reports and visualizations.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.splunk/#basic-operations","title":"Basic Operations","text":"<ul> <li>Fired Alert<ul> <li>Retrieve a fired alerts report</li> </ul> </li> <li>Search Configuration<ul> <li>Delete a search configuration</li> <li>Retrieve a search configuration</li> <li>Retrieve all search configurations</li> </ul> </li> <li>Search Job<ul> <li>Create a search job</li> <li>Delete a search job</li> <li>Retrieve a search job</li> <li>Retrieve all search jobs</li> </ul> </li> <li>Search Result<ul> <li>Retrieve all search results for a search job</li> </ul> </li> <li>User<ul> <li>Create an user</li> <li>Delete an user</li> <li>Retrieve an user</li> <li>Retrieve all users</li> <li>Update an user</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.spontit/","title":"Spontit","text":"<p>Spontit enables you to send push notifications without your app or website. You can create different channels and send push notifications to specific followers.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.spontit/#basic-operations","title":"Basic Operations","text":"<ul> <li>Push<ul> <li>Create a push notification</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.spontit/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to send daily weather updates via a push notification using the Spontit node. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Cron - OpenWeatherMap - Spontit</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.spontit/#1-cron-node","title":"1. Cron node","text":"<p>The Cron node will trigger the workflow daily at 9 AM.</p> <ol> <li>Click on Add Cron Time.</li> <li>Set hours to 9 in the Hour field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the Cron node is configured to trigger the workflow every day at 9 AM.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.spontit/#2-openweathermap-node-current-weather","title":"2. OpenWeatherMap node (Current Weather)","text":"<p>This node will return data about the current weather in Berlin. To get the weather updates for your city, you can enter the name of your city instead.</p> <ol> <li>First of all, you'll have to enter credentials for the OpenWeatherMap node. You can find out how to do that here.</li> <li>Enter <code>berlin</code> in the City field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns data about the current weather in Berlin.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.spontit/#3-spontit-node-create-push","title":"3. Spontit node (create: push)","text":"<p>This node will send a push notification with the weather update.</p> <ol> <li>First of all, you'll have to enter credentials for the Spontit node. You can find out how to do that here.</li> <li>Click on Add Field and select 'Title' from the dropdown list.</li> <li>Enter <code>Today's Weather Update</code> in the Title field.</li> <li> <p>Click on the gears icon next to the Content field and click on Add Expression.</p> </li> <li> <p>Enter the following message in the Expression field: <code>Hey! The temperature outside is {{$node[\"OpenWeatherMap\"].json[\"main\"][\"temp\"]}}\u00b0C.</code>.</p> </li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node sends a push notification with the weather update.</p> <p></p> <p> Activate workflow for production</p> <p>This example workflow uses the Cron node, which is a Trigger node. You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Cron node.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.spotify/","title":"Spotify","text":"<p>Spotify is a music streaming service containing millions of music tracks and podcasts. Spotify allows users to create and manage their own playlists, explore new music through recommendation services, and listen to songs on demand.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","tags":["Workflow\u00b2","Spotify"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.spotify/#basic-operations","title":"Basic Operations","text":"<ul> <li>Album<ul> <li>Get an album by URI or ID.</li> <li>Get a list of new album releases.</li> <li>Get an album's tracks by URI or ID.</li> <li>Search albums by keyword.</li> </ul> </li> <li>Artist<ul> <li>Get an artist by URI or ID.</li> <li>Get an artist's albums by URI or ID.</li> <li>Get an artist's related artists by URI or ID.</li> <li>Get an artist's top tracks by URI or ID.</li> <li>Search artists by keyword.</li> </ul> </li> <li>Library<ul> <li>Get the user's liked tracks.</li> </ul> </li> <li>My Data<ul> <li>Get your followed artists.</li> </ul> </li> <li>Player<ul> <li>Add a song to your queue.</li> <li>Get your currently playing track.</li> <li>Skip to your next track.</li> <li>Pause your music.</li> <li>Skip to your previous song.</li> <li>Get your recently played tracks.</li> <li>Resume playback on the current active device.</li> <li>Set volume on the current active device.</li> <li>Start playing a playlist, artist, or album.</li> </ul> </li> <li>Playlist<ul> <li>Add tracks from a playlist by track and playlist URI or ID.</li> <li>Create a new playlist.</li> <li>Get a playlist by URI or ID.</li> <li>Get a playlist's tracks by URI or ID.</li> <li>Get a user's playlists.</li> <li>Remove tracks from a playlist by track and playlist URI or ID.</li> <li>Search playlists by keyword.</li> </ul> </li> <li>Track<ul> <li>Get a track by its URI or ID.</li> <li>Get audio features for a track by URI or ID.</li> <li>Search tracks by keyword</li> </ul> </li> </ul>","tags":["Workflow\u00b2","Spotify"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.spotify/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to add a song to your queue in Spotify. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - Spotify</p> <p>The final workflow should look like the following image.</p> <p></p>","tags":["Workflow\u00b2","Spotify"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.spotify/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>","tags":["Workflow\u00b2","Spotify"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.spotify/#2-spotify-node","title":"2. Spotify node","text":"<ol> <li>First of all, you'll have to enter credentials for the Spotify node. You can find out how to do that here.</li> <li>Enter the song's URI (or ID) to the Track ID field. The following GIF shows you how to find the Track ID on Spotify's UI.</li> <li>Click on Execute Node to run the workflow.</li> </ol>","tags":["Workflow\u00b2","Spotify"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.stackby%202/","title":"Stackby","text":"<p>Stackby is a real-time database and team collaboration platform.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.stackby%202/#basic-operations","title":"Basic Operations","text":"<ul> <li>Append</li> <li>Delete</li> <li>List</li> <li>Read</li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.stackby%202/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to insert and retrieve data from a table in Stackby. You can also find the workflow on n8n.io. This example usage workflow would use the following nodes. - Start - Set - Stackby</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.stackby%202/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.stackby%202/#2-set-node","title":"2. Set node","text":"<p>We will use the Set node to set the values for the name and id fields for a new record.</p> <ol> <li>Click on the Add Value button and select 'Number' from the dropdown list.</li> <li>Enter <code>ID</code> in the Name field.</li> <li>Enter an id in the Value field.</li> <li>Click on the Add Value button and select 'String' from the dropdown list.</li> <li>Enter <code>Name</code> in the Name field.</li> <li>Enter a name in the Value field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node sets the value for <code>ID</code> and <code>Name</code>.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.stackby%202/#3-stackby-node-append","title":"3. Stackby node (Append)","text":"<p>This node will append the data that we set in the previous node to a table. Create a table like this in your Stackby stack.</p> <p>Copy the string of characters located after <code>/stack/</code> in your Stackby URL. This is your Stack ID. For example, if the URL is <code>https://stackby.com/stack/stabdcat4234324/</code>, the Stack ID will be <code>stabdcat4234324</code>.</p> <ol> <li>First of all, you'll have to enter credentials for the Stackby node. You can find out how to do that here.</li> <li>Paste the Stack ID in the Stack ID field.</li> <li>Enter the name of your table in the Table field.</li> <li>Enter <code>ID, Name</code> in the Columns field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node appends the data that we had set in the previous node.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.stackby%202/#4-stackby1-node-list","title":"4. Stackby1 node (List)","text":"<p>This node will list all the records from a table.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'List' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Stack ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Stackby &gt; Parameters &gt; stackId. You can also add the following expression: <code>{{$node[\"Stackby\"].parameter[\"stackId\"]}}</code>.</li> <li>Click on the gears icon next to the Table field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Stackby &gt; Parameters &gt; table. You can also add the following expression: <code>{{$node[\"Stackby\"].parameter[\"table\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns all the entries that are stored in the table.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.stackby/","title":"Stackby","text":"<p>Stackby is a real-time database and team collaboration platform.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","tags":["Workflow\u00b2","Stackby"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.stackby/#basic-operations","title":"Basic Operations","text":"<ul> <li>Append</li> <li>Delete</li> <li>List</li> <li>Read</li> </ul>","tags":["Workflow\u00b2","Stackby"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.stackby/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to insert and retrieve data from a table in Stackby. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Start - Set - Stackby</p> <p>The final workflow should look like the following image.</p> <p></p>","tags":["Workflow\u00b2","Stackby"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.stackby/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>","tags":["Workflow\u00b2","Stackby"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.stackby/#2-set-node","title":"2. Set node","text":"<p>We will use the Set node to set the values for the name and id fields for a new record.</p> <ol> <li>Click on the Add Value button and select 'Number' from the dropdown list.</li> <li>Enter <code>ID</code> in the Name field.</li> <li>Enter an id in the Value field.</li> <li>Click on the Add Value button and select 'String' from the dropdown list.</li> <li>Enter <code>Name</code> in the Name field.</li> <li>Enter a name in the Value field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node sets the value for <code>ID</code> and <code>Name</code>.</p> <p></p>","tags":["Workflow\u00b2","Stackby"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.stackby/#3-stackby-node-append","title":"3. Stackby node (Append)","text":"<p>This node will append the data that we set in the previous node to a table. Create a table like this in your Stackby stack.</p> <p>Copy the string of characters located after <code>/stack/</code> in your Stackby URL. This is your Stack ID. For example, if the URL is <code>https://stackby.com/stack/stabdcat4234324/</code>, the Stack ID will be <code>stabdcat4234324</code>.</p> <ol> <li>First of all, you'll have to enter credentials for the Stackby node. You can find out how to do that here.</li> <li>Paste the Stack ID in the Stack ID field.</li> <li>Enter the name of your table in the Table field.</li> <li>Enter <code>ID, Name</code> in the Columns field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node appends the data that we had set in the previous node.</p> <p></p>","tags":["Workflow\u00b2","Stackby"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.stackby/#4-stackby1-node-list","title":"4. Stackby1 node (List)","text":"<p>This node will list all the records from a table.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'List' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Stack ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Stackby &gt; Parameters &gt; stackId. You can also add the following expression: <code>{{$node[\"Stackby\"].parameter[\"stackId\"]}}</code>.</li> <li>Click on the gears icon next to the Table field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Stackby &gt; Parameters &gt; table. You can also add the following expression: <code>{{$node[\"Stackby\"].parameter[\"table\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns all the entries that are stored in the table.</p> <p></p>","tags":["Workflow\u00b2","Stackby"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.storyblok%202/","title":"Storyblok","text":"<p>Storyblok is a headless content management system with a visual editor. It provides developers with all the flexibility they need to build reliable and fast websites, while giving content creators with no coding skills the ability to edit content independently of the developer.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.storyblok%202/#basic-operations","title":"Basic Operations","text":""},{"location":"workflow/integrations/nodes/workflow-nodes-base.storyblok%202/#content-api","title":"Content API","text":"<p>Story - Get a story - Get all stories</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.storyblok%202/#management-api","title":"Management API","text":"<p>Story - Delete a story - Get a story - Get all stories - Publish a story - Unpublish a story</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.storyblok%202/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to get all the stories that have the slug starting with <code>release</code> and publish them using the Storyblok node. You can also find the workflow on n8n.io. This example usage workflow would use the following nodes. - Start - Storyblok</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.storyblok%202/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.storyblok%202/#2-storyblok-node-getall-story","title":"2. Storyblok node (getAll: story)","text":"<p>This node will get all the stories that have a slug starting with <code>release</code>.</p> <ol> <li>Select 'Management API' from the Source dropdown list.</li> <li>You'll have to enter credentials for the Storyblok node. You can find out how to do that here.</li> <li>Select 'Get All' from the Operation dropdown list.</li> <li>Select a space from the Space ID dropdown list.</li> <li>Click on the Add Filter button.</li> <li>Enter <code>release</code> in the Starts With field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns all the stories that have a slug starting with <code>release</code>.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.storyblok%202/#3-storyblok1-node-publish-story","title":"3. Storyblok1 node (publish: story)","text":"<p>This node will publish the stories that were returned by the previous node.</p> <ol> <li>Select 'Management API' from the Source dropdown list.</li> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Publish' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Space ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Storyblok &gt; Parameters &gt; space. You can also add the following expression: <code>{{$node[\"Storyblok\"].parameter[\"space\"]}}</code>.</li> <li>Click on the gears icon next to the Story ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Storyblok &gt; Output Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$node[\"Storyblok\"].json[\"id\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node publishes the stories that were returned by the previous node.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.storyblok/","title":"Storyblok","text":"<p>Storyblok is a headless content management system with a visual editor. It provides developers with all the flexibility they need to build reliable and fast websites, while giving content creators with no coding skills the ability to edit content independently of the developer.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","tags":["Workflow\u00b2","Storyblok"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.storyblok/#basic-operations","title":"Basic Operations","text":"","tags":["Workflow\u00b2","Storyblok"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.storyblok/#content-api","title":"Content API","text":"<p>Story - Get a story - Get all stories</p>","tags":["Workflow\u00b2","Storyblok"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.storyblok/#management-api","title":"Management API","text":"<p>Story - Delete a story - Get a story - Get all stories - Publish a story - Unpublish a story</p>","tags":["Workflow\u00b2","Storyblok"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.storyblok/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to get all the stories that have the slug starting with <code>release</code> and publish them using the Storyblok node. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Start - Storyblok</p> <p>The final workflow should look like the following image.</p> <p></p>","tags":["Workflow\u00b2","Storyblok"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.storyblok/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>","tags":["Workflow\u00b2","Storyblok"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.storyblok/#2-storyblok-node-getall-story","title":"2. Storyblok node (getAll: story)","text":"<p>This node will get all the stories that have a slug starting with <code>release</code>.</p> <ol> <li>Select 'Management API' from the Source dropdown list.</li> <li>You'll have to enter credentials for the Storyblok node. You can find out how to do that here.</li> <li>Select 'Get All' from the Operation dropdown list.</li> <li>Select a space from the Space ID dropdown list.</li> <li>Click on the Add Filter button.</li> <li>Enter <code>release</code> in the Starts With field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns all the stories that have a slug starting with <code>release</code>.</p> <p></p>","tags":["Workflow\u00b2","Storyblok"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.storyblok/#3-storyblok1-node-publish-story","title":"3. Storyblok1 node (publish: story)","text":"<p>This node will publish the stories that were returned by the previous node.</p> <ol> <li>Select 'Management API' from the Source dropdown list.</li> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Publish' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Space ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Storyblok &gt; Parameters &gt; space. You can also add the following expression: <code>{{$node[\"Storyblok\"].parameter[\"space\"]}}</code>.</li> <li>Click on the gears icon next to the Story ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Storyblok &gt; Output Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$node[\"Storyblok\"].json[\"id\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node publishes the stories that were returned by the previous node.</p> <p></p>","tags":["Workflow\u00b2","Storyblok"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.strapi/","title":"Strapi","text":"<p>Strapi is an open-source Headless CMS that gives developers the freedom to choose their tools and frameworks while also allowing editors to easily manage and distribute their content.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p> <p> Strapi Version 4</p> <p>The Strapi node node was built for Strapi version 3. Some of its operations will not work with Strapi version 4.</p>","tags":["Workflow\u00b2","Strapi"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.strapi/#basic-operations","title":"Basic Operations","text":"<ul> <li>Entry<ul> <li>Create an entry</li> <li>Delete an entry</li> <li>Get an entry</li> <li>Get all entries</li> <li>Update an entry</li> </ul> </li> </ul>","tags":["Workflow\u00b2","Strapi"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.strapi/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to create, update, and get an entry in Strapi. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Start - Set - Strapi</p> <p>The final workflow should look like the following image.</p> <p></p>","tags":["Workflow\u00b2","Strapi"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.strapi/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>","tags":["Workflow\u00b2","Strapi"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.strapi/#2-set-node","title":"2. Set node","text":"<p>We will use the Set node to set the title, content, and description for an entry of the content type <code>Post</code>. If you have a different content type in Strapi, set the values accordingly.</p> <ol> <li>Click on Add Value and select 'String' from the dropdown list.</li> <li>Enter <code>Title</code> in the Name field.</li> <li>Enter <code>Automate Strapi with n8n</code> in the Value field.</li> <li>Click on Add Value and select 'String' from the dropdown list.</li> <li>Enter <code>Content</code> in the Name field.</li> <li>Enter <code>Strapi is a headless CMS. We will use Strapi and Doc\u00b2 to automate our content creation workflows.</code> in the Value field.</li> <li>Click on Add Value and select 'String' from the dropdown list.</li> <li>Enter <code>Description</code> in the Name field.</li> <li>Enter <code>Learn how to automate Strapi with Workflow\u00b2.</code> in the Value field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that node sets the value for title, content, and description.</p> <p></p>","tags":["Workflow\u00b2","Strapi"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.strapi/#2-strapi-node-create-entry","title":"2. Strapi node (create: entry)","text":"<p>This node will create an entry for the content type <code>posts</code>. If you have a different content type, use that content type instead.</p> <ol> <li>First of all, you'll have to enter credentials for the Strapi node. You can find out how to do that here.</li> <li>Select 'Create' from the Operation dropdown list.</li> <li>Enter <code>posts</code> in the Content Type field.</li> <li>Enter <code>Title, Content, Description</code> in the Columns field. If you want to add data for other columns, enter those column names.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node creates a new entry in Strapi using the information from the previous node.</p> <p></p>","tags":["Workflow\u00b2","Strapi"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.strapi/#3-set1-node","title":"3. Set1 node","text":"<p>We will use the Set node to ensure that only the data that we set in this node gets passed on to the next nodes in the workflow. We will set the value of <code>id</code> and <code>slug</code> in this node.</p> <ol> <li>Click on Add Value and select 'String' from the dropdown list.</li> <li>Enter <code>id</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Strapi &gt; Output Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$node[\"Strapi\"].json[\"id\"]}}</code>.</li> <li>Click on Add Value and select 'String' from the dropdown list.</li> <li>Enter <code>slug</code> in the Name field.</li> <li>Enter <code>automate-strapi-with-n8n</code> in the Value field.</li> <li>Toggle Keep Only Set to <code>true</code>. We set this option to true to ensure that only the data that we have set in this node get passed on to the next nodes in the workflow.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node sets the values of <code>id</code> and <code>slug</code>. These values are passed to the next node in the workflow.</p> <p></p>","tags":["Workflow\u00b2","Strapi"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.strapi/#4-strapi1-node-update-entry","title":"4. Strapi1 node (update: entry)","text":"<p>This node will update the slug for the entry that we created using the Strapi node.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Update' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Content Type field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Strapi &gt; Parameters &gt; contentType. You can also add the following expression: <code>{{$node[\"Strapi\"].parameter[\"contentType\"]}}</code>.</li> <li>Enter <code>id</code> in the Update Key field.</li> <li>Enter <code>slug</code> in the Columns field. If you want to update a different column, enter that column name instead.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node adds a slug to the entry that we created using the Strapi node.</p> <p></p>","tags":["Workflow\u00b2","Strapi"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.strapi/#5-strapi2-node-get-entry","title":"5. Strapi2 node (get: entry)","text":"<p>This node returns information about the entry that we created using the Strapi node.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Click on the gears icon next to the Content Type field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Strapi &gt; Parameters &gt; contentType. You can also add the following expression: <code>{{$node[\"Strapi\"].parameter[\"contentType\"]}}</code>.</li> <li>Click on the gears icon next to the Entry ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Strapi &gt; Output Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$node[\"Strapi1\"].json[\"id\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns information about the entry that we specified.</p> <p></p>","tags":["Workflow\u00b2","Strapi"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.strava/","title":"Strava","text":"<p>Strava is an internet service for tracking human exercise which incorporates social network features.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","tags":["Workflow\u00b2","Strava"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.strava/#basic-operations","title":"Basic Operations","text":"<ul> <li>Activity<ul> <li>Create a new activity</li> <li>Get an activity</li> <li>Get all activities</li> <li>Get all activity comments</li> <li>Get all activity kudos</li> <li>Get all activity laps</li> <li>Get all activity zones</li> <li>Update an activity</li> </ul> </li> </ul>","tags":["Workflow\u00b2","Strava"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.strava/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to create, update, and get an activity in Strava. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Start - Strava</p> <p>The final workflow should look like the following image.</p> <p></p>","tags":["Workflow\u00b2","Strava"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.strava/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>","tags":["Workflow\u00b2","Strava"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.strava/#2-strava-node-create-activity","title":"2. Strava node (create: activity)","text":"<p>This node will create an activity with the name <code>Morning Run</code> in Strava. To create an activity with a different name, you can enter the name of your activity instead.</p> <ol> <li>First of all, you'll have to enter credentials for the Strava node. You can find out how to do that here.</li> <li>Enter <code>Morning Run</code> in the Name field.</li> <li>Enter <code>Run</code> in the Type field.</li> <li>Select the date and time in the Start Date field.</li> <li>Set Elapsed Time (Seconds) to <code>3600</code>.</li> <li>Click on the Add Field button and select 'Distance' from the dropdown list.</li> <li>Set Distance to <code>1000</code>. Strava measures distance in meters.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node creates an activity with the name <code>Morning Run</code> and type <code>Run</code>.</p> <p></p>","tags":["Workflow\u00b2","Strava"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.strava/#3-strava1-node-update-activity","title":"3. Strava1 node (update: activity)","text":"<p>This node will update the activity that we created in the previous node.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Update' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Activity ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Strava &gt; Output Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$node[\"Strava\"].json[\"id\"]}}</code>.</li> <li>Click on the Add Field button and select 'Description' from the dropdown list.</li> <li>Enter the description of the activity in the Description field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node adds a description to the activity that we created using the Strava node.</p> <p></p>","tags":["Workflow\u00b2","Strava"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.strava/#4-strava2-node-get-activity","title":"4. Strava2 node (get: activity)","text":"<p>This node returns the information of the activity that we created using the Strava node.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Get' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Activity ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Strava &gt; Output Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$node[\"Strava\"].json[\"id\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns the information of the activity that we specified in this node.</p> <p></p>","tags":["Workflow\u00b2","Strava"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.stripe/","title":"Stripe","text":"<p>Stripe offers payment processing software and application programming interfaces for e-commerce websites and mobile applications.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","tags":["Workflow\u00b2","Stripe"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.stripe/#basic-operations","title":"Basic operations","text":"<ul> <li>Balance<ul> <li>Get a balance</li> </ul> </li> <li>Charge<ul> <li>Create a charge</li> <li>Get a charge</li> <li>Get all charges</li> <li>Update a charge</li> </ul> </li> <li>Coupon<ul> <li>Create a coupon</li> <li>Get all coupons</li> </ul> </li> <li>Customer<ul> <li>Create a customer</li> <li>Delete a customer</li> <li>Get a customer</li> <li>Get all customers</li> <li>Update a customer</li> </ul> </li> <li>Customer Card<ul> <li>Add a customer card</li> <li>Get a customer card</li> <li>Remove a customer card</li> </ul> </li> <li>Source<ul> <li>Create a source</li> <li>Delete a source</li> <li>Get a source</li> </ul> </li> <li>Token<ul> <li>Create a token</li> </ul> </li> </ul>","tags":["Workflow\u00b2","Stripe"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.stripe/#example","title":"Example","text":"<p>This workflow allows you to create a new customer, create a card token, and associate this token as that customer's card. This example usage workflow would use the following nodes. - Start - Stripe</p> <p>The final workflow should look like the following image.</p> <p></p>","tags":["Workflow\u00b2","Stripe"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.stripe/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>","tags":["Workflow\u00b2","Stripe"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.stripe/#2-stripe-node","title":"2. Stripe node","text":"<ol> <li>First enter your Stripe API credentials. You can learn how to create that here.</li> <li>Fill in the remaining parameters as follows:<ul> <li>Resource: Select the entity you want to work with, Customer in this example.</li> <li>Operation: Select the action to perform, Create in this example.</li> <li>Name: Enter the customer name.</li> <li>Additional Fields: Provide any further details, available options are: Address, Description, Email, Metadata, and Shipping.</li> <li>Type: The type of token to create, Card Token by default.</li> </ul> </li> </ol>","tags":["Workflow\u00b2","Stripe"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.stripe/#3-stripe1-node","title":"3. Stripe1 node","text":"<ol> <li>First enter your Stripe API credentials as with the first node.</li> <li>Fill in the remaining parameters as follows:<ul> <li>Resource: Select the entity you want to work with, Token in this example.</li> <li>Operation: Select the action to perform, Create in this example.</li> <li>Type: The type of token to create, Card Token by default.</li> <li>Card Number: Enter the customer credit card number.</li> <li>CVC: Enter the security code for this card.</li> <li>Expiration Month: Enter the expiration month for this card.</li> <li>Expiration Year: Enter the expiration year for this card.</li> </ul> </li> </ol>","tags":["Workflow\u00b2","Stripe"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.stripe/#4-stripe2-node","title":"4. Stripe2 node","text":"<ol> <li>First enter your Stripe API credentials as with the previous node.</li> <li>Fill in the remaining parameters as follows:<ul> <li>Resource: Select the entity you want to work with, Customer Card in this example.</li> <li>Operation: Select the action to perform, Add in this example.</li> <li>Customer ID: Enter the customer ID generated by the first node.</li> <li>Card Token: Enter the token generated by the second node.</li> <li>Type: The type of token to create, Card Token by default.</li> </ul> </li> </ol>","tags":["Workflow\u00b2","Stripe"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.sugarcrm/","title":"SugarCRM","text":"<p>SugarCRM offers a feature rich platform to manage customer relationships.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","tags":["Workflow\u00b2","SugarCRM","Sugar"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.sugarcrm/#basic-operations","title":"Basic operations","text":"<p>Currently implemented operations.</p> <ul> <li>Contact<ul> <li>Create a contact</li> <li>Get all contacts</li> <li>Delete a contact</li> </ul> </li> <li>Company<ul> <li>Create a company</li> <li>Get all companys</li> <li>Delete a company</li> </ul> </li> <li>Lead<ul> <li>Create a lead</li> <li>Get all leads</li> <li>Delete a lead</li> </ul> </li> <li>Activity<ul> <li>Create an activity</li> <li>Get all activities</li> <li>Delete an activity</li> </ul> </li> </ul>","tags":["Workflow\u00b2","SugarCRM","Sugar"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.supabase/","title":"Supabase","text":"<p>Supabase is an open source Firebase alternative.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","tags":["Workflow\u00b2","Supabase"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.supabase/#basic-operations","title":"Basic Operations","text":"<ul> <li>Row<ul> <li>Create a new row</li> <li>Delete a row</li> <li>Get a row</li> <li>Get all rows</li> <li>Update a row</li> </ul> </li> </ul>","tags":["Workflow\u00b2","Supabase"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.syncroMsp/","title":"SyncroMSP","text":"<p>SyncroMSP is a cloud-based remote monitoring and management platform (RMM).</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","tags":["Workflow\u00b2","SyncroMSP"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.syncroMsp/#basic-operations","title":"Basic Operations","text":"<ul> <li>Contact<ul> <li>Create new contact</li> <li>Delete contact</li> <li>Retrieve contact</li> <li>Retrieve all contacts</li> <li>Update contact</li> </ul> </li> <li>Customer<ul> <li>Create new customer</li> <li>Delete customer</li> <li>Retrieve customer</li> <li>Retrieve all customers</li> <li>Update customer</li> </ul> </li> <li>RMM<ul> <li>Create new RMM Alert</li> <li>Delete RMM Alert</li> <li>Retrieve RMM Alert</li> <li>Retrieve all RMM Alerts</li> <li>Mute RMM Alert</li> </ul> </li> <li>Ticket<ul> <li>Create new ticket</li> <li>Delete ticket</li> <li>Retrieve ticket</li> <li>Retrieve all tickets</li> <li>Update ticket</li> </ul> </li> </ul>","tags":["Workflow\u00b2","SyncroMSP"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.taiga/","title":"Taiga","text":"<p>Taiga is a free and open-source project management platform for startups, agile developers, and designers.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","tags":["Workflow\u00b2","Taiga"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.taiga/#basic-operations","title":"Basic Operations","text":"<p>Issue - Create an issue - Delete an issue - Get an issue - Get all issues - Update an issue</p>","tags":["Workflow\u00b2","Taiga"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.taiga/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to create, update, and get an issue on Taiga. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Start - Taiga</p> <p>The final workflow should look like the following image.</p> <p></p>","tags":["Workflow\u00b2","Taiga"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.taiga/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>","tags":["Workflow\u00b2","Taiga"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.taiga/#2-taiga-node-create-issue","title":"2. Taiga node (create: issue)","text":"<ol> <li>First of all, you'll have to enter credentials for the Taiga node. You can find out how to do that here.</li> <li>Select the project ID from the Project ID dropdown list.</li> <li>Enter the subject of the issue in the Subject field.</li> <li>Click on Execute Node to run the node.</li> </ol>","tags":["Workflow\u00b2","Taiga"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.taiga/#3-taiga1-node-update-issue","title":"3. Taiga1 node (update: issue)","text":"<ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Update' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Project ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Taiga &gt; Output Data &gt; JSON &gt; project. You can also add the following expression: <code>{{$node[\"Taiga\"].json[\"project\"]}}</code>.</li> <li>Click on the gears icon next to the Issue ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Taiga &gt; Output Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$node[\"Taiga\"].json[\"id\"]}}</code>.</li> <li>Click on the Add Field button and select 'Description' from the dropdown list.</li> <li>Enter the description of the issue in the Description field.</li> <li>Click on Execute Node to run the node.</li> </ol>","tags":["Workflow\u00b2","Taiga"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.taiga/#4-taiga2-node-get-issue","title":"4. Taiga2 node (get: issue)","text":"<ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Get' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Issue ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Taiga &gt; Output Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$node[\"Taiga\"].json[\"id\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol>","tags":["Workflow\u00b2","Taiga"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.tapfiliate/","title":"Tapfiliate","text":"<p>Tapfiliate allows you to create, track, and grow your affiliate marketing programs.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","tags":["Workflow\u00b2","Tapfiliate"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.tapfiliate/#basic-operations","title":"Basic Operations","text":"<ul> <li>Affiliate<ul> <li>Create an affiliate</li> <li>Delete an affiliate</li> <li>Get an affiliate by ID</li> <li>Get all affiliates</li> </ul> </li> <li>Affiliate Metadata<ul> <li>Add metadata to affiliate</li> <li>Remove metadata from affiliate</li> <li>Update affiliate's metadata</li> </ul> </li> <li>Program Affiliate<ul> <li>Add affiliate to program</li> <li>Approve an affiliate for a program</li> <li>Disapprove an affiliate</li> <li>Get an affiliate in a program</li> <li>Get all affiliates in program</li> </ul> </li> </ul>","tags":["Workflow\u00b2","Tapfiliate"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.tapfiliate/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to create an affiliate, add metadata, and add the affiliate to a program. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Start - Tapfiliate</p> <p>The final workflow should look like the following image.</p> <p></p>","tags":["Workflow\u00b2","Tapfiliate"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.tapfiliate/#1-start-node","title":"1. Start node","text":"<p>The Start node exists by default when you create a new workflow.</p>","tags":["Workflow\u00b2","Tapfiliate"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.tapfiliate/#2-tapfiliate-node-createaffiliate","title":"2. Tapfiliate node (create:affiliate)","text":"<p>This node will create an affiliate in Tapfiliate.</p> <ol> <li>First of all, you'll have to enter credentials for the Tapfiliate node. You can find out how to do that here.</li> <li>Enter an email address in the Email field.</li> <li>Enter the first name of the affiliate in the First Name field.</li> <li>Enter the last name of the affiliate in the Last Name field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node creates an affiliate in Tapfiliate.</p> <p></p>","tags":["Workflow\u00b2","Tapfiliate"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.tapfiliate/#3-tapfiliate1-node-addaffiliatemetadata","title":"3. Tapfiliate1 node (add:affiliateMetadata)","text":"<p>This node will add metadata to the affiliate that we created with the previous node.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Affiliate Metadata' from the Resource dropdown list.</li> <li>Select 'Add' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Affiliate ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$json[\"id\"]}}</code>.</li> <li>Click on the Add Metadata button.</li> <li>Enter <code>tag</code> in the Key field.</li> <li>Enter <code>n8n</code> in the Value field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node adds the metadata to the affiliate that we created with the previous node.</p> <p></p>","tags":["Workflow\u00b2","Tapfiliate"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.tapfiliate/#4-tapfiliate2-node-getcontact","title":"4. Tapfiliate2 node (get:contact)","text":"<p>This node will add the affiliate that we created with the Tapfiliate node to an affiliate program.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Program Affiliate' from the Resource dropdown list.</li> <li>Select 'Add' from the Operation dropdown list.</li> <li>Select a program from the Program ID dropdown list.</li> <li>Click on the gears icon next to the Affiliate ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Tapfiliate &gt; Output Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$node[\"Tapfiliate\"].json[\"id\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node adds the affiliate to a program.</p> <p></p>","tags":["Workflow\u00b2","Tapfiliate"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.telegram/","title":"Telegram","text":"<p>Telegram is a cloud-based instant messaging and voice-over-IP service.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","tags":["Workflow\u00b2","Telegram"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.telegram/#basic-operations","title":"Basic Operations","text":"<ul> <li>Chat<ul> <li>Get up to date information about a chat.</li> <li>Leave a group, supergroup or channel.</li> <li>Get the member of a chat.</li> <li>Set the description of a chat.</li> <li>Set the title of a chat.</li> </ul> </li> <li>Callback<ul> <li>Send answer to callback query sent from inline keyboard.</li> <li>Send answer to callback query sent from inline bot.</li> </ul> </li> <li>File<ul> <li>Get a file.</li> </ul> </li> <li>Message<ul> <li>Delete a chat message</li> <li>Edit a text message</li> <li>Pin a chat message</li> <li>Send an animated file</li> <li>Send a audio file</li> <li>Send a chat action</li> <li>Send a document</li> <li>Send a location</li> <li>Send group of photos or videos to album</li> <li>Send a text message</li> <li>Send a photo</li> <li>Send a sticker</li> <li>Send a video</li> <li>Unpin a chat message</li> </ul> </li> </ul>","tags":["Workflow\u00b2","Telegram"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.telegram/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to send a cocktail recipe to a specified chat ID every day via a Telegram bot. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Cron - HTTP Request - Telegram</p> <p>The final workflow should look like the following image.</p> <p></p>","tags":["Workflow\u00b2","Telegram"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.telegram/#1-cron-node","title":"1. Cron node","text":"<p>The Cron node will trigger the workflow daily at 8 PM.</p> <ol> <li>Click on Add Cron Time.</li> <li>Set hours to <code>20</code> in the Hour field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the Cron node is configured to trigger the workflow every day at 8 PM.</p> <p></p>","tags":["Workflow\u00b2","Telegram"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.telegram/#2-http-request-node-get","title":"2. HTTP Request node (GET)","text":"<p>This node will make a GET request to the API <code>https://www.thecocktaildb.com/api/json/v1/1/random.php</code> to fetch a random cocktail. This information gets passed on to the next node in the workflow.</p> <ol> <li>Enter <code>https://www.thecocktaildb.com/api/json/v1/1/random.php</code> in the URL field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node makes a GET request to the API and returns information about a random cocktail.</p> <p></p>","tags":["Workflow\u00b2","Telegram"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.telegram/#3-telegram-node-sendphoto-message","title":"3. Telegram node (sendPhoto: message)","text":"<p>This node will send a message on Telegram with an image and the recipe of the cocktail that we got from the previous node.</p> <ol> <li> <p>First of all, you'll have to enter credentials for the Telegram node. You can find out how to do that here.</p> </li> <li> <p>Select 'Send Photo' from the Operation dropdown list.</p> </li> <li>Enter the target chat ID in the Chat ID field. Refer to the FAQs to learn how to get the chat ID.</li> <li>Click on the gears icon next to the Photo field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; HTTP Request &gt; Output Data &gt; JSON &gt; drinks &gt; [item: 0] &gt; strDrinkThumb. You can also add the following expression: <code>{{$node[\"HTTP Request\"].json[\"drinks\"][0][\"strDrinkThumb\"]}}</code>.</li> <li>Click on Add Field and select 'Caption' from the dropdown list.</li> <li>Click on the gears icon next to the Caption field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; HTTP Request &gt; Output Data &gt; JSON &gt; drinks &gt; [item: 0] &gt; strInstructions. You can also add the following expression: <code>{{$node[\"HTTP Request\"].json[\"drinks\"][0][\"strInstructions\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node sends a message on Telegram with an image and the recipe of the cocktail.</p> <p></p> <p> Activate workflow for production</p> <p>This example workflow uses the Cron node, which is a Trigger node. You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Cron node.</p>","tags":["Workflow\u00b2","Telegram"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.telegram/#faqs","title":"FAQs","text":"","tags":["Workflow\u00b2","Telegram"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.telegram/#how-can-i-send-more-than-30-messages-per-second","title":"How can I send more than 30 messages per second?","text":"<p>The Telegram API has a limitation of sending only 30 messages per second. Follow the steps mentioned below to send more than 30 messages: 1. Split In Batches node: Use the Split in Batches node to get at most 30 chat IDs from your database. 2. Telegram node: Connect the Telegram node with the Split In Batches node. Use the Expression Editor to select the Chat IDs from the Split in Batches node. 3. Function node: Connect the Function node with the Telegram node. Use the Function node to wait for a few seconds before fetching the next batch of chat IDs. Connect this node with the Split In Batches node.</p> <p>You can also use this workflow.</p>","tags":["Workflow\u00b2","Telegram"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.telegram/#how-do-i-add-a-bot-to-a-telegram-channel","title":"How do I add a bot to a Telegram channel?","text":"<ol> <li>In the Telegram app, access the target channel and tap on the channel name.</li> <li>Make sure that the channel name is labeled as \"public channel\".</li> <li>Tap on Administrators and then on Add Admin.</li> <li>Search for the username of the bot and select it.</li> <li>Tap on the checkmark on the top-right corner to add the bot to the channel.</li> </ol>","tags":["Workflow\u00b2","Telegram"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.telegram/#how-do-i-get-the-chat-id","title":"How do I get the Chat ID?","text":"<p>There are two ways to get the Chat ID in Telegram.</p> <ul> <li>Using the Telegram Trigger node: On successful execution, the Telegram Trigger node returns a Chat ID. You can use the Telegram Trigger node in your workflow to get a Chat ID.</li> <li>Using the <code>@RawDataBot</code>: The <code>@RawDataBot</code> returns the raw data of the chat with a Chat ID. Invite the <code>@RawDataBot</code> to your channel/group, and upon joining, it will output a Chat ID along with other information. Be sure to remove the <code>@RawDataBot</code> from your group/channel afterwards.</li> </ul>","tags":["Workflow\u00b2","Telegram"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.tempo/","title":"Tempo io","text":"<p>Tempo io offers a feature rich platform manage/log your timeconsumption on tasks and projects.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","tags":["Workflow\u00b2","Tempo io","Tempo"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.tempo/#basic-operations","title":"Basic operations","text":"<p>Currently implemented operations.</p> <ul> <li>Worklogs<ul> <li>Get Worklogs for a Project or Issue/Ticket</li> </ul> </li> </ul>","tags":["Workflow\u00b2","Tempo io","Tempo"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.theHive/","title":"TheHive","text":"<p>TheHive is a scalable open-source and free security incident response platform.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","tags":["Workflow\u00b2","TheHive"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.theHive/#basic-operations","title":"Basic Operations","text":"<p>Alert - Count alerts - Create an alert - Execute a responder on a specified alert - Get an alert - Get all alerts - Mark an alert as read - Mark an alert as unread - Merge an alert into an existing case - Promote an alert into a case - Update an alert</p> <p>Case - Count cases - Create a case - Execute a responder on a specified case - Get all cases - Get a single case - Update a case</p> <p>Log - Create a task log - Execute a responder on a selected log - Get all task logs - Get a single log</p> <p>Observable - Count observables - Create an observable - Execute an analyzer - Execute a responder on selected observable - Get all observables of a specific case - Get a single observable - Search observables - Update an observable</p> <p>Task - Count tasks - Create a task - Execute a responder on a specified task - Get a single task - Search tasks - Update a task</p>","tags":["Workflow\u00b2","TheHive"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.theHive/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to create, update, and get a case in TheHive. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Start - TheHive</p> <p>The final workflow should look like the following image.</p> <p></p>","tags":["Workflow\u00b2","TheHive"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.theHive/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>","tags":["Workflow\u00b2","TheHive"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.theHive/#2-thehive-node-create-case","title":"2. TheHive node (create: case)","text":"<p>This node will create a new case in TheHive with the title <code>n8n</code> and set its severity to <code>low</code>. You can create a case with a different title and severity.</p> <ol> <li>First of all, you'll have to enter credentials for the TheHive node. You can find out how to do that here.</li> <li>Select 'Case' from the Resource dropdown list.</li> <li>Select 'Create' from the Operation dropdown list.</li> <li>Enter a title in the Title field.</li> <li>Enter a description in the Description field.</li> <li>Select 'Low' from the Severity dropdown list.</li> <li>Set the start date in the Start Date field.</li> <li>Enter a case owner in the Owner field.</li> <li>Enter tags in the Tags field. You can enter multiple tags separate by a comma.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node creates a new case with the title <code>n8n</code> and <code>low</code> severity .</p> <p></p>","tags":["Workflow\u00b2","TheHive"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.theHive/#3-thehive-node-update-case","title":"3. TheHive node (update: case)","text":"<p>This node will update the case that we created in the previous node. We will update the severity of the case.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Case' from the Resource dropdown list.</li> <li>Select 'Update' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Case ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; TheHive &gt; Output Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$node[\"TheHive\"].json[\"id\"]}}</code>.</li> <li>Click on Add Field and select 'Severity' from the dropdown list.</li> <li>Select 'High' from the Severity dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node updates the severity of the case that we created in the previous node.</p> <p></p>","tags":["Workflow\u00b2","TheHive"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.theHive/#4-thehive-node-get-case","title":"4. TheHive node (get: case)","text":"<p>This node will return the information of the case that we created in the previous node.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Case' from the Resource dropdown list.</li> <li>Select 'Get' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Case ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; TheHive &gt; Output Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$node[\"TheHive\"].json[\"id\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns the information of the case that we created earlier.</p> <p></p>","tags":["Workflow\u00b2","TheHive"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.timescaleDb/","title":"TimescaleDB","text":"<p>TimescaleDB is an open-source time-series SQL database optimized for fast ingest and complex queries.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","tags":["Workflow\u00b2","TimescaleDB"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.timescaleDb/#basic-operations","title":"Basic Operations","text":"<ul> <li>Execute an SQL query</li> <li>Insert rows in database</li> <li>Update rows in database</li> </ul>","tags":["Workflow\u00b2","TimescaleDB"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.timescaleDb/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to receive updates of the position of the ISS every minute and insert it to a table using the TimscaleDB node. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Cron - HTTP Request - Set - TimescaleDB</p> <p>The final workflow should look like the following image.</p> <p></p>","tags":["Workflow\u00b2","TimescaleDB"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.timescaleDb/#1-cron-node","title":"1. Cron node","text":"<p>The Cron node will trigger the workflow every minute.</p> <ol> <li>Click on Add Cron Time.</li> <li>Select 'Every Minute' from the Mode dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the Cron node is configured to trigger the workflow every minute.</p> <p></p>","tags":["Workflow\u00b2","TimescaleDB"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.timescaleDb/#2-http-request-node-get","title":"2. HTTP Request node (GET)","text":"<p>This node will make a GET request to the API <code>https://api.wheretheiss.at/v1/satellites/25544/positions</code> to fetch the position of the ISS. This information gets passed on to the next node in the workflow.</p> <ol> <li>Enter <code>https://api.wheretheiss.at/v1/satellites/25544/positions</code> in the URL field.</li> <li>Click on the Add Parameter button in the Query Parameters section.</li> <li>Enter <code>timestamps</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Enter the following expression: <code>{{Date.now()}}</code>. This expression will return the current timestamp.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node makes a GET request to the API and returns the information about the location of the ISS.</p> <p></p>","tags":["Workflow\u00b2","TimescaleDB"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.timescaleDb/#3-set-node","title":"3. Set node","text":"<p>We will use the Set node to ensure that only the data that we set in this node gets passed on to the next nodes in the workflow.</p> <ol> <li>Click on Add Value and select 'String' from the dropdown list.</li> <li>Enter <code>latitude</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; 0 &gt; latitude. You can also add the following expression: <code>{{$json[\"0\"][\"latitude\"]}}</code>.</li> <li>Click on Add Value and select 'String' from the dropdown list.</li> <li>Enter <code>longitude</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; 0 &gt; longitude. You can also add the following expression: <code>{{$json[\"0\"][\"longitude\"]}}</code>.</li> <li>Click on Add Value and select 'String' from the dropdown list.</li> <li>Enter <code>timestamp</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; 0 &gt; timpestamp. You can also add the following expression: <code>{{$json[\"0\"][\"timestamp\"]}}</code>.</li> <li>Toggle Keep Only Set to <code>true</code>. We set this option to true to ensure that only the data that we have set in this node get passed on to the next nodes in the workflow.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node uses the data from the previous node and returns the data that we set for the workflow.</p> <p></p>","tags":["Workflow\u00b2","TimescaleDB"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.timescaleDb/#4-timescaledb-node-insert","title":"4. TimescaleDB node (Insert)","text":"<p>We will insert the data from the previous node to a table named <code>iss</code>. To create the table, use the following SQL command. <pre><code>CREATE TABLE iss(latitude NUMERIC, longitude NUMERIC, timestamp NUMERIC);\n</code></pre></p> <ol> <li>First of all, you'll have to enter credentials for the TimescaleDB node. You can find out how to do that here.</li> <li>Enter <code>iss</code> in the Table field.</li> <li>Enter <code>latitude, longitude, timestamp</code> in the Columns field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node inserts the data from the previous node to the <code>iss</code> table in TimescaleDB.</p> <p></p> <p> Activate workflow for production</p> <p>This example workflow uses the Cron node, which is a Trigger node. You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Cron node.</p>","tags":["Workflow\u00b2","TimescaleDB"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.timescaleDb/#faqs","title":"FAQs","text":"","tags":["Workflow\u00b2","TimescaleDB"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.timescaleDb/#how-to-specify-the-data-type-of-a-column","title":"How to specify the data type of a column?","text":"<p>To specify the data type of a column, append the column name with <code>:type</code>, where <code>type</code> is the data type of that column. For example, if you want to specify the type <code>int</code> for the column id and type <code>text</code> for the column name, you can use the following snippet in the Columns field: <code>id:init,name:text</code>.</p>","tags":["Workflow\u00b2","TimescaleDB"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.todoist/","title":"Todoist","text":"<p>Todoist is a task management software that can be used for small teams, individuals and professionals to manage anything from a shopping list to major projects at work.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","tags":["Workflow\u00b2","Todoist"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.todoist/#basic-operations","title":"Basic Operations","text":"<ul> <li>Task<ul> <li>Create a new task</li> <li>Close a task</li> <li>Delete a task</li> <li>Get a task</li> <li>Get all tasks</li> <li>Reopen a task</li> <li>Update a task</li> </ul> </li> </ul>","tags":["Workflow\u00b2","Todoist"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.todoist/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to create a new task in Todoist. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - Todoist</p> <p>The final workflow should look like the following image.</p> <p></p>","tags":["Workflow\u00b2","Todoist"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.todoist/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>","tags":["Workflow\u00b2","Todoist"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.todoist/#2-todoist-node","title":"2. Todoist node","text":"<ol> <li>First of all, you'll have to enter credentials for the Todoist node. You can find out how to do that here.</li> <li>Select your project from the Project dropdown list.</li> <li>Enter the content for the task in the Content field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>","tags":["Workflow\u00b2","Todoist"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.travisCi/","title":"Travis CI","text":"<p>Travis CI is a hosted continuous integration service used to build and test software projects hosted at GitHub and Bitbucket.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","tags":["Workflow\u00b2","Travis CI"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.travisCi/#basic-operations","title":"Basic Operations","text":"<ul> <li>Build<ul> <li>Cancel a build</li> <li>Get a build</li> <li>Get all builds</li> <li>Restart a build</li> <li>Trigger a build</li> </ul> </li> </ul>","tags":["Workflow\u00b2","Travis CI"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.travisCi/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to trigger a build using the Travis CI node. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Start - Travis CI</p> <p>The final workflow should look like the following image.</p> <p></p>","tags":["Workflow\u00b2","Travis CI"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.travisCi/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>","tags":["Workflow\u00b2","Travis CI"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.travisCi/#2-travis-ci-node-trigger-build","title":"2. Travis CI node (trigger: build)","text":"<ol> <li>First of all, you'll have to enter credentials for the Travis CI node. You can find out how to do that here.</li> <li>Select 'Trigger' from the Operation dropdown list.</li> <li>Enter the repository name in the Slug field in the <code>ownerName/repositoryName</code> format.</li> <li>Enter the branch name in the Branch field.</li> <li>Click on Execute Node to run the node.</li> </ol>","tags":["Workflow\u00b2","Travis CI"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.trello/","title":"Trello","text":"<p>Trello is a web-based Kanban-style list-making application which is a subsidiary of Atlassian. Users can create their task boards with different columns and move the tasks between them.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","tags":["Workflow\u00b2","Trello"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.trello/#basic-operations","title":"Basic Operations","text":"<ul> <li>Attachment<ul> <li>Create a new attachment for a card</li> <li>Delete an attachment</li> <li>Get the data of an attachment</li> <li>Returns all attachments for the card</li> </ul> </li> <li>Board<ul> <li>Create a new board</li> <li>Delete a board</li> <li>Get the data of a board</li> <li>Update a board</li> </ul> </li> <li>Card<ul> <li>Create a new card</li> <li>Delete a card</li> <li>Get the data of a card</li> <li>Update a card</li> </ul> </li> <li>Card Comment<ul> <li>Create a comment on a card</li> <li>Delete a comment from a card</li> <li>Update a comment on a card</li> </ul> </li> <li>Checklist<ul> <li>Create a checklist item</li> <li>Create a new checklist</li> <li>Delete a checklist</li> <li>Delete a checklist item</li> <li>Get the data of a checklist</li> <li>Returns all checklists for the card</li> <li>Get a specific checklist on a card</li> <li>Get the completed checklist items on a card</li> <li>Update an item in a checklist on a card</li> </ul> </li> <li>Label<ul> <li>Add a label to a card.</li> <li>Create a new label</li> <li>Delete a label</li> <li>Get the data of a label</li> <li>Returns all labels for the board</li> <li>Remove a label from a card.</li> <li>Update a label.</li> </ul> </li> <li>List<ul> <li>Archive/Unarchive a list</li> <li>Create a new list</li> <li>Get the data of a list</li> <li>Get all the lists</li> <li>Get all the cards in a list</li> <li>Update a list</li> </ul> </li> </ul>","tags":["Workflow\u00b2","Trello"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.trello/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to create a new card in Trello. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - Trello</p> <p>The final workflow should look like the following image.</p> <p></p>","tags":["Workflow\u00b2","Trello"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.trello/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>","tags":["Workflow\u00b2","Trello"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.trello/#2-trello-node","title":"2. Trello node","text":"<ol> <li>First of all, you'll have to enter credentials for the Trello node. You can find out how to do that here.</li> <li>Enter the ID of the list in which you want to create a new card in the List ID field. You can find instructions on how to obtain the ID of the list in the FAQs below.</li> <li>Enter the name of the card in the Name field.</li> <li>Enter the description of the card in the Description field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>","tags":["Workflow\u00b2","Trello"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.trello/#faqs","title":"FAQs","text":"","tags":["Workflow\u00b2","Trello"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.trello/#how-do-i-find-the-list-id","title":"How do I find the List ID?","text":"<ol> <li>Open the Trello board that contains the list.</li> <li>If the list doesn't have any cards, add a card to the list.</li> <li>Open the card, add '.json' at the end of the URL, and press enter.</li> <li>In the JSON file, you will see a field called <code>idList</code>.</li> <li>Copy <code>idList</code>and paste it in the List ID field in Workflow\u00b2.</li> </ol>","tags":["Workflow\u00b2","Trello"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.twake/","title":"Twake","text":"<p>Twake is an open-source collaborative workspace. It can be self-hosted and easily integrated into your teams. Twake offers features for collaboration like team chat, team calendar, video call, todo list, and storage space.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","tags":["Workflow\u00b2","Twake"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.twake/#basic-operations","title":"Basic Operations","text":"<ul> <li>Message<ul> <li>Send a message</li> </ul> </li> </ul>","tags":["Workflow\u00b2","Twake"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.twake/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to send a message to a channel on Twake. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Start - Twake</p> <p>The final workflow should look like the following image.</p> <p></p>","tags":["Workflow\u00b2","Twake"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.twake/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>","tags":["Workflow\u00b2","Twake"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.twake/#2-twake-node","title":"2. Twake node","text":"<ol> <li>First of all, you'll have to enter credentials for the Twake node. You can find out how to do that here.</li> <li>Select the channel from the Channel ID dropdown list.</li> <li>Enter the content of the message in the Content field.</li> <li>Click on Execute Node to run the node.</li> </ol>","tags":["Workflow\u00b2","Twake"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.twilio/","title":"Twilio","text":"<p>Twilio is a cloud communications platform as a service company. Twilio allows software developers to programmatically make and receive phone calls, send and receive text messages, and perform other communication functions using its web service APIs.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","tags":["Workflow\u00b2","Twilio"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.twilio/#basic-operations","title":"Basic Operations","text":"<ul> <li>SMS<ul> <li>Send SMS/MMS/WhatsApp message</li> </ul> </li> </ul>","tags":["Workflow\u00b2","Twilio"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.twilio/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to send an SMS or a Whatsapp message to a specified phone number from your Twilio number. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - Twilio</p> <p>The final workflow should look like the following image.</p> <p></p>","tags":["Workflow\u00b2","Twilio"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.twilio/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>","tags":["Workflow\u00b2","Twilio"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.twilio/#2-twilio-node","title":"2. Twilio node","text":"<ol> <li>First of all, you'll have to enter credentials for the Twilio node. You can find out how to do that here.</li> <li>Enter the phone number from which you'll be sending the message in the From field.</li> <li>Enter the phone number to which you'll be sending the message in the To field.</li> <li>In case you want to send a Whatsapp message, toggle the To Whatsapp button.</li> <li>Enter you message in the Message field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>","tags":["Workflow\u00b2","Twilio"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.twist/","title":"Twist","text":"<p>Twist is a communication app that helps teams balance focused work with collaborative conversations.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","tags":["Workflow\u00b2","Twist"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.twist/#basic-operations","title":"Basic Operations","text":"<ul> <li>Channel<ul> <li>Archive a channel</li> <li>Initiates a public or private channel-based conversation</li> <li>Delete a channel</li> <li>Get information about a channel</li> <li>Get all channels</li> <li>Unarchive a channel</li> <li>Update a channel</li> </ul> </li> <li>Comment<ul> <li>Create a new comment to a thread</li> <li>Delete a comment</li> <li>Get information about a comment</li> <li>Get all comments</li> <li>Update a comment</li> </ul> </li> <li>Message Conversation<ul> <li>Create a message in a conversation</li> <li>Delete a message in a conversation</li> <li>Get a message in a conversation</li> <li>Get all messages in a conversation</li> <li>Update a message in a conversation</li> </ul> </li> <li>Thread<ul> <li>Create a new thread in a channel</li> <li>Delete a thread</li> <li>Get information about a thread</li> <li>Get all threads</li> <li>Update a thread</li> </ul> </li> </ul>","tags":["Workflow\u00b2","Twist"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.twist/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to create and update a channel as well as send a message on Twist. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Start - Twist</p> <p>The final workflow should look like the following image.</p> <p></p>","tags":["Workflow\u00b2","Twist"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.twist/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>","tags":["Workflow\u00b2","Twist"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.twist/#2-twist-node-create-channel","title":"2. Twist node (create: channel)","text":"<p>This node will create a channel <code>n8n-docs</code> and add a user to the channel. 1. First of all, you'll have to enter credentials for the Twist node. You can find out how to do that here.</p> <ol> <li>Select 'Channel' from the Resource dropdown list.</li> <li>Select a workspace from the Workspace ID dropdown list.</li> <li>Enter <code>n8n-docs</code> in the Name field. If you want to create a channel with a different name, enter that name instead.</li> <li>Click on Add Field and select 'User IDs' from the dropdown list.</li> <li>Select the users from the User IDs dropdown list. The users you select will be added to the channel.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node creates a new channel named <code>n8n-docs</code>, and adds a user to the channel.</p> <p></p>","tags":["Workflow\u00b2","Twist"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.twist/#3-twist1-node-update-channel","title":"3. Twist1 node (update: channel)","text":"<p>This node will update the description of the channel that we created in the previous node.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Channel' from the Resource dropdown list.</li> <li>Select 'Update' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Channel ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Twist &gt; Output Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$node[\"Twist\"].json[\"id\"]}}</code>.</li> <li>Click on Add Field and select 'Description' from the dropdown list.</li> <li>Enter a description in the Description field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node adds a description to the channel that we created in the previous node.</p> <p></p>","tags":["Workflow\u00b2","Twist"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.twist/#4-twist2-node-create-messageconversation","title":"4. Twist2 node (create: messageConversation)","text":"<p>This node will send a message to the General conversation on Twist. The message contains an action button that navigates to <code>https://docs.n8n.io</code>.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select a workspace from the Workspace ID dropdown list.</li> <li>Select 'General' from the Conversation ID dropdown list. If you want to send a message to a different conversation, select that conversation instead.</li> <li>Click on the gears icon next to the Channel ID field and click on Add Expression.</li> <li> <p>Enter the following text in the Content field: <pre><code>Hey [Harshil](twist-mention://475370)!\nYou have been added to the {{$node[\"Twist\"].json[\"name\"]}} channel.\nClick on the button below to quickly navigate to the documentation website.\n</code></pre> The above message mentions the user <code>Harshil</code>. To mention a user in your workspace you need to use their User ID. Refer to the FAQs to learn how to get a User ID.</p> </li> <li> <p>Click on Add options and select 'Actions' from the dropdown list.</p> </li> <li>Click on the Add Action button.</li> <li>Select 'Open URL' from the Action dropdown list.</li> <li>Enter <code>Documentation site</code> in the Button Text field.</li> <li>Select 'Action' from the Type dropdown list.</li> <li>Enter <code>https://docs.n8n.io</code> in the URL field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node sends a message to the General conversation and mentions the user.</p> <p></p>","tags":["Workflow\u00b2","Twist"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.twist/#faqs","title":"FAQs","text":"","tags":["Workflow\u00b2","Twist"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.twist/#where-can-i-get-the-user-id","title":"Where can I get the User ID?","text":"<p>To get the User ID for a user follow the steps mentioned below 1. Click on the Team tab. 2. Click on a user's avatar. 3. Copy the string of characters located after <code>/u/</code> in your Twist URL. This string is the User ID. For example, if the URL is <code>https://twist.com/a/4qw45/people/u/475370</code> the User ID will be <code>475370</code>.</p>","tags":["Workflow\u00b2","Twist"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.twitter/","title":"Twitter","text":"<p>Twitter is a microblogging and social networking service on which users post and interact with messages known as \"tweets\".</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","tags":["Workflow\u00b2","Twitter"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.twitter/#basic-operations","title":"Basic Operations","text":"<ul> <li>Direct Message<ul> <li>Create a direct message</li> </ul> </li> <li>Tweet<ul> <li>Create or reply a tweet</li> <li>Delete a tweet</li> <li>Search tweets</li> <li>Like a tweet</li> <li>Retweet a tweet</li> </ul> </li> </ul>","tags":["Workflow\u00b2","Twitter"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.twitter/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to tweet on Twitter. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - Twitter</p> <p>The final workflow should look like the following image.</p> <p></p>","tags":["Workflow\u00b2","Twitter"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.twitter/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>","tags":["Workflow\u00b2","Twitter"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.twitter/#2-twitter-node","title":"2. Twitter node","text":"<ol> <li>First of all, you'll have to enter credentials for the Twitter node. You can find out how to do that here.</li> <li>Type the message you want to tweet in the Text field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>","tags":["Workflow\u00b2","Twitter"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.unleashedSoftware/","title":"Unleashed Software","text":"<p>Unleashed Software is a cloud app that gives product businesses the freedom to better make, manage and move products by enabling them to achieve complete clarity and control over suppliers, production, warehouses, and sales.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","tags":["Workflow\u00b2","Unleashed Software"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.unleashedSoftware/#basic-operations","title":"Basic Operations","text":"<ul> <li>Sales Order<ul> <li>Get all sales orders</li> </ul> </li> <li>Stock On Hand<ul> <li>Get a stock on hand</li> <li>Get all stocks on hand</li> </ul> </li> </ul>","tags":["Workflow\u00b2","Unleashed Software"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.unleashedSoftware/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to get a list of all the orders from Unleashed Software based on the order status. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Start - Unleashed Software</p> <p>The final workflow should look like the following image.</p> <p></p>","tags":["Workflow\u00b2","Unleashed Software"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.unleashedSoftware/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>","tags":["Workflow\u00b2","Unleashed Software"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.unleashedSoftware/#2-unleashed-software-node","title":"2. Unleashed Software node","text":"<ol> <li>First of all, you'll have to enter credentials for the Unleashed Software node. You can find out how to do that here.</li> <li>Toggle Return All to true.</li> <li>Click on the Add Filter button and select 'Order Status' from the dropdown list.</li> <li>Select 'Completed' from the Order Status dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol>","tags":["Workflow\u00b2","Unleashed Software"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.uplead/","title":"UpLead","text":"<p>UpLead helps increase sales by quickly finding, connecting, and engaging with qualified prospects.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","tags":["Workflow\u00b2","UpLead"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.uplead/#basic-operations","title":"Basic Operations","text":"<ul> <li>Company<ul> <li>Enrich</li> </ul> </li> <li>Person<ul> <li>Enrich</li> </ul> </li> </ul>","tags":["Workflow\u00b2","UpLead"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.uplead/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to get information about a company with UpLead. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - UpLead</p> <p>The final workflow should look like the following image.</p> <p></p>","tags":["Workflow\u00b2","UpLead"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.uplead/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>","tags":["Workflow\u00b2","UpLead"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.uplead/#2-uplead-node","title":"2. UpLead node","text":"<ol> <li>First of all, you'll have to enter credentials for the UpLead node. You can find out how to do that here.</li> <li>Enter the name of the company in the Company field. For example, I entered <code>Apple</code>.</li> <li>Click on Execute Node to run the workflow.</li> </ol>","tags":["Workflow\u00b2","UpLead"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.uproc/","title":"uProc","text":"<p>uProc is a data platform that allows to clean, verify, and enrich any data field.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","tags":["Workflow\u00b2","uProc"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.uproc/#basic-operations","title":"Basic Operations","text":"<p>Audio - Get advanced human audio file by provided text and language - Get an audio file by provided text and language</p> <p>Communication - Discover if a domain has a social network presence - Discover if an email is valid, hard bounce, soft bounce, spam-trap, free, temporary, and recipient exists - Discover if the email recipient exists, returning email status - Check if an email domain has an SMTP server to receive emails - Discover if the email has a social network presence - Check if an email has a valid format - Check if an email domain belongs to a disposable email service - Check if email belongs to free service provider like Gmail, Hotmail - Discover if an email exists in the Robinson list (only Spain) - Check if email belongs to a system or role-based account - Check if an email is a spam trap - Discover if an IMEI number has a valid format - Check if a LinkedIn profile is a first-degree contact - Discover if mobile phone number exists in network operator, with worldwide coverage - Discover if a mobile phone number has a valid format with worldwide coverage - Discover if a mobile phone number has a valid format (only Spain) - Discover if a mobile phone number has a valid prefix, with worldwide coverage - Discover if a Spanish mobile phone number has a valid prefix - Discover if a mobile number is switched on to call it later, with worldwide coverage - Discover if a mobile number can receive SMS with worldwide coverage - Discover if a phone (landline or mobile) exists in a Robinson list (only Spain) - Discover if a landline or mobile number has a valid prefix - Discover if a landline phone number is valid, with Spain coverage - Allows discovering if landline number has a good international format, depending on the country - Discover if a landline phone number prefix exists, with worldwide coverage - Clean a phone removing non allowed characters - Allows getting country code of a mobile phone number with international format - Allows getting a domain from an email - Discover an email by company website or domain and prospect's first-name and last-name - Check if an email is personal or generic - Get emails list found on the internet by domain or URI - Get an emails list found on the internet by non-free email - Get emails list found inside the website by domain or URI - Get three first web references of an email published on the internet - Allows you to fix the email domain of those misspelled emails - Fix the international prefix of a phone based on the ISO code of a country - Get GDPR compliant emails list by domain for your Email Marketing campaigns in Europe - Discover if mobile exist via real-time HLR query - Get portability data about a landline or mobile number, only for Spain - Extract results from a LinkedIn search (employees in a company) - Get members in a LinkedIn group - Extract the last 80 connections from your LinkedIn profile - Extract the last 80 invitations sent from your LinkedIn - Get users who comment on a post on LinkedIn - Get users who like a post on LinkedIn - Extract a LinkedIn profile - Extract results from a LinkedIn search (profiles) - Extract fastly last profiles that have published content on LinkedIn by specific keywords - Discover if mobile exist via real-time HLR query, as well as portability and roaming data - Get existence, portability, and roaming of a mobile phone via MNP query - Discover if mobile or landline prefix exists in Spain - Allows normalizing email address, removing non allowed characters - Allows normalizing a mobile phone, removing non-allowed characters - Parse phone number in multiple fields and verify format and prefix validity - Allows getting country prefix number by country code - Discover an email by company website or domain and prospect's first-name and last-name - This tool parses a social URI address and extracts any available indicators - Search all social networks by domain, parses all found URLs, and returns social networks KPIs - Discover if a domain or a website has social activity and returns all social network profiles found - Discover if an email has social activity, and get all social network profiles found - Discover if a mobile phone has social activity, and get all social network profiles found - Get web references for an email published on the internet - Send a custom message invitation to a non connected LinkedIn profile - Send a custom email to a recipient - Send a custom SMS to a recipient with worldwide coverage - Send a custom invitation message if a profile is connected or a custom message otherwise - Visits a profile to show interest and get profile views in return from contact, increasing your LinkedIn network - Send a custom private message to a connected LinkedIn profile - Get an email by contact's LinkedIn profile URI - Discover an email by company's name and prospect's full name - Discover an email by company's website or domain and prospect's full name</p> <p>Company - Discover if a CIF card number is valid - Check if a company is a debtor by TaxID - Check if the ISIN number is valid - Check if the SS number is valid, only for Spain - Identify and classify a prospecting role in detecting the right area and seniority to filter later - Get a company's contact, social, and technology data by domain - Get a company's contact, social, and technology data by email - Get a company's data by CIF - Get a company's data by DUNS - Get a company's data by domain - Get a company's data by email - Get a company's data by IP address - Get a company's data by name - Get a company's data by phone number - Get a company's data by social networks URI (LinkedIn, Twitter) - Get a company's name by company domain - Get professional data of a decision-maker by company name/domain and area - Discover more suitable decision-maker using search engines (Bing) by company name and area - Get professional emails of decision-makers by company domain and area - Discover up to ten decision-makers using search engines (Bing) by company name and area - Get a company's domain by company name - Get employees by company name or domain, area, seniority, and country - Get a company's Facebook profile by name without manually searching on Google or Facebook - Get geocoded company data by IP address - Get a company's LinkedIn profile by name without manually searching on Google or LinkedIn - Allows normalizing a CIF number, removing non-allowed characters - Get a company's phone by company domain - Get a company's sales data by a company's DUNS number - Get a company's sales data by a company's domain name - Get a company's sales data by a company's name - Get a company's sales data by a company's tax ID (CIF) - Get a company's Twitter profile by name without manually searching on Google or Twitter</p> <p>Finance - Discover if a BIC number has a valid format - Discover if an account number has a valid format - Check if credit card number checksum is valid - Discover if an IBAN account number has a valid format - Discover if an ISO currency code is valid - Check if a TIN exists in Europe - Convert amount between supported currencies and an exchange date - Get credit card type - Get multiple ISO currency codes by a country name - Get all ISO currency by an IP address - Get multiple ISO currency codes by a country ISO code - Get ISO currency code by IP address - Get ISO currency code by a currency ISO code - Get ISO currency code by an ISO country code - Get ISO currency code by a country name - Get related European TIN in Europe - Get IBAN by account number of the country - Get to search data bank information by IBAN account number - Get country VAT by address - Get country VAT by coordinates - Get VAT by IP address - Get VAT value by country ISO code - Get VAT by phone number, with worldwide coverage - Get VAT by zipcode</p> <p>Geographical - Check if a country's ISO code exists - Discover if the distance between two coordinates is equal to another - Discover if the distance(in kilometers) between two coordinates is greater than the given input - Discover if the distance(in kilometers) between two coordinates is greater or equal to the given input - Discover if the distance(in kilometers) between two coordinates is lower than the given input - Check if an address exists by a partial address search - Check if a house number exists by a partial address search - Check if coordinates have a valid format - Discover if a zipcode number prefix exists (only for Spain) - Discover if a zipcode number has a valid format (only for Spain) - Get cartesian coordinates(X, Y, Z/WGS84) by Latitude and Longitude - Get multiple cities by phone prefix (only for Spain) - Get multiple cities by partial initial text (only for Spain) - Get multiple cities by zip code prefix (only for Spain) - Get a city from IP - City search by partial name (only for Spain) - Discover the city name by a local phone number (only for Spain) - Discover the city name by the zip code (only for Spain) - Discover the community name from a zipcode (only for Spain) - Discover latitude and longitude coordinates of an IP address - Discover latitude and longitude coordinates of a postal address - Get multiple country names by currency ISO code - Get multiple countries by ISO code - Get multiple country names by initial name - Get country name by currency ISO code - Get country name by IP address - Get country name by its ISO code - Get country by a prefix - Get country name by phone number, with worldwide coverage - Get Aplha2 code by a country prefix or a name - Get decimal coordinates (degrees, minutes, and seconds) by latitude and longitude - Returns straight-line distance(in kilometers) between two addresses - Returns straight-line distance(in kilometers) between two GPS coordinates (latitude and longitude) - Returns straight-line distance(in kilometers) between two IP addresses - Returns straight-line distance(in kilometers) between two landline phones, using city and province of every phone - Returns straight-line distance(in kilometers) between two zip codes, using city and province of every zip code - Get an exact address by a partial address search - Discover geographical, company, timezone, and reputation data by IPv4 address - Discover the city name, zip code, province, country, latitude, and longitude from an IPv4 or IPv6 address and geocodes it - Parse postal address into separated fields, getting an improved resolution - Discover locale data (currency, language) by IPv4 or IPv6 address - Discover the city name, zip code, province, or country by latitude and longitude - Discover the city name, zip code, province, country, latitude, and longitude from an IPv4 or IPv6 address - Discover the city and the province from a landline phone number (only Spain) - Discover location data by name - Discover the city and the province from a zipcode number (only Spain) - Get the most relevant locations by name - Get the most relevant locations by name, category, location, and radius - Get multiple personal names by a prefix - Discover network data by IPv4 or IPv6 address - Allow normalizing an address by removing non allowed characters - Allow normalizing a city by removing non allowed characters - Allow normalizing a country by removing non allowed characters - Allow normalizing a province by removing non allowed characters - Allow normalizing a zipcode by removing non allowed characters - Parse postal address into separated fields, getting a basic resolution - Discover the province name from an IP address - Get the first province by a name prefix (only for Spain) - Discover the province name from a landline phone number (only for Spain) - Discover the province name from a zipcode number (only for Spain) - Get a province list by a name prefix (only for Spain) - Get a province list by a phone prefix (only for Spain) - Get a province list by a zipcode prefix (only for Spain) - Discover reputation by IPv4 or IPv6 address - Returns driving routing time, distance, fuel consumption, and cost between two addresses - Returns driving routing time, distance, fuel consumption, and cost between two GPS coordinates - Returns driving routing time, distance, fuel consumption, and cost between two  IP addresses - Returns driving routing time, distance, fuel consumption, and cost between two landline phones, using city and province of every phone (only for Spain) - Returns driving routing time, distance, fuel consumption, and cost between two zip codes, using city and province of every zip code - Discover date-time data by IPv4 or IPv6 address - Get USNG coordinates by latitude and longitude - Get UTM coordinates by latitude and longitude - Discover the zip code if you have an IP address - Get the first zipcode by prefix, only for Spain - Get multiple zip codes by prefix, with worldwide coverage</p> <p>Image - Get QR code decoded content by an image URL - It allows discovering all geographical and technical EXIF metadata present in a photographic JPEG image - Get an encoded barcode by number and a required standard - Get QR code encoded by a text - Generate a new image by URL and text - Discover logo (favicon) used in a domain - Generate a screenshot by URL provided using Chrome browser</p> <p>Internet - Check if a domain exists - Check if a domain has a DNS record - Check if a  domain has the given IP address assigned - Check if a domain has an MX record - Check if a domain has a valid SSL certificate - Check if a domain has a valid format - Check if a domain accepts all emails, existing or not - Check if a domain is a free service domain provider - Check if a domain is temporary or not - Discover if a computer is switched on - Discover if service in a port is available - Check if an URL contains a string or regular expression - Check if an URL exists - Check that an URL has a valid format - Get full SSL certificate data by a domain (or website) and monitor your certificate status - Get text data from web, pdf or image allowing to filter some elements by regular expressions or field names - Decode URL to recover original - Get valid, existing, and default URL when accessing a domain using a web browser - Discover device features by a user agent - Get the network name of and IP address - Get the domain record by its type - Encode URL to avoid problems - Copy file from one URL to another URL - Fix an IP address to the right format - Get the IPv4 address linked with a domain - Convert a number to an IP address - Get ISP known name of email domain name - Convert an IP address to numeric notation - Scan a host and returns the most commonly open ports - Obtains a list with multiple results from a website - Obtains the content of a website - Decode URL into multiple fields - Generate a PDF file by URL (provided using Chrome browser) - Get the root domain of any web address, removing non needed characters - Generates shareable URIs to use on social networks and email using a content URI and a text - Get data from the existing table in an HTML page or a PDF file - Discover client and server technologies used in a domain - Discover client and server technologies used in web pages - Analyze URL's health status about SSL, broken links, conflictive HTTP links with SSL, and more - Get website visits and rank of any domain - Get a domain's Whois data by fields - Get Whois data fields by IP address provided</p> <p>Personal - Check if age is between two numbers - Check if date returns an age between 20 and 29 - Check if date returns an age between 40 and 49 - Check if age is greater than another - Check if birth date returns an age greater than 64 - Check if birth date belongs to an adult (18 years for Spain) - Check if age is lower than another - Check if age is lower or equal than another - Check if ages are equal - Discover if a date is between two dates - Discover if a date is greater - Discover if a date is greater or equal - Discover if a date belongs to a leap year - Discover if a date is lower - Discover if a date is lower or equal - Discover if a date has a valid format - Discover if a gender value is valid - Discover if an NIE card number is valid - Discover if a NIF card number is valid - Check if a personal name exists in the INE data source (only for Spain) - Check if a name contains accepted characters - Discover if a NIF exists in the Robison list (only for Spain) - Check if surname contains accepted characters - Check if a personal surname appears in INE data source (only for Spain) - Discover if a DNI card number is valid - Discover the age of a birt date - Discover the age range of a person by birth date - Get the difference between two dates - Discover the gender of a person by the email - Discover the gender of a person or company by the name - Get LinkedIn employee profile URI by business email - Get LinkedIn employee profile URI by first name, last name, and company - Discover the letter of a DNI card number - Get first personal name matching by prefix and gender from INE data source (only for Spain) - Allow normalizing a DNI number by removing non allowed characters - Allow normalizing an NIE number by removing non allowed characters - Normalize name by removing non allowed characters - Normalize surname - Get parsed date-time - Normalize full name, fixing abbreviations, sorting if necessary, and returning first name, last name, and gender - Get prospect's contact data and the company's location and social data by email - Get contact, location, and social data by email and company name and location - Get personal and social data by social profile - Get personal data by email - Get personal data by first name, last name, company, and location - Get personal data by mobile - Get personal data by social network profile - Generate random fake data - Get first personal surname matching by prefix from INE data source (only for Spain) - Get personal surname matching by prefix from INE data source (only for Spain) - Get Twitter profile by first name, last name, and company - Get Xing profile by first name, last name, and company - Add a contact email to a person list</p> <p>Product - Check if an ASIN code exists on the Amazon Marketplace - Check if an ASIN code has a valid format - Check if an EAN code exists on Amazon Marketplace - Check if an EAN barcode has a valid format - Check if an EAN barcode of 13 digits has a valid format - Check if an EAN barcode of 14 digits has a valid format - Check if an EAN barcode of 18 digits has a valid format - Check if an EAN barcode of 8 digits has a valid format - Check if a GTIN barcode has a valid format - Check if a GTIN barcode of 13 digits has a valid format - Check if a GTIN barcode of 14 digits has a valid format - Check if a GTIN barcode of 8 digits has a valid format - Allows checking if an ISBN book exists - Allows checking if an ISBN10/13 code has a valid format - Allows checking if an ISBN10 code has a valid format - Allows checking if an ISBN13 code has a valid format - Check if a UPC exists - Check if a UPC has a valid format - Get ASIN by EAN - Get a book by author's surname - Get all publications by category - Get book data by an editor's name - Get book or publication data by 10 or 13 digits ISBN code - Get book data by title - Get books by author's surname - Get all books by category - Get all books by editor - Get all books by title - Get EAN code by ASIN code - Get product data on a UPC on Amazon Marketplace</p> <p>Security - Check if a Luhn number is valid - Check if a password is strong - Check if a UUID number is valid - Get blacklists for a domain - Get blacklists for an IP address</p> <p>Text - Check if a string only contains alphabets - Check if a string is alphanumeric - Check if a string is boolean - Check if the largest item in a list matches the provided item - Check if IPv4 or IPv6 address has a valid format - Check if IPv4 address has a valid format - Check if IPv6 address has a valid format - Check if the length of a list is between two quantities - Checks if the length of a list equals a specified quantity - Checks if the length of a list is greater than or equal to a certain amount - Check if the length of a list is lower than a certain amount - Check if the list contains a specific item - Check if the list ends with a specific element - Check if a list is sorted in ascending order - Check if the list starts with a specific element - Checks if the smallest element in a list matches the provided element - Check if a string contains only numbers - Check if a string contains a character - Check if a string ends with a character - Check if a string has no content - Check if a string contains random characters - Check if a string contains a value that matches with a regular expression - Check if the length of a string is between two numbers - Check if the length of a string is equal to a number - Check if the length of a string is greater than a number - Check if the length of a string is greater or equal to a number - Check if the length of a string is lower than a number - Check if the length of a string is lower or equal to a number - Check if a string starts with a character - Check if a string contains only lowercase characters - Check if a string contains only uppercase characters - Check if a list consists of unique elements - Check if the supplied values form a valid list of elements - Check if the number of words in a sentence is between two determined quantities - Check if the number of words in a sentence equals a certain amount - Check if the number of words in a sentence is greater than a certain amount - Check if the number of words in a sentence is greater than - Check if the word count is lower - Check if the number of words present in a sentence is less than or equal to a quantity - Convert a string to Base64 encoded value - Discover banned English words in an email body or subject - Get field names by analyzing the field value provided - Format a string using a format pattern - Generate random string using a regular expression as a pattern - Return the largest item in a list - Return the smallest item in a list - Convert to lowercase - Convert a string to MD5 encoded value - Merge two strings - Normalize a string depending on the field name - Analyze string and return all emails, phones, zip codes, and links - Convert a string to an SHA encoded value - Analyze an English text with emojis and detect sentiment - Returns an ascending sorted list - Split a value into two parts and join them using a separator from the original string - Split a value into two parts using a separator from the original string - Get the length of a string - Lookup string between multiple values by fuzzy logic and regex patterns - Clean abuse words from a string - Replace the first value found in a string with another - Replace all values found in a string with another - Translate a text into any language - Return a single list with no repeating elements - Convert all letters to uppercase - Count total words in a text</p>","tags":["Workflow\u00b2","uProc"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.uproc/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to take a screenshot of a website and send it to a Telegram channel. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Start - uProc - Telegram</p> <p>The final workflow should look like the following image.</p> <p></p>","tags":["Workflow\u00b2","uProc"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.uproc/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>","tags":["Workflow\u00b2","uProc"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.uproc/#2-uproc-node-geturlscreenshot","title":"2. uProc node (getUrlScreenshot)","text":"<p>This node will return the screenshot of the Doc\u00b2 website. If you want to get the screenshot of a different website, enter the domain of that website instead.</p> <ol> <li>First of all, you'll have to enter credentials for the uProc node. You can find out how to do that here.</li> <li>Select 'Image' from the Resource dropdown list.</li> <li>Select 'Get Screenshot by URL' from the Operation dropdown list.</li> <li>Enter <code>https://n8n.io</code> in the URL field.</li> <li>Select '1024' from the Width dropdown list.</li> <li>Select 'Yes' from the Fullpage dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns a URL of the screenshot of the website.</p> <p></p>","tags":["Workflow\u00b2","uProc"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.uproc/#3-telegram-node-sendphoto-message","title":"3. Telegram node (sendPhoto: message)","text":"<p>This node will send the screenshot that we received from the previous node.</p> <ol> <li>First of all, you'll have to enter credentials for the Telegram node. You can find out how to do that here.</li> <li>Select 'Send Photo' from the Operation dropdown list.</li> <li>Enter a chat ID in the Chat ID field. Refer to the FAQs of the Telegram node to learn how to get the chat ID.</li> <li> <p>Click on the gears icon next to the Photo field and click on Add Expression.</p> </li> <li> <p>Select the following in the Variable Selector section: Nodes &gt; uProc &gt; Output Data &gt; JSON &gt; message &gt; result. You can also add the following expression: <code>{{$node[\"uProc\"].json[\"message\"][\"result\"]}}</code>.</p> </li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node sends the screenshot image to the channel that we specify.</p> <p></p>","tags":["Workflow\u00b2","uProc"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.uptimeRobot/","title":"UptimeRobot","text":"<p>UptimeRobot is an uptime monitoring service. It monitors your website every 5 mins. You can set an HTTP/S, ping, port, keyword, or heartbeat monitor and get notifications to your email, phone, Telegram, Slack, Twitter, etc.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","tags":["Workflow\u00b2","UptimeRobot"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.uptimeRobot/#basic-operations","title":"Basic Operations","text":"<ul> <li>Account<ul> <li>Get account details</li> </ul> </li> <li>Alert Contact<ul> <li>Create an alert contact</li> <li>Delete an alert contact</li> <li>Get an alert contact</li> <li>Get all alert contacts</li> <li>Update an alert contact</li> </ul> </li> <li>Maintenance Window<ul> <li>Create a maintenance window</li> <li>Delete a maintenance window</li> <li>Get a maintenance window</li> <li>Get all a maintenance windows</li> <li>Update a maintenance window</li> </ul> </li> <li>Monitor<ul> <li>Create a monitor</li> <li>Delete a monitor</li> <li>Get a monitor</li> <li>Get all monitors</li> <li>Reset a monitor</li> <li>Update a monitor</li> </ul> </li> <li>Public Status Page<ul> <li>Create a public status page</li> <li>Delete a public status page</li> <li>Get a public status page</li> <li>Get all a public status pages</li> </ul> </li> </ul>","tags":["Workflow\u00b2","UptimeRobot"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.uptimeRobot/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to create, update, and get a monitor using the UptimeRobot node. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Start - UptimeRobot</p> <p>The final workflow should look like the following image.</p> <p></p>","tags":["Workflow\u00b2","UptimeRobot"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.uptimeRobot/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>","tags":["Workflow\u00b2","UptimeRobot"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.uptimeRobot/#2-uptimerobot-node-create-monitor","title":"2. UptimeRobot node (create: monitor)","text":"<p>This node will create a new monitor of the type <code>HTTP(S)</code>.</p> <ol> <li>First of all, you'll have to enter credentials for the OpenWeatherMap node. You can find out how to do that here.</li> <li>Select 'Monitor' from the Resource dropdown list.</li> <li>Select 'Create' from the Operation dropdown list.</li> <li>Enter <code>n8n</code> in the Friendly Name field.</li> <li>Select 'HTTP(S)' from the Type dropdown list.</li> <li>Enter <code>https://n8n.io</code> in the URL field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns data about the current weather in Berlin.</p> <p></p>","tags":["Workflow\u00b2","UptimeRobot"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.uptimeRobot/#3-uptimerobot-node-update-monitor","title":"3. UptimeRobot node (update: monitor)","text":"<p>This node will update the monitor that we created in the previous node.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Monitor' from the Resource dropdown list.</li> <li>Select 'Update' from the Operation dropdown list.</li> <li>Click on the gears icon next to the ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$json[\"id\"]}}</code>.</li> <li>Click on Add Field and select 'Friendly Name' from the dropdown list.</li> <li>Enter <code>n8n website</code> in the Friendly Name field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node updates the friendly name of the monitor that we created in the previous node.</p> <p></p>","tags":["Workflow\u00b2","UptimeRobot"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.uptimeRobot/#4-uptimerobot-node-get-monitor","title":"4. UptimeRobot node (get: monitor)","text":"<p>This node will get the information of the monitor that we created in the previous node.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Monitor' from the Resource dropdown list.</li> <li>Select 'Update' from the Operation dropdown list.</li> <li>Click on the gears icon next to the ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$json[\"id\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns the information of the monitor that we created earlier.</p> <p></p>","tags":["Workflow\u00b2","UptimeRobot"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.urlScanIo/","title":"urlscan.io","text":"<p>urlscan.io is a free service to scan and analyse websites. When a URL is submitted to urlscan.io, an automated process will browse to the URL like a regular user and record the activity that this page navigation creates.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","tags":["Workflow\u00b2","urlscan.io"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.urlScanIo/#basic-operations","title":"Basic Operations","text":"<ul> <li>Scan<ul> <li>Get</li> <li>Get All</li> <li>Perform</li> </ul> </li> </ul>","tags":["Workflow\u00b2","urlscan.io"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.vero/","title":"Vero","text":"<p>Vero is a messaging platform that helps manage real-time data to create a better customer experience.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","tags":["Workflow\u00b2","Vero"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.vero/#basic-operations","title":"Basic Operations","text":"<ul> <li>User<ul> <li>Create or update a user profile</li> <li>Change a users identifier</li> <li>Unsubscribe a user.</li> <li>Resubscribe a user.</li> <li>Delete a user.</li> <li>Adds a tag to a users profile.</li> <li>Removes a tag from a users profile.</li> </ul> </li> <li>Event<ul> <li>Track an event for a specific customer</li> </ul> </li> </ul>","tags":["Workflow\u00b2","Vero"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.vero/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to create a user profile in Vero. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - Vero</p> <p>The final workflow should look like the following image.</p> <p></p>","tags":["Workflow\u00b2","Vero"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.vero/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>","tags":["Workflow\u00b2","Vero"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.vero/#2-vero-node","title":"2. Vero node","text":"<ol> <li>First of all, you'll have to enter credentials for the Vero node. You can find out how to do that here.</li> <li>Enter the unique identifier of the user in the ID field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>","tags":["Workflow\u00b2","Vero"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.vonage/","title":"Vonage","text":"<p>Vonage provides unified communications, contact centers, and programmable communications APIs.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","tags":["Workflow\u00b2","Vonage"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.vonage/#basic-operations","title":"Basic Operations","text":"<ul> <li>SMS<ul> <li>Send</li> </ul> </li> </ul>","tags":["Workflow\u00b2","Vonage"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.vonage/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to send daily weather updates via an SMS message using the Vonage node. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Cron - OpenWeatherMap - Vonage</p> <p>The final workflow should look like the following image.</p> <p></p>","tags":["Workflow\u00b2","Vonage"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.vonage/#1-cron-node","title":"1. Cron node","text":"<p>The Cron node will trigger the workflow daily at 9 AM.</p> <ol> <li>Click on Add Cron Time.</li> <li>Set hours to 9 in the Hour field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the Cron node is configured to trigger the workflow every day at 9 AM.</p> <p></p>","tags":["Workflow\u00b2","Vonage"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.vonage/#2-openweathermap-node-current-weather","title":"2. OpenWeatherMap node (Current Weather)","text":"<p>This node will return data about the current weather in Berlin. To get the weather updates for your city, you can enter the name of your city instead.</p> <ol> <li>First of all, you'll have to enter credentials for the OpenWeatherMap node. You can find out how to do that here.</li> <li>Enter <code>berlin</code> in the City field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns data about the current weather in Berlin.</p> <p></p>","tags":["Workflow\u00b2","Vonage"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.vonage/#3-vonage-node-send-sms","title":"3. Vonage node (send: sms)","text":"<p>This node will send an SMS with the weather update, which was sent by the previous node.</p> <ol> <li>First of all, you'll have to enter credentials for the Vonage node. You can find out how to do that here.</li> <li>Enter a Vonage phone number or the brand name in the From field.</li> <li>Enter the receiver's phone number in the To field.</li> <li> <p>Click on the gears icon next to the Message field and click on Add Expression.</p> </li> <li> <p>Enter the following message in the Expression field: <code>Hey! The temperature outside is {{$node[\"OpenWeatherMap\"].json[\"main\"][\"temp\"]}}\u00b0C.</code>.</p> </li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node sends an SMS to the phone number that we specified with the weather update, which was sent by the previous node.</p> <p></p>","tags":["Workflow\u00b2","Vonage"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.webflow/","title":"Webflow","text":"<p>Webflow is an application that allows you to build responsive websites with browser-based visual editing software.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","tags":["Workflow\u00b2","Webflow"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.webflow/#basic-operations","title":"Basic Operations","text":"<ul> <li>Item<ul> <li>Create</li> <li>Delete</li> <li>Get</li> <li>Get All</li> <li>Update</li> </ul> </li> </ul>","tags":["Workflow\u00b2","Webflow"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.webflow/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to create, update, and get an item from Webflow. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Start - Webflow</p> <p>The final workflow should look like the following image.</p> <p></p>","tags":["Workflow\u00b2","Webflow"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.webflow/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>","tags":["Workflow\u00b2","Webflow"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.webflow/#2-webflow-node-create-item","title":"2. Webflow node (create: item)","text":"<p>This node will create a new collection of the type <code>Team Members</code> in Webflow. If you want to create a collection with a different type, use that type instead.</p> <ol> <li>First of all, you'll have to enter credentials for the Webflow node. You can find out how to do that here.</li> <li>Select 'Create' from the Operation dropdown list.</li> <li>Select your site from the Site ID dropdown list.</li> <li>Select 'Team Members' from the Collection ID dropdown list.</li> <li>Click on the Add Field button.</li> <li>Select 'Name (PlainText) (required)' from the Field ID dropdown list. If you're using a different collection type, select the field present in that collection.</li> <li>Enter <code>n8n</code> in the Field Value field.</li> <li>Click on the Add Field button.</li> <li>Select 'Slug (PlainText) (required)' from the Field ID dropdown list. If you're using a different collection type, select the field present in that collection.</li> <li>Enter <code>n8n</code> in the Field Value field.</li> <li>Click on the Add Field button.</li> <li>Select 'Archived (Bool) (required)' from the Field ID dropdown list. If you're using a different collection type, select the field present in that collection.</li> <li>Enter <code>false</code> in the Field Value field.</li> <li>Click on the Add Field button.</li> <li>Select 'Draft (Bool) (required)' from the Field ID dropdown list. If you're using a different collection type, select the field present in that collection.</li> <li>Enter <code>false</code> in the Field Value field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node creates a new item for the collection type <code>Team Members</code> in Webflow.</p> <p></p>","tags":["Workflow\u00b2","Webflow"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.webflow/#3-webflow1-node-update-item","title":"3. Webflow1 node (update: item)","text":"<p>This node will update the item that we created using the previous node.</p> <ol> <li>Select the credentials that you entered in the previous Webflow node.</li> <li>Select 'Update' from the Operation dropdown list.</li> <li>Select your site from the Site ID dropdown list.</li> <li>Select 'Team Members' from the Collection ID dropdown list.</li> <li>Click on the gears icon next to the Item ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; _id. You can also add the following expression: <code>{{$json[\"_id\"]}}</code>.</li> <li>Click on the Add Property button. Click on the Add Field button.</li> <li>Select 'Name (PlainText) (required)' from the Field ID dropdown list. If you're using a different collection type, select the field present in that collection.</li> <li>Click on the gears icon next to the Field Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; name. You can also add the following expression: <code>{{$json[\"name\"]}}</code>.</li> <li>Click on the Add Field button.</li> <li>Select 'Slug (PlainText) (required)' from the Field ID dropdown list. If you're using a different collection type, select the field present in that collection.</li> <li>Click on the gears icon next to the Field Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; slug. You can also add the following expression: <code>{{$json[\"slug\"]}}</code>.</li> <li>Click on the Add Field button.</li> <li>Select 'Archived (Bool) (required)' from the Field ID dropdown list. If you're using a different collection type, select the field present in that collection.</li> <li>Click on the gears icon next to the Field Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; _archived. You can also add the following expression: <code>{{$json[\"_archived\"]}}</code>.</li> <li>Click on the Add Field button.</li> <li>Select 'Draft (Bool) (required)' from the Field ID dropdown list. If you're using a different collection type, select the field present in that collection.</li> <li>Click on the gears icon next to the Field Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; _draft. You can also add the following expression: <code>{{$json[\"_draft\"]}}</code>.</li> <li>Click on the Add Field button.</li> <li>Select 'Avatar (ImageRef)' from the Field ID dropdown list. If you're using a different collection type, select the field present in that collection.</li> <li>Enter <code>https://n8n.io/n8n-logo.png</code> in the Value field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node updates the item that got created previously.</p> <p></p>","tags":["Workflow\u00b2","Webflow"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.webflow/#4-webflow2-node-get-item","title":"4. Webflow2 node (get: item)","text":"<p>This node will retrieve the information about the item that we created earlier.</p> <ol> <li>Select the credentials that you entered in the previous Webflow node.</li> <li>Select your site from the Site ID dropdown list.</li> <li>Select 'Team Members' from the Collection ID dropdown list.</li> <li>Click on the gears icon next to the Item ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; _id. You can also add the following expression: <code>{{$json[\"_id\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node retrieves the information of the item that we created earlier.</p> <p></p>","tags":["Workflow\u00b2","Webflow"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.wekan/","title":"Wekan","text":"<p>Wekan is an open-source kanban board that allows a card-based task and to-do management.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","tags":["Workflow\u00b2","Wekan"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.wekan/#basic-operations","title":"Basic Operations","text":"<ul> <li>Board<ul> <li>Create a new board</li> <li>Delete a board</li> <li>Get the data of a board</li> <li>Get all user boards</li> </ul> </li> <li>Card<ul> <li>Create a new card</li> <li>Delete a card</li> <li>Get a card</li> <li>Get all cards</li> <li>Update a card</li> </ul> </li> <li>Card Comment<ul> <li>Create a comment on a card</li> <li>Delete a comment from a card</li> <li>Get a card comment</li> <li>Get all card comments</li> </ul> </li> <li>Checklist<ul> <li>Create a new checklist</li> <li>Delete a checklist</li> <li>Get the data of a checklist</li> <li>Returns all checklists for the card</li> </ul> </li> <li>Checklist Item<ul> <li>Delete a checklist item</li> <li>Get a checklist item</li> <li>Update a checklist item</li> </ul> </li> <li>List<ul> <li>Create a new list</li> <li>Delete a list</li> <li>Get the data of a list</li> <li>Get all board lists</li> </ul> </li> </ul>","tags":["Workflow\u00b2","Wekan"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.wekan/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to create a board and two lists called <code>To Do</code> and <code>Done</code> using the Wekan node. It also allows you to create a card and update the list ID of the card, enabling you to move it from the <code>To Do</code> list to the <code>Done</code> list. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Start - Wekan</p> <p>The final workflow should look like the following image.</p> <p></p>","tags":["Workflow\u00b2","Wekan"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.wekan/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>","tags":["Workflow\u00b2","Wekan"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.wekan/#2-wekan-node-create-board","title":"2. Wekan node (create: board)","text":"<p>This node will create a board called <code>Documentation</code> in Wekan. To create a board with a different name, you can enter the name of your board instead.</p> <ol> <li> <p>First of all, you'll have to enter credentials for the Wekan node. You can find out how to do that here.</p> </li> <li> <p>Select 'Board' from the Resource dropdown list.</p> </li> <li>Enter <code>Documentation</code> in the Title field.</li> <li>Select the owner of the board from the Owner dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node creates a new board with the title <code>Documentation</code>.</p> <p></p>","tags":["Workflow\u00b2","Wekan"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.wekan/#3-wekan1-node-create-list","title":"3. Wekan1 node (create: list)","text":"<p>This node will create a list with the title <code>To Do</code> in the <code>Documentation</code> board, which was created using the previous node.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'List' from the Resource dropdown list.</li> <li>Click on the gears icon next to the Board ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Wekan &gt; Output Data &gt; JSON &gt; _id. You can also add the following expression: <code>{{$node[\"Wekan\"].json[\"_id\"]}}</code>.</li> <li>Enter <code>To Do</code> in the Title field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node creates a new list called <code>To Do</code> in the <code>Documentation</code> board.</p> <p></p>","tags":["Workflow\u00b2","Wekan"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.wekan/#4-wekan2-node-create-list","title":"4. Wekan2 node (create: list)","text":"<p>This node will create a list with the title <code>Done</code> in the <code>Documentation</code> board, which was created using the Wekan node.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'List' from the Resource dropdown list.</li> <li>Click on the gears icon next to the Board ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Wekan &gt; Output Data &gt; JSON &gt; _id. You can also add the following expression: <code>{{$node[\"Wekan\"].json[\"_id\"]}}</code>.</li> <li>Enter <code>Done</code> in the Title field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node creates a new list called <code>Done</code> in the <code>Documentation</code> board.</p> <p></p>","tags":["Workflow\u00b2","Wekan"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.wekan/#5-wekan3-node-create-card","title":"5. Wekan3 node (create: card)","text":"<p>This node will create a card in the <code>Documentation</code> board under the list titled <code>To Do</code>, which was created using the Wekan1 node.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Click on the gears icon next to the Board ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Wekan &gt; Output Data &gt; JSON &gt; _id. You can also add the following expression: <code>{{$node[\"Wekan\"].json[\"_id\"]}}</code>.</li> <li>Click on the gears icon next to the List ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Wekan1 &gt; Output Data &gt; JSON &gt; _id. You can also add the following expression: <code>{{$node[\"Wekan1\"].json[\"_id\"]}}</code>.</li> <li>Enter <code>Document Wekan node</code> in the Title field.</li> <li>Select 'Default' from the Swimlane ID dropdown list.</li> <li>Select an author from the Author ID dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node creates a new card with the title <code>Document Wekan node</code> in the <code>To Do</code> list of the <code>Documentation</code> board.</p> <p></p>","tags":["Workflow\u00b2","Wekan"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.wekan/#6-wekan4-node-update-card","title":"6. Wekan4 node (update: card)","text":"<p>This node will update the list ID of the card created by the previous node and move it from the <code>To Do</code> list to the <code>Done</code> list.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Update' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Board ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Wekan &gt; Output Data &gt; JSON &gt; _id. You can also add the following expression: <code>{{$node[\"Wekan\"].json[\"_id\"]}}</code>.</li> <li>Click on the gears icon next to the List ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Wekan1 &gt; Output Data &gt; JSON &gt; _id. You can also add the following expression: <code>{{$node[\"Wekan1\"].json[\"_id\"]}}</code>.</li> <li>Click on the gears icon next to the Card ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Wekan3 &gt; Output Data &gt; JSON &gt; _id. You can also add the following expression: <code>{{$node[\"Wekan3\"].json[\"_id\"]}}</code>.</li> <li>Click on the Add Field button and select 'List ID'.</li> <li>Click on the gears icon next to the List ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Wekan2 &gt; Output Data &gt; JSON &gt; _id. You can also add the following expression: <code>{{$node[\"Wekan2\"].json[\"_id\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node updates the list id of the card that we created in the previous node and moves it from the <code>To Do</code> list to the <code>Done</code> list.</p> <p></p>","tags":["Workflow\u00b2","Wekan"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.wekan/#faqs","title":"FAQs","text":"","tags":["Workflow\u00b2","Wekan"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.wekan/#how-to-load-all-the-parameters-for-the-node","title":"How to load all the parameters for the node?","text":"<p>To load all the parameters, for example, Author ID, you need to give admin permissions to the user. Refer to the Wekan documentation to learn how to change permissions.</p>","tags":["Workflow\u00b2","Wekan"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.wise/","title":"Wise","text":"<p>Wise allows you to transfer money abroad with low-cost money transfers, receive money with international account details, and track transactions on your phone.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","tags":["Workflow\u00b2","Wise"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.wise/#basic-operations","title":"Basic Operations","text":"<ul> <li>Account<ul> <li>Retrieve balances for all account currencies of this user.</li> <li>Retrieve currencies in the borderless account of this user.</li> <li>Retrieve the statement for the borderless account of this user.</li> </ul> </li> <li>Exchange Rate<ul> <li>Get</li> </ul> </li> <li>Profile<ul> <li>Get</li> <li>Get All</li> </ul> </li> <li>Recipient<ul> <li>Get All</li> </ul> </li> <li>Quote<ul> <li>Create</li> <li>Get</li> </ul> </li> <li>Transfer<ul> <li>Create</li> <li>Delete</li> <li>Execute</li> <li>Get</li> <li>Get All</li> </ul> </li> </ul>","tags":["Workflow\u00b2","Wise"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.wise/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to create a quote and a transfer, execute the transfer, and get the information of the transfer using the Wise node. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Start - Wise</p> <p>The final workflow should look like the following image.</p> <p></p>","tags":["Workflow\u00b2","Wise"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.wise/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>","tags":["Workflow\u00b2","Wise"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.wise/#2-wise-node-create-quote","title":"2. Wise node (create: quote)","text":"<p>This node will create a new quote in Wise.</p> <ol> <li>First of all, you'll have to enter credentials for the Wise node. You can find out how to do that here.</li> <li>Select 'Quote' from the Resource dropdown list.</li> <li>Select 'Create' from the Operation dropdown list.</li> <li>Select a profile from the Profile ID dropdown list.</li> <li>Select a target account from the Target Account ID dropdown list.</li> <li>Enter an amount in the Amount field.</li> <li>Enter the source currency in the Source Currency field.</li> <li>Enter the target currency in the Target Currency field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node creates a new quote.</p> <p></p>","tags":["Workflow\u00b2","Wise"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.wise/#3-wise1-node-create-transfer","title":"3. Wise1 node (create: transfer)","text":"<p>This node will create a new transfer for the quote that we created in the previous node.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Transfer' from the Resource dropdown list.</li> <li>Select a profile from the Profile ID dropdown list.</li> <li>Click on the gears icon next to the Quote ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$json[\"id\"]}}</code>.</li> <li>Select the target account from the Target Account ID dropdown list.</li> <li>Click on the Add Field button.</li> <li>Enter a description in the Reference field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node creates a new transfer for the quote that we created in the previous node.</p> <p></p>","tags":["Workflow\u00b2","Wise"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.wise/#4-wise2-node-execute-transfer","title":"4. Wise2 node (execute: transfer)","text":"<p>This node will execute the transfer that we created in the previous node.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Transfer' from the Resource dropdown list.</li> <li>Select 'Execute' from the Operation dropdown list.</li> <li>Select a profile from the Profile ID dropdown list.</li> <li>Click on the gears icon next to the Transfer ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$json[\"id\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns the executes the transfer that we created in the previous node.</p> <p></p>","tags":["Workflow\u00b2","Wise"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.wise/#5-wise3-node-get-transfer","title":"5. Wise3 node (get: transfer)","text":"<p>This node will return the information of the transfer that we executed in the previous node.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Transfer' from the Resource dropdown list.</li> <li>Select 'Get' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Transfer ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Wise1 &gt; Output Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$node[\"Wise1\"].json[\"id\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns the information about the transfer that we executed in the previous node.</p> <p></p>","tags":["Workflow\u00b2","Wise"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.wooCommerce/","title":"WooCommerce","text":"<p>WooCommerce is a customizable, open-source e-commerce plugin for WordPress.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","tags":["Workflow\u00b2","WooCommerce"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.wooCommerce/#basic-operations","title":"Basic Operations","text":"<ul> <li>Customer<ul> <li>Create a customer</li> <li>Delete a customer</li> <li>Retrieve a customer</li> <li>Retrieve all customers</li> <li>Update a customer</li> </ul> </li> <li>Order<ul> <li>Create a order</li> <li>Delete a order</li> <li>Get a order</li> <li>Get all orders</li> <li>Update an order</li> </ul> </li> <li>Product<ul> <li>Create a product</li> <li>Delete a product</li> <li>Get a product</li> <li>Get all products</li> <li>Update a product</li> </ul> </li> </ul>","tags":["Workflow\u00b2","WooCommerce"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.wooCommerce/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to create, update, and get a product from WooCommerce. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Start - WooCommerce</p> <p>The final workflow should look like the following image.</p> <p></p>","tags":["Workflow\u00b2","WooCommerce"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.wooCommerce/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>","tags":["Workflow\u00b2","WooCommerce"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.wooCommerce/#2-woocommerce-node-create-product","title":"2. WooCommerce node (create: product)","text":"<p>This node will create a new product in WooCommerce.</p> <ol> <li>First of all, you'll have to enter credentials for the WooCommerce node. You can find out how to do that here.</li> <li>Enter the product name in the Name field.</li> <li>Click on Add Field and select 'Description'.</li> <li>Enter a description in the Description field.</li> <li>Click on Add Field and select 'Regular Price'.</li> <li>Enter the price in the Regular Price field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node creates a new product.</p> <p></p>","tags":["Workflow\u00b2","WooCommerce"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.wooCommerce/#3-woocommerce1-node-update-product","title":"3. WooCommerce1 node (update: product)","text":"<p>This node will update the product that we created in the previous node. We will update the quantity of the product.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Update' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Product ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; WooCommerce &gt; Output Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$node[\"WooCommerce\"].json[\"id\"]}}</code>.</li> <li>Click on Add Field and select 'Stock Quantity'.</li> <li>Set the quantity in the Stock Quantity field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node updates the quantity of the product that we created in the previous node.</p> <p></p>","tags":["Workflow\u00b2","WooCommerce"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.wooCommerce/#4-woocommerce2-node-get-product","title":"4. WooCommerce2 node (get: product)","text":"<p>This node will get the information about the product that we created using the WooCommerce node.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Update' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Product ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; WooCommerce &gt; Output Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$node[\"WooCommerce\"].json[\"id\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns the information about the product that we created using the WooCommerce node.</p> <p></p>","tags":["Workflow\u00b2","WooCommerce"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.wordpress/","title":"WordPress","text":"<p>WordPress is a free and open-source content management system written in PHP and paired with a MySQL or MariaDB database.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","tags":["Workflow\u00b2","WordPress"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.wordpress/#basic-operations","title":"Basic Operations","text":"<ul> <li>Post<ul> <li>Create a post</li> <li>Get a post</li> <li>Get all posts</li> <li>Update a post</li> </ul> </li> <li>User<ul> <li>Create a user</li> <li>Get a user</li> <li>Get all users</li> <li>Update a user</li> </ul> </li> </ul>","tags":["Workflow\u00b2","WordPress"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.wordpress/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to create and update a post in WordPress. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Start - WordPress</p> <p>The final workflow should look like the following image.</p> <p></p>","tags":["Workflow\u00b2","WordPress"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.wordpress/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>","tags":["Workflow\u00b2","WordPress"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.wordpress/#2-wordpress-node-create-post","title":"2. Wordpress node (create: post)","text":"<ol> <li>First of all, you'll have to enter credentials for the WordPress node. You can find out how to do that here.</li> <li>Enter the title in the Title field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>","tags":["Workflow\u00b2","WordPress"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.wordpress/#3-wordpress1-node-update-post","title":"3. Wordpress1 node (update: post)","text":"<ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Update' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Post ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Wordpress &gt; Output Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$node[\"Wordpress\"].json[\"id\"]}}</code>.</li> <li>Click on the Add Field button and select 'Content' from the dropdown list.</li> <li>Enter the content in the Content filed.</li> <li>Click on Execute Node to run the workflow.</li> </ol>","tags":["Workflow\u00b2","WordPress"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.xero/","title":"Xero","text":"<p>Xero offers an online cloud-based SaaS accounting software platform for small and medium-sized businesses.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","tags":["Workflow\u00b2","Xero"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.xero/#basic-operations","title":"Basic Operations","text":"<ul> <li>Contact<ul> <li>Create a contact</li> <li>Get a contact</li> <li>Get all contacts</li> <li>Update a contact</li> </ul> </li> <li>Invoice<ul> <li>Create a invoice</li> <li>Get a invoice</li> <li>Get all invoices</li> <li>Update a invoice</li> </ul> </li> </ul>","tags":["Workflow\u00b2","Xero"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.xero/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to get upto 100 invoices from Xero. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - Xero</p> <p>The final workflow should look like the following image.</p> <p></p>","tags":["Workflow\u00b2","Xero"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.xero/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>","tags":["Workflow\u00b2","Xero"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.xero/#2-xero-node","title":"2. Xero node","text":"<ol> <li>First of all, you'll have to enter credentials for the Xero node. You can find out how to do that here.</li> <li>Select 'Get All' from the Operation dropdown list.</li> <li>Select the organization for which you want to get the invoices from the Organization ID dropdown list.</li> <li>Click on Execute Node to run the workflow.</li> </ol>","tags":["Workflow\u00b2","Xero"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.youTube/","title":"YouTube","text":"<p>YouTube is an online video-sharing platform. YouTube allows users to upload, view, rate, share, add to playlists, report, comment on videos, and subscribe to other users.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","tags":["Workflow\u00b2","YouTube"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.youTube/#basic-operations","title":"Basic Operations","text":"<ul> <li>Channel<ul> <li>Retrieve a channel</li> <li>Retrieve all channels</li> <li>Update a channel</li> <li>Upload a channel banner</li> </ul> </li> <li>Playlist<ul> <li>Create a playlist</li> <li>Delete a playlist</li> <li>Get a playlist</li> <li>Retrieve all playlists</li> <li>Update a playlist</li> </ul> </li> <li>Playlist Item<ul> <li>Add an item to a playlist</li> <li>Delete a item from a playlist</li> <li>Get a playlist's item</li> <li>Retrieve all playlist items</li> </ul> </li> <li>Video<ul> <li>Delete a video</li> <li>Get a video</li> <li>Retrieve all videos</li> <li>Rate a video</li> <li>Update a video</li> <li>Upload a video</li> </ul> </li> <li>Video Category<ul> <li>Retrieve all video categories</li> </ul> </li> </ul>","tags":["Workflow\u00b2","YouTube"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.youTube/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to upload a video, create a playlist, and add the video to the playlist in YouTube. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Start - Read Binary File - YouTube</p> <p>The final workflow should look like the following image.</p> <p></p>","tags":["Workflow\u00b2","YouTube"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.youTube/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>","tags":["Workflow\u00b2","YouTube"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.youTube/#2-read-binary-file-node","title":"2. Read Binary File node","text":"<ol> <li>Enter the path to the video file you want to upload in the File Path field.</li> <li>Click on Execute Node to run the node.</li> </ol>","tags":["Workflow\u00b2","YouTube"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.youTube/#3-youtube-node-upload-video","title":"3. YouTube node (upload: video)","text":"<ol> <li>First of all, you'll have to enter credentials for the YouTube node. You can find out how to do that here.</li> <li>Select 'Video' from the Resource dropdown list.</li> <li>Select 'Upload' from the Operation dropdown list.</li> <li>Enter the title of the video in the Title field.</li> <li>Select the region code from Region Code dropdown list.</li> <li>Select the video category from the Category ID dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol>","tags":["Workflow\u00b2","YouTube"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.youTube/#4-youtube1-node-create-playlist","title":"4. YouTube1 node (create: playlist)","text":"<ol> <li>Select the credentials that you entered in the previous YouTube node.</li> <li>Select 'Playlist' from the Resource dropdown list.</li> <li>Select 'Create' from the Operation dropdown list.</li> <li>Enter the title of the playlist in the Title field.</li> <li>Click on Execute Node to run the node.</li> </ol>","tags":["Workflow\u00b2","YouTube"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.youTube/#5-youtube2-node-add-playlistitem","title":"5. YouTube2 node (add: playlistItem)","text":"<ol> <li>Select the credentials that you entered in the previous YouTube node.</li> <li>Select 'Playlist Item' from the Resource dropdown list.</li> <li>Select the playlist from the Playlist ID dropdown list.</li> <li>Click on the gears icon next to the Video ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; YouTube &gt; Output Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$node[\"YouTube\"].json[\"id\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol>","tags":["Workflow\u00b2","YouTube"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.yourls/","title":"Yourls","text":"<p>Yourls is a free and open-source software that allows you to run your URL shortening service.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","tags":["Workflow\u00b2","Yourls"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.yourls/#basic-operations","title":"Basic Operations","text":"<ul> <li>URL<ul> <li>Expand a URL</li> <li>Shorten a URL</li> <li>Get stats about one short URL</li> </ul> </li> </ul>","tags":["Workflow\u00b2","Yourls"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.yourls/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to create a short URL and get the statistics of the URL. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Start - Yourls</p> <p>The final workflow should look like the following image.</p> <p></p>","tags":["Workflow\u00b2","Yourls"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.yourls/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>","tags":["Workflow\u00b2","Yourls"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.yourls/#2-yourls-node-shorten-url","title":"2. Yourls node (shorten: url)","text":"<p>This node will create  a short URL for the link we specify.</p> <ol> <li>First of all, you'll have to enter credentials for the Yourls node. You can find out how to do that here.</li> <li>Enter the URL that you want to shorten in the URL field.</li> <li>Click on Add Field and select 'Title'.</li> <li>Enter a title in the Title field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node creates a short URL for the URL you specified.</p> <p></p>","tags":["Workflow\u00b2","Yourls"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.yourls/#3-yourls1-node-stats-url","title":"3. Yourls1 node (stats: url)","text":"<p>This node will give us the statistics of the short URL that we specify. We will get the statistics for the URL that we created in the previous step.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Stats' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Short URL field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Yourls &gt; Output Data &gt; JSON &gt; shorturl. You can also add the following expression: <code>{{$node[\"Yourls\"].json[\"shorturl\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node gives us the statistics of the short URL that we created in the previous node.</p> <p></p>","tags":["Workflow\u00b2","Yourls"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.zammad/","title":"Zammad","text":"<p>Zammad is a free helpdesk and issue tracking system.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","tags":["Workflow\u00b2","Zammad"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.zammad/#basic-operations","title":"Basic Operations","text":"<ul> <li>Group<ul> <li>Create a group</li> <li>Delete a group</li> <li>Retrieve a group</li> <li>Get all groups</li> <li>Update a group</li> </ul> </li> <li>Organization<ul> <li>Create an organization</li> <li>Delete an organization</li> <li>Retrieve an organization</li> <li>Retrieve all organizations</li> <li>Update an organization</li> </ul> </li> <li>Ticket<ul> <li>Create a ticket</li> <li>Delete a ticket</li> <li>Retrieve a ticket</li> <li>Retrieve all tickets</li> </ul> </li> <li>User<ul> <li>Create a user</li> <li>Delete a user</li> <li>Retrieve a user</li> <li>Retrieve all users</li> <li>Retrieve currently logged-in user</li> <li>Update a user</li> </ul> </li> </ul>","tags":["Workflow\u00b2","Zammad"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.zendesk/","title":"Zendesk","text":"<p>Zendesk is a support ticketing system, designed to help track, prioritize, and solve customer support interactions. More than just a help desk, Zendesk Support helps nurture customer relationships with personalized, responsive support across any channel.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","tags":["Workflow\u00b2","Zendesk"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.zendesk/#basic-operations","title":"Basic Operations","text":"<ul> <li>Ticket<ul> <li>Create a ticket</li> <li>Delete a ticket</li> <li>Get a ticket</li> <li>Get all tickets</li> <li>Recover a suspended ticket</li> <li>Update a ticket</li> </ul> </li> <li>Ticket Field<ul> <li>Get a ticket field</li> <li>Get all system and custom ticket fields</li> </ul> </li> <li>User<ul> <li>Create a user</li> <li>Delete a user</li> <li>Get a user</li> <li>Get all users</li> <li>Get a user's organizations</li> <li>Get data related to the user</li> <li>Search users</li> <li>Update a user</li> </ul> </li> <li>Organization<ul> <li>Create an organization</li> <li>Delete an organization</li> <li>Count organizations</li> <li>Get an organization</li> <li>Get all organizations</li> <li>Get data related to the organization</li> <li>Update a organization</li> </ul> </li> </ul>","tags":["Workflow\u00b2","Zendesk"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.zendesk/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to create a ticket in Zendesk. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - Zendesk</p> <p>The final workflow should look like the following image.</p> <p></p>","tags":["Workflow\u00b2","Zendesk"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.zendesk/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>","tags":["Workflow\u00b2","Zendesk"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.zendesk/#2-zendesk-node","title":"2. Zendesk node","text":"<ol> <li>First of all, you'll have to enter credentials for the Zendesk node. You can find out how to do that here.</li> <li>Enter the description of the ticket in the Description field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>","tags":["Workflow\u00b2","Zendesk"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.zohoCrm/","title":"Zoho CRM","text":"<p>Zoho CRM is an online Sales CRM software that manages sales, marketing and support.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","tags":["Workflow\u00b2","Zoho CRM"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.zohoCrm/#basic-operations","title":"Basic Operations","text":"<ul> <li>Account<ul> <li>Create an account</li> <li>Create a new record, or update the current one if it already exists (upsert)</li> <li>Delete an account</li> <li>Get an account</li> <li>Get all accounts</li> <li>Update an account</li> </ul> </li> <li>Contact<ul> <li>Create a contact</li> <li>Create a new record, or update the current one if it already exists (upsert)</li> <li>Delete a contact</li> <li>Get a contact</li> <li>Get all contacts</li> <li>Update a contact</li> </ul> </li> <li>Deal<ul> <li>Create a deal</li> <li>Create a new record, or update the current one if it already exists (upsert)</li> <li>Delete a contact</li> <li>Get a contact</li> <li>Get all contacts</li> <li>Update a contact</li> </ul> </li> <li>Invoice<ul> <li>Create an invoice</li> <li>Create a new record, or update the current one if it already exists (upsert)</li> <li>Delete an invoice</li> <li>Get an invoice</li> <li>Get all invoices</li> <li>Update an invoice</li> </ul> </li> <li>Lead<ul> <li>Create a lead</li> <li>Create a new record, or update the current one if it already exists (upsert)</li> <li>Delete a lead</li> <li>Get a lead</li> <li>Get all leads</li> <li>Get lead fields</li> <li>Update a lead</li> </ul> </li> <li>Product<ul> <li>Create a product</li> <li>Create a new record, or update the current one if it already exists (upsert)</li> <li>Delete a product</li> <li>Get a product</li> <li>Get all products</li> <li>Update a product</li> </ul> </li> <li>Purchase Order<ul> <li>Create a purchase order</li> <li>Create a new record, or update the current one if it already exists (upsert)</li> <li>Delete a purchase order</li> <li>Get a purchase order</li> <li>Get all purchase orders</li> <li>Update a purchase order</li> </ul> </li> <li>Quote<ul> <li>Create a quote</li> <li>Create a new record, or update the current one if it already exists (upsert)</li> <li>Delete a quote</li> <li>Get a quote</li> <li>Get all quotes</li> <li>Update a quote</li> </ul> </li> <li>Sales Order<ul> <li>Create a sales order</li> <li>Create a new record, or update the current one if it already exists (upsert)</li> <li>Delete a sales order</li> <li>Get a sales order</li> <li>Get all sales orders</li> <li>Update a sales order</li> </ul> </li> <li>Vendor<ul> <li>Create a vendor</li> <li>Create a new record, or update the current one if it already exists (upsert)</li> <li>Delete a vendor</li> <li>Get a vendor</li> <li>Get all vendors</li> <li>Update a vendor</li> </ul> </li> </ul>","tags":["Workflow\u00b2","Zoho CRM"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.zohoCrm/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to get the data of all leads from Zoho CRM. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - Zoho CRM</p> <p>The final workflow should look like the following image.</p> <p></p>","tags":["Workflow\u00b2","Zoho CRM"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.zohoCrm/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>","tags":["Workflow\u00b2","Zoho CRM"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.zohoCrm/#2-zoho-crm-node","title":"2. Zoho CRM node","text":"<ol> <li>First of all, you'll have to enter credentials for the Zoho CRM node. You can find out how to do that here.</li> <li>Select the 'Get All' option from the Operation dropdown list.</li> <li>Click on Execute Node to run the workflow.</li> </ol>","tags":["Workflow\u00b2","Zoho CRM"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.zoom/","title":"Zoom","text":"<p>Zoom is a communications technology company that provides videotelephony and online chat services through a cloud-based peer-to-peer software platform and is used for teleconferencing, telecommuting, distance education, and social relations.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","tags":["Workflow\u00b2","Zoom"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.zoom/#basic-operations","title":"Basic Operations","text":"<ul> <li>Meeting<ul> <li>Create a meeting</li> <li>Delete a meeting</li> <li>Retrieve a meeting</li> <li>Retrieve all meetings</li> <li>Update a meeting</li> </ul> </li> </ul>","tags":["Workflow\u00b2","Zoom"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.zoom/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to create a meeting in Zoom. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - Zoom</p> <p>The final workflow should look like the following image.</p> <p></p>","tags":["Workflow\u00b2","Zoom"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.zoom/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>","tags":["Workflow\u00b2","Zoom"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.zoom/#2-zoom-node","title":"2. Zoom node","text":"<ol> <li>First of all, you'll have to enter credentials for the Zoom node. You can find out how to do that here.</li> <li>Enter the topic of the meeting in the Topic field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>","tags":["Workflow\u00b2","Zoom"]},{"location":"workflow/integrations/nodes/workflow-nodes-base.zulip/","title":"Zulip","text":"<p>Zulip is an open source chat and collaborative software. In Zulip, communication occurs in streams (which are like channels in IRC).</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.zulip/#basic-operations","title":"Basic Operations","text":"<ul> <li>Message<ul> <li>Delete a message</li> <li>Get a message</li> <li>Send a private message</li> <li>Send a message to stream</li> <li>Update a message</li> <li>Upload a file</li> </ul> </li> <li>Stream<ul> <li>Create a stream.</li> <li>Delete a stream.</li> <li>Get all streams.</li> <li>Get subscribed streams.</li> <li>Update a stream.</li> </ul> </li> <li>User<ul> <li>Create a user.</li> <li>Deactivate a user.</li> <li>Get a user.</li> <li>Get all users.</li> <li>Update a user.</li> </ul> </li> </ul>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.zulip/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to send a private message on Zulip. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - Zulip</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.zulip/#1-start-node","title":"1. Start node","text":"<p>The start node exists by default when you create a new workflow.</p>"},{"location":"workflow/integrations/nodes/workflow-nodes-base.zulip/#2-zulip-node","title":"2. Zulip node","text":"<ol> <li>First of all, you'll have to enter credentials for the Zulip node. You can find out how to do that here.</li> <li>Select the user you want to send a private message to from the To dropdown list.</li> <li>Type the message you want to post in the Content field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>"},{"location":"workflow/integrations/trigger-nodes/","title":"Overview","text":"<p>This section provides information about n8n's trigger nodes.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.activeCampaignTrigger/","title":"ActiveCampaign Trigger","text":"<p>ActiveCampaign is a cloud software platform for small-to-mid-sized business. The company offers software for customer experience automation, which combines the email marketing, marketing automation, sales automation, and CRM categories.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.activeCampaignTrigger/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to receive updates when a new account is added by an admin in ActiveCampaign. You can also find the workflow on the website. This example usage workflow would use the following node. - ActiveCampaign Trigger</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.activeCampaignTrigger/#1-activecampaign-trigger-node","title":"1. ActiveCampaign Trigger node","text":"<ol> <li>First of all, you'll have to enter credentials for the ActiveCampaign Trigger node. You can find out how to do that here.</li> <li>Select 'account_add' from the Events dropdown list.</li> <li>Select 'Admin' from the Source dropdown list.</li> <li>Click on Execute Node to run the workflow.</li> </ol> <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the ActiveCampaign Trigger node.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.acuitySchedulingTrigger/","title":"Acuity Scheduling Trigger","text":"<p>Acuity Scheduling is a cloud-based appointment scheduling software solution that enables business owners to manage their appointments online. It has the capability to automatically sync calendars according to users\u2019 time zones and can send regular alerts and reminders to users regarding their appointment schedules.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.acuitySchedulingTrigger/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to receive updates when a new appointment is scheduled on Acuity Scheduling. You can also find the workflow on the website. This example usage workflow would use the following node. - Acuity Scheduling Trigger</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.acuitySchedulingTrigger/#1-acuity-scheduling-trigger-node","title":"1. Acuity Scheduling Trigger node","text":"<ol> <li>First of all, you'll have to enter credentials for the Acuity Scheduling Trigger node. You can find out how to do that here.</li> <li>Select the <code>appointment.scheduled</code> option from the Event dropdown list.</li> <li>Click on Execute Node to run the workflow.</li> </ol> <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Acuity Scheduling Trigger node.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.affinityTrigger/","title":"Affinity Trigger","text":"<p>Affinity is a powerful relationship intelligence platform enabling teams to leverage their network to close the next big deal.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.affinityTrigger/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to receive updates when a new list is created in Affinity. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following node. - Affinity Trigger</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.affinityTrigger/#1-affinity-trigger-node","title":"1. Affinity Trigger node","text":"<ol> <li>First of all, you'll have to enter credentials for the Affinity Trigger node. You can find out how to do that here.</li> <li>Select 'list.created' from the Events dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Affinity Trigger node.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.airtableTrigger/","title":"Airtable Trigger","text":"<p>Airtable is a spreadsheet-database hybrid, with the features of a database but applied to a spreadsheet. The fields in an Airtable table are similar to cells in a spreadsheet, but have types such as 'checkbox', 'phone number', and 'drop-down list', and can reference file attachments like images.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.airtableTrigger/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to receive a Mattermost message when new data gets added to Airtable. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Airtable Trigger - Mattermost</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.airtableTrigger/#1-airtable-trigger-node","title":"1. Airtable Trigger node","text":"<p>The Airtable Trigger node will trigger the workflow when new data gets added to Airtable.</p> <ol> <li>First of all, you'll have to enter credentials for the Airtable Trigger node. You can find out how to do that here.</li> <li>Click on Add Poll Time and select 'Every Minute' from the Mode dropdown list. This will check Airtable every minute for new data entries.</li> <li>Enter the Base ID in the Base ID field. For obtaining the Base ID, head over to their API page and select the correct base. You\u2019ll find the Base ID there.</li> <li>Enter the table name in the Table field.</li> <li>Enter a trigger field name in the Trigger Field field. If you don't have a 'Created Time' or 'Last modified time' field in your table, please create one.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns the new data from Airtable. This output gets passed on to the next node in the workflow.</p> <p></p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.airtableTrigger/#2-mattermost-node-post-message","title":"2. Mattermost node (post: message)","text":"<p>This node will send a message about the new data in the channel 'Information Updated' in Mattermost. If you have a different channel, use that instead.</p> <ol> <li> <p>First of all, you'll have to enter credentials for the Mattermost node. You can find out how to do that here.</p> </li> <li> <p>Select a channel from the Channel ID dropdown list.</p> </li> <li>Click on the gears icon next to the Message field and click on Add Expression.</li> <li>Enter the following message in the Expression field: <pre><code>New Data was added to Airtable.\nID:{{$node[\"Airtable Trigger\"].json[\"fields\"][\"id\"]}}\nName: {{$node[\"Airtable Trigger\"].json[\"fields\"][\"name\"]}}\n</code></pre></li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node sends a message in Mattermost about the new data that got added to Airtable.</p> <p></p> <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Airtable Trigger node.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.amqpTrigger/","title":"AMQP Trigger","text":"<p>AMQP is an open standard application layer protocol for message-oriented middleware. The defining features of AMQP are message orientation, queuing, routing, reliability and security. This node supports AMQP 1.0 compatible message brokers.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.amqpTrigger/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to receive messages for an ActiveMQ queue via AMQP Trigger. You can also find the workflow on the website. This example usage workflow would use the following node. - AMQP Trigger</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.amqpTrigger/#1-amqp-trigger-node","title":"1. AMQP Trigger node","text":"<ol> <li>First of all, you'll have to enter credentials for the AMQP Trigger node. You can find out how to do that here.</li> <li>Enter the name of the queue or topic in the Queue / Topic field.</li> <li>Click on Execute Node to run the workflow.</li> </ol> <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the AMQP Trigger node.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.asanaTrigger/","title":"Asana Trigger","text":"<p>Asana is a web and mobile application designed to help teams organize, track, and manage their work.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.asanaTrigger/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to receive updates when an event occurs in Asana. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following node. - Asana Trigger</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.asanaTrigger/#1-asana-trigger-node","title":"1. Asana Trigger node","text":"<ol> <li>First of all, you'll have to enter credentials for the Asana Trigger node. You can find out how to do that here.</li> <li>Enter the name of the resource in the Resource field.</li> <li>Enter the name of the workspace in the Workspace field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Asana Trigger node.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.autopilotTrigger/","title":"Autopilot Trigger","text":"<p>Autopilot is a visual marketing software that allows you to automate and personalize your marketing across the entire customer journey.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.autopilotTrigger/#events","title":"Events","text":"<ul> <li>Contact added</li> <li>Contact added to a list</li> <li>Contact entered to a segment</li> <li>Contact left a segment</li> <li>Contact removed from a list</li> <li>Contact unsubscribed</li> <li>Contact updated</li> </ul>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.autopilotTrigger/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to receive updates when a new contact gets added in Autopilot and add them to a base in Airtable. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following node. - Autopilot Trigger - Set - Airtable</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.autopilotTrigger/#1-autopilot-trigger","title":"1. Autopilot Trigger","text":"<p>The Autopilot Trigger node will trigger the workflow when a new contact gets added in Autopilot.</p> <ol> <li>First of all, you'll have to enter credentials for the Autopilot Trigger node. You can find out how to do that here.</li> <li>Select 'Contact Added' from the Events dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns the information of the new contact that was added to Autopilot. This output gets passed on to the next node in the workflow.</p> <p></p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.autopilotTrigger/#2-set-node","title":"2. Set node","text":"<p>We will use the Set node to ensure that only the data that we set in this node gets passed on to the next nodes in the workflow.</p> <ol> <li>Click on Add Value and select 'String' from the dropdown list.</li> <li>Enter <code>First Name</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; contact &gt; FirstName. You can also add the following expression: <code>{{$json[\"contact\"][\"FirstName\"]}}</code>.</li> <li>Enter <code>First Name</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; contact &gt; LastName. You can also add the following expression: <code>{{$json[\"contact\"][\"LastName\"]}}</code>.</li> <li>Click on Add Value and select 'String' from the dropdown list.</li> <li>Enter <code>Email</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; contact &gt; Email. You can also add the following expression: <code>{{$json[\"contact\"][\"Email\"]}}</code>.</li> <li>Toggle Keep Only Set to <code>true</code>. We set this option to true to ensure that only the data that we have set in this node get passed on to the next nodes in the workflow.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node uses the data from the previous node and returns the data that we set for the workflow.</p> <p></p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.autopilotTrigger/#3-airtable-node","title":"3. Airtable node","text":"<p>This node will store the data coming from the previous node in a table in Airtable.</p> <ol> <li>First of all, you'll have to enter credentials for the Airtable node. You can find out how to do that here.</li> <li>Select 'Append' from the Operation dropdown list.</li> <li>Enter the base ID in the Base ID field. For obtaining the Base ID, head over to their API page and select the correct base. You\u2019ll find the Base ID under the Introduction section.</li> <li>In Doc\u00b2, paste the ID of the base in the Base ID field.</li> <li>Enter the table name in the Table name field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node adds the information of a new contact from the previous node in a table in Airtable.</p> <p></p> <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Autopilot Trigger node.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.awsSnsTrigger/","title":"AWS SNS Trigger","text":"<p>AWS SNS is a notification service provided as part of Amazon Web Services. It provides a low-cost infrastructure for the mass delivery of messages, predominantly to mobile users.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.awsSnsTrigger/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to receive updates for events in AWS SNS. You can also find the workflow on the website. This example usage workflow would use the following node. - AWS SNS Trigger</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.awsSnsTrigger/#1-aws-sns-trigger-node","title":"1. AWS SNS Trigger node","text":"<ol> <li>First of all, you'll have to enter credentials for the AWS SNS Trigger node. You can find out how to do that here.</li> <li>Select the topic you want to listen for in the Topic dropdown list.</li> <li>Click on Execute Node to run the workflow.</li> </ol> <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the AWS SNS Trigger node.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.bitbucketTrigger/","title":"Bitbucket Trigger","text":"<p>Bitbucket is a web-based version control repository hosting service owned by Atlassian, for source code and development projects that use either Mercurial or Git revision control systems.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.bitbucketTrigger/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to receive updates when events occur in a Bitbucket repository. You can also find the workflow on the website. This example usage workflow would use the following node. - Bitbucket Trigger</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.bitbucketTrigger/#1-bitbucket-trigger-node","title":"1. Bitbucket Trigger node","text":"<ol> <li>First of all, you'll have to enter credentials for the Bitbucket Trigger node. You can find out how to do that here.</li> <li>Select 'Repository' from the Resource dropdown list.</li> <li>Select the repository you want to receive updates for from the Repository dropdown list.</li> <li>Select the events you want to receive updates for from the Events dropdown list.</li> <li>Click on Execute Node to run the workflow.</li> </ol> <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Bitbucket Trigger node.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.boxTrigger/","title":"Box Trigger","text":"<p>Box is a cloud computing company which provides file sharing, collaborating, and other tools for working with files that are uploaded to its servers.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.boxTrigger/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to receive updates when events occur in Box. You can also find the workflow on the website. This example usage workflow would use the following node. - Box Trigger</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.boxTrigger/#1-box-trigger-node","title":"1. Box Trigger node","text":"<ol> <li>First of all, you'll have to enter credentials for the Box Trigger node. You can find out how to do that here.</li> <li>Select the events for which you want to receive updates for from the Events dropdown list.</li> <li>Select the type of item that will trigger an update from the Target Type dropdown list.</li> <li>Enter the target ID of the file/folder to be monitored for updates in the Target ID field.</li> <li>Click on Execute Node to run the workflow.</li> </ol> <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Box Trigger node.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.boxTrigger/#faqs","title":"FAQs","text":""},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.boxTrigger/#how-do-i-find-my-target-id-in-box","title":"How do I find my Target ID in Box?","text":"<ol> <li>Open the file/folder that you would like to monitor.</li> <li>Copy the string of charatcters after <code>folder/</code> in your URL. This is the target ID. For example, if the URL is <code>https://app.box.com/folder/12345</code>, then <code>12345</code> is the target ID.</li> <li>Paste it in the Target ID field in Workflow\u00b2.</li> </ol>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.calendlyTrigger/","title":"Calendly Trigger","text":"<p>Calendly is an automated scheduling software that is designed to make the process of finding meeting times easy.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.calendlyTrigger/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to receive updates for events in Calendly. You can also find the workflow on the website. This example usage workflow would use the following node. - Calendly Trigger</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.calendlyTrigger/#1-calendly-trigger-node","title":"1. Calendly Trigger node","text":"<ol> <li>First of all, you'll have to enter credentials for the Calendly Trigger node. You can find out how to do that here.</li> <li>Select the events you want to receive updates for from the Events dropdown list.</li> <li>Click on Execute Node to run the workflow.</li> </ol> <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Calendly Trigger node.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.chargebeeTrigger/","title":"Chargebee Trigger","text":"<p>Chargebee is a billing platform for subscription based SaaS and eCommerce businesses. Chargebee integrates with payment gateways to let you automate recurring payment collection along with invoicing, taxes, accounting, email notifications, SaaS Metrics and customer management.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.chargebeeTrigger/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to receive updates for events in Chargebee. You can also find the workflow on the website. This example usage workflow would use the following node. - Chargebee Trigger</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.chargebeeTrigger/#1-chargebee-trigger-node","title":"1. Chargebee Trigger node","text":"<ol> <li>First of all, you'll have to add the webhook URL in Chargebee. You can find instructions on how to do that in the FAQs below.</li> <li>Select the <code>*</code> option in the Events field to receive updates when any event is triggered.</li> <li>Click on Execute Node to run the workflow.</li> </ol> <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Chargebee Trigger node.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.chargebeeTrigger/#faqs","title":"FAQs","text":""},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.chargebeeTrigger/#how-do-i-add-my-webhook-url-in-chargebee","title":"How do I add my webhook URL in Chargebee?","text":"<ol> <li>Open your Chargebee dashboard.</li> <li>Click on \"Settings\".</li> <li>Click on \"Configure Chargebee\".</li> <li>Scroll down and click on \"Webhooks\".</li> <li>Click on the Add Webhook button.</li> <li>Enter the Webhook Name and the Webhook URL.</li> <li>Click on the Create button.</li> </ol>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.ciscoWebexTrigger/","title":"Webex by Cisco Trigger","text":"<p>Webex by Cisco is a web conferencing and videoconferencing application.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.ciscoWebexTrigger/#example-usage","title":"Example usage","text":"<p>This workflow allows you to receive updates when meeting events occur in your Webex account. This example usage workflow uses the following node:</p> <ul> <li>Webex by Cisco Trigger</li> </ul> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.ciscoWebexTrigger/#1-webex-by-cisco-trigger-node","title":"1. Webex by Cisco Trigger node","text":"<ol> <li>First enter your credentials for node. You can find out how to do that here.</li> <li>Select 'Meeting' from the Resource dropdown list.</li> <li>Select the events you want to receive updates for from the Events dropdown list.</li> <li>Click on Execute Node to run the workflow.</li> </ol> <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Webex by Cisco Trigger node.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.clickUpTrigger/","title":"ClickUp Trigger","text":"<p>ClickUp is a cloud-based collaboration and project management tool suitable for businesses of all sizes and industries. Features include communication and collaboration tools, task assignments and statuses, alerts and a task toolbar.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.clickUpTrigger/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to receive updates for events in ClickUp. You can also find the workflow on the website. This example usage workflow would use the following node. - ClickUp Trigger</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.clickUpTrigger/#1-clickup-trigger-node","title":"1. ClickUp Trigger node","text":"<ol> <li>First of all, you'll have to enter credentials for the ClickUp Trigger node. You can find out how to do that here.</li> <li>Select your team from the Team dropdown list.</li> <li>Select the <code>*</code> option in the Events field to receive updates for all the events.</li> <li>Click on Execute Node to run the workflow.</li> </ol> <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the ClickUp Trigger node.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.clockifyTrigger/","title":"Clockify Trigger","text":"<p>Clockify is a free time tracker and timesheet app for tracking work hours across projects.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p> <p>Note: This node uses the workflow timezone setting to specify the range of time entries starting time. You have to configure the workflow timezone setting if you want this Trigger node to retrieve the right time entries.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.clockifyTrigger/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to get new time entries from Clockify. You can also find the workflow on the website. This example usage workflow would use the following node. - Clockify Trigger</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.clockifyTrigger/#1-clockify-trigger-node","title":"1. Clockify Trigger node","text":"<ol> <li>First enter your credentials for the Clockify Trigger node. You can find out how to do that here.</li> <li>Select the Workspace you want to receive updates for using the dropdown list.</li> <li>Click on Execute Node to run the workflow.</li> </ol> <p>Note: This node uses polling to get new time entries. You have to use the Add Poll Time button if you want this Trigger node to run and retrieve new time entries regularly.</p> <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Clockify Trigger node.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.convertkitTrigger/","title":"ConvertKit Trigger","text":"<p>ConvertKit is a fully-featured email marketing platform. ConvertKit can be used to build an email list, send email broadcasts, automate sequences, create segments, and build landing pages.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.convertkitTrigger/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to receive updates when a subscriber is added through a form in ConvertKit. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following node. - ConvertKit Trigger</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.convertkitTrigger/#1-convertkit-trigger-node","title":"1. ConvertKit Trigger node","text":"<ol> <li>First of all, you'll have to enter credentials for the ConvertKit Trigger node. You can find out how to do that here.</li> <li>Select 'Form Subscribe' from the Event dropdown list.</li> <li>Select the form from the Form ID dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the ConvertKit Trigger node.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.copperTrigger/","title":"Copper Trigger","text":"<p>Copper is a CRM that focuses on strong integration with Google's G Suite. It is mainly targeted towards small and medium-sized businesses.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.copperTrigger/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to receive an update when a new project is created in Copper. You can also find the workflow on the website. This example usage workflow would use the following node. - Copper Trigger</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.copperTrigger/#1-copper-trigger-node","title":"1. Copper Trigger node","text":"<ol> <li>First of all, you'll have to enter credentials for the Copper Trigger node. You can find out how to do that here.</li> <li>Select 'Project' from the Resource dropdown list.</li> <li>Select 'New' from the Event dropdown list.</li> <li>Click on Execute Node to run the workflow.</li> </ol> <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Copper Trigger node.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.customerIoTrigger/","title":"Customer.io Trigger","text":"<p>Customer.io enables users to send newsletters to selected segments of customers using their website data. You can send targeted emails, push notifications, and SMS to lower churn, create stronger relationships, and drive subscriptions.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.customerIoTrigger/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to receive updates when a subscriber unsubscribes in Customer.io. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following node. - Customer.io Trigger</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.customerIoTrigger/#1-customerio-trigger-node","title":"1. Customer.io Trigger node","text":"<ol> <li>First of all, you'll have to enter credentials for the Customer.io Trigger node. You can find out how to do that here.</li> <li>Select 'Customer Unsubscribe' from the Event dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Customer.io Trigger node.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.emeliaTrigger/","title":"Emelia Trigger","text":"<p>Emelia is a cold-mailing tool.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.emeliaTrigger/#events","title":"Events","text":"<ul> <li>Email Bounced</li> <li>Email Opened</li> <li>Email Replied</li> <li>Email Sent</li> <li>Link Clicked</li> <li>Unsubscribed Contact</li> </ul>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.emeliaTrigger/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to send a message on Mattermost when a lead replies to your email. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following node. - Emelia Trigger - Mattermost</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.emeliaTrigger/#1-emelia-trigger","title":"1. Emelia Trigger","text":"<p>The Emelia Trigger node will trigger the workflow when a lead sends a reply to the campaign <code>n8n</code>. If you have a different campaign, use that instead.</p> <ol> <li>First of all, you'll have to enter credentials for the Emelia Trigger node. You can find out how to do that here.</li> <li>Select a campaign from the Campaign dropdown list.</li> <li>Select 'Email Replied' from the Events dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node triggers the workflow when a lead sends a reply. This output is passed on to the next node in the workflow.</p> <p></p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.emeliaTrigger/#2-mattermost-node-post-message","title":"2. Mattermost node (post: message)","text":"<p>This node will send a message to the <code>Leads</code> channel in Mattermost. If you have a different channel, use that instead.</p> <ol> <li>First of all, you'll have to enter credentials for the Mattermost node. You can find out how to enter credentials for this node here.</li> <li>Select a channel from the Channel ID dropdown list.</li> <li> <p>Click on the gears icon next to the Message field click on Add Expression.</p> </li> <li> <p>Enter the following message in the Expression field. <code>{{$json[\"contact\"][\"firstName\"]}} from {{$json[\"contact\"][\"company\"]}} has replied back to your campaign.</code></p> </li> <li>Click on Execute Node to run the workflow.</li> </ol> <p>In the screenshot below, you will notice that the node sends a message with a reply to the <code>Leads</code> channel in Mattermost.</p> <p></p> <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Emelia Trigger node.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.eventbriteTrigger/","title":"Eventbrite Trigger","text":"<p>Eventbrite is an event management and ticketing website. The service allows users to browse, create, and promote local events.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.eventbriteTrigger/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to get updates for an Eventbrite event. You can also find the workflow on the website. This example usage workflow would use the following node. - Eventbrite Trigger</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.eventbriteTrigger/#1-eventbrite-trigger-node","title":"1. Eventbrite Trigger node","text":"<ol> <li>First of all, you'll have to enter credentials for the Eventbrite Trigger node. You can find out how to do that here.</li> <li>Select the profile that contains your event from the Organization dropdown list.</li> <li>Select the event you want to receive updates for from the Event dropdown list.</li> <li>Select the actions that you want to receive updates for from the Actions dropdown list.</li> <li>Click on Execute Node to run the workflow.</li> </ol> <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Eventbrite Trigger node.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.facebookTrigger/","title":"Facebook Trigger","text":"<p>Facebook is a social networking site that makes it easy to connect and share with family and friends online.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.facebookTrigger/#object","title":"Object","text":"<ul> <li>Get updates about an Ad Account</li> <li>Get updates about the app</li> <li>Get updates about Certificate Transparency</li> <li>Get updates about activity in groups and events in groups of Workplace</li> <li>Get updates about the comments on your media</li> <li>Get updates about the links for rich previews by an external provider</li> <li>Page updates</li> <li>Updates regarding granting or revoking permissions</li> <li>User profile updates</li> <li>Get updates about Whatsapp business account</li> <li>Get updates about Workplace security</li> </ul>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.facebookTrigger/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to receive a Mattermost message when a user updates their profile on Facebook. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Facebook Trigger - Mattermost</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.facebookTrigger/#1-facebook-trigger-node","title":"1. Facebook Trigger node","text":"<p>The Facebook Trigger node will trigger the workflow when a user updates their profile on Facebook.</p> <ol> <li>First of all, you'll have to enter credentials for the Facebook Trigger node. You can find out how to do that here.</li> <li>Select 'User' from the Object dropdown list.</li> <li>Enter your app ID in the App ID field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns the updated information of the user from Facebook. This output is passed on to the next node in the workflow.</p> <p></p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.facebookTrigger/#2-mattermost-node-post-message","title":"2. Mattermost node (post: message)","text":"<p>This node will send a message of the updated information in the channel <code>Information Updated</code> in Mattermost. If you have a different channel, use that instead.</p> <ol> <li> <p>First of all, you'll have to enter credentials for the Mattermost node. You can find out how to do that here.</p> </li> <li> <p>Select a channel from the Channel ID dropdown list.</p> </li> <li>Click on the gears icon next to the Message field and click on Add Expression.</li> <li>Enter the following message in the Expression field: <code>The user with uid {{$node[\"Facebook Trigger\"].json[\"uid\"]}} changed their {{$node[\"Facebook Trigger\"].json[\"changes\"][0][\"field\"]}} to {{$node[\"Facebook Trigger\"].json[\"changes\"][0][\"value\"][\"page\"]}}.</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node sends a message about the updated information to the <code>Information Updated</code> channel in Mattermost.</p> <p></p> <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Facebook Trigger node.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.figmaTrigger/","title":"Figma Trigger (Beta)","text":"<p>Figma is a prototyping tool which is primarily web-based, with additional offline features enabled by desktop applications for macOS and Windows.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p> <p> Supported Figma Plans</p> <p>Figma does not support webhooks on the free \"Starter\" plan. Your team would need to be on the \"Professional\" plan to use this node.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.figmaTrigger/#trigger-events","title":"Trigger Events","text":"<ul> <li>File Commented: Triggers when someone comments on a file.</li> <li>File Deleted: Triggers when an individual file is deleted, but not when an entire folder with all files is deleted.</li> <li>File Updated: Triggers when a file is saved or deleted. A save occurs when a file is closed or within 30 seconds after changes have been made.</li> <li>File Version Updated: Triggers when a named version is created in the version history of a file.</li> <li>Library Publish: Triggers when a library file is published.</li> </ul>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.flowTrigger/","title":"Flow Trigger","text":"<p>Flow is modern task and project management software for teams. It brings together tasks, projects, timelines, and conversations, and integrates with a lot of tools.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.flowTrigger/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to receive updates for specified tasks in Flow. You can also find the workflow on the website. This example usage workflow would use the following node. - Flow Trigger</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.flowTrigger/#1-flow-trigger-node","title":"1. Flow Trigger node","text":"<ol> <li>First of all, you'll have to enter credentials for the Flow Trigger node. You can find out how to do that here.</li> <li>Select 'Task' from the Resource dropdown list.</li> <li>Enter one or more task IDs separated by commas in the Task ID field. You can find the task ID by clicking on the task in Flow and copying the number after <code>tasks/</code> in the URL.</li> <li>Click on Execute Node to run the workflow.</li> </ol> <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Flow Trigger node.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.formIoTrigger/","title":"Form.io Trigger","text":"<p>Form.io is an enterprise class combined form and API data management platform for building complex form-based business process applications.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.formIoTrigger/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to receive updates for newly created submissions in Form.io. This example workflow uses the following node:</p> <ul> <li>Form.io Trigger</li> </ul> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.formIoTrigger/#1-formio-trigger-node","title":"1. Form.io Trigger node","text":"<ol> <li>First enter credentials for the Form.io Trigger node. You can find out how to do that here.</li> <li>Select the project you want to receive updates for using the Project Name/ID dropdown list.</li> <li>Select the form you want to receive updates for using the Form Name/ID dropdown list.</li> <li>Select Submission Created from the Trigger Events dropdown list.</li> <li>Click on Execute Node to run the workflow.</li> </ol> <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Form.io Trigger node.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.formstackTrigger/","title":"Formstack Trigger","text":"<p>Formstack is a workplace productivity platform that helps organizations streamline digital work through no-code online forms, documents, and signatures.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.formstackTrigger/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to receive updates for newly created submissions in Formstack forms. This example workflow uses the following node:</p> <ul> <li>Formstack Trigger</li> </ul> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.formstackTrigger/#1-formstack-trigger-node","title":"1. Formstack Trigger node","text":"<ol> <li>First enter credentials for the Formstack Trigger node. You can find out how to do that here.</li> <li>Enter the form you want to receive updates for using the Form Name/ID field.</li> <li>Click on Execute Node to run the workflow.</li> </ol> <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Form.io Trigger node.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.getResponseTrigger/","title":"GetResponse Trigger","text":"<p>GetResponse is an online platform that offers email marketing software, landing page creator, webinar hosting, and much more.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.getResponseTrigger/#events","title":"Events","text":"<ul> <li>Receive notifications when a customer is subscribed to a list</li> <li>Receive notifications when a customer is unsubscribed from a list</li> <li>Receive notifications when an email is opened</li> <li>Receive notifications when an email is clicked</li> <li>Receive notifications when a survey is submitted</li> </ul>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.getResponseTrigger/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to receive updates when a customer gets subscribed to a list in GetResponse and add them to a base in Airtable. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - GetResponse Trigger - Set - Airtable</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.getResponseTrigger/#1-getresponse-trigger","title":"1. GetResponse Trigger","text":"<p>The GetResponse Trigger node will trigger the workflow when a customer is subscribed to a list in GetResponse.</p> <ol> <li>First of all, you'll have to enter credentials for the GetResponse Trigger node. You can find out how to do that here.</li> <li>Select 'Customer Subscribed' from the Events dropdown list.</li> <li>Select a list from the List IDs dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns the information of the customer that gets subscribed to a list in GetResponse. This output is passed on to the next node in the workflow.</p> <p></p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.getResponseTrigger/#2-set-node","title":"2. Set node","text":"<p>We will use the Set node to ensure that only the data that we set in this node gets passed on to the next nodes in the workflow.</p> <ol> <li>Click on Add Value and select 'String' from the dropdown list.</li> <li>Enter <code>Name</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; contact_name. You can also add the following expression: <code>{{$json[\"contact_name\"]}}</code>.</li> <li>Click on Add Value and select 'String' from the dropdown list.</li> <li>Enter <code>Email</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; contact_email. You can also add the following expression: <code>{{$json[\"contact_email\"]}}</code>.</li> <li>Toggle Keep Only Set to <code>true</code>. We set this option to true to ensure that only the data that we have set in this node get passed on to the next nodes in the workflow.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node uses the data from the previous node and returns the data that we set for the workflow.</p> <p></p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.getResponseTrigger/#3-airtable-node-append","title":"3. Airtable node (Append)","text":"<p>This node will store the data coming from the previous node in a table in Airtable. Create a table like this in your Airtable base.</p> <ol> <li>First of all, you'll have to enter credentials for the Airtable node. You can find out how to do that here.</li> <li>Select 'Append' from the Operation dropdown list.</li> <li>Enter the base ID in the Base ID field. For obtaining the Base ID, head over to their API page and select the correct base. You\u2019ll find the Base ID under the Introduction section.</li> <li>In Doc\u00b2, paste the ID of the base in the Base ID field.</li> <li>Enter the table name in the Table name field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node adds the information of the customer from the previous node in a table in Airtable.</p> <p></p> <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the GetResponse Trigger node.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.githubTrigger/","title":"GitHub Trigger","text":"<p>GitHub provides hosting for software development and version control using Git. It offers the distributed version control and source code management (SCM) functionality of Git, access control and several collaboration features such as bug tracking, feature requests, task management, and wikis for every project.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.githubTrigger/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to receive updates for GitHub events. You can also find the workflow on the website. This example usage workflow would use the following node. - GitHub Trigger</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.githubTrigger/#1-github-trigger-node","title":"1. GitHub Trigger node","text":"<ol> <li>First of all, you'll have to enter credentials for the GitHub Trigger node. You can find out how to do that here.</li> <li>Enter the repository owner in the Repository Owner field.</li> <li>Enter the repository name in the Repository Name field.</li> <li>Select the <code>*</code> option in the Events field to receive updates when any event is triggered.</li> <li>Click on Execute Node to run the workflow.</li> </ol> <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the GitHub Trigger node.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.gitlabTrigger/","title":"GitLab Trigger","text":"<p>GitLab is a web-based DevOps lifecycle tool that provides a Git-repository manager providing wiki, issue-tracking, and continuous integration/continuous installation pipeline features.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.gitlabTrigger/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to receive updates for GitLab events. You can also find the workflow on the website. This example usage workflow would use the following node. - GitLab Trigger</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.gitlabTrigger/#1-gitlab-trigger-node","title":"1. GitLab Trigger node","text":"<ol> <li>First of all, you'll have to enter credentials for the GitLab Trigger node. You can find out how to do that here.</li> <li>Enter the repository owner in the Repository Owner field.</li> <li>Enter the repository name in the Repository Name field.</li> <li>Select the <code>*</code> option in the Events field to receive updates when any event is triggered.</li> <li>Click on Execute Node to run the workflow.</li> </ol> <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the GitLab Trigger node.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.googleCalendarTrigger/","title":"Google Calendar Trigger","text":"<p>Google Calendar is a time-management and scheduling calendar service developed by Google.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.googleCalendarTrigger/#events","title":"Events","text":"<ul> <li>Event Created</li> <li>Event Ended</li> <li>Event Started</li> <li>Event Updated</li> </ul>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.googleDriveTrigger/","title":"Google Drive Trigger","text":"<p>Google Drive is a file storage and synchronization service developed by Google. It allows users to store files on their servers, synchronize files across devices, and share files.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p> <p> Manual Executions vs. Activation</p> <p>On manual executions this node will return the last event matching its search criteria. If no event matches the criteria (for example because you are watching for files to be created but no files have been created so far), an error is thrown. Once saved and activated, the node will regularly check for any matching events and will trigger your workflow for each event found.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.googleDriveTrigger/#example-usage","title":"Example Usage","text":"<p>This workflow sends out email notifications when a new file has been uploaded to Google Drive. It uses two nodes:</p> <ul> <li>Google Drive Trigger</li> <li>Send Email</li> </ul> <p>The final workflow should look like the image below.</p> <p></p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.googleDriveTrigger/#1-google-drive-trigger-node","title":"1. Google Drive Trigger node","text":"<ol> <li>Enter valid credentials for the Google Drive Trigger node. You can find out how to do so here.</li> <li>Select the <code>Changes involving a Specific Folder</code> option in the Trigger On field.</li> <li>Paste the URL of a Google Drive folder in the Folder URL or ID field.</li> <li>Select <code>File Created</code> in the Watch For field.</li> <li>Click on Execute Node to execute the node.</li> </ol> <p>In the screenshot below you can see the file returned by the node.</p> <p></p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.googleDriveTrigger/#2-send-email-node","title":"2. Send Email node","text":"<ol> <li>Enter valid credentials for the Send Email node. You can find out how to do so here.</li> <li>Enter valid emails in the From Email and To Email fields.</li> <li>Enter <code>File Created</code> in the Subject field.</li> <li>Click on the gear icon next to the Text field and choose Add Expression.</li> <li>Enter <code>A file in your Google Drive file folder has been created: {{$json[\"name\"]}}</code> and close the expression editor.</li> <li>Click on **Execute Node to execute the node.</li> </ol>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.gumroadTrigger/","title":"Gumroad Trigger","text":"<p>Gumroad is an online platform that enables creators to sell products directly to consumers.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.gumroadTrigger/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to receive updates when a sale is made in Gumroad. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following node. - Gumroad Trigger</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.gumroadTrigger/#1-gumroad-trigger-node","title":"1. Gumroad Trigger node","text":"<ol> <li>First of all, you'll have to enter credentials for the Gumroad Trigger node. You can find out how to do that here.</li> <li>Select 'Sale' from the Resource dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Gumroad Trigger node.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.helpScoutTrigger/","title":"Help Scout Trigger","text":"<p>Help Scout is a help desk software that provides an email-based customer support platform, knowledge base tool, and an embeddable search/contact widget for customer service professionals.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.helpScoutTrigger/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to receive updates when a customer is created in Help Scout. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following node. - Help Scout Trigger</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.helpScoutTrigger/#1-help-scout-trigger-node","title":"1. Help Scout Trigger node","text":"<ol> <li>First of all, you'll have to enter credentials for the Help Scout Trigger node. You can find out how to do that here.</li> <li>Select 'Customer - Created' from the Events dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Help Scout Trigger node.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.hubspotTrigger/","title":"HubSpot Trigger","text":"<p>HubSpot provides tools for social media marketing, content management, web analytics, landing pages, customer support, and search engine optimization.</p> <p>\ud83d\udd11 Credentials</p> <p>For this node, you will have to retrieve the App ID and Client secret from the 'Using OAuth' section as well as the Developer API Key from the 'Using Developer API Key' section. You can find authentication information for this node here.</p> <p>Webhooks</p> <p>If you activate a second trigger, the previous trigger stops working. This is because the trigger registers a new webhook with HubSpot when activated. HubSpot only allows one webhook at a time.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.hubspotTrigger/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to receive updates when a new contact is created in HubSpot. You can also find the workflow on the website. This example usage workflow would use the following node. - HubSpot Trigger</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.hubspotTrigger/#1-hubspot-trigger-node","title":"1. HubSpot Trigger node","text":"<ol> <li>First of all, you'll have to enter credentials for the HubSpot Trigger node. You can find out how to do that here.</li> <li>Enter the HubSpot App ID in the App ID field. You can find out how to obtain the App ID in the link above.</li> <li>Click on Execute Node to run the workflow.</li> </ol> <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the HubSpot Trigger node.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.invoiceNinjaTrigger/","title":"Invoice Ninja Trigger","text":"<p>Invoice Ninja is a free open-source online invoicing app for freelancers &amp; businesses. It offers invoicing, payments, expense tracking, &amp; time-tasks.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.invoiceNinjaTrigger/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to receive updates when new invoices are created in Invoice Ninja. You can also find the workflow on the website. This example usage workflow would use the following node. - Invoice Ninja Trigger</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.invoiceNinjaTrigger/#1-invoice-ninja-trigger-node","title":"1. Invoice Ninja Trigger node","text":"<ol> <li>First of all, you'll have to enter credentials for the Invoice Ninja Trigger node. You can find out how to do that here.</li> <li>Select the 'Invoice Created' option from the Event dropdown list to receive updates when a new invoice is created.</li> <li>Click on Execute Node to run the workflow.</li> </ol> <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Invoice Ninja Trigger node.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.jiraTrigger/","title":"Jira Trigger","text":"<p>Jira is a proprietary issue tracking product developed by Atlassian that allows bug tracking and agile project management.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.jiraTrigger/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to receive updates for Jira events. You can also find the workflow on the website. This example usage workflow would use the following node. - Jira Trigger</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.jiraTrigger/#1-jira-trigger-node","title":"1. Jira Trigger node","text":"<ol> <li>First of all, you'll have to enter credentials for the Jira Trigger node. You can find out how to do that here.</li> <li>Select the <code>*</code> option in the Events field to receive updates when any event is triggered.</li> <li>Click on Execute Node to run the workflow.</li> </ol> <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Jira Trigger node.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.jotFormTrigger/","title":"JotForm Trigger","text":"<p>JotForm is an online form building service. JotForm's software creates forms with a drag and drop creation tool and an option to encrypt user data.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.jotFormTrigger/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to receive updates for form events in JotForm. You can also find the workflow on the website. This example usage workflow would use the following node. - JotForm Trigger</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.jotFormTrigger/#1-jotform-trigger-node","title":"1. JotForm Trigger node","text":"<ol> <li>First of all, you'll have to enter credentials for the JotForm Trigger node. You can find out how to do that here.</li> <li>Select the form you want to receive updates for from the Form dropdown list.</li> <li>Click on Execute Node to run the workflow.</li> </ol> <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the JotForm Trigger node.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.kafkaTrigger/","title":"Kafka Trigger","text":"<p>Kafka is an open-source distributed event streaming platform that one can use for high-performance data pipelines, streaming analytics, data integration, and mission-critical applications.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.kafkaTrigger/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to receive messages from a topic and send an SMS if the value of the temperature is greater than 50. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Kafka Trigger - IF - Vonage - No Operation, do nothing</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.kafkaTrigger/#1-kafka-trigger-node","title":"1. Kafka Trigger node","text":"<p>This node will trigger the workflow when a new message is sent to the topic <code>test_topic</code>. If you're using a different topic, use that instead. We are sending the message <code>{ \"id\": 1, \"temp\": 100 }</code> to <code>test_topic</code>.</p> <ol> <li>First of all, you'll have to enter credentials for the Kafka Trigger node. You can find out how to do that here.</li> <li>Enter the name of the topic in the Topic field.</li> <li>Enter the group ID in the Group ID field.</li> <li>Click on Add Option and select 'JSON Parse Message'.</li> <li>Toggle JSON Parse Message to <code>true</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node gets triggered when a new message is sent to the <code>topic_test</code> topic in Kafka.</p> <p></p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.kafkaTrigger/#2-if-node","title":"2. IF node","text":"<p>This node will compare the value of <code>temp</code> that we received in the message from the previous node. If the value is greater than 50, it will return true otherwise false.</p> <ol> <li>Click on Add Condition and select 'Number' from the dropdown list.</li> <li>Click on the gears icon next to the Value 1 field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Kafka Trigger &gt; Output Data &gt; JSON &gt; message &gt; temp. You can also add the following expression: <code>{{$node[\"Kafka Trigger\"].json[\"message\"][\"temp\"]}}</code>.</li> <li>Select 'Larger' from the Operation dropdown list.</li> <li>Set Value 2 to 50.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns output for true when the temperature is greater than 50.</p> <p></p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.kafkaTrigger/#3-vonage-node-send-sms","title":"3. Vonage node (send: sms)","text":"<p>This node sends an SMS to the specified phone number when the value of <code>temp</code> is greater than <code>50</code>.</p> <ol> <li>Create a Vonage node connected to the 'true' output of the IF node.</li> <li>You'll have to enter credentials for the Vonage node. You can find out how to do that here.</li> <li>Enter the name of the sender in the From field. If you're using a number, enter the number instead.</li> <li>Enter the receiver's phone number in the To field.</li> <li> <p>Click on the gears icon next to the Message field and click on Add Expression.</p> </li> <li> <p>Enter the following in the Expression field. <pre><code>Alert!\nThe value of temp is {{$node[\"Kafka Trigger\"].json[\"message\"][\"temp\"]}}.\n</code></pre></p> </li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node sends an SMS with the value of <code>temp</code> that we received from the Kafka Trigger node.</p> <p></p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.kafkaTrigger/#4-noop-node","title":"4. NoOp node","text":"<p>Adding this node here is optional, as the absence of this node won't make a difference to the functioning of the workflow.</p> <ol> <li>Create a NoOp node connected to the 'false' output of the IF node.</li> <li>Click on Execute Node to run the node.</li> </ol> <p></p> <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Kafka Trigger node.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.keapTrigger/","title":"Keap Trigger","text":"<p>Keap is an e-mail marketing and sales platform for small businesses, including products to manage and optimize the customer lifecycle, customer relationship management, marketing automation, lead capture, and e-commerce.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.keapTrigger/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to receive updates when new contacts are created in Keap. You can also find the workflow on the website. This example usage workflow would use the following node. - Keap Trigger</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.keapTrigger/#1-keap-trigger-node","title":"1. Keap Trigger node","text":"<ol> <li>First of all, you'll have to enter credentials for the Keap Trigger node. You can find out how to do that here.</li> <li>Select the 'Contact Add' option from the Event dropdown list to receive updates when a new contact is created.</li> <li>Click on Execute Node to run the workflow.</li> </ol> <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Keap Trigger node.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.koBoToolboxTrigger/","title":"KoBo Toolbox trigger","text":"<p>KoBo toolbox is a field survey and data collection tool that makes it easy to design interactive forms to be completed offline from mobile devices. It is available both as a free cloud solution or as a self-hosted version.</p> <p>Credentials</p> <p>You can find authentication information for this node here.</p> <p>This node starts a workflow upon new submissions of a specified form. The trigger node handles the creation/deletion of the hook, so you don't need to do any setup in KoBo Toolbox.</p> <p>It works the same way as the Get Submission operation in the KoBoToolbox node, including supporting the same reformatting options.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.lemlistTrigger/","title":"Lemlist Trigger","text":"<p>Lemlist is an email outreach platform that allows you to automatically generate personalized images and videos and send personalized cold emails.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.lemlistTrigger/#events","title":"Events","text":"<ul> <li>Email Bounced</li> <li>Email Clicked</li> <li>Email Opened</li> <li>Email Replied</li> <li>Email Send Failed</li> <li>Email Sent</li> <li>Email Unsubscribed</li> </ul>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.lemlistTrigger/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to send a message on Mattermost when a lead replies to your email. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following node. - Lemlist Trigger - Mattermost</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.lemlistTrigger/#1-lemlist-trigger","title":"1. Lemlist Trigger","text":"<p>The Lemlist Trigger node will trigger the workflow when a lead sends a reply to the campaign <code>Docs campaign</code>. If you have a different campaign, use that instead.</p> <ol> <li>First of all, you'll have to enter credentials for the Lemlist Trigger node. You can find out how to do that here.</li> <li>Select 'Email Replied' from the Events dropdown list.</li> <li>Click on Add Field and select 'Campaign ID'.</li> <li>Select 'Docs campaign' from the Campaign ID dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns the information of the reply that was sent by a lead. This output is passed on to the next node in the workflow.</p> <p></p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.lemlistTrigger/#2-mattermost-node-post-message","title":"2. Mattermost node (post: message)","text":"<p>This node will send a message to the <code>Leads</code> channel in Mattermost. If you have a different channel, use that instead.</p> <ol> <li>First of all, you'll have to enter credentials for the Mattermost node. You can find out how to enter credentials for this node here.</li> <li>Select a channel from the Channel ID dropdown list.</li> <li> <p>Click on the gears icon next to the Message field click on Add Expression.</p> </li> <li> <p>Enter the following message in the Expression field: <pre><code>{{$json[\"firstName\"]}} has replied back to your {{$json[\"campaignName\"]}}. Below is the reply:\n&gt; {{$json[\"text\"]}}\n</code></pre></p> </li> <li>Click on Execute Node to run the workflow.</li> </ol> <p>In the screenshot below, you will notice that the node sends a message with a reply to the <code>Leads</code> channel in Mattermost.</p> <p></p> <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Lemlist Trigger node.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.linearTrigger/","title":"Linear Trigger","text":"<p>Linear is a SaaS issue tracking tool.</p> <p>Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.linearTrigger/#events","title":"Events","text":"<ul> <li>Comment Reaction</li> <li>Cycle</li> <li>Issue</li> <li>Issue Comment</li> <li>Issue Label</li> <li>Project</li> </ul>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.mailchimpTrigger/","title":"Mailchimp Trigger","text":"<p>Mailchimp is an integrated marketing platform that allows business owners to automate their email campaigns and track user engagement.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.mailchimpTrigger/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to receive updates when Subscribe events occur in a MailChimp list. You can also find the workflow on the website. This example usage workflow would use the following node. - Mailchimp Trigger</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.mailchimpTrigger/#1-mailchimp-trigger-node","title":"1. Mailchimp Trigger node","text":"<ol> <li>First of all, you'll have to enter credentials for the Mailchimp Trigger node. You can find out how to do that here.</li> <li>Select the list you want to listen to from the List dropdown list.</li> <li>Select 'Subscribe' from the Events dropdown list.</li> <li>Select 'API', 'Admin', and 'User' from the Sources dropdown list.</li> <li>Click on Execute Node to run the workflow.</li> </ol> <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Mailchimp Trigger node.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.mailerLiteTrigger/","title":"MailerLite Trigger","text":"<p>MailerLite is an email marketing solution that provides you with a user-friendly content editor, simplified subscriber management, and campaign reports with the most important statistics.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.mailerLiteTrigger/#events","title":"Events","text":"<ul> <li>Campaign Sent</li> <li>Subscriber Added to Group</li> <li>Subscriber Added through Webform</li> <li>Subscriber Autonomation Completed</li> <li>Subscriber Autonomation Triggered</li> <li>Subscriber Bounced</li> <li>Subscriber Created</li> <li>Subscriber Complained</li> <li>Subscriber Removed from Group</li> <li>Subscriber Unsubscribe</li> <li>Subscriber Updated</li> </ul>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.mailerLiteTrigger/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to receive updates when a subscriber is added to a group in MailerLite and add them to a base in Airtable. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following node. - MailerLite Trigger - Set - Airtable</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.mailerLiteTrigger/#1-mailerlite-trigger","title":"1. MailerLite Trigger","text":"<p>The MailerLite Trigger node will trigger the workflow when a subscriber is added to a group in MailerLite.</p> <ol> <li>First of all, you'll have to enter credentials for the MailerLite Trigger node. You can find out how to do that here.</li> <li>Select 'Subscriber Added to Group' from the Events dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns the information of the subscriber that was added to a group in MailerLite. This output is passed on to the next node in the workflow.</p> <p></p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.mailerLiteTrigger/#2-set-node","title":"2. Set node","text":"<p>We will use the Set node to ensure that only the data that we set in this node gets passed on to the next nodes in the workflow.</p> <ol> <li>Click on Add Value and select 'String' from the dropdown list.</li> <li>Enter <code>Name</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; MailerLite Trigger &gt; Output Data &gt; JSON &gt; data &gt; subscriber &gt; name. You can also add the following expression: <code>{{$node[\"MailerLite Trigger\"].json[\"data\"][\"subscriber\"][\"name\"]}}</code>.</li> <li>Click on Add Value and select 'String' from the dropdown list.</li> <li>Enter <code>Email</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; MailerLite Trigger &gt; Output Data &gt; JSON &gt; data &gt; subscriber &gt; email. You can also add the following expression: <code>{{$node[\"MailerLite Trigger\"].json[\"data\"][\"subscriber\"][\"email\"]}}</code>.</li> <li>Toggle Keep Only Set to <code>true</code>. We set this option to true to ensure that only the data that we have set in this node get passed on to the next nodes in the workflow.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node uses the data from the previous node and returns the data that we set for the workflow.</p> <p></p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.mailerLiteTrigger/#3-airtable-node","title":"3. Airtable node","text":"<p>This node will store the data coming from the previous node in a table in Airtable.</p> <ol> <li>First of all, you'll have to enter credentials for the Airtable node. You can find out how to do that here.</li> <li>Select 'Append' from the Operation dropdown list.</li> <li>Enter the base ID in the Base ID field. For obtaining the Base ID, head over to their API page and select the correct base. You\u2019ll find the Base ID under the Introduction section.</li> <li>In Doc\u00b2, paste the ID of the base in the Base ID field.</li> <li>Enter the table name in the Table name field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node adds the information of the subscriber from the previous node in a table in Airtable.</p> <p></p> <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the MailerLite Trigger node.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.mailjetTrigger/","title":"Mailjet Trigger","text":"<p>Mailjet is a cloud-based email sending and tracking system. The platform allows professionals to send both marketing emails and transactional emails. It includes tools for designing emails, sending massive volumes and tracking these messages.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.mailjetTrigger/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to receive updates when emails are sent in Mailjet. You can also find the workflow on the website. This example usage workflow would use the following node. - Mailjet Trigger</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.mailjetTrigger/#1-mailjet-trigger-node","title":"1. Mailjet Trigger node","text":"<ol> <li>First of all, you'll have to enter credentials for the Mailjet Trigger node. You can find out how to do that here.</li> <li>Select the <code>email.sent</code> option from the Event dropdown list to receive updates when an email is sent.</li> <li>Click on Execute Node to run the workflow.</li> </ol> <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Mailjet Trigger node.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.mauticTrigger/","title":"Mautic Trigger","text":"<p>Mautic is an open-source marketing automation software that helps online businesses automate their repetitive marketing tasks such as lead generation, contact scoring, contact segmentation, and marketing campaigns.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.mauticTrigger/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to receive updates when a form is submitted in Mautic using the Mautic Trigger node and send an SMS confirmation to the submitter. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following node. - Mautic Trigger - Twilio</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.mauticTrigger/#1-mautic-trigger-node","title":"1. Mautic Trigger node","text":"<p>The Mautic Trigger node will trigger the workflow when a Mautic form is submitted.</p> <ol> <li>First of all, you'll have to enter credentials for the Mautic Trigger node. You can find out how to do that here.</li> <li>Select 'Form Submit Event' from the Events dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns the data that was submitted to the Mautic form. This output is passed on to the next nodes in the workflow.</p> <p></p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.mauticTrigger/#2-twilio-node-send-sms","title":"2. Twilio node (send: sms)","text":"<p>This node sends a registration confirmation SMS to the users who filled out the Mautic form. We get the phone number of the submitter from the previous node.</p> <ol> <li> <p>First of all, you'll have to enter credentials for the Twilio node. You can find out how to do that here.</p> </li> <li> <p>Enter the Twilio phone number in the From field.</p> </li> <li>Click on the gears icon next to the To field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Mautic Trigger &gt; Output Data &gt; JSON &gt; mautic.form_on_submit &gt; [item: 0] &gt; submission &gt; results &gt; phone_number. You can also add the following expression: <code>{{$node[\"Mautic Trigger\"].json[\"mautic.form_on_submit\"][0][\"submission\"][\"results\"][\"phone_number\"]}}</code>.</li> <li>Click on the gears icon next to the Message field and click on Add Expression.</li> <li>Enter the following message in the Expression field. <pre><code>Hey, {{$node[\"Mautic Trigger\"].json[\"mautic.form_on_submit\"][0][\"submission\"][\"results\"][\"first_name\"]}} \ud83d\udc4b\nThank you for signing up for the Webinar - Getting Started with Workflow\u00b2. The webinar will start at 1800 CEST on 31st October 2020.\nSee you there!\n</code></pre></li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node sends an SMS to the submitter whose name and phone number are returned by the Mautic Trigger node.</p> <p></p> <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Mautic Trigger node.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.mqttTrigger/","title":"MQTT Trigger","text":"<p>MQTT is an open OASIS and ISO standard lightweight, publish-subscribe network protocol that transports messages between devices.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.mqttTrigger/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to receive messages from a queue using the MQTT Trigger node. You can also find the workflow on the website. This example usage workflow would use the following node. - MQTT Trigger</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.mqttTrigger/#1-mqtt-trigger-node","title":"1. MQTT Trigger node","text":"<ol> <li>First of all, you'll have to enter credentials for the MQTT Trigger node. You can find out how to do that here.</li> <li>Enter the name of the topic in the Topics field.</li> <li>Click on Execute Node to run the workflow.</li> </ol> <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the MQTT Trigger node.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.netlifyTrigger/","title":"Netlify Trigger","text":"<p>Netlify offers hosting and serverless backend services for web applications and static websites.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.notionTrigger/","title":"Notion Trigger","text":"<p>Notion is an all-in-one workspace for your notes, tasks, wikis, and databases.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.notionTrigger/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to receive a message on Mattermost when new meeting notes get added to the Notion. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Notion Trigger - IF - Mattermost - No Operation, do nothing</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.notionTrigger/#1-notion-trigger-node","title":"1. Notion Trigger node","text":"<p>The Notion Trigger node will trigger the workflow when new data gets added to Notion.</p> <ol> <li>First of all, you'll have to enter credentials for the Notion Trigger node. You can find out how to do that here.</li> <li>Click on Add Poll Time and select 'Every Hour' from the Mode dropdown list. This will check Notion every hour for new meeting notes.</li> <li>Select 'Page Added to Database' from the Event dropdown list.</li> <li>Select the database that contains the meeting notes from the Database dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns the new data from Notion. This output gets passed on to the next node in the workflow.</p> <p>Note: Make sure to add a field with the <code>Created Time</code> property type in your Notion database.</p> <p></p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.notionTrigger/#2-if-node","title":"2. IF node","text":"<p>This node will check if the notes belong to the <code>Marketing</code> team. If the team is <code>Marketing</code> the node will return <code>true</code>, otherwise <code>false</code>.</p> <ol> <li>Click on Add Condition and select 'String'.</li> <li>Click on the gears icon next to the Value 1 field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; properties &gt; Team. You can also add the following expression: <code>{{$json[\"properties\"][\"Team\"]}}</code>.</li> <li>Enter <code>Marketing</code> in the Value 2 field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node checks the team that we received from the previous node and returns <code>true</code> if the value equals <code>Marketing</code>.</p> <p></p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.notionTrigger/#3-mattermost-node-post-message","title":"3. Mattermost node (post: message)","text":"<p>This node will send a message about the new data in the channel 'Marketing' in Mattermost. If you have a different channel, use that instead.</p> <ol> <li> <p>First of all, you'll have to enter credentials for the Mattermost node. You can find out how to do that here.</p> </li> <li> <p>Select a channel from the Channel ID dropdown list.</p> </li> <li>Click on the gears icon next to the Message field and click on Add Expression.</li> <li>Enter the following message in the Expression field: <pre><code>New meeting notes got added.\nAgenda: {{$json[\"properties\"][\"Agenda\"][\"content\"]}}\nDate: {{$json[\"properties\"][\"created time\"]}}\n</code></pre></li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node sends a message in Mattermost about the new data that got added to Notion.</p> <p></p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.notionTrigger/#5-noop-node","title":"5. NoOp node","text":"<p>Adding this node here is optional, as the absence of this node won't make a difference to the functioning of the workflow.</p> <ol> <li>Create a NoOp node connected to the 'false' output of the IF node.</li> <li>Click on Execute Node to run the node.</li> </ol> <p></p> <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Notion Trigger node.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.onfleetTrigger/","title":"Onfleet trigger","text":"<p>Onfleet is a logistics platform offering a last-mile delivery solution.</p> <p>Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.onfleetTrigger/#operations","title":"Operations","text":"<p>Trigger a workflow on:</p> <ul> <li>SMS recipient opt out</li> <li>SMS recipient response missed</li> <li>Task arrival</li> <li>Task assigned</li> <li>Task cloned</li> <li>Task completed</li> <li>Task created</li> <li>Task delayed</li> <li>Task ETA</li> <li>Task failed</li> <li>Task started</li> <li>Task unassigned</li> <li>Task updated</li> <li>Worker created</li> <li>Worker deleted</li> <li>Worker duty</li> </ul>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.payPalTrigger/","title":"PayPal Trigger","text":"<p>PayPal is a digital payment service that supports online fund transfers that customers can use when shopping online.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.payPalTrigger/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to receive updates when a billing plan is activated in PayPal. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following node. - PayPal Trigger</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.payPalTrigger/#1-paypal-trigger-node","title":"1. PayPal Trigger node","text":"<ol> <li>First of all, you'll have to enter credentials for the PayPal Trigger node. You can find out how to do that here.</li> <li>Select 'Billing Plan Activated' from the Events dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the PayPal Trigger node.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.pipedriveTrigger/","title":"Pipedrive Trigger","text":"<p>Pipedrive is a cloud-based sales software company that aims to improve the productivity of businesses through the use of their software.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.pipedriveTrigger/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to receive updates for all changes in Pipedrive. You can also find the workflow on the website. This example usage workflow would use the following node. - Pipedrive Trigger</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.pipedriveTrigger/#1-pipedrive-trigger-node","title":"1. Pipedrive Trigger node","text":"<ol> <li>First of all, you'll have to enter credentials for the Pipedrive Trigger node. You can find out how to do that here.</li> <li>Click on Execute Node to run the workflow.</li> </ol> <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Pipedrive Trigger node.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.postmarkTrigger/","title":"Postmark Trigger","text":"<p>Postmark helps deliver and track application email. You can track statistics such as the number of emails sent or processed, opens, bounces and, spam complaints.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.postmarkTrigger/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to receive updates when an email is bounced or opened using the Postmark Trigger Node. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following node. - Postmark Trigger</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.postmarkTrigger/#1-postmark-trigger-node","title":"1. Postmark Trigger node","text":"<ol> <li>First of all, you'll have to enter credentials for the Postmark Trigger node. You can find out how to do that here.</li> <li>Select 'Bounce' from the Events dropdown list.</li> <li>Select 'Open' from the Events dropdown list.</li> <li>Toggle the Include Content field to true.</li> <li>Click on Execute Node to run the node.</li> </ol> <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Postmark Trigger node.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.pushcutTrigger/","title":"Pushcut Trigger","text":"<p>Pushcut is an app for iOS that lets you create smart notifications to kick off shortcuts, URLs, and online automation.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.pushcutTrigger/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to send an SMS to a number whenever you go out. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Pushcut Trigger - Twilio</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.pushcutTrigger/#1-pushcut-trigger-node","title":"1. Pushcut Trigger node","text":"<p>Whenever you leave your house, Pushcut will send you a notification with an action <code>Leaving Home</code>. The Pushcut Trigger node will trigger the workflow when this action is selected.</p> <p>To create an action in the Pushcut app, follow the instructions mentioned in FAQs.</p> <ol> <li>First of all, you'll have to enter credentials for the Pushcut Trigger node. You can find out how to do that here.</li> <li>Enter an action name in the Action Name field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node triggers the workflow whenever the <code>Leaving Home</code> action is selected.</p> <p></p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.pushcutTrigger/#2-twilio-node-send-sms","title":"2. Twilio node (send: sms)","text":"<p>This node will send an SMS to a specified phone number notifying the recipient that you are going out.</p> <ol> <li>First of all, you'll have to enter credentials for the Twilio node. You can find out how to do that here.</li> <li>Enter the Twilio phone number in the From field.</li> <li>Enter the receiver's phone number in the To field.</li> <li> <p>Click on the gears icon next to the Message field and click on Add Expression.</p> </li> <li> <p>Enter <code>I'm {{$node[\"Pushcut Trigger\"].json[\"input\"]}}</code> in the Expression field.</p> </li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node sends an SMS with the input that we received from the Pushcut Trigger node.</p> <p></p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.pushcutTrigger/#faqs","title":"FAQs","text":""},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.pushcutTrigger/#how-to-configure-a-pushcut-action","title":"How to configure a Pushcut action?","text":"<p>Follow the steps mentioned below to configure your Pushcut Trigger node with your Pushcut app.</p> <ol> <li>In your Puschcut app, select a notification from the Notifications screen.</li> <li>Click on the Add Action button.</li> <li>Enter an action name in the Label field.</li> <li>Select the Server tab.</li> <li>Select the Integration tab.</li> <li>Click on Integration Trigger.</li> <li>In Doc\u00b2, enter a name for the action and click on Execute Node.</li> <li>Select this action under the Select Integration Trigger screen in your Pushcut app.</li> <li>Click on Done on the top right to save the action.</li> </ol> <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Pushcut Trigger node.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.rabbitmqTrigger/","title":"RabbitMQ Trigger","text":"<p>RabbitMQ is an open-source message broker that accepts and forwards messages.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.rabbitmqTrigger/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to receive messages from a queue and send an SMS if the value of the temperature is greater than 50. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - RabbitMQ Trigger - IF - Vonage - No Operation, do nothing</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.rabbitmqTrigger/#1-rabbitmq-trigger-node","title":"1. RabbitMQ Trigger node","text":"<p>This node will trigger the workflow when a new message is sent to the queue <code>temp</code>. If you're using a different queue, use that instead. We are sending the message <code>{ \"id\": 1, \"temp\": 100 }</code> to <code>temp</code>.</p> <ol> <li>First of all, you'll have to enter credentials for the RabbitMQ Trigger node. You can find out how to do that here.</li> <li>Enter the name of the queue or topic in the Queue / Topic field.</li> <li>Click on Add Option and select 'JSON Parse Body'.</li> <li>Toggle JSON Parse Body to <code>true</code>. By setting this value to true, the node returns the body as JSON instead of a string.</li> <li>Click on Add Option and select 'Only Content'.</li> <li>Toggle Only Content to <code>true</code>. By setting this to true, the node only returns the message.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node gets triggered when a new message is sent to the <code>temp</code> queue in RabbitMQ.</p> <p></p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.rabbitmqTrigger/#2-if-node","title":"2. IF node","text":"<p>This node will compare the value of <code>temp</code> that we received in the message from the previous node. If the value is greater than 50, it will return true otherwise false.</p> <ol> <li>Click on Add Condition and select 'Number' from the dropdown list.</li> <li>Click on the gears icon next to the Value 1 field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; RabbitMQ &gt; Output Data &gt; JSON &gt; temp. You can also add the following expression: <code>{{$node[\"RabbitMQ\"].json[\"temp\"]}}</code>.</li> <li>Select 'Larger' from the Operation dropdown list.</li> <li>Set Value 2 to 50.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns output for true when the temperature is greater than 50.</p> <p></p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.rabbitmqTrigger/#3-vonage-node-send-sms","title":"3. Vonage node (send: sms)","text":"<p>This node sends an SMS to the specified phone number when the value of <code>temp</code> is greater than <code>50</code>.</p> <ol> <li>Create a Vonage node connected to the 'true' output of the IF node.</li> <li>You'll have to enter credentials for the Vonage node. You can find out how to do that here.</li> <li>Enter the name of the sender in the From field. If you're using a number, enter the number instead.</li> <li>Enter the receiver's phone number in the To field.</li> <li> <p>Click on the gears icon next to the Message field and click on Add Expression.</p> </li> <li> <p>Enter the following in the Expression field. <pre><code>Alert!\nThe value of temp is {{$node[\"RabbitMQ\"].json[\"temp\"]}}.\n</code></pre></p> </li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node sends an SMS with the value of <code>temp</code> that we received from the RabbitMQ Trigger node.</p> <p></p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.rabbitmqTrigger/#4-noop-node","title":"4. NoOp node","text":"<p>Adding this node here is optional, as the absence of this node won't make a difference to the functioning of the workflow.</p> <ol> <li>Create a NoOp node connected to the 'false' output of the IF node.</li> <li>Click on Execute Node to run the node.</li> </ol> <p></p> <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the RabbitMQ Trigger node.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.redisTrigger/","title":"Redis trigger","text":"<p>Redis is an open-source, in-memory data structure store, used as a database, cache and message broker.</p> <p>Credentials</p> <p>You can find authentication information for this node here.</p> <p>Use the Redis trigger node to subscribe to a Redis channel. The workflow starts whenever the channel receives a new message.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.seaTableTrigger/","title":"SeaTable Trigger","text":"<p>SeaTable is a collaborative database application with a spreadsheet interface.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.seaTableTrigger/#example-usage","title":"Example usage","text":"<p>This workflow allows you to receive updates when new rows are created in a Table. This example usage workflow would use the following node. - SeaTable Trigger</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.seaTableTrigger/#1-seatable-trigger-node","title":"1. SeaTable Trigger node","text":"<ol> <li>First enter your credentials for the SeaTable Trigger node. You can find out how to do that here.</li> <li>Select the Table you want to receive updates for.</li> <li>From the Events dropdown select Row Created.</li> <li>Click on Execute Node to run the workflow.</li> </ol> <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the node.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.shopifyTrigger/","title":"Shopify Trigger","text":"<p>Shopify is an e-commerce platform that allows users to set up an online store and sell their products.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.shopifyTrigger/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to receive updates when a new order is created in Shopify. You can also find the workflow on the website. This example usage workflow would use the following node. - Shopify Trigger</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.shopifyTrigger/#1-shopify-trigger-node","title":"1. Shopify Trigger node","text":"<ol> <li>First of all, you'll have to enter credentials for the Shopify Trigger node. You can find out how to do that here.</li> <li>Select 'Orders create' from the Topic dropdown list.</li> <li>Click on Execute Node to run the workflow.</li> </ol> <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Shopify Trigger node.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.stravaTrigger/","title":"Strava Trigger","text":"<p>Strava is an internet service for tracking human exercise which incorporates social network features.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.stravaTrigger/#events","title":"Events","text":"<p>* - <code>*</code> - Created - Deleted - Updated</p> <p>Activity - <code>*</code> - Created - Deleted - Updated</p> <p>Athlete - <code>*</code> - Created - Deleted - Updated</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.stravaTrigger/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to receive updates when a new activity gets created in Strava using the Strava Trigger node. It also allows you to tweet about the activity that was created in Strava using the Twitter node. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following node. - Strava Trigger - Twitter</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.stravaTrigger/#1-strava-trigger-node","title":"1. Strava Trigger node","text":"<p>This node will trigger the workflow when a new activity gets created in Strava.</p> <ol> <li>First of all, you'll have to enter credentials for the Strava Trigger node. You can find out how to do that here.</li> <li>Select 'Activity' from the Object dropdown list.</li> <li>Select 'created' from the Event dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node triggers the workflow when a new activity gets created in Strava.</p> <p></p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.stravaTrigger/#2-twitter-node-create-tweet","title":"2. Twitter node (create: tweet)","text":"<p>This node will tweet about the activity that gets created in Strava.</p> <ol> <li>First of all, you'll have to enter credentials for the Twitter node. You can find out how to do that here.</li> <li> <p>Click on the gears icon next to the Text field and click on Add Expression.</p> </li> <li> <p>Enter the following text in the Expression field: <code>I ran {{$node[\"Strava Trigger\"].json[\"object_data\"][\"distance\"]}} meters and completed my {{$node[\"Strava Trigger\"].json[\"object_data\"][\"name\"]}}!</code></p> </li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that this node gets the information of the activity in Strava from the previous node and tweets about it.</p> <p></p> <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Strava Trigger node.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.stripeTrigger/","title":"Stripe Trigger","text":"<p>Stripe is a suite of payment APIs that powers commerce for online businesses.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.stripeTrigger/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to receive updates for Stripe events. You can also find the workflow on the website. This example usage workflow would use the following node. - Stripe Trigger</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.stripeTrigger/#1-stripe-trigger-node","title":"1. Stripe Trigger node","text":"<ol> <li>First of all, you'll have to enter credentials for the Stripe Trigger node. You can find out how to do that here.</li> <li>Select the <code>*</code> option in the Events field to receive updates when any event is triggered.</li> <li>Click on Execute Node to run the workflow.</li> </ol> <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Stripe Trigger node.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.surveyMonkeyTrigger/","title":"SurveyMonkey Trigger","text":"<p>SurveyMonkey is an online cloud-based SaaS survey platform that also provides a suite of paid back-end programs.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.surveyMonkeyTrigger/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to receive updates when responses are created for SurveyMonkey surveys. You can also find the workflow on the website. This example usage workflow would use the following node. - SurveyMonkey Trigger</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.surveyMonkeyTrigger/#1-surveymonkey-trigger-node","title":"1. SurveyMonkey Trigger node","text":"<ol> <li>First of all, you'll have to enter credentials for the SurveyMonkey Trigger node. You can find out how to do that here.</li> <li>Select the 'Survey' option from the Type dropdown list.</li> <li>Select 'Response Created' from the Event dropdown list.</li> <li>Select the surveys you want to receive updates for from the Survey IDs dropdown list.</li> <li>Click on Execute Node to run the workflow.</li> </ol> <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the SurveyMonkey Trigger node.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.taigaTrigger/","title":"Taiga Trigger","text":"<p>Taiga is a free and open-source project management platform for startups, agile developers, and designers.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.taigaTrigger/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to receive updates when an event occurs in Taiga. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following node. - Taiga Trigger</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.taigaTrigger/#1-taiga-trigger-node","title":"1. Taiga Trigger node","text":"<ol> <li>First of all, you'll have to enter credentials for the Taiga Trigger node. You can find out how to do that here.</li> <li>Select the project ID from the Project ID dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Taiga Trigger node.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.telegramTrigger/","title":"Telegram Trigger","text":"<p>Telegram is a cloud-based instant messaging and voice over IP service. Users can send messages and exchange photos, videos, stickers, audio, and files of any type.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.telegramTrigger/#updates","title":"Updates","text":"<ul> <li><code>*</code>: All updates</li> <li>message: Trigger on a new incoming message of any kind- text, photo, sticker, etc</li> <li>edited_message: Trigger on a new version of a channel post that is known to the bot and was edited</li> <li>channel_post: Trigger on a new incoming channel post of any kind - text, photo, sticker, etc</li> <li>edited_channel_post: Trigger on a new version of a channel post that is known to the bot and was edited</li> <li>inline_query: Trigger on a new incoming inline query</li> <li>callback_query: Trigger on a new incoming callback query</li> <li>shipping_query: Trigger on a new incoming shipping query. Only for invoices with flexible price</li> <li>pre_checkout_query: Trigger on a new incoming pre-checkout query. Contains full information about checkout</li> <li>poll: Trigger on a new poll state. Bots receive only updates about stopped polls and polls which are sent by the bot</li> </ul>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.telegramTrigger/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to receive messages using the Telegram Trigger node and send an image of a cocktail when a message is received. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Telegram Trigger - HTTP Request - Telegram</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.telegramTrigger/#1-telegram-trigger-node","title":"1. Telegram Trigger node","text":"<p>This node will trigger the workflow when a user sends a new message.</p> <ol> <li>First of all, you'll have to enter credentials for the Telegram Trigger node. You can find out how to do that here.</li> <li>Select 'message' from the Updates dropdown list. This will trigger the workflow when a user sends a message.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node triggers the workflow when a user sends a new message.</p> <p></p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.telegramTrigger/#2-http-request-node-get","title":"2. HTTP Request node (GET)","text":"<p>This node will make a GET request to the API <code>https://www.thecocktaildb.com/api/json/v1/1/random.php</code> to fetch a random cocktail. This information gets passed on to the next node in the workflow.</p> <ol> <li>Enter <code>https://www.thecocktaildb.com/api/json/v1/1/random.php</code> in the URL field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node makes a GET request to the API and returns information about a random cocktail.</p> <p></p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.telegramTrigger/#3-telegram-node-sendphoto-message","title":"3. Telegram node (sendPhoto: message)","text":"<p>This node will send a reply to the message with the name and image of the cocktail that we got from the previous node.</p> <ol> <li>Select the credentials that you entered in the Telegram Trigger node.</li> <li>Select 'Send Photo' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Chat ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Telegram Trigger &gt; Output Data &gt; JSON &gt; message &gt; chat &gt; id. You can also add the following expression: <code>{{$node[\"Telegram Trigger\"].json[\"message\"][\"chat\"][\"id\"]}}</code>.</li> <li>Click on the gears icon next to the Photo field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; HTTP Request &gt; Output Data &gt; JSON &gt; drinks &gt; [item: 0] &gt; strDrinkThumb. You can also add the following expression: <code>{{$node[\"HTTP Request\"].json[\"drinks\"][0][\"strDrinkThumb\"]}}</code>.</li> <li>Click on Add Field and select 'Caption' from the dropdown list.</li> <li>Click on the gears icon next to the Caption field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; HTTP Request &gt; Output Data &gt; JSON &gt; drinks &gt; [item: 0] &gt; strDrink. You can also add the following expression: <code>{{$node[\"HTTP Request\"].json[\"drinks\"][0][\"strDrink\"]}}</code>.</li> <li>Click on Add Field and select 'Reply To Message ID' from the dropdown list.</li> <li>Click on the gears icon next to the Reply To Message ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Telegram Trigger &gt; Output Data &gt; JSON &gt; message &gt; message_id. You can also add the following expression: <code>{{$node[\"Telegram Trigger\"].json[\"message\"][\"message_id\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node sends a reply to the message with the name and image of the cocktail that we got from the previous node.</p> <p></p> <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Telegram Trigger node.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.theHiveTrigger/","title":"workflow nodes base.theHiveTrigger","text":"<p>TheHive is a scalable open-source and free security incident response platform.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.theHiveTrigger/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to receive updates when an event occurs in TheHive. You can also find the workflow on the website. This example usage workflow would use the following node. - TheHive Trigger</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.theHiveTrigger/#1-thehive-trigger-node","title":"1. TheHive Trigger node","text":"<p>This node will trigger the workflow whenever a new event occurs in TheHive. To trigger the workflow for a specific event, select that event instead.</p> <ol> <li>First of all, you'll have to add the webhook URL in TheHive instance configuration. Refer to the FAQs to learn how to configure a webhook in TheHive.</li> <li>Select the <code>*</code> from the Events dropdown list. This will trigger the workflow for all the events.</li> <li>Click on Execute Node to run the node.</li> </ol> <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the TheHive Trigger node.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.theHiveTrigger/#faqs","title":"FAQs","text":""},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.theHiveTrigger/#how-to-configure-a-webhook-in-thehive","title":"How to configure a Webhook in TheHive?","text":"<p>To configure the webhook for your TheHive instance follow the steps mentioned below. 1. Copy the webhook URL from TheHive Trigger node. 2. Add the following lines to the application.conf file. This is TheHive configuration file. <pre><code>notification.webhook.endpoints = [\n    {\n        name: WEBHOOK_NAME\n        url: WEBHOOK_URL\n        version: 0\n        wsConfig: {}\n        includedTheHiveOrganisations: [\"ORGANIZATION_NAME\"]\n        excludedTheHiveOrganisations: []\n    }\n]\n</code></pre> 3. Replace <code>WEBHOOK_URL</code> with the URL you copied in the previous step. 4. Replace <code>ORGANIZATION_NAME</code> with your organization name. 5. Execute the following cURL command to enable notifications. <pre><code>curl -XPUT -uTHEHIVE_USERNAME:THEHIVE_PASSWORD -H 'Content-type: application/json' THEHIVE_URL/api/config/organisation/notification -d '\n{\n    \"value\": [\n        {\n        \"delegate\": false,\n        \"trigger\": { \"name\": \"AnyEvent\"},\n        \"notifier\": { \"name\": \"webhook\", \"endpoint\": \"WEBHOOK_NAME\" }\n        }\n    ]\n}'\n</code></pre></p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.togglTrigger/","title":"Toggl Trigger","text":"<p>Toggl is a time tracking app that offers online time tracking and reporting services through their website along with mobile and desktop applications.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.togglTrigger/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to get new time entries from Toggl. You can also find the workflow on the website. This example usage workflow would use the following node. - Toggl Trigger</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.togglTrigger/#1-toggl-trigger-node","title":"1. Toggl Trigger node","text":"<ol> <li>First of all, you'll have to enter credentials for the Toggl Trigger node. You can find out how to do that here.</li> <li>Click on Execute Node to run the workflow.</li> </ol> <p>Note: This node uses polling to get new time entries. You'll have to use the Add Poll Time button if you want this Trigger node to run regularly to retrieve new time entries.</p> <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Toggl Trigger node.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.trelloTrigger/","title":"Trello Trigger","text":"<p>Trello is a web-based Kanban-style list-making application which is a subsidiary of Atlassian. Users can create their task boards with different columns and move the tasks between them.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.trelloTrigger/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to receive updates for changes in the specified list in Trello. You can also find the workflow on the website. This example usage workflow would use the following node. - Trello Trigger</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.trelloTrigger/#1-trello-trigger-node","title":"1. Trello Trigger node","text":"<ol> <li>First of all, you'll have to enter credentials for the Trello Trigger node. You can find out how to do that here.</li> <li>Enter the ID of the list in the Model ID field. You can find instructions on how to do that in the FAQs below.</li> <li>Click on Execute Node to run the workflow.</li> </ol> <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Trello Trigger node.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.trelloTrigger/#faqs","title":"FAQs","text":""},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.trelloTrigger/#how-do-i-find-the-model-id","title":"How do I find the Model ID?","text":"<p>For this specific example, the List ID would be the Model ID.</p> <ol> <li>Open the Trello board that contains the list.</li> <li>If the list doesn't have any cards, add a card to the list.</li> <li>Open the card, add '.json' at the end of the URL, and press enter.</li> <li>In the JSON file, you will see a field called <code>idList</code>.</li> <li>Copy <code>idList</code>and paste it in the Model ID field in Workflow\u00b2.</li> </ol>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.trelloTrigger/#what-is-the-model-id","title":"What is the Model ID?","text":"<p>It is the ID of any model in Trello. Depending on the use-case, it could be the User ID, List ID, and so on.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.typeformTrigger/","title":"Typeform Trigger","text":"<p>Typeform is an online software as a service company that specializes in online form building and online surveys. Its main software creates dynamic forms based on user needs.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.typeformTrigger/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to store the response of a form submission to Airtable and send a message to a channel on Slack. You can also find the workflow on the website. This example usage workflow would use the following nodes. - Typeform Trigger - Set - Airtable - Slack</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.typeformTrigger/#1-typeform-trigger-node","title":"1. Typeform Trigger node","text":"<p>This node will trigger the workflow when a form response is submitted.</p> <p>This example workflow uses a Typeform to collect name and email address. Create a form exactly like this for the example workflow. Here are the questions and their question types for the form.</p> Question Type Let's start with your name. Short Text What's your email address? Email <ol> <li>First of all, you'll have to enter credentials for the Typeform Trigger node. You can find out how to do that here.</li> <li>Select your form from the Form dropdown list.</li> <li>Click on Execute Node to run the workflow.</li> </ol> <p>In the screenshot below, you will notice that the Typeform Trigger node triggers the workflow and returns the response submitted by a user.</p> <p></p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.typeformTrigger/#2-set-node","title":"2. Set node","text":"<p>We will use the Set node to ensure that only the data that we set in this node gets passed on to the next nodes in the workflow. We will set the value of <code>Name</code> and <code>Email</code> in this node.</p> <ol> <li>Click on Add Value and select 'String' from the dropdown list.</li> <li>Enter <code>Name</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; Let's start with your name.. You can also add the following expression: <code>{{$json[\"Let's start with your name.\"]}}</code>.</li> <li>Click on Add Value and select 'String' from the dropdown list.</li> <li>Enter <code>Email</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; What's your email address?. You can also add the following expression: <code>{{$json[\"What's your email address?\"]}}</code>.</li> <li>Toggle Keep Only Set to <code>true</code>. We set this option to true to ensure that only the data that we have set in this node get passed on to the next nodes in the workflow.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node sets the values of <code>Name</code> and <code>Email</code>. These values are passed to the next node in the workflow.</p> <p></p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.typeformTrigger/#3-airtable-node-append","title":"3. Airtable node (Append)","text":"<p>This node will append the data that we set in the previous node to a table. Create a table like this in your Airtable base.</p> <ol> <li>First of all, you'll have to enter credentials for the Airtable node. You can find out how to do that here.</li> <li>Select 'Append' from the Operation dropdown list.</li> <li>Enter the Base ID in the Base ID field. For obtaining the Base ID, head over to their API page and select the correct base. You\u2019ll find the Base ID there.</li> <li>Enter the name of your table in the Table field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node appends the data that we had set in the previous node.</p> <p></p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.typeformTrigger/#4-slack-node-post-message","title":"4. Slack node (post: message)","text":"<p>This node will send a message about the new form submission to a channel in a Slack workspace.</p> <ol> <li>First of all, you'll have to enter credentials for the Slack node. You can find out how to do that here.</li> <li>Enter the name of a channel in the Channel field.</li> <li>Click on the gears icon next to the Text field and click on Add Expression.</li> <li>Enter the following text in the Expression Editor <pre><code>*New Submission*\nName: {{$node[\"Set\"].json[\"Name\"]}}\nEmail: {{$node[\"Set\"].json[\"Email\"]}}\n</code></pre></li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node sends a message with the new form response on Slack.</p> <p></p> <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Typeform Trigger node.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.webflowTrigger/","title":"Webflow Trigger","text":"<p>Webflow is an application that allows you to build responsive websites with browser-based visual editing software.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.webflowTrigger/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to receive updates when a form submission occurs in your Webflow website. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following node. - Webflow Trigger</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.webflowTrigger/#1-webflow-trigger-node","title":"1. Webflow Trigger node","text":"<ol> <li>First of all, you'll have to enter credentials for the Webflow Trigger node. You can find out how to do that here.</li> <li>Select your website from the Site dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Webflow Trigger node.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.wiseTrigger/","title":"Wise Trigger","text":"<p>Wise allows you to transfer money abroad with low-cost money transfers, receive money with international account details, and track transactions on your phone.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.wiseTrigger/#events","title":"Events","text":"<ul> <li>Triggered every time a balance account is credited</li> <li>Triggered every time a transfer's list of active cases is updated</li> <li>Triggered every time a transfer's status is updated</li> </ul>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.wiseTrigger/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to receive updates from Wise and add information of a transfer to a base in Airtable. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Wise Trigger - Wise - Set - Airtable</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.wiseTrigger/#1-wise-trigger-node-transferstatechange","title":"1. Wise Trigger node (transferStateChange)","text":"<p>This node will trigger the workflow when the status of your transfer changes.</p> <ol> <li>First of all, you'll have to enter credentials for the Wise Trigger node. You can find out how to do that here.</li> <li>Select 'Personal' from the Profile dropdown list.</li> <li>Select 'Transfer State Changed' from the Event dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node triggers the workflow when a new order gets created.</p> <p></p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.wiseTrigger/#2-wise-node-get-transfer","title":"2. Wise node (get: transfer)","text":"<p>This node will get the information about the transfer.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Transfer' from the Resource dropdown list.</li> <li>Select 'Get' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Transfer ID field.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; data &gt; resource &gt; id. You can also add the following expression: <code>{{$json[\"data\"][\"resource\"][\"id\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns the information of the transfer.</p> <p></p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.wiseTrigger/#3-set-node","title":"3. Set node","text":"<p>We will use the Set node to ensure that only the data that we set in this node gets passed on to the next nodes in the workflow. We will set the value of <code>Transfer ID</code>, <code>Date</code>, <code>Reference</code>, and <code>Amount</code> in this node.</p> <ol> <li>Click on Add Value and select 'String' from the dropdown list.</li> <li>Enter <code>Transfer ID</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$json[\"id\"]}}</code>.</li> <li>Click on Add Value and select 'String' from the dropdown list.</li> <li>Enter <code>Date</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; created. You can also add the following expression: <code>{{$json[\"created\"]}}</code>.</li> <li>Click on Add Value and select 'String' from the dropdown list.</li> <li>Enter <code>Reference</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; reference. You can also add the following expression: <code>{{$json[\"reference\"]}}</code>.</li> <li>Click on Add Value and select 'String' from the dropdown list.</li> <li>Enter <code>Amount</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; sourceValue. You can also add the following expression: <code>{{$json[\"sourceValue\"]}}</code>.</li> <li>Toggle Keep Only Set to <code>true</code>. We set this option to true to ensure that only the data that we have set in this node get passed on to the next nodes in the workflow.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node sets the values of <code>Transfer ID</code>, <code>Date</code>, <code>Reference</code>, and <code>Amount</code>. These values are passed to the next node in the workflow.</p> <p></p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.wiseTrigger/#4-airtable-node-append","title":"4. Airtable node (Append)","text":"<p>This node will append the data that we set in the previous node to a table. Create a table like this in your Airtable base.</p> <ol> <li>First of all, you'll have to enter credentials for the Airtable node. You can find out how to do that here.</li> <li>Select 'Append' from the Operation dropdown list.</li> <li>Enter the Base ID in the Base ID field. For obtaining the Base ID, head over to their API page and select the correct base. You\u2019ll find the Base ID there.</li> <li>Enter the name of your table in the Table field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node appends the data that we had set in the previous node.</p> <p></p> <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Wise Trigger node.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.wooCommerceTrigger/","title":"WooCommerce Trigger","text":"<p>WooCommerce is a customizable, open-source e-commerce plugin for WordPress.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.wooCommerceTrigger/#events","title":"Events","text":"<ul> <li>coupon.created</li> <li>coupon.updated</li> <li>coupon.deleted</li> <li>customer.created</li> <li>customer.updated</li> <li>customer.deleted</li> <li>order.created</li> <li>order.updated</li> <li>order.deleted</li> <li>product.created</li> <li>product.updated</li> <li>product.deleted</li> </ul>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.wooCommerceTrigger/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to send a message on Mattermost when an order is created in WooCommerce. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - WooCommerce Trigger - Mattermost</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.wooCommerceTrigger/#1-woocommerce-trigger-node","title":"1. WooCommerce Trigger node","text":"<p>This node will trigger the workflow when an order is created in your WooCommerce store.</p> <ol> <li>First of all, you'll have to enter credentials for the WooCommerce Trigger node. You can find out how to do that here.</li> <li>Select 'order.created' from the Event dropdown list. This will trigger the workflow when a user sends a message.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node triggers the workflow when a new order gets created.</p> <p></p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.wooCommerceTrigger/#2-mattermost-post-message","title":"2. Mattermost (post: message)","text":"<p>This node will send a message to a Mattermost channel sharing the details of the order that was created in WooCommerce.</p> <ol> <li>First of all, you'll have to enter credentials for the Mattermost node. You can find out how to do that here.</li> <li>Select the channel from the Channel ID dropdown list.</li> <li>Click on the gears icon next to Message field.</li> <li>Enter the following message in the Expression editor <pre><code>{{$node[\"WooCommerce Trigger\"].json[\"billing\"][\"first_name\"]}} bought {{$node[\"WooCommerce Trigger\"].json[\"line_items\"][0][\"name\"]}}!\n</code></pre></li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node sends a message to the <code>Sales</code> channel on Mattermost about the order that was created in WooCommerce.</p> <p></p> <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the WooCommerce Trigger node.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.workableTrigger/","title":"Workable Trigger","text":"<p>Workable is a recruiting platform.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.workableTrigger/#trigger-events","title":"Trigger Events","text":"<ul> <li>Candidate Created</li> <li>Candidate Moved</li> </ul>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.wufooTrigger/","title":"Wufoo Trigger","text":"<p>Wufoo is an online form builder that helps you create custom HTML forms without writing code.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.wufooTrigger/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to receive updates when a form is submitted in Wufoo. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following node. - Wufoo Trigger</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.wufooTrigger/#1-wufoo-trigger-node","title":"1. Wufoo Trigger node","text":"<ol> <li>First of all, you'll have to enter credentials for the Wufoo Trigger node. You can find out how to do that here.</li> <li>Select a form from the Forms dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Wufoo Trigger node.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.zendeskTrigger/","title":"Zendesk Trigger","text":"<p>Zendesk is a support ticketing system, designed to help track, prioritize, and solve customer support interactions. More than just a help desk, Zendesk Support helps nurture customer relationships with personalized, responsive support across any channel.</p> <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.zendeskTrigger/#example-usage","title":"Example Usage","text":"<p>This workflow allows you to receive updates for support in Zendesk. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following node. - Zendesk Trigger</p> <p>The final workflow should look like the following image.</p> <p></p>"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.zendeskTrigger/#1-zendesk-trigger-node","title":"1. Zendesk Trigger node","text":"<ol> <li>First of all, you'll have to enter credentials for the Zendesk Trigger node. You can find out how to do that here.</li> <li>Click on the Add Condition button and select 'All' from the dropdown list.</li> <li>Select 'Open' from the Value dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Zendesk Trigger node.</p>"},{"location":"workflow/reference/","title":"Overview","text":"<p>This section provides reference information about Doc\u00b2, including:</p> <ul> <li>Release notes</li> <li>CLI commands</li> <li>Keyboard shortcuts</li> <li>Glossary</li> <li>License</li> <li>Data collection</li> </ul>"},{"location":"workflow/reference/cli-commands/","title":"CLI commands for n8n","text":""},{"location":"workflow/reference/cli-commands/#start-a-workflow","title":"Start a workflow","text":"<p>Workflows can not only be started by triggers, webhooks, or manually via the Editor. It is also possible to start them directly via the CLI.</p> <p>Execute a saved workflow by its ID:</p> <pre><code>n8n execute --id &lt;ID&gt;\n</code></pre> <p>Execute a workflow from a workflow file: <pre><code>n8n execute --file &lt;WORKFLOW_FILE&gt;\n</code></pre></p>"},{"location":"workflow/reference/cli-commands/#change-the-active-status-of-a-workflow","title":"Change the active status of a workflow","text":"<p>You can change the active status of a workflow via the CLI.</p> <p>Set the active status of a workflow by its ID to false:</p> <pre><code>n8n update:workflow --id=&lt;ID&gt; --active=false\n</code></pre> <p>Set the active status of a workflow by its ID to true:</p> <pre><code>n8n update:workflow --id=&lt;ID&gt; --active=true\n</code></pre> <p>Set the active status to false for all the workflows:</p> <pre><code>n8n update:workflow --all --active=false\n</code></pre> <p>Set the active status to true for all the workflows:</p> <pre><code>n8n update:workflow --all --active=true\n</code></pre>"},{"location":"workflow/reference/cli-commands/#export-workflows-and-credentials","title":"Export workflows and credentials","text":"<p>You can export your workflows and credentials from Doc\u00b2 via the CLI.</p> <p>There are a couple of flags available for this.</p> Flag Description --help Help prompt. --all Exports all workflows/credentials. --backup Sets --all --pretty --separate for simple backups. Only --output has to be set additionally. --id The ID of the workflow to export. --output Outputs file name or directory if using separate files. --pretty Formats the output in an easier to read fashion. --separate Exports one file per workflow (useful for versioning). Must inform a directory via --output. --decrypted Exports the credentials in a decrypted (plain text) format."},{"location":"workflow/reference/cli-commands/#workflows","title":"Workflows","text":"<p>Export all your workflows to the standard output (terminal):</p> <pre><code>n8n export:workflow --all\n</code></pre> <p>Export a workflow by its ID and specify the output file name:</p> <pre><code>n8n export:workflow --id=&lt;ID&gt; --output=file.json\n</code></pre> <p>Export all workflows to a specific directory in a single file:</p> <pre><code>n8n export:workflow --all --output=backups/latest/\n</code></pre> <p>Export all the workflows to a specific directory using the <code>--backup</code> flag (details above):</p> <pre><code>n8n export:workflow --backup --output=backups/latest/\n</code></pre>"},{"location":"workflow/reference/cli-commands/#credentials","title":"Credentials","text":"<p>Export all your credentials to the standard output (terminal):</p> <pre><code>n8n export:credentials --all\n</code></pre> <p>Export credentials by their ID and specify the output file name:</p> <pre><code>n8n export:credentials --id=&lt;ID&gt; --output=file.json\n</code></pre> <p>Export all credentials to a specific directory in a single file:</p> <pre><code>n8n export:credentials --all --output=backups/latest/\n</code></pre> <p>Export all the credentials to a specific directory using the <code>--backup</code> flag (details above):</p> <pre><code>n8n export:credentials --backup --output=backups/latest/\n</code></pre> <p>Export all the credentials in a decrypted (plain text) format. This can be used to migrate from one installation to another that has a different secret key (in the config file).</p> <p>Note: All sensitive information will be visible in the files.</p> <pre><code>n8n export:credentials --all --decrypted --output=backups/decrypted.json\n</code></pre>"},{"location":"workflow/reference/cli-commands/#import-workflows-and-credentials","title":"Import workflows and credentials","text":"<p>You can import your workflows and credentials from Doc\u00b2 via the CLI.</p> <p> Update the IDs</p> <p>When exporting workflows and credentials, their IDs also get exported. If you have workflows and credentials with the same IDs in your existing database, they will get overwritten. To avoid this, delete or change the IDs before importing.</p> <p>There are a couple of flags available for this.</p> Flag Description --help Help prompt. --input Input file name or directory if --separate is used. --separate Imports *.json files from directory provided by --input. <p> Migrating to different database systems</p> <p>Workflow and credential names are limited to 128 characters, but SQLite does not enforce size limits correctly.</p> <p>This might result in errors like <code>Data too long for column name</code> during the import process.</p> <p>In this case, you can edit the names from the Doc\u00b2 interface and export again or edit the JSON file directly before importing.</p>"},{"location":"workflow/reference/cli-commands/#workflows_1","title":"Workflows","text":"<p>Import workflows from a specific file:</p> <p><pre><code>n8n import:workflow --input=file.json\n</code></pre> Import all the workflow files (*.json) from the specified directory:</p> <pre><code>n8n import:workflow --separate --input=backups/latest/\n</code></pre>"},{"location":"workflow/reference/cli-commands/#credentials_1","title":"Credentials","text":"<p>Import credentials from a specific file:</p> <pre><code>n8n import:credentials --input=file.json\n</code></pre> <p>Import all the credentials files (*.json) from the specified directory:</p> <pre><code>n8n import:credentials --separate --input=backups/latest/\n</code></pre>"},{"location":"workflow/reference/data-collection/","title":"Data collection","text":"<p>n8n collects selected usage and performance data to help us diagnose problems and improve the platform. We take care to keep this data anonymous and to avoid collecting sensitive data. Read about how this information is stored and processed in our privacy policy.</p>"},{"location":"workflow/reference/data-collection/#what-we-collect","title":"What we collect","text":"<ul> <li>Error codes and messages of failed executions (excluding any payload data, and not for custom nodes)</li> <li>The graph of a workflow (types of nodes used and how they are connected)</li> <li>From node parameters, only:<ul> <li>The 'resource' and 'operation' that a node is set to (if applicable)</li> <li>The domain for HTTP nodes (but no path, query parameters or other information)</li> </ul> </li> <li>The number of workflow executions and their status</li> <li>Details on how the UI is used (e.g. navigation, nodes panel searches)</li> <li>Diagnostic information<ul> <li>Doc\u00b2 version</li> <li>Selected settings:<ul> <li>DB_TYPE</li> <li>N8N_VERSION_NOTIFICATIONS_ENABLED</li> <li>N8N_DISABLE_PRODUCTION_MAIN_PROCESS</li> <li>Execution variables</li> <li>N8N_BASIC_AUTH_ACTIVE</li> </ul> </li> <li>OS, RAM, and CPUs</li> <li>Anonymous instance ID</li> </ul> </li> </ul>"},{"location":"workflow/reference/data-collection/#what-we-dont-collect","title":"What we don\u2019t collect","text":"<p>We do not collect private or sensitive information, such as:</p> <ul> <li>Personally identifiable information</li> <li>Credential information</li> <li>Node parameters (except 'resource' and 'operation')</li> <li>Execution data</li> <li>Sensitive settings (e.g. endpoints, ports, DB connections, username/password)</li> <li>Error payloads</li> </ul>"},{"location":"workflow/reference/data-collection/#how-collection-works","title":"How collection works","text":"<p>Telemetry is collected anonymously, with most data sent to Doc\u00b2 as events that generate it occur. Workflow execution counts and an instance pulse are sent periodically (every 6 hours).</p>"},{"location":"workflow/reference/data-collection/#opting-out-of-telemetry","title":"Opting out of telemetry","text":"<p>Telemetry collection is enabled by default. To disable it you can configure the following environment variables.</p> <p>To opt out of telemetry events:</p> <pre><code>export N8N_DIAGNOSTICS_ENABLED=false\n</code></pre> <p>To opt out of checking for new versions of n8n:</p> <pre><code>export N8N_VERSION_NOTIFICATIONS_ENABLED=false\n</code></pre> <p>See configuration for more info on how to set environment variables.</p>"},{"location":"workflow/reference/glossary/","title":"Glossary","text":""},{"location":"workflow/reference/glossary/#env-file","title":".env File","text":"<p>A special file which contains configuration information in the form of environment variables.</p> <p>n8n uses the .env file to control how Doc\u00b2 works. You can set items such as username and password for the editor or your timezone using this file. See the n8n docs for more details.</p> <p>To learn more about the .env file, read Manage Environment Variables in your NodeJS Application with dotenv.</p>"},{"location":"workflow/reference/glossary/#account","title":"Account","text":"<p>Service which allows a user to connect to a product. User's identity is confirmed through shared credentials. Also known as a user account.</p> <p>Many of the nodes in Doc\u00b2 require you to have an account with the service for which the node was built. For example, Typeform.</p>"},{"location":"workflow/reference/glossary/#api","title":"API","text":"<p>An acronym for Application Programming Interface, it is a framework for sharing text information by providing a specifically formatted URL to retrieve desired information.</p> <p>APIs are a critical part of many Doc\u00b2 nodes and workflows. The nodes talk to the API that is provided by a service on the internet. Doc\u00b2 workflows allow these APIs to talk to each other.</p> <p>For a more detailed understanding of APIs, see What is API: Definition, Types, Specifications, Documentation.</p> <p>See also: - Header</p>"},{"location":"workflow/reference/glossary/#certificate","title":"Certificate","text":"<p>A file or character string that is used to encrypt and decrypt information between two entities (e.g. computers, applications, users, etc.). It is used to ensure that anyone who intercepts the information between the two entities will not be able to read the information.</p> <p>n8n uses certificates to keep user information safe when working in the Editor UI. You can also customize the certificate that you use in Workflow\u00b2.</p> <p>For further information, see What are certificates?.</p> <p>See also: - Encryption Key - SSL</p>"},{"location":"workflow/reference/glossary/#cli","title":"CLI","text":"<p>An acronym for Command Line Interface, it is a text-based form of processing computer commands.</p> <p>It is possible to start a workflow or change its status using the CLI in Workflow\u00b2.</p> <p>To learn more, see What is Command Line Interface (CLI)?.</p>"},{"location":"workflow/reference/glossary/#connection","title":"Connection","text":"<p>A link between two or more nodes that allows data to flow from one node to another.</p> <p>This is a core concept in Workflow\u00b2.</p>"},{"location":"workflow/reference/glossary/#credentials","title":"Credentials","text":"<p>Unique pieces of information that identifies a user or a service. A common form of credentials is a username and password pair.</p> <p>n8n stores encrypted credentials so that it can automate tasks that require this information to run properly.</p> <p>For more information, see Credentials.</p> <p>See also: - Token</p>"},{"location":"workflow/reference/glossary/#docker","title":"Docker","text":"<p>A system to build, run and share applications with all of the services bundled to support the application in one package.</p> <p>n8n has created a docker image so that users who have a docker environment can quickly install and run Workflow\u00b2.</p> <p>For more information, read Docker overview and A Docker Tutorial for Beginners.</p>"},{"location":"workflow/reference/glossary/#editor-ui","title":"Editor UI","text":"<p>In Doc\u00b2, this is the web interface used to create workflows. It is accessed through a web browser at a designated website address.</p> <p>To learn more about user interfaces, see User interface.</p>"},{"location":"workflow/reference/glossary/#encryption-key","title":"Encryption Key","text":"<p>A piece of data, either string or binary, which is used to encode information so that it cannot be easily read. Encryption keys are often long string of seemingly random characters.</p> <p>n8n will sometimes use encryption keys for accessing APIs when required. It also uses a personal encryption key to secure credentials.</p> <p>For more information, see What are encryption keys and how do they work? \ud83d\udd10</p> <p>See also: - SSL - Certificate</p>"},{"location":"workflow/reference/glossary/#environment-variables","title":"Environment Variables","text":"<p>Environment variables are predetermined values that typically get used to provide the ability to configure your program from outside of your application. An environment variable consists of a key-value pair. For example, <code>N8N_BASIC_AUTH_USER=user</code>. Here, <code>N8N_BASIC_AUTH_USER</code> is the key and <code>user</code> is the value.</p> <p>n8n uses environment variables that help you configure your self-hosted Doc\u00b2 instance. You can use environment variables to set username and password for your Doc\u00b2 instance, configure the timezone, and a lot more. Refer to the configuration page to learn more about the environment variables used in Workflow\u00b2.</p>"},{"location":"workflow/reference/glossary/#execution","title":"Execution","text":"<p>A completed run of a workflow from start to finish.</p> <p>n8n logs workflow executions and allows the user to see if the workflow completed successfully or not.</p> <p>n8n also has the ability to execute one workflow from another workflow.</p> <p>To learn more, see Execution (computing).</p>"},{"location":"workflow/reference/glossary/#expression","title":"Expression","text":"<p>A string of characters and symbols in a programming language that represents a value depending upon its input.</p> <p>n8n uses expressions extensively when a node is referring to another node for input.</p> <p>Find out more about expressions by reading Expression.</p>"},{"location":"workflow/reference/glossary/#fair-code","title":"Fair-code","text":"<p>A software model very similar to open source which allows developers to receive remuneration for use in a for profit product.</p> <p>n8n is licensed under the fair-code model. See faircode.io for more details.</p>"},{"location":"workflow/reference/glossary/#function","title":"Function","text":"<p>In programming, a set of reusable commands designed to be run together and launched by other commands in the code. It may or may not receive input from the command that launches it.</p> <p>Many of the nodes in Doc\u00b2 behave like functions, receiving specific input to generate a specific output.</p> <p>To learn more about functions, see Computer Programming - Functions.</p>"},{"location":"workflow/reference/glossary/#ip-address","title":"IP Address","text":"<p>A string of numbers and letters which represents the location of an electronic device on a TCP/IP network.</p> <p>n8n will often refer to IP addresses when accessing information on a system other than itself. This is more common when the service is on the local network rather than on the internet.</p> <p>If you want to learn more about IP addresses, see What Is an IP Address?.</p>"},{"location":"workflow/reference/glossary/#javascript","title":"JavaScript","text":"<p>A modern programming language popular with web platforms used to create interactive web interfaces.</p> <p>While Doc\u00b2 is written in TypeScript, the final code generated is JavaScript and the Function node uses JavaScript to create customized nodes. JavaScript is used in the n8n's Function nodes.</p> <p>To learn more about Javascript, visit Javascript Tutorial.</p>"},{"location":"workflow/reference/glossary/#json","title":"JSON","text":"<p>An open standard file and data format commonly used with JavaScript. It is easy for humans to read and for computers to parse.</p> <p>The majority of data that is transferred from one node to another in Doc\u00b2 is most likely in the JSON format.</p> <p>For further reading, please see Introducing JSON.</p>"},{"location":"workflow/reference/glossary/#header","title":"Header","text":"<p>Section of an HTTP request message that defines allows extra information to be passed between the transmitter and receiver.</p> <p>n8n has the ability to send custom header information to many APIs, specifically in the HTTP Request node.</p> <p>For further information, see Request header.</p>"},{"location":"workflow/reference/glossary/#node","title":"Node","text":"<p>The basic building block for Workflow\u00b2. Each node is designed with a specific purpose of receiving, processing or outputting data.</p> <p>For more information, see Node Basics.</p>"},{"location":"workflow/reference/glossary/#nodejs","title":"NodeJS","text":"<p>A package of JavaScript file used to provide everything needed to run JavaScript code without a web browser.</p> <p>n8n runs on top of NodeJS and uses its libraries extensively.</p> <p>Read more at About Node.js.</p> <p>See also: - TypeScript</p>"},{"location":"workflow/reference/glossary/#npm","title":"npm","text":"<p>A program that installs, updates and removes JavaScript Packages.</p> <p>n8n is installed and updated using npm.</p> <p>Find out more at About npm.</p> <p>See also: - npx</p>"},{"location":"workflow/reference/glossary/#npx","title":"npx","text":"<p>A program that will download, run, then delete a JavaScript Packages. Often used for quickly testing what a package will do without completely installing it.</p> <p>You can try out Doc\u00b2 without installing it to your system using npx.</p> <p>For more information about npx, see npx documentation.</p> <p>See also: - npm</p>"},{"location":"workflow/reference/glossary/#package","title":"Package","text":"<p>A group of JavaScript files which are designed to work together for a specific purpose.</p> <p>n8n is also distributed as an npm package.</p> <p>For more information, see software package.</p> <p>See also: - npx</p>"},{"location":"workflow/reference/glossary/#parameter","title":"Parameter","text":"<p>Data that is passed to a program or script which is used for processing and directly effects the output or results generated.</p> <p>Many Doc\u00b2 nodes accept parameters to customize their output.</p> <p>The Doc\u00b2 CLI also accepts parameters so that it knows how to properly execute.</p> <p>For more information, see Functions, procedures nad modules.</p>"},{"location":"workflow/reference/glossary/#password","title":"Password","text":"<p>A secret string of characters provided to prove one's identity. Often used to gain access to restricted applications and systems.</p> <p>The Doc\u00b2 Editor UI can be password protected so that only authorized users can access the interface.</p> <p>n8n also stores passwords as a part of credentials for some services.</p> <p>To read more about passwords, see The Importance of passwords.</p> <p>See also: - Username - Token</p>"},{"location":"workflow/reference/glossary/#rest-api","title":"REST API","text":"<p>See API</p>"},{"location":"workflow/reference/glossary/#root-user","title":"Root User","text":"<p>In *NIX operating system, the user account that has no restrictions placed upon it within the system. The root user is typically only used for performing maintenance and upgrade tasks as improperly run applications using the root user account can cause significant damage to the system.</p> <p>For the protection of the system, it is generally not recommended that Doc\u00b2 be run by the root user.</p> <p>For more information about root, see root Definition.</p>"},{"location":"workflow/reference/glossary/#ssl","title":"SSL","text":"<p>An acronym for Secure Socket Layer, it is the primary way that web based services are secured. A SSL certificate is often used on websites to encrypt the information that is travelling between a web server and a web page.</p> <p>n8n uses SSL certificates to secure the Doc\u00b2 UI so that any information that is passed between the Doc\u00b2 server and the user's web browser is encrypted and cannot be spied upon when it is travelling between the two. It is possible to customize the SSL installation.</p> <p>For further reading, see SSL and SSL Certificates Explained For Beginners.</p>"},{"location":"workflow/reference/glossary/#token","title":"Token","text":"<p>A unique identifier, typically a long string of characters, used to increase the security of systems that request or transmit data. It is usually a shared secret between the sender and the receiver to allow either system to determine if they should be requesting/transmitting data. Tokens can also sometimes be used as encryption keys to make the data which is transmitted illegible to thoses without the token.</p> <p>n8n uses tokens often when requesting or sending data using APIs or webhooks.</p> <p>For more information, see token.</p>"},{"location":"workflow/reference/glossary/#trigger","title":"Trigger","text":"<p>A specific type of node that starts a workflow when it receives data from a source outside of the workflow itself.</p> <p>A good example of a trigger node in Doc\u00b2 is a webhook. It listens for data coming into it and then starts a workflow when it sees data.</p> <p>For more information about triggers, see Event Driven Programming.</p>"},{"location":"workflow/reference/glossary/#tunnel","title":"Tunnel","text":"<p>An encrypted session between two systems used to secure data transmission.</p> <p>n8n uses a tunnel to allow external users to access Doc\u00b2 installations that are behind firewalls, typically for triggering webhooks. This setup is recommended for testing use only.</p> <p>For further reading, see VPN Tunnels explained: what are they and how can they keep your internet data secure.</p>"},{"location":"workflow/reference/glossary/#typescript","title":"TypeScript","text":"<p>An open source programming language that extends the JavaScript programming language.</p> <p>n8n is written in TypeScript.</p> <p>Read more at Typescript.</p>"},{"location":"workflow/reference/glossary/#ui","title":"UI","text":"<p>An acronym for User Interface, it is the method or tool a person uses to interact with a computer system and its software.</p> <p>n8n has a web based UI, meaning that you program and interact with Doc\u00b2 using a web browser.</p> <p>Learn more at user interface (UI).</p>"},{"location":"workflow/reference/glossary/#url","title":"URL","text":"<p>An acronym for Universal Resource Locator, it is a string of characters that represents a network location. Most people's experience with URLs is in the form of a website address (e.g. https://n8n.io)</p> <p>n8n's Editor UI is accessed via an URL entered into a web browser (often https://localhost:5678).</p> <p>Some nodes in Doc\u00b2 access resources on the internet using an URL.</p> <p>Read more at What is a URL?.</p>"},{"location":"workflow/reference/glossary/#username","title":"Username","text":"<p>A character string representing an account on a computer system. It is often paired with a password to allow a person to access information and services that the person has permissions to use.</p> <p>n8n also stores usernames as a part of credentials for some services.</p> <p>Read more at Username.</p> <p>See also: - Token</p>"},{"location":"workflow/reference/glossary/#variable","title":"Variable","text":"<p>In computer programming, a variable represents a piece of data that can be changed or manipulated by the computer code. Variables are used to temporarily store information for processing.</p> <p>n8n uses variables extensively throughout its programming and nodes.</p> <p>Read more at Computer Programming - Variables.</p> <p>See also: - .env</p>"},{"location":"workflow/reference/glossary/#webhook","title":"Webhook","text":"<p>A service that listens for data input from an external source used to trigger an action in a system. Webhooks allow external systems to provide real-time alerts and updates to the system that does not limit the updates to regular polling intervals. Webhooks are often referenced by push notifications.</p> <p>n8n has the ability to create webhooks that can be used to start workflows and receive data from systems outside of the Doc\u00b2 system itself.</p> <p>To learn more about webhooks, see What's a Webhook?.</p>"},{"location":"workflow/reference/glossary/#workflow","title":"Workflow","text":"<p>A collection of nodes connected together to produce a specific outcome.</p> <p>n8n's primary form of programming uses a workflow model to represent both code and data flow.</p> <p>For more information, see Workflow application.</p>"},{"location":"workflow/reference/keyboard-shortcuts/","title":"Keyboard Shortcuts","text":"<p>The following keyboard shortcuts can be used:</p>"},{"location":"workflow/reference/keyboard-shortcuts/#general","title":"General","text":"<ul> <li>Ctrl + Left Mouse Button: Move/Pan Node View</li> <li>Ctrl + a: Select all nodes</li> <li>Ctrl + Alt + n: Create new workflow</li> <li>Ctrl + o: Open workflow</li> <li>Ctrl + s: Save the current workflow</li> <li>Ctrl + v: Paste nodes</li> </ul>"},{"location":"workflow/reference/keyboard-shortcuts/#node-panel","title":"Node panel","text":"<ul> <li>Tab: Open the Node Panel</li> <li>Enter: Insert selected node into workflow</li> <li>Escape: Close Node panel</li> </ul>"},{"location":"workflow/reference/keyboard-shortcuts/#node-panel-categories","title":"Node panel categories","text":"<ul> <li>Enter: Insert node into workflow, collapse/expand category, open subcategory</li> <li>ArrowRight: Expand category, open subcategory </li> <li>ArrowLeft: Collapse category, close subcategory view</li> </ul>"},{"location":"workflow/reference/keyboard-shortcuts/#with-nodes-selected-in-canvas","title":"With nodes selected in canvas","text":"<ul> <li>ArrowDown: Select sibling node below the current one</li> <li>ArrowLeft: Select node left of the current one</li> <li>ArrowRight: Select node right of the current one</li> <li>ArrowUp: Select sibling node above the current one</li> <li>Ctrl + c: Copy nodes</li> <li>Ctrl + x: Cut nodes</li> <li>d: Deactivate nodes</li> <li>Delete: Delete nodes</li> <li>F2: Rename node</li> <li>Shift + ArrowLeft: Select all nodes left of the current one</li> <li>Shift + ArrowRight: Select all nodes right of the current one</li> </ul>"},{"location":"workflow/reference/keyboard-shortcuts/#canvas-zoom","title":"Canvas zoom","text":"<ul> <li>+ or =: Zoom in</li> <li>- or _: Zoom out</li> <li>0: Reset zoom level</li> <li>1: Zoom to fit workflow</li> <li>Ctrl + Mouse wheel: Zoom in/out</li> </ul>"},{"location":"workflow/reference/license/","title":"License","text":"<p>n8n is fair-code licensed under the Sustainable Use License</p>","tags":["Workflow\u00b2","License","FAQs","n8n"]},{"location":"workflow/reference/license/#license-faqs","title":"License FAQs","text":"","tags":["Workflow\u00b2","License","FAQs","n8n"]},{"location":"workflow/reference/license/#what-license-do-you-use","title":"What license do you use?","text":"<p>n8n uses the Sustainable Use License.</p>","tags":["Workflow\u00b2","License","FAQs","n8n"]},{"location":"workflow/reference/license/#what-source-code-is-covered-by-the-sustainable-use-license","title":"What source code is covered by the Sustainable Use License?","text":"<p>The Sustainable Use License applies to all our source code hosted in our main GitHub repository.</p>","tags":["Workflow\u00b2","License","FAQs","n8n"]},{"location":"workflow/reference/license/#what-is-the-sustainable-use-license","title":"What is the Sustainable Use License?","text":"<p>The Sustainable Use License is a fair-code software license created by Doc\u00b2 in 2022. You can read more about why we did this here. The license allows you the free right to use, modify, create derivative works, and redistribute, with three limitations:</p> <ul> <li>You may use or modify the software only for your own internal business purposes or for non-commercial or personal use.</li> <li>You may distribute the software or provide it to others only if you do so free of charge for non-commercial purposes.</li> <li>You may not alter, remove, or obscure any licensing, copyright, or other notices of the licensor in the software. Any use of the licensor's trademarks is subject to applicable law.</li> </ul> <p>We encourage anyone who wants to use the Sustainable Use License. If you are building something out in the open, it makes sense to think about licensing earlier in order to avoid problems later. Contact us on license@n8n.io if you would like to ask any questions about it.</p>","tags":["Workflow\u00b2","License","FAQs","n8n"]},{"location":"workflow/reference/license/#can-you-give-some-examples-of-what-is-and-isnt-allowed-under-the-license-in-the-context-of-n8ns-product","title":"Can you give some examples of what is and isn't allowed under the license in the context of n8n's product?","text":"<p>All of the following examples are allowed under our license:</p> <ul> <li>Using Doc\u00b2 to sync the data you control as a company, for example from a CRM to an internal database</li> <li>Using Doc\u00b2 workflows to create backend logic for a product, with other code handling all interfaces with your users</li> <li>Creating an Doc\u00b2 node for your product, or any other integration between your product and n8n</li> <li>Providing consulting services related to Doc\u00b2, for example building workflows, custom features closely connect to Doc\u00b2, or code that gets executed by n8n</li> <li>Supporting Doc\u00b2, for example by setting it up or maintaining it on an internal company server</li> </ul> <p>These examples would not be allowed under our license, meaning you would need to contact us to create a separate agreement:</p> <ul> <li>Using credentials of your customers in workflows (for example, to send your customers Slack notifications based on events in your system)</li> <li>Using the source code to provide embedded one-click integrations to your users' other services</li> <li>Hosting Doc\u00b2 and charging people money to access it</li> <li>Bundling Doc\u00b2 with another product, and distributing it for money</li> </ul> <p>To do anything not allowed under the license, you will need a separate agreement with us.</p>","tags":["Workflow\u00b2","License","FAQs","n8n"]},{"location":"workflow/reference/license/#what-if-i-want-to-use-doc2-for-something-that-is-not-permitted-by-the-license","title":"What if I want to use Doc\u00b2 for something that is not permitted by the license?","text":"<p>You must sign a separate commercial agreement with us. We actively encourage software creators to embed Doc\u00b2 within their products; we just ask them to sign an agreement laying out the terms of use, and the fees owed to Doc\u00b2 for using the product in this way. We call this mode of use Workflow\u00b2.embed. You can learn more, and contact us about it here.</p> <p>If you are unsure whether the use case you have in mind constitutes an internal business purpose or not, take a look at the examples, and if you're still unclear, email us at license@n8n.io.</p>","tags":["Workflow\u00b2","License","FAQs","n8n"]},{"location":"workflow/reference/license/#why-do-you-not-use-an-open-source-license","title":"Why do you not use an open source license?","text":"<p>n8n's mission is to give everyone who uses a computer technical superpowers. We've decided the best way for us to achieve this mission is to make Doc\u00b2 as widely and freely available as possible for users, while ensuring we can build a sustainable, viable business. By making our product free to use, easy to distribute, and source-available we help everyone access the product. By operating as a business, we can continue to release features, fix bugs and provide reliable software at scale long-term.</p>","tags":["Workflow\u00b2","License","FAQs","n8n"]},{"location":"workflow/reference/license/#why-did-you-create-a-license","title":"Why did you create a license?","text":"<p>Creating a license was our least favorite option. We only went down this path after reviewing the possible existing licenses, and deciding nothing fit our specific needs. There are two ways in which we try to mitigate the pain and friction of using a proprietary license: (1) by using plain English, and keeping it as short as possible and (2) by promoting fair-code with the goal of making it a well-known umbrella term to describe software models like ours.</p> <p>Our goals when we created the Sustainable Use License were (1) to be as permissive as possible while (2) safeguarding our ability to build a business, and (3) being as clear as possible what use was permitted or not.</p>","tags":["Workflow\u00b2","License","FAQs","n8n"]},{"location":"workflow/reference/license/#my-company-has-a-policy-against-using-code-that-restricts-commercial-use-can-i-still-use-n8n","title":"My company has a policy against using code that restricts commercial use \u2013 can I still use n8n?","text":"<p>Provided you are using Doc\u00b2 for internal business purposes, and not making Doc\u00b2 available to your customers for them to connect their accounts and build workflows, you should be able to use Workflow\u00b2. If you are unsure whether the use case you have in mind constitutes an internal business purpose or not, take a look at the examples, and if you're still unclear, email us at license@n8n.io.</p>","tags":["Workflow\u00b2","License","FAQs","n8n"]},{"location":"workflow/reference/license/#what-happens-to-the-code-i-contribute-to-doc2-in-light-of-the-sustainable-use-license","title":"What happens to the code I contribute to Doc\u00b2 in light of the Sustainable Use License?","text":"<p>Any code you contribute on GitHub is subject to GitHub's terms of use. In simple terms, this means you own, and are responsible for, anything you contribute, but that you grant other GitHub users certain rights to use this code. When you contribute code to a repository containing notice of a license, you license the code under the same terms.</p> <p>n8n asks every contributor to sign our Contributor License Agreement. In addition to the above, this gives Doc\u00b2 the ability to change its license without seeking additional permission. It also means you are not liable for your contributions (e.g. in case they cause damage to someone else's business).</p> <p>It's easy to get started contributing code to Doc\u00b2 here, and we've listed broader ways of participating in our community here.</p>","tags":["Workflow\u00b2","License","FAQs","n8n"]},{"location":"workflow/reference/license/#why-did-you-switch-to-the-sustainable-use-license-from-your-previous-license-arrangement-apache-20-with-commons-clause","title":"Why did you switch to the Sustainable Use License from your previous license arrangement (Apache 2.0 with Commons Clause)?","text":"<p>n8n was until 17 March 2022 licensed under Apache 2.0 with Commons Clause. Commons Clause was initiated by various software companies wanting to protect their rights against cloud providers. The concept involved adding a commercial restriction on top of an existing open source license.</p> <p>However, the use of the Commons Clause as an additional condition to an open source license, as well as the use of wording that is open to interpretation, created some confusion and uncertainty regarding the terms of use. The Commons Clause also restricted people's ability to offer consulting and support services: we realized these services are critical in enabling people to get value from Doc\u00b2, so we wanted to remove this restriction.</p> <p>We created the Sustainable Use License to be more permissive and more clear about what use is allowed, while continuing to ensure Doc\u00b2 gets the funding needed to build and improve our product.</p>","tags":["Workflow\u00b2","License","FAQs","n8n"]},{"location":"workflow/reference/license/#what-are-the-main-differences-between-the-sustainable-use-license-and-your-previous-license-arrangement-apache-20-with-commons-clause","title":"What are the main differences between the Sustainable Use License and your previous license arrangement (Apache 2.0 with Commons Clause)?","text":"<p>There are two main differences between the Sustainable Use License and our previous license arrangement. The first is that we have tightened the definition of how you can use the software. Previously the Commons Clause restricted users ability to \"sell\" the software; we have redefined this to restrict use to internal business purposes. The second difference is that our previous license restricted people's ability to charge fees for consulting or support services related to the software: we have lifted that restriction altogether.</p> <p>That means you are now free to offer commercial consulting or support services (e.g. building Doc\u00b2 workflows) without the need for a separate license agreement with us. If you are interested in joining our community of Doc\u00b2 experts providing these services, you can learn more here.</p>","tags":["Workflow\u00b2","License","FAQs","n8n"]},{"location":"workflow/reference/license/#is-doc2-open-source","title":"Is Doc\u00b2 open source?","text":"<p>Although n8n's source code is available under the Sustainable Use License, according to the Open Source Initiative (OSI), open source licenses cannot include limitations on use, so we do not call ourselves open source. In practice, Doc\u00b2 offers most users many of the same benefits as OSI-approved open source.</p> <p>We coined the term 'fair-code' as a way of describing our licensing model, and the model of other companies who are source-available, but restrict commercial use of their source code.</p>","tags":["Workflow\u00b2","License","FAQs","n8n"]},{"location":"workflow/reference/license/#what-is-fair-code-and-how-does-the-sustainable-use-license-relate-to-it","title":"What is fair-code, and how does the Sustainable Use License relate to it?","text":"<p>Fair-code is not a software license. It describes a software model where software:</p> <ul> <li>is generally free to use and can be distributed by anybody</li> <li>has its source code openly available</li> <li>can be extended by anybody in public and private communities</li> <li>is commercially restricted by its authors</li> </ul> <p>The Sustainable Use License is a fair-code license. You can read more about it, and see other examples of fair-code licenses here.</p> <p>We're always excited to talk about software licenses, fair-code and other principles around sharing code with interested parties. To get in touch to chat, email license@n8n.io.</p>","tags":["Workflow\u00b2","License","FAQs","n8n"]},{"location":"workflow/reference/release-notes/","title":"Release notes","text":""},{"location":"workflow/reference/release-notes/#n8n01720","title":"n8n@0.172.0","text":"<p>View the commits for this version. Release date: 2022-04-11</p>"},{"location":"workflow/reference/release-notes/#enhancements","title":"Enhancements","text":"<ul> <li>Changes to the data output display in nodes.</li> </ul>"},{"location":"workflow/reference/release-notes/#node-enhancements","title":"Node enhancements","text":"<p> Magento 2 Node: text=\"Added credential tests. PayPal Node: Added credential tests and updated the API URL.</p>"},{"location":"workflow/reference/release-notes/#bug-fixes","title":"Bug fixes","text":"<p>core: Luxon now applies the correct timezone. Refer to Luxon for more information. core: fixed an issue with localization that was preventing i18n files from loading. Action Network Node: Fix a pagination issue and add credentials test.</p>"},{"location":"workflow/reference/release-notes/#contributors","title":"Contributors","text":"<p>Paolo Rechia</p>"},{"location":"workflow/reference/release-notes/#n8n01711","title":"n8n@0.171.1","text":"<p>View the commits for this version. Release date: 2022-04-06</p> <p>This is a small bug fix release.</p>"},{"location":"workflow/reference/release-notes/#bug-fixes_1","title":"Bug fixes","text":"<ul> <li>core: fix issue with current executions not displaying.</li> <li>core: fix an issue causing Doc\u00b2 to falsely skip some authentication.</li> <li>WooCommerce Node: Fix a pagination issue with the GetAll operation.</li> </ul>"},{"location":"workflow/reference/release-notes/#n8n01710","title":"n8n@0.171.0","text":"<p>View the commits for this version. Release date: 2022-04-03</p> <p>Breaking changes</p> <p>Please note that this version contains breaking changes. You can read more about them here.</p> <p>This release focuses on bug fixes and node enhancements, with one new feature, and one breaking change to the GraphQL node.</p>"},{"location":"workflow/reference/release-notes/#breaking-change-to-graphql-node","title":"Breaking change to GraphQL node","text":"<p>The GraphQL node now errors when the response includes an error. If you use this node, you can choose to:</p> <ul> <li>Do nothing: a GraphQL response containing an error will now cause the workflow to fail.</li> <li>Update your GraphQL node settings: set Continue on Fail to true to allow the workflow to continue even when the GraphQL response contains an error.</li> </ul>"},{"location":"workflow/reference/release-notes/#new-features","title":"New features","text":"<p>You can now download binary data from individual nodes in your workflow.</p>"},{"location":"workflow/reference/release-notes/#enhanced-nodes","title":"Enhanced nodes","text":"<ul> <li>Emelia Node: Add Campaign &gt; Duplicate functionality.</li> <li>FTP Node: Add option to recursively create directories on rename.</li> <li>Mautic Node: Add credential test and allow trailing slash in host.</li> <li>Microsoft Teams Node: Add chat message support.</li> <li>Mocean Node: Add 'Delivery Report URL' option and credential tests.</li> <li>ServiceNow Node: Add basicAuth support and fix getColumns loadOptions.</li> <li>Strava Node: Add 'Get Streams' operation.</li> </ul>"},{"location":"workflow/reference/release-notes/#bug-fixes_2","title":"Bug fixes","text":"<ul> <li>core: Fix crash on webhook when last node did not return data</li> <li>EmailReadImap Node: Fix issue that crashed process if node was configured wrong.</li> <li>Google Tasks Node: Fix 'Show Completed' option and hide title field where not needed.</li> <li>NocoDB Node: Fix pagination.</li> <li>Salesforce Node: Fix issue that 'status' did not get used for Case =&gt; Create &amp; Update</li> </ul>"},{"location":"workflow/reference/release-notes/#contributors_1","title":"Contributors","text":"<ul> <li>Charles Lecalier</li> <li>d3no</li> <li>Ketan Somvanshi</li> <li>Luis Cipriani</li> <li>pemontto</li> <li>Rhys Williams</li> </ul>"},{"location":"workflow/reference/release-notes/#n8n01700","title":"n8n@0.170.0","text":"<p>View the commits for this version. Release date: 2022-03-27</p> <p>This release focuses on bug fixes and adding functionality to existing nodes.</p>"},{"location":"workflow/reference/release-notes/#enhanced-nodes_1","title":"Enhanced nodes","text":"<ul> <li>Crypto Node: Add Generate operation to generate random values.</li> <li>HTTP Request Node: Add support for OPTIONS method.</li> <li>Jira Node: Add Simplify Output option to Issue &gt; Get.</li> <li>Reddit Node: Add possibility to query saved posts.</li> <li>Zendesk Node: Add ticket status On-hold.</li> </ul>"},{"location":"workflow/reference/release-notes/#bug-fixes_3","title":"Bug fixes","text":"<ul> <li>core: Add logs and error catches for possible failures in queue mode.</li> <li>AWS Lambda Node: Fix Invocation Type &gt; Continue Workflow.</li> <li>Supabase Node: Send token also via Authorization Bearer; fix Row &gt; Get operation.</li> <li>Xero Node: Fix some operations and add support for setting address and phone number.</li> <li>Wise Node: Fix issue when executing a transfer.</li> </ul>"},{"location":"workflow/reference/release-notes/#contributors_2","title":"Contributors","text":"<ul> <li>FFTDB</li> <li>Fred</li> <li>Jasper Zonneveld</li> <li>pemontto</li> <li>Sergio</li> <li>TheFSilver</li> <li>Valentin Mocanu</li> <li>Yassine Fathi</li> </ul>"},{"location":"workflow/reference/release-notes/#n8n01690","title":"n8n@0.169.0","text":"<p>View the commits for this version. Release date: 2022-03-20</p> <p>This release includes:</p> <ul> <li>New functionality for existing nodes</li> <li>A new node for Linear</li> <li>Bug fixes</li> <li>And a license change!</li> </ul>"},{"location":"workflow/reference/release-notes/#new-license","title":"New license","text":"<p>This release changes n8n's license, from Apache 2.0 with Commons Clause to Sustainable Use License.</p> <p>This change aims to clarify our license terms, and our position as a fair-code project.</p> <p>Read more about the new license in License.</p>"},{"location":"workflow/reference/release-notes/#new-nodes","title":"New nodes","text":"<ul> <li>Linear Node: Add Linear Node.</li> </ul>"},{"location":"workflow/reference/release-notes/#enhanced-nodes_2","title":"Enhanced nodes","text":"<ul> <li>HTTP Request Node: Allow Delete requests with body.</li> <li>KoBoToolbox Node: Add KoBoToolbox Regular and Trigger Node.</li> <li>Mailjet Node: Add credential tests and support for sandbox, JSON parameters &amp; variables.</li> <li>Mattermost Node: Add support for Channel search.</li> </ul>"},{"location":"workflow/reference/release-notes/#other-improvements","title":"Other improvements","text":"<ul> <li>Add support for reading IDs from file with executeBatch command.</li> </ul>"},{"location":"workflow/reference/release-notes/#bug-fixes_4","title":"Bug fixes","text":"<ul> <li>GitHub node: Fix credential tests and File List operation.</li> <li>Telegram node: Fix sending binary data when disable notification is set.</li> </ul>"},{"location":"workflow/reference/release-notes/#contributors_3","title":"Contributors","text":"<ul> <li>Manuel</li> <li>Marcin Kozey</li> <li>Matthew Walther</li> <li>Yann Jouanique</li> </ul>"},{"location":"workflow/reference/release-notes/#n8n01682","title":"n8n@0.168.2","text":"<p>For a comprehensive list of changes, view the commits for this version. Release date: 2022-03-16</p> <p>This release contains an important bug fix for 0.168.0. Users on 0.168.0 or 0.168.1 should upgrade to this.</p>"},{"location":"workflow/reference/release-notes/#n8n01681","title":"n8n@0.168.1","text":"<p>For a comprehensive list of changes, view the commits for this version. Release date: 2022-03-15</p> <p>A bug fix for user management: fixed an issue with email templates that was preventing owners from inviting members.</p>"},{"location":"workflow/reference/release-notes/#n8n01680","title":"n8n@0.168.0","text":"<p>For a comprehensive list of changes, view the commits for this version. Release date: 2022-03-14</p>"},{"location":"workflow/reference/release-notes/#new-feature-user-management","title":"New feature: user management","text":"<p>User management in Doc\u00b2 allows you to invite people to work in your self-hosted Doc\u00b2 instance. It includes:</p> <ul> <li>Login and password management</li> <li>Adding and removing users</li> <li>Two account types: owner and member</li> </ul> <p>Check out the user management documentation for more information.</p>"},{"location":"workflow/reference/release-notes/#n8n01670","title":"n8n@0.167.0","text":"<p>For a comprehensive list of changes, view the commits for this version. Release date: 2022-03-13</p>"},{"location":"workflow/reference/release-notes/#highlights","title":"Highlights","text":""},{"location":"workflow/reference/release-notes/#luxon-and-jmespath","title":"Luxon and JMESPath","text":"<p>0.167.0 adds support for two new libraries:</p> <ul> <li>Luxon: a JavaScript library for working with date and time</li> <li>JMESPath: a query language for JSON</li> </ul> <p>You can use Luxon and JMESPath in the code editor and in expressions.</p>"},{"location":"workflow/reference/release-notes/#new-expressions-variables","title":"New expressions variables","text":"<p>We've added two new variables to simplify working with date and time in expressions:</p> <ul> <li><code>$now</code>: a Luxon object containing the current timestamp. Equivalent to DateTime.now().</li> <li><code>$today</code>: a Luxon object containing the current timestamp, rounded down to the day. Equivalent to DateTime.now().set({ hour: 0, minute: 0, second: 0, millisecond: 0 }).</li> </ul>"},{"location":"workflow/reference/release-notes/#negative-operations-in-if-and-switch-nodes","title":"Negative operations in If and Switch nodes","text":"<p>Made it easier to perform negative operations on strings.</p> <p>This release adds one new operation for numbers:</p> <ul> <li>Is Not Empty</li> </ul> <p>And the following new operations for strings:</p> <ul> <li>Not Ends With</li> <li>Regex Not Match</li> <li>Not Starts With</li> <li>Is Not Empty</li> </ul> <p>Additionally, Regex is now labelled Regex Match.</p>"},{"location":"workflow/reference/release-notes/#new-node-redis-trigger","title":"New node: Redis Trigger","text":"<p>Added a Redis Trigger node, so you can now start workflows based on a Redis event.</p> <ul> <li>Redis Trigger: Added a Redis Trigger node.</li> </ul>"},{"location":"workflow/reference/release-notes/#core-functionality","title":"Core functionality","text":"<ul> <li>Added support for Luxon and JMESPath.</li> <li>Added two new expressions variables, <code>$now</code> and <code>$today</code>.</li> <li>Added more negative operations for numbers and strings.</li> <li>Added a link to the course from the help menu.</li> </ul>"},{"location":"workflow/reference/release-notes/#nodes","title":"Nodes","text":"<ul> <li>Facebook Graph API: Added suport for Facebook Graph API 13.</li> <li>Hubspot: Added suport for private app token authentication.</li> <li>MongoDB: Added the aggregate operation.</li> <li>Redis Trigger: Added a Redis Trigger node.</li> <li>Redis: Added support for publish operations.</li> <li>Strapi: Added support for Strapi 4.</li> <li>WordPress: Added status as an option to getAll post requests.</li> </ul>"},{"location":"workflow/reference/release-notes/#bugfixes","title":"Bugfixes","text":"<ul> <li>The Google Calendar node now correctly applies timezones when creating, updating, and scheduling all day events.</li> <li>Fixed a bug that occasionally caused Doc\u00b2 to crash, or shut down workflows unexpectedly.</li> <li>You can now use long credential type names with Postgres.</li> </ul>"},{"location":"workflow/reference/release-notes/#contributors_4","title":"Contributors","text":"<ul> <li>Luiz Eduardo de Oliveira Fonseca</li> <li>Vitaliy Fratkin</li> <li>sol</li> <li>vcrwr</li> <li>FFTDB</li> </ul>"},{"location":"workflow/reference/release-notes/#n8n01660","title":"n8n@0.166.0","text":"<p>For a comprehensive list of changes, view the commits for this version. Release date: 2022-03-08</p>"},{"location":"workflow/reference/release-notes/#new-nodes_1","title":"New nodes","text":"<ul> <li>Odoo</li> </ul>"},{"location":"workflow/reference/release-notes/#enhanced-nodes_3","title":"Enhanced nodes","text":"<ul> <li>Function: Added support for items without a JSON key.</li> </ul>"},{"location":"workflow/reference/release-notes/#core-functionality_1","title":"Core functionality","text":"<ul> <li>Added new environment variable <code>N8N_HIRING_BANNER_ENABLED</code> to enable/disable the hiring banner.</li> <li>Fixed a bug preventing keyboard shortcuts from working as expected.</li> <li>Fixed a bug causing tooltips to be hidden behind other elements.</li> <li>Fixed a bug causing some credentials to be hidden from the credentials list.</li> </ul>"},{"location":"workflow/reference/release-notes/#bug-fixes_5","title":"Bug fixes","text":"<ul> <li>Baserow: Fixed a bug preventing the Sorting option of the Get All operation from working as expected.</li> <li>HTTP Request: Fixed a bug causing Digest Authentication to fail in some scenarios.</li> <li>Wise: Fixed a bug causing API requests requiring Strong Customer Authentication (SCA) to fail.</li> </ul>"},{"location":"workflow/reference/release-notes/#contributors_5","title":"Contributors","text":"<p>pemontto</p>"},{"location":"workflow/reference/release-notes/#n8n01650","title":"n8n@0.165.0","text":"<p>For a comprehensive list of changes, view the commits for this version. Release date: 2022-02-28</p> <p>Breaking changes</p> <p>Please note that this version contains breaking changes. You can read more about them here.</p>"},{"location":"workflow/reference/release-notes/#new-nodes_2","title":"New nodes","text":"<ul> <li>Onfleet</li> </ul>"},{"location":"workflow/reference/release-notes/#enhanced-nodes_4","title":"Enhanced nodes","text":"<ul> <li>Asana: Added Create operation to the Project resource.</li> <li>Mautic: Added Edit Contact Points, Edit Do Not Contact List, Send Email operations to Contact resource. Also added new Segment Email resource.</li> <li>Notion (Beta): Added support for rollup fields to the Simplify Output option. Also added the Parent ID to the Get All operation of the Block resource.</li> <li>Pipedrive: Added Marketing Status field to the Create operation of the Person resource, also added User ID field to the Create and Update operations of the Person resource.</li> </ul>"},{"location":"workflow/reference/release-notes/#core-functionality_2","title":"Core functionality","text":"<ul> <li>Added support for workflow templates.</li> <li>Fixed a bug causing credentials tests to fail for versioned nodes.</li> <li>Fixed a build problem by addind dependencies <code>@types/lodash.set</code> to the <code>workflow</code> package and <code>@types/uuid</code> to the <code>core</code> package.</li> <li>Fixed an error causing some resources to ignore a non-standard <code>N8N_PATH</code> value.</li> <li>Fixed an error preventing the placeholder text from being shown when entering credentials.</li> <li>Improved error handling for telemetry-related errors.</li> </ul>"},{"location":"workflow/reference/release-notes/#bug-fixes_6","title":"Bug fixes","text":"<ul> <li>Orbit: Fixed a bug causing API requests to use an incorrect workspace identifier.</li> <li>TheHive:  Fixed a bug causing the Ignore SSL Issues option to be applied incorrectly.</li> </ul>"},{"location":"workflow/reference/release-notes/#contributors_6","title":"Contributors","text":"<p>alexwitkowski, I\u00f1aki Breinbauer, lsemaj, Luiz Eduardo de Oliveira Fonseca, Rodrigo Correia, Santiago Botero Ruiz, Saurabh Kashyap, Ugo Bataillard</p>"},{"location":"workflow/reference/release-notes/#n8n01641","title":"n8n@0.164.1","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2022-02-20</p>"},{"location":"workflow/reference/release-notes/#core-functionality_3","title":"Core Functionality","text":"<ul> <li>Fixed a bug preventing webhooks from working as expected in some scenarios.</li> </ul>"},{"location":"workflow/reference/release-notes/#n8n01640","title":"n8n@0.164.0","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2022-02-20</p>"},{"location":"workflow/reference/release-notes/#new-nodes_3","title":"New nodes","text":"<ul> <li>Google Chat</li> </ul>"},{"location":"workflow/reference/release-notes/#enhanced-nodes_5","title":"Enhanced nodes","text":"<ul> <li>Grist: Added support for self-hosted Grist instances.</li> <li>Telegram Trigger: Added new Extra Large option to Image Size field.</li> <li>Webhook: Added new No Response Body option. Also added support for DELETE, PATCH and PUT methods.</li> </ul>"},{"location":"workflow/reference/release-notes/#core-functionality_4","title":"Core Functionality","text":"<ul> <li>Added new database indices to improve the performance when querying past executions.</li> <li>Fixed a bug causing the base portion of a URL not to be prepended as expected in some scenarios.</li> <li>Fixed a bug cuasing expressions to resolve incorrectly when referencing non-existent nodes or parameters.</li> </ul>"},{"location":"workflow/reference/release-notes/#contributors_7","title":"Contributors","text":"<p>Jhalter5Stones, Valentina Lilova, thorstenfreitag</p>"},{"location":"workflow/reference/release-notes/#n8n01631","title":"n8n@0.163.1","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2022-02-13</p>"},{"location":"workflow/reference/release-notes/#core-functionality_5","title":"Core Functionality","text":"<ul> <li>Fixed a bug preventing OAuth2 authentication from working as expected in some scenarios.</li> </ul>"},{"location":"workflow/reference/release-notes/#n8n01630","title":"n8n@0.163.0","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2022-02-13</p>"},{"location":"workflow/reference/release-notes/#new-nodes_4","title":"New nodes","text":"<ul> <li>HaloPSA</li> <li>Linear Trigger</li> <li>Zammad</li> </ul>"},{"location":"workflow/reference/release-notes/#enhanced-nodes_6","title":"Enhanced nodes","text":"<ul> <li>GitHub: Added Reference option to the Get operation of the File resource.</li> <li>Twilio: Added Status Callbacks option.</li> <li>uProc: Sanitized Data Webhook field description.</li> </ul>"},{"location":"workflow/reference/release-notes/#core-functionality_6","title":"Core Functionality","text":"<ul> <li>Added automatic sorting by relative position to the node list inside the expression editor.</li> <li>Added new <code>/workflows/demo</code> page to allow read-only rendering of workflows inside an iframe.</li> <li>Added optional <code>/healthz</code> health check endpoint to worker instances.</li> <li>Fixed unwanted list autofill behaviour inside the expression editor.</li> <li>Improved the GitHub actions used by the nightly Docker image.</li> </ul>"},{"location":"workflow/reference/release-notes/#bug-fixes_7","title":"Bug fixes","text":"<ul> <li>Function: Fixed a bug leaving the code editor size unchanged after resizing the window.</li> <li>Function Item: Fixed a bug leaving the code editor size unchanged after resizing the window.</li> <li>IF: Removed the empty sections left after removing a condition.</li> <li>Item Lists: Fixed an erroneous placeholder text.</li> </ul>"},{"location":"workflow/reference/release-notes/#contributors_8","title":"Contributors","text":"<p>I\u00f1aki Breinbauer, Manuel, pemontto</p>"},{"location":"workflow/reference/release-notes/#n8n01620","title":"n8n@0.162.0","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2022-02-06</p>"},{"location":"workflow/reference/release-notes/#enhanced-nodes_7","title":"Enhanced nodes","text":"<ul> <li>GitHub: Added new List operation to File resource.</li> </ul>"},{"location":"workflow/reference/release-notes/#core-functionality_7","title":"Core Functionality","text":"<ul> <li>Added configurable debug logging for telemetry.</li> <li>Added support for defining nodes through JSON. This functionality is in alpha state and breaking changes to the interface can take place in upcoming versions.</li> <li>Added telemetry support to page events occuring before telemetry is initialized.</li> <li>Fixed a bug preventing errors in sub-workflows from appearing in parent executions.</li> <li>Fixed a bug where node versioning would not work as expected.</li> <li>Fixed a bug where remote parameters would not load as expected.</li> <li>Fixed a bug where unkown node types would not work as expected.</li> <li>Prevented the node details view from opening automatically after duplicating a node.</li> <li>Removed dependency <code>fibers</code> which is incompatible with the current LTS version 16 of Node.js.</li> </ul>"},{"location":"workflow/reference/release-notes/#bug-fixes_8","title":"Bug fixes","text":"<ul> <li>XML: Fixed a bug causing the node to alter incoming data.</li> </ul>"},{"location":"workflow/reference/release-notes/#contributors_9","title":"Contributors","text":"<p>pemontto</p>"},{"location":"workflow/reference/release-notes/#n8n01611","title":"n8n@0.161.1","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2022-02-01</p>"},{"location":"workflow/reference/release-notes/#core-functionality_8","title":"Core Functionality","text":"<ul> <li>Added optional debug logging to health check functionality.</li> </ul>"},{"location":"workflow/reference/release-notes/#n8n01610","title":"n8n@0.161.0","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2022-01-30</p>"},{"location":"workflow/reference/release-notes/#core-functionality_9","title":"Core Functionality","text":"<ul> <li>Added default polling interval for trigger nodes using polling.</li> <li>Added support for additional hints below parameter fields.</li> <li>Fixed a bug preventing default values from being used when testing credentials.</li> <li>Improved the wording in the Save your Changes? dialog.</li> </ul>"},{"location":"workflow/reference/release-notes/#bug-fixes_9","title":"Bug fixes","text":"<ul> <li>Airtable: Improved field description.</li> <li>Airtable Trigger: Improved field description.</li> <li>erpNext: Prevented the node from throwing an error when no data is found.</li> <li>Gmail: Fixed a bug causing the BCC field to be ignored.</li> <li>Move Binary Data: Fixed a bug causing the binary data to JSON conversion to fail when using filesystem-based binary data handling.</li> <li>Slack: Fixed a typo in the Type field.</li> </ul>"},{"location":"workflow/reference/release-notes/#contributors_10","title":"Contributors","text":"<p>fabian wohlgemuth</p>"},{"location":"workflow/reference/release-notes/#n8n01600","title":"n8n@0.160.0","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2022-01-22</p>"},{"location":"workflow/reference/release-notes/#new-nodes_5","title":"New nodes","text":"<ul> <li>BambooHR</li> </ul>"},{"location":"workflow/reference/release-notes/#core-functionality_10","title":"Core Functionality","text":"<ul> <li>Fixed a bug preventing the binary data preview from using the full available height and width.</li> <li>Fixed a build problem by pinning chokidar version 3.5.2.</li> <li>Prevent workflow activation when no trigger is presentand introduced a modal explaining production data handling.</li> <li>Fixed Filter by tags placeholder text used in the Open Workflow modal.</li> </ul>"},{"location":"workflow/reference/release-notes/#bug-fixes_10","title":"Bug fixes","text":"<ul> <li>HTTP Request: Fixed a bug causing custom headers from being ignored.</li> <li>Mautic: Fixed a bug preventing all items from being returned in some situations.</li> <li>Microsoft OneDrive: Fixed a bug preventing more than 200 items from being returned.</li> <li>Spotify: Fixed a bug causing the execution to fail if there are more than 1000 search results, also fixed a bug preventing the Get New Releases operation of the Album resource from working as expected.</li> </ul>"},{"location":"workflow/reference/release-notes/#contributors_11","title":"Contributors","text":"<p>fabian wohlgemuth</p>"},{"location":"workflow/reference/release-notes/#n8n01591","title":"n8n@0.159.1","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2022-01-18</p>"},{"location":"workflow/reference/release-notes/#core-functionality_11","title":"Core Functionality","text":"<ul> <li>Temporarily removed debug logging for axios requests.</li> </ul>"},{"location":"workflow/reference/release-notes/#n8n01590","title":"n8n@0.159.0","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2022-01-16</p>"},{"location":"workflow/reference/release-notes/#new-nodes_6","title":"New nodes","text":"<ul> <li>Jenkins</li> </ul>"},{"location":"workflow/reference/release-notes/#enhanced-nodes_8","title":"Enhanced nodes","text":"<ul> <li>GraphQL: Added support for additional authentication methods Basic Auth, Digest Auth, OAuth1, OAuth2, and Query Auth.</li> </ul>"},{"location":"workflow/reference/release-notes/#core-functionality_12","title":"Core Functionality","text":"<ul> <li>Added support for executing workflows without an ID through the CLI.</li> <li>Fixed a build problem.</li> <li>Fixed a bug preventing the tag description from being shown on the canvas.</li> <li>Improved build performance by skipping the <code>node-dev</code> package during build.</li> </ul>"},{"location":"workflow/reference/release-notes/#bug-fixes_11","title":"Bug fixes","text":"<ul> <li>Box: Fixed a bug causing some files to be corrupted during download.</li> <li>Philips Hue: Fixed a bug preventing the node from connecting to Philips Hue.</li> <li>Salesforce: Fixed a bug preventing filters on date and datetime fields from working as expected.</li> <li>Supabase: Fixed an errorneous documentation link.</li> </ul>"},{"location":"workflow/reference/release-notes/#contributors_12","title":"Contributors","text":"<p>Phil Clifford</p>"},{"location":"workflow/reference/release-notes/#n8n01580","title":"n8n@0.158.0","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2022-01-09</p>"},{"location":"workflow/reference/release-notes/#new-nodes_7","title":"New nodes","text":"<ul> <li>Microsoft Graph Security</li> <li>SyncroMSP</li> <li>Supabase</li> </ul>"},{"location":"workflow/reference/release-notes/#enhanced-nodes_9","title":"Enhanced nodes","text":"<ul> <li>Edit Image: Added Transparent operation.</li> <li>Kafka: Added Use Schema Registry option.</li> <li>Kafka Trigger: Added Use Schema Registry option.</li> <li>Redis: Added database field to credentials.</li> <li>Salesforce: Added Account Number field.</li> </ul>"},{"location":"workflow/reference/release-notes/#core-functionality_13","title":"Core Functionality","text":"<ul> <li>Added new external hook when active workflows finished initializing.</li> <li>Fixed a bug preventing the personalisation survey from showing up.</li> <li>Improved telemetry.</li> </ul>"},{"location":"workflow/reference/release-notes/#bug-fixes_12","title":"Bug fixes","text":"<ul> <li>Edit Image: Fixed a bug causing two items to be returned.</li> <li>iCalendar: Fixed a bug preventing dates in January from working as expected.</li> <li>Merge: Fixed causing empty binary data to overwrite other binary data on merge.</li> </ul>"},{"location":"workflow/reference/release-notes/#contributors_13","title":"Contributors","text":"<p>Ricardo Georgel, Pierre, Vahid Sebto</p>"},{"location":"workflow/reference/release-notes/#n8n01571","title":"n8n@0.157.1","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2022-01-03</p>"},{"location":"workflow/reference/release-notes/#core-functionality_14","title":"Core Functionality","text":"<ul> <li>Fixed a bug where not all nodes could use the new binary data handling.</li> </ul>"},{"location":"workflow/reference/release-notes/#n8n01570","title":"n8n@0.157.0","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2022-01-02</p>"},{"location":"workflow/reference/release-notes/#enhanced-nodes_10","title":"Enhanced nodes","text":"<ul> <li>Function: The node now prevents unsupported data from being returned.</li> <li>Function Item: The node now prevents unsupported data from being returned.</li> <li>HubSpot: Added Engagement resource with Create, Delete, Get, and Get All operations.</li> <li>Notion (Beta): Upgraded the Notion node: Added Search operation for the Database resource, Get operation for Database Page resource, Archive operation for the Page resource. Also added Simplify Output option and test for credential validity.</li> <li>Wait: Added new Ignore Bots option.</li> <li>Webhook: Added new Ignore Bots option.</li> </ul>"},{"location":"workflow/reference/release-notes/#core-functionality_15","title":"Core Functionality","text":"<ul> <li>Fixed a bug where a wrong number suffix was used after duplicating nodes.</li> </ul>"},{"location":"workflow/reference/release-notes/#bug-fixes_13","title":"Bug fixes","text":"<ul> <li>HTTP Request: Fixed a bug where using Digest Auth would fail.</li> </ul>"},{"location":"workflow/reference/release-notes/#contributors_14","title":"Contributors","text":"<p>pemontto</p>"},{"location":"workflow/reference/release-notes/#n8n01560","title":"n8n@0.156.0","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-12-25</p>"},{"location":"workflow/reference/release-notes/#enhanced-nodes_11","title":"Enhanced nodes","text":"<ul> <li>GitLab Trigger: Added new trigger events: Confidential Issue, Confidential Comment, Deployment, Release.</li> <li>Google Drive: Added support for downloading and converting native Google files.</li> <li>Kitemaker: Added Space ID field to Create operation of Work Item resource.</li> <li>Raindrop: Added Parse Metadata option to Create, Update operations of the Bookmark resource.</li> </ul>"},{"location":"workflow/reference/release-notes/#core-functionality_16","title":"Core Functionality","text":"<ul> <li>Added execution ID to workflow.postExecute hook</li> <li>Added response body to UI for failed Axios requests</li> <li>Added support for automatically removing new lines from Google Service Account credentials</li> <li>Added support for disabling the UI via environment variable</li> <li>Fixed a bug causing the wrong expression result to be shown for items from an output other than the first</li> <li>Improved binary data management</li> <li>Introduced Monaco as new UI code editor</li> </ul>"},{"location":"workflow/reference/release-notes/#contributors_15","title":"Contributors","text":"<p>Arpad Gabor, Leo Lou, Manuel</p>"},{"location":"workflow/reference/release-notes/#n8n01552","title":"n8n@0.155.2","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-12-19</p>"},{"location":"workflow/reference/release-notes/#core-functionality_17","title":"Core Functionality","text":"<ul> <li>Added support for internationalization (i18n). This functionality is currently in alpha status and breaking changes are to be expected.</li> </ul>"},{"location":"workflow/reference/release-notes/#n8n01540","title":"n8n@0.154.0","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-12-19</p>"},{"location":"workflow/reference/release-notes/#enhanced-nodes_12","title":"Enhanced nodes","text":"<ul> <li>Plivo: Added user agent to all API requests.</li> </ul>"},{"location":"workflow/reference/release-notes/#core-functionality_18","title":"Core Functionality","text":"<ul> <li>Allow deletion of nodes from the canvas using the backspace key</li> <li>Fixed an issue causing clicks in the value survey to impact the main view</li> <li>Fixed an issue preventing the update panel from closing</li> </ul>"},{"location":"workflow/reference/release-notes/#bug-fixes_14","title":"Bug fixes","text":"<ul> <li>Todoist: Fixed a bug where using the additional field Due Date Time on the Task resource would cause the Create operation to fail.</li> </ul>"},{"location":"workflow/reference/release-notes/#contributors_16","title":"Contributors","text":"<p>Mohammed Huzaif, \u041b\u0435\u0431\u0435\u0434\u0435\u0432 \u0418\u0432\u0430\u043d</p>"},{"location":"workflow/reference/release-notes/#n8n01530","title":"n8n@0.153.0","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-12-11</p>"},{"location":"workflow/reference/release-notes/#new-nodes_8","title":"New nodes","text":"<ul> <li>Figma Trigger (Beta)</li> <li>Workable Trigger</li> </ul>"},{"location":"workflow/reference/release-notes/#enhanced-nodes_13","title":"Enhanced nodes","text":"<ul> <li>Google Contacts: Added Query option to Get All operation, also prevented the node from failing when no contacts are found.</li> <li>HTTP Request: Added support for query-based authentication.</li> <li>Home Assistant: Added support for loading possible options in the Domain, Service, and Entity ID fields.</li> <li>One Simple API: Added support for Social Profile resources.</li> <li>PagerDuty: Write scope is now requested upon authentication against the PagerDuty OAuth2 API.</li> </ul>"},{"location":"workflow/reference/release-notes/#core-functionality_19","title":"Core Functionality","text":"<ul> <li>Added frontend for value surveys</li> <li>Fixed an issue preventing the recommendation logic from working as expected after selecting a work area</li> <li>Fixed an issue where a wrong exit code was sent when running Doc\u00b2 on an unsupported version of Node.js</li> <li>Fixed an issue where node options would disappear on hovering when a node is not selected</li> <li>Fixed an issue where the execution id was missing when running Doc\u00b2 in queue mode</li> <li>Fixed an issue where execution data was missing when waiting for a webhook in queue mode</li> <li>Improved error handling when the Doc\u00b2 port is already in use</li> <li>Improved diagnostic events</li> <li>Removed toast notification on webhook deletion, added toast notification after node is copied</li> <li>Removed default trigger tooltip for polling trigger nodes</li> </ul>"},{"location":"workflow/reference/release-notes/#bug-fixes_15","title":"Bug fixes","text":"<ul> <li>APITemplate.io: Fixed a bug where the Create operation on the Image resource would fail when the Download option is not enabled.</li> <li>HubSpot: Fixed authentication for new Hubspot applications by using granular scopes when authenticating against the Hubspot OAuth2 API.</li> <li>HubSpot Trigger: Fixed authentication for new Hubspot applications by using granular scopes when authenticating against the Hubspot Developer API.</li> <li>Jira Software: Fixed an issue where the Reporter field would not work as expected on Jira Server instances.</li> <li>Salesforce: Fixed a typo preventing the value in the amount field of from being saved.</li> </ul>"},{"location":"workflow/reference/release-notes/#contributors_17","title":"Contributors","text":"<p>pemontto, Jascha L\u00fclsdorf, Jonathan Bennetts</p>"},{"location":"workflow/reference/release-notes/#n8n01520","title":"n8n@0.152.0","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-12-04</p>"},{"location":"workflow/reference/release-notes/#new-nodes_9","title":"New nodes","text":"<ul> <li>Google Calendar Trigger</li> </ul>"},{"location":"workflow/reference/release-notes/#enhanced-nodes_14","title":"Enhanced nodes","text":"<ul> <li>Telegram Trigger: Added support for downloading images to channel_post updates.</li> </ul>"},{"location":"workflow/reference/release-notes/#core-functionality_20","title":"Core Functionality","text":"<ul> <li>Added a plus (+) connector to end nodes</li> <li>Allowed opening workflows and executions in a new window when using Ctrl + Click</li> <li>Enforced type checking for all node parameters</li> <li>Fixed a build issue in the custom Doc\u00b2 docker image</li> <li>Fixed a memory leak in the UI which could occur when renaming nodes or navigate to another workflow</li> <li>Improved stability of internal test workflows</li> <li>Improved expression security</li> <li>Introduced redirect to a new page and UI error message when trying to open a deleted workflow</li> <li>Introduced support for multiple arguments when logging</li> <li>Updated the onboarding survey</li> </ul>"},{"location":"workflow/reference/release-notes/#bug-fixes_16","title":"Bug fixes","text":"<ul> <li>Google BigQuery: Fixed a bug preventing pagination from working as expected when the Return All option is enabled.</li> <li>RabbitMQ Trigger: Added Trigger to the name of the trigger node.</li> <li>Salesforce: Fixed a typo affecting the Type field of the Opportunity resource.</li> </ul>"},{"location":"workflow/reference/release-notes/#contributors_18","title":"Contributors","text":"<p>Zvonimir Erdelja, m2scared</p>"},{"location":"workflow/reference/release-notes/#n8n01510","title":"n8n@0.151.0","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-11-26</p>"},{"location":"workflow/reference/release-notes/#new-nodes_10","title":"New nodes","text":"<ul> <li>DHL</li> <li>Grafana</li> </ul>"},{"location":"workflow/reference/release-notes/#core-functionality_21","title":"Core Functionality","text":"<ul> <li>Fixed a bug causing connections between nodes to disappear when renaming a newly added node after drawing a connection to its endpoints.</li> <li>Fixed a build issue by adding TypeScript definitions for validator.js to CLI package, also fixed a linting issue by removing an unused import.</li> <li>Improved the waiting state of trigger nodes to explain when an external event is required.</li> <li>Loops are now drawn below their source node.</li> </ul>"},{"location":"workflow/reference/release-notes/#bug-fixes_17","title":"Bug fixes","text":"<ul> <li>Edit Image: Fixed an issue preventing the Composite operation from working correctly in some cases.</li> </ul>"},{"location":"workflow/reference/release-notes/#contributors_19","title":"Contributors","text":"<p>Jonathan Bennetts</p>"},{"location":"workflow/reference/release-notes/#n8n01500","title":"n8n@0.150.0","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-11-19</p>"},{"location":"workflow/reference/release-notes/#enhanced-nodes_15","title":"Enhanced nodes","text":"<ul> <li>Jira Software: Added Components as an additional field.</li> </ul>"},{"location":"workflow/reference/release-notes/#core-functionality_22","title":"Core Functionality","text":"<ul> <li>Fixed a build issue by pinning rudder-sdk-node version 1.0.6 in CLI package.</li> <li>Fixed an issue preventing the <code>n8n import:workflow --separate</code> CLI command from finding workflows on Windows.</li> <li>Further improved the expression security.</li> <li>Moved all nodes into separate directories in preparation for internationalization.</li> <li>Removing default headers for PUT and PATCH operations when using axios.</li> <li>Revamped the workflow canvas.</li> </ul>"},{"location":"workflow/reference/release-notes/#bug-fixes_18","title":"Bug fixes","text":"<ul> <li>HTTP Request: Fixed an issue causing the wrong Content-Type header to be set when downloading a file.</li> <li>ServiceNow: Fixed incorrect mapping of incident urgency and impact values.</li> <li>Start: Fixed an issue causing the node to be disabled in a new workflow.</li> <li>Xero: Fixed an issue causing the node to only fetch the first page when querying the Xero API.</li> </ul>"},{"location":"workflow/reference/release-notes/#n8n01490","title":"n8n@0.149.0","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-11-13</p>"},{"location":"workflow/reference/release-notes/#new-nodes_11","title":"New nodes","text":"<ul> <li>One Simple API</li> </ul>"},{"location":"workflow/reference/release-notes/#enhanced-nodes_16","title":"Enhanced nodes","text":"<ul> <li>Edit Image: Added Circle Primitive to Draw operation. Also added Composite operation.</li> <li>Zendesk: Added check for API credentials validity.</li> <li>Zulip: Added additional field Role to the Update operation of the User resource.</li> </ul>"},{"location":"workflow/reference/release-notes/#core-functionality_23","title":"Core Functionality","text":"<ul> <li>Fixed an issue causing an error message to be thrown when executing a workflow through the CLI.</li> <li>Improved expression security by limiting the available process properties.</li> <li>Improved the behaviour of internal tests executed through the CLI.</li> <li>Updated the owner of the node user's home directory in the custom docker image.</li> </ul>"},{"location":"workflow/reference/release-notes/#bug-fixes_19","title":"Bug fixes","text":"<ul> <li>Google Tasks: Fixed an issue where the Due Date field had no effect (Update operation) or was unavailable (Create operation).</li> <li>HTTP Request: Fixed an issue where the Content-Length header was not calculated and sent when using the a Body Content Type of Form-Data Multipart.</li> <li>Stripe Trigger: Fixed an issue preventing the node from being activated when a previously created webhook no longer exists.</li> <li>Toggl Trigger: Updated the API URL used by the node.</li> </ul>"},{"location":"workflow/reference/release-notes/#contributors_20","title":"Contributors","text":"<p>GeylaniBerk, Jonathan Bennetts</p>"},{"location":"workflow/reference/release-notes/#n8n01480","title":"n8n@0.148.0","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-11-05</p>"},{"location":"workflow/reference/release-notes/#new-nodes_12","title":"New nodes","text":"<ul> <li>Dropcontact</li> <li>Respond to Webhook</li> </ul>"},{"location":"workflow/reference/release-notes/#enhanced-nodes_17","title":"Enhanced nodes","text":"<ul> <li>Lemlist: Added additional fields to Create operation of Lead resource.</li> <li>Slack: Added User Group resource.</li> <li>Todoist: Added Update operation to Task resource.</li> <li>Wait: Improved descriptions of available Respond options.</li> <li>WooCommerce: Added password field to Crate operation of Customer resource.</li> </ul>"},{"location":"workflow/reference/release-notes/#core-functionality_24","title":"Core Functionality","text":"<ul> <li>Added a hook after workflow creation.</li> <li>Fixed a build issue with npm v7 by overriding unwanted behaviour through the .npmrc file.</li> <li>Fixed an issue preventing unknown node types from being imported.</li> <li>Fixed an issue with the UI falsely indicating a credential cannot be selected when using SQLite and multiple credentials with the same name exist.</li> </ul>"},{"location":"workflow/reference/release-notes/#bug-fixes_20","title":"Bug fixes","text":"<ul> <li>Stripe: Fixed an issue where setting additional Metadata fields would not have the expected effect. Also fixed an issue where pagination would not work as expected.</li> <li>Zendesk: Fixed an issue preventing the additional field External ID from being evaulated correctly.</li> </ul>"},{"location":"workflow/reference/release-notes/#contributors_21","title":"Contributors","text":"<p>mizzimizzi, nikozila, Pauline</p>"},{"location":"workflow/reference/release-notes/#n8n01471","title":"n8n@0.147.1","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-11-03</p>"},{"location":"workflow/reference/release-notes/#core-functionality_25","title":"Core Functionality","text":"<ul> <li>Fixed a build issue by moving the <code>chokidar</code> dependency to a regular dependency.</li> </ul>"},{"location":"workflow/reference/release-notes/#n8n01470","title":"n8n@0.147.0","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-11-03</p>"},{"location":"workflow/reference/release-notes/#new-nodes_13","title":"New nodes","text":"<ul> <li>Local File Trigger</li> </ul>"},{"location":"workflow/reference/release-notes/#core-functionality_26","title":"Core Functionality","text":"<ul> <li>Improved the database migration process to reduce memory footprint.</li> <li>Fixed an issue with telemetry by adding an anonymous ID.</li> </ul>"},{"location":"workflow/reference/release-notes/#n8n01460","title":"n8n@0.146.0","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-10-29</p>"},{"location":"workflow/reference/release-notes/#new-nodes_14","title":"New nodes","text":"<ul> <li>Microsoft Dynamics CRM</li> </ul>"},{"location":"workflow/reference/release-notes/#enhanced-nodes_18","title":"Enhanced nodes","text":"<ul> <li>Agile CRM: Added Filters to Get All operation of Contact and Company resources.</li> <li>Date &amp; Time: Ensuring the return values are always of type string.</li> <li>IF: Added support for moment types to Date &amp; Time condition.</li> </ul>"},{"location":"workflow/reference/release-notes/#core-functionality_27","title":"Core Functionality","text":"<ul> <li>Added name and ID of a workflow to its settings.</li> <li>Added parameter inputs to be multi-line.</li> <li>Fixed an issue with declaring proxies when axios is used.</li> <li>Fixed an issue with serializing arrays and special characters.</li> <li>Fixed an issue with updating expressions after renaming a node.</li> </ul>"},{"location":"workflow/reference/release-notes/#bug-fixes_21","title":"Bug fixes","text":"<ul> <li>HTTP Request: Fixed an issue with the Full Response option not taking effect when used with the Ignore Response Code option.</li> </ul>"},{"location":"workflow/reference/release-notes/#contributors_22","title":"Contributors","text":"<p>Valentina Lilova, Oliver Trajceski</p>"},{"location":"workflow/reference/release-notes/#n8n01450","title":"n8n@0.145.0","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-10-22</p>"},{"location":"workflow/reference/release-notes/#new-nodes_15","title":"New nodes","text":"<ul> <li>AWS Textract</li> <li>Google Drive Trigger</li> </ul>"},{"location":"workflow/reference/release-notes/#enhanced-nodes_19","title":"Enhanced nodes","text":"<ul> <li>Bitbucket Trigger: Added check for credentials validity. Removed deprecated User and Team resources, and added the Workspace resource.</li> <li>GitHub: Added check for API credentials validity.</li> <li>Home Assistant: Added check for credentials validity.</li> <li>Jira Software: Added check for credentials validity.</li> <li>Microsoft OneDrive: Added functionality to create folder hierarchy automatically upon subfolder creation.</li> <li>Pipedrive: Added All Users option to Get All operation of Activity resource.</li> <li>Slack: Increase the Slack default query limit from 5 to 100 in order to reduce number of requests.</li> <li>Twitter: Added Tweet Mode additional field to the Search operation of Tweet resource.</li> </ul>"},{"location":"workflow/reference/release-notes/#core-functionality_28","title":"Core Functionality","text":"<ul> <li>Changed <code>vm2</code> library version from <code>3.9.3</code> to <code>3.9.5</code>.</li> <li>Fixed an issue with ignoring the response code.</li> <li>Fixed an issue with overwriting credentials via environment variables.</li> <li>Fixed an issue with using query strings combined with the <code>x-www-form-urlencoded</code> content type.</li> <li>Introduced telemetry.</li> </ul>"},{"location":"workflow/reference/release-notes/#bug-fixes_22","title":"Bug fixes","text":"<ul> <li>Jira Software: Fixed an issue with the Expand option for the Issue resource. Also fixed an issue with using custom fields on Jira Server.</li> <li>Slack: Fixed an issue with pagination when loading more than 1,000 channels.</li> <li>Strapi: Fixed an issue using the Where option of the Get All operation.</li> <li>WooCommerce: Fixed an issue where a wrong postcode field name was used for the Order resource.</li> </ul>"},{"location":"workflow/reference/release-notes/#contributors_23","title":"Contributors","text":"<p>pemontto, rdd2, robertodamiani, Rodrigo Correia</p>"},{"location":"workflow/reference/release-notes/#n8n01440","title":"n8n@0.144.0","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-10-15</p>"},{"location":"workflow/reference/release-notes/#enhanced-nodes_20","title":"Enhanced nodes","text":"<ul> <li>Nextcloud: Added Share operation to the File and Folder resources.</li> <li>Zendesk: Added support for deleting, listing, getting, and recovering suspended tickets. Added the query option for regular tickets. Added assignee emails, internal notes, and public replies options to the update ticket operation.</li> </ul>"},{"location":"workflow/reference/release-notes/#core-functionality_29","title":"Core Functionality","text":"<ul> <li>Improved the autofill behaviour on Google Chrome when entering credentials.</li> </ul>"},{"location":"workflow/reference/release-notes/#bug-fixes_23","title":"Bug fixes","text":"<ul> <li>Airtable: Fixed an issue with the sort field.</li> <li>Cron: Set the version of the cron library to 1.7.2.</li> </ul>"},{"location":"workflow/reference/release-notes/#contributors_24","title":"Contributors","text":"<p>Jonathan Bennetts</p>"},{"location":"workflow/reference/release-notes/#n8n01430","title":"n8n@0.143.0","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-10-14</p>"},{"location":"workflow/reference/release-notes/#enhanced-nodes_21","title":"Enhanced nodes","text":"<ul> <li>Pipedrive: Added support for getting activities from deal ID.</li> <li>Facebook Graph API: Added support for Facebook Graph API versions 11 and 12.</li> </ul>"},{"location":"workflow/reference/release-notes/#core-functionality_30","title":"Core Functionality","text":"<ul> <li>Fixed a build issue affecting a number of AWS nodes.</li> <li>Changed workflows to use credential ids primarily (instead of names), allowing users to have different credentials with the same name.</li> </ul>"},{"location":"workflow/reference/release-notes/#bug-fixes_24","title":"Bug fixes","text":"<ul> <li> FTP: Fixed error when opening FTP/SFTP credentials.</li> </ul>"},{"location":"workflow/reference/release-notes/#contributors_25","title":"Contributors","text":"<p>Rodrigo Correia</p>"},{"location":"workflow/reference/release-notes/#n8n01420","title":"n8n@0.142.0","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-10-07</p>"},{"location":"workflow/reference/release-notes/#new-nodes_16","title":"New nodes","text":"<ul> <li>Stop and Error</li> </ul>"},{"location":"workflow/reference/release-notes/#core-functionality_31","title":"Core Functionality","text":"<ul> <li>Fixed overlapping buttons when viewing on mobile.</li> <li>Fixed issue with partial workflow executions when Wait node was last.</li> <li>Fixed issue with broken non-JSON requests.</li> <li>Node errors now only displayed for executing nodes, not disconnected nodes.</li> <li>Automatic save when executing new workflows with Webhook node.</li> <li>Fixed an issue with how arrays were serialized for certain nodes.</li> <li>Fixed an issue where executions could not be cancelled when running in Main mode.</li> <li>Duplicated workflows now open in a new window.</li> </ul>"},{"location":"workflow/reference/release-notes/#bug-fixes_25","title":"Bug fixes","text":"<ul> <li>HTTP Request: Fixed 'Ignore response code' flag.</li> <li>Rundeck: Fixed issue with async loading of credentials.</li> <li>SeaTable: Fixed issue when entering a Baser URI with a trailing slash.</li> </ul>"},{"location":"workflow/reference/release-notes/#contributors_26","title":"Contributors","text":"<p>G\u00fcnther, Tom Klingenberg</p>"},{"location":"workflow/reference/release-notes/#n8n01411","title":"n8n@0.141.1","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-10-01</p>"},{"location":"workflow/reference/release-notes/#core-functionality_32","title":"Core Functionality","text":"<ul> <li>Fixed issue with body formatting of <code>x-form-www-urlencoded</code> requests.</li> </ul>"},{"location":"workflow/reference/release-notes/#n8n01410","title":"n8n@0.141.0","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-09-30</p>"},{"location":"workflow/reference/release-notes/#new-nodes_17","title":"New nodes","text":"<ul> <li>Grist</li> <li>SeaTable</li> <li>SeaTable Trigger</li> <li>urlscan.io</li> </ul>"},{"location":"workflow/reference/release-notes/#core-functionality_33","title":"Core Functionality","text":"<ul> <li>Performance improvements in Editor UI</li> <li>Improved error reporting</li> </ul>"},{"location":"workflow/reference/release-notes/#contributors_27","title":"Contributors","text":"<p>Alex Hall, Tom Klingenberg</p>"},{"location":"workflow/reference/release-notes/#n8n01400","title":"n8n@0.140.0","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-09-29</p>"},{"location":"workflow/reference/release-notes/#new-nodes_18","title":"New nodes","text":"<ul> <li>Splunk</li> </ul>"},{"location":"workflow/reference/release-notes/#enhanced-nodes_22","title":"Enhanced nodes","text":"<ul> <li>Telegram: Added binary data support to the Send Animation, Send Audio, Send Document, Send Photo, Send Video, and Send Sticker operations.</li> </ul>"},{"location":"workflow/reference/release-notes/#core-functionality_34","title":"Core Functionality","text":"<ul> <li>Fixed startup behavior when running Doc\u00b2 in scaled mode (i.e. <code>skipWebhoooksDeregistrationOnShutdown</code> is enabled).</li> <li>Fixed behavior around handling empty response bodies.</li> <li>Fixed an issue with handling of refresh tokens.</li> </ul>"},{"location":"workflow/reference/release-notes/#contributors_28","title":"Contributors","text":"<p>pemontto</p>"},{"location":"workflow/reference/release-notes/#n8n01391","title":"n8n@0.139.1","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-09-23</p>"},{"location":"workflow/reference/release-notes/#core-functionality_35","title":"Core Functionality","text":"<ul> <li>Bug fixes and improvements for Editor UI.</li> </ul>"},{"location":"workflow/reference/release-notes/#n8n01390","title":"n8n@0.139.0","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-09-22</p>"},{"location":"workflow/reference/release-notes/#new-nodes_19","title":"New nodes","text":"<ul> <li>Elastic Security</li> <li>Misp</li> <li>Netlify</li> <li>Netlify Trigger</li> </ul>"},{"location":"workflow/reference/release-notes/#enhanced-nodes_23","title":"Enhanced nodes","text":"<ul> <li>HubSpot Trigger: Authentication method changed to OAuth2.</li> <li>Wait: Added improved status messages for Wait behavior.</li> </ul>"},{"location":"workflow/reference/release-notes/#core-functionality_36","title":"Core Functionality","text":"<ul> <li>Updated node design to include support for versioned nodes.</li> </ul>"},{"location":"workflow/reference/release-notes/#bug-fixes_26","title":"Bug fixes","text":"<ul> <li>SendGrid: Fixed issue with adding contacts to lists.</li> </ul>"},{"location":"workflow/reference/release-notes/#contributors_29","title":"Contributors","text":"<p>Mat\u00edas Aguirre</p>"},{"location":"workflow/reference/release-notes/#n8n01380","title":"n8n@0.138.0","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-09-15</p>"},{"location":"workflow/reference/release-notes/#new-nodes_20","title":"New nodes","text":"<ul> <li>Item Lists</li> <li>Magento 2</li> </ul>"},{"location":"workflow/reference/release-notes/#enhanced-nodes_24","title":"Enhanced nodes","text":"<ul> <li>Baserow: Added the following filter options: Contains, Contains Not, Date Before Date, Date After Date, Filename Contains, Is Empty, Is Not Empty, Link Row Has, Link Row Does Not Have, Single Select Equal, and Single Select Not Equal.</li> <li>Pipedrive: Added support for Notes on Leads.</li> <li>Wekan: Added Sort field to the Card resource.</li> </ul>"},{"location":"workflow/reference/release-notes/#core-functionality_37","title":"Core Functionality","text":"<ul> <li>General UX improvements to the Editor UI.</li> <li>Fixed an issue with the <code>PayloadTooLargeError</code>.</li> </ul>"},{"location":"workflow/reference/release-notes/#bug-fixes_27","title":"Bug fixes","text":"<ul> <li>Lemlist: Fixed issue where events were not sent in the correct property.</li> <li>Notion: Fixed issue listed unnamed databases.</li> </ul>"},{"location":"workflow/reference/release-notes/#contributors_30","title":"Contributors","text":"<p>bramknuever, Chris Magnuson</p>"},{"location":"workflow/reference/release-notes/#n8n01370","title":"n8n@0.137.0","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-09-05</p>"},{"location":"workflow/reference/release-notes/#new-nodes_21","title":"New nodes","text":"<ul> <li>Freshservice</li> </ul>"},{"location":"workflow/reference/release-notes/#enhanced-nodes_25","title":"Enhanced nodes","text":"<ul> <li>Clockify: Added Task resource.</li> <li>Hubspot: Added dropdown selection for Properties and Properties with History filters for Get All Deals operations.</li> <li>Mautic: Added Campaign Contact resource.</li> <li>MongoDB: Added ability to query documents by '_id'.</li> <li>MQTT: Added SSL/TLS support to authentication.</li> <li>MQTT Trigger: Added SSL/TLS support to authentication.</li> <li>Salesforce: Added File Extension option to the Document resource. Added Type field to Task resource.</li> <li>Sms77: Added Voice Call resource. Added the following options to SMS resource: Debug, Delay, Foreign ID, Flash, Label, No Reload, Performance Tracking, TTL.</li> <li>Zendesk: Added Organization resource. Added Get Organizations and Get Related Data operations to User resource.</li> </ul>"},{"location":"workflow/reference/release-notes/#core-functionality_38","title":"Core Functionality","text":"<ul> <li>Added execution ID to logs of queue processes.</li> <li>Added description to operation errors.</li> <li>Added ability for webhook processes to wake waiting executions.</li> </ul>"},{"location":"workflow/reference/release-notes/#bug-fixes_28","title":"Bug fixes","text":"<ul> <li>Hubspot: Fixed issue with 'RequestAllItems' API.</li> <li>Wordpress: Fixed issue with 'RequestAllItems' API only returning the first 10 items.</li> </ul>"},{"location":"workflow/reference/release-notes/#contributors_31","title":"Contributors","text":"<p>Andr\u00e9 Matthies, DeskYT, Frederic Alix, Jonathan Bennetts, Ketan Somvanshi, Luiz Eduardo de Oliveira Fonseca, TheFSilver</p>"},{"location":"workflow/reference/release-notes/#n8n01360","title":"n8n@0.136.0","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-08-30</p>"},{"location":"workflow/reference/release-notes/#enhanced-nodes_26","title":"Enhanced nodes","text":"<ul> <li>Notion: Added handling of Rich Text when simplifying data.</li> </ul>"},{"location":"workflow/reference/release-notes/#core-functionality_39","title":"Core Functionality","text":"<ul> <li>General UI design improvements.</li> <li>Improved errors messages during debugging of custom nodes.</li> <li>All packages upgraded to TypeScript 4.3.5, improved linting and formatting.</li> </ul>"},{"location":"workflow/reference/release-notes/#bug-fixes_29","title":"Bug fixes","text":"<ul> <li>FTP: Fixed issue where incorrect paths were displayed when using the node.</li> <li>Wait: Fixed issue when receiving multiple files using On Webhook Call operation.</li> <li>Webhook: Fixed issue when receiving multiple files.</li> </ul>"},{"location":"workflow/reference/release-notes/#n8n01353","title":"n8n@0.135.3","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-08-27</p>"},{"location":"workflow/reference/release-notes/#core-functionality_40","title":"Core Functionality","text":"<ul> <li>Fixed Canvas UI inconsistencies when duplicating workflows.</li> <li>Added log message during upgrade to indicate database migration has started.</li> <li>General improvements to parameter labels and tooltips.</li> </ul>"},{"location":"workflow/reference/release-notes/#contributors_32","title":"Contributors","text":"<p>Kyle Mohr</p>"},{"location":"workflow/reference/release-notes/#n8n01352","title":"n8n@0.135.2","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-08-26</p>"},{"location":"workflow/reference/release-notes/#core-functionality_41","title":"Core Functionality","text":"<ul> <li>Added expression support for credentials.</li> <li>Fixed performance issues when loading credentials.</li> </ul>"},{"location":"workflow/reference/release-notes/#n8n01351","title":"n8n@0.135.1","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-08-23</p>"},{"location":"workflow/reference/release-notes/#core-functionality_42","title":"Core Functionality","text":"<ul> <li>Fixed an issue where if Doc\u00b2 was shutdown during database migration while upgrading versions, errors would result upon next startup.</li> </ul>"},{"location":"workflow/reference/release-notes/#n8n01350","title":"n8n@0.135.0","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-08-22</p> <p>Breaking changes</p> <p>Please note that this version contains breaking changes. You can read more about it here. The features that introduced the breaking changes have been flagged below.</p>"},{"location":"workflow/reference/release-notes/#new-nodes_22","title":"New nodes","text":"<ul> <li>Form.io Trigger</li> <li>Formstack Trigger</li> <li>Wait</li> </ul>"},{"location":"workflow/reference/release-notes/#core-functionality_43","title":"Core Functionality","text":"<ul> <li>In-node method for accessing binary data is now asynchronous and a helper function for this has been implemented. </li> <li>Credentials are now loaded from the database on-demand. </li> <li>Webhook UUIDs are automatically updated when duplicating a workflow.</li> <li>Fixed an issue when referencing values before loops.</li> </ul>"},{"location":"workflow/reference/release-notes/#bug-fixes_30","title":"Bug fixes","text":"<ul> <li>Interval: Fixed issue where entering too large a value (&gt; 2147483647ms) resulted in an interval of 1sec being used rather than an error.</li> </ul>"},{"location":"workflow/reference/release-notes/#contributors_33","title":"Contributors","text":"<p>Aniruddha Adhikary, lublak, parthibanbalaji</p>"},{"location":"workflow/reference/release-notes/#n8n01340","title":"n8n@0.134.0","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-08-15</p>"},{"location":"workflow/reference/release-notes/#enhanced-nodes_27","title":"Enhanced nodes","text":"<ul> <li>AWS DynamoDB: Added Scan option to Item &gt; Get All operation.</li> <li>Google Drive: Added File Name option to File &gt; Update operation.</li> <li>Mautic: Added the following fields to Company resource: Address, Annual Revenue, Company Email, Custom Fields, Description, Fax, Industry, Number of Employees, Phone, Website.</li> <li>Notion: Added Timezone option when inserting Date fields.</li> <li>Pipedrive: Added the following Filters options to the Deal &gt; Get All operation: Predefined Filter, Stage ID, Status, and User ID.</li> <li>QuickBooks: Added the Transaction resource and Get Report operation.</li> </ul>"},{"location":"workflow/reference/release-notes/#core-functionality_44","title":"Core Functionality","text":"<ul> <li>Integrated Nodelinter in Workflow\u00b2.</li> <li>Fix to add a trailing slash (<code>/</code>) to all webhook URLs for proper functionality.</li> </ul>"},{"location":"workflow/reference/release-notes/#bug-fixes_31","title":"Bug fixes","text":"<ul> <li>AWS SES: Fixed issue where special characters in the message were not encoded.</li> <li>Baserow: Fixed issue where Create operation inserted null values.</li> <li>Hubspot: Fixed issue when sending context parameter.</li> </ul>"},{"location":"workflow/reference/release-notes/#contributors_34","title":"Contributors","text":"<p>calvintwr, CFarcy, Jeremie Dokime, Michael Hirschler, Rodrigo Correia, sol</p>"},{"location":"workflow/reference/release-notes/#n8n01330","title":"n8n@0.133.0","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-08-08</p>"},{"location":"workflow/reference/release-notes/#new-nodes_23","title":"New nodes","text":"<ul> <li>Monica CRM</li> </ul>"},{"location":"workflow/reference/release-notes/#enhanced-nodes_28","title":"Enhanced nodes","text":"<ul> <li>HTTP Request: Added Follow All Redirects option.</li> <li>Salesforce: Added Record Type ID field.</li> </ul>"},{"location":"workflow/reference/release-notes/#core-functionality_45","title":"Core Functionality","text":"<ul> <li>Fixed UI lag when editing large workflows.</li> </ul>"},{"location":"workflow/reference/release-notes/#bug-fixes_32","title":"Bug fixes","text":"<ul> <li>Nextcloud: Fixed issue where List operation on an empty Folder returned an error.</li> <li>Spotify: Fixed issues with pagination and infinite executions.</li> </ul>"},{"location":"workflow/reference/release-notes/#contributors_35","title":"Contributors","text":"<p>Jacob Burrell, \u041b\u0435\u0431\u0435\u0434\u0435\u0432 \u0418\u0432\u0430\u043d</p>"},{"location":"workflow/reference/release-notes/#n8n01322","title":"n8n@0.132.2","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-08-02</p>"},{"location":"workflow/reference/release-notes/#bug-fixes_33","title":"Bug fixes","text":"<ul> <li>Interval: Fixed issue with infinite executions.</li> </ul>"},{"location":"workflow/reference/release-notes/#contributors_36","title":"Contributors","text":"<p>\u041b\u0435\u0431\u0435\u0434\u0435\u0432 \u0418\u0432\u0430\u043d</p>"},{"location":"workflow/reference/release-notes/#n8n01321","title":"n8n@0.132.1","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-08-02</p>"},{"location":"workflow/reference/release-notes/#core-functionality_46","title":"Core Functionality","text":"<ul> <li>Changed TypeORM version to 0.2.34</li> </ul>"},{"location":"workflow/reference/release-notes/#n8n01320","title":"n8n@0.132.0","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-08-01</p>"},{"location":"workflow/reference/release-notes/#new-nodes_24","title":"New nodes","text":"<ul> <li>Freshworks CRM</li> <li>Google Perspective</li> <li>Marketstack</li> <li>NocoDB</li> </ul>"},{"location":"workflow/reference/release-notes/#enhanced-nodes_29","title":"Enhanced nodes","text":"<ul> <li>Facebook Trigger: Added Fields parameter.</li> <li>Gmail: Added Sender Name parameter.</li> <li>Home Assistant: Added Event resource.</li> <li>Pipedrive: Added Deal Product resource.</li> <li>Salesforce: Added Document resource with Upload operation.</li> <li>WooCommerce: Added Customer resource.</li> </ul>"},{"location":"workflow/reference/release-notes/#core-functionality_47","title":"Core Functionality","text":"<ul> <li>Fixed an issue for large internal values.</li> </ul>"},{"location":"workflow/reference/release-notes/#contributors_37","title":"Contributors","text":"<p>Ed Linklater, Rodrigo Correia</p>"},{"location":"workflow/reference/release-notes/#n8n01310","title":"n8n@0.131.0","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-07-24</p> <p>Breaking change</p> <p>Please note that this version contains a breaking change. You can read more about it here. The features that introduced the breaking changes have been flagged below.</p>"},{"location":"workflow/reference/release-notes/#new-nodes_25","title":"New nodes","text":"<ul> <li>Webex by Cisco</li> <li>Webex by Cisco Trigger</li> </ul>"},{"location":"workflow/reference/release-notes/#enhanced-nodes_30","title":"Enhanced nodes","text":"<ul> <li>Pipedrive: Added Lead resource. Added Search operation to Organization resource.</li> <li>Taiga Trigger: Added Resource and Operations filters.</li> </ul>"},{"location":"workflow/reference/release-notes/#core-functionality_48","title":"Core Functionality","text":"<ul> <li>Added Continue-on-fail support to all nodes.</li> <li>Added new version notifications.</li> <li>Added Refresh List for remote options lists.</li> <li>Added <code>$position</code> expression variable to return the index of an item within a list.</li> </ul>"},{"location":"workflow/reference/release-notes/#bug-fixes_34","title":"Bug fixes","text":"<ul> <li>Spreadsheet File: Fixed issue when saving dates.</li> </ul>"},{"location":"workflow/reference/release-notes/#contributors_38","title":"Contributors","text":"<p>Anthr@x, Felipe Cecagno</p>"},{"location":"workflow/reference/release-notes/#n8n01300","title":"n8n@0.130.0","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-07-18</p> <p>Breaking change</p> <p>Please note that this version contains a breaking change. You can read more about it here. The features that introduced the breaking changes have been flagged below.</p>"},{"location":"workflow/reference/release-notes/#new-nodes_26","title":"New nodes","text":"<ul> <li>AWS DynamoDB</li> <li>Elasticsearch</li> <li>ServiceNow</li> </ul>"},{"location":"workflow/reference/release-notes/#enhanced-nodes_31","title":"Enhanced nodes","text":"<ul> <li>Kafka Trigger: Added Read Messages From Beginning option.</li> <li>Salesforce: Added Sandbox Environment Type for OAuth2 credentials.</li> <li>Taiga: Added Epic, Task, and User Story operations.</li> <li>TheHive: Added Custom Fields option to the available Additional Fields.</li> </ul>"},{"location":"workflow/reference/release-notes/#core-functionality_49","title":"Core Functionality","text":"<ul> <li>Fixed an issue where failed workflows were displayed as \"running\".</li> <li>Fixes issues with uncaught errors.</li> </ul>"},{"location":"workflow/reference/release-notes/#bug-fixes_35","title":"Bug fixes","text":"<ul> <li>Notion: Fixed issue when filtering field data type.</li> </ul>"},{"location":"workflow/reference/release-notes/#contributors_39","title":"Contributors","text":"<p>Michael Hirschler, Mika Luhta, Pierre Lanvin</p>"},{"location":"workflow/reference/release-notes/#n8n01290","title":"n8n@0.129.0","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-07-12</p>"},{"location":"workflow/reference/release-notes/#new-nodes_27","title":"New nodes","text":"<ul> <li>Baserow</li> </ul>"},{"location":"workflow/reference/release-notes/#bug-fixes_36","title":"Bug fixes","text":"<ul> <li>SSH: Fixed issue with access rights when downloading files.</li> </ul>"},{"location":"workflow/reference/release-notes/#contributors_40","title":"Contributors","text":"<p>J\u00e9r\u00e9mie Pardou-Piquemal</p>"},{"location":"workflow/reference/release-notes/#n8n01280","title":"n8n@0.128.0","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-07-11</p>"},{"location":"workflow/reference/release-notes/#new-nodes_28","title":"New nodes","text":"<ul> <li>Home Assistant</li> <li>Stripe</li> </ul>"},{"location":"workflow/reference/release-notes/#enhanced-nodes_32","title":"Enhanced nodes","text":"<ul> <li>HTTP Request: Added support for arrays in Querystring. Any parameter appearing multiple times with the same name is grouped into an array.</li> <li>Mautic: Added Contact Segment resource.</li> <li>Telegram: Added Delete operation to the Message resource.</li> </ul>"},{"location":"workflow/reference/release-notes/#core-functionality_50","title":"Core Functionality","text":"<ul> <li>Performance improvement for loading of historical executions (&gt; 3mil) when using Postgres.</li> <li>Fixed error handling for unending workflows and display of \"unknown\" workflow status.</li> <li>Fixed format of Workflow ID when downloading from UI Editor to enable compatibility with importing from CLI.</li> </ul>"},{"location":"workflow/reference/release-notes/#bug-fixes_37","title":"Bug fixes","text":"<ul> <li>Microsoft SQL: Fixed an issue with sending the connectionTimeout parameter, and creating and updating data using columns with spaces.</li> </ul>"},{"location":"workflow/reference/release-notes/#contributors_41","title":"Contributors","text":"<p>Kaito Udagawa, Rodrigo Correia</p>"},{"location":"workflow/reference/release-notes/#n8n01270","title":"n8n@0.127.0","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-07-04</p> <p>Breaking change</p> <p>Please note that this version contains a breaking change. You can read more about it here. The features that introduced the breaking changes have been flagged below.</p>"},{"location":"workflow/reference/release-notes/#enhanced-nodes_33","title":"Enhanced nodes","text":"<ul> <li>Airtable: Added Bulk Size option to all Operations.</li> <li>Box: Added Share operation to File and Folder resources.</li> <li>Salesforce: Added Last Name field to Update operation on Contact resource.</li> <li>Zoho CRM: Added Account, Contact, Deal, Invoice, Product, Purchase, Quote, Sales Order, and Vendor resources.</li> </ul>"},{"location":"workflow/reference/release-notes/#core-functionality_51","title":"Core Functionality","text":"<ul> <li>Added a workflow testing framework via a new CLI command to execute all desired workflows. Run <code>n8n executeBatch --help</code> for details.</li> <li>Added support to display binary video content in Editor UI.</li> </ul>"},{"location":"workflow/reference/release-notes/#bug-fixes_38","title":"Bug fixes","text":"<ul> <li>Google Sheets: Fixed an issue with handling 0 value that resulted in empty cells.</li> <li>SSH: Fixed an issue with setting passphrases.</li> </ul>"},{"location":"workflow/reference/release-notes/#contributors_42","title":"Contributors","text":"<p>flybluewolf, Kaito Udagawa</p>"},{"location":"workflow/reference/release-notes/#n8n01261","title":"n8n@0.126.1","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-06-29</p>"},{"location":"workflow/reference/release-notes/#core-functionality_52","title":"Core Functionality","text":"<ul> <li>Fixed issues with keyboard shortcuts when a modal was open.</li> </ul>"},{"location":"workflow/reference/release-notes/#bug-fixes_39","title":"Bug fixes","text":"<ul> <li>Microsoft SQL: Fixed an issue with handling of Boolean values when inserting.</li> <li>Pipedrive: Fixed an issue with the node icon.</li> </ul>"},{"location":"workflow/reference/release-notes/#n8n01260","title":"n8n@0.126.0","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-06-27</p>"},{"location":"workflow/reference/release-notes/#new-nodes_29","title":"New nodes","text":"<ul> <li>Action Network</li> <li>Google Docs</li> </ul>"},{"location":"workflow/reference/release-notes/#enhanced-nodes_34","title":"Enhanced nodes","text":"<ul> <li>AWS S3: Added Delete operation to the Bucket Resource.</li> <li>Google Analytics: Added Dimension Filters to the available Additional Fields.</li> <li>HTTP Request: Added Split Into Items option.</li> <li>MQTT: Added mqqts protocol for MQTT credentials.</li> <li>QuickBooks: Added Purchase resource with Get and Get All operations.</li> </ul>"},{"location":"workflow/reference/release-notes/#core-functionality_53","title":"Core Functionality","text":"<ul> <li>Templates from the n8n Workflows page can now be directly imported by appending <code>/workflows/templates/&lt;templateId&gt;</code> to your instance base URL. For example, <code>localhost:5678/workflows/templates/1142</code>.</li> <li>Added new Editor UI shortcuts. See Keyboard Shortcuts for details.</li> <li>Fixed an issue causing console errors when deleting a node from the canvas.</li> </ul>"},{"location":"workflow/reference/release-notes/#bug-fixes_40","title":"Bug fixes","text":"<ul> <li>Ghost: Fixed an issue with the Get All operation functionality.</li> <li>Google Analytics: Fixed an issue that caused an error when attempting to sort with no data present.</li> <li>Microsoft SQL: Fixed an issue when escaping single quotes and mapping empty fields.</li> <li>Notion: Fixed an issue with pagination of databases and users.</li> </ul>"},{"location":"workflow/reference/release-notes/#contributors_43","title":"Contributors","text":"<p>calvintwr, Jan Baykara</p>"},{"location":"workflow/reference/release-notes/#n8n01250","title":"n8n@0.125.0","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-06-20</p>"},{"location":"workflow/reference/release-notes/#enhanced-nodes_35","title":"Enhanced nodes","text":"<ul> <li>Spotify: Added Search operation to Album, Artist, Playlist, and Track resources, and Resume and Volume operations to Player resource.</li> </ul>"},{"location":"workflow/reference/release-notes/#core-functionality_54","title":"Core Functionality","text":"<ul> <li>Implemented new design of the Nodes Panel, adding categories and subcategories, along with improved search. For full details, see the commits.</li> </ul>"},{"location":"workflow/reference/release-notes/#bug-fixes_41","title":"Bug fixes","text":"<ul> <li>MySQL: Fixed an issue where Doc\u00b2 was unable to save data due to collation, resulting in workflows ending with Unknown status.</li> </ul>"},{"location":"workflow/reference/release-notes/#contributors_44","title":"Contributors","text":"<p>Amudhan Manivasagam, Carlos Alexandro Becker, Kaito Udagawa</p>"},{"location":"workflow/reference/release-notes/#n8n01241","title":"n8n@0.124.1","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-06-16</p>"},{"location":"workflow/reference/release-notes/#core-functionality_55","title":"Core Functionality","text":"<ul> <li>Improved error log messages</li> <li>Fixed an issue where the tags got removed when deactivating the workflow or updating settings</li> <li>Removed the circular references for the error caused by the request library</li> </ul>"},{"location":"workflow/reference/release-notes/#n8n01240","title":"n8n@0.124.0","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-06-13</p>"},{"location":"workflow/reference/release-notes/#enhanced-nodes_36","title":"Enhanced nodes","text":"<ul> <li>Google Drive: Added APP Properties and Properties options to the Upload operation of the File resource</li> <li>HTTP Request: Added the functionlaity to log the request to the browser console for testing</li> <li>Notion: Added the Include Time parameter date field types</li> <li>Salesforce: Added Upsert operation to Account, Contact, Custom Object, Lead, and Opportunity resources</li> <li>Todoist: Added the Description option to the Task resource</li> </ul>"},{"location":"workflow/reference/release-notes/#core-functionality_56","title":"Core Functionality","text":"<ul> <li>Implemented the functionality to display the error details in a toast message for trigger nodes</li> <li>Improved error handling by removing circular references from API errors</li> </ul>"},{"location":"workflow/reference/release-notes/#bug-fixes_42","title":"Bug fixes","text":"<ul> <li>Jira: Fixed an issues with the API version and fixed an issue with fetching the custom fields for the Issue resource</li> </ul>"},{"location":"workflow/reference/release-notes/#contributors_45","title":"Contributors","text":"<p>Jean M, romaincolombo-daily, Thomas Jost, Vincent</p>"},{"location":"workflow/reference/release-notes/#n8n01231","title":"n8n@0.123.1","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-06-06</p>"},{"location":"workflow/reference/release-notes/#core-functionality_57","title":"Core Functionality","text":"<ul> <li>Fixed a build issue for missing node icons</li> </ul>"},{"location":"workflow/reference/release-notes/#n8n01230","title":"n8n@0.123.0","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-06-06</p>"},{"location":"workflow/reference/release-notes/#new-nodes_30","title":"New nodes","text":"<ul> <li>Git</li> <li>Microsoft To Do</li> </ul>"},{"location":"workflow/reference/release-notes/#enhanced-nodes_37","title":"Enhanced nodes","text":"<ul> <li>Pipedrive: Added a feature to fetch data from the Pipedrive API, added Search operation to the Deals resource, and added custom fields option</li> <li>Spotify: Added My Data resource</li> </ul>"},{"location":"workflow/reference/release-notes/#core-functionality_58","title":"Core Functionality","text":"<ul> <li>Fixed issues with NodeViewNew navigation handling</li> <li>Fixed an issue with the view crashing with large requests</li> </ul>"},{"location":"workflow/reference/release-notes/#bug-fixes_43","title":"Bug fixes","text":"<ul> <li>ASW Transcribe: Fixed issues with options</li> </ul>"},{"location":"workflow/reference/release-notes/#contributors_46","title":"Contributors","text":"<p>Rodrigo Correia, Sam Roquitte</p>"},{"location":"workflow/reference/release-notes/#n8n01223","title":"n8n@0.122.3","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-06-04</p>"},{"location":"workflow/reference/release-notes/#core-functionality_59","title":"Core Functionality","text":"<ul> <li>Fixed error messages for the Textarea field</li> <li>Added the missing winston dependency</li> <li>Fixed an issue with adding values via the Variable selector. The deleted values don't reappear</li> <li>Fixed an issue with the Error Workflows not getting executed in the queue mode</li> </ul>"},{"location":"workflow/reference/release-notes/#bug-fixes_44","title":"Bug fixes","text":"<ul> <li>Notion: Fixed an issue with parsing the last edited time</li> </ul>"},{"location":"workflow/reference/release-notes/#n8n01222","title":"n8n@0.122.2","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-05-31</p>"},{"location":"workflow/reference/release-notes/#enhanced-nodes_38","title":"Enhanced nodes","text":"<ul> <li>Function: Added console.log support for writing to browser console</li> <li>Function Item: Added console.log support for writing to browser console</li> </ul>"},{"location":"workflow/reference/release-notes/#core-functionality_60","title":"Core Functionality","text":"<ul> <li>Fixed an issue that enables clicks on tags</li> <li>Fixed an issue with escaping workflow name</li> <li>Fixed an issue with selecting variables in the Expression Editor</li> </ul>"},{"location":"workflow/reference/release-notes/#n8n01221","title":"n8n@0.122.1","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-05-30</p>"},{"location":"workflow/reference/release-notes/#core-functionality_61","title":"Core Functionality","text":"<ul> <li>Fixed an issue with the order in migration rollback</li> </ul>"},{"location":"workflow/reference/release-notes/#n8n01220","title":"n8n@0.122.0","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-05-30</p>"},{"location":"workflow/reference/release-notes/#new-nodes_31","title":"New nodes","text":"<ul> <li>AWS Transcribe</li> <li>SSH</li> <li>UptimeRobot</li> </ul>"},{"location":"workflow/reference/release-notes/#enhanced-nodes_39","title":"Enhanced nodes","text":"<ul> <li>DeepL: Added support for Free API</li> <li>Function: Added the functionality to log console.log messages to the browser console</li> <li>Function Item: Added the functionality to log console.log messages to the browser console</li> </ul>"},{"location":"workflow/reference/release-notes/#core-functionality_62","title":"Core Functionality","text":"<ul> <li>Changed <code>bcrypt</code> library from <code>@node-rs/bcrypt</code> to <code>bcryptjs</code></li> <li>Fixed an issue with optional parameters that have the same name</li> <li>Added the functionality to tag workflows</li> <li>Fixed errors in the Expression Editor</li> <li>Fixed an issue with nodes that only get connected to the second input. This solves the issue of copying and pasting the workflows where only one output of the IF node gets connected to a node</li> </ul>"},{"location":"workflow/reference/release-notes/#bug-fixes_45","title":"Bug fixes","text":"<ul> <li>Google Drive: Fixed an issue with the Drive resource</li> <li>Notion: Fixed an issue with the filtering fields type and fixed an issue with the link option</li> <li>Switch: Fixed an issue with the Expression mode</li> </ul>"},{"location":"workflow/reference/release-notes/#contributors_47","title":"Contributors","text":"<p>Alexander Mustafin</p>"},{"location":"workflow/reference/release-notes/#n8n01211","title":"n8n@0.121.1","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-06-01</p>"},{"location":"workflow/reference/release-notes/#core-functionality_63","title":"Core Functionality","text":"<ul> <li>Fixed an issue with copying the output values</li> <li>Fixed issues with the Expression Editor</li> <li>Made improvements to the Expression Editor</li> </ul>"},{"location":"workflow/reference/release-notes/#n8n01210","title":"n8n@0.121.0","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-05-20</p>"},{"location":"workflow/reference/release-notes/#new-nodes_32","title":"New nodes","text":"<ul> <li>Notion</li> <li>Notion Trigger</li> </ul>"},{"location":"workflow/reference/release-notes/#enhanced-nodes_40","title":"Enhanced nodes","text":"<ul> <li>GraphQL: Added Header Auth authentication method</li> <li>Twilio: Added API Key authentication method</li> </ul>"},{"location":"workflow/reference/release-notes/#bug-fixes_46","title":"Bug fixes","text":"<ul> <li>HubSpot: Fixed an issue with pagination for Deals resource</li> <li>Keap: Fixed an issue with the data type of the Order Title field</li> <li>Orbit: Fixed an issue with the activity type in Post operation</li> <li>Slack: Fixed an issue with the Get Profile operation</li> <li>Strava: Fixed an issue with the paging parameter</li> </ul>"},{"location":"workflow/reference/release-notes/#contributors_48","title":"Contributors","text":"<p>Jacob Spizziri</p>"},{"location":"workflow/reference/release-notes/#n8n01200","title":"n8n@0.120.0","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-05-17</p>"},{"location":"workflow/reference/release-notes/#new-nodes_33","title":"New nodes","text":"<ul> <li>iCalendar</li> </ul>"},{"location":"workflow/reference/release-notes/#enhanced-nodes_41","title":"Enhanced nodes","text":"<ul> <li>Google Cloud Firestore: Added the functionality for GeoPoint parsing and added ISO-8601 format for date validation</li> <li>IMAP Email: Added the Force reconnect option</li> <li>Paddle: Added the Use Sandbox environment API parameter</li> <li>Spotify: Added the Position parameter to the Add operation of the Playlist resource</li> <li>WooCommerce: Added the Include Credentials in Query parameter</li> </ul>"},{"location":"workflow/reference/release-notes/#core-functionality_64","title":"Core Functionality","text":"<ul> <li>Added await to hooks to fix issues with the <code>Unknown</code> status of the workflows</li> <li>Changed the data type of the <code>credentials_entity</code> field for MySQL database to fix issues with long credentials</li> <li>Fixed an issue with the ordering of the executions when the list is auto-refreshed</li> <li>Added the functionality that allows reading sibling parameters</li> </ul>"},{"location":"workflow/reference/release-notes/#bug-fixes_47","title":"Bug fixes","text":"<ul> <li>Clockify Trigger: Fixed an issue that occurred when the node returned an empty array</li> <li>Google Cloud Firestore: Fixed an issue with parsing empty document, and an issue with the detection of date</li> <li>HubSpot: Fixed an issue with the Return All option</li> </ul>"},{"location":"workflow/reference/release-notes/#contributors_49","title":"Contributors","text":"<p>DeskYT, Daniel Lazaro, DerEnderKeks, mdasmendel</p>"},{"location":"workflow/reference/release-notes/#n8n01190","title":"n8n@0.119.0","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-05-09</p>"},{"location":"workflow/reference/release-notes/#enhanced-nodes_42","title":"Enhanced nodes","text":"<ul> <li>AWS Comprehend: Added the Detect Entities operation</li> <li>AWS Lambda: Added the ability to list functions recursively if the number of functions exceeds 50</li> <li>Google Analytics: Added pagination to the Report resource</li> <li>Mailjet: Added Reply To parameter</li> <li>Redis: Added the Increment operation</li> <li>Spreadsheet File: Added the Header Row option</li> <li>Webflow Trigger: Added Collection Item Created, Collection Item Updated, and Collection Item Deleted events</li> </ul>"},{"location":"workflow/reference/release-notes/#core-functionality_65","title":"Core Functionality","text":"<ul> <li>Implemented timeout for subworkflows</li> <li>Removed the deregistration webhooks functionality from the webhook process</li> </ul>"},{"location":"workflow/reference/release-notes/#bug-fixes_48","title":"Bug fixes","text":"<ul> <li>Google Cloud Firestore: Fixed an issue with parsing null value</li> <li>Google Sheets: Fixed an issue with the Key Row parameter</li> <li>HubSpot: Fixed an issue with the authentication</li> </ul>"},{"location":"workflow/reference/release-notes/#contributors_50","title":"Contributors","text":"<p>Nikita</p>"},{"location":"workflow/reference/release-notes/#n8n01181","title":"n8n@0.118.1","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-05-05</p>"},{"location":"workflow/reference/release-notes/#core-functionality_66","title":"Core Functionality","text":"<ul> <li>Fixed an issue with error workflows</li> </ul>"},{"location":"workflow/reference/release-notes/#n8n01180","title":"n8n@0.118.0","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-05-02</p> <p>Breaking change</p> <p>Please note that this version contains a breaking change. You can read more about it here. The features that introduced the breaking changes have been flagged below.</p>"},{"location":"workflow/reference/release-notes/#new-nodes_34","title":"New nodes","text":"<ul> <li>Kitemaker</li> <li>MQTT</li> </ul>"},{"location":"workflow/reference/release-notes/#enhanced-nodes_43","title":"Enhanced nodes","text":"<ul> <li>CrateDB: Added query parameters. The Execute Query operation returns the result from all queries executed instead of just one of the results.</li> <li>ERPNext: Added support for self-hosted ERPNext instances</li> <li>FTP: Added the functionality to delete folders</li> <li>Google Calendar: Added the Continue on Fail functionality</li> <li>Google Drive: Added the functionality to add file name when downloading files</li> <li>Gmail: Added functionality to handle multiple binary properties</li> <li>Microsoft Outlook: Added Is Read and Move option to the Message resource</li> <li>Postgres: Added query parameters. The Execute Query operation returns the result from all queries executed instead of just one of the results.</li> <li>QuestDB: Added query parameters. The Execute Query operation returns the result from all queries executed instead of just one of the results.</li> <li>QuickBase: Added option to use Field IDs</li> <li>TimescaleDB: Added query parameters. The Execute Query operation returns the result from all queries executed instead of just one of the results.</li> <li>Twist: Added Get, Get All, Delete, and Update operations to the Message Conversation resource. Added Archive, Unarchive, and Delete operations to the Channel resource. Added Thread and Comment resource</li> </ul>"},{"location":"workflow/reference/release-notes/#core-functionality_67","title":"Core Functionality","text":"<ul> <li>Implemented the native <code>fs/promise</code> library where possible</li> <li>Added the functionality to output logs to the console or a file</li> <li>We have updated the minimum required version for Node.js to v14.15. For more details, check out the entry in the breaking changes page</li> </ul>"},{"location":"workflow/reference/release-notes/#bug-fixes_49","title":"Bug fixes","text":"<ul> <li>GetResponse Trigger: Fixed an issue with error handling</li> <li>GitHub Trigger: Fixed an issue with error handling</li> <li>GitLab Trigger: Fixed an issue with error handling</li> <li>Google Sheets: Fixed an issue with the Lookup operation for returning empty rows</li> <li>Orbit: Fixed issues with the Post resource</li> <li>Redis: Fixed an issue with the node not returning an error</li> <li>Xero: Fixed an issue with the Create operation for the Contact resource</li> </ul>"},{"location":"workflow/reference/release-notes/#contributors_51","title":"Contributors","text":"<p>Gustavo Arjones, lublak, Colton Anglin, Mika Luhta</p>"},{"location":"workflow/reference/release-notes/#n8n01170","title":"n8n@0.117.0","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-04-24</p> <p>Breaking change</p> <p>Please note that this version contains a breaking change. You can read more about it here. The features that introduced the breaking changes have been flagged below.</p>"},{"location":"workflow/reference/release-notes/#new-nodes_35","title":"New nodes","text":"<ul> <li>Mailcheck</li> <li>n8n Trigger</li> <li>Workflow Trigger</li> </ul>"},{"location":"workflow/reference/release-notes/#enhanced-nodes_44","title":"Enhanced nodes","text":"<ul> <li>CrateDB: Added the Mode option that allows you to execute queries as transactions</li> <li>Nextcloud: Added Delete, Get, Get All, and Update operation to the User resource</li> <li>Postgres: Added the Mode option that allows you to execute queries as transactions</li> <li>QuestDB: Added the Mode option that allows you to execute queries as transactions</li> <li>Salesforce: Added Owner option to the Case and Lead resources. Added custom fields to Create and Update operations of the Case resource</li> <li>Sentry.io: Added Delete and Update operations to Project, Release, and Team resources</li> <li>TimescaleDB: Added the Mode option that allows you to execute queries as transactions</li> <li>Zendesk Trigger: Added support to retrieve custom fields</li> </ul>"},{"location":"workflow/reference/release-notes/#core-functionality_68","title":"Core Functionality","text":"<ul> <li>The Activation Trigger node has been deprecated. It has been replaced by two new nodes - the Doc\u00b2 Trigger and the Workflow Trigger node. For more details, check out the entry in the breaking changes page</li> <li>Added the functionality to open the New Credentials dropdown by default</li> </ul>"},{"location":"workflow/reference/release-notes/#bug-fixes_50","title":"Bug fixes","text":"<ul> <li>Google Sheets: Fixed an issue with the Lookup operation for returning multiple empty rows</li> <li>Intercom: Fixed an issue with the User operation in the Company resource</li> <li>Mautic: Fixed an issue with sending the lastActive parameter</li> </ul>"},{"location":"workflow/reference/release-notes/#contributors_52","title":"Contributors","text":"<p>Bart Vollebregt, Ivan Timoshenko, Konstantin Nosov, lublak, Umair Kamran,</p>"},{"location":"workflow/reference/release-notes/#n8n01161","title":"n8n@0.116.1","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-04-20</p>"},{"location":"workflow/reference/release-notes/#core-functionality_69","title":"Core Functionality","text":"<ul> <li>Fixed a timeout issue with the workflows in the main process</li> </ul>"},{"location":"workflow/reference/release-notes/#n8n01160","title":"n8n@0.116.0","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-04-17</p>"},{"location":"workflow/reference/release-notes/#new-nodes_36","title":"New nodes","text":"<ul> <li>Google BigQuery</li> <li>Webflow</li> </ul>"},{"location":"workflow/reference/release-notes/#enhanced-nodes_45","title":"Enhanced nodes","text":"<ul> <li>Date &amp; Time: Added Calculate a Date action that allows you to add or subtract time from a date</li> <li>GitLab: Added Get, Get All, Update, and Delete operations to the Release resource</li> <li>Microsoft OneDrive: Added Delete operation to the Folder resource</li> <li>Monday: Added support for OAuth2 authentication</li> <li>MongoDB: Added Limit, Skip, and Sort options to the Find operation and added Upsert parameter to the Update operation. Added the functionality to close the connection after use</li> <li>MySQL: Added support for insert modifiers and added support for SSL</li> <li>RabbitMQ: Added the functionality to close the connection after use and added support for AMPQS</li> </ul>"},{"location":"workflow/reference/release-notes/#core-functionality_70","title":"Core Functionality","text":"<ul> <li>Changed <code>bcrypt</code> library from <code>bcryptjs</code> to <code>@node-rs/bcrypt</code></li> <li>Improved node error handling. Status codes and error messages in API responses have been standardized</li> <li>Added global timeout setting for all HTTP requests (except HTTP Request node)</li> <li>Implemented timeout for workers and corrected timeout for sub workflows</li> </ul>"},{"location":"workflow/reference/release-notes/#bug-fixes_51","title":"Bug fixes","text":"<ul> <li>AWS SQS: Fixed an issue with API version and casing</li> <li>IMAP: Fixed re-connection issue</li> <li>Keap: Fixed an issue with the Opt In Reason parameter</li> <li>Salesforce: Fixed an issue with loading custom fields</li> </ul>"},{"location":"workflow/reference/release-notes/#contributors_53","title":"Contributors","text":"<p>Allan Daemon, Anton Romanov, Bart Vollebregt, Cassiano Vailati, entrailz, Konstantin Nosov, LongYinan</p>"},{"location":"workflow/reference/release-notes/#n8n01150","title":"n8n@0.115.0","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-04-10</p>"},{"location":"workflow/reference/release-notes/#new-nodes_37","title":"New nodes","text":"<ul> <li>Google Slides</li> </ul>"},{"location":"workflow/reference/release-notes/#enhanced-nodes_46","title":"Enhanced nodes","text":"<ul> <li>GitHub: Added Release resource</li> <li>TheHive: Added support to fetch observable data types</li> <li>RabbitMQ: Added header parameters</li> </ul>"},{"location":"workflow/reference/release-notes/#core-functionality_71","title":"Core Functionality","text":"<ul> <li>Fixed an issue with expressions not being displayed in read-only mode</li> <li>Fixed an issue that didn't allow editing JavaScript code in read-only mode</li> <li>Added support for configuring the maximum payload size</li> <li>Added support to dynamically add menu items</li> </ul>"},{"location":"workflow/reference/release-notes/#bug-fixes_52","title":"Bug fixes","text":"<ul> <li>Jira: Fixed an issue with loading issue types with classic project type</li> <li>RabbitMQ Trigger: Fixed an issue with the node reusing the same item</li> <li>SendGrid: Fixed an issue with the dynamic field generation</li> </ul>"},{"location":"workflow/reference/release-notes/#contributors_54","title":"Contributors","text":"<p>Mika Luhta, Loran, stwonary</p>"},{"location":"workflow/reference/release-notes/#n8n01140","title":"n8n@0.114.0","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-04-03</p>"},{"location":"workflow/reference/release-notes/#new-nodes_38","title":"New nodes","text":"<ul> <li>AWS SQS</li> <li>Copper</li> <li>ERPNext</li> <li>Oura</li> </ul>"},{"location":"workflow/reference/release-notes/#enhanced-nodes_47","title":"Enhanced nodes","text":"<ul> <li>Google Drive: Added support for creating folders for shared drives</li> <li>Google Sheets: Added Create and Remove operation to the Sheet resource</li> <li>Harvest: Added Update operation to the Task resource</li> <li>Jira: Added Reporter field to the Issue resource</li> <li>Postgres: Added support for type casting</li> </ul>"},{"location":"workflow/reference/release-notes/#core-functionality_72","title":"Core Functionality","text":"<ul> <li>Fixed an issue with the Redis connection to prevent memory leaks</li> </ul>"},{"location":"workflow/reference/release-notes/#bug-fixes_53","title":"Bug fixes","text":"<ul> <li>Bitwarden: Fixed an issue with the Update operation of the Group resource</li> <li>Cortex: Fixed an issue where only the last item got returned</li> <li>Invoice Ninja: Fixed an issue with the Project parameter</li> <li>Salesforce: Fixed an issue with the Get All operation of the Custom Object resource</li> </ul>"},{"location":"workflow/reference/release-notes/#contributors_55","title":"Contributors","text":"<p>Agata M, Allan Daemon, Craig McElroy, mjysci</p>"},{"location":"workflow/reference/release-notes/#n8n01130","title":"n8n@0.113.0","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-03-26</p> <ul> <li>New nodes</li> <li>Activation Trigger</li> <li>Plivo</li> <li>Enhanced nodes</li> <li>ClickUp: Added Space Tag, Task List, and Task Tag resource</li> <li>GitHub: Added pagination to Get Issues and Get Repositories operations</li> <li>Mattermost: Added Reaction resource and Post Ephemeral operation</li> <li>Move Binary Data: Added Encoding and Add BOM option to JSON to Binary mode and Strip BOM to Binary to JSON mode</li> <li>SendGrid: Added Mail resource</li> <li>Spotify: Added Library resource</li> <li>Telegram: Added Answer Inline Query operation to the Callback resource</li> <li>uProc: Added Get ASIN code by EAN code, Get EAN code by ASIN code, Get Email by Social Profile, Get Email by Fullname and Company's domain, and Get Email by Fullname and Company's name operations</li> <li>Bug fixes</li> <li>Clearbit: Fixed an issue with the autocomplete URI</li> <li>Dropbox: Fixed an issue with the Dropbox credentials by adding the APP Access Type parameter in the credentials. For more details, check out the entry in the breaking changes page</li> <li>Spotify: Fixed an issue with the Delete operation of the Playlist resource</li> <li>The variable selector now displays empty arrays</li> <li>Fixed a permission issue with the Raspberry Pi Docker image</li> </ul>"},{"location":"workflow/reference/release-notes/#n8n01120","title":"n8n@0.112.0","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-03-19</p> <ul> <li>New nodes</li> <li>DeepL</li> <li>Enhanced nodes</li> <li>TheHive: Added Mark as Read and Mark as Unread operations and added Ignore SSL Issues parameter to the credentials</li> <li>Bug fixes</li> <li>AWS SES: Fixed an issue to map CC addresses correctly</li> <li>Salesforce: Fixed an issue with custom object for Get All operations and fixed an issue with the first name field for the Create and Update operations for the Lead resource</li> <li>Strava: Fixed an issue with the access tokens not getting refreshed</li> <li>TheHive: Fixed an issue with the case resolution status</li> <li>Fixed an issue with importing separate decrypted credentials</li> <li>Fixed issues with the sub-workflows not finishing</li> <li>Fixed an issue with the sub-workflows running on the main process</li> <li>Fixed concurrency issues with sub-workflows</li> </ul>"},{"location":"workflow/reference/release-notes/#n8n01110","title":"n8n@0.111.0","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-03-12</p> <ul> <li>New nodes</li> <li>Autopilot</li> <li>Autopilot Trigger</li> <li>Wise</li> <li>Wise Trigger</li> <li>Enhanced nodes</li> <li>Box: Added Get operation to the Folder resource</li> <li>Dropbox: Added Search operation to the File resource. All operations are now performed relative to the user's root directory. For more details, check out the entry in the breaking changes page</li> <li>Facebook Graph API: Added new API versions</li> <li>Google Drive: Added Update operation to the File resource</li> <li>HubSpot: Added the Deal Description option</li> <li>Kafka: Added the SASL mechanism</li> <li>Monday.com: Added Move operation to Board Item resource</li> <li>MongoDB: Added Date field to the Insert and Update operations</li> <li>Micrsoft SQL: Added connection timeout parameter to credentials</li> <li>Salesforce: Added Mobile Phone field to the Lead resource</li> <li>Spotify: Added Create a Playlist operation to Playlist resource and Get New Releases to the Album resource</li> <li>Bug fixes</li> <li>Airtable: Fixed a bug with updating and deleting records</li> <li>Added the functionality to expose metrics to Prometheus. Read more about that here</li> <li>Updated fallback values to match the value type</li> <li>Added the functionality to display debugging information for pending workflows on exit</li> <li>Fixed an issue with queue mode for the executions that should not be saved</li> <li>Fixed an issue with workflows crashing and displaying <code>Unknown</code> status in the execution list</li> <li>Fixed an issue to prevent crashing while saving execution data when the <code>data</code> field has over 64KB in MySQL</li> <li>Updated <code>jws-rsa</code> to version <code>1.12.1</code></li> </ul>"},{"location":"workflow/reference/release-notes/#n8n01103","title":"n8n@0.110.3","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-03-04</p> <ul> <li>Bug fixes</li> <li>APITemplate.io: Fixed an issue with the naming of the node</li> </ul>"},{"location":"workflow/reference/release-notes/#n8n01100","title":"n8n@0.110.0","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-03-04</p> <ul> <li>New nodes</li> <li>APITemplate.io</li> <li>Bubble</li> <li>Lemlist</li> <li>Lemlist Trigger</li> <li>Enhanced nodes</li> <li>Microsoft Teams: Added option to reply to a message</li> <li>Bug fixes</li> <li>Dropbox: Fixed an issue with parsing the response with the Upload operation</li> <li>Gmail: Fixed an issue with the scope for the Service Account authentication method and fixed an issue with the label filter</li> <li>Google Drive: Fixed an issue with the missing Parent ID field for the Create operation and fixed an issue with the Permissions field</li> <li>HelpScout: Fixed an issue with sending tags when creating a conversation</li> <li>HTTP Request: Fixed an issue with the raw data and file response</li> <li>HubSpot: Fixed an issue with the OAuth2 credentials</li> <li>Added support for Date &amp; Time in the IF node and the Switch node</li> <li>Fixed an issue with mouse selection when zooming in or out</li> <li>Fixed an issue with current executing workflows when using queues for Postgres</li> <li>Fixed naming and description for the <code>N8N_SKIP_WEBHOOK_DEREGISTRATION_SHUTDOWN</code> environment variable</li> <li>Fixed an issue with auto-refresh of the execution list</li> </ul>"},{"location":"workflow/reference/release-notes/#n8n01090","title":"n8n@0.109.0","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-02-22</p> <ul> <li>New nodes</li> <li>Bitwarden</li> <li>Emelia</li> <li>Emelia Trigger</li> <li>GoToWebinar</li> <li>Raindrop</li> <li>Enhanced nodes</li> <li>AWS Rekognition: Added the Detect Text type to the Ananlyze operation for the Image resource</li> <li>Google Calendar: Added RRULE parameter to the Get All operation for the Event resource</li> <li>Jira: Added User resource and operations</li> <li>Reddit: Added the Search operation for the Post resource</li> <li>Telegram: Added the Send Location operation</li> <li>Bug fixes</li> <li>RocketChat: Fixed error responses</li> <li>Fixed the issue which caused the execution history of subworkflows (workflows started via the Execute Workflow node) not to be saved</li> <li>Added an option to export the credential data in plain text format using the CLI</li> </ul>"},{"location":"workflow/reference/release-notes/#n8n01080","title":"n8n@0.108.0","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-02-15</p> <ul> <li>New nodes</li> <li>Demio</li> <li>PostHog</li> <li>QuickBooks</li> <li>Enhanced nodes</li> <li>Trello: Added Create Checklist Item operation to the Checklist resource</li> <li>Webhook: Removed trailing slash in routes and updated logic to select dynamic webhook</li> <li>Bug fixes</li> <li>Google Drive: Fixed an issue with returning the fields the user selects for the Folder and File resources</li> <li>Twitter: Fixed a typo in the description</li> <li>Webhook: Fixed logic for static route matching</li> <li>Added the functionality to sort the values that you add in the IF node, Rename node, and the Set node</li> <li>Added the functionality to optionally save execution data after each node</li> <li>Added queue mode to scale workflow execution</li> <li>Separated webhook from the core to scale webhook separately</li> <li>Fixed an issue with current execution query for unsaved running workflows</li> <li>Fixed an issue with the regex that detected node names</li> <li>Doc\u00b2 now generates a unified execution ID instead of two separate IDs for currently running and saved executions</li> </ul>"},{"location":"workflow/reference/release-notes/#n8n01070","title":"n8n@0.107.0","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-02-08</p> <ul> <li>New nodes</li> <li>AWS Comprehend</li> <li>GetResponse Trigger</li> <li>Peekalink</li> <li>Stackby</li> <li>Enhanced nodes</li> <li>AWS SES: Added Custom Verification Email resource</li> <li>Microsoft Teams: Added Task resource</li> <li>Twitter: Added Delete operation to the Tweet resource</li> <li>Bug fixes</li> <li>Google Drive: Fixed an issue with the Delete and Share operations</li> <li>Filemaker: Fixed an issue with the script list parsing</li> <li>Updated Node.js version of Docker images to <code>14.15</code></li> <li>Added a shortcut <code>CTRL + scroll</code> to zoom</li> </ul>"},{"location":"workflow/reference/release-notes/#n8n01060","title":"n8n@0.106.0","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-02-05</p> <ul> <li>New nodes</li> <li>Reddit</li> <li>Tapfiliate</li> <li>Enhanced nodes</li> <li>Airtable Trigger: Added Download Attachment option</li> <li>HubSpot: Added Custom Properties option to the Create and Update operations of the Company resource</li> <li>MySQL: Added Connection Timeout parameter to the credentials</li> <li>Telegram: Added Pin Chat Message and Unpin Chat Message operations for the Message resource</li> <li>Bug fixes</li> <li>Typeform: Fixed an issue with the OAuth2 authentication method</li> <li>Added support for <code>s</code> and <code>u</code> flags for regex in the IF node and the Switch node</li> </ul>"},{"location":"workflow/reference/release-notes/#n8n01050","title":"n8n@0.105.0","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-02-01</p> <ul> <li>New nodes</li> <li>Discourse</li> <li>SecurityScorecard</li> <li>TimescaleDB</li> <li>Enhanced nodes</li> <li>Affinity: Added List and List Entry resource</li> <li>Asana: Added Project IDs option to the Create operation of the Task resource</li> <li>Hubspot Trigger: Added support for multiple subscriptions</li> <li>Jira: Added Issue Attachment resource and added custom fields to Create and Update operations of the Issue resource</li> <li>Todoist: Added Section option</li> <li>Bug fixes</li> <li>SIGNL4: Fixed an issue with the attachment functionality</li> <li>Added variable <code>$mode</code> to check the mode in which the workflow is being executed</li> </ul>"},{"location":"workflow/reference/release-notes/#n8n01042","title":"n8n@0.104.2","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-01-27</p> <ul> <li>Fixed an issue with the credentials parameters that have the same name</li> </ul>"},{"location":"workflow/reference/release-notes/#n8n01041","title":"n8n@0.104.1","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-01-26</p> <ul> <li>Fixed a bug with expressions in credentials</li> </ul>"},{"location":"workflow/reference/release-notes/#n8n01040","title":"n8n@0.104.0","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-01-26</p> <ul> <li>New nodes</li> <li>Compression</li> <li>Enhanced nodes</li> <li>GitHub: Added Invite operation to the User resource</li> <li>EmailReadImap: Increased the authentication timeout</li> <li>Mautic: Added Custom Fields option to the Create and Update operations of the Contact resource. Also, the Mautic OAuth credentials have been updated. Now you don't have to enter the Authorization URL and the Access Token URL</li> <li>Nextcloud: Added User resource</li> <li>Slack: Added Get Permalink and Delete operations to the Message resource</li> <li>Webhook: Added support for request parameters in webhook paths</li> <li>Bug fixes</li> <li>Google Drive: Fixed the default value for the Send Notification Email option</li> <li>Added support for expressions to credentials</li> <li>Removed support for MongoDB as a database for Workflow\u00b2. For more details, check out the entry in the breaking changes page</li> </ul>"},{"location":"workflow/reference/release-notes/#n8n01031","title":"n8n@0.103.1","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-01-21</p> <ul> <li>Bug fixes</li> <li>Trello: Fixed the icon</li> </ul>"},{"location":"workflow/reference/release-notes/#n8n01030","title":"n8n@0.103.0","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-01-21</p> <ul> <li>New nodes</li> <li>SendGrid</li> <li>Enhanced nodes</li> <li>AMQP: Added Container ID, Reconnect, and Reconnect limit options</li> <li>AMQP Trigger: Added Container ID, Reconnect, and Reconnect Limit options</li> <li>GitHub: Added Review resource</li> <li>Google Drive: Added Drive resource</li> <li>Trello: Added Get All and Get Cards operation to the List resource</li> <li>Bug fixes</li> <li>AWS Lambda: Fixed an issue with signature</li> <li>AWS SNS: Fixed an issue with signature</li> <li>Fixed an issue with nodes not executing if two input gets passed and one of them didn't return any data</li> <li>The code editor does not get closed when clicked anywhere outside the editor</li> <li>Added CLI commands to export and import credentials and workflows</li> <li>The title in the browser tab now resets for new workflows</li> </ul>"},{"location":"workflow/reference/release-notes/#n8n01020","title":"n8n@0.102.0","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-01-15</p> <ul> <li>New nodes</li> <li>Beeminder</li> <li>Enhanced nodes</li> <li>Crypto: Added hash type <code>SHA384</code></li> <li>Google Books: Added support for user impersonification</li> <li>Google Drive: Added support for user impersonification</li> <li>Google Sheets: Added support for user impersonification</li> <li>Gmail: Added support for user impersonification</li> <li>Microsoft Outlook: Added support for a shared mailbox</li> <li>RabbitMQ: Added Exchange mode</li> <li>Salesforce: Added filters to all Get All operations</li> <li>Slack: Made changes to the properties <code>As User</code> and <code>Ephemeral</code>. For more details, check out the entry in the breaking changes page</li> <li>Typeform Trigger: The node now displays the recall information in the question in square brackets. For more details, check out the entry in the breaking changes page</li> <li>Zendesk: Removed the <code>Authorization URL</code> and <code>Access Token URL</code> fields from the OAuth2 credentials. The node now uses the subdomain passed by a user to connect to Zendesk.</li> <li>Bug fixes</li> <li>CoinGecko: Fixed an issue to process multiple input items correctly</li> </ul>"},{"location":"workflow/reference/release-notes/#n8n01010","title":"n8n@0.101.0","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-01-07</p> <ul> <li>New nodes</li> <li>Google Analytics</li> <li>Phantombuster</li> <li>Enhanced nodes</li> <li>AWS: Added support for custom endpoints</li> <li>Gmail: Added an option to send messages formatted as HTML</li> <li>Philips Hue: Added Room/Group name to Light name to make it easier to identify lights</li> <li>Slack: Added ephemeral message option</li> <li>Telegram: Removed the Bot resource as the endpoint is no longer supported</li> <li>Bug fixes</li> <li>E-goi: Fixed the name of the node</li> <li>Edit Image: Fixed an issue with the Border operation</li> <li>HTTP Request: Fixed batch sizing to work when <code>batchSize = 1</code></li> <li>PayPal: Fixed a typo in the Environment field</li> <li>Split In Batches: Fixed a typo in the description</li> <li>Telegram: Fixed an issue with the Send Audio operation</li> <li>Based on your settings, vacuum runs on SQLite on startup</li> <li>Updated axios to version <code>0.21.1</code></li> </ul>"},{"location":"workflow/reference/release-notes/#n8n01000","title":"n8n@0.100.0","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2020-12-30</p> <ul> <li>New nodes</li> <li>Microsoft Outlook</li> <li>Enhanced nodes</li> <li>ActiveCampaign: The node loads more options for the fields</li> <li>Asana: Added Subtask resource and Get All operation for the Task resource</li> <li>Edit Image: Added Multi Step operation</li> <li>HTTP Request: Added Use Querystring option</li> <li>IF: Added Ends With and Starts With operations</li> <li>Jira: Added Issue Comment resource</li> <li>Switch: Added Ends With and Starts With operations</li> <li>Telegram: Added File resource</li> <li>Bug fixes</li> <li>Box Trigger: Fixed a typo in the description</li> <li>Edit Image: Fixed an issue with multiple composite operations</li> <li>HTTP Request: Fixed an issue with the binary data getting used by multiple nodes</li> <li>S3: Fixed an issue with uploading files</li> <li>Stripe Trigger: Fixed an issue with the existing webhooks</li> <li>Telegram: Fixed an issue with the Send Audio operation</li> <li>Binary data stays visible if a node gets re-executed</li> </ul>"},{"location":"workflow/reference/release-notes/#n8n0991","title":"n8n@0.99.1","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2020-12-24</p> <ul> <li>Fixed a bug that caused HTML to render in JSON view</li> </ul>"},{"location":"workflow/reference/release-notes/#n8n0990","title":"n8n@0.99.0","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2020-12-24</p> <ul> <li>New nodes</li> <li>e-goi</li> <li>RabbitMQ</li> <li>RabbitMQ Trigger</li> <li>uProc</li> <li>Enhanced nodes</li> <li>ActiveCampaign: Added the functionality to load the tags for a user</li> <li>FTP: Added Delete and Rename operation</li> <li>Google Cloud Firestore: The node now gives the Collection ID in response</li> <li>Iterable: Added User List resource</li> <li>MessageBird: Added Balance resource</li> <li>TheHive Trigger: Added support for the TheHive3 webhook events, and added Log Updated and Log Deleted events</li> <li>Bug fixes</li> <li>Dropbox: Fixed an issue with the OAuth credentials</li> <li>Google Sheets: Fixed an issue with the parameters getting hidden for other operations</li> <li>Added functionality to easily copy the data and the path from the output</li> <li>Fixed an issue with the node getting selected after it was duplicated</li> </ul>"},{"location":"workflow/reference/release-notes/#n8n0980","title":"n8n@0.98.0","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2020-12-16</p> <ul> <li>New nodes</li> <li>Brandfetch</li> <li>Pushcut</li> <li>Pushcut Trigger</li> <li>Enhanced nodes</li> <li>Google Sheets: Added Spreadsheet resource</li> <li>IF: Added Is Empty option</li> <li>Slack: Added Reaction and User resource, and Member operation to the Channel resource</li> <li>Spreadsheet File: Added the option Include Empty Cell to display empty cells</li> <li>Webhook: Added option to send a custom response body. The node can now also return string data</li> <li>Bug fixes</li> <li>GitLab: Fixed an issue with GitLab OAuth credentials. You can now specify your GitLab server to configure the credentials</li> <li>Mautic: Fixed an issue with the OAuth credentials</li> <li>If a workflow is using the Error Trigger node, by default, the workflow will use itself as the Error Workflow</li> <li>Fixed a bug that caused the Editor UI to display an incorrect (save) state upon activating or deactivating a workflow</li> </ul>"},{"location":"workflow/reference/release-notes/#n8n0970","title":"n8n@0.97.0","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2020-12-10</p> <ul> <li>New nodes</li> <li>Ghost</li> <li>Nasa</li> <li>Snowflake</li> <li>Twist</li> <li>Enhanced nodes</li> <li>Automizy: Added options to add and remove tabs for the Update operation of the Contact resource</li> <li>Pipedrive: Added label field to Person, Organization, and Deal resources. Also added Update operation for the Organization resource</li> <li>Bug fixes</li> <li>Fixed a bug that caused OAuth1 requests to break</li> <li>Fixed Docker user mount path</li> </ul>"},{"location":"workflow/reference/release-notes/#n8n0960","title":"n8n@0.96.0","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2020-12-03</p> <ul> <li>New nodes</li> <li>Cortex</li> <li>Iterable</li> <li>Kafka Trigger</li> <li>TheHive</li> <li>TheHive Trigger</li> <li>Yourls</li> <li>Enhanced nodes</li> <li>Hubspot: Added Contact List resource and Search operation for the Deal resource</li> <li>Google Calendar: You can now add multiple attendees in the Attendees field</li> <li>Slack: The node now loads both private and public channels</li> <li>Bug Fixes</li> <li>MQTT: Fixed an issue with the connection. The node now uses <code>mqtt@4.2.1</code></li> <li>Fixed a bug which caused the Trigger-Nodes to require data from the first output</li> <li>Added configuration to load only specific nodes</li> </ul>"},{"location":"workflow/reference/release-notes/#n8n0951","title":"n8n@0.95.1","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2020-11-25</p> <ul> <li>Bug Fixes</li> <li>Airtable Trigger: Fixed the icon of the node</li> </ul>"},{"location":"workflow/reference/release-notes/#n8n0950","title":"n8n@0.95.0","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2020-11-25</p> <ul> <li>New nodes</li> <li>Airtable Trigger</li> <li>LingvaNex</li> <li>OpenThesaurus</li> <li>ProfitWell</li> <li>Quick Base</li> <li>Spontit</li> <li>Enhanced nodes</li> <li>Airable: The Application ID field has been renamed to Base ID, and the Table ID field has been renamed to Table. The List operation now downloads attachments automatically</li> <li>Harvest: Moved the account field from the credentials to the node parameters. For more details, check out the entry in the breaking changes page</li> <li>Bug Fixes</li> <li>Slack: Fixed an issue with creating channels and inviting users to a channel</li> </ul>"},{"location":"workflow/reference/release-notes/#n8n0941","title":"n8n@0.94.1","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2020-11-20</p> <ul> <li>Bug Fixes</li> <li>GraphQL: Fixed an issue with the variables</li> <li>WooCommerce Trigger: Fixed an issue with the webhook. The node now reuses a webhook if it already exists.</li> </ul>"},{"location":"workflow/reference/release-notes/#n8n0940","title":"n8n@0.94.0","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2020-11-19</p> <ul> <li>New nodes</li> <li>Google Cloud Natural Language</li> <li>Google Firebase Cloud Firestore</li> <li>Google Firebase Realtime Database</li> <li>Humantic AI</li> <li>Enhanced nodes</li> <li>ActiveCampaign: Added Contact List and List resource</li> <li>Edit Image: Added support for drawing, font selection, creating a new image, and added the Composite resource</li> <li>FTP: Added Private Key and Passphrase fields to the SFTP credentials and made the directory creation more robust</li> <li>IMAP: Increased the timeout</li> <li>Matrix: Added option to send notice, emote, and HTML messages</li> <li>Segment: Made changes to the properties <code>traits</code> and <code>properties</code>. For more details, check out the entry in the breaking changes page</li> <li>Bug Fixes</li> <li>GraphQL: Fixed an issue with the variables</li> <li>Mailchimp: Fixed an issue with the OAuth credentials. The credentials are now sent with the body instead of the header</li> <li>YouTube: Fixed a typo for the Unlisted option</li> <li>Added horizontal scrolling</li> </ul>"},{"location":"workflow/reference/release-notes/#n8n0930","title":"n8n@0.93.0","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2020-11-11</p> <ul> <li>New nodes</li> <li>GetResponse</li> <li>Gotify</li> <li>Line</li> <li>Strapi</li> <li>Enhanced nodes</li> <li>AMQP: Connection is now closed after a message is sent</li> <li>AMQP Trigger: Added Message per Cycle option to retrieve the specified number of messages from the bus for every cycle</li> <li>Hubspot: Added Custom Properties for the Deal resource as Additional Fields</li> <li>Jira: The node retrieves all the projects for the Project field instead of just 50</li> <li>Mattermost: Improved the channel selection</li> <li>Microsoft SQL: Added TLS parameter for the credentials</li> <li>Pipedrive Trigger: Added OAuth authentication method. For more details, check out the entry in the breaking changes page</li> <li>Segment: Added Custom Traits option for the Traits field</li> <li>Bug Fixes</li> <li>Shopify Trigger: Fixed an issue with activating the workflow</li> <li>For custom nodes, you can now set custom documentation URLs</li> </ul>"},{"location":"workflow/reference/release-notes/#n8n0920","title":"n8n@0.92.0","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2020-11-04</p> <ul> <li>New nodes</li> <li>Facebook Trigger</li> <li>Google Books</li> <li>Orbit</li> <li>Storyblok</li> <li>Enhanced nodes</li> <li>Google Drive: Removed duplicate parameters</li> <li>Twitter: Added Direct Message resource</li> <li>Bug Fixes</li> <li>Gmail: Fixed an issue with the encoding for the subject field</li> <li>Improved the Editor UI for the save workflow functionality</li> </ul>"},{"location":"workflow/reference/release-notes/#n8n0910","title":"n8n@0.91.0","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2020-10-23</p> <ul> <li>New nodes</li> <li>Kafka</li> <li>MailerLite</li> <li>MailerLite Trigger</li> <li>Pushbullet</li> <li>Enhanced nodes</li> <li>Airtable: Added Ignore Fields option for the Update operation</li> <li>AMQP Sender: Added Azure Service Bus support</li> <li>Google Calendar: Added Calendar resource and an option to add a conference link</li> <li>G Suite Admin: Added Group resource</li> <li>HTTP Request: Added Batch Size and Batch Interval option</li> <li>Mautic: Added Company resource</li> <li>Salesforce: Added OAuth 2.0 JWT authentication method</li> <li>Bug Fixes</li> <li>IF: Fixed an issue with undefined expression</li> <li>Paddle: Fixed an issue with the Return All parameter</li> <li>Switch: Fixed an issue with undefined expression</li> <li>Added CLI commands to deactivate the workflow</li> <li>Added an option to get the full execution data from the server</li> <li>The Editor UI gives an alert if you redirect without saving a workflow</li> <li>The Editor UI now indicates if a workflow is saved or not</li> <li>Improved support for touch devices</li> <li>Node properties now load on demand</li> <li>Updated the Node.js version for the Docker images</li> </ul>"},{"location":"workflow/reference/release-notes/#n8n0900","title":"n8n@0.90.0","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2020-10-23</p> <ul> <li>Added a check for the Node.js version on startup. For more details, check out the entry in the breaking changes page</li> <li>Bug Fixes</li> <li>Google Translate: Fixed an issue with the rendering of the image in Workflow\u00b2.io</li> </ul>"},{"location":"workflow/reference/release-notes/#n8n0892","title":"n8n@0.89.2","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2020-10-22</p> <ul> <li>Bug Fixes</li> <li>Strava Trigger: Fixed a typo in the node name</li> </ul>"},{"location":"workflow/reference/release-notes/#n8n0891","title":"n8n@0.89.1","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2020-10-22</p> <ul> <li>Removed debug messages</li> </ul>"},{"location":"workflow/reference/release-notes/#n8n0890","title":"n8n@0.89.0","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2020-10-22</p> <ul> <li>New Nodes</li> <li>Pushover</li> <li>Strava</li> <li>Strava Trigger</li> <li>Google Translate</li> <li>Bug Fixes</li> <li>HTTP Request: Fixed an issue with the POST request method for the 'File' response format</li> <li>Fixed issue with displaying non-active workflows as active</li> <li>Fixed an issue related to multiple-webhooks</li> </ul>"},{"location":"workflow/reference/release-notes/#n8n0881","title":"n8n@0.88.1","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2020-10-16</p> <ul> <li>Bug Fixes</li> <li>HTTP Request: Fixed an issue with the Form-Data Mutipart and the RAW/Custom Body Content Types</li> </ul>"},{"location":"workflow/reference/release-notes/#n8n0880","title":"n8n@0.88.0","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2020-10-16</p> <ul> <li>Enhanced Fixes</li> <li>Matrix: Added support for specifying a Matrix Homeserver URL</li> <li>Salesforce: Added Custom Object resource and Custom Fields and Sort options</li> <li>Bug Fixes</li> <li>AWS SES: Fixed an issue with the Send Template operation for the Email resource</li> <li>AWS SNS Trigger: Fixed an issue with the Subscriptions topic</li> </ul>"},{"location":"workflow/reference/release-notes/#n8n0872","title":"n8n@0.87.2","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2020-10-15</p> <ul> <li>Bug Fixes</li> <li>Google Sheets: Fixed an issue with spaces in sheet names</li> <li>Automizy: Fixed an issue with the default resource</li> </ul>"},{"location":"workflow/reference/release-notes/#n8n0871","title":"n8n@0.87.1","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2020-10-15</p> <ul> <li>Bug Fixes</li> <li>Gmail: Fixed an issue with the Message ID</li> <li>HTTP Request: Fixed an issue with the GET Request</li> <li>Added <code>HMAC-SHA512</code> signature method for OAuth 1.0</li> </ul>"},{"location":"workflow/reference/release-notes/#n8n0870","title":"n8n@0.87.0","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2020-10-14</p> <ul> <li>New nodes</li> <li>Automizy</li> <li>AWS Rekognition</li> <li>Matrix</li> <li>Sendy</li> <li>Vonage</li> <li>Wekan</li> <li>Enhanced nodes</li> <li>AWS SES: Added Send Template operation for the Email resource and added the Template resource</li> <li>ClickUp: Added Time Entry and Time Entry Tag resources</li> <li>Function: The Function field is now called the JavaScript Code field</li> <li>Mailchimp: Added Campaign resource</li> <li>Mindee: Added currency to the simplified response</li> <li>OneDrive: Added Share operation</li> <li>OpenWeatherMap: Added Language parameter</li> <li>Pipedrive: Added additional parameters to the Get All operation for the Note resource</li> <li>Salesforce: Added Flow resource</li> <li>Spreadsheet File: Added Range option for the Read from file operation</li> <li>Bug Fixes</li> <li>ClickUp Trigger: Fixed issue with creating credentials</li> <li>Pipedrive Trigger: Fixed issue with adding multiple webhooks to Pipedrive</li> <li>The link.fish Scrape node has been removed from Workflow\u00b2. For more details, check out the entry in the breaking changes page</li> </ul>"},{"location":"workflow/reference/release-notes/#n8n0861","title":"n8n@0.86.1","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2020-10-06</p> <ul> <li>Enhanced nodes</li> <li>CoinGecko: Small fixes to the CoinGecko node</li> </ul>"},{"location":"workflow/reference/release-notes/#n8n0860","title":"n8n@0.86.0","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2020-10-05</p> <ul> <li>New nodes</li> <li>Clockify</li> <li>CoinGecko</li> <li>G Suite Admin</li> <li>Mindee</li> <li>Wufoo Trigger</li> <li>Enhanced nodes</li> <li>Slack: Added User Profile resource</li> <li>Mattermost: Added Create and Invite operations for the User resource</li> <li>Bug Fixes</li> <li>S3: Fixed issue with uploading files</li> <li>Webhook ID gets refreshed on node duplication</li> </ul>"},{"location":"workflow/reference/release-notes/#n8n0850","title":"n8n@0.85.0","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2020-09-30</p> <ul> <li>Enhanced nodes</li> <li>Postgres: Added Schema parameter for the Update operation</li> <li>Bug Fixes</li> <li>Jira: Fixed a bug with the Issue Type field</li> <li>Pipedrive Trigger: Fixed issues with the credentials</li> <li>Changed the bcrypt library to <code>bcrypt.js</code> to make it compatible with Windows</li> <li>The OAuth callback URLs are now generated in the backend</li> </ul>"},{"location":"workflow/reference/release-notes/#n8n0844","title":"n8n@0.84.4","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2020-09-23</p> <ul> <li>Bug Fixes</li> <li>Google Sheets: Fixed issues with the update and append operations</li> </ul>"},{"location":"workflow/reference/release-notes/#n8n0843","title":"n8n@0.84.3","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2020-09-23</p> <ul> <li>Fixed an issue with the build by setting <code>jwks-rsa</code> to an older version</li> </ul>"},{"location":"workflow/reference/release-notes/#n8n0842","title":"n8n@0.84.2","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2020-09-23</p> <ul> <li>Fixed an issue with the OAuth window. The OAuth window now closes after authentication is complete</li> </ul>"},{"location":"workflow/reference/release-notes/#n8n0841","title":"n8n@0.84.1","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2020-09-23</p> <ul> <li>Additional endpoints can be excluded from authentication checks. Multiple endpoints can be added separated by colons</li> </ul>"},{"location":"workflow/reference/release-notes/#n8n0840","title":"n8n@0.84.0","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2020-09-23</p> <ul> <li>Enhanced nodes</li> <li>Twitter: Added support for auto mention of users in reply tweets</li> <li>Bug Fixes</li> <li>Google Sheets: Fixed issue with non-Latin sheet names</li> <li>HubSpot: Fixed naming of credentials</li> <li>Microsoft: Fixed naming of credentials</li> <li>Mandrill: Fixed attachments with JSON parameters</li> <li>Expressions now use short variables when selecting input data for the current node</li> <li>Fixed issue with renaming credentials for active workflows</li> </ul>"},{"location":"workflow/reference/release-notes/#n8n0830","title":"n8n@0.83.0","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2020-09-18</p> <ul> <li>New nodes</li> <li>LinkedIn</li> <li>Taiga</li> <li>Taiga Trigger</li> <li>Enhanced nodes</li> <li>ActiveCampaign: Added multiple functions, read more here</li> <li>Airtable: Added typecast functionality</li> <li>Asana: Added OAuth2 support</li> <li>ClickUp: Added OAuth2 support</li> <li>Google Drive: Added share operation</li> <li>IMAP Email: Added support for custom rules when checking emails</li> <li>Sentry.io: Added support for self-hosted version</li> <li>Twitter: Added retweet, reply, and like operations</li> <li>WordPress: Added author field to the post resource</li> <li>Bug Fixes</li> <li>Asana Trigger: Webhook validation has been deactivated</li> <li>Paddle: Fixed <code>returnData</code> format and coupon description</li> <li>The ActiveCampaign node has breaking changes</li> <li>Fixed issues with test-webhook registration</li> </ul>"},{"location":"workflow/reference/release-notes/#n8n0821","title":"n8n@0.82.1","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2020-09-14</p> <ul> <li>Speed for basic authentication with hashed password has been improved</li> </ul>"},{"location":"workflow/reference/release-notes/#n8n0820","title":"n8n@0.82.0","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2020-09-14</p> <ul> <li>New nodes</li> <li>Microsoft Teams</li> <li>Enhanced nodes</li> <li>Freshdesk: Added Freshdesk contact resource</li> <li>HTTP Request: Run parallel requests in HTTP Request Node</li> <li>Bug Fixes</li> <li>Philips Hue: Added <code>APP ID</code> to Philips Hue node credentials</li> <li>Postmark Trigger: Fixed parameters for the node</li> <li>The default space between nodes has been increased to two units</li> <li>Expression support has been added to the credentials</li> <li>Passwords for your Doc\u00b2 instance can now be hashed</li> </ul>"},{"location":"workflow/reference/release-notes/#n8n0810","title":"n8n@0.81.0","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2020-09-09</p> <ul> <li>New nodes</li> <li>Sentry.io</li> <li>Enhanced nodes</li> <li>Asana</li> <li>ClickUp</li> <li>Clockify</li> <li>Google Contacts</li> <li>Salesforce</li> <li>Segment</li> <li>Telegram</li> <li>Telegram Trigger</li> </ul>"},{"location":"workflow/reference/release-notes/#n8n0800","title":"n8n@0.80.0","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2020-09-02</p> <ul> <li>New nodes</li> <li>Customer.io</li> <li>MQTT Trigger</li> <li>S3</li> <li>Enhanced nodes</li> <li>Acuity Scheduling</li> <li>AWS S3</li> <li>ClickUp</li> <li>FTP</li> <li>Telegram Trigger</li> <li>Zendesk</li> </ul>"},{"location":"workflow/reference/release-notes/#n8n0793","title":"n8n@0.79.3","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2020-08-30</p> <ul> <li>The bug that caused the workflows to not get activated correctly has been fixed</li> </ul>"},{"location":"workflow/reference/release-notes/#n8n0792","title":"n8n@0.79.2","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2020-08-28</p> <ul> <li>Added missing rawBody for \"application/x-www-form-urlencoded\"</li> </ul>"},{"location":"workflow/reference/release-notes/#n8n0791","title":"n8n@0.79.1","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2020-08-28</p> <ul> <li>Enhanced nodes</li> <li>Contentful</li> <li>HTTP Request</li> <li>Postgres</li> <li>Webhook</li> <li>Removed Test-Webhook also in case checkExists fails</li> <li>HTTP Request node does not overwrite accept header if it's already set</li> <li>Add rawBody to every request so that Doc\u00b2 does not give an error if body is missing</li> </ul>"},{"location":"workflow/reference/release-notes/#n8n0790","title":"n8n@0.79.0","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2020-08-27</p> <ul> <li>New nodes</li> <li>Contentful</li> <li>Convertkit</li> <li>Convertkit Trigger</li> <li>Paddle</li> <li>Enhanced nodes</li> <li>Airtable</li> <li>Coda</li> <li>Gmail</li> <li>HubSpot</li> <li>IMAP Email</li> <li>Postgres</li> <li>Salesforce</li> <li>SIGNL4</li> <li>Todoist</li> <li>Trello</li> <li>YouTube</li> <li>The Todoist node has breaking changes</li> <li>Added dynamic titles on workflow execution</li> <li>Nodes will now display a link to associated credential documentation</li> </ul>"},{"location":"workflow/reference/release-notes/#n8n0780","title":"n8n@0.78.0","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2020-08-18</p> <ul> <li>New nodes</li> <li>Gmail</li> <li>Google Contacts</li> <li>Unleashed Software</li> <li>YouTube</li> <li>Enhanced nodes</li> <li>AMQP</li> <li>AMQP Trigger</li> <li>Bitly</li> <li>Function Item</li> <li>Google Sheets</li> <li>Shopify</li> <li>Todoist</li> <li>Enhanced support for JWT based authentication</li> <li>Added an option to execute a node once, using data of only the first item</li> </ul>"},{"location":"workflow/reference/release-notes/#n8n0760","title":"n8n@0.76.0","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2020-08-05</p> <ul> <li>New nodes</li> <li>Customer.io Trigger</li> <li>FTP</li> <li>Medium</li> <li>Philips Hue</li> <li>TravisCI</li> <li>Twake</li> <li>Enhanced nodes</li> <li>CrateDB</li> <li>Move Binary Data</li> <li>Nodes will now display a link to associated documentation</li> </ul>"},{"location":"workflow/reference/release-notes/#n8n0750","title":"n8n@0.75.0","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2020-07-26</p> <ul> <li>New nodes</li> <li>Box</li> <li>Box Trigger</li> <li>CrateDB</li> <li>Jira Trigger</li> <li>Enhanced nodes</li> <li>GitLab</li> <li>NextCloud</li> <li>Pipedrive</li> <li>QuestDB</li> <li>Webhooks now support OPTIONS request</li> </ul>"},{"location":"workflow/reference/release-notes/#n8n0740","title":"n8n@0.74.0","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2020-07-15</p> <ul> <li>New nodes</li> <li>Hacker News</li> <li>QuestDB</li> <li>Xero</li> <li>Enhanced nodes</li> <li>Affinity Trigger</li> <li>HTTP Request</li> <li>Mailchimp</li> <li>MongoDB</li> <li>Pipedrive</li> <li>Postgres</li> <li>Uplead</li> <li>Webhook</li> <li>Webhook URLs are now handled independently of the workflow ID by <code>https://{hostname}/webhook/{path}</code> instead of the older <code>https://{hostname}/webhook/{workflow_id}/{node_name}/{path}</code>.</li> </ul>"},{"location":"workflow/reference/release-notes/#n8n0731","title":"n8n@0.73.1","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2020-07-08</p> <ul> <li>Enhanced nodes</li> <li>Microsoft SQL</li> </ul>"},{"location":"workflow/reference/release-notes/#n8n0730","title":"n8n@0.73.0","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2020-07-08</p> <ul> <li>New nodes</li> <li>CircleCI</li> <li>Microsoft SQL</li> <li>Zoom</li> <li>Enhanced nodes</li> <li>Postmark Trigger</li> <li>Salesforce</li> <li>It is now possible to set default values for credentials that get prefilled, and the user cannot change.</li> </ul>"},{"location":"workflow/reference/release-notes/#n8n0720","title":"n8n@0.72.0","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2020-07-02</p> <ul> <li>Enhanced nodes</li> <li>Drift</li> <li>Eventbrite Trigger</li> <li>Facebook Graph API</li> <li>Pipedrive</li> <li>Fixed credential issue for the Execute Workflow node</li> </ul>"},{"location":"workflow/reference/release-notes/#n8n0710","title":"n8n@0.71.0","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2020-06-25</p> <ul> <li>New nodes</li> <li>Google Tasks</li> <li>SIGNL4</li> <li>Spotify</li> <li>Enhanced nodes</li> <li>Hubspot</li> <li>Mailchimp</li> <li>Typeform</li> <li>Webflow</li> <li>Zendesk</li> <li>Added Postgres SSL support</li> <li>It is now possible to deploy Doc\u00b2 under a subfolder</li> </ul>"},{"location":"workflow/reference/release-notes/#n8n0700","title":"n8n@0.70.0","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2020-06-13</p> <ul> <li>Enhanced nodes</li> <li>GitHub</li> <li>Mautic Trigger</li> <li>Monday.com</li> <li>MongoDB</li> <li>Fixed the issue with multiuser-setup</li> </ul>"},{"location":"workflow/try-it-out/","title":"Overview","text":"<p>This section gets you up and running with building workflows in Workflow\u00b2.</p> <ul> <li>Want a very fast taster of n8n? Try the Very quick quickstart.</li> <li>Looking for a more detailed introduction? Check out the Slightly longer introduction.</li> <li>Prefer to work through extensive examples? Maybe the courses are for you.</li> </ul>","tags":["Workflow","DOC\u00b2","Demonstration","Learn the basics"]},{"location":"workflow/try-it-out/longer-introduction/","title":"A slightly longer introduction","text":"<p>This guide shows you how to automate a task using a workflow in Workflow\u00b2, explaining key concepts along the way. You will:</p> <ul> <li>Create a workflow from scratch. You'll build a workflow that runs every week to get data from NASA, filters the data, and generates two reports.</li> <li>Understand key concepts and skills, including:<ul> <li>Starting workflows with trigger nodes</li> <li>Configuring credentials</li> <li>Manipulating data</li> <li>Representing logic in an Workflow\u00b2 workflow</li> <li>Using expressions</li> </ul> </li> </ul>","tags":["Workflow\u00b2","Introduction","Learn the basics"]},{"location":"workflow/try-it-out/longer-introduction/#step-one-run-workflow2","title":"Step one: Run Workflow\u00b2","text":"","tags":["Workflow\u00b2","Introduction","Learn the basics"]},{"location":"workflow/try-it-out/longer-introduction/#step-two-create-a-new-workflow","title":"Step two: Create a new workflow","text":"<p>Create a blank workflow:</p> <ol> <li>Select Workflows , then select New. Workflow\u00b2 opens the new workflow.</li> <li>Rename the workflow to something meaningful, such as Quickstart: select the current workflow name, and replace it.</li> </ol>","tags":["Workflow\u00b2","Introduction","Learn the basics"]},{"location":"workflow/try-it-out/longer-introduction/#step-three-add-a-trigger-node","title":"Step three: Add a trigger node","text":"<p>Workflow\u00b2 provides two ways to start a workflow:</p> <ul> <li>Manually, by selecting Execute workflow, or from the CLI if you installed Workflow\u00b2 with npm or Docker.</li> <li>Automatically, using a trigger node as the first node. The trigger node runs the workflow in response to an external event, or based on your settings.</li> </ul> <p>For this tutorial, use the Cron trigger. This allows you to run the workflow on a schedule:</p> <ol> <li>Select Add node .</li> <li>Search for Cron. Workflow\u00b2 shows a list of nodes that match the search.</li> <li>Select Cron to add the node to the canvas. Workflow\u00b2 opens the node.</li> <li>Select Add Cron Time.</li> <li>For Mode, select Every Week.</li> <li>Enter a time and day. For this example, enter <code>09</code> in Hour, <code>0</code> in Minute, and <code>Monday</code> in Weekday.</li> <li>Close the node details view to return to the canvas.</li> </ol>","tags":["Workflow\u00b2","Introduction","Learn the basics"]},{"location":"workflow/try-it-out/longer-introduction/#step-four-add-the-nasa-node-and-set-up-credentials","title":"Step four: Add the NASA node and set up credentials","text":"<p>The NASA node allows you to interact with NASA's public APIs. The API gives you data to work with in this tutorial.</p> <ol> <li>Select the Add node  connector on the Cron node.</li> <li>Search for NASA. Workflow\u00b2 shows a list of nodes that match the search.</li> <li>Select NASA to add the node to the canvas. Workflow\u00b2 opens the node.</li> <li>To access the NASA APIs, you need to set up credentials:<ol> <li>Select the  Credential for NASA API dropdown.</li> <li>Select - Create New -. n8n opens the credentials view.</li> <li>Go to NASA APIs and fill out the form in Generate API Key. NASA generates the key and displays it.</li> <li>Copy the key, and paste it into API Key in Workflow\u00b2.</li> <li>Select Save.</li> <li>Close the credentials screen. Workflow\u00b2 returns to the node. The new credentials should be automatically selected in Credential for NASA API.</li> </ol> </li> <li>In Resource, select DONKI Solar Flare. This resource returns a report about recent solar flares.</li> <li> <p>By default, DONKI Solar Flare provides data for the past 30 days. To limit it to just the last week, use Additional Fields:</p> <ol> <li>Select Add field.</li> <li>Select Start date.</li> <li>To get a report starting from a week ago, you can use an expression: next to Start date, select Parameter options  &gt; Add Expression. Workflow\u00b2 opens the Edit Expression modal.</li> <li>In the Expression field, enter the following expression: <pre><code>{{$today.minus({days: 7}).toFormat('yyyy-MM-dd')}}\n</code></pre> This generates a date in the correct format, seven days before the current date.</li> </ol> <p>Date and time in n8n</p> <p>n8n uses Luxon to work with date and time, and also provides two variables for convenience: <code>$now</code> and <code>$today</code>. For more information, refer to Expressions &gt; Luxon.</p> </li> <li> <p>Close the Edit Expression modal to return to the NASA node.</p> </li> <li>You can now check that the node is working and returning the expected date: select Execute node to run the node manually. Workflow\u00b2 calls the NASA API and displays details of solar flares in the past seven days in the OUTPUT section.</li> <li>Close the NASA node to return to the workflow canvas.</li> </ol>","tags":["Workflow\u00b2","Introduction","Learn the basics"]},{"location":"workflow/try-it-out/longer-introduction/#step-five-add-logic-with-the-if-node","title":"Step five: Add logic with the If node","text":"<p>Workflow\u00b2 supports complex logic in workflows. In this tutorial, use the If node to create two branches that each generate a report from the NASA data. Solar flares have five possible classifications. You'll create logic that sends a report with the lower classifications to one output, and the higher classifications to another.</p> <p>Add the If node:</p> <ol> <li>Select the Add node  connector on the NASA node.</li> <li>Search for If. Workflow\u00b2 shows a list of nodes that match the search.</li> <li>Select If to add the node to the canvas. Workflow\u00b2 opens the node.</li> <li>Select Add condition &gt; String.</li> <li> <p>You need to check the value of the <code>classType</code> property in the NASA data. To do this:</p> <ol> <li>Next to Value 1, select Parameter options  &gt; Add Expression. Workflow\u00b2 opens the expressions editor for this field.</li> <li>Select Current Node &gt; Input Data &gt; JSON &gt; classType. Workflow\u00b2 adds the expression to the Expression editor, and displays a sample output.</li> </ol> <p>Make sure you ran the NASA node in the previous section</p> <p>If you didn't follow the step in the previous section to run the NASA node, you won't see any data to work with in this step.</p> <ol> <li>Close the expressions editor to return to the node.</li> <li>In Operation, select Contains.</li> <li>In Value 2, enter X. This is the highest classification of solar flare. In the next step, you will create two reports: one for X class solar flares, and one for all the smaller solar flares.</li> <li>You can now check that the node is working and returning the expected date: select Execute node to run the node manually. Workflow\u00b2 tests the data against the condition, and shows which results match true or false in the OUTPUT panel.</li> </ol> </li> </ol> <p>Weeks without large solar flares</p> <p>In this tutorial, you are working with live date. If you find there are no X class solar flares when you run the workflow, try replacing X in Value 2 with either A, B, C, or M.</p>","tags":["Workflow\u00b2","Introduction","Learn the basics"]},{"location":"workflow/try-it-out/longer-introduction/#step-six-output-data-from-your-workflow","title":"Step six: Output data from your workflow","text":"<p>The last step of the workflow is to send the two reports about solar flares. For this example, you'll send data to Postbin. Postbin is a service that receives data and displays it on a temporary web page.</p> <ol> <li>On the If node, select the Add node  connector labeled true.</li> <li>Search for Postbin. Workflow\u00b2 shows a list of nodes that match the search.</li> <li>Select Postbin to add the node to the canvas.</li> <li>Change Resource to Request.</li> <li>In Operation, select Send.</li> <li>Go to Postbin and select Create Bin.</li> <li>Copy the bin ID. It looks similar to <code>1651063625300-2016451240051</code>.</li> <li>In Workflow\u00b2, paste your Postbin ID into Bin ID.</li> <li>Now, configure the data to send to Postbin. Next to Bin Content, select Parameter options  &gt; Add Expression.</li> <li>Select Current Node &gt; Input Data &gt; JSON &gt; classType. n8n adds the expression to the Expression editor, and displays a sample output.</li> <li>The expression is: <code>{{$json[\"classType\"]}}</code>. Add a message to it, so that the full expression is:     <pre><code>There was a solar flare of class {{$json[\"classType\"]}}\n</code></pre></li> <li>Close the expressions editor to return to the node.</li> <li>Close the Postbin node to return to the canvas.</li> <li>Add another Postbin node, to handle the false output path from the If node:<ol> <li>Hover over the Postbin node, then select Duplicate node  to duplicate the first Postbin node.</li> <li>Drag the false connector from the If node to the left side of the new Postbin node.</li> </ol> </li> </ol>","tags":["Workflow\u00b2","Introduction","Learn the basics"]},{"location":"workflow/try-it-out/longer-introduction/#step-seven-test-the-workflow","title":"Step seven: Test the workflow","text":"<ol> <li>You can now test the entire workflow. Select Execute Workflow. Workflow\u00b2 runs the workflow, showing each stage in progress.</li> <li>Go back to your Postbin bin. Refresh the page to see the output.</li> <li>If you want to use this workflow (in other words, if you want it to run once a week automatically), you need to activate it by selecting the Active toggle.</li> </ol> <p>Time limit</p> <p>Postbin's bins exist for 30 minutes after creation. You may need to create a new bin and update the ID in the Postbin nodes, if you exceed this time limit.</p>","tags":["Workflow\u00b2","Introduction","Learn the basics"]},{"location":"workflow/try-it-out/longer-introduction/#next-steps","title":"Next steps","text":"<ul> <li>Take Workflow\u00b2 courses.</li> <li>Explore more examples in workflow templates.</li> </ul>","tags":["Workflow\u00b2","Introduction","Learn the basics"]},{"location":"workflow/try-it-out/quickstart/","title":"The very quick quickstart","text":"<p>This quickstart gives you a very quick taste of Workflow\u00b2. Its aim is to allow you to try out the UI, and introduce you to two key features: workflow templates and expressions. It doesn't include detailed explanations or explore concepts.</p> <p>You will:</p> <ul> <li>Install the desktop app</li> <li>Load a workflow from the workflow templates library</li> <li>Add a node and configure it using expressions.</li> <li>Run your first workflow</li> </ul>","tags":["Workflow\u00b2","Introduction","Learn the basics"]},{"location":"workflow/try-it-out/quickstart/#step-one-run-workflow2","title":"Step one: Run Workflow\u00b2","text":"","tags":["Workflow\u00b2","Introduction","Learn the basics"]},{"location":"workflow/try-it-out/quickstart/#step-two-open-a-workflow-template","title":"Step two: Open a workflow template","text":"<p>n8n provides a quickstart template using training nodes. This allows you to work with fake data, and avoids setting up credentials.</p> <ol> <li>On the Workflow templates view, search for <code>Very quick quickstart</code>.</li> <li>Select the Very quick quickstart template to preview it.</li> <li>Select Use this workflow to open the template in your own editor.</li> </ol> <p>This is a basic workflow. It:</p> <ol> <li>Gets example data from the Customer Datastore node.</li> <li>Uses the Set node to extract just the data you want, and assign that data to variables. In this example, you use the customer name, ID, and description.</li> </ol> <p>Double click a node to explore its settings and how it processes data.</p>","tags":["Workflow\u00b2","Introduction","Learn the basics"]},{"location":"workflow/try-it-out/quickstart/#step-three-run-the-workflow","title":"Step three: Run the workflow","text":"<p>Select Execute workflow to run the workflow to check it's working, and load in data for the next steps.</p>","tags":["Workflow\u00b2","Introduction","Learn the basics"]},{"location":"workflow/try-it-out/quickstart/#step-four-add-a-node","title":"Step four: Add a node","text":"<p>Add a third node to message each customer and tell them their description. The Customer Messenger node allows you to send a message to fake recipients.</p> <ol> <li>Select the Add node  connector on the Set node.</li> <li>Search for Customer Messenger. n8n shows a list of nodes that match the search.</li> <li>Select Customer Messenger (n8n training) to add the node to the canvas. n8n opens the node automatically.</li> <li>You're going to use expressions to map in the Customer ID and create the Message:<ol> <li>Next to Customer ID, select Parameter options  &gt; Add Expression. n8n opens the expressions editor for this field.</li> <li>Select Current Node &gt; Input Data &gt; JSON &gt; customer_ID. n8n adds the expression to the Expression editor, and displays a sample output.</li> <li>Close the expressions editor.</li> <li>Next to Message, select Parameter options  &gt; Add Expression. n8n opens the expressions editor for this field.</li> <li>Copy this expression into the editor:     <pre><code>Hi {{$json.customer_name}},  Your description is {{$json.customer_description}}\n</code></pre></li> </ol> </li> <li>Close the expressions editor, then close the Customer Messenger node by clicking outside the node or selecting Back to canvas.</li> <li>Select Execute workflow. n8n runs the workflow.</li> </ol> <p>The complete workflow should look like this:</p> <p></p>","tags":["Workflow\u00b2","Introduction","Learn the basics"]},{"location":"workflow/try-it-out/quickstart/#next-steps","title":"Next steps","text":"<ul> <li>Read n8n's longer try it out tutorial for a more complex workflow, and an introduction to more features and n8n concepts.</li> <li>Take the courses.</li> </ul>","tags":["Workflow\u00b2","Introduction","Learn the basics"]},{"location":"workflow/workflows/","title":"Overview","text":"<p>Learn about the key components of an automation in Workflow\u00b2:</p> <ul> <li>Workflows</li> <li>Connections</li> <li>Nodes</li> <li>Notes</li> <li>Items</li> </ul>","tags":["Workflow\u00b2","Overview"]},{"location":"workflow/workflows/connections/","title":"Connection","text":"<p>A connection establishes a link between nodes to route data through the workflow. A connection between two nodes passes data from one node's output to another node's input. Each node can have one or multiple connections.</p> <p>To create a connection between two nodes, click on the grey dot on the right side of the node and slide the arrow to the grey rectangle on the left side of the following node.</p>","tags":["Workflow\u00b2","Connection"]},{"location":"workflow/workflows/connections/#example","title":"Example","text":"<p>An IF node has two connections to different nodes: one for when the statement is true and one for when the statement is false.</p> <p></p>","tags":["Workflow\u00b2","Connection"]},{"location":"workflow/workflows/items/","title":"Items","text":"<p>Data sent from one node to another is sent as an array of JSON objects. Each element in this collection is called an Item. A node performs its action on each item of incoming data.</p> <p>Nodes do not only process one \"item\", they process multiple ones. For example, if the Trello node is set to <code>Create-Card</code> and it has an expression set for <code>Name</code> to be set depending on <code>name</code> property, it will create a card for each item, always choosing the <code>name-property-value</code> of the current one.</p> <p>This data would, for example, create two cards. One named <code>test1</code> the other one named <code>test2</code>:</p> <pre><code>[\n{\nname: \"test1\"\n},\n{\nname: \"test2\"\n}\n]\n</code></pre>","tags":["Workflow\u00b2","Items"]},{"location":"workflow/workflows/nodes/","title":"Node","text":"<p>A node is an entry point for retrieving data, a function to process data, or an exit for sending data. The data process performed by nodes can include filtering, recomposing, and changing data.</p> <p>There may be one or several nodes for your API, service, or app. By connecting multiple nodes, you can create simple and complex workflows. When you add a node to the Editor UI, the node is automatically activated and requires you to configure it (by adding credentials, selecting operations, writing expressions, etc.).</p> <p>There are three types of nodes:</p> <ul> <li>Core Nodes</li> <li>Regular Nodes</li> <li>Trigger Nodes</li> </ul>","tags":["Workflow\u00b2","Node"]},{"location":"workflow/workflows/nodes/#core-nodes","title":"Core nodes","text":"<p>Core nodes are functions or services that can be used to control how workflows are run or to provide generic API support.</p> <p>Use the Start node when you want to manually trigger the workflow with the <code>Execute Workflow</code> button at the bottom of the Editor UI. This way of starting the workflow is useful when creating and testing new workflows.</p> <p>If an application you need does not have a dedicated Node yet, you can access the data by using the HTTP Request node or the Webhook node. You can also read about creating nodes and make a node for your desired application.</p>","tags":["Workflow\u00b2","Node"]},{"location":"workflow/workflows/nodes/#regular-nodes","title":"Regular nodes","text":"<p>Regular nodes perform an action, like fetching data or creating an entry in a calendar. Regular nodes are named for the application they represent and are listed under Regular Nodes in the Editor UI.</p> <p></p>","tags":["Workflow\u00b2","Node"]},{"location":"workflow/workflows/nodes/#example","title":"Example","text":"<p>A Google Sheets node can be used to retrieve or write data to a Google Sheet.</p> <p></p>","tags":["Workflow\u00b2","Node"]},{"location":"workflow/workflows/nodes/#trigger-nodes","title":"Trigger nodes","text":"<p>Trigger nodes start workflows and supply the initial data.</p> <p></p> <p>Trigger nodes can be app or core nodes.</p> <ul> <li> <p>Core Trigger nodes start the workflow at a specific time, at a time interval, or on a webhook call. For example, to get all users from a Postgres database every 10 minutes, use the Interval Trigger node with the Postgres node.</p> </li> <li> <p>App Trigger nodes start the workflow when an event happens in an app. App Trigger nodes are named like the application they represent followed by \"Trigger\" and are listed under Trigger Nodes in the Editor. For example, a Telegram trigger node can be used to trigger a workflow when a message is sent in a Telegram chat.</p> </li> </ul> <p></p>","tags":["Workflow\u00b2","Node"]},{"location":"workflow/workflows/nodes/#node-settings","title":"Node settings","text":"<p>Nodes come with global operations and settings, as well as app-specific parameters that can be configured.</p>","tags":["Workflow\u00b2","Node"]},{"location":"workflow/workflows/nodes/#operations","title":"Operations","text":"<p>The node operations are illustrated with icons that appear on top of the node when you hover on it: * Delete: Remove the selected node from the workflow * Pause: Deactivate the selected node * Copy: Duplicate the selected node * Play: Run the selected node</p> <p></p> <p>To access the node parameters and settings, double-click on the node.</p>","tags":["Workflow\u00b2","Node"]},{"location":"workflow/workflows/nodes/#parameters","title":"Parameters","text":"<p>The node parameters allow you to define the operations the node should perform. Find the available parameters of each node in the node reference.</p>","tags":["Workflow\u00b2","Node"]},{"location":"workflow/workflows/nodes/#settings","title":"Settings","text":"<p>The node settings allow you to configure the look and execution of the node. The following options are available:</p> <ul> <li>Notes: Optional note to save with the node</li> <li>Display note in flow: If active, the note above will be displayed in the workflow as a subtitle</li> <li>Always Output Data: If active, the node will return an empty item even if the node returns no data during an initial execution. Be careful setting this on IF nodes, as it could cause an infinite loop.</li> <li>Execute Once: If active, the node executes only once, with data from the first item it receives.</li> <li>Retry On Fail: If active, the node tries to execute a failed attempt multiple times until it succeeds</li> <li>Continue On Fail: If active, the workflow continues even if the execution of the node fails. When this happens, the node passes along input data from previous nodes, so the workflow should account for unexpected output data.</li> </ul> <p></p> <p>If a node is not correctly configured or is missing some required information, a warning sign is displayed on the top right corner of the node. To see what parameters are incorrect, double-click on the node and have a look at fields marked with red and the error message displayed in the respective warning symbol.</p> <p></p>","tags":["Workflow\u00b2","Node"]},{"location":"workflow/workflows/nodes/#pausing-nodes","title":"Pausing nodes","text":"<p>Sometimes when creating and debugging a workflow, it is helpful to not execute specific nodes. To do that without disconnecting each node, you can pause them. When a node gets paused, the data passes through the node without being changed.</p> <p>There are two ways to pause a node. You can either press the pause button which gets displayed above the node when hovering over it or select the node and press \"d\".</p>","tags":["Workflow\u00b2","Node"]},{"location":"workflow/workflows/sticky-notes/","title":"Sticky Notes","text":"<p>Sticky Notes allow you to annotate and comment on your workflows.</p> <p>Workflow\u00b2 recommends using Sticky Notes heavily, especially on template workflows, to help other users understand your workflow.</p> <p></p>","tags":["Workflow\u00b2","Sticky Notes"]},{"location":"workflow/workflows/sticky-notes/#create-a-sticky-note","title":"Create a Sticky Note","text":"<p>Sticky Notes are a core node. To add a new Sticky Note:</p> <ol> <li>Open the nodes panel.</li> <li>Search for <code>note</code>.</li> <li>Click the Sticky Note node. Workflow\u00b2 adds a new Sticky Note to the canvas.</li> </ol>","tags":["Workflow\u00b2","Sticky Notes"]},{"location":"workflow/workflows/sticky-notes/#edit-a-sticky-note","title":"Edit a Sticky Note","text":"<ol> <li>Double click the Sticky Note you want to edit.</li> <li>Write your note. This guide explains how to format your text with Markdown. Workflow\u00b2 uses markdown-it, which implements the CommonMark specification.</li> <li>Click away from the note, or press <code>Esc</code>, to stop editing.</li> </ol>","tags":["Workflow\u00b2","Sticky Notes"]},{"location":"workflow/workflows/sticky-notes/#sticky-note-positioning","title":"Sticky Note positioning","text":"<p>You can:</p> <ul> <li>Drag a Sticky Note anywhere on the canvas.</li> <li>Drag Sticky Notes behind nodes. You can use this to visually group nodes.</li> <li>Resize Sticky Notes by hovering over the edge of the note and dragging to resize.</li> </ul>","tags":["Workflow\u00b2","Sticky Notes"]},{"location":"workflow/workflows/sticky-notes/#writing-in-markdown","title":"Writing in Markdown","text":"<p>Sticky Notes support Markdown formatting. This section describes some common options.</p> <pre><code>The text in double asterisks will be **bold**\n\nThe text in single asterisks will be *italic*\n\nUse # to indicate headings:\n# This is a top-level heading\n## This is a sub-heading\n### This is a smaller sub-heading\n\nYou can add links:\n[Example](https://example.com/)\n\nCreate lists with asterisks:\n\n* Item one\n* Item two\n\nOr created ordered lists with numbers:\n\n1. Item one\n2. Item two\n</code></pre> <p>For a more detailed guide, refer to CommonMark's help. Workflow\u00b2 uses markdown-it, which implements the CommonMark specification.</p>","tags":["Workflow\u00b2","Sticky Notes"]},{"location":"workflow/workflows/workflows/","title":"Workflow\u00b2","text":"<p>A workflow is a collection of nodes connected together to automate a process.</p> <p>A workflow can be started manually (with the Start node) or by Trigger nodes. When a workflow is started, it executes all the active and connected nodes. The workflow execution ends when all the nodes have processed their data. You can view your workflow executions in the Execution log, which can be helpful for debugging.</p> <p></p>","tags":["Workflow\u00b2"]},{"location":"workflow/workflows/workflows/#activating-a-workflow","title":"Activating a workflow","text":"<p>Workflows that start with a Trigger node or a Webhook node need to be activated in order to be executed. This is done via the Active toggle in the Editor UI.</p> <p>Active workflows enable the Trigger and Webhook nodes to receive data whenever a condition is met (e.g., Monday at 10:00, an update in a Trello board) and in turn trigger the workflow execution.</p> <p>All the newly created workflows are deactivated by default.</p>","tags":["Workflow\u00b2"]},{"location":"workflow/workflows/workflows/#sharing-a-workflow","title":"Sharing a workflow","text":"<p>You can export a workflow as a JSON file in two ways:</p> <ul> <li>Download: Click the Download button under the Workflow menu in the sidebar. This will download the workflow as a JSON file.</li> <li>Copy-Paste: Select all the workflow nodes in the Editor UI, copy them (<code>Ctrl + c</code> or <code>cmd +c</code>), then paste them (<code>Ctrl + v</code> or <code>cmd + v</code>) in your desired file.</li> </ul> <p>To select all nodes, or a group of nodes, click and drag:   </p> <p>You can import JSON files as workflows in two ways:</p> <ul> <li>Import: Click Import from File or Import from URL under the Workflow menu in the sidebar and select the JSON file or paste the link to a workflow.</li> <li>Copy-Paste: Copy the JSON workflow to the clipboard (<code>Ctrl + c</code> or <code>cmd +c</code>) and paste it (<code>Ctrl + v</code> or <code>cmd + v</code>) into the Editor UI.</li> </ul>","tags":["Workflow\u00b2"]},{"location":"workflow/workflows/workflows/#workflow-settings","title":"Workflow settings","text":"<p>On each workflow, it is possible to set some custom settings and overwrite some of the global default settings from the Workflow &gt; Settings menu.</p> <p></p> <p>The following settings are available:</p> <ul> <li>Error Workflow: Select a workflow to trigger if the current workflow fails. See Error Workflow for more details.</li> <li>Timezone: Sets the timezone to be used in the workflow. The default timezone is EDT (New York). The Timezone setting is particularly important for the Cron Trigger node.</li> <li>Save Data Error Execution: If the execution data of the workflow should be saved when the workflow fails.</li> <li>Save Data Success Execution: If the execution data of the workflow should be saved when the workflow succeeds.</li> <li>Save Manual Executions: If executions started from the Editor UI should be saved.</li> <li>Save Execution Progress: If the execution data of each node should be saved. If set to \"Yes\", the workflow resumes from where it stopped in case of an error. However, this might increase latency.</li> <li>Timeout Workflow: Toggle to enable setting a duration after which the current workflow execution should be cancelled.</li> <li>Timeout After: Only available when Timeout Workflow is enabled. Set the time in hours, minutes, and seconds after which the workflow should timeout. Fordoc2app.cloudintegration.eu users a maximum available timeout is enforced for each plan (e.g. 3 minutes for Start level).</li> </ul>","tags":["Workflow\u00b2"]},{"location":"workflow/workflows/workflows/#failed-workflows","title":"Failed workflows","text":"<p>If your workflow execution fails, you can retry the execution. To retry a failed workflow:</p> <ol> <li>Open the Executions list from the sidebar.</li> <li>For the workflow execution you want to retry, click on the refresh icon under the Status column.</li> <li>Select either of the following options to retry the execution:<ul> <li>Retry with currently saved workflow: Once you make changes to your workflow, you can select this option to execute the workflow with the previous execution data.</li> <li>Retry with original workflow: If you want to retry the execution without making changes to your workflow, you can select this option to retry the execution with the previous execution data.</li> </ul> </li> </ol> <p>You can also use the Error Trigger node, which triggers a workflow when another workflow has an error. Once a workflow fails, this node gets details about the failed workflow and the errors.</p>","tags":["Workflow\u00b2"]},{"location":"workflow/workflows/workflows/#workflow-templates","title":"Workflow templates","text":"<p>When creating a new workflow, you can choose whether to start with an empty workflow, or use an existing template.</p> <p>Templates provide:</p> <ul> <li>A way to get started quickly: we might already have a template that does what you need.</li> <li>Examples of what you can build</li> <li>Best practices for creating your own workflows</li> </ul>","tags":["Workflow\u00b2"]},{"location":"workflow/workflows/workflows/#use-a-workflow-template","title":"Use a workflow template","text":"<ol> <li>In the sidebar, click Templates.</li> <li>Browse or search the workflow templates list.</li> <li>Click a workflow to view more information. Workflow\u00b2 opens the workflow details page.</li> <li>On the workflow details page, click Use this workflow. Workflow\u00b2 opens the workflow.</li> <li>Click Save to add the workflow to your workflows.</li> </ol>","tags":["Workflow\u00b2"]},{"location":"tags/","title":"Tags","text":"<p>Following is a list of relevant tags:</p>"},{"location":"tags/#ai","title":"AI","text":"<ul> <li>AI Indicators</li> </ul>"},{"location":"tags/#amqp","title":"AMQP","text":"<ul> <li>AMQP</li> </ul>"},{"location":"tags/#api","title":"API","text":"<ul> <li>WEBHOOK</li> <li>Import</li> <li>API Integration</li> <li>Detect inside pages</li> <li>Merge/Split PDF</li> <li>OCR API</li> <li>Overview</li> <li>Workflow\u00b2 public REST API</li> <li>Workflow\u00b2 API reference</li> <li>Workflow\u00b2 API authentication</li> <li>Workflow\u00b2 API pagination</li> <li>Workflow\u00b2 Using the API playground</li> </ul>"},{"location":"tags/#api-calls","title":"API Calls","text":"<ul> <li>API Calls</li> </ul>"},{"location":"tags/#api-key","title":"API Key","text":"<ul> <li>Integration</li> </ul>"},{"location":"tags/#apitemplateio","title":"APITemplate.io","text":"<ul> <li>APITemplate.io</li> </ul>"},{"location":"tags/#aws","title":"AWS","text":"<ul> <li>AWS</li> </ul>"},{"location":"tags/#access-token","title":"Access Token","text":"<ul> <li>Netlify</li> </ul>"},{"location":"tags/#action-network","title":"Action Network","text":"<ul> <li>Action Network</li> <li>Action Network</li> </ul>"},{"location":"tags/#actions","title":"Actions","text":"<ul> <li>Generate file</li> <li>Set localStorage</li> </ul>"},{"location":"tags/#activecampaign","title":"ActiveCampaign","text":"<ul> <li>ActiveCampaign</li> </ul>"},{"location":"tags/#admin","title":"Admin","text":"<ul> <li>DOC\u00b2 - Postman Guides</li> </ul>"},{"location":"tags/#affinity","title":"Affinity","text":"<ul> <li>Affinity</li> </ul>"},{"location":"tags/#agile-crm","title":"Agile CRM","text":"<ul> <li>Agile CRM</li> </ul>"},{"location":"tags/#airtable","title":"Airtable","text":"<ul> <li>Airtable</li> </ul>"},{"location":"tags/#amount-settings","title":"Amount Settings","text":"<ul> <li>Amount Settings</li> </ul>"},{"location":"tags/#app","title":"App","text":"<ul> <li>Creating new app</li> <li>Preview and Sharing Apps</li> </ul>"},{"location":"tags/#approval","title":"Approval","text":"<ul> <li>WF\u00b2 Approval with DOC\u00b2</li> <li>WF\u00b2 Second Approval with DOC\u00b2</li> </ul>"},{"location":"tags/#asana","title":"Asana","text":"<ul> <li>Asana</li> </ul>"},{"location":"tags/#automizy","title":"Automizy","text":"<ul> <li>Automizy</li> </ul>"},{"location":"tags/#autopilot","title":"Autopilot","text":"<ul> <li>Autopilot</li> </ul>"},{"location":"tags/#azure-ad","title":"Azure AD","text":"<ul> <li>Configuring SSO</li> </ul>"},{"location":"tags/#azure-active-directory","title":"Azure Active Directory","text":"<ul> <li>SSO for Azure AD</li> </ul>"},{"location":"tags/#bod","title":"BOD","text":"<ul> <li>How to create a BOD mapping file</li> </ul>"},{"location":"tags/#bamboohr","title":"BambooHR","text":"<ul> <li>BambooHR</li> </ul>"},{"location":"tags/#bannerbear","title":"Bannerbear","text":"<ul> <li>Bannerbear</li> </ul>"},{"location":"tags/#baserow","title":"Baserow","text":"<ul> <li>Baserow</li> </ul>"},{"location":"tags/#basic-operations","title":"Basic Operations","text":"<ul> <li>Discord</li> <li>Pipedrive</li> </ul>"},{"location":"tags/#beeminder","title":"Beeminder","text":"<ul> <li>Beeminder</li> </ul>"},{"location":"tags/#bigquery","title":"BigQuery","text":"<ul> <li>BigQuery</li> </ul>"},{"location":"tags/#bitbucket","title":"Bitbucket","text":"<ul> <li>Bitbucket</li> </ul>"},{"location":"tags/#bitly","title":"Bitly","text":"<ul> <li>Bitly</li> </ul>"},{"location":"tags/#bitwarden","title":"Bitwarden","text":"<ul> <li>Bitwarden</li> </ul>"},{"location":"tags/#box","title":"Box","text":"<ul> <li>Box</li> </ul>"},{"location":"tags/#brandfetch","title":"Brandfetch","text":"<ul> <li>Brandfetch</li> </ul>"},{"location":"tags/#bubble","title":"Bubble","text":"<ul> <li>Bubble</li> </ul>"},{"location":"tags/#calendly","title":"Calendly","text":"<ul> <li>Calendly</li> </ul>"},{"location":"tags/#chargebee","title":"Chargebee","text":"<ul> <li>Chargebee</li> </ul>"},{"location":"tags/#chart","title":"Chart","text":"<ul> <li>Chart</li> </ul>"},{"location":"tags/#circleci","title":"CircleCI","text":"<ul> <li>CircleCI</li> </ul>"},{"location":"tags/#clearbit","title":"Clearbit","text":"<ul> <li>Clearbit</li> </ul>"},{"location":"tags/#clickup","title":"ClickUp","text":"<ul> <li>ClickUp</li> </ul>"},{"location":"tags/#clockify","title":"Clockify","text":"<ul> <li>Clockify</li> </ul>"},{"location":"tags/#cloud","title":"Cloud","text":"<ul> <li>Configuring SSO in Infor Cloud</li> <li>Restart Ephesoft on Cloud</li> </ul>"},{"location":"tags/#cockpit","title":"Cockpit","text":"<ul> <li>Cockpit</li> </ul>"},{"location":"tags/#coda","title":"Coda","text":"<ul> <li>Coda</li> </ul>"},{"location":"tags/#code-example","title":"Code Example","text":"<ul> <li>Code Example</li> <li>Code Example - Query JSON</li> </ul>"},{"location":"tags/#columns","title":"Columns","text":"<ul> <li>Define tables and columns</li> </ul>"},{"location":"tags/#configuration","title":"Configuration","text":"<ul> <li>Configuring SSO</li> <li>Installation &amp; Config</li> <li>Installation &amp; Config</li> <li>TE\u00b2 Installation &amp; Config</li> </ul>"},{"location":"tags/#connection","title":"Connection","text":"<ul> <li>Connection</li> </ul>"},{"location":"tags/#course-level-1","title":"Course Level 1","text":"<ul> <li>Introduction</li> </ul>"},{"location":"tags/#course-level-2","title":"Course Level 2","text":"<ul> <li>Introduction</li> </ul>"},{"location":"tags/#courses","title":"Courses","text":"<ul> <li>Courses for Workflow\u00b2</li> </ul>"},{"location":"tags/#cron","title":"Cron","text":"<ul> <li>Workflows for Weather Forecast</li> <li>Weather</li> <li>Cron</li> <li>RabbitMQ</li> </ul>"},{"location":"tags/#custom-component","title":"Custom Component","text":"<ul> <li>Custom Component</li> </ul>"},{"location":"tags/#doc2","title":"DOC\u00b2","text":"<ul> <li>Getting Started</li> <li>WEBHOOK</li> <li>Company Information</li> <li>Deployment</li> <li>All DOC\u00b2 document status</li> <li>E-Mail</li> <li>Modules</li> <li>DOC\u00b2 - OnBoarding</li> <li>Amount Settings</li> <li>Document Types, Field Settings and Profile</li> <li>Master Data Validation</li> <li>SSO Settings</li> <li>Users</li> <li>DOC\u00b2 with Workflow\u00b2</li> <li>ZUGFeRD</li> <li>Configuring SSO</li> <li>SSO for Azure AD</li> <li>DOC\u00b2 - Postman Guides</li> <li>Dashboard</li> <li>DOC\u00b2 with Infor</li> <li>IDM Business Context Model</li> <li>DOC\u00b2 - Infor Use Cases</li> <li>DOC\u00b2 - Infor API Flow</li> <li>Infrastructure for Infor Cloud and on Premise</li> <li>Document Validation</li> <li>AI Indicators</li> <li>Exception filters</li> <li>Master Data Validation</li> <li>OCR View</li> <li>Export</li> <li>How to create an Infor ION API file</li> <li>Export to FLOW\u00b2</li> <li>How to create a BOD mapping file</li> <li>How to create a IDM mapping file</li> <li>Export to Infor IDM</li> <li>Export to Infor IDM</li> <li>Export to Infor ION and IDM</li> <li>Webhook</li> <li>DOC\u00b2 to Infor OS</li> <li>DOC\u00b2 to Infor OS</li> <li>Fileshare Import</li> <li>Watchdog for macOS</li> <li>Watchdog for Windows</li> <li>Import</li> <li>PO Matching - Delivery Note</li> <li>PO Matching - Invoices</li> <li>PO Matching - Order Confirmation</li> <li>PO Matching</li> <li>Settings</li> <li>Email notification</li> <li>Groups, Users and Permissons</li> <li>Integration</li> <li>API Calls</li> <li>API Integration</li> <li>Table Extraction</li> <li>Add new table column</li> <li>Advanced settings for table extraction</li> <li>Define tables and columns</li> <li>Group function to extract data from tables</li> <li>Manual row selection</li> <li>Mapping of columns</li> <li>Save and delete rules</li> <li>Training for Table Extraction</li> <li>WF\u00b2 Approval with DOC\u00b2</li> <li>DOC\u00b2 export to Excel</li> <li>Email Import with GMail to DOC\u00b2</li> <li>Email Import with O365 to DOC\u00b2</li> <li>WF\u00b2 Second Approval with DOC\u00b2</li> <li>Export DOC\u00b2 to Google Drive</li> <li>Configuring DOC\u00b2 App Status Trigger node</li> <li>Workflow\u00b2 Examples</li> <li>Import from DOC\u00b2</li> <li>Data security with Doc\u00b2</li> <li>Privileges with DOC\u00b2</li> <li>Ephesoft - External Application</li> <li>Welcome to Workflow\u00b2</li> <li>Welcome to Workflow\u00b2</li> </ul>"},{"location":"tags/#doc2export","title":"DOC\u00b2Export","text":"<ul> <li>Activate Workflow</li> <li>Configuring Google Drive node</li> <li>Create blank workflow</li> </ul>"},{"location":"tags/#dashboard","title":"Dashboard","text":"<ul> <li>Deployment</li> <li>Manual Import</li> <li>Dashboard</li> <li>User Dashboard</li> </ul>"},{"location":"tags/#data-sources","title":"Data Sources","text":"<ul> <li>Data Sources</li> <li>Airtable</li> <li>Appwrite Database</li> <li>Athena</li> <li>Baserow</li> <li>BigQuery</li> <li>CouchDB</li> <li>Custom JavaScript</li> <li>DynamoDB</li> <li>Elasticsearch</li> <li>Cloud Firestore</li> <li>Google Cloud Storage</li> <li>Google Sheets</li> <li>GraphQL</li> <li>InfluxDB</li> <li>Mailgun</li> <li>MinIO</li> <li>MongoDB</li> <li>MS SQL Server / Azure SQL databases</li> <li>MySQL</li> <li>n8n</li> <li>Notion</li> <li>OpenAPI</li> <li>Oracle DB</li> <li>PostgreSQL</li> <li>Redis</li> <li>REST API</li> <li>RethinkDB</li> <li>Amazon S3</li> <li>SAP HANA</li> <li>SendGrid</li> <li>SMTP</li> <li>Snowflake</li> <li>TypeSense</li> <li>WooCommerce</li> <li>Adding a data source</li> </ul>"},{"location":"tags/#data-security","title":"Data security","text":"<ul> <li>Data security with Doc\u00b2</li> </ul>"},{"location":"tags/#data-structure","title":"Data structure","text":"<ul> <li>Overview - Mapping and transforming data</li> </ul>"},{"location":"tags/#database","title":"Database","text":"<ul> <li>How to delete a KV\u00b2Plugin rule from the Database</li> </ul>"},{"location":"tags/#date-time","title":"Date &amp; Time","text":"<ul> <li>Date &amp; Time</li> </ul>"},{"location":"tags/#debugger","title":"Debugger","text":"<ul> <li>Debugger</li> </ul>"},{"location":"tags/#delete","title":"Delete","text":"<ul> <li>Save and delete rules</li> </ul>"},{"location":"tags/#delivery-note","title":"Delivery Note","text":"<ul> <li>PO Matching - Delivery Note</li> </ul>"},{"location":"tags/#demonstration","title":"Demonstration","text":"<ul> <li>Welcome to Workflow\u00b2</li> <li>Welcome to Workflow\u00b2</li> </ul>"},{"location":"tags/#deployment","title":"Deployment","text":"<ul> <li>Deployment</li> <li>Deployment</li> </ul>"},{"location":"tags/#digitizing-documents","title":"Digitizing Documents","text":"<ul> <li>Welcome to FLOW\u00b2</li> </ul>"},{"location":"tags/#digitizing-documents_1","title":"Digitizing documents","text":"<ul> <li>KV\u00b2 - Getting Started</li> </ul>"},{"location":"tags/#discord","title":"Discord","text":"<ul> <li>Discord</li> </ul>"},{"location":"tags/#document","title":"Document","text":"<ul> <li>All DOC\u00b2 document status</li> <li>Document Validation</li> </ul>"},{"location":"tags/#document-processing","title":"Document Processing","text":"<ul> <li>Settings</li> </ul>"},{"location":"tags/#document-types","title":"Document Types","text":"<ul> <li>Document Types, Field Settings and Profile</li> </ul>"},{"location":"tags/#document-validation","title":"Document Validation","text":"<ul> <li>Master Data Validation</li> </ul>"},{"location":"tags/#doc2_1","title":"Doc\u00b2","text":"<ul> <li>Keyboard</li> <li>Manual Import</li> </ul>"},{"location":"tags/#download","title":"Download","text":"<ul> <li>ZUGFeRD</li> </ul>"},{"location":"tags/#dropbox","title":"Dropbox","text":"<ul> <li>DOC\u00b2 export to Excel</li> </ul>"},{"location":"tags/#dynamodb","title":"DynamoDB","text":"<ul> <li>DynamoDB</li> </ul>"},{"location":"tags/#e-mail","title":"E-Mail","text":"<ul> <li>E-Mail</li> <li>Import</li> </ul>"},{"location":"tags/#editor-ui","title":"Editor UI","text":"<ul> <li>Workflow\u00b2 Editor UI</li> </ul>"},{"location":"tags/#elasticsearch","title":"Elasticsearch","text":"<ul> <li>Elasticsearch</li> </ul>"},{"location":"tags/#email","title":"Email","text":"<ul> <li>Email Import with GMail to DOC\u00b2</li> <li>Email Import with O365 to DOC\u00b2</li> </ul>"},{"location":"tags/#email-notification","title":"Email notification","text":"<ul> <li>Email notification</li> </ul>"},{"location":"tags/#ephesoft","title":"Ephesoft","text":"<ul> <li>KV\u00b2 - Getting Started</li> <li>How to deal with different VAT amounts</li> <li>How to delete a KV\u00b2Plugin rule from the Database</li> <li>Installation &amp; Config</li> <li>KV\u00b2 Tutorial</li> <li>Limitations of KV\u00b2 Plugin</li> <li>Restart Ephesoft on Cloud</li> <li>Restart Ephesoft On Premise</li> <li>Training KV2 for Table Extraction</li> <li>Ephesoft - External Application</li> <li>TE\u00b2 Plugin</li> <li>TE\u00b2 Tutorial</li> <li>TE\u00b2 Installation &amp; Config</li> <li>Infor BOD Mapping</li> </ul>"},{"location":"tags/#ephesoft-plugins","title":"Ephesoft Plugins","text":"<ul> <li>Enable Feedback Function</li> <li>Enable Feedback Function</li> </ul>"},{"location":"tags/#ephesoft-transact","title":"Ephesoft Transact","text":"<ul> <li>Installation &amp; Config</li> </ul>"},{"location":"tags/#example","title":"Example","text":"<ul> <li>Rename JSON Key</li> <li>Export DOC\u00b2 to Google Drive</li> <li>Activate Workflow</li> <li>Configuring DOC\u00b2 App Status Trigger node</li> <li>Configuring Google Drive node</li> <li>Create blank workflow</li> <li>Workflows for Weather Forecast</li> <li>Weather</li> <li>Weather</li> </ul>"},{"location":"tags/#example-usage","title":"Example Usage","text":"<ul> <li>Discord</li> <li>Pipedrive</li> </ul>"},{"location":"tags/#examples","title":"Examples","text":"<ul> <li>Workflow\u00b2 Examples</li> <li>IN\u00b2 Examples</li> <li>Change text color in columns of the table</li> <li>Bulk update multiple rows in table</li> <li>REST API authentication using OAuth 2.0</li> <li>Upload files on AWS S3 bucket</li> <li>Upload files using GCS</li> </ul>"},{"location":"tags/#excel","title":"Excel","text":"<ul> <li>DOC\u00b2 export to Excel</li> </ul>"},{"location":"tags/#exception","title":"Exception","text":"<ul> <li>Exception filters</li> </ul>"},{"location":"tags/#export","title":"Export","text":"<ul> <li>ZUGFeRD</li> <li>Export</li> <li>Export to FLOW\u00b2</li> <li>How to create a BOD mapping file</li> <li>How to create a IDM mapping file</li> <li>Export to Infor IDM</li> <li>Export to Infor ION and IDM</li> <li>Webhook</li> <li>DOC\u00b2 to Infor OS</li> <li>Export DOC\u00b2 to Google Drive</li> <li>Configuring DOC\u00b2 App Status Trigger node</li> </ul>"},{"location":"tags/#export-to-infor","title":"Export to Infor","text":"<ul> <li>How to create an Infor ION API file</li> </ul>"},{"location":"tags/#expressions","title":"Expressions","text":"<ul> <li>Code Example</li> <li>Code Example - Query JSON</li> </ul>"},{"location":"tags/#external-application","title":"External Application","text":"<ul> <li>Ephesoft - External Application</li> </ul>"},{"location":"tags/#extracted-fields","title":"Extracted Fields","text":"<ul> <li>All extracted fields</li> </ul>"},{"location":"tags/#faqs","title":"FAQs","text":"<ul> <li>Cron</li> <li>License</li> </ul>"},{"location":"tags/#flow2","title":"FLOW\u00b2","text":"<ul> <li>Export</li> <li>Export to FLOW\u00b2</li> <li>Welcome to FLOW\u00b2</li> <li>Deployment</li> <li>FLOW\u00b2 Onboarding Guide</li> <li>User Dashboard</li> <li>Import from DOC\u00b2</li> <li>Getting Started</li> <li>Metadata</li> <li>System Setup</li> </ul>"},{"location":"tags/#ftp","title":"FTP","text":"<ul> <li>FTP</li> </ul>"},{"location":"tags/#feedback","title":"Feedback","text":"<ul> <li>Enable Feedback Function</li> <li>Enable Feedback Function</li> </ul>"},{"location":"tags/#field-settings","title":"Field Settings","text":"<ul> <li>Document Types, Field Settings and Profile</li> </ul>"},{"location":"tags/#fileshare","title":"Fileshare","text":"<ul> <li>Fileshare Import</li> </ul>"},{"location":"tags/#fileshare-import","title":"Fileshare Import","text":"<ul> <li>Watchdog for macOS</li> <li>Watchdog for Windows</li> </ul>"},{"location":"tags/#filter","title":"Filter","text":"<ul> <li>Exception filters</li> </ul>"},{"location":"tags/#function","title":"Function","text":"<ul> <li>Function</li> <li>Function Item</li> </ul>"},{"location":"tags/#generel","title":"Generel","text":"<ul> <li>Exception filters</li> </ul>"},{"location":"tags/#getting-started","title":"Getting Started","text":"<ul> <li>Getting Started</li> </ul>"},{"location":"tags/#global","title":"Global","text":"<ul> <li>Settings</li> </ul>"},{"location":"tags/#gmail","title":"Gmail","text":"<ul> <li>Email Import with GMail to DOC\u00b2</li> </ul>"},{"location":"tags/#google-cloud-storage","title":"Google Cloud Storage","text":"<ul> <li>Google Cloud Storage</li> </ul>"},{"location":"tags/#google-drive","title":"Google Drive","text":"<ul> <li>Export DOC\u00b2 to Google Drive</li> <li>Activate Workflow</li> <li>Configuring DOC\u00b2 App Status Trigger node</li> <li>Configuring Google Drive node</li> <li>Create blank workflow</li> </ul>"},{"location":"tags/#groups","title":"Groups","text":"<ul> <li>Groups, Users and Permissons</li> <li>Managing Users and Groups</li> <li>Privileges with DOC\u00b2</li> </ul>"},{"location":"tags/#guide","title":"Guide","text":"<ul> <li>DOC\u00b2 - OnBoarding</li> <li>DOC\u00b2 - Postman Guides</li> </ul>"},{"location":"tags/#http-request","title":"HTTP Request","text":"<ul> <li>RabbitMQ</li> </ul>"},{"location":"tags/#http-requests","title":"HTTP Requests","text":"<ul> <li>Making HTTP Requests</li> </ul>"},{"location":"tags/#http-request_1","title":"HTTP request","text":"<ul> <li>DOC\u00b2 - Postman Guides</li> </ul>"},{"location":"tags/#help","title":"Help","text":"<ul> <li>Enable Feedback Function</li> <li>Enable Feedback Function</li> </ul>"},{"location":"tags/#homepage","title":"Homepage","text":"<ul> <li>Deployment</li> <li>Dashboard</li> <li>User Dashboard</li> </ul>"},{"location":"tags/#how-to","title":"How To","text":"<ul> <li>Creating nodes</li> </ul>"},{"location":"tags/#how-to_1","title":"How-To","text":"<ul> <li>Workflow\u00b2 combined with MAUTIC</li> <li>Workflow\u00b2 combined with MAUTIC</li> </ul>"},{"location":"tags/#idm","title":"IDM","text":"<ul> <li>IDM Business Context Model</li> <li>How to create a IDM mapping file</li> <li>Export to Infor IDM</li> <li>Export to Infor ION and IDM</li> </ul>"},{"location":"tags/#ion","title":"ION","text":"<ul> <li>How to create an Infor ION API file</li> <li>Export to Infor ION and IDM</li> </ul>"},{"location":"tags/#import","title":"Import","text":"<ul> <li>E-Mail</li> <li>Manual Import</li> <li>Fileshare Import</li> <li>Import</li> <li>Email Import with GMail to DOC\u00b2</li> <li>Email Import with O365 to DOC\u00b2</li> </ul>"},{"location":"tags/#importing-documents","title":"Importing documents","text":"<ul> <li>Import from DOC\u00b2</li> </ul>"},{"location":"tags/#infor","title":"Infor","text":"<ul> <li>DOC\u00b2 with Infor</li> <li>IDM Business Context Model</li> <li>Configuring SSO in Infor Cloud</li> <li>Infrastructure for Infor Cloud and on Premise</li> <li>Export</li> <li>How to create a BOD mapping file</li> <li>How to create a IDM mapping file</li> <li>Export to Infor IDM</li> <li>Export to Infor ION and IDM</li> <li>DOC\u00b2 to Infor OS</li> <li>Infor BOD Mapping</li> </ul>"},{"location":"tags/#infor-cloudsuite","title":"Infor CloudSuite","text":"<ul> <li>Infor BOD Mapping</li> </ul>"},{"location":"tags/#infor-ln","title":"Infor LN","text":"<ul> <li>DOC\u00b2 - Infor Use Cases</li> <li>DOC\u00b2 - Infor API Flow</li> <li>Infor BOD Mapping</li> </ul>"},{"location":"tags/#infor-m3","title":"Infor M3","text":"<ul> <li>DOC\u00b2 - Infor Use Cases</li> <li>DOC\u00b2 - Infor API Flow</li> <li>Infor BOD Mapping</li> </ul>"},{"location":"tags/#infor-os","title":"Infor OS","text":"<ul> <li>Configuring SSO</li> <li>Export to Infor ION and IDM</li> <li>WF\u00b2 Approval with DOC\u00b2</li> </ul>"},{"location":"tags/#infrastructure","title":"Infrastructure","text":"<ul> <li>Infrastructure for Infor Cloud and on Premise</li> </ul>"},{"location":"tags/#initial-setup","title":"Initial Setup","text":"<ul> <li>DOC\u00b2 - OnBoarding</li> </ul>"},{"location":"tags/#insight2","title":"Insight\u00b2","text":"<ul> <li>Welcome to Insight\u00b2</li> <li>Deployment</li> <li>Security</li> <li>Tracking</li> <li>Generate file</li> <li>Set localStorage</li> <li>Data Sources</li> <li>Airtable</li> <li>Appwrite Database</li> <li>Athena</li> <li>Baserow</li> <li>BigQuery</li> <li>CouchDB</li> <li>Custom JavaScript</li> <li>DynamoDB</li> <li>Elasticsearch</li> <li>Cloud Firestore</li> <li>Google Cloud Storage</li> <li>Google Sheets</li> <li>GraphQL</li> <li>InfluxDB</li> <li>Mailgun</li> <li>MinIO</li> <li>MongoDB</li> <li>MS SQL Server / Azure SQL databases</li> <li>MySQL</li> <li>n8n</li> <li>Notion</li> <li>OpenAPI</li> <li>Oracle DB</li> <li>PostgreSQL</li> <li>Redis</li> <li>REST API</li> <li>RethinkDB</li> <li>Amazon S3</li> <li>SAP HANA</li> <li>SendGrid</li> <li>SMTP</li> <li>Snowflake</li> <li>TypeSense</li> <li>WooCommerce</li> <li>IN\u00b2 Examples</li> <li>Change text color in columns of the table</li> <li>Bulk update multiple rows in table</li> <li>REST API authentication using OAuth 2.0</li> <li>Upload files on AWS S3 bucket</li> <li>Upload files using GCS</li> <li>Try it out</li> <li>Adding a data source</li> <li>Adding a widget</li> <li>Building Queries</li> <li>Creating new app</li> <li>Debugger</li> <li>Keyboard Shortcuts</li> <li>Managing Users and Groups</li> <li>Mobile layout</li> <li>Multi-Workspace</li> <li>Preview and Sharing Apps</li> <li>Transformations</li> <li>Versioning and Release</li> <li>Widgets</li> <li>Button</li> <li>Chart</li> <li>Custom Component</li> <li>Kanban</li> <li>List view</li> <li>QR Scanner</li> <li>Radio Button</li> <li>Rich Text Editor</li> <li>Statistics</li> </ul>"},{"location":"tags/#installation","title":"Installation","text":"<ul> <li>Installation &amp; Config</li> <li>Installation &amp; Config</li> <li>TE\u00b2 Installation &amp; Config</li> </ul>"},{"location":"tags/#introduction","title":"Introduction","text":"<ul> <li>Welcome to FLOW\u00b2</li> <li>Welcome to Insight\u00b2</li> <li>A slightly longer introduction</li> <li>The very quick quickstart</li> </ul>"},{"location":"tags/#invoice","title":"Invoice","text":"<ul> <li>PO Matching - Invoices</li> </ul>"},{"location":"tags/#items","title":"Items","text":"<ul> <li>Items</li> </ul>"},{"location":"tags/#kv2","title":"KV\u00b2","text":"<ul> <li>All extracted fields</li> <li>KV\u00b2 - Getting Started</li> <li>How to deal with different VAT amounts</li> <li>How to delete a KV\u00b2Plugin rule from the Database</li> <li>Installation &amp; Config</li> <li>KV\u00b2 Tutorial</li> <li>Limitations of KV\u00b2 Plugin</li> <li>Training KV2 for Table Extraction</li> </ul>"},{"location":"tags/#kv2-plugin","title":"KV\u00b2 Plugin","text":"<ul> <li>Restart Ephesoft on Cloud</li> <li>Restart Ephesoft On Premise</li> </ul>"},{"location":"tags/#kafka","title":"Kafka","text":"<ul> <li>Kafka</li> </ul>"},{"location":"tags/#kanban","title":"Kanban","text":"<ul> <li>Kanban</li> </ul>"},{"location":"tags/#keyboard","title":"Keyboard","text":"<ul> <li>Keyboard</li> <li>Keyboard Shortcuts</li> </ul>"},{"location":"tags/#keyboard-shortcuts","title":"Keyboard shortcuts","text":"<ul> <li>PO Matching</li> </ul>"},{"location":"tags/#ln","title":"LN","text":"<ul> <li>IDM Business Context Model</li> <li>PO Matching - Invoices</li> </ul>"},{"location":"tags/#layout","title":"Layout","text":"<ul> <li>Mobile layout</li> </ul>"},{"location":"tags/#learn-the-basics","title":"Learn the basics","text":"<ul> <li>Welcome to Workflow\u00b2</li> <li>Welcome to Workflow\u00b2</li> <li>A slightly longer introduction</li> <li>The very quick quickstart</li> </ul>"},{"location":"tags/#license","title":"License","text":"<ul> <li>License</li> </ul>"},{"location":"tags/#limitations","title":"Limitations","text":"<ul> <li>Limitations of KV\u00b2 Plugin</li> </ul>"},{"location":"tags/#line-items","title":"Line Items","text":"<ul> <li>Table Extraction</li> </ul>"},{"location":"tags/#list","title":"List","text":"<ul> <li>All DOC\u00b2 document status</li> </ul>"},{"location":"tags/#mautic","title":"MAUTIC","text":"<ul> <li>Workflow\u00b2 combined with MAUTIC</li> <li>Workflow\u00b2 combined with MAUTIC</li> </ul>"},{"location":"tags/#mapping","title":"Mapping","text":"<ul> <li>How to create a BOD mapping file</li> <li>How to create a IDM mapping file</li> <li>Mapping of columns</li> <li>Infor BOD Mapping</li> </ul>"},{"location":"tags/#master-data-validation","title":"Master Data Validation","text":"<ul> <li>Master Data Validation</li> <li>Master Data Validation</li> </ul>"},{"location":"tags/#metadata","title":"Metadata","text":"<ul> <li>Metadata</li> </ul>"},{"location":"tags/#mindee","title":"Mindee","text":"<ul> <li>Mindee</li> </ul>"},{"location":"tags/#mingle","title":"Ming.le","text":"<ul> <li>WF\u00b2 Approval with DOC\u00b2</li> </ul>"},{"location":"tags/#mobile","title":"Mobile","text":"<ul> <li>Mobile layout</li> </ul>"},{"location":"tags/#modules","title":"Modules","text":"<ul> <li>Modules</li> </ul>"},{"location":"tags/#netlify","title":"Netlify","text":"<ul> <li>Netlify</li> </ul>"},{"location":"tags/#node","title":"Node","text":"<ul> <li>Node</li> </ul>"},{"location":"tags/#node-reference","title":"Node Reference","text":"<ul> <li>Cron</li> </ul>"},{"location":"tags/#notion","title":"Notion","text":"<ul> <li>Notion</li> </ul>"},{"location":"tags/#o365","title":"O365","text":"<ul> <li>Email Import with O365 to DOC\u00b2</li> </ul>"},{"location":"tags/#ocr","title":"OCR","text":"<ul> <li>OCR View</li> <li>Detect inside pages</li> <li>Getting Started</li> <li>OCR API</li> <li>OCR Server Process</li> </ul>"},{"location":"tags/#ocr-api","title":"OCR API","text":"<ul> <li>Installation &amp; Config</li> </ul>"},{"location":"tags/#ocr-server","title":"OCR Server","text":"<ul> <li>Overview</li> </ul>"},{"location":"tags/#ocr2","title":"OCR\u00b2","text":"<ul> <li>Installation &amp; Config</li> </ul>"},{"location":"tags/#on-prem","title":"On Prem","text":"<ul> <li>Restart Ephesoft On Premise</li> </ul>"},{"location":"tags/#onboarding","title":"OnBoarding","text":"<ul> <li>DOC\u00b2 - OnBoarding</li> </ul>"},{"location":"tags/#onboarding-guide","title":"Onboarding Guide","text":"<ul> <li>FLOW\u00b2 Onboarding Guide</li> </ul>"},{"location":"tags/#order-confirmation","title":"Order Confirmation","text":"<ul> <li>PO Matching - Order Confirmation</li> </ul>"},{"location":"tags/#outlook","title":"Outlook","text":"<ul> <li>Email Import with O365 to DOC\u00b2</li> </ul>"},{"location":"tags/#overview","title":"Overview","text":"<ul> <li>Deployment</li> <li>Dashboard</li> <li>DOC\u00b2 with Infor</li> <li>Workflow\u00b2 - Overview</li> </ul>"},{"location":"tags/#pdf","title":"PDF","text":"<ul> <li>Merge/Split PDF</li> </ul>"},{"location":"tags/#po-matching","title":"PO Matching","text":"<ul> <li>Modules</li> <li>DOC\u00b2 - Infor Use Cases</li> <li>DOC\u00b2 - Infor API Flow</li> <li>PO Matching - Delivery Note</li> <li>PO Matching - Invoices</li> <li>PO Matching - Order Confirmation</li> <li>PO Matching</li> </ul>"},{"location":"tags/#password","title":"Password","text":"<ul> <li>Users</li> </ul>"},{"location":"tags/#permissions","title":"Permissions","text":"<ul> <li>Groups, Users and Permissons</li> </ul>"},{"location":"tags/#pipedrive","title":"Pipedrive","text":"<ul> <li>Pipedrive</li> </ul>"},{"location":"tags/#plugin","title":"Plugin","text":"<ul> <li>KV\u00b2 - Getting Started</li> <li>How to deal with different VAT amounts</li> <li>How to delete a KV\u00b2Plugin rule from the Database</li> <li>Installation &amp; Config</li> <li>KV\u00b2 Tutorial</li> <li>Limitations of KV\u00b2 Plugin</li> <li>Training KV2 for Table Extraction</li> <li>Ephesoft - External Application</li> <li>TE\u00b2 Plugin</li> <li>TE\u00b2 Tutorial</li> <li>TE\u00b2 Installation &amp; Config</li> <li>Infor BOD Mapping</li> </ul>"},{"location":"tags/#postgres","title":"Postgres","text":"<ul> <li>Postgres</li> </ul>"},{"location":"tags/#postman","title":"Postman","text":"<ul> <li>DOC\u00b2 - Postman Guides</li> </ul>"},{"location":"tags/#prerequisites-kafka","title":"Prerequisites Kafka","text":"<ul> <li>Kafka</li> </ul>"},{"location":"tags/#prerequisites-mindee","title":"Prerequisites Mindee","text":"<ul> <li>Mindee</li> </ul>"},{"location":"tags/#prerequisites-netlify","title":"Prerequisites Netlify","text":"<ul> <li>Netlify</li> </ul>"},{"location":"tags/#prerequisites-postgres","title":"Prerequisites Postgres","text":"<ul> <li>Postgres</li> </ul>"},{"location":"tags/#prerequisites-rabbitmq","title":"Prerequisites RabbitMQ","text":"<ul> <li>RabbitMQ</li> </ul>"},{"location":"tags/#prerequisites-strapi","title":"Prerequisites Strapi","text":"<ul> <li>Strapi</li> </ul>"},{"location":"tags/#prerequisites-xero","title":"Prerequisites Xero","text":"<ul> <li>Xero</li> </ul>"},{"location":"tags/#privileges","title":"Privileges","text":"<ul> <li>Privileges with DOC\u00b2</li> </ul>"},{"location":"tags/#purchase-order","title":"Purchase Order","text":"<ul> <li>Modules</li> </ul>"},{"location":"tags/#qr-scanner","title":"QR Scanner","text":"<ul> <li>QR Scanner</li> </ul>"},{"location":"tags/#queries","title":"Queries","text":"<ul> <li>Building Queries</li> </ul>"},{"location":"tags/#rss-read","title":"RSS Read","text":"<ul> <li>RSS Read</li> </ul>"},{"location":"tags/#rabbitmq","title":"RabbitMQ","text":"<ul> <li>RabbitMQ</li> <li>RabbitMQ</li> </ul>"},{"location":"tags/#radio-button","title":"Radio Button","text":"<ul> <li>Radio Button</li> </ul>"},{"location":"tags/#read-binary-files","title":"Read Binary Files","text":"<ul> <li>Read Binary Files</li> </ul>"},{"location":"tags/#read-pdf","title":"Read PDF","text":"<ul> <li>Read PDF</li> </ul>"},{"location":"tags/#release","title":"Release","text":"<ul> <li>Versioning and Release</li> </ul>"},{"location":"tags/#rename","title":"Rename","text":"<ul> <li>Rename JSON Key</li> </ul>"},{"location":"tags/#rename-keys","title":"Rename Keys","text":"<ul> <li>Rename Keys</li> </ul>"},{"location":"tags/#repository","title":"Repository","text":"<ul> <li>TE\u00b2 Plugin</li> </ul>"},{"location":"tags/#respond-to-webhook","title":"Respond to Webhook","text":"<ul> <li>Respond to Webhook</li> </ul>"},{"location":"tags/#restart","title":"Restart","text":"<ul> <li>Restart Ephesoft on Cloud</li> <li>Restart Ephesoft On Premise</li> </ul>"},{"location":"tags/#rich-text-editor","title":"Rich Text Editor","text":"<ul> <li>Rich Text Editor</li> </ul>"},{"location":"tags/#rounding-errors","title":"Rounding Errors","text":"<ul> <li>Amount Settings</li> </ul>"},{"location":"tags/#row","title":"Row","text":"<ul> <li>Manual row selection</li> </ul>"},{"location":"tags/#rules","title":"Rules","text":"<ul> <li>Save and delete rules</li> </ul>"},{"location":"tags/#smtp","title":"SMTP","text":"<ul> <li>SMTP</li> </ul>"},{"location":"tags/#sse-trigger","title":"SSE Trigger","text":"<ul> <li>SSE Trigger</li> </ul>"},{"location":"tags/#ssh","title":"SSH","text":"<ul> <li>SSH</li> </ul>"},{"location":"tags/#sso","title":"SSO","text":"<ul> <li>SSO Settings</li> <li>Configuring SSO</li> <li>SSO for Azure AD</li> <li>Configuring SSO in Infor Cloud</li> <li>Integration</li> </ul>"},{"location":"tags/#salesforce","title":"Salesforce","text":"<ul> <li>Salesforce</li> </ul>"},{"location":"tags/#salesmate","title":"Salesmate","text":"<ul> <li>Salesmate</li> </ul>"},{"location":"tags/#save","title":"Save","text":"<ul> <li>Save and delete rules</li> </ul>"},{"location":"tags/#seatable","title":"SeaTable","text":"<ul> <li>SeaTable</li> </ul>"},{"location":"tags/#security","title":"Security","text":"<ul> <li>Security</li> </ul>"},{"location":"tags/#securityscorecard","title":"SecurityScorecard","text":"<ul> <li>SecurityScorecard</li> </ul>"},{"location":"tags/#segment","title":"Segment","text":"<ul> <li>Segment</li> </ul>"},{"location":"tags/#selection","title":"Selection","text":"<ul> <li>Manual row selection</li> </ul>"},{"location":"tags/#send-email","title":"Send Email","text":"<ul> <li>Send Email</li> <li>Send Email</li> </ul>"},{"location":"tags/#sendgrid","title":"SendGrid","text":"<ul> <li>SendGrid</li> </ul>"},{"location":"tags/#sendy","title":"Sendy","text":"<ul> <li>Sendy</li> </ul>"},{"location":"tags/#server","title":"Server","text":"<ul> <li>OCR Server Process</li> </ul>"},{"location":"tags/#set","title":"Set","text":"<ul> <li>Set</li> </ul>"},{"location":"tags/#settings","title":"Settings","text":"<ul> <li>Company Information</li> <li>Modules</li> <li>Amount Settings</li> <li>Document Types, Field Settings and Profile</li> <li>Master Data Validation</li> <li>SSO Settings</li> <li>Users</li> <li>How to create an Infor ION API file</li> <li>Export to FLOW\u00b2</li> <li>Settings</li> <li>Email notification</li> <li>Groups, Users and Permissons</li> <li>Integration</li> <li>API Calls</li> <li>API Integration</li> <li>Advanced settings for table extraction</li> </ul>"},{"location":"tags/#setup","title":"Setup","text":"<ul> <li>DOC\u00b2 - Postman Guides</li> </ul>"},{"location":"tags/#sharing","title":"Sharing","text":"<ul> <li>Preview and Sharing Apps</li> </ul>"},{"location":"tags/#split-in-batches","title":"Split In Batches","text":"<ul> <li>Split In Batches</li> </ul>"},{"location":"tags/#spotify","title":"Spotify","text":"<ul> <li>Spotify</li> </ul>"},{"location":"tags/#spreadsheet-file","title":"Spreadsheet File","text":"<ul> <li>Spreadsheet File</li> </ul>"},{"location":"tags/#stackby","title":"Stackby","text":"<ul> <li>Stackby</li> </ul>"},{"location":"tags/#start","title":"Start","text":"<ul> <li>Getting Started</li> <li>Welcome to Workflow\u00b2</li> <li>Start</li> </ul>"},{"location":"tags/#statistics","title":"Statistics","text":"<ul> <li>Statistics</li> </ul>"},{"location":"tags/#status","title":"Status","text":"<ul> <li>All DOC\u00b2 document status</li> </ul>"},{"location":"tags/#sticky-notes","title":"Sticky Notes","text":"<ul> <li>Sticky Notes</li> </ul>"},{"location":"tags/#stop-and-error","title":"Stop And Error","text":"<ul> <li>Stop And Error</li> </ul>"},{"location":"tags/#storyblok","title":"Storyblok","text":"<ul> <li>Storyblok</li> </ul>"},{"location":"tags/#strapi","title":"Strapi","text":"<ul> <li>Strapi</li> <li>Strapi</li> </ul>"},{"location":"tags/#strava","title":"Strava","text":"<ul> <li>Strava</li> </ul>"},{"location":"tags/#stripe","title":"Stripe","text":"<ul> <li>Stripe</li> </ul>"},{"location":"tags/#subscription","title":"Subscription","text":"<ul> <li>Company Information</li> </ul>"},{"location":"tags/#sugar","title":"Sugar","text":"<ul> <li>SugarCRM</li> </ul>"},{"location":"tags/#sugarcrm","title":"SugarCRM","text":"<ul> <li>SugarCRM</li> </ul>"},{"location":"tags/#supabase","title":"Supabase","text":"<ul> <li>Supabase</li> </ul>"},{"location":"tags/#switch","title":"Switch","text":"<ul> <li>Switch</li> </ul>"},{"location":"tags/#syncromsp","title":"SyncroMSP","text":"<ul> <li>SyncroMSP</li> </ul>"},{"location":"tags/#system-setup","title":"System Setup","text":"<ul> <li>System Setup</li> </ul>"},{"location":"tags/#te2","title":"TE\u00b2","text":"<ul> <li>Ephesoft - External Application</li> <li>TE\u00b2 Plugin</li> <li>TE\u00b2 Tutorial</li> <li>TE\u00b2 Installation &amp; Config</li> <li>Infor BOD Mapping</li> </ul>"},{"location":"tags/#table","title":"Table","text":"<ul> <li>Table Extraction</li> <li>Add new table column</li> <li>Advanced settings for table extraction</li> <li>Define tables and columns</li> <li>Training for Table Extraction</li> </ul>"},{"location":"tags/#table-extraction","title":"Table Extraction","text":"<ul> <li>Modules</li> <li>Group function to extract data from tables</li> <li>Manual row selection</li> <li>Mapping of columns</li> <li>Save and delete rules</li> <li>Training KV2 for Table Extraction</li> <li>Ephesoft - External Application</li> <li>TE\u00b2 Plugin</li> <li>TE\u00b2 Tutorial</li> <li>TE\u00b2 Installation &amp; Config</li> </ul>"},{"location":"tags/#tables","title":"Tables","text":"<ul> <li>Group function to extract data from tables</li> </ul>"},{"location":"tags/#taiga","title":"Taiga","text":"<ul> <li>Taiga</li> </ul>"},{"location":"tags/#tapfiliate","title":"Tapfiliate","text":"<ul> <li>Tapfiliate</li> </ul>"},{"location":"tags/#telegram","title":"Telegram","text":"<ul> <li>Telegram</li> </ul>"},{"location":"tags/#tempo","title":"Tempo","text":"<ul> <li>Tempo io</li> </ul>"},{"location":"tags/#tempo-io","title":"Tempo io","text":"<ul> <li>Tempo io</li> </ul>"},{"location":"tags/#thehive","title":"TheHive","text":"<ul> <li>TheHive</li> </ul>"},{"location":"tags/#timescaledb","title":"TimescaleDB","text":"<ul> <li>TimescaleDB</li> </ul>"},{"location":"tags/#todoist","title":"Todoist","text":"<ul> <li>Todoist</li> </ul>"},{"location":"tags/#tracking","title":"Tracking","text":"<ul> <li>Tracking</li> </ul>"},{"location":"tags/#training","title":"Training","text":"<ul> <li>Mapping of columns</li> <li>Training for Table Extraction</li> <li>Training KV2 for Table Extraction</li> <li>Ephesoft - External Application</li> </ul>"},{"location":"tags/#transact","title":"Transact","text":"<ul> <li>Restart Ephesoft on Cloud</li> </ul>"},{"location":"tags/#transforming-data","title":"Transforming data","text":"<ul> <li>Overview - Mapping and transforming data</li> </ul>"},{"location":"tags/#travis-ci","title":"Travis CI","text":"<ul> <li>Travis CI</li> </ul>"},{"location":"tags/#trello","title":"Trello","text":"<ul> <li>Trello</li> </ul>"},{"location":"tags/#tutorial","title":"Tutorial","text":"<ul> <li>Try it out</li> <li>KV\u00b2 Tutorial</li> </ul>"},{"location":"tags/#twake","title":"Twake","text":"<ul> <li>Twake</li> </ul>"},{"location":"tags/#twilio","title":"Twilio","text":"<ul> <li>Twilio</li> </ul>"},{"location":"tags/#twist","title":"Twist","text":"<ul> <li>Twist</li> </ul>"},{"location":"tags/#twitter","title":"Twitter","text":"<ul> <li>Twitter</li> <li>Twitter</li> </ul>"},{"location":"tags/#typeform","title":"Typeform","text":"<ul> <li>Typeform</li> </ul>"},{"location":"tags/#understanding-document-review","title":"Understanding Document Review","text":"<ul> <li>DOC\u00b2 - OnBoarding</li> </ul>"},{"location":"tags/#unleashed-software","title":"Unleashed Software","text":"<ul> <li>Unleashed Software</li> </ul>"},{"location":"tags/#uplead","title":"UpLead","text":"<ul> <li>UpLead</li> <li>UpLead</li> </ul>"},{"location":"tags/#uptimerobot","title":"UptimeRobot","text":"<ul> <li>UptimeRobot</li> <li>UptimeRobot</li> </ul>"},{"location":"tags/#use-cases","title":"Use Cases","text":"<ul> <li>DOC\u00b2 - Infor Use Cases</li> <li>DOC\u00b2 - Infor API Flow</li> </ul>"},{"location":"tags/#users","title":"Users","text":"<ul> <li>Users</li> <li>Groups, Users and Permissons</li> <li>Managing Users and Groups</li> </ul>"},{"location":"tags/#using-api","title":"Using API","text":"<ul> <li>Strapi</li> </ul>"},{"location":"tags/#using-api-key","title":"Using API Key","text":"<ul> <li>Mindee</li> </ul>"},{"location":"tags/#using-database-connection","title":"Using Database Connection","text":"<ul> <li>Postgres</li> </ul>"},{"location":"tags/#using-oauth","title":"Using OAuth","text":"<ul> <li>Xero</li> </ul>"},{"location":"tags/#using-code","title":"Using code","text":"<ul> <li>Overview - Mapping and transforming data</li> </ul>"},{"location":"tags/#vat","title":"VAT","text":"<ul> <li>How to deal with different VAT amounts</li> </ul>"},{"location":"tags/#validation","title":"Validation","text":"<ul> <li>Document Validation</li> </ul>"},{"location":"tags/#vero","title":"Vero","text":"<ul> <li>Vero</li> <li>Vero</li> </ul>"},{"location":"tags/#versioning","title":"Versioning","text":"<ul> <li>Versioning and Release</li> </ul>"},{"location":"tags/#vonage","title":"Vonage","text":"<ul> <li>Vonage</li> <li>Vonage</li> </ul>"},{"location":"tags/#wf2","title":"WF\u00b2","text":"<ul> <li>Workflow\u00b2 API pagination</li> <li>Workflow\u00b2 Using the API playground</li> </ul>"},{"location":"tags/#wait","title":"Wait","text":"<ul> <li>Wait</li> </ul>"},{"location":"tags/#watchdog","title":"Watchdog","text":"<ul> <li>Watchdog for macOS</li> <li>Watchdog for Windows</li> </ul>"},{"location":"tags/#weather","title":"Weather","text":"<ul> <li>Workflows for Weather Forecast</li> <li>Weather</li> <li>Weather</li> </ul>"},{"location":"tags/#webex-by-cisco","title":"Webex by Cisco","text":"<ul> <li>Webex by Cisco</li> </ul>"},{"location":"tags/#webflow","title":"Webflow","text":"<ul> <li>Webflow</li> <li>Webflow</li> </ul>"},{"location":"tags/#webhook","title":"Webhook","text":"<ul> <li>Export</li> <li>Webhook</li> <li>Workflows for Weather Forecast</li> <li>Weather</li> <li>Webhook</li> </ul>"},{"location":"tags/#wekan","title":"Wekan","text":"<ul> <li>Wekan</li> <li>Wekan</li> </ul>"},{"location":"tags/#widget","title":"Widget","text":"<ul> <li>Adding a widget</li> </ul>"},{"location":"tags/#widgets","title":"Widgets","text":"<ul> <li>Widgets</li> <li>Button</li> <li>Chart</li> <li>Custom Component</li> <li>Kanban</li> <li>List view</li> <li>QR Scanner</li> <li>Radio Button</li> <li>Rich Text Editor</li> <li>Statistics</li> </ul>"},{"location":"tags/#windows","title":"Windows","text":"<ul> <li>Watchdog for Windows</li> </ul>"},{"location":"tags/#wise","title":"Wise","text":"<ul> <li>Wise</li> <li>Wise</li> </ul>"},{"location":"tags/#woocommerce","title":"WooCommerce","text":"<ul> <li>WooCommerce</li> </ul>"},{"location":"tags/#wordpress","title":"WordPress","text":"<ul> <li>WordPress</li> </ul>"},{"location":"tags/#workflow","title":"Workflow","text":"<ul> <li>Workflow\u00b2 Examples</li> <li>Welcome to Workflow\u00b2</li> <li>Overview - Mapping and transforming data</li> <li>Overview</li> <li>Welcome to Workflow\u00b2</li> </ul>"},{"location":"tags/#workflow-trigger","title":"Workflow Trigger","text":"<ul> <li>Workflow Trigger</li> </ul>"},{"location":"tags/#workflow2","title":"Workflow\u00b2","text":"<ul> <li>DOC\u00b2 with Workflow\u00b2</li> <li>WF\u00b2 Approval with DOC\u00b2</li> <li>DOC\u00b2 export to Excel</li> <li>Email Import with GMail to DOC\u00b2</li> <li>Email Import with O365 to DOC\u00b2</li> <li>Rename JSON Key</li> <li>WF\u00b2 Second Approval with DOC\u00b2</li> <li>Workflow\u00b2 combined with MAUTIC</li> <li>Workflow\u00b2 combined with MAUTIC</li> <li>Export DOC\u00b2 to Google Drive</li> <li>Activate Workflow</li> <li>Configuring DOC\u00b2 App Status Trigger node</li> <li>Configuring Google Drive node</li> <li>Create blank workflow</li> <li>Workflows for Weather Forecast</li> <li>Weather</li> <li>Weather</li> <li>Workflow\u00b2 Editor UI</li> <li>Welcome to Workflow\u00b2</li> <li>Workflow\u00b2 public REST API</li> <li>Workflow\u00b2 API reference</li> <li>Workflow\u00b2 API authentication</li> <li>Code Example</li> <li>Code Example - Query JSON</li> <li>Courses for Workflow\u00b2</li> <li>Introduction</li> <li>Introduction</li> <li>Error handling</li> <li>Looping</li> <li>Merging</li> <li>Activation Trigger</li> <li>Cron</li> <li>Date &amp; Time</li> <li>Execute Command</li> <li>FTP</li> <li>Function</li> <li>Function Item</li> <li>GraphQL</li> <li>Read Binary Files</li> <li>Read PDF</li> <li>Rename Keys</li> <li>Respond to Webhook</li> <li>RSS Read</li> <li>Send Email</li> <li>Set</li> <li>Split In Batches</li> <li>Spreadsheet File</li> <li>SSE Trigger</li> <li>SSH</li> <li>Start</li> <li>Stop And Error</li> <li>Switch</li> <li>Wait</li> <li>Webhook</li> <li>Workflow Trigger</li> <li>Write Binary File</li> <li>XML</li> <li>Creating nodes</li> <li>Making HTTP Requests</li> <li>Action Network</li> <li>ActiveCampaign</li> <li>Affinity</li> <li>Agile CRM</li> <li>Airtable</li> <li>AMQP</li> <li>APITemplate.io</li> <li>Asana</li> <li>Automizy</li> <li>Autopilot</li> <li>AWS</li> <li>BambooHR</li> <li>Bannerbear</li> <li>Baserow</li> <li>Beeminder</li> <li>Bitbucket</li> <li>Bitly</li> <li>Bitwarden</li> <li>Box</li> <li>Brandfetch</li> <li>Bubble</li> <li>Calendly</li> <li>Chargebee</li> <li>CircleCI</li> <li>Webex by Cisco</li> <li>Clearbit</li> <li>ClickUp</li> <li>Clockify</li> <li>Cockpit</li> <li>Coda</li> <li>Kafka</li> <li>Mindee</li> <li>Netlify</li> <li>Postgres</li> <li>RabbitMQ</li> <li>Salesforce</li> <li>Salesmate</li> <li>SeaTable</li> <li>SecurityScorecard</li> <li>Segment</li> <li>Send Email</li> <li>SendGrid</li> <li>Sendy</li> <li>Strapi</li> <li>Twitter</li> <li>Typeform</li> <li>uProc</li> <li>UpLead</li> <li>UptimeRobot</li> <li>urlscan.io</li> <li>Vero</li> <li>Vonage</li> <li>Webflow</li> <li>Wekan</li> <li>Wise</li> <li>Xero</li> <li>Action Network</li> <li>Discord</li> <li>Pipedrive</li> <li>RabbitMQ</li> <li>Spotify</li> <li>Stackby</li> <li>Storyblok</li> <li>Strapi</li> <li>Strava</li> <li>Stripe</li> <li>SugarCRM</li> <li>Supabase</li> <li>SyncroMSP</li> <li>Taiga</li> <li>Tapfiliate</li> <li>Telegram</li> <li>Tempo io</li> <li>TheHive</li> <li>TimescaleDB</li> <li>Todoist</li> <li>Travis CI</li> <li>Trello</li> <li>Twake</li> <li>Twilio</li> <li>Twist</li> <li>Twitter</li> <li>Unleashed Software</li> <li>UpLead</li> <li>uProc</li> <li>UptimeRobot</li> <li>urlscan.io</li> <li>Vero</li> <li>Vonage</li> <li>Webflow</li> <li>Wekan</li> <li>Wise</li> <li>WooCommerce</li> <li>WordPress</li> <li>Xero</li> <li>YouTube</li> <li>Yourls</li> <li>Zammad</li> <li>Zendesk</li> <li>Zoho CRM</li> <li>Zoom</li> <li>License</li> <li>A slightly longer introduction</li> <li>The very quick quickstart</li> <li>Workflow\u00b2 - Overview</li> <li>Connection</li> <li>Items</li> <li>Node</li> <li>Sticky Notes</li> <li>Workflow</li> </ul>"},{"location":"tags/#workspace","title":"Workspace","text":"<ul> <li>Multi-Workspace</li> </ul>"},{"location":"tags/#write-binary-file","title":"Write Binary File","text":"<ul> <li>Write Binary File</li> </ul>"},{"location":"tags/#xml","title":"XML","text":"<ul> <li>XML</li> </ul>"},{"location":"tags/#xero","title":"Xero","text":"<ul> <li>Xero</li> <li>Xero</li> </ul>"},{"location":"tags/#youtube","title":"YouTube","text":"<ul> <li>YouTube</li> </ul>"},{"location":"tags/#yourls","title":"Yourls","text":"<ul> <li>Yourls</li> </ul>"},{"location":"tags/#zugferd","title":"ZUGFeRD","text":"<ul> <li>Company Information</li> <li>ZUGFeRD</li> </ul>"},{"location":"tags/#zammad","title":"Zammad","text":"<ul> <li>Zammad</li> </ul>"},{"location":"tags/#zendesk","title":"Zendesk","text":"<ul> <li>Zendesk</li> </ul>"},{"location":"tags/#zoho-crm","title":"Zoho CRM","text":"<ul> <li>Zoho CRM</li> </ul>"},{"location":"tags/#zoom","title":"Zoom","text":"<ul> <li>Zoom</li> </ul>"},{"location":"tags/#apipolydocsio","title":"api.polydocs.io","text":"<ul> <li>API Calls</li> </ul>"},{"location":"tags/#create","title":"create","text":"<ul> <li>Creating nodes</li> </ul>"},{"location":"tags/#delete-rules","title":"delete rules","text":"<ul> <li>How to delete a KV\u00b2Plugin rule from the Database</li> </ul>"},{"location":"tags/#document-management-system-dms","title":"document management system (DMS)","text":"<ul> <li>Getting Started</li> </ul>"},{"location":"tags/#extract","title":"extract","text":"<ul> <li>Getting Started</li> </ul>"},{"location":"tags/#macos","title":"macOS","text":"<ul> <li>Watchdog for macOS</li> </ul>"},{"location":"tags/#manual-import","title":"manual Import","text":"<ul> <li>Import</li> </ul>"},{"location":"tags/#manually","title":"manually","text":"<ul> <li>Manual row selection</li> </ul>"},{"location":"tags/#metadata_1","title":"metadata","text":"<ul> <li>Getting Started</li> </ul>"},{"location":"tags/#n8n","title":"n8n","text":"<ul> <li>n8n</li> <li>License</li> </ul>"},{"location":"tags/#new-service-provider","title":"new service provider","text":"<ul> <li>Configuring SSO in Infor Cloud</li> </ul>"},{"location":"tags/#nodes","title":"nodes","text":"<ul> <li>Creating nodes</li> <li>Overview</li> </ul>"},{"location":"tags/#transform-regular-documents-into-ocrd-ones","title":"transform regular documents into OCR'd ones","text":"<ul> <li>Overview</li> </ul>"},{"location":"tags/#uproc","title":"uProc","text":"<ul> <li>uProc</li> <li>uProc</li> </ul>"},{"location":"tags/#urlscanio","title":"urlscan.io","text":"<ul> <li>urlscan.io</li> <li>urlscan.io</li> </ul>"}]}