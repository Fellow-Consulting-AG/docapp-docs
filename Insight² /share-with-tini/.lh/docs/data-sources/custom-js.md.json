{
    "sourceFile": "docs/data-sources/custom-js.md",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1656582811777,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1656582811777,
            "name": "Commit-0",
            "content": "---\nid: custom-js\ntitle: Custom JavaScript\n---\n\n# Custom JavaScript\n\nYou can write custom JavaScript code to interact with components and queries. To do that, you just need to create a new query and select **Run JavaScript Code** from the data sources dropdown.\n\n<div style={{textAlign: 'center'}}>\n\n![Insight - Data source - Custom JavaScript](/img/datasource-reference/custom-javascript/custom-javascript.png)\n\n</div>\n\n#### Example: Displaying random number\n\n- Let's drag a **button** and a **text** widget inside a container widget.\n- Create a new query and select **Run JavaScript code** from dropdown.\n- Write the code in **JavaScript editor** and save the query:\n```jsx\nconst a = Math.floor(Math.random() * (10 - 1)) + 1;\nreturn a;\n```\n:::tip\n\nThe return value is used as the `data` of the query.\n\n:::\n- Let's edit the properties of widgets:\n    - Add an event handler to the button - Select **On Click** event, **Run Query** action, and select the `runjs1` query that we created. This will run the JavaScript code every time the button is clicked.\n    - Edit the property of text widget - In the text field enter **Random number: `{{queries.runjs1.data}}`**. It will display the output as Random number: *result from JS code*\n\n<div style={{textAlign: 'center'}}>\n\n![Display random number using JS](/img/datasource-reference/custom-javascript/jsrandom.gif)\n\n</div>\n\n\nYou can also write custom JavaScript code to get the data from **External APIs** and manipulate the response for graphical representation. Here's the [tutorial](https://blog.tooljet.com/build-github-stars-history-app-in-5-minutes-using-low-code/) on how we used custom JavaScript code to build an app using GitHub API.\n\n### Libraries\n\nInsight allows you to internally utilize these libraries:\n\n| Name        | Documentation |\n| ----------- | ----------- |\n| Moment      | [https://momentjs.com/docs/](https://momentjs.com/docs/) |\n| Lodash      | [https://lodash.com/docs/](https://lodash.com/docs/) |\n| Axios       | [https://axios-http.com/docs/intro](https://axios-http.com/docs/intro) |\n\n:::danger\n\nIssues with writing custom JavaScript code? Ask in our [Slack community](https://join.slack.com/t/tooljet/shared_invite/zt-r2neyfcw-KD1COL6t2kgVTlTtAV5rtg).\n\n:::"
        }
    ]
}