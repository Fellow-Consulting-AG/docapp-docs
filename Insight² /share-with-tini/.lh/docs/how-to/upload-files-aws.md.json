{
    "sourceFile": "docs/how-to/upload-files-aws.md",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1656582811805,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1656582811805,
            "name": "Commit-0",
            "content": "---\nid: upload-files-aws\ntitle: Upload files on AWS S3 bucket\n---\n\n# Upload and download files on AWS S3 bucket\n\nThis guide will help you in quickly building a basic UI for uploading or downloading files from AWS S3 buckets.\n\nBefore building the UI, check out the **[docs for AWS S3 data source](/docs/data-sources/s3)** to learn about setting up AWS S3 and adding the data source. \n\nOnce you have successfully added the AWS data source, build a basic UI using the following widgets:\n- **Dropdown**: For selecting a bucket in S3 storage.\n- **Table**: For listing all the objects inside the selected bucket in dropdown.\n- **Text Input**: For getting a path for the file that is to be uploaded.\n- **File picker**: For uploading the file.\n- **Button**: This will be used to fire the upload query.\n\n<div style={{textAlign: 'center'}}>\n\n![Insight - How To - Upload files on AWS S3 bucket](/img/how-to/upload-files-aws/ui.png)\n\n</div>\n\n## Queries\n\nWe'll create the following queries:\n\n1. **getBuckets**\n2. **listObjects**\n3. **uploadToS3**\n4. **download**\n\n### getBuckets\n\nThis query will fetch the list of all the buckets in your S3. Just create a new query, select AWS S3 data souce, and choose **List buckets** operation. Name the query **getBuckets** and click **Save**.\n\n<div style={{textAlign: 'center'}}>\n\n![Insight - How To - Upload files on AWS S3 bucket](/img/how-to/upload-files-aws/getBuckets.png)\n\n</div>\n\nNow, let's edit the properties of **dropdown** widget.\n\n- **Label**: Set the label as Bucket.\n- **Option values**: Set option values as `{{queries.getBuckets.data.Buckets.map(bucket => bucket['Name'])}}`. We're mapping the data returned by the query as the returned data is array of abjects.\n- **Option label**: Set option values as `{{queries.getBuckets.data.Buckets.map(bucket => bucket['Name'])}}`. This will display the same option label as option values.\n\nYou can later add an event handler for running the **listObject** query whenever an option is selected from the dropdown.\n\n<div style={{textAlign: 'center'}}>\n\n![Insight - How To - Upload files on AWS S3 bucket](/img/how-to/upload-files-aws/dropdown.png)\n\n</div>\n\n### listObjects\n\nThis query will list all the objects inside the selected Bucket in dropdown. Select **List objects in a bucket** operation, enter `{{components.dropdown1.value}}` in the Bucket field - this will dynamically get the field value from the selected option in dropdown.\n\n<div style={{textAlign: 'center'}}>\n\n![Insight - How To - Upload files on AWS S3 bucket](/img/how-to/upload-files-aws/listObjects.png)\n\n</div>\n\nEdit the properties of **table** widget:\n- **Table data**: `{{queries.listObjects.data['Contents']}}`\n- **Add Columns**:\n  - **Key**: Set the **Column Name** to `Key` and **Key** to `Key`\n  - **Last Modified**: Set the **Column Name** to `Last Modified` and **Key** to `LastModified`\n  - **Size**: Set the **Column Name** to `Size` and **Key** to `Size`\n- Add a **Action button**: Set button text to **Copy signed URL**, Add a handler to this button for On Click event and Action to Copy to clipboard, in the text field enter `{{queries.download.data.url}}` - this will get the download url from the **download** query that we will create next.\n\n<div style={{textAlign: 'center'}}>\n\n![Insight - How To - Upload files on AWS S3 bucket](/img/how-to/upload-files-aws/table.png)\n\n</div>\n\n### download\n\nCreate a new query and select **Signed URL for download** operation. In the Bucket field, enter `{{components.dropdown1.value}}` and in Key enter `{{components.table1.selectedRow.Key}}`.\n\n<div style={{textAlign: 'center'}}>\n\n![Insight - How To - Upload files on AWS S3 bucket](/img/how-to/upload-files-aws/download.png)\n\n</div>\n\nEdit the **properites** of the table, add a Event handler for running the `download` query for `Row clicked` event. This will generate a signed url for download every time a row is clicked on the table.\n\n### uploadToS3\n\nCreate a new query, select the **Upload object** operation. Enter the following values in their respective fields:\n- **Bucket**: `{{components.dropdown1.value}}`\n- **Key**:  {{ components.textinput1.value + '/' +components.filepicker1.file[0].name}}`\n- **Content type**: `{{components.filepicker1.file[0].type}}`\n- **Upload data**: `{{components.filepicker1.file[0].base64Data}}`\n- **Encoding**: `base64`\n\n<div style={{textAlign: 'center'}}>\n\n![Insight - How To - Upload files on AWS S3 bucket](/img/how-to/upload-files-aws/uploadToS3.png)\n\n</div>\n\n#### Configure the file picker:\n\nClick on the widget handle to edit the file picker properties: \n\n- Change the **Accept file types** to `{{\"application/pdf\"}}` for the picker to accept only pdf files or `{{\"image/*\"}}` for the picker to accept only image files . In the screenshot below, we have set the accepted file type property to `{{\"application/pdf\"}}` so it will allow to select only pdf files:\n\n<div style={{textAlign: 'center'}}>\n\n![Insight - How To - Upload files using GCS](/img/how-to/upload-files-gcs/result-filepicker.png)\n\n</div>\n\n- Change the **Max file count** to `{{1}}` as we are only going to upload 1 file at a time.\n\n- Select a pdf file and hold it in the file picker.\n\n:::info\n File types must be valid **[MIME](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Common_types)** type according to input element specification or a valid file extension.\n\n To accept any/all file type(s), set `Accept file types` to an empty value.\n:::\n\n<div style={{textAlign: 'center'}}>\n\n![Insight - How To - Upload files using GCS](/img/how-to/upload-files-gcs/config-filepicker.png)\n\n</div>\n\nFinal steps, go to the **Advanced** tab of the **uploadToS3** query and add a query to run **listObjects** query so that whenever a file is uploaded the tabled is refreshed."
        }
    ]
}