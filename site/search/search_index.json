{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+","tags":true},"docs":[{"location":"","text":"","title":"THE PLATFORM OF DIGITALIZATION"},{"location":"#for-business-process-automation-including-documents","text":"","title":"For Business Process Automation - Including Documents"},{"location":"#digitization","text":"<p>Digitization refers to creating a digital representation of physical objects or attributes. For instance, we scan a paper document and save it as a digital document (e.g., PDF). In other words, digitization is about converting something non-digital into a digital representation or artifact.</p> <p></p> <p>Sign up for a 30 days free trial</p>","title":"Digitization"},{"location":"#digitalization","text":"<p>Digitalization refers to enabling or improving processes by leveraging digital technologies and digitized data. Therefore, digitalization presumes digitization. Digitalization improves an existing business process or processes but doesn\u2019t change or transform them. It takes a process from a human-driven event or series of events to softwaredriven.</p>","title":"Digitalization"},{"location":"#digital-transformation","text":"<p>Digital transformation is about the entire transformation of the company. Digital transformation includes other changes brought about by digitalization. New business areas or business models can open along the way.</p> <p>Every business process starts, contains or ends with a document. Regardless of whether in paper form or already as a file. This is called unstructured data. Although the information is on or in the document, it cannot be automatically integrated into the work processes, as it is simply not recognized by all software.</p>","title":"Digital Transformation"},{"location":"#what-is-doc2","text":"<p>DOC\u00b2 is the latest software and solution for document capture that was developed by Fellow Consulting AG. It is a completely cloud-based solution that uses Artificial Intelligence and Machine Learning to precisely identify, classify, analyze and read your documents. No matter if paper or file. DOC\u00b2 learns independently, the level of experience increases with each document. DOC\u00b2 uses swarm intelligence for this.</p> <p>The Advantages of DOC\u00b2 at a glance:</p> <ul> <li>Recognizes the required data \u2013 even handwritten information and information in tables reliably and is self-learning, even through corrections by the user</li> <li>With swarm intelligence, you benefit continuously from the experiences of other customers</li> <li>Improves the accuracy and quality of the recognized data</li> <li>Enables an automated process without ongoing corrections and interventions</li> <li>Simple intuitive interface</li> <li>No IT resources / specialists required</li> <li>Ensures a robust and consistent work process</li> <li>No sensitive data is stored or shared</li> <li>Saves time in the digital inbox</li> <li>Reduces errors caused by manual processing</li> </ul>","title":"What is Doc\u00b2?"},{"location":"#how-do-you-use-doc2","text":"<ul> <li>Scanning and Recognition of all types of documents (Invoices, Contracts, Forms, Medical Prescriptions etc.)</li> <li>Reliable extraction of the data in the document and integration and further processing in the ERP, RPA or CRM system)</li> <li>Validation of the extracted data and verification against other systems from internal and public sources</li> <li>Integration into your system landscape (e.g. ERP System, Document Management, Workflow System etc)</li> </ul>","title":"How do you use DOC\u00b2:"},{"location":"#why-doc2-is-just-right-for-you","text":"<ul> <li> <p>Many companies have recognized that processing incoming invoices, for example, can be very time-consuming. They are trying to increase productivity and optimize       the purchase-to-pay process by introducing products for the \u201cdigitization\u201d of invoices.</p> </li> <li> <p>In addition, DOC\u00b2 uses swarm intelligence. What does that mean? You benefit from the experiences of other customers and their \u201clearning curve\u201d without sharing sensitive      data. With the cloud-based rule engine, we ensure continuous improvement of the application. You don\u2019t need any developers or data scientists, because the system learns from the input of the user and the process runs without interruptions.</p> </li> <li> <p>With the help of deep learning algorithms, not only simple header data of a document can be recorded, but also complicated structures such as tables. Of course, not      only invoices are processed, but all types of documents. Regardless of whether it is waybills, membership applications, medical prescriptions and many more.</p> </li> </ul> <p> Sign up for a 30 days free trail </p>","title":"Why DOC\u00b2 is just right for you"},{"location":"tags/","text":"<p>Following is a list of relevant tags:</p>","title":"Tags"},{"location":"tags/#ai","text":"<ul> <li>AI Indicators</li> </ul>","title":"AI"},{"location":"tags/#amqp","text":"<ul> <li>AMQP</li> </ul>","title":"AMQP"},{"location":"tags/#api","text":"<ul> <li>WEBHOOK</li> <li>API</li> <li>Detect inside pages</li> <li>Merge/Split PDF</li> <li>OCR API</li> <li>Overview</li> </ul>","title":"API"},{"location":"tags/#apitemplateio","text":"<ul> <li>APITemplate.io</li> </ul>","title":"APITemplate.io"},{"location":"tags/#aws","text":"<ul> <li>AWS</li> </ul>","title":"AWS"},{"location":"tags/#access-token","text":"<ul> <li>Netlify</li> </ul>","title":"Access Token"},{"location":"tags/#action","text":"<ul> <li>Insight\u00b2 Action</li> </ul>","title":"Action"},{"location":"tags/#action-network","text":"<ul> <li>Action Network</li> <li>Action Network</li> </ul>","title":"Action Network"},{"location":"tags/#activecampaign","text":"<ul> <li>ActiveCampaign</li> </ul>","title":"ActiveCampaign"},{"location":"tags/#affinity","text":"<ul> <li>Affinity</li> </ul>","title":"Affinity"},{"location":"tags/#agile-crm","text":"<ul> <li>Agile CRM</li> </ul>","title":"Agile CRM"},{"location":"tags/#airtable","text":"<ul> <li>Airtable</li> </ul>","title":"Airtable"},{"location":"tags/#amount-settings","text":"<ul> <li>General Settings</li> <li>Amount Settings</li> </ul>","title":"Amount Settings"},{"location":"tags/#approval","text":"<ul> <li>WF\u00b2 Approval with Doc\u00b2</li> </ul>","title":"Approval"},{"location":"tags/#asana","text":"<ul> <li>Asana</li> </ul>","title":"Asana"},{"location":"tags/#automizy","text":"<ul> <li>Automizy</li> </ul>","title":"Automizy"},{"location":"tags/#autopilot","text":"<ul> <li>Autopilot</li> </ul>","title":"Autopilot"},{"location":"tags/#bod","text":"<ul> <li>How to create a BOD mapping file</li> </ul>","title":"BOD"},{"location":"tags/#bamboohr","text":"<ul> <li>BambooHR</li> </ul>","title":"BambooHR"},{"location":"tags/#bannerbear","text":"<ul> <li>Bannerbear</li> </ul>","title":"Bannerbear"},{"location":"tags/#baserow","text":"<ul> <li>Baserow</li> </ul>","title":"Baserow"},{"location":"tags/#basic-operations","text":"<ul> <li>Discord</li> <li>Pipedrive</li> </ul>","title":"Basic Operations"},{"location":"tags/#beeminder","text":"<ul> <li>Beeminder</li> </ul>","title":"Beeminder"},{"location":"tags/#bitbucket","text":"<ul> <li>Bitbucket</li> </ul>","title":"Bitbucket"},{"location":"tags/#bitly","text":"<ul> <li>Bitly</li> </ul>","title":"Bitly"},{"location":"tags/#bitwarden","text":"<ul> <li>Bitwarden</li> </ul>","title":"Bitwarden"},{"location":"tags/#box","text":"<ul> <li>Box</li> </ul>","title":"Box"},{"location":"tags/#brandfetch","text":"<ul> <li>Brandfetch</li> </ul>","title":"Brandfetch"},{"location":"tags/#bubble","text":"<ul> <li>Bubble</li> </ul>","title":"Bubble"},{"location":"tags/#calendly","text":"<ul> <li>Calendly</li> </ul>","title":"Calendly"},{"location":"tags/#change-log","text":"<ul> <li>Changelog</li> </ul>","title":"Change Log"},{"location":"tags/#chargebee","text":"<ul> <li>Chargebee</li> </ul>","title":"Chargebee"},{"location":"tags/#circleci","text":"<ul> <li>CircleCI</li> </ul>","title":"CircleCI"},{"location":"tags/#clearbit","text":"<ul> <li>Clearbit</li> </ul>","title":"Clearbit"},{"location":"tags/#clickup","text":"<ul> <li>ClickUp</li> </ul>","title":"ClickUp"},{"location":"tags/#clockify","text":"<ul> <li>Clockify</li> </ul>","title":"Clockify"},{"location":"tags/#cloud","text":"<ul> <li>Configuring SSO in Infor Cloud</li> <li>Restart Ephesoft on Cloud</li> </ul>","title":"Cloud"},{"location":"tags/#cockpit","text":"<ul> <li>Cockpit</li> </ul>","title":"Cockpit"},{"location":"tags/#coda","text":"<ul> <li>Coda</li> </ul>","title":"Coda"},{"location":"tags/#code-example","text":"<ul> <li>Code Example</li> <li>Code Example - Query JSON</li> </ul>","title":"Code Example"},{"location":"tags/#columns","text":"<ul> <li>Define tables and columns</li> </ul>","title":"Columns"},{"location":"tags/#configuration","text":"<ul> <li>Installation &amp; Config</li> <li>Installation &amp; Config</li> <li>TE\u00b2 Installation &amp; Config</li> </ul>","title":"Configuration"},{"location":"tags/#connection","text":"<ul> <li>Connection</li> </ul>","title":"Connection"},{"location":"tags/#cron","text":"<ul> <li>Workflows for Weather Forecast</li> <li>Weather</li> <li>Cron</li> <li>RabbitMQ</li> </ul>","title":"Cron"},{"location":"tags/#doc2","text":"<ul> <li>Getting Started</li> <li>AI Indicators</li> <li>WEBHOOK</li> <li>Company Information</li> <li>Dashboard</li> <li>Deployment</li> <li>Document Validation</li> <li>E-Mail</li> <li>Exception filters</li> <li>Export</li> <li>Extracted fields</li> <li>Fileshare Import</li> <li>General Settings</li> <li>Import</li> <li>DOC\u00b2 - Infor Use Cases</li> <li>Mapping of columns</li> <li>Master data validation</li> <li>Modules</li> <li>OCR View</li> <li>DOC\u00b2 - OnBoarding</li> <li>Amount Settings</li> <li>API</li> <li>Document Types</li> <li>Master Data Validation</li> <li>SSO Settings</li> <li>Users</li> <li>Watchdog for Linux</li> <li>Watchdog for Windows</li> <li>DOC\u00b2 with Workflow\u00b2</li> <li>Zugferd and Peppol</li> <li>How to create an Infor ION file</li> <li>Export to FLOW\u00b2</li> <li>DOC\u00b2 to Infor OS</li> <li>DOC\u00b2 to Infor OS</li> <li>How to create a BOD mapping file</li> <li>How to create a IDM mapping file</li> <li>Export to Infor IDM</li> <li>Export to Infor IDM</li> <li>Export to Infor ION and IDM</li> <li>Webhook</li> <li>PO Matching - Delivery Notes</li> <li>PO Matching - Invoices</li> <li>PO Matching - Order Confirmation</li> <li>PO Matching</li> <li>Add new table column</li> <li>Advanced settings for table extraction</li> <li>Define tables and columns</li> <li>Group function to extract data from tables</li> <li>Manual row selection</li> <li>Save and delete rules</li> <li>Table Extraction</li> <li>Training for Table Extraction</li> <li>Workflow\u00b2 Examples</li> <li>Import from DOC\u00b2</li> <li>Ephesoft - External Application</li> <li>Welcome to Workflow\u00b2</li> <li>Welcome to Workflow\u00b2</li> </ul>","title":"DOC\u00b2"},{"location":"tags/#doc2-upload","text":"<ul> <li>Watchdog Configuration</li> </ul>","title":"DOC\u00b2 Upload"},{"location":"tags/#doc2export","text":"<ul> <li>Activate Workflow</li> <li>Configuring DOC\u00b2 App Status Trigger node</li> <li>Configuring Google Drive node</li> <li>Create blank workflow</li> </ul>","title":"DOC\u00b2Export"},{"location":"tags/#dashboard","text":"<ul> <li>Dashboard</li> <li>Deployment</li> <li>Manual Import</li> <li>User Dashboard</li> </ul>","title":"Dashboard"},{"location":"tags/#data-source","text":"<ul> <li>Insight\u00b2 Data Source</li> </ul>","title":"Data Source"},{"location":"tags/#data-structure","text":"<ul> <li>Overview - Mapping and transforming data</li> </ul>","title":"Data structure"},{"location":"tags/#database","text":"<ul> <li>How to delete a KV\u00b2Plugin rule from the Database</li> </ul>","title":"Database"},{"location":"tags/#date-time","text":"<ul> <li>Date &amp; Time</li> </ul>","title":"Date &amp; Time"},{"location":"tags/#delete","text":"<ul> <li>Save and delete rules</li> </ul>","title":"Delete"},{"location":"tags/#delivery-notes","text":"<ul> <li>PO Matching - Delivery Notes</li> </ul>","title":"Delivery Notes"},{"location":"tags/#demonstration","text":"<ul> <li>Welcome to Workflow\u00b2</li> </ul>","title":"Demonstration"},{"location":"tags/#deployment","text":"<ul> <li>Deployment</li> </ul>","title":"Deployment"},{"location":"tags/#digitizing-documents","text":"<ul> <li>Welcome to FLOW\u00b2</li> </ul>","title":"Digitizing Documents"},{"location":"tags/#digitizing-documents_1","text":"<ul> <li>KV\u00b2 - Getting Started</li> </ul>","title":"Digitizing documents"},{"location":"tags/#discord","text":"<ul> <li>Discord</li> </ul>","title":"Discord"},{"location":"tags/#doc2export_1","text":"<ul> <li>Export Doc2 to Google Drive</li> </ul>","title":"Doc2Export"},{"location":"tags/#document","text":"<ul> <li>Document Validation</li> </ul>","title":"Document"},{"location":"tags/#document-split-settings","text":"<ul> <li>General Settings</li> </ul>","title":"Document Split Settings"},{"location":"tags/#document-types","text":"<ul> <li>Document Types</li> </ul>","title":"Document Types"},{"location":"tags/#document-validation","text":"<ul> <li>Master data validation</li> </ul>","title":"Document Validation"},{"location":"tags/#doc2_1","text":"<ul> <li>Keyboard</li> <li>Manual Import</li> <li>WF\u00b2 Approval with Doc\u00b2</li> <li>Doc\u00b2 export to Excel</li> </ul>","title":"Doc\u00b2"},{"location":"tags/#download","text":"<ul> <li>Zugferd and Peppol</li> </ul>","title":"Download"},{"location":"tags/#dropbox","text":"<ul> <li>Doc\u00b2 export to Excel</li> </ul>","title":"Dropbox"},{"location":"tags/#e-mail","text":"<ul> <li>E-Mail</li> <li>Import</li> </ul>","title":"E-Mail"},{"location":"tags/#ephesoft","text":"<ul> <li>KV\u00b2 - Getting Started</li> <li>How to deal with different VAT amounts</li> <li>How to delete a KV\u00b2Plugin rule from the Database</li> <li>Installation &amp; Config</li> <li>KV\u00b2 Tutorial</li> <li>Limitations of KV\u00b2 Plugin</li> <li>Restart Ephesoft on Cloud</li> <li>Restart Ephesoft On Premise</li> <li>Training KV2 for Table Extraction</li> <li>Ephesoft - External Application</li> <li>TE\u00b2 Plugin</li> <li>TE\u00b2 Tutorial</li> <li>TE\u00b2 Installation &amp; Config</li> <li>Infor BOD Mapping</li> </ul>","title":"Ephesoft"},{"location":"tags/#ephesoft-plugins","text":"<ul> <li>Enable Feedback Function</li> <li>Enable Feedback Function</li> </ul>","title":"Ephesoft Plugins"},{"location":"tags/#ephesoft-transact","text":"<ul> <li>Installation &amp; Config</li> </ul>","title":"Ephesoft Transact"},{"location":"tags/#example","text":"<ul> <li>Rename JSON Key</li> <li>Export Doc2 to Google Drive</li> <li>Activate Workflow</li> <li>Configuring DOC\u00b2 App Status Trigger node</li> <li>Configuring Google Drive node</li> <li>Create blank workflow</li> <li>Workflows for Weather Forecast</li> <li>Weather</li> <li>Weather</li> </ul>","title":"Example"},{"location":"tags/#example-usage","text":"<ul> <li>Discord</li> <li>Pipedrive</li> </ul>","title":"Example Usage"},{"location":"tags/#examples","text":"<ul> <li>Workflow\u00b2 Examples</li> </ul>","title":"Examples"},{"location":"tags/#excel","text":"<ul> <li>Doc\u00b2 export to Excel</li> </ul>","title":"Excel"},{"location":"tags/#exception","text":"<ul> <li>Exception filters</li> </ul>","title":"Exception"},{"location":"tags/#export","text":"<ul> <li>Export</li> <li>Zugferd and Peppol</li> <li>Export to FLOW\u00b2</li> <li>DOC\u00b2 to Infor OS</li> <li>How to create a BOD mapping file</li> <li>How to create a IDM mapping file</li> <li>Export to Infor IDM</li> <li>Export to Infor ION and IDM</li> <li>Webhook</li> </ul>","title":"Export"},{"location":"tags/#export-to-infor","text":"<ul> <li>How to create an Infor ION file</li> </ul>","title":"Export to Infor"},{"location":"tags/#expressions","text":"<ul> <li>Code Example</li> <li>Code Example - Query JSON</li> </ul>","title":"Expressions"},{"location":"tags/#external-application","text":"<ul> <li>Ephesoft - External Application</li> </ul>","title":"External Application"},{"location":"tags/#extracted-fields","text":"<ul> <li>All extracted fields</li> </ul>","title":"Extracted Fields"},{"location":"tags/#faqs","text":"<ul> <li>Cron</li> <li>License</li> </ul>","title":"FAQs"},{"location":"tags/#flow2","text":"<ul> <li>Export</li> <li>Extracted fields</li> <li>Watchdog Configuration</li> <li>Export to FLOW\u00b2</li> <li>Welcome to FLOW\u00b2</li> <li>Deployment</li> <li>FLOW\u00b2 Onboarding Guide</li> <li>User Dashboard</li> <li>Import from DOC\u00b2</li> <li>Getting Started</li> <li>Metadata</li> <li>System Setup</li> </ul>","title":"FLOW\u00b2"},{"location":"tags/#ftp","text":"<ul> <li>FTP</li> </ul>","title":"FTP"},{"location":"tags/#feedback","text":"<ul> <li>Enable Feedback Function</li> <li>Enable Feedback Function</li> </ul>","title":"Feedback"},{"location":"tags/#fields","text":"<ul> <li>Extracted fields</li> </ul>","title":"Fields"},{"location":"tags/#fileshare","text":"<ul> <li>Fileshare Import</li> </ul>","title":"Fileshare"},{"location":"tags/#fileshare-import","text":"<ul> <li>Watchdog for Linux</li> <li>Watchdog for Windows</li> <li>Watchdog Configuration</li> </ul>","title":"Fileshare Import"},{"location":"tags/#filter","text":"<ul> <li>Exception filters</li> </ul>","title":"Filter"},{"location":"tags/#function","text":"<ul> <li>Function</li> <li>Function Item</li> </ul>","title":"Function"},{"location":"tags/#generel","text":"<ul> <li>Exception filters</li> </ul>","title":"Generel"},{"location":"tags/#getting-started","text":"<ul> <li>Getting Started</li> </ul>","title":"Getting Started"},{"location":"tags/#google-drive","text":"<ul> <li>Export Doc2 to Google Drive</li> <li>Activate Workflow</li> <li>Configuring DOC\u00b2 App Status Trigger node</li> <li>Configuring Google Drive node</li> <li>Create blank workflow</li> </ul>","title":"Google Drive"},{"location":"tags/#guide","text":"<ul> <li>DOC\u00b2 - OnBoarding</li> </ul>","title":"Guide"},{"location":"tags/#http-request","text":"<ul> <li>RabbitMQ</li> </ul>","title":"HTTP Request"},{"location":"tags/#http-requests","text":"<ul> <li>Making HTTP Requests</li> </ul>","title":"HTTP Requests"},{"location":"tags/#help","text":"<ul> <li>Enable Feedback Function</li> <li>Enable Feedback Function</li> </ul>","title":"Help"},{"location":"tags/#homepage","text":"<ul> <li>Dashboard</li> <li>Deployment</li> <li>User Dashboard</li> </ul>","title":"Homepage"},{"location":"tags/#how-to","text":"<ul> <li>Creating nodes</li> </ul>","title":"How To"},{"location":"tags/#how-to_1","text":"<ul> <li>Workflow\u00b2 combined with MAUTIC</li> <li>Workflow\u00b2 combined with MAUTIC</li> </ul>","title":"How-To"},{"location":"tags/#idm","text":"<ul> <li>Watchdog Configuration</li> <li>How to create a IDM mapping file</li> <li>Export to Infor IDM</li> <li>Export to Infor ION and IDM</li> </ul>","title":"IDM"},{"location":"tags/#ion","text":"<ul> <li>How to create an Infor ION file</li> <li>Export to Infor ION and IDM</li> </ul>","title":"ION"},{"location":"tags/#import","text":"<ul> <li>E-Mail</li> <li>Fileshare Import</li> <li>Import</li> <li>Manual Import</li> </ul>","title":"Import"},{"location":"tags/#importing-documents","text":"<ul> <li>Import from DOC\u00b2</li> </ul>","title":"Importing documents"},{"location":"tags/#infor","text":"<ul> <li>Configuring SSO in Infor Cloud</li> <li>Export</li> <li>DOC\u00b2 to Infor OS</li> <li>How to create a BOD mapping file</li> <li>How to create a IDM mapping file</li> <li>Export to Infor IDM</li> <li>Export to Infor ION and IDM</li> <li>PO Matching</li> <li>Infor BOD Mapping</li> </ul>","title":"Infor"},{"location":"tags/#infor-cloudsuite","text":"<ul> <li>Infor BOD Mapping</li> </ul>","title":"Infor CloudSuite"},{"location":"tags/#infor-ln","text":"<ul> <li>DOC\u00b2 - Infor Use Cases</li> <li>Infor BOD Mapping</li> </ul>","title":"Infor LN"},{"location":"tags/#infor-m3","text":"<ul> <li>DOC\u00b2 - Infor Use Cases</li> <li>Infor BOD Mapping</li> </ul>","title":"Infor M3"},{"location":"tags/#infor-os","text":"<ul> <li>Export to Infor ION and IDM</li> <li>WF\u00b2 Approval with Doc\u00b2</li> </ul>","title":"Infor OS"},{"location":"tags/#initial-setup","text":"<ul> <li>DOC\u00b2 - OnBoarding</li> </ul>","title":"Initial Setup"},{"location":"tags/#insight2","text":"<ul> <li>Insight\u00b2 Action</li> <li>Insight\u00b2 Data Source</li> </ul>","title":"Insight\u00b2"},{"location":"tags/#installation","text":"<ul> <li>Installation &amp; Config</li> <li>Installation &amp; Config</li> <li>TE\u00b2 Installation &amp; Config</li> </ul>","title":"Installation"},{"location":"tags/#introduction","text":"<ul> <li>Welcome to FLOW\u00b2</li> </ul>","title":"Introduction"},{"location":"tags/#invoice","text":"<ul> <li>PO Matching - Invoices</li> </ul>","title":"Invoice"},{"location":"tags/#items","text":"<ul> <li>Items</li> </ul>","title":"Items"},{"location":"tags/#kv2","text":"<ul> <li>All extracted fields</li> <li>KV\u00b2 - Getting Started</li> <li>How to deal with different VAT amounts</li> <li>How to delete a KV\u00b2Plugin rule from the Database</li> <li>Installation &amp; Config</li> <li>KV\u00b2 Tutorial</li> <li>Limitations of KV\u00b2 Plugin</li> <li>Training KV2 for Table Extraction</li> </ul>","title":"KV\u00b2"},{"location":"tags/#kv2-plugin","text":"<ul> <li>Restart Ephesoft on Cloud</li> <li>Restart Ephesoft On Premise</li> </ul>","title":"KV\u00b2 Plugin"},{"location":"tags/#kafka","text":"<ul> <li>Kafka</li> </ul>","title":"Kafka"},{"location":"tags/#keyboard","text":"<ul> <li>Keyboard</li> </ul>","title":"Keyboard"},{"location":"tags/#ln","text":"<ul> <li>Watchdog Configuration</li> <li>PO Matching - Invoices</li> </ul>","title":"LN"},{"location":"tags/#learn-the-basics","text":"<ul> <li>Welcome to Workflow\u00b2</li> </ul>","title":"Learn the basics"},{"location":"tags/#license","text":"<ul> <li>License</li> </ul>","title":"License"},{"location":"tags/#limitations","text":"<ul> <li>Limitations of KV\u00b2 Plugin</li> </ul>","title":"Limitations"},{"location":"tags/#line-items","text":"<ul> <li>Table Extraction</li> </ul>","title":"Line Items"},{"location":"tags/#linux","text":"<ul> <li>Watchdog for Linux</li> </ul>","title":"Linux"},{"location":"tags/#local-export","text":"<ul> <li>Watchdog Configuration</li> </ul>","title":"Local Export"},{"location":"tags/#mautic","text":"<ul> <li>Workflow\u00b2 combined with MAUTIC</li> <li>Workflow\u00b2 combined with MAUTIC</li> </ul>","title":"MAUTIC"},{"location":"tags/#mapping","text":"<ul> <li>Extracted fields</li> <li>Mapping of columns</li> <li>How to create a BOD mapping file</li> <li>How to create a IDM mapping file</li> <li>Infor BOD Mapping</li> </ul>","title":"Mapping"},{"location":"tags/#master-data-validation","text":"<ul> <li>Master Data Validation</li> </ul>","title":"Master Data Validation"},{"location":"tags/#master-data-validation_1","text":"<ul> <li>Master data validation</li> </ul>","title":"Master data validation"},{"location":"tags/#metadata","text":"<ul> <li>Metadata</li> </ul>","title":"Metadata"},{"location":"tags/#mindee","text":"<ul> <li>Mindee</li> </ul>","title":"Mindee"},{"location":"tags/#mingle","text":"<ul> <li>WF\u00b2 Approval with Doc\u00b2</li> </ul>","title":"Ming.le"},{"location":"tags/#modules","text":"<ul> <li>Modules</li> </ul>","title":"Modules"},{"location":"tags/#netlify","text":"<ul> <li>Netlify</li> </ul>","title":"Netlify"},{"location":"tags/#node","text":"<ul> <li>Node</li> </ul>","title":"Node"},{"location":"tags/#node-reference","text":"<ul> <li>Cron</li> </ul>","title":"Node Reference"},{"location":"tags/#ocr","text":"<ul> <li>OCR View</li> <li>Detect inside pages</li> <li>Getting Started</li> <li>OCR API</li> <li>OCR Server Process</li> </ul>","title":"OCR"},{"location":"tags/#ocr-api","text":"<ul> <li>Installation &amp; Config</li> </ul>","title":"OCR API"},{"location":"tags/#ocr-server","text":"<ul> <li>Overview</li> </ul>","title":"OCR Server"},{"location":"tags/#ocr2","text":"<ul> <li>Installation &amp; Config</li> </ul>","title":"OCR\u00b2"},{"location":"tags/#on-prem","text":"<ul> <li>Restart Ephesoft On Premise</li> </ul>","title":"On Prem"},{"location":"tags/#onboarding","text":"<ul> <li>DOC\u00b2 - OnBoarding</li> </ul>","title":"OnBoarding"},{"location":"tags/#onboarding-guide","text":"<ul> <li>FLOW\u00b2 Onboarding Guide</li> </ul>","title":"Onboarding Guide"},{"location":"tags/#order-confirmation","text":"<ul> <li>PO Matching - Order Confirmation</li> </ul>","title":"Order Confirmation"},{"location":"tags/#other-settings","text":"<ul> <li>General Settings</li> </ul>","title":"Other Settings"},{"location":"tags/#overview","text":"<ul> <li>Dashboard</li> <li>Deployment</li> <li>Workflow\u00b2 - Overview</li> </ul>","title":"Overview"},{"location":"tags/#pdf","text":"<ul> <li>Merge/Split PDF</li> </ul>","title":"PDF"},{"location":"tags/#po-matching","text":"<ul> <li>DOC\u00b2 - Infor Use Cases</li> <li>Modules</li> <li>PO Matching - Delivery Notes</li> <li>PO Matching - Invoices</li> <li>PO Matching - Order Confirmation</li> <li>PO Matching</li> </ul>","title":"PO Matching"},{"location":"tags/#password","text":"<ul> <li>Users</li> </ul>","title":"Password"},{"location":"tags/#peppol","text":"<ul> <li>Company Information</li> <li>Zugferd and Peppol</li> </ul>","title":"Peppol"},{"location":"tags/#pipedrive","text":"<ul> <li>Pipedrive</li> </ul>","title":"Pipedrive"},{"location":"tags/#plugin","text":"<ul> <li>KV\u00b2 - Getting Started</li> <li>How to deal with different VAT amounts</li> <li>How to delete a KV\u00b2Plugin rule from the Database</li> <li>Installation &amp; Config</li> <li>KV\u00b2 Tutorial</li> <li>Limitations of KV\u00b2 Plugin</li> <li>Training KV2 for Table Extraction</li> <li>Ephesoft - External Application</li> <li>TE\u00b2 Plugin</li> <li>TE\u00b2 Tutorial</li> <li>TE\u00b2 Installation &amp; Config</li> <li>Infor BOD Mapping</li> </ul>","title":"Plugin"},{"location":"tags/#postgres","text":"<ul> <li>Postgres</li> </ul>","title":"Postgres"},{"location":"tags/#prerequisites-kafka","text":"<ul> <li>Kafka</li> </ul>","title":"Prerequisites Kafka"},{"location":"tags/#prerequisites-mindee","text":"<ul> <li>Mindee</li> </ul>","title":"Prerequisites Mindee"},{"location":"tags/#prerequisites-netlify","text":"<ul> <li>Netlify</li> </ul>","title":"Prerequisites Netlify"},{"location":"tags/#prerequisites-postgres","text":"<ul> <li>Postgres</li> </ul>","title":"Prerequisites Postgres"},{"location":"tags/#prerequisites-rabbitmq","text":"<ul> <li>RabbitMQ</li> </ul>","title":"Prerequisites RabbitMQ"},{"location":"tags/#prerequisites-strapi","text":"<ul> <li>Strapi</li> </ul>","title":"Prerequisites Strapi"},{"location":"tags/#prerequisites-xero","text":"<ul> <li>Xero</li> </ul>","title":"Prerequisites Xero"},{"location":"tags/#purchase-order","text":"<ul> <li>Modules</li> </ul>","title":"Purchase Order"},{"location":"tags/#rss-read","text":"<ul> <li>RSS Read</li> </ul>","title":"RSS Read"},{"location":"tags/#rabbitmq","text":"<ul> <li>RabbitMQ</li> <li>RabbitMQ</li> </ul>","title":"RabbitMQ"},{"location":"tags/#read-binary-files","text":"<ul> <li>Read Binary Files</li> </ul>","title":"Read Binary Files"},{"location":"tags/#read-pdf","text":"<ul> <li>Read PDF</li> </ul>","title":"Read PDF"},{"location":"tags/#rename","text":"<ul> <li>Rename JSON Key</li> </ul>","title":"Rename"},{"location":"tags/#rename-keys","text":"<ul> <li>Rename Keys</li> </ul>","title":"Rename Keys"},{"location":"tags/#repository","text":"<ul> <li>TE\u00b2 Plugin</li> </ul>","title":"Repository"},{"location":"tags/#respond-to-webhook","text":"<ul> <li>Respond to Webhook</li> </ul>","title":"Respond to Webhook"},{"location":"tags/#restart","text":"<ul> <li>Restart Ephesoft on Cloud</li> <li>Restart Ephesoft On Premise</li> </ul>","title":"Restart"},{"location":"tags/#rounding-errors","text":"<ul> <li>Amount Settings</li> </ul>","title":"Rounding Errors"},{"location":"tags/#row","text":"<ul> <li>Manual row selection</li> </ul>","title":"Row"},{"location":"tags/#rules","text":"<ul> <li>Save and delete rules</li> </ul>","title":"Rules"},{"location":"tags/#sse-trigger","text":"<ul> <li>SSE Trigger</li> </ul>","title":"SSE Trigger"},{"location":"tags/#ssh","text":"<ul> <li>SSH</li> </ul>","title":"SSH"},{"location":"tags/#sso","text":"<ul> <li>Configuring SSO in Infor Cloud</li> <li>SSO Settings</li> </ul>","title":"SSO"},{"location":"tags/#salesforce","text":"<ul> <li>Salesforce</li> </ul>","title":"Salesforce"},{"location":"tags/#salesmate","text":"<ul> <li>Salesmate</li> </ul>","title":"Salesmate"},{"location":"tags/#save","text":"<ul> <li>Save and delete rules</li> </ul>","title":"Save"},{"location":"tags/#seatable","text":"<ul> <li>SeaTable</li> </ul>","title":"SeaTable"},{"location":"tags/#securityscorecard","text":"<ul> <li>SecurityScorecard</li> </ul>","title":"SecurityScorecard"},{"location":"tags/#segment","text":"<ul> <li>Segment</li> </ul>","title":"Segment"},{"location":"tags/#selection","text":"<ul> <li>Manual row selection</li> </ul>","title":"Selection"},{"location":"tags/#send-email","text":"<ul> <li>Send Email</li> <li>Send Email</li> </ul>","title":"Send Email"},{"location":"tags/#sendgrid","text":"<ul> <li>SendGrid</li> </ul>","title":"SendGrid"},{"location":"tags/#sendy","text":"<ul> <li>Sendy</li> </ul>","title":"Sendy"},{"location":"tags/#server","text":"<ul> <li>OCR Server Process</li> </ul>","title":"Server"},{"location":"tags/#set","text":"<ul> <li>Set</li> </ul>","title":"Set"},{"location":"tags/#settings","text":"<ul> <li>Company Information</li> <li>Modules</li> <li>Amount Settings</li> <li>API</li> <li>Document Types</li> <li>Master Data Validation</li> <li>SSO Settings</li> <li>Users</li> <li>How to create an Infor ION file</li> <li>Export to FLOW\u00b2</li> <li>Advanced settings for table extraction</li> </ul>","title":"Settings"},{"location":"tags/#split-in-batches","text":"<ul> <li>Split In Batches</li> </ul>","title":"Split In Batches"},{"location":"tags/#spotify","text":"<ul> <li>Spotify</li> </ul>","title":"Spotify"},{"location":"tags/#spreadsheet-file","text":"<ul> <li>Spreadsheet File</li> </ul>","title":"Spreadsheet File"},{"location":"tags/#stackby","text":"<ul> <li>Stackby</li> </ul>","title":"Stackby"},{"location":"tags/#start","text":"<ul> <li>Getting Started</li> <li>Start</li> </ul>","title":"Start"},{"location":"tags/#stop-and-error","text":"<ul> <li>Stop And Error</li> </ul>","title":"Stop And Error"},{"location":"tags/#storyblok","text":"<ul> <li>Storyblok</li> </ul>","title":"Storyblok"},{"location":"tags/#strapi","text":"<ul> <li>Strapi</li> <li>Strapi</li> </ul>","title":"Strapi"},{"location":"tags/#strava","text":"<ul> <li>Strava</li> </ul>","title":"Strava"},{"location":"tags/#stripe","text":"<ul> <li>Stripe</li> </ul>","title":"Stripe"},{"location":"tags/#subscription","text":"<ul> <li>General Settings</li> </ul>","title":"Subscription"},{"location":"tags/#sugar","text":"<ul> <li>SugarCRM</li> </ul>","title":"Sugar"},{"location":"tags/#sugarcrm","text":"<ul> <li>SugarCRM</li> </ul>","title":"SugarCRM"},{"location":"tags/#supabase","text":"<ul> <li>Supabase</li> </ul>","title":"Supabase"},{"location":"tags/#switch","text":"<ul> <li>Switch</li> </ul>","title":"Switch"},{"location":"tags/#syncromsp","text":"<ul> <li>SyncroMSP</li> </ul>","title":"SyncroMSP"},{"location":"tags/#system-setup","text":"<ul> <li>System Setup</li> </ul>","title":"System Setup"},{"location":"tags/#te2","text":"<ul> <li>Ephesoft - External Application</li> <li>TE\u00b2 Plugin</li> <li>TE\u00b2 Tutorial</li> <li>TE\u00b2 Installation &amp; Config</li> <li>Infor BOD Mapping</li> </ul>","title":"TE\u00b2"},{"location":"tags/#table","text":"<ul> <li>Add new table column</li> <li>Advanced settings for table extraction</li> <li>Define tables and columns</li> <li>Table Extraction</li> <li>Training for Table Extraction</li> </ul>","title":"Table"},{"location":"tags/#table-extraction","text":"<ul> <li>Mapping of columns</li> <li>Modules</li> <li>Group function to extract data from tables</li> <li>Manual row selection</li> <li>Save and delete rules</li> <li>Training KV2 for Table Extraction</li> <li>Ephesoft - External Application</li> <li>TE\u00b2 Plugin</li> <li>TE\u00b2 Tutorial</li> <li>TE\u00b2 Installation &amp; Config</li> </ul>","title":"Table Extraction"},{"location":"tags/#tables","text":"<ul> <li>Group function to extract data from tables</li> </ul>","title":"Tables"},{"location":"tags/#taiga","text":"<ul> <li>Taiga</li> </ul>","title":"Taiga"},{"location":"tags/#tapfiliate","text":"<ul> <li>Tapfiliate</li> </ul>","title":"Tapfiliate"},{"location":"tags/#telegram","text":"<ul> <li>Telegram</li> </ul>","title":"Telegram"},{"location":"tags/#thehive","text":"<ul> <li>TheHive</li> </ul>","title":"TheHive"},{"location":"tags/#timescaledb","text":"<ul> <li>TimescaleDB</li> </ul>","title":"TimescaleDB"},{"location":"tags/#todoist","text":"<ul> <li>Todoist</li> </ul>","title":"Todoist"},{"location":"tags/#training","text":"<ul> <li>Mapping of columns</li> <li>Training for Table Extraction</li> <li>Training KV2 for Table Extraction</li> <li>Ephesoft - External Application</li> </ul>","title":"Training"},{"location":"tags/#transact","text":"<ul> <li>Restart Ephesoft on Cloud</li> </ul>","title":"Transact"},{"location":"tags/#transforming-data","text":"<ul> <li>Overview - Mapping and transforming data</li> </ul>","title":"Transforming data"},{"location":"tags/#travis-ci","text":"<ul> <li>Travis CI</li> </ul>","title":"Travis CI"},{"location":"tags/#trello","text":"<ul> <li>Trello</li> </ul>","title":"Trello"},{"location":"tags/#tutorial","text":"<ul> <li>KV\u00b2 Tutorial</li> </ul>","title":"Tutorial"},{"location":"tags/#twake","text":"<ul> <li>Twake</li> </ul>","title":"Twake"},{"location":"tags/#twilio","text":"<ul> <li>Twilio</li> </ul>","title":"Twilio"},{"location":"tags/#twist","text":"<ul> <li>Twist</li> </ul>","title":"Twist"},{"location":"tags/#twitter","text":"<ul> <li>Twitter</li> <li>Twitter</li> </ul>","title":"Twitter"},{"location":"tags/#typeform","text":"<ul> <li>Typeform</li> </ul>","title":"Typeform"},{"location":"tags/#understanding-document-review","text":"<ul> <li>DOC\u00b2 - OnBoarding</li> </ul>","title":"Understanding Document Review"},{"location":"tags/#unleashed-software","text":"<ul> <li>Unleashed Software</li> </ul>","title":"Unleashed Software"},{"location":"tags/#uplead","text":"<ul> <li>UpLead</li> <li>UpLead</li> </ul>","title":"UpLead"},{"location":"tags/#uptimerobot","text":"<ul> <li>UptimeRobot</li> <li>UptimeRobot</li> </ul>","title":"UptimeRobot"},{"location":"tags/#use-cases","text":"<ul> <li>DOC\u00b2 - Infor Use Cases</li> </ul>","title":"Use Cases"},{"location":"tags/#users","text":"<ul> <li>Users</li> </ul>","title":"Users"},{"location":"tags/#using-api","text":"<ul> <li>Strapi</li> </ul>","title":"Using API"},{"location":"tags/#using-api-key","text":"<ul> <li>Mindee</li> </ul>","title":"Using API Key"},{"location":"tags/#using-database-connection","text":"<ul> <li>Postgres</li> </ul>","title":"Using Database Connection"},{"location":"tags/#using-oauth","text":"<ul> <li>Xero</li> </ul>","title":"Using OAuth"},{"location":"tags/#using-code","text":"<ul> <li>Overview - Mapping and transforming data</li> </ul>","title":"Using code"},{"location":"tags/#vat","text":"<ul> <li>How to deal with different VAT amounts</li> </ul>","title":"VAT"},{"location":"tags/#validation","text":"<ul> <li>Document Validation</li> </ul>","title":"Validation"},{"location":"tags/#vero","text":"<ul> <li>Vero</li> <li>Vero</li> </ul>","title":"Vero"},{"location":"tags/#vonage","text":"<ul> <li>Vonage</li> <li>Vonage</li> </ul>","title":"Vonage"},{"location":"tags/#wait","text":"<ul> <li>Wait</li> </ul>","title":"Wait"},{"location":"tags/#watchdog","text":"<ul> <li>Watchdog for Linux</li> <li>Watchdog for Windows</li> <li>Watchdog Configuration</li> </ul>","title":"Watchdog"},{"location":"tags/#weather","text":"<ul> <li>Workflows for Weather Forecast</li> <li>Weather</li> <li>Weather</li> </ul>","title":"Weather"},{"location":"tags/#webex-by-cisco","text":"<ul> <li>Webex by Cisco</li> </ul>","title":"Webex by Cisco"},{"location":"tags/#webflow","text":"<ul> <li>Webflow</li> <li>Webflow</li> </ul>","title":"Webflow"},{"location":"tags/#webhook","text":"<ul> <li>Export</li> <li>Webhook</li> <li>Workflows for Weather Forecast</li> <li>Weather</li> <li>Webhook</li> </ul>","title":"Webhook"},{"location":"tags/#wekan","text":"<ul> <li>Wekan</li> <li>Wekan</li> </ul>","title":"Wekan"},{"location":"tags/#windows","text":"<ul> <li>Watchdog for Windows</li> </ul>","title":"Windows"},{"location":"tags/#wise","text":"<ul> <li>Wise</li> <li>Wise</li> </ul>","title":"Wise"},{"location":"tags/#woocommerce","text":"<ul> <li>WooCommerce</li> </ul>","title":"WooCommerce"},{"location":"tags/#wordpress","text":"<ul> <li>WordPress</li> </ul>","title":"WordPress"},{"location":"tags/#workflow","text":"<ul> <li>Workflow\u00b2 Examples</li> <li>Welcome to Workflow\u00b2</li> <li>Welcome to Workflow\u00b2</li> <li>Overview - Mapping and transforming data</li> <li>Overview</li> </ul>","title":"Workflow"},{"location":"tags/#workflow-trigger","text":"<ul> <li>Workflow Trigger</li> </ul>","title":"Workflow Trigger"},{"location":"tags/#workflow-notes","text":"<ul> <li>Workflow notes</li> </ul>","title":"Workflow notes"},{"location":"tags/#workflow2","text":"<ul> <li>DOC\u00b2 with Workflow\u00b2</li> <li>WF\u00b2 Approval with Doc\u00b2</li> <li>Doc\u00b2 export to Excel</li> <li>Rename JSON Key</li> <li>Workflow\u00b2 combined with MAUTIC</li> <li>Workflow\u00b2 combined with MAUTIC</li> <li>Export Doc2 to Google Drive</li> <li>Activate Workflow</li> <li>Configuring DOC\u00b2 App Status Trigger node</li> <li>Configuring Google Drive node</li> <li>Create blank workflow</li> <li>Workflows for Weather Forecast</li> <li>Weather</li> <li>Weather</li> <li>Code Example</li> <li>Code Example - Query JSON</li> <li>Error handling</li> <li>Looping</li> <li>Merging</li> <li>Activation Trigger</li> <li>Cron</li> <li>Date &amp; Time</li> <li>Execute Command</li> <li>FTP</li> <li>Function</li> <li>Function Item</li> <li>GraphQL</li> <li>Read Binary Files</li> <li>Read PDF</li> <li>Rename Keys</li> <li>Respond to Webhook</li> <li>RSS Read</li> <li>Send Email</li> <li>Set</li> <li>Split In Batches</li> <li>Spreadsheet File</li> <li>SSE Trigger</li> <li>SSH</li> <li>Start</li> <li>Stop And Error</li> <li>Switch</li> <li>Wait</li> <li>Webhook</li> <li>Workflow Trigger</li> <li>Write Binary File</li> <li>XML</li> <li>Creating nodes</li> <li>Making HTTP Requests</li> <li>Action Network</li> <li>ActiveCampaign</li> <li>Affinity</li> <li>Agile CRM</li> <li>Airtable</li> <li>AMQP</li> <li>APITemplate.io</li> <li>Asana</li> <li>Automizy</li> <li>Autopilot</li> <li>AWS</li> <li>BambooHR</li> <li>Bannerbear</li> <li>Baserow</li> <li>Beeminder</li> <li>Bitbucket</li> <li>Bitly</li> <li>Bitwarden</li> <li>Box</li> <li>Brandfetch</li> <li>Bubble</li> <li>Calendly</li> <li>Chargebee</li> <li>CircleCI</li> <li>Webex by Cisco</li> <li>Clearbit</li> <li>ClickUp</li> <li>Clockify</li> <li>Cockpit</li> <li>Coda</li> <li>Kafka</li> <li>Mindee</li> <li>Netlify</li> <li>Postgres</li> <li>RabbitMQ</li> <li>Salesforce</li> <li>Salesmate</li> <li>SeaTable</li> <li>SecurityScorecard</li> <li>Segment</li> <li>Send Email</li> <li>SendGrid</li> <li>Sendy</li> <li>Strapi</li> <li>Twitter</li> <li>Typeform</li> <li>uProc</li> <li>UpLead</li> <li>UptimeRobot</li> <li>urlscan.io</li> <li>Vero</li> <li>Vonage</li> <li>Webflow</li> <li>Wekan</li> <li>Wise</li> <li>Xero</li> <li>Action Network</li> <li>Discord</li> <li>Pipedrive</li> <li>RabbitMQ</li> <li>Spotify</li> <li>Stackby</li> <li>Storyblok</li> <li>Strapi</li> <li>Strava</li> <li>Stripe</li> <li>SugarCRM</li> <li>Supabase</li> <li>SyncroMSP</li> <li>Taiga</li> <li>Tapfiliate</li> <li>Telegram</li> <li>TheHive</li> <li>TimescaleDB</li> <li>Todoist</li> <li>Travis CI</li> <li>Trello</li> <li>Twake</li> <li>Twilio</li> <li>Twist</li> <li>Twitter</li> <li>Unleashed Software</li> <li>UpLead</li> <li>uProc</li> <li>UptimeRobot</li> <li>urlscan.io</li> <li>Vero</li> <li>Vonage</li> <li>Webflow</li> <li>Wekan</li> <li>Wise</li> <li>WooCommerce</li> <li>WordPress</li> <li>Xero</li> <li>YouTube</li> <li>Yourls</li> <li>Zammad</li> <li>Zendesk</li> <li>Zoho CRM</li> <li>Zoom</li> <li>License</li> <li>Workflow\u00b2 - Overview</li> <li>Connection</li> <li>Items</li> <li>Node</li> <li>Workflow notes</li> <li>Workflow</li> </ul>","title":"Workflow\u00b2"},{"location":"tags/#write-binary-file","text":"<ul> <li>Write Binary File</li> </ul>","title":"Write Binary File"},{"location":"tags/#xml","text":"<ul> <li>XML</li> </ul>","title":"XML"},{"location":"tags/#xero","text":"<ul> <li>Xero</li> <li>Xero</li> </ul>","title":"Xero"},{"location":"tags/#youtube","text":"<ul> <li>YouTube</li> </ul>","title":"YouTube"},{"location":"tags/#yourls","text":"<ul> <li>Yourls</li> </ul>","title":"Yourls"},{"location":"tags/#zammad","text":"<ul> <li>Zammad</li> </ul>","title":"Zammad"},{"location":"tags/#zendesk","text":"<ul> <li>Zendesk</li> </ul>","title":"Zendesk"},{"location":"tags/#zoho-crm","text":"<ul> <li>Zoho CRM</li> </ul>","title":"Zoho CRM"},{"location":"tags/#zoom","text":"<ul> <li>Zoom</li> </ul>","title":"Zoom"},{"location":"tags/#zugferd","text":"<ul> <li>Company Information</li> <li>Zugferd and Peppol</li> </ul>","title":"Zugferd"},{"location":"tags/#create","text":"<ul> <li>Creating nodes</li> </ul>","title":"create"},{"location":"tags/#delete-rules","text":"<ul> <li>How to delete a KV\u00b2Plugin rule from the Database</li> </ul>","title":"delete rules"},{"location":"tags/#document-management-system-dms","text":"<ul> <li>Getting Started</li> </ul>","title":"document management system (DMS)"},{"location":"tags/#extract","text":"<ul> <li>Getting Started</li> </ul>","title":"extract"},{"location":"tags/#manual-import","text":"<ul> <li>Import</li> </ul>","title":"manual Import"},{"location":"tags/#manually","text":"<ul> <li>Manual row selection</li> </ul>","title":"manually"},{"location":"tags/#metadata_1","text":"<ul> <li>Getting Started</li> </ul>","title":"metadata"},{"location":"tags/#n8n","text":"<ul> <li>License</li> </ul>","title":"n8n"},{"location":"tags/#new-service-provider","text":"<ul> <li>Configuring SSO in Infor Cloud</li> </ul>","title":"new service provider"},{"location":"tags/#nodes","text":"<ul> <li>Creating nodes</li> <li>Overview</li> </ul>","title":"nodes"},{"location":"tags/#transform-regular-documents-into-ocrd-ones","text":"<ul> <li>Overview</li> </ul>","title":"transform regular documents into OCR'd ones"},{"location":"tags/#uproc","text":"<ul> <li>uProc</li> <li>uProc</li> </ul>","title":"uProc"},{"location":"tags/#urlscanio","text":"<ul> <li>urlscan.io</li> <li>urlscan.io</li> </ul>","title":"urlscan.io"},{"location":"Release/Release_notes/","tags":["Change Log"],"text":"<p> FIXED</p> <p> NEW FEATURE</p> <p> IMPROVEMENT</p>","title":"Changelog"},{"location":"Release/Release_notes/#release-notes","tags":["Change Log"],"text":"","title":"Release Notes"},{"location":"Release/Release_notes/#115","tags":["Change Log"],"text":"<ul> <li> FIXED: Invalid Authorization Code when login</li> <li> NEW FEATURE: Added Link to Changelog</li> <li> NEW FEATURE: Login - Implementation of language switch</li> <li> NEW FEATURE: Added SugarCRM Node Icon to Workflow\u00b2</li> <li> IMPROVEMENT: Customization of permissions for users - User ist not able to switch products on and off - only Admin can</li> <li> NEW FEATURE: Warning before turning off/deleting Workflow - manual input required</li> <li> IMPROVEMENT: Adding new domain for Workflow\u00b2 / Moving the domain for Workflow\u00b2 from Modules to Apps</li> <li> FIXED: errors on displaying PO Matching Screen</li> <li> IMPROVEMENT: to UI (Translations, Colours and position of Icons, Buttons, Cloud while uploading documents)</li> <li> IMPROVEMENT: for e-mail notifications and e-mail verification</li> <li> FIXED: errors uploading documents</li> <li> IMPROVEMENT: Clarification FORCE OCR functionality when headers of tables are not being extracted (instead numbers got extracted)</li> <li> IMPROVEMENT: in User registration (verify Email, admin/user,Reset/Forgot Password)</li> <li> IMPROVEMENT: for email notifications - registration, Add user, send confirmation email again</li> <li> FIXED: Lack of access to the field settings</li> <li> NEW FEATURE: Broken pages: Implementation of solution using provided normalized coordinates by api</li> <li> FIXED: Document Approval - Invalid Document</li> <li> FIXED: Error while uploading documents</li> <li> IMPROVEMENT: Building functionality with safari browser</li> <li> NEW FEATURE: Link to Apps when using Workflow\u00b2</li> <li> NEW FEATURE: Login with LinkedIn</li> <li> IMPROVEMENT: embed SSL certificate</li> <li> IMPROVEMENT: TE\u00b2: cosmetic repairs UI</li> <li> FIXED: Zugferd Export - Pdf with xml attachment</li> <li> IMPROVEMENT: Length of password</li> <li> IMPROVEMENT: Implemenation of HELP Links to documentation in DOC\u00b2</li> <li> NEW FEATURE: Login with google</li> <li> NEW FEATURE: Login with Microsoft</li> <li> FIXED: issues with restarted documents got stuck on status restarted</li> <li> IMPROVEMENT: in training specific fields</li> <li> IMPROVEMENT: confirm e-mail and password with Enter when logging in</li> <li> IMPROVEMENT: Changed button to activate/deactivate N8N from Settings Modules  to APPS</li> <li> IMPROVEMENT: Changed dropdown 'Origin' on Field validation page to 'Amount &amp; Date Format'</li> <li> FIXED: TE - Missing Training Mode Button</li> <li> IMPROVEMENT: in classifying the correct document type</li> <li> NEW FEATURE: Email notification when uploaded/imported documents are Ready For Validation can be enabled/disabled in Settings Email Notification</li> <li> FIXED: error on validation screen after adjusting field settings for Zugferd doctype invoice</li> <li> NEW FEATURE: Page division of one pdf by barcode</li> <li> FIXED: redirecting document restarted on third page to first page of all uploaded documents</li> <li> IMPROVEMENT: redirect to dashboard instead of success page after export</li> <li> NEW FEATURE: General Settings for documents</li> <li> FIXED: fields show up empty even though data is recognized</li> <li> NEW FEATURE: Implementation of Workflow Nodes for DOC\u00b2 (assign employee, extract invoice, status trigger)</li> <li> IMPROVEMENT:  TE\u00b2 - select new locale for table_train_v3</li> <li> IMPROVEMENT: Button to enable or disable export configuration</li> <li> IMPROVEMENT: Confirmation Box for all delete buttons</li> <li> IMPROVEMENT: Updated structure to handle multiple OCRs</li> </ul>","title":"1.15"},{"location":"Release/Release_notes/#114","tags":["Change Log"],"text":"<ul> <li> FIXED: Header line disappearing when activating training mode in TE2 (via Ephesoft)</li> <li> Fixed: TE - Calculation details are not extracted</li> <li> Fixed: Extracted columns don't show on page 2</li> <li> NEW FEATURE Column selection should not be enable after selecting the tick</li> <li> FIXED TE - Table is not extracted correctly</li> <li> NEW FEATURE Search PO Matching can we use alike</li> <li> IMPROVEMENT Table Column Sort for PO Line Table as Done in TEv3</li> <li> NEW FEATURE Table data editable and show errors without   having to enable table training mode</li> <li> IMPROVEMENT TE\u00b2 V2 STAGE - Ungroup button \"hidden\"</li> <li> NEW FEATURE No mapping on hide/show for amount fields</li> <li> IMPROVEMENT Watcher exported document should be opened in exported/finished mode</li> <li> FIXED Document Export table data</li> <li> FIXED Click on cancel changes the language</li> <li> NEW FEATURE trash icon on field validation and delete rules button</li> <li> NEW FEATURE Add Training mode flag for all api calls on TE3</li> <li> NEW FEATURE Set istabletraining_doc attribute to true when sending call from table training page</li> <li> IMPROVEMENT Remove delete rules button from the field validation screen</li> <li> FIXED Issue with Restore extracted columns</li> <li> IMPROVEMENT Correct translation for NOCOLUMNSFOUND for es-es and fr</li> <li> NEW FEATURE Table training</li> <li> FIXED TE V3 Error when we test with Swiss Format</li> <li> FIXED TE V3 Row area keeps changing</li> <li> NEW FEATURE all reformat api call send difference of format_options</li> <li> NEW FEATURE Ability to make line item table from PO Table</li> <li> IMPROVEMENT Only 10 pages of a PDF are displayed</li> <li> NEW FEATURE AI Indicator button for training mode</li> <li> FIXED TE Can't find the Table</li> <li> NEW FEATURE Translation on Stage missing: \"Auftragsdaten\"</li> <li> FIXED Table Extraction Error</li> <li> NEW FEATURE Overlay for Custom Color</li> <li> NEW FEATURE Show number by fields</li> <li> NEW FEATURE Delete a Custom Table Column</li> <li> NEW FEATURE table Extraction new flow implementation</li> <li> FIXED Number are not extracted all</li> <li> NEW FEATURE KOMISSION (NACHNAME, VORNAME) / MA\u00dfNUMMER</li> <li> NEW FEATURE Zugpferd Export UI</li> <li> NEW FEATURE PO table sort</li> <li> FIXED Auftragsbest\u00e4tigung gets to Rechnung</li> <li> IMPROVEMENT Allow more than 10 pages in PDF in Doc\u00b2</li> <li> NEW FEATURE Document restart alert if it takes more than 5 minutes</li> <li> NEW FEATURE Keystrokes Hints Tooltip</li> <li> IMPROVEMENT PO image component and its functionality</li> <li> IMPROVEMENT languages drop down is not appearing</li> <li> NEW FEATURE Doc\u00b2 Export Flow\u00b2</li> <li> NEW FEATURE PO - Help</li> <li> FIXED After addition of two new fields, the existing tests are breaking</li> <li> FIXED DOC\u00b2 TableExtraction, can't delete a columns</li> <li> FIXED Supplier: IDG, DOC\u00b2 doesn't work but TE\u00b2 does?!</li> <li> IMPROVEMENT Total is trainded wrong</li> <li> FIXED Amount Formatting Issues</li> <li> FIXED Button Visibility issue on Some invoice</li> <li> NEW FEATURE \" Full \" row should show if all other fields are empty</li> <li> NEW FEATURE Setting - Master Data Validation</li> <li> IMPROVEMENT Number value Formatting</li> <li> NEW FEATURE PEPPOL BIS Billing 3.0</li> <li> FIXED Checkbox extraction not working correctly</li> <li> NEW FEATURE Option to switch table extraction version</li> <li> NEW FEATURE Auftrag - Accept / Recject PO Update</li> <li> IMPROVEMENT Table - Quantity bug</li> <li> NEW FEATURE Kommission</li> <li> NEW FEATURE Infor Table Export</li> <li> IMPROVEMENT More table extraction settings</li> <li> NEW FEATURE Save dashboard filters and selected language Unless user clear it</li> <li> NEW FEATURE Custom Field Label and Fuzzy</li> <li> FIXED The document fields and table is not mapped which was already exported</li> <li> IMPROVEMENT Table Train - Error in Group mapping needs to be set again</li> <li> NEW FEATURE Doc2API dashboard API Test</li> <li> NEW FEATURE Basic UI Test for Doc2Landing</li> <li> IMPROVEMENT export configuration update</li> <li> IMPROVEMENT zammad customer is ticket autor</li> <li> NEW FEATURE Table Export Column Mappings and Formatted Data</li> <li> FIXED [Extraction View] Mapped Columns</li> <li> IMPROVEMENT Advance Settings on Table extraction view</li> <li> FIXED Calc is wrong</li> <li> IMPROVEMENT Supplierer Match not working</li> </ul>","title":"1.14"},{"location":"Release/Release_notes/#113","tags":["Change Log"],"text":"<ul> <li> FIXED Rules are not working</li> <li> FIXED Button delete rule is not working</li> <li> FIXED AI Indicator update counter</li> <li> NEW FEATURE New OCR 13.3.0</li> <li> FIXED DOC\u00b2 TE V3: Save rules doesn't work</li> <li> FIXED DOC\u00b2 TE V3: What is being extracted? Weird &amp; Wrong data</li> <li> NEW FEATURE Button make PO auto matching</li> <li> FIXED Exporting a document, if you re-open the file, the layout is standard</li> <li> FIXED Fields that are marked red prevent exporting</li> <li> IMPROVEMENT Artikelnummer ist not calculated automatically when pressing the +/- button</li> <li> IMPROVEMENT Save data before redirect to PO Page from Field Validation and Table Extraction</li> <li> NEW FEATURE Restore Extracted columns on a button click</li> <li> NEW FEATURE Mapping Columns Dropdown in Alphabetical Order</li> <li> NEW FEATURE Delete and Save Rule button</li> <li> FIXED Document Form - Export cannot be triggered</li> <li> IMPROVEMENT Doc2app Translation - Pending</li> <li> NEW FEATURE No column mapping option for \"Item Number\"</li> <li> FIXED Document Caching Issue after doc is deleted</li> <li> NEW FEATURE Add 3 more fields in in the advanced setting and also in response</li> <li> IMPROVEMENT Overlay color issue</li> <li> FIXED TE Columns remapping not working</li> <li> FIXED Row selection is not working</li> <li> FIXED Table Extraction V3 Cache issue</li> <li> IMPROVEMENT Key or Value can not be empty</li> <li> FIXED TE Module settings aren't saved</li> <li> FIXED cE and Cf fields switched</li> <li> FIXED Document Checkboxes aren't working</li> <li> NEW FEATURE colors will be populated based on the closest match to the already defined colors list</li> <li> NEW FEATURE Checkbox Paar is not correct</li> <li> FIXED Account search for Company Order based on the Customer Number</li> <li> NEW FEATURE PO The Header of both tables are always german</li> <li> FIXED Invoice Number at Delivery Note doc type - change to Order Number</li> <li> FIXED Title in PO is wrong - Should be based on the doc type</li> <li> FIXED f-key is select the Search but it types f as well</li> <li> IMPROVEMENT The font size of the Restore Defaults is too small, need to increase on Field Settings screen</li> <li> IMPROVEMENT Placeholder for calc fields</li> <li> NEW FEATURE Rechtschreibfehler bei Lieferschein fix</li> <li> IMPROVEMENT Extra space between additional amount fields</li> <li> NEW FEATURE highlight group column</li> <li> IMPROVEMENT Add PO ICON in Dashboard</li> <li> NEW FEATURE Documentation for Table Extraction</li> <li> NEW FEATURE Calc was not trained after 2 times exporting</li> <li> FIXED Mapping removed but still there</li> <li> IMPROVEMENT Table training page in Doc2</li> <li> NEW FEATURE Dashboard List update to sort the Columns</li> <li> IMPROVEMENT MWST - make field green</li> <li> IMPROVEMENT Move error message Popup</li> <li> IMPROVEMENT Issue with column selection - looses selection</li> <li> FIXED TE3 column selection near the edge is difficult</li> <li> IMPROVEMENT Dashboard Pagination Issue</li> <li> FIXED table data edit mode -&gt; column selected but no indication on table which row is selected</li> <li> IMPROVEMENT gettexttable column background color remain purple on firefox</li> <li> IMPROVEMENT Click on column send call for gettexttable without selection</li> <li> NEW FEATURE Error on upload we add unit</li> <li> FIXED Double Click TE to extract</li> <li> NEW FEATURE Checkbox export description - Infor ( Cloud or OnPremise )</li> <li> IMPROVEMENT Selecting Images should only be possible with edit</li> <li> FIXED Extra Button when PO Matching is enabled</li> <li> NEW FEATURE All customer Invoices Error out</li> <li> FIXED Option to refresh user settings in Account Settings</li> <li> NEW FEATURE clean image required to be used in html</li> <li> NEW FEATURE PO Image panel improvements</li> <li> IMPROVEMENT Artikelnummer erfassen</li> <li> NEW FEATURE doc2app table extraction page for ephesoft and others</li> <li> NEW FEATURE selected area edit should not be enable on column mode</li> <li> FIXED Table Train for TE\u00b2</li> <li> NEW FEATURE different url for image based on source of the image in detail view response</li> <li> NEW FEATURE click on column should also open the mapping column in extraction view</li> <li> IMPROVEMENT quotation mark in amount swiss invoice support</li> <li> NEW FEATURE Customers documents are not finished automatic</li> <li> FIXED Form from Company</li> <li> NEW FEATURE PO - Matching</li> <li> NEW FEATURE Document Classification Change</li> <li> IMPROVEMENT API Endpoint to manage organisation preferences</li> <li> NEW FEATURE Group by show object object instead of proper line item</li> <li> NEW FEATURE Calc MwSt.</li> <li> NEW FEATURE Free Tax is mapped wrong</li> </ul>","title":"1.13"},{"location":"Release/Release_notes/#110","tags":["Change Log"],"text":"<ul> <li> FIXED Add browser support for Safari</li> <li> NEW FEATURE Option to refresh user settings in Account Settings</li> <li> FIXED Missing link to IDM</li> </ul>","title":"1.10"},{"location":"Release/Release_notes/#19","tags":["Change Log"],"text":"<ul> <li> FIXED edit export config is not working</li> <li> FIXED Doc2Landing - No Back by Table</li> <li> NEW FEATURE Add the Address in the fuzzy DB</li> <li> FIXED Fuzzy Error - Auftrag not working</li> <li> FIXED Lieferschein is shown as Invoice in the dashboard</li> <li> NEW FEATURE Calc Fields Optional Due Date</li> <li> NEW FEATURE Button for auto Detecting Tables</li> </ul>","title":"1.9"},{"location":"Release/Release_notes/#18","tags":["Change Log"],"text":"<ul> <li> FIXED Can not check config files or download here</li> <li> FIXED WatchDog - Logik Error Fix</li> <li> FIXED edit export config is not working</li> <li> FIXED Dutch Invoice extraction isn't working</li> <li> FIXED Belgium Invoice extraction isn't working</li> <li> FIXED French Invoice extraction isn't working</li> <li> FIXED Zoom + Column is not working</li> <li> FIXED Column removal not possible</li> <li> FIXED Order Confirmation Table not working</li> <li> FIXED missing translation on dashboard</li> <li> NEW FEATURE resize handlers visible not resizing the selected area</li> <li> FIXED Deleted Table Column can be mapped</li> <li> FIXED TE column change doesn't save the changes</li> <li> NEW FEATURE Doc\u00b2 - Flow\u00b2 Export Setting is not open</li> <li> IMPROVEMENT Table train zoom in/out pdf</li> <li> IMPROVEMENT Table Train field draw click instead click hold</li> <li> FIXED Dashboard - DocType is not Translated</li> <li> IMPROVEMENT Console Errors are shown when logged in successfully</li> <li> FIXED Selected currency: \u20ac finishing not possible</li> <li> NEW FEATURE [TableExtractionView] Resize selected areas</li> <li> NEW FEATURE doc2 validation: navigate with keyboard</li> <li> IMPROVEMENT Dashboard status - grid view</li> <li> IMPROVEMENT increase font of tooltip</li> <li> NEW FEATURE Tooltip for the Format for Amount + Date</li> <li> FIXED origin dropdown sometimes dont show options</li> <li> FIXED Upload File Drag &amp; Drop works select is not working</li> <li> NEW FEATURE Total Discount Training</li> <li> FIXED Draw Columns and change the size - the columns are lost</li> <li> FIXED Doc\u00b2 Change Table Size is not working</li> <li> FIXED multiple selected area draw</li> <li> FIXED Line item mapping resets when switch to field validation screen</li> <li> NEW FEATURE Doc\u00b2 - &gt; Export to Flow\u00b2</li> <li> NEW FEATURE dynamic validation screen layout</li> <li> NEW FEATURE Hide Doctype option</li> <li> FIXED Title of the page is wrong in Settings &gt; PO Module</li> <li> FIXED Only Admins should have access to settings</li> <li> IMPROVEMENT Design Changes on Extraction view</li> <li> FIXED Multipage Table extract not working</li> </ul>","title":"1.8"},{"location":"app2/tutorial/actions/","tags":["Insight\u00b2","Action"],"text":"<p>ToolJet supports several actions that can be invoked as the handler for any <code>event</code> that is triggered in an application.</p>","title":"Adding actions"},{"location":"app2/tutorial/actions/#to-add-actions","tags":["Insight\u00b2","Action"],"text":"<p>To attach an action for component events, click on the component's handle, and then click on the <code>Add handler</code> button on the inspector panel available on the right side.</p> <p>To attach an action for query events, select the query, go to the <code>advanced</code> tab and then click on the <code>Add handler</code> button.</p>","title":"To add actions"},{"location":"app2/tutorial/actions/#available-actions","tags":["Insight\u00b2","Action"],"text":"<p>Some of the actions that ToolJet Support are</p>    Action Description     Show alert Show an alert message as a bootstrap toast   Run query Run any of the data queries that you have created   Open webpage Go to another webpage in a new tab   Goto app Go to another ToolJet application   Show modal Open any modal that you've added   Close modal Close any modal that you've added if its already open   Copy to clipboard Copy any available text that you see on the application to clipboard   Set localStorage Set a key and corresponding value to localStorage   Generate file Construct file using data available in your application and let the user download it","title":"Available actions"},{"location":"app2/tutorial/adding-a-datasource/","tags":["Insight\u00b2","Data Source"],"text":"<p>:::tip The data sources are created on app level and not on organization level. :::</p> <p>Datasource manager is on the left-sidebar of the app builder. To add a new data source, click on the <code>Add datasource</code> button.</p>   ![ToolJet - Tutorial - Adding a data source](/img/tutorial/adding-datasource/add-datasource.png)   <p>You will be prompted to select the data source that you wish to add. Let's select PostgreSQL for this tutorial. You will then need to provide the credentials of your PostgreSQL database. The fields that are marked as <code>encrypted</code> will be encrypted before saving to ToolJet's database.</p>   ![ToolJet - Tutorial - Adding a data source](/img/tutorial/adding-datasource/datasources.png)   <p>The name of the data source must be unique (within the app) and can be changed by clicking on the data source name at the top of the prompt. Click on <code>Test Connection</code> button to verify the connection, this might take a couple of minutes. Once verified, save the data source.</p> <p>:::tip If you are using ToolJet cloud and if your data source is not publicly accessible, please white-list our IP address ( shown while creating a new data source ). :::</p>   ![ToolJet - Tutorial - Adding a data source](/img/tutorial/adding-datasource/postgres.png)","title":"Adding a data source"},{"location":"app2/tutorial/adding-widget/","text":"<p>To add a widget, navigate to the <code>Widget manager</code> on the right sidebar. It will display the list of built-in widgets that can be added to the app. Use the search functionality to quickly find the widget that you want. </p>   ![ToolJet - Tutorial - Adding a widget](/img/tutorial/adding-widget/widget.png)","title":"Adding a widget"},{"location":"app2/tutorial/adding-widget/#drag-and-drop-a-widget","text":"<p>Let's add a <code>table</code> widget to the app to show the customer data from the query that we created in the previous steps. To add a widget, drag and drop the widget to the canvas.</p>","title":"Drag and drop a widget"},{"location":"app2/tutorial/adding-widget/#resize-a-widget","text":"<p>The widgets can be resized and repositioned within the canvas.</p>   ![ToolJet - Tutorial - Adding a widget](/img/tutorial/adding-widget/resize.gif)","title":"Resize a widget"},{"location":"app2/tutorial/adding-widget/#adding-widgets-to-modal","text":"<p>To add a widget to Modal, we need to trigger Show modal action</p> <p>:::info Before triggering <code>Show modal action</code> we need to add a modal widget to the canvas. :::</p> <ul> <li>Add a <code>modal widget</code> to the app</li> <li>Trigger the Show modal action</li> <li>Click on the canvas area for the <code>Widget manager</code> sidebar</li> <li>Navigate to the Widget manager on the right sidebar and Drag and drop a widget into the Modal </li> </ul>   ![ToolJet - Tutorial - Adding a widget](/img/tutorial/adding-widget/modal.gif)","title":"Adding widgets to Modal"},{"location":"app2/tutorial/adding-widget/#resize-table-columns","text":"<p>We can resize the column width using the resize handle of the column.</p>   ![ToolJet - Tutorial - Adding a widget](/img/tutorial/adding-widget/resize-table-column.gif)","title":"Resize table columns"},{"location":"app2/tutorial/adding-widget/#change-widget-properties","text":"<p>Click on the widget to open the inspect panel on right sidebar. Here you can change the properties of the widgets. Let's configure the table columns to display the customer data. The display order of columns can be changed by dragging icon near the column name.</p>   ![ToolJet - Tutorial - Adding a widget](/img/tutorial/adding-widget/inspect-panel.gif)","title":"Change widget properties"},{"location":"app2/tutorial/adding-widget/#connecting-data-with-widget","text":"<p>Now we will connect the <code>data</code> object of the <code>fetch customers</code> query with the table. Click on the table widget to open the inspector on right sidebar. We can see that the data property of the table have an empty array as the value. The data field, like almost every other field on the editor supports single-line javascript code within double brackets. Variable suggestions will be shows as a dropdown while you type the code in the field.</p> <p>Let's select <code>data</code> object of the 'postgresql' query.</p> <p><code>{{queries.postgresql1.data}}</code></p> <p>Since we have already run the query in previous step, the data will be immediately displayed in the table.</p>   ![ToolJet - Tutorial - Adding a widget](/img/tutorial/adding-widget/table-data.png)   <p>So far in this tutorial, we have connected to a PostgreSQL database and displayed the data on a table.</p> <p>:::tip Read the widget reference of table here for more customizations such as server-side pagination, actions, editing data. :::</p>","title":"Connecting data with widget"},{"location":"app2/tutorial/building-queries/","text":"<p>Query Editor lives at the bottom of the page. We will now build a query for the PostgreSQL datasource that we connected in the previous step.</p> <p>:::tip  You can click on the 'enlarge' icon to enlarge query editor pane.  :::</p> <ul> <li>Click on the <code>+</code> icon of the query editor to create a new query.</li> <li>Select the PostgreSQL datasource created in previous step.</li> <li>Copy the query given below and paste on the query area.</li> <li>Select SQL mode</li> </ul> <pre><code>SELECT * FROM customers;\n</code></pre>    ![ToolJet - Tutorial - Building a query](/img/tutorial/building-queries/query.png)   <p>Query results can be previewed by clicking the <code>preview</code> button. Previewing queries will not alter the state of the app.</p>   ![ToolJet - Tutorial - Building a query](/img/tutorial/building-queries/preview.png)","title":"Building Queries"},{"location":"app2/tutorial/building-queries/#advanced-options","text":"![ToolJet - Tutorial - Building a query](/img/tutorial/building-queries/advanced-options.gif)","title":"Advanced options"},{"location":"app2/tutorial/building-queries/#run-query-on-page-load","text":"<p>If this option is enabled, the query will be run when the app is loaded for the first time. The queries can have more than one trigger, ie the same query can later be triggered again using a button's click event or table's row selected event or any other events.</p>","title":"Run query on page load"},{"location":"app2/tutorial/building-queries/#request-confirmation-before-running-query","text":"<p>Enable this option to show a prompt to confirm the action before a query is run. The confirmation prompt will look like this:</p>   ![ToolJet - Tutorial - Building a query](/img/tutorial/building-queries/confirm.png)","title":"Request confirmation before running query"},{"location":"app2/tutorial/building-queries/#show-notification-on-success","text":"<p>Enable this option to show a custom message on query completion. Duration of the notification can also be set.</p>","title":"Show notification on success"},{"location":"app2/tutorial/creating-app/","text":"<p>:::info Apps in ToolJet binds the widgets, data sources and queries together. :::</p> <p>This tutorial will walk you through building a simple app to fetch customer information from a PostgreSQL database and display the data using the table widget. To create a new ToolJet app, click on the 'Create new application' button on the ToolJet dashboard. </p>   ![ToolJet - Creating an app](/img/tutorial/creating-new-app/dashboard.png)   <p>You will be redirected to the visual app editor once the app has been created. Create the first version of your app to start building. The name of the app can be changed by clicking on the app name at top-left of the app builder.</p>   ![ToolJet - Creating an app](/img/tutorial/creating-new-app/visual-app-editor.png)   <p>The main components of an app: </p> <ul> <li>Widgets - UI components such as tables, buttons, dropdowns.</li> <li>Data sources - ToolJet can connect to databases, APIs and external services to fetch and modify data.</li> <li>Queries - Queries are used to access the connected data sources.</li> </ul>","title":"Creating new app"},{"location":"app2/tutorial/debugger/","text":"<p>The debugger captures errors that happens while running the queries. For example, when a database query fails due to the unavailability of a database or when a REST API query fails due to an incorrect URL, the errors will be displayed on the debugger. The debugger also displays relevant data related to the error along with the error message. Debugger is located on the left-sidebar.</p>   ![ToolJet - Debugger](/img/tutorial/debugger/debugger.gif)","title":"Debugger"},{"location":"app2/tutorial/debugger/#pin-debugger","text":"<p>You can click on the <code>pin</code> icon at the top-right corner of the debugger if you do not want the debugger to close. The debugger will remain open until it is unpinned.</p>   ![ToolJet - Debugger](/img/tutorial/debugger/pinned-debugger.gif)","title":"Pin Debugger"},{"location":"app2/tutorial/keyboard-shortcuts/","text":"<p>You can perform operations like undo, redo, clone, or removing the widget directly using the keyboard shortcuts.</p>","title":"Keyboard Shortcuts"},{"location":"app2/tutorial/keyboard-shortcuts/#undo","text":"<p>You can undo any operation performed on the visual app editor using the following shortcut keys:</p> <p>On Mac: <code>cmd + z</code></p> <p>On Linux/Windows: <code>ctrl + z</code></p>","title":"Undo"},{"location":"app2/tutorial/keyboard-shortcuts/#redo","text":"<p>If you have <code>undo</code> an operation and want to redo that again than you can use the following shortcut keys:</p> <p>On Mac: <code>cmd + shift + z</code></p> <p>On Linux/Windows: <code>ctrl + shift + z</code></p>","title":"Redo"},{"location":"app2/tutorial/keyboard-shortcuts/#clone","text":"<p>Now you can create multiple clones of any widget without having to drag and drop the widget again from the sidebar. Just select any widget that you want to create a clone and use the following shortcut keys:</p> <p>On Mac: <code>cmd + d</code></p> <p>On Linux/Windows: <code>ctrl + d</code></p>","title":"Clone"},{"location":"app2/tutorial/keyboard-shortcuts/#remove-widget","text":"<p>Now you can delete a selected widget by using the following shortcut keys:</p> <p>On Mac: <code>backspace</code></p> <p>On Linux/Windows: <code>delete</code></p>","title":"Remove widget"},{"location":"app2/tutorial/keyboard-shortcuts/#unselect-the-selected-widget","text":"<p>You can quickly deselect a widget using the <code>esc</code> key.</p>","title":"Unselect the selected widget"},{"location":"app2/tutorial/manage-users-groups/","text":"","title":"Managing Users and Groups"},{"location":"app2/tutorial/manage-users-groups/#managing-users","text":"<p>Admin of an organization can add users to the organization. To manage the users in your organization, just go to the Account menu on top right corner and click on the Manage Users.</p>   ![ToolJet - Managing Users and Groups](/img/tutorial/manage-users-groups/menu1.png)","title":"Managing Users"},{"location":"app2/tutorial/manage-users-groups/#inviting-users","text":"<p>Admins can invite anyone to a ToolJet organization using the email address. To invite a user:</p> <ul> <li>On the Manage Users page click on the <code>Invite new user</code> button.</li> </ul>   ![ToolJet - Managing Users and Groups](/img/tutorial/manage-users-groups/userspage.png)   <ul> <li>Now enter the details of new user such as first name, last name, email, and then click on the Create User.</li> </ul>   ![ToolJet - Managing Users and Groups](/img/tutorial/manage-users-groups/addnewuser.png)   <ul> <li>An email including the Invite Link to join your organization will be send to the created user. The status will turn from invited to active after the user successfully joins your organization using the invite link.</li> </ul> <p>:::tip</p> <p>You can also copy the invitation url by clicking on the copy icon next to <code>invited</code> status of the created user.</p> <p>:::</p>   ![ToolJet - Managing Users and Groups](/img/tutorial/manage-users-groups/status.png)","title":"Inviting users"},{"location":"app2/tutorial/manage-users-groups/#disabling-a-users-access","text":"<p>You can disable any active user's access to your organization by clicking on the Archive and then the status of the user will change from active to archived.</p>   ![ToolJet - Managing Users and Groups](/img/tutorial/manage-users-groups/archived.png)","title":"Disabling a user's access"},{"location":"app2/tutorial/manage-users-groups/#enabling-a-users-access","text":"<p>Similar to archiving a user's access, you can enable it again by clicking on Unarchive. The status of user will change from archived to invited and the user will have to join again using the invite link recieved via the e-mail.</p>   ![ToolJet - Managing Users and Groups](/img/tutorial/manage-users-groups/status.png)","title":"Enabling a user's access"},{"location":"app2/tutorial/manage-users-groups/#managing-groups","text":"<p>On ToolJet, Admins can create groups for users added in an organization and grant them access to particular app(s) with specific permissions. To manage groups, just go to the Account menu on top right corner and click on the Manage Groups.</p>   ![ToolJet - Managing Users and Groups](/img/tutorial/manage-users-groups/menu2.png)","title":"Managing Groups"},{"location":"app2/tutorial/manage-users-groups/#group-properties","text":"<p>Every group on ToolJet has three components:</p>","title":"Group properties"},{"location":"app2/tutorial/manage-users-groups/#apps","text":"<p>Admins can add or remove any number of apps for a group of users. To add an app to a group, select an app from the dropdown and click on <code>Add</code> button next to it. You can also set app permissions such as <code>View</code> or <code>Edit</code> for the group. You can set different permissions for different apps in a group.</p>   ![ToolJet - Managing Users and Groups](/img/tutorial/manage-users-groups/apps.png)","title":"Apps:"},{"location":"app2/tutorial/manage-users-groups/#users","text":"<p>Admins can add or remove any numbers of users in a group. Just select a user from the dropdown and click on <code>Add</code> button to add it to a group. To delete a user from a group, click on <code>Delete</code> button next to it.</p>   ![ToolJet - Managing Users and Groups](/img/tutorial/manage-users-groups/users.png)","title":"Users:"},{"location":"app2/tutorial/manage-users-groups/#permissions","text":"<p>Admins can set granular permission like creating/deleting apps or creating folder for a group of users.</p>   ![ToolJet - Managing Users and Groups](/img/tutorial/manage-users-groups/permissions.png)   <p>:::tip</p> <p>All the activities performed by any Admin or any user in a ToolJet organization is logged in <code>Audit logs</code> - including any activity related with managing users and groups.</p> <p>:::</p>","title":"Permissions:"},{"location":"app2/tutorial/manage-users-groups/#predefined-groups","text":"<p>By default, every organization will have two User Groups:</p> <p>1. All Users</p> <p>This group contains all the users and admins.</p>    Apps Users Permissions     You can add or remove apps. Modification is disabled. This group will have all the users and admins added in an organization. You can edit permissions for all the users globally.      ![ToolJet - Managing Users and Groups](/img/tutorial/manage-users-groups/allusers.png)   <p>2. Admin</p> <p>This group contains admins by default. Admins can add more admins or remove the users in this group.</p>    Apps Users Permissions     Modification is disabled. By default, this group has <code>Edit</code> permission for all the apps in an organization Admins can add or remove users in this group. Modification is disabled. By default, all the admins can create and delete apps or create folders.      ![ToolJet - Managing Users and Groups](/img/tutorial/manage-users-groups/admin.png)","title":"Predefined Groups"},{"location":"app2/tutorial/manage-users-groups/#creating-new-group","text":"<ul> <li>Click on <code>Create new group</code> button in the User Groups page.</li> </ul>   ![ToolJet - Managing Users and Groups](/img/tutorial/manage-users-groups/newgroup1.png)   <ul> <li>Enter a name for the group and click <code>Create Group</code> button.</li> </ul>   ![ToolJet - Managing Users and Groups](/img/tutorial/manage-users-groups/newgroup2.png)   <ul> <li>Once the group is created, you can add Apps, Users and set their Properties for that group.</li> </ul>","title":"Creating new group"},{"location":"app2/tutorial/manage-users-groups/#deleting-a-group","text":"<p>To delete a group, click on <code>Delete</code> next to it. It will confirm whether you want to delete it or not, Click on <code>Yes</code> to delete the group.</p>   ![ToolJet - Managing Users and Groups](/img/tutorial/manage-users-groups/deletegroup.png)","title":"Deleting a group"},{"location":"app2/tutorial/mobile-layout/","text":"<p>Mobile layout is activated when the width of the window is less than 600px.</p> <p>:::tip Widgets can be shown on desktop, mobile, or both. :::</p>   ![ToolJet - widgets list](/img/tutorial/mobile-layout/mobile-layout.gif)","title":"Mobile layout"},{"location":"app2/tutorial/mobile-layout/#adding-existing-widget-to-mobile-layout","text":"<p>Click on the widget to open inspector. Scroll down to the <code>layout</code> section and enable mobile layout. The width of the widget will be adjusted to fit the mobile layout.</p>","title":"Adding existing widget to mobile layout"},{"location":"app2/tutorial/mobile-layout/#adding-a-new-widget-to-mobile-layout","text":"<p>Switch the layout to mobile by clicking the button on the top navigation bar. Drag and drop a widget to the canvas. This widget will not be shown on desktop layout unless enabled from the widget inspector via the \"Show on desktop\" button manually.</p> <p>:::tip Width of the widgets will be automatically adjusted to fit the screen while viewing the application in app viewer. :::</p>","title":"Adding a new widget to mobile layout"},{"location":"app2/tutorial/sharing-and-deploying/","text":"","title":"Preview and Sharing Apps"},{"location":"app2/tutorial/sharing-and-deploying/#preview","text":"<p>Clicking on <code>Preview</code> will open up the currently opened version of the app in the new tab. This is useful if you want to immediately check the app in production.</p>   ![ToolJet - Managing Users and Groups](/img/tutorial/sharing/preview.gif)","title":"Preview"},{"location":"app2/tutorial/sharing-and-deploying/#sharing-an-app","text":"<p>Once you have released a version of your app, you can share the app with others using a customised url. To share an app:</p> <ul> <li>Click on the Share button on the top-right corner</li> </ul>   ![ToolJet - Managing Users and Groups](/img/tutorial/sharing/share.png)   <ul> <li>In the dialog box, turn on the toggle switch to <code>Make the application public</code> and shareable</li> </ul>   ![ToolJet - Managing Users and Groups](/img/tutorial/sharing/toggle.png)   <ul> <li>Create your own <code>customised URL</code> for the app and click on <code>copy</code> to copy the URL</li> </ul>   ![ToolJet - Managing Users and Groups](/img/tutorial/sharing/url.png)   <ul> <li>You can also <code>Embedd</code> your application using the embeddable link</li> </ul>   ![ToolJet - Managing Users and Groups](/img/tutorial/sharing/embedd.png)","title":"Sharing an app"},{"location":"app2/tutorial/tracking/","text":"<p>:::tip ToolJet does not store any data fetched from the data sources. ToolJet acts as a proxy and the data from data sources is sent to the client application without storing. :::</p>","title":"Tracking"},{"location":"app2/tutorial/tracking/#server","text":"<p>:::tip Self-hosted version of ToolJet pings our server to fetch the latest product updates every 24 hours. You can disable this by setting the value of <code>CHECK_FOR_UPDATES</code> environment variable to <code>0</code>. This feature is enabled by default. :::</p>","title":"Server"},{"location":"app2/tutorial/tracking/#client","text":"<p>ToolJet tracks anonymous usage data such as page loads and clicks. ToolJet tracks only the events and doesn't capture data from data sources.</p> <p>Tracking can be disabled by setting the value environment variable <code>ENABLE_TRACKING</code> to <code>0</code>. </p>","title":"Client"},{"location":"app2/tutorial/transformations/","text":"<p>Transformations can be enabled on queries to transform the query results. Let's write a simple transformation to compute <code>first_name</code> and <code>last_name</code> for all the customers that we fetch in the previous step.</p> <pre><code>// write your code here\n// return value will be set as data and the original data will be available as rawData\nreturn data.map((row) =&gt; {\n  return {\n    ...row,\n    first_name: row.name.split(' ')[0],\n    last_name: row.name.split(' ')[1],\n  };\n});\n</code></pre>  <p>The query will now look like this:</p>   ![ToolJet - Tutorial - Query result transformations](/img/tutorial/transformations/transform.png)   <p>Click the <code>create</code> button to create the query. Saved queries can be run using the <code>run</code> icon near the query name. Queries run using the run button wil behave just as if it was triggered by an app event like button click and thus will alter the state of the app. You can view the query results using the state inspector on the left side-bar of the app builder.</p>   ![ToolJet - Tutorial - Query result transformations](/img/tutorial/transformations/result.png)   <p>We can see that <code>first_name</code> and <code>last_name</code> is added to all the rows in the <code>data</code> object of the query. If you need the original data of the query, it will be available in the <code>rawData</code> object of the query.</p>   ![ToolJet - Tutorial - Query result transformations](/img/tutorial/transformations/rawdata.png)   <p>In the next section, we will see how we can this data using ToolJet's built-in widgets.</p>","title":"Transformations"},{"location":"app2/tutorial/versioning-and-release/","text":"<p>Versioning and Release lets you version control your apps and release app changes to the users. </p>","title":"Versioning and Release"},{"location":"app2/tutorial/versioning-and-release/#versioning","text":"<p>Versioning is really useful if multiple developers are working on an app, it allows them to save their own version of the app. This also prevents developers from overwriting the other developer's work. </p>","title":"Versioning"},{"location":"app2/tutorial/versioning-and-release/#creating-a-version","text":"<p>You can create new versions from App Version Manager on the top-right corner. It displays the version of the app that you're currently working and can be used to switch between the different version of the app. To create a new version:</p> <ul> <li>Go to the App Version Manager and click on the dropdown. It will display all the versions of the app that have been created.</li> </ul>   ![ToolJet - Managing Users and Groups](/img/tutorial/versioning-and-release/appversion.png)   <ul> <li>Click on Create Version and a modal will pop-up. Enter a Version Name and click on Create version from dropdown that will include all the versions of the app, choose a version that you want to use for your new version and then click on <code>Create Version</code>.</li> </ul>   ![ToolJet - Managing Users and Groups](/img/tutorial/versioning-and-release/modal.png)","title":"Creating a Version"},{"location":"app2/tutorial/versioning-and-release/#release","text":"<p>Making a release let's you publish the app and push the changes to production.</p>","title":"Release"},{"location":"app2/tutorial/versioning-and-release/#releasing-a-version","text":"<p>To release a version:</p> <ul> <li>Go to the App Version Manager and select the <code>version</code> from the dropdown that you want to release.</li> </ul>   ![ToolJet - Managing Users and Groups](/img/tutorial/versioning-and-release/versiondropdown.png)   <ul> <li>Click on the <code>Release</code> button on the top-right corner.</li> </ul>   ![ToolJet - Managing Users and Groups](/img/tutorial/versioning-and-release/release.png)   <p>:::tip </p> <p>ToolJet will block editing of the <code>Released version</code> of an app and will display a prompt to create a new version to make the changes. This is to prevent accidentally pushing an unfinished app to the live version.</p>   ![ToolJet - Managing Users and Groups](/img/tutorial/versioning-and-release/prompt.png)   <p>:::</p>","title":"Releasing a version"},{"location":"doc2/","tags":["DOC\u00b2","Start"],"text":"","title":"Getting Started"},{"location":"doc2/#welcome-to","tags":["DOC\u00b2","Start"],"text":"<p></p> <p>The intelligent solution for Digitizing Documents</p> <p>Every business process starts, contains or ends with a document. Regardless of whether in paper form or already as a file. This is called unstructured data. Although the information is on or in the document, it cannot be automatically integrated into the work processes, as it is simply not recognized by all software.</p> <p>DOC\u00b2 is the latest software and solution for document capture that was developed by Polydocs GmbH. It is a completely cloud-based solution that uses Artificial Intelligence and Machine Learning to precisely identify, classify, analyze and read your documents. No matter if paper or file. DOC\u00b2 learns independently, the level of experience increases with each document. DOC\u00b2 uses swarm intelligence for this.</p>","title":"Welcome to"},{"location":"doc2/#the-advantages-of-doc2-at-a-glance","tags":["DOC\u00b2","Start"],"text":"<ul> <li>Recognizes the required data - even handwritten information and information in tables reliably and is self-learning, even through corrections by the user</li> <li>With swarm intelligence, you benefit continuously from the experiences of other customers</li> <li>Improves the accuracy and quality of the recognized data</li> <li>Enables an automated process without ongoing corrections and interventions</li> <li>Simple intuitive interface</li> <li>No IT resources / specialists required</li> <li>Ensures a robust and consistent work process</li> <li>No sensitive data is stored or shared</li> <li>Saves time in the digital inbox</li> <li>Reduces errors caused by manual processing</li> </ul> <p>Start now a free 30 days trail</p>","title":"The Advantages of DOC\u00b2 at a glance:"},{"location":"doc2/#how-do-you-use-doc2","tags":["DOC\u00b2","Start"],"text":"<ul> <li>Scanning and Recognition of all types of documents (Invoices, Contracts, Forms, Medical Prescriptions etc.)</li> <li>Reliable extraction of the data in the document and integration and further processing in the ERP, RPA or CRM system)</li> <li>Validation of the extracted data and verification against other systems from internal and public sources</li> <li>Integration into your system landscape (e.g. ERP System, Document Management, Workflow System etc)</li> </ul>","title":"How do you use DOC\u00b2:"},{"location":"doc2/#why-doc2-is-just-right-for-you","tags":["DOC\u00b2","Start"],"text":"<p>Many companies have recognized that processing incoming invoices, for example, can be very time-consuming. They are trying to increase productivity and optimize the purchase-to-pay process by introducing products for the \u201cdigitization\u201d of invoices.</p> <p>In addition, DOC\u00b2 uses swarm intelligence. What does that mean? You benefit from the experiences of other customers and their \"learning curve\" without sharing sensitive data. With the cloud-based rule engine, we ensure continuous improvement of the application. You don't need any developers or data scientists, because the system learns from the input of the user and the process runs without interruptions.</p> <p>With the help of deep learning algorithms, not only simple header data of a document can be recorded, but also complicated structures such as tables. Of course, not only invoices are processed, but all types of documents. Regardless of whether it is waybills, membership applications, medical prescriptions and many more.</p>","title":"Why DOC\u00b2 is just right for you"},{"location":"doc2/ai-indicators/","tags":["AI","DOC\u00b2"],"text":"<p>In the document view you will find options to display the quality of the extraction using graphical indicators. The so-called AI indicator.</p> <p>To do this, open a document as known via the dashboard:</p> <p></p> <p>In the Document View there are now two indicators for the quality of the extraction.</p> <ul> <li>Extraction quality in percent per field and current document</li> <li>Overall extraction quality including previous extractions of documents of the same type.</li> </ul> <p></p> <p>Extraction quality in percent per field and current document</p> <p>For each field, a value is available on the right side, which indicates the quality of extraction for the current document. The display is a percentage value:</p> <p></p> <p>Overall extraction quality including previous extractions of documents of the same type</p> <p>Furthermore, there is a graph that shows the quality of all previous extractions for a document type. This refers in each case to the extraction value with the lowest quality:</p> <p></p> <p>Technical Details:</p> <p>The AI indicator shows how well a document is trained. This is done via an internal score. This means that as soon as a document is read in and the fields extracted by DOC\u00b2 are confirmed by the user, this score is increased. The higher the score, the further the display of the AI indicator is in the green area. If fields are changed manually by the user after the export, this score is decreased again and the display of the AI indicator falls back into the red area. Only when the document has been taught and the extraction has determined the correct value for some imports without manual intervention, the score reaches 100%.</p>","title":"AI Indicator"},{"location":"doc2/api/","tags":["DOC\u00b2","API"],"text":"<p>With the webhook attached below, you can transfer documents directly to DOC\u00b2 with a POST request. All parameters are already filled in. So all you have to do is make a simple call.</p> <p>Parameters used:</p> <ol> <li>API Key</li> <li>System URL</li> <li>A file you want to upload</li> </ol> <p>Webhook-Doc2.postman_collection.json_Download</p>","title":"Webhook"},{"location":"doc2/company-information/","tags":["Settings","DOC\u00b2","Zugferd","Peppol"],"text":"","title":"Company"},{"location":"doc2/company-information/#you-will-need-this-information-filled-for-exporting-documents-in-zugferd-and-peppol-format","tags":["Settings","DOC\u00b2","Zugferd","Peppol"],"text":"<p></p> <p>Enter company specific information here so they can be used for various exports you might use</p> <p>You will end up in the following screen.</p> <p></p> <p>Please enter your personal company information.</p> <p>Example:</p> <p></p> <p>When you are done, click on \"SAVE\".</p>","title":"You will need this information filled for exporting documents in Zugferd and Peppol format."},{"location":"doc2/configuring-sso-in-cloud/","tags":["Infor","SSO","Cloud","new service provider"],"text":"","title":"Configuring SSO in Infor Cloud"},{"location":"doc2/configuring-sso-in-cloud/#step-by-step-guide","tags":["Infor","SSO","Cloud","new service provider"],"text":"","title":"Step by step guide"},{"location":"doc2/configuring-sso-in-cloud/#prerequisites","tags":["Infor","SSO","Cloud","new service provider"],"text":"Required InformationDescriptionLogin Details to CloudCredentials are mandatory for accessing the Infor Cloud environment.The user should have the roles \"Infor-SystemAdministrator\" and \"UserAdmin\".Config Admin Details (DOC\u00b2)You should have received an email from Polydocs GmbH with the login details for the DOC\u00b2 SSO Settings page.You will need login and password.CertificateYou can download the certificate in DOC\u00b2 under SSO Service Provider Settings <p>1. Get access to the Cloud and check your access</p> <p>URL starts with https://mingle-portal.eu1.inforcloudsuite.com/&lt;TENANT_NAME&gt; followed by your personal extension</p> <p></p> <p>a) Choose the option Cloud Identities and use your login details</p> <p></p> <p>b) After login you will have access to the Infor Cloud. In this case we enter this page, but on the burger menu you will find access to all application.</p> <p></p> <p></p> <p>2. Open User Management for adding new Service Provider</p> <p>On the right hand side of the bar menu, you will find the user menu and there you can access the user management</p> <p></p> <p>a) Then you need to select in the left hand side menu the option Security Administration and Service Provider.</p> <p></p> <p>b. You will see this window with the Service Providers.</p> <p></p> <p>c. Now click on the \u201c+\u201d sign and add our DOC\u00b2 as Service Provider. (View step 4)</p> <p></p> <p>3. Access the SSO SERVICE PROVIDER SETTINGS in DOC\u00b2</p> <p>a) Log in on URL https://app.polydocs.io/ with the login details you received from us.</p> <p>b) Go to SETTINGS (on top bar) and choose SSO Settings down at the bottom of the list.</p> <p>Here you will find all the information you need for the following steps</p> <p>c) Download the certificate</p> <p></p> <p>4. Filling the Service Provider with the help of SSO Service Provider Settings in DOC\u00b2</p> <p></p> FieldValueApplication TypeDEFAULT_SAMLDisplay NameDOC\u00b2Entity IDSee Entity ID under SSO SERVICE SETTINGSSSO EndpointCopy the SSO URL from SSO SERVICE SETTINGS and paste it in the SSO Endpoint field.SLO EndpointCopy SLO URL from SSO SERVICE SETTINGS and paste it in the SLO Endpoint field.Signing CertificateUpload the appropriate .cer file you have downloaded in step 3c) from SSO SERVICE SETTINGSName ID Format and Mappingemailaddress <p></p> <p>a) When you have filled out everything remember to save it with the disk icon above Application Type</p> <p>b) Then, enter the service provider DOC\u00b2 again.</p> <p>c) Click on view the Identity Provider Information underneath.</p> <p></p> <p></p> <p>d) Export the SAML METADATA.</p> <p>File looks like this: ServiceProviderSAMLMetadata_10_20_2021.xml</p> <p>5. Import the SAML METADATA in the SSO Settings.</p> <p>Go to IDENTITY SERVICE PROVIDER SETTINGS, enter your Tenant ID (e.g. FELLOWCONSULTING_DEV and underneath that line you see Upload file and the IMPORT Button, where you need to upload the previously exported SAML METADATA file.</p> <p>a) Click on IMPORT an then choose the METADATA file that you have already downloaded from the SSO SERVICE PROVIDER SETTINGS</p> <p>b) Click on CONFIGURE</p> <p></p> <p>This part is successfully completed when you see the following popup</p> <p></p> <p>6. Add new Application in infor Ming.le</p> <p>a) got to Admin settings and</p> <p></p> <p>b) click on ADD APPLICATION top right</p> <p></p> <p>c) fill out all fields like on following picture but with your own SSO Url, don't forget to choose icon and click on SAVE</p> <p></p> <p>And now the last step:</p> <ul> <li>Log out of DOC\u00b2.</li> <li>Go back to the burger menu in infor and select the icon you just created.</li> <li>And you are already on the dashboard of DOC\u00b2.</li> </ul> <p></p>","title":"Prerequisites"},{"location":"doc2/dashboard/","tags":["DOC\u00b2","Dashboard","Homepage","Overview"],"text":"<p>After logging in with your user you are redirected to the DASHBOARD homepage of DOC\u00b2.</p> <p>This is the main page and overview where you can capture, work, and manage the imported documents.</p> <p></p> <p>The first upper bar is a very simple and easy reporting tool where you can filter it by week, month, year, or even the whole total.</p>","title":"Dashboard"},{"location":"doc2/dashboard/#viewing-document-by-status","tags":["DOC\u00b2","Dashboard","Homepage","Overview"],"text":"<p></p> <p>It shows you the total number of invoices imported, and the number of the ones that were automatically or manually processed. Furthermore, you can also see all the status, like completed, in progress, pending and error. The main advantage of this reporting bar is that by just clicking one of these available boxes you can find the specific and filtered invoices.</p> <p>As you can imagine the second part of the dashboard is the list/overview of all the uploaded documents. You can either see all of them or even just the ones that are assigned to you. And of course, you can also find it with the document name.</p> <p></p> <p>To start importing an invoice manually you simply click on the import button and choose the document you want to upload.</p> <p></p> <p>Meaningful data is going to be extracted within seconds and the status changes from running to Ready For Validation.</p> <p></p> <p>What you see now is the validation screen where you can check, edit, and validate all the imported documents.</p> <p>From left to right you will see first the name of the document, then how many pages it consists of. The following information is the date when the document was imported and its status.</p> <p>In the rightmost column you will see the Actions button. If you click on it, all available options will open: Assigne, Restart, Validate and delete.</p> <p></p> <p>Details on UI to check, edit and validate extracted fields of uploaded documents you will find here.</p>","title":"Viewing Document by Status"},{"location":"doc2/deployment/","tags":["DOC\u00b2","Dashboard","Homepage","Overview"],"text":"","title":"Deployment"},{"location":"doc2/deployment/#how-to-deploy-doc2","tags":["DOC\u00b2","Dashboard","Homepage","Overview"],"text":"<p>All you need is the URL (https://app.polydocs.io/) and the Login Details received from us. The Login Details have admin rights.</p>","title":"How to deploy DOC\u00b2"},{"location":"doc2/deployment/#prerequisites","tags":["DOC\u00b2","Dashboard","Homepage","Overview"],"text":"<p>Running Computer with access to internet The following screen will be shown when you go to the URL:</p> <p></p> <p>Enter the Login Details you received from us. This is your admin data. If you see the following screen, you are almost ready to go. All further details and necessary steps can be found here.</p> <p></p>","title":"Prerequisites"},{"location":"doc2/document-validation/","tags":["DOC\u00b2","Document","Validation"],"text":"","title":"Document Validation"},{"location":"doc2/document-validation/#how-to-validate-a-document","tags":["DOC\u00b2","Document","Validation"],"text":"<p>After you have uploaded a document as described on (https://docs.polydocs.io/doc2/dashboard/), perform the following steps to validate it:</p> <ol> <li>Go to HOME where you will find the DASHBOARD with uploaded documents</li> </ol> <p></p> <p>2. Click on the bar to open the document. In this case it doesn't matter if you click on the document name or the status.</p> <p></p> <p>On the left-hand side, you can see the documents preview, where you can also jump from one to the other page when you document has more than just one page. In the middle part of the screen, you have the big overview of the document where you can also see the extracted values marked in purple. And, finally, on the right-hand side you have all the segments of the extracted values.</p> <p>Let\u2019s focus on this last part.</p> <p>Firstly, on the top right side you can define the document origin if needed:</p> <p></p> <p>For different origins the document can have different amount and date formats. To be sure dates and figures/amounts will be extracted correctly make sure the document origin is set properly.</p> <p>Now, we get the basic information like invoice number, date etc. If you click on the field of invoice number for example, you get directly marked where on the invoice it was extracted.</p> <p></p> <p>You can now check if the number was extracted correctly. All values that were correctly extracted you confirm with the checkmark. You can do this with every single field. Another important point is that on the right side of each field you get a percentage of the confidence level of the DOC\u00b2.</p> <p>All values that have been correctly extracted and confirmed with the check mark will have a green bar at the beginning of the field.</p> <p></p> <p>A great example is on the next segment of field IBAN, where the IBAN is not even extracted, as confidence level is equal to 0. To train and extract the value, just enter the field and mark the IBAN on the invoice. You get this message if you are sure of your selection, so click yes.</p> <p></p> <p>The selected value will be extracted to the IBAN field and displayed on the invoice. Please confirm the value with the checkmark to finalize it.</p> <p></p> <p>The procedure for each extracted or non-extracted value is always the same. Here are some examples of the values extracted from an invoice:</p> <p></p> <p></p> <p>For the vendor details we have configured the Fuzzy search, where the supplier identification is matched by the master data imported from your ERP system. If for example the supplier\u2019s name was missing you could also look it up in this table. Everything is set up very easily and user-friendly so this job of making the validation is faster.</p> <p>After checking all the fields available for extraction, you can confirm the changes and export directly. If you have to interrupt editing, e.g. because of a last-minute appointment or a phone call, you can also save the changes you have confirmed up to that point and continue later.</p> <p></p> <p>When you have saved the changes, the document remains in the Ready for Validation status.</p> <p></p> <p>Find more details in the following sections:</p>","title":"How to Validate a document"},{"location":"doc2/e-mail/","tags":["E-Mail","Import","DOC\u00b2"],"text":"","title":"Email"},{"location":"doc2/e-mail/#if-you-want-to-import-documents-from-a-specific-email-folder-here-are-the-steps-you-need-to-take","tags":["E-Mail","Import","DOC\u00b2"],"text":"<p>Your email folder could look like this</p> <p></p> <p>Go to settings on top bar an choose Import in the selection</p> <p></p> <p>As you can see there is no email account for the import set up yet</p> <p></p> <p>Click on the Deactivated Button to open the Email import settings</p> <p>The boxes for E-Mail and Password as well as the API Key might get automatically filled with your login information for Doc2 depending on your browser settings. Please empty the fields before continuing to enter the needed information for the E-Mail Import.</p> <p>What you need to do is enter the protocol (IMAP or POP3), the encryption (SSL or TSL), server-name, port, a username e.g. \"incoming invoices\" as well as email address and password from which the document should going to be imported from.</p> <p>This example is for a google email account:</p> <p></p> <p>After you have entered all required fields of your respective provider save the data</p> <p></p> <p>You can test the login by pressing the button of the same name. If all data are correct you will get a corresponding feedback.</p> <p></p> <p>After you click the Import button, the documents will be fetched from the mailbox and you will be taken directly to the Dashboard.</p> <p></p>","title":"If you want to import documents from a specific email folder, here are the steps you need to take:"},{"location":"doc2/exception-filters/","tags":["Generel","Exception","Filter","DOC\u00b2"],"text":"<p>Basically, documents in DOC\u00b2 are classified/defined via AI and regex. In a few exceptions, however, you need an additional negative filter (exception filter) that allows you to exclude certain things. The exception filters are important to achieve the best results.</p> <p>To define an exception filter, open the document view for any document:</p> <p></p> <p>There you have the option of calling up the exception filters via the \"Exception Filters\" button:</p> <p></p> <p>There you can set the appropriate filters and apply them via \"Apply\":</p> <p></p>","title":"Expressions"},{"location":"doc2/export/","tags":["DOC\u00b2","Export","Infor","Webhook","FLOW\u00b2"],"text":"","title":"Export"},{"location":"doc2/export/#here-you-can-find-the-export-options-and-the-corresponding-articles","tags":["DOC\u00b2","Export","Infor","Webhook","FLOW\u00b2"],"text":"<ul> <li>Webhook</li> <li>infor</li> <li>FLOW\u00b2</li> </ul>","title":"Here you can find the export options and the corresponding articles."},{"location":"doc2/extracted-fields/","tags":["Fields","DOC\u00b2","Mapping","FLOW\u00b2"],"text":"","title":"Extracted fields"},{"location":"doc2/extracted-fields/#document-type-invoice","tags":["Fields","DOC\u00b2","Mapping","FLOW\u00b2"],"text":"DOC\u00b2 Description         INVOICE NUMBER    INVOICE DATE    DELIVERY DATE    PO NUMBER Purchase Order Number   IBAN    PAYMENT TERMS    NET AMOUNT    TAX AMOUNT in germany e.g. 19% (or 16%)   VAT RATE in germany e.g. 19% (or 16%)   NET AMOUNT REDUCED    TAX AMOUNT REDUCED in germany e.g. 7%   VAT RATE REDUCED in germany e.g. 7%   NET AMOUNT FREE    TAX AMOUNT FREE 0.00\u20ac   VAT RATE FREE 0%   TOTAL NET AMOUNT any discounts deducted   TOTAL TAX AMOUNT any discounts deducted   TOTAL AMOUNT any discounts deducted   CURRENCY    VENDOR ID    VENDOR NAME    VENDOR VAT    VENDOR ADDRESS","title":"Document Type: Invoice"},{"location":"doc2/extracted-fields/#mapping-flow2","tags":["Fields","DOC\u00b2","Mapping","FLOW\u00b2"],"text":"","title":"Mapping FLOW\u00b2"},{"location":"doc2/extracted-fields/#index-field-mapping","tags":["Fields","DOC\u00b2","Mapping","FLOW\u00b2"],"text":"<p>Index_Fields=INVOICE_TYPE,PURCHASE_ORDER,INVOICE_NUMBER,INVOICE_DATE,DELIVERY_DATE,PAYMENT_TERMS,TAX_RATE,TAX_AMOUNT,NET_AMOUNT,TOTAL_AMOUNT,CURRENCY,VENDOR_ID,VENDOR_NAME,VAT_NO_EXTRACTED,IBAN_EXTRACTED,ACCOUNTING_ENTITY,CORRELATION_ID IF_INVOICE_TYPE=InvoiceType IF_PURCHASE_ORDER=PurchaseOrder IF_INVOICE_NUMBER=InvoiceNumber IF_INVOICE_DATE=InvoiceDate IF_DELIVERY_DATE=DeliveryDate IF_PAYMENT_TERMS=PaymentTerms IF_TAX_RATE=VatPercent IF_TAX_AMOUNT=VATAmount IF_NET_AMOUNT=NetAmount IF_TOTAL_AMOUNT=TotalAmount IF_CURRENCY=Currency IF_VENDOR_ID=SupplierID IF_VENDOR_NAME=SupplierName IF_IBAN_EXTRACTED=AccountNumber IF_VAT_NO_EXTRACTED=VATRegNo IF_ACCOUNTING_ENTITY=AccountingEntityID IF_CORRELATION_ID=AlternateDocumentID</p> <p>#IF_VENDOR_IBAN=BankAccount</p>","title":"Index Field Mapping"},{"location":"doc2/fileshare/","tags":["DOC\u00b2","Import","Fileshare"],"text":"","title":"Fileshare"},{"location":"doc2/fileshare/#watchdog-configuration","tags":["DOC\u00b2","Import","Fileshare"],"text":"","title":"Watchdog Configuration"},{"location":"doc2/fileshare/#watchdog-for-windows","tags":["DOC\u00b2","Import","Fileshare"],"text":"","title":"Watchdog - for Windows"},{"location":"doc2/fileshare/#watchdog-linux","tags":["DOC\u00b2","Import","Fileshare"],"text":"","title":"Watchdog - Linux"},{"location":"doc2/general%20settings/","tags":["DOC\u00b2","Document Split Settings","Amount Settings","Other Settings","Subscription"],"text":"<p>Here is a brief overview of the individual settings that can be made under general settings as well as important information that you can get here. </p> <p></p> <ul> <li>Document Split Settings</li> <li>Amount Settings</li> <li>Other Settings</li> <li>Subscription</li> </ul>","title":"General Settings"},{"location":"doc2/import/","tags":["Import","DOC\u00b2","E-Mail","manual Import"],"text":"","title":"Overview"},{"location":"doc2/import/#here-you-can-find-the-import-options-and-the-corresponding-links","tags":["Import","DOC\u00b2","E-Mail","manual Import"],"text":"<ul> <li>E-Mail</li> <li>Manual Import</li> <li>Logic Apps</li> <li>API</li> <li>Microsoft Teams</li> </ul>","title":"Here you can find the import options and the corresponding links"},{"location":"doc2/infor/","tags":["DOC\u00b2","PO Matching","Infor LN","Infor M3","Use Cases"],"text":"","title":"DOC\u00b2 with Infor"},{"location":"doc2/infor/#different-use-cases","tags":["DOC\u00b2","PO Matching","Infor LN","Infor M3","Use Cases"],"text":"","title":"Different Use Cases"},{"location":"doc2/infor/#only-invoice","tags":["DOC\u00b2","PO Matching","Infor LN","Infor M3","Use Cases"],"text":"<p>This is the most easy use case. 95% of call Ephesoft ( IDM Capture ) customer use this use case.</p> <pre><code>graph LR\n  A[Start] --&gt; B{Invoice?};\n  Infor[Infor] --&gt; |Master Data Validation| C;\n  B --&gt;|Yes| C[Extract Header Fields];\n  C --&gt;|Optional| T[Table Fields];\n  T --&gt;C;\n  C --&gt; D[Send to Infor];\n  D --&gt; E;\n  B ----&gt;|No| E[End];</code></pre> <p>With DOC\u00b2 you can do more</p> <pre><code>graph LR\n  A[Start] --&gt; B{Invoice?};\n  B --&gt;|Yes| C[Extract];\n  C --&gt;|Optional| T[Table Extract];\n  T --&gt;C;\n  Infor[Infor] --&gt; |Master Data Validation| C;\n  C --&gt; D[Convert to ZUGFeRD];\n  D --&gt; F[Send to Infor];\n  F --&gt; Z;\n  B ----&gt;|No| Z[End];</code></pre>","title":"Only Invoice"},{"location":"doc2/infor/#invoice-and-delivery-note","tags":["DOC\u00b2","PO Matching","Infor LN","Infor M3","Use Cases"],"text":"<pre><code>graph LR\n  A[Start] --&gt; B{Classification?};\n  B --&gt;|Invoice| Extract[Extract];\n  B --&gt;|Delivery Note| Extract;\n  Extract --&gt;|Optional| T[Table Extract];\n  T --&gt;Extract;\n  Infor --&gt; |Master Data Validation| Extract;\n  Extract --&gt; ION[Infor ION &amp; IDM];\n  B --&gt;|Else| G[Only OCR];\n  G --&gt;IDM[Send PDF to Infor IDM];\n  IDM --&gt; Infor;\n  ION --&gt; Infor;\n  Infor --&gt; End[End];\n</code></pre>","title":"Invoice and Delivery Note"},{"location":"doc2/infor/#invoice-and-orders-incl-po-matching-and-zugferd-and-order-x","tags":["DOC\u00b2","PO Matching","Infor LN","Infor M3","Use Cases"],"text":"<pre><code>graph LR\n  A[Start] --&gt; B{Classification?};\n  B --&gt;|Invoice| Extract[Extract];\n  B --&gt;|Delivery Note| Extract;\n  B ----&gt;|Order confirmation| Extract;\n  Extract --&gt;T[Table Fields];\n  T --&gt;Extract;\n  Extract ---&gt; D[Convert to ZUGFeRD];\n  Extract --&gt; PO;\n  D --&gt; F[Send to Infor PDF + ION];\n  F --&gt; Infor;\n  PO --&gt; |Confirm PO|Infor;\n  B --&gt;|Else| G[Only OCR];\n  G --&gt;H[Send PDF to Infor IDM];\n  H --&gt; Infor[Infor];\n  Infor[Infor] --&gt; |Purchase Order|PO[PO Matching];\n  Infor[Infor] --&gt; |Master Data Validation| Extract;\n  PO --&gt; Order-X[Order-X];\n  Extract --&gt; Order-X;\n  Infor --&gt; Order-X;\n  Order-X --&gt; Supplier[Supplier];\n  Supplier --&gt; End;\n  Infor --&gt; End;\n</code></pre>","title":"Invoice and Orders incl. PO Matching and ZUGFeRD and Order-X"},{"location":"doc2/infor/#add-infor-ion-api","tags":["DOC\u00b2","PO Matching","Infor LN","Infor M3","Use Cases"],"text":"","title":"Add Infor ION API"},{"location":"doc2/infor/#add-connection-points-in-infor-os","tags":["DOC\u00b2","PO Matching","Infor LN","Infor M3","Use Cases"],"text":"","title":"Add Connection Points in Infor OS"},{"location":"doc2/infor/#add-connection-points-in-infor-os_1","tags":["DOC\u00b2","PO Matching","Infor LN","Infor M3","Use Cases"],"text":"","title":"Add Connection Points in Infor OS"},{"location":"doc2/infor/#purchase-order","tags":["DOC\u00b2","PO Matching","Infor LN","Infor M3","Use Cases"],"text":"","title":"Purchase Order"},{"location":"doc2/infor/#delivery-note","tags":["DOC\u00b2","PO Matching","Infor LN","Infor M3","Use Cases"],"text":"","title":"Delivery Note"},{"location":"doc2/infor/#invoice","tags":["DOC\u00b2","PO Matching","Infor LN","Infor M3","Use Cases"],"text":"","title":"Invoice"},{"location":"doc2/keyboard/","tags":["Doc\u00b2","Keyboard"],"text":"<p>There are two types of Keyboard functions described below:</p> <ul> <li>Enter Key</li> <li>Arrow Down Key</li> </ul> <p>Enter Key:</p> <p>The Enter Key will work for Exporting the document if there is no exception in the document i.e. Validation Required for the fields.</p> <p>Arrow-Down-Key:</p> <p>The Arrow-Down-key will be accepting the data in the fields which has validation required or any other exception.</p>","title":"Keyboard"},{"location":"doc2/manual-import/","tags":["Doc\u00b2","Dashboard","Import"],"text":"<p>Documents can be imported manually into DOC\u00b2 as described below.</p> <p>Click on the \"Import\" button in the Dashboard:</p> <p></p> <p>The following window opens:</p> <p></p> <p>Documents can be uploaded to DOC\u00b2 via file browser or drag and drop. Furthermore, it is possible to upload multiple documents at once.</p> <ul> <li>Click on the button \"Upload Documents\" to upload documents via file browser. Select the files to be uploaded in your file browser and confirm your selection. The files will then be uploaded to DOC\u00b2:</li> </ul> <p></p> <p></p> <ul> <li>Alternatively, drag and drop your files onto the DOC\u00b2 import window as shown in the video below:</li> </ul>    <p>As soon as the files have been uploaded, they have the initial status \"Running\". During this time the upload is processed. Editing the file is not possible in this status. Depending on the size and complexity of the file, processing may take a while:</p> <p></p> <p>As soon as the file has been processed, it receives the status \"Ready for validation\". As soon as the document is in this status, validation can be started:</p> <p></p> <p>Details about the validation process can be found here: Document Validation</p>","title":"Manual Import"},{"location":"doc2/mapping-of-columns/","tags":["DOC\u00b2","Table Extraction","Training","Mapping"],"text":"<p>Once data is extracted from document you are able to map the extracted columns with the columns given by DOC\u00b2.</p> <p>That can be done via selecting the header of a column in the extraction view.</p> <p>A dropdown will open and you are able to select the column that you want to map.</p> <p></p> <p>If a column has been mapped incorrectly you can simply re-map the column by clicking the dropdown menu again.</p> <p>In the following video you can see in detail how to map and re-map different columns on a document:</p>","title":"Mapping of Columns"},{"location":"doc2/master-data-validation/","tags":["DOC\u00b2","Document Validation","Master data validation"],"text":"<p>DOC\u00b2 offers in the document validation overview the possibility to match supplier data extracted from the document with the master data from your ERP system (precondition: your master data has been uploaded to DOC\u00b2 and to assign the document to the correct supplier without any manual work in the best case.</p> <p>There are currently two ways to do this.</p> <p>Matching using the extracted VAT number of the supplier:</p> <p>The VAT number is extracted from the document using DOC\u00b2:</p> <p></p> <p>In the background, the VAT number is matched with the supplier master data, provided by you to DOC\u00b2 and the supplier ID including the corresponding supplier data like name, address, ... is determined automatically:</p> <p></p> <p>The user can manually intervene at any time and call up the supplier provided. This is done via the following button:</p> <p></p> <p>The following window is called up and displays the supplier data for the corresponding VAT number. Using the search field, any VAT number can be entered and thereby the supplier master, provided by you to DOC\u00b2, can be searched. If the correct supplier was found, it can be selected and accepted.</p> <p></p> <p>Second possibility is finding the supplier via the supplier name:</p> <p>Using the button in the supplier name field, the supplier master, provided by you to DOC\u00b2, can also be called up. In this case, the supplier name can be searched in the supplier master:</p> <p></p> <p></p>","title":"Master Data Validation"},{"location":"doc2/modules/","tags":["DOC\u00b2","Settings","Modules","Purchase Order","PO Matching","Table Extraction"],"text":"<p>In DOC\u00b2 you will find the \"SETTINGS\" menu in the \"DASHBOARD\". Open this menu.</p> <p></p> <p>There you will find the menu item \"Modules\". Open this menu.</p> <p></p> <p>There you will find the option \"PURCHASE ORDER\" with which you can switch PO matching on/off.</p> <p></p> <p>Furthermore you can define which documents should be matched via the option \"Select PO Matching\". There are three ways to match your purchase order. For details please check PO Matching documentation: PO Matching </p> <p></p> <p>Via the menu item \"Table Extraction\" the table extraction can be switched on/off. Furthermore, the version to be used with this account can be defined.</p> <p></p>","title":"Modules"},{"location":"doc2/ocr-view/","tags":["DOC\u00b2","OCR"],"text":"<p>In the document view you have the possibility to open the OCR view for a document. This allows you to display the document in the pure OCR view without any formatting or similar.</p> <p>To do this, import a document as usual and open it in the document view:</p> <p></p> <p>There you will find the \"OCR\" button:</p> <p></p> <p>When you click this button a new window will be opened which displays the document and its data in pure OCR view. This can be useful, for example, if data is not extracted correctly and you want to troubleshoot the actual values contained in the document and to be extracted:</p> <p></p> <p>In addition, the following button can be used to switch to the debug view. This allows to see exactly how DOC\u00b2 extracts the individual values in the background and whether these are recognized correctly:</p> <p></p> <p></p> <p>Furthermore, the following button can be used to switch back to the document view:</p> <p></p> <p></p>","title":"OCR View"},{"location":"doc2/onboarding/","tags":["DOC\u00b2","OnBoarding","Guide","Initial Setup","Understanding Document Review"],"text":"<p>This guide will help you learn the basics of DOC\u00b2 get you up and running with an IPS that will max out your productivity.</p>","title":"OnBoarding"},{"location":"doc2/onboarding/#performing-initial-setup","tags":["DOC\u00b2","OnBoarding","Guide","Initial Setup","Understanding Document Review"],"text":"<p>First, let's cover how to access and configure your system.</p> <p>DOC\u00b2 does not work in Tenant. All customer use the same cluster. Our Kubernetes Cluster is hosted in Frankfurt / Germany.</p> <p>https://app.polydocs.io/</p> <p>To access the system:</p> <ol> <li>Contact your Polydocs GmbH representative or reach out to support@polydocs.io to create a Organisation.</li> <li>Go to the App. We recommend bookmarking this URL for future reference.</li> <li>Log in with the credentials provided in your onboarding email.</li> </ol> <p>Tip: Can't find the onboarding email? Go to your login screen and click the Forgot password? link.</p>","title":"Performing Initial Setup"},{"location":"doc2/onboarding/#step-2-adding-users","tags":["DOC\u00b2","OnBoarding","Guide","Initial Setup","Understanding Document Review"],"text":"<p>After logging in, you'll need to add users to your tenant. When you add a user, they'll receive an onboarding email with a username and temporary password.</p> <p>You can add users from Settings &gt; Users. For help, refer to Adding Users.</p>","title":"Step 2: Adding Users"},{"location":"doc2/onboarding/#understanding-document-review","tags":["DOC\u00b2","OnBoarding","Guide","Initial Setup","Understanding Document Review"],"text":"<p>After the initial setup is complete, most of your time in DOC\u00b2 will be spent reviewing for example invoices.</p> <p>Sending Document to DOC\u00b2</p> <ol> <li>Manuel Upload</li> <li>Email</li> <li>API</li> <li>or use our WatchDog for Directories</li> </ol>","title":"Understanding Document Review"},{"location":"doc2/onboarding/#reviewing-extracted-results","tags":["DOC\u00b2","OnBoarding","Guide","Initial Setup","Understanding Document Review"],"text":"<p>If an document is not automatically processed, it will be stopped for manual review. This means you will need to edit or approve fields the system wasn't confident on, or couldn't find.</p> <p>To review extracted results:</p> <ol> <li>On the Dashboard, click on the document to assign the 10 oldest invoices in the system to yourself. You'll be taken to the Review screen.</li> <li>Review the extracted results. Refer to Reviewing Your document for more information.</li> <li>When you're satisfied, click Complete Review.</li> </ol>","title":"Reviewing Extracted Results"},{"location":"doc2/settings-amount-settings/","tags":["DOC\u00b2","Settings","Amount Settings","Rounding Errors"],"text":"","title":"Amount"},{"location":"doc2/settings-amount-settings/#this-section-is-mainly-intended-for-those-who-process-invoices-of-countries-where-rounding-is-a-matter-since-some-documents-contain-rounding-errors-after-the-decimal-point-in-certain-amounts-since-these-were-originally-three-digits-but-are-shown-on-the-invoice-with-only-two-decimal-places","tags":["DOC\u00b2","Settings","Amount Settings","Rounding Errors"],"text":"<p>Here is an example to illustrate:</p> <p></p>  <p></p> <p></p>  <p>If you do not process invoices where rounding is a matter, leave the selection off</p> <p></p>","title":"This section is mainly intended for those who process invoices of countries where rounding is a matter, since some documents contain rounding errors after the decimal point in certain amounts, since these were originally three digits but are shown on the invoice with only two decimal places."},{"location":"doc2/settings-api/","tags":["DOC\u00b2","Settings","API"],"text":"<ul> <li>API Integration - you will find you API Key here</li> </ul> <p></p>","title":"API"},{"location":"doc2/settings-document-types/","tags":["DOC\u00b2","Settings","Document Types"],"text":"<p>In DOC\u00b2 you will find the \"SETTINGS\" menu in the \"DASHBOARD\". Open this menu:</p> <p></p> <p>There you will find the menu item \"Document Types\". Open this menu:</p> <p></p> <p>In the following overview you will find all document types available in DOC\u00b2:</p> <p></p> <p>Select the document type you want to configure. For example, \"INVOICE\":</p> <p></p> <p>You will now see all settings you can make for this document type. For example you can configure the fields you want to extract from your documents:</p> <p></p> <p>Recognition Settings</p> <p>OCR:</p> <p>Here you can set the sensitivity of the OCR (Optical Character Recognition) function for all fields at once. This value determines the sensitivity with which a field is marked in red if it could not be extracted with 100% certainty (OCR related!).</p> <p>MATCH SCORE:</p> <p>Here you can set the sensitivity of the MATCH SCORE function for all fields at once. This value determines from when a field is marked in red if DOC\u00b2 has not extracted the field with 100% probability. In this case the field needs to be validated manually.</p> <p>The button \"RESTORE DEFAULTS\" will set back both values to \"50\".</p> <p></p> <p>SPLIT</p> <p>You can define how imported documents shall be split. Either by page or by invoice number (if you import PDF files with more than one invoice/several invoices).</p> <p></p> <p>PROFILE</p> <p>Here you can define the profile that shall be used. For example Peppol or Zugferd. If you do not explicitly use one of the two, please select \"Default\".</p> <p></p> <p>Below you will find all the fields available for this type of document. You can set the following values per field individually:  </p> <p>REQUIRED: Here you can define if the field must contain a value to continue.  </p> <p>READ ONLY: Here you can define if a field can only be displayed but not edited.  </p> <p>HIDDEN: Here you can define whether a field should be hidden or displayed in the extraction view.  </p> <p>FORCE VALIDATION: Here you can define whether a field must always be validated manually, even if it has been read 100% by DOC\u00b2.  </p> <p>OCR and MATCH SCORE: Setting as described above, per field.  </p> <p>FORMULA: Creation of a formula per field.</p> <p></p> <p>If all settings are made and should be saved, please confirm this with the \"SAVE\" button, otherwise the settings will not be applied.</p> <p></p>","title":"Doc Types"},{"location":"doc2/settings-master-data-validation/","tags":["DOC\u00b2","Settings","Master Data Validation"],"text":"<p>DOC\u00b2 offers the possibility to upload your master data. This has the advantage that an automatic mapping of e.g. supplier data from your ERP system can be made during the extraction of documents.</p> <p>For example, the VAT number or supplier name extracted from the document can be used to identify the supplier data record from your ERP system (from the supplier data uploaded to DOC\u00b2).</p> <p>For more detailed information please refer to the following documentation: Master data validation</p> <p>To upload master data to DOC\u00b2, please navigate to the settings from the dashboard:</p> <p></p> <p>There you will find the menu item \"Master Data Validation\". Please open it:</p> <p></p> <p>In the following view you can import the CSV file with all your data via drag and drop or via the button \"BROWSE\". Additionally you can define if your file contains semicolon or comma as separator. When you are done click on \"SAVE\" to apply your changes.</p> <p></p>","title":"Master Data Validation"},{"location":"doc2/settings-sso-settings/","tags":["DOC\u00b2","Settings","SSO"],"text":"<ul> <li>Once you have received your Login Details from us, you will find all the details you need for SSO configuration here.</li> </ul> <p>To access the SSO SERVICE PROVIDER SETTINGS in DOC\u00b2</p> <p>1. Log in on URL https://app.polydocs.io/ with the login details you received from us.</p> <p>2. Go to SETTINGS (on top bar) and choose SSO Settings down at the bottom of the list.</p> <p>Here you will find all the information you need for the following steps</p> <p></p> <p></p> <p>The step by step guide to configure SSO in Infor Cloud can be found here.</p>","title":"SSO Settings"},{"location":"doc2/settings-users/","tags":["DOC\u00b2","Settings","Users","Password"],"text":"<p>Users can be managed via \"SETTINGS -&gt; Users\". You can find the option as follows.</p> <p>From the Dashboard navigate to \"SETTINGS\":</p> <p></p> <p>In the settings navigate to \"Users\":</p> <p></p> <p>Direktlink: https://app.polydocs.io/settings/user</p>","title":"Users"},{"location":"doc2/settings-users/#how-to-add-a-user","tags":["DOC\u00b2","Settings","Users","Password"],"text":"<p>Once the admin is registered, you can add your employees via following steps.</p> <p>In the user menu click on \"ADD USER\":</p> <p></p> <p>Enter the data of the user to be created:</p> <p></p> <ul> <li>If it is not an administration user, do not check the \"ADMIN\" box</li> <li>The password must be created initially and sent to the user</li> </ul> <p>As soon as the user is created it can be edited afterwards via the user overview (check/uncheck \"ADMIN\", edit, delete):</p> <p> </p>","title":"How to add a user"},{"location":"doc2/settings-users/#how-to-reset-the-password","tags":["DOC\u00b2","Settings","Users","Password"],"text":"<p>Go to the DOC\u00b2 log-in page (https://app.polydocs.io/) enter your mail address and click on \"FORGOT PASSWORD?\":</p> <p></p> <p>You will immediately receive an email with a link to reset the password. The link will navigate you to following page where you can enter a new password:</p> <p></p> <p>As soon as the new password has been entered and confirmed, it can be used for login from now on.</p> <p>Sign up for a 30 days free trail</p>","title":"How to reset the password"},{"location":"doc2/watchdog-linux/","tags":["DOC\u00b2","Fileshare Import","Watchdog","Linux"],"text":"","title":"Watchdog for Linux"},{"location":"doc2/watchdog-linux/#download-watchpuppy-here","tags":["DOC\u00b2","Fileshare Import","Watchdog","Linux"],"text":"<p>WatchPuppy-LinuxDownload</p>","title":"Download watchpuppy here:"},{"location":"doc2/watchdog-linux/#select-watchpuppy-configuration","tags":["DOC\u00b2","Fileshare Import","Watchdog","Linux"],"text":"<p>WatchPuppy supports multiple configuration options. Please check out this page for information of the configurations.</p>","title":"Select WatchPuppy configuration"},{"location":"doc2/watchdog-linux/#run-watchpuppy","tags":["DOC\u00b2","Fileshare Import","Watchdog","Linux"],"text":"<p>-&gt; Navigate to the downloaded watchpuppy folder</p> <p>You have to pass the arguments that are marked as required on this page.</p> <pre><code>./watchpuppy -c idm -k demo-api-key -r ~/watchpuppy/read -e ~/watchpuppy/error -p ~/watchpuppy/processed --doc_types \"INVOICE,DELIVERY_NOTE,ORDER_CONFIRMATION\"\n</code></pre>   <p>WatchPuppy will create the specified directories for you if they don't exist. After entering the start command WatchPuppy will check if any new files are moved into the specified input directory \"-r\". If it finds a new file it will upload it to doc2app. As soon as the processing and validation is done it will export the document.</p>   <p>You can also find more information by entering:./watchpuppy -h</p> <p></p>","title":"Run WatchPuppy"},{"location":"doc2/watchdog-linux/#upload-documents-to-the-read-folder","tags":["DOC\u00b2","Fileshare Import","Watchdog","Linux"],"text":"<p></p> <p>-&gt; The document(s) are processed automatically</p>   <p>If you have selected DOC\u00b2 you will find the document on the dashboard</p>  <p></p> <p>Document running</p> <p></p> <p>Document ready for Validation</p> <p>After the validation The status will change to Pending-Watcher-Export. Then WatchPuppy will export the document.</p>","title":"Upload document(s) to the Read folder"},{"location":"doc2/watchdog-windows/","tags":["DOC\u00b2","Fileshare Import","Watchdog","Windows"],"text":"","title":"Watchdog for Windows"},{"location":"doc2/watchdog-windows/#download-watchpuppy-here","tags":["DOC\u00b2","Fileshare Import","Watchdog","Windows"],"text":"<p>WatchPuppy-winDownload</p>","title":"Download watchpuppy here:"},{"location":"doc2/watchdog-windows/#select-watchpuppy-configuration","tags":["DOC\u00b2","Fileshare Import","Watchdog","Windows"],"text":"<p>WatchPuppy supports multiple configuration options. Please check out this page for information of the configurations.</p>","title":"Select WatchPuppy configuration"},{"location":"doc2/watchdog-windows/#run-watchpuppy","tags":["DOC\u00b2","Fileshare Import","Watchdog","Windows"],"text":"<p>Create a folder on your machine e.g. C:\\Users\\Administrator\\Documents\\Watchpuppy</p> <p></p> <p>paste the downloaded .exe file here</p> <p></p> <p>create a new file making sure it ends with .bat else windows won't be able to run it</p> <p>Please enter all required arguments in the .bat file.</p> <p>for export to DOC\u00b2 use:</p> <p>watchpuppy.exe -k  -c doc2 -r read -e error -p processed <p>After saving the entered arguments, double-click the .bat file and the corresponding folders will be created.</p> <p></p>","title":"Run WatchPuppy"},{"location":"doc2/watchdog-windows/#in-the-next-step-upload-documents-to-the-read-folder","tags":["DOC\u00b2","Fileshare Import","Watchdog","Windows"],"text":"<p>-&gt; The document(s) are processed automatically</p>","title":"In the next step upload document(s) to the read folder"},{"location":"doc2/watchpuppy-configuration/","tags":["Fileshare Import","Watchdog","IDM","LN","FLOW\u00b2","Local Export","DOC\u00b2 Upload"],"text":"<p>Watchdog has multiple configuration options you can choose from.</p>","title":"Watchdog Configuration"},{"location":"doc2/watchpuppy-configuration/#idm-ln-export","tags":["Fileshare Import","Watchdog","IDM","LN","FLOW\u00b2","Local Export","DOC\u00b2 Upload"],"text":"<p>If the IDM Export is selected then WatchPuppy will check for export jobs for idm on premiss, issued from Doc2app. It will then export the document to idm.</p> <p>Required arguments</p> <ul> <li>-c idm</li> <li>-r </li> <li>-e  <li>-p  <li>-k  <li>--doc_types   <p>Optional arguments:</p> <ul> <li>--doc2_url","title":"IDM + LN Export"},{"location":"doc2/watchpuppy-configuration/#flow2-export","tags":["Fileshare Import","Watchdog","IDM","LN","FLOW\u00b2","Local Export","DOC\u00b2 Upload"],"text":"<p>When the export option is set to flow2 the user must specify a flow2 url and pass an api token for the flow2 server. This is done by base64 encoding this string : and then passing it to the WatchPuppy script. <p>Required arguments</p> <ul> <li>-c flow</li> <li>-r </li> <li>-e  <li>-p  <li>-k  <li>--doc_types  <li>--flow_url  <li>--flow_token '&lt; 'flow2-username:flow2-password'&gt;  <p>Optional arguments:</p> <ul> <li>--doc2_url","title":"Flow2 Export"},{"location":"doc2/watchpuppy-configuration/#local-export","tags":["Fileshare Import","Watchdog","IDM","LN","FLOW\u00b2","Local Export","DOC\u00b2 Upload"],"text":"<p>Local export only supports the MEDI_ORDER doc_type at the time being. If the local export is configured WatchPuppy will download the export xml, the pdf and move the two files into a user specified export folder.</p> <p>Required arguments</p> <ul> <li>-c local</li> <li>-r </li> <li>-e  <li>-p  <li>-k  <li>--doc_types  <li>--local_export_folder   <p>Optional arguments:</p> <ul> <li>--doc2_url","title":"Local Export"},{"location":"doc2/watchpuppy-configuration/#doc2app-upload","tags":["Fileshare Import","Watchdog","IDM","LN","FLOW\u00b2","Local Export","DOC\u00b2 Upload"],"text":"<p>This will only upload the documents placed in the input directory.</p> <p>Required arguments</p> <ul> <li>-c doc2</li> <li>-r </li> <li>-e  <li>-p  <li>-k   <p>Optional arguments:</p> <ul> <li>--doc2_url","title":"Doc2app Upload"},{"location":"doc2/workflow/","tags":["DOC\u00b2","Workflow\u00b2"],"text":"","title":"DOC\u00b2 with Workflow\u00b2"},{"location":"doc2/workflow/#doc2-with-workflow2","tags":["DOC\u00b2","Workflow\u00b2"],"text":"<p>See how easy you can use DOC\u00b2 with Workflow\u00b2</p>    <p>More Videos you find here:  YouTube</p> <p>Sign up for a 30 days free trail</p>","title":"DOC\u00b2 with Workflow\u00b2"},{"location":"doc2/zugpferd-and-peppol/","tags":["DOC\u00b2","Export","Download","Zugferd","Peppol"],"text":"","title":"Import ZUGFeRD to Doc\u00b2"},{"location":"doc2/zugpferd-and-peppol/#export-zugferd-to-idm","tags":["DOC\u00b2","Export","Download","Zugferd","Peppol"],"text":"<p>More Videos you find here:  YouTube</p> <p>Export setting can be managed via \"SETTINGS -&gt; Export\". You can find the option as follows.</p> <p>From the Dashboard navigate to \"SETTINGS\":</p> <p></p> <p>In the settings navigate to \"Export\":</p> <p></p> <p>You need to create a new entry via the \"ADD INTEGRATION\" button:</p> <p></p> <p>In the following screen select either \"Zugferd\" or \"Peppol BIS Billing 3.0\" - depending on what you want to create the entry for:</p> <p></p>","title":"Export ZUGFeRD to IDM"},{"location":"doc2/zugpferd-and-peppol/#zugferd","tags":["DOC\u00b2","Export","Download","Zugferd","Peppol"],"text":"<p>You will end up in the following screen. Please enter the information like in following example:</p> <p></p> <p>When you are done, click on \"CONFIRM\".</p>","title":"Zugferd"},{"location":"doc2/zugpferd-and-peppol/#peppol","tags":["DOC\u00b2","Export","Download","Zugferd","Peppol"],"text":"<p>You will end up in the following screen. Please enter the information like in following example:</p> <p></p> <p>When you are done, click on \"CONFIRM\".</p> <p>The entries will appear in the overview. They can be edited or deleted via the action buttons:</p> <p></p> <p>In addition you need to enter your Company Information. You will find the menu in the settings overview.</p>  <p>When everything is set up correctly new download buttons will appear in the dashboard after a document has been finished:</p> <p></p> <p>One for Zugferd and one for Peppol:</p> <p></p> <p></p> <p>Sign up for a 30 days free trail</p>","title":"Peppol"},{"location":"doc2/export/create-a-infor-ion-file/","tags":["Export to Infor","ION","DOC\u00b2","Settings"],"text":"","title":"How to create an Infor ION file"},{"location":"doc2/export/create-a-infor-ion-file/#step-by-step-documentation-how-to-create-a-infor-ion-api-file-that-is-needed-for-the-infor-export","tags":["Export to Infor","ION","DOC\u00b2","Settings"],"text":"<p>Prerequisites:</p> <ul> <li>An admin user f\u00fcr InforOS with the security roles \"ION Desk Admin\", \"ION API Admin\", \"IDM Admin\".</li> <li> <p>A InforOS user that can be used as service account that has permission to create documents in IDM with the security roles \"IDM-AdvancedUser\", \"Infor-SuiteUser\" and \"MingleEnterprise\".</p> </li> <li> <p>Open InforOS with a admin user and change to the \"Infor ION API\" Screen.     Click on \"Authorized Apps\" and then on the \"+\"</p> </li> </ul> <p></p> <p>2. Enter a meaningfull name and description like \"Doc2Export\". Choose \"Backend Service\" and click on the disk icon to save.</p> <p></p> <p>3. Once the entires are saved, click the button \"Download Credentials\".</p> <p></p> <p>4. Switch on \"Create Service Account\" and enter the service user name into the box.</p> <p>Click \"Download\" to get the ION API file.</p> <p></p> <p></p>","title":"Step by step documentation how to create a Infor ION API file that is needed for the Infor export."},{"location":"doc2/export/export-to-flow2/","tags":["DOC\u00b2","Settings","Export","FLOW\u00b2"],"text":"<p>Step by Step guide how to export documents to FLOW\u00b2</p> <p>1. Login to DOC\u00b2, click on settings and select \"Export\".</p> <p></p> <p>Settings - Export</p> <p>2. Click on \"Add integration\"</p> <p></p> <p>Settings - Export - Add integration</p> <p>3. Choose \"Flow\"</p> <p></p> <p>4. Select Integration for Document Type INVOICE, choose \"Invoice verification\", \"Incoming invoice\" and upload the mapping file</p> <p>FLOW2_MappingsDownload</p> <p></p> <p>5. Click SAVE and you will see saved settings</p> <p></p> <p>With this the settings are made.</p>  <p>Now you can</p> <ol> <li>Upload a document in DOC\u00b2, validate and export it.</li> <li>Go to FLOW\u00b2 -&gt; Documents -&gt; recently created - here you will find the just validated and exported document</li> </ol> <p>All configurations required in FLOW\u00b2 can be found here</p>","title":"Export to Flow\u00b2"},{"location":"doc2/export/export-to-infor/","tags":["DOC\u00b2","Export","Infor","DOC\u00b2"],"text":"<pre><code>graph LR\n  A[Start] --&gt; B{Invoice?};\n  B --&gt;|Yes| C[Extraction];\n  C --&gt; D[Infor LN or M3];\n  D --&gt; E[Send to IDM];\n  B ----&gt;|No| E[Send to IDM];\n  E --&gt; F[End];</code></pre> <p>Here you can find all the useful pages to connect your infor environment correctly:</p> <ul> <li> How to create a BOD mapping file</li> <li> Export to Infor ION and IDM</li> <li> How to create a IDM mapping file</li> <li> How to create an Infor ION file</li> <li> Export to Infor IDM</li> </ul>","title":"Export to Infor"},{"location":"doc2/export/how-to-create-a-bod-mapping-file/","tags":["DOC\u00b2","Export","Infor","BOD","Mapping"],"text":"","title":"How to create a BOD mapping file"},{"location":"doc2/export/how-to-create-a-bod-mapping-file/#step-by-step-guide-how-to-create-a-bod-mapping-file","tags":["DOC\u00b2","Export","Infor","BOD","Mapping"],"text":"<p>You can download a example mapping file here:</p> <p>BOD mapping exampleDownload</p> <p>To use the example file, rename the file from \u201cBOD_Mapping.txt\u201d to \u201cBOD_Mapping.properties\u201d.</p> <p>*Here you can find an explanation how the file is structured.*</p> <p>In the first block, all static values will be defined. Fields that would need an adjustment are \"LogicalID\" and \"AccountingEntityID\".</p> <p>The \"LogicalID\" must be set to the logical ID of the IMS connection point that was defined for the DOC\u00b2 BOD export.</p> <p>The \"AccountingEnity\" must be set to the accounting entity of the target Infor ERP system.</p> <pre><code>#All static field attributes.\nStatic_Fields=AlternateDocSchema,AlternateDocLocation,LogicalID,ConfirmationCode,actionCode,AccountingEntityID\n\nSFP_AlternateDocSchema=SyncCaptureDocumentType\\\\DataArea\\\\CaptureDocument\\\\AlternateDocumentID\\\\ID\\\\schemeName\nSFV_AlternateDocSchema=CorrelationID\n\nSFP_AlternateDocLocation=SyncCaptureDocumentType\\\\DataArea\\\\CaptureDocument\\\\AlternateDocumentID\\\\ID\\\\location\nSFV_AlternateDocLocation=doc2\n\nSFP_LogicalID=SyncCaptureDocumentType\\\\ApplicationArea\\\\Sender\\\\LogicalID\nSFV_LogicalID=lid://infor.ims.doc2export\n\nSFP_ConfirmationCode=SyncCaptureDocumentType\\\\ApplicationArea\\\\Sender\\\\ConfirmationCode\nSFV_ConfirmationCode=OnError\n\nSFP_actionCode=SyncCaptureDocumentType\\\\DataArea\\\\Sync\\\\ActionCriteria\\\\ActionExpression\\\\actionCode\nSFV_actionCode=Add\n\nSFP_AccountingEntityID=SyncCaptureDocumentType\\\\DataArea\\\\Sync\\\\AccountingEntityID\nSFV_AccountingEntityID=infor.ln.100\n</code></pre>  <p>In the second block you can adjust the document type mapping. On the left side you have the document type of DOC\u00b2 and on the right side the document type of the BOD.</p> <pre><code>#All generated fields.\nGenerated_Fields=CreationDateTime,BODID\n\nGFP_BODID=SyncCaptureDocumentType\\\\ApplicationArea\\\\BODID\nGFV_BODID=BODID\n\nGFP_CreationDateTime=SyncCaptureDocumentType\\\\ApplicationArea\\\\CreationDateTime\nGFV_CreationDateTime=CurrentDate\n\n#Document Type path.\nDT_Path=SyncCaptureDocumentType\\\\DataArea\\\\CaptureDocument\\\\DocumentType\n\n#Mapping between doc2 document and IDM document.\nDocument_Types=Invoice\nInvoice=SupplierInvoice\n</code></pre>  <p>In the third block you can adjust the field mapping. On the left side are the fields of DOC\u00b2 and on the right side the field names of the BOD.</p> <pre><code>#Index Field Mapping\nIndex_Fields=INVOICE_TYPE,PURCHASE_ORDER,INVOICE_NUMBER,INVOICE_DATE,DELIVERY_DATE,PAYMENT_TERMS,TAX_RATE,TAX_AMOUNT,NET_AMOUNT,TOTAL_AMOUNT,CURRENCY,VENDOR_ID,VENDOR_NAME,VAT_NO_EXTRACTED,IBAN_EXTRACTED,ACCOUNTING_ENTITY,CORRELATION_ID\nIF_INVOICE_TYPE=InvoiceType\nIF_PURCHASE_ORDER=PurchaseOrder\nIF_INVOICE_NUMBER=InvoiceNumber\nIF_INVOICE_DATE=InvoiceDate\nIF_DELIVERY_DATE=DeliveryDate\nIF_PAYMENT_TERMS=PaymentTerms\nIF_TAX_RATE=VatPercent\nIF_TAX_AMOUNT=VATAmount\nIF_NET_AMOUNT=NetAmount\nIF_TOTAL_AMOUNT=TotalAmount\nIF_CURRENCY=Currency\nIF_VENDOR_ID=SupplierID\nIF_VENDOR_NAME=SupplierName\nIF_IBAN_EXTRACTED=AccountNumber\nIF_VAT_NO_EXTRACTED=VATRegNo\n#IF_ACCOUNTING_ENTITY=AccountingEntityID\nIF_CORRELATION_ID=AlternateDocumentID\n#IF_VENDOR_IBAN=BankAccount\n</code></pre>  <p>In the rest of the file should stay as is and does not need any modification.</p> <pre><code>#If index field value is to be used somewhere else define path here.\n\nIFP_CORRELATION_ID=SyncCaptureDocumentType\\\\DataArea\\\\CaptureDocument\\\\AlternateDocumentID\\\\ID\nIFP_INVOICE_NUMBER=SyncCaptureDocumentType\\\\DataArea\\\\CaptureDocument\\\\DocumentID\\\\ID\nIFP_INVOICE_DATE=SyncCaptureDocumentType\\\\DataArea\\\\CaptureDocument\\\\DocumentDateTime\n#IFP_ACCOUNTING_ENTITY=SyncCaptureDocumentType\\\\DataArea\\\\Sync\\\\AccountingEntityID\n\n#Index field common path\nIF_COMMON_PATH=SyncCaptureDocumentType\\\\DataArea\\\\CaptureDocument\\\\DocumentField\n\nIF_Attributes=languageID\n\nIFP_languageID=SyncCaptureDocumentType\\\\DataArea\\\\CaptureDocument\\\\DocumentField\\\\Name\\\\languageID\nIFV_languageID=en-us\n\n\n#IF_Elements=name,value,fieldOrderNumber,datatype,category,pageID,fieldEnumeration\nIF_Elements=name,value,fieldOrderNumber,page,fieldEnumeration\nIFP_name=SyncCaptureDocumentType\\\\DataArea\\\\CaptureDocument\\\\DocumentField\\\\Name\nIFP_value=SyncCaptureDocumentType\\\\DataArea\\\\CaptureDocument\\\\DocumentField\\\\Value\nIFP_fieldOrderNumber=SyncCaptureDocumentType\\\\DataArea\\\\CaptureDocument\\\\DocumentField\\\\FieldOrderNumber\nIFP_page=SyncCaptureDocumentType\\\\DataArea\\\\CaptureDocument\\\\DocumentField\\\\PageID\nIFP_fieldEnumeration=SyncCaptureDocumentType\\\\DataArea\\\\CaptureDocument\\\\DocumentField\\\\FieldValueEnumerationString\n\n\nPages_COMMON_PATH=SyncCaptureDocumentType\\\\DataArea\\\\CaptureDocument\\\\DocumentPage\n\nPage_Elements=pageID,sourceFileName,fileMimeType\nPFP_pageID=SyncCaptureDocumentType\\\\DataArea\\\\CaptureDocument\\\\DocumentPage\\\\PageID\nPFP_sourceFileName=SyncCaptureDocumentType\\\\DataArea\\\\CaptureDocument\\\\DocumentPage\\\\SourceFileName\nPFP_fileMimeType=SyncCaptureDocumentType\\\\DataArea\\\\CaptureDocument\\\\DocumentPage\\\\SourceMimeType\n\nBatch_Level_Properties=fileSize,lastModificationPerson,lastModifiedDateTime\n\n#Path_CreatePerson=SyncCaptureDocumentType\\\\DataArea\\\\CaptureDocument\\\\CreationPerson\\\\Name\nPath_fileSize=SyncCaptureDocumentType\\\\DataArea\\\\CaptureDocument\\\\FileSize\nPath_lastModificationPerson=SyncCaptureDocumentType\\\\DataArea\\\\CaptureDocument\\\\LastModificationPerson\\\\Name\nPath_lastModifiedDateTime=SyncCaptureDocumentType\\\\DataArea\\\\CaptureDocument\\\\LastModificationDateTime\n</code></pre>","title":"Step by step guide how to create a BOD mapping file."},{"location":"doc2/export/how-to-create-a-idm-mapping-file/","tags":["DOC\u00b2","Export","Infor","IDM","Mapping"],"text":"","title":"How to create a IDM mapping file"},{"location":"doc2/export/how-to-create-a-idm-mapping-file/#step-by-step-guide-how-to-create-a-idm-mapping-file","tags":["DOC\u00b2","Export","Infor","IDM","Mapping"],"text":"<p>You can download a example mapping file here:</p> <p>IDM mapping exampleDownload</p> <p>To use the example file, rename the file from \"IDM_Mapping.txt\" to \"IDM_Mapping.properties\".</p> <p>Here you can find an explanation how the file is structured.</p> <p>In the first block the document type gets mapped. On the left side you see the document type name of DOC\u00b2 and the right side the document type name of IDM.</p> <pre><code>#Define Name of document\n#Example: &lt;Doc2DocumentType&gt;=&lt;IDMDocumentType&gt;\n#Invoice=LN_SupplierInvoice\nINVOICE=LN_SupplierInvoice\n</code></pre>  <p>In the second block you can define static values which will be used in the mapping file.</p> <p>In the example there is a static field for FileNameSeperator and ACLString.</p> <p>With the field ACLString you can define the ACL that will set in IDM for each exported document.</p> <pre><code>#Define mappings for the static values\n#Example: Static_Values=&lt;StaticVariableName&gt;:&lt;type&gt;\nStatic_Values=FileNameSeparator,ACLString\n#Example: SF_&lt;StaticVariableName&gt; = StaticValue\nSV_FileNameSeparator=_\nSV_ACLString=Public\n</code></pre>  <p>In the third block you can define static values that will be transferred to IDM.</p> <p>It will be use to set the EntityType, AccountingEntity and GroupAccountingEntity in IDM.</p> <p>The values need to be set accordingly to your evironment.</p> <pre><code>#Define mappings for the static fields\n#Example: Static_Fields=&lt;IDMAttributeId&gt;:&lt;type&gt;\nStatic_Fields=MDS_EntityType:STRING,MDS_AccountingEntity,MDS_BodRefAccEntity\n#Example: SF_&lt;IDMAttributeId&gt; = StaticValue\nSF_MDS_EntityType=InforERPEnterpriseFinancialsReceivedInvoice\nSF_MDS_AccountingEntity=100\nSF_MDS_BodRefAccEntity=infor.ln.0100\n</code></pre>  <p>In the fourth block you can map the DOC\u00b2 fields to the IDM attributes.</p> <pre><code>#Define index fields\n#Example: Index_Fields=&lt;IndexFieldIdFromEphesoft&gt;:&lt;type&gt;\nIndex_Fields=INVOICE_NUMBER:STRING,CORRELATION_ID:STRING,ACCOUNTING_ENTITY:STRING,INVOICE_DATE:STRING,GROUP_ACCOUNTING_ENTITY:STRING,SUPPLIER_NAME:STRING\n#Example: IF_&lt;IndexFieldIdFromDoc2&gt; = &lt;IDMAttributeId&gt;\nIF_INVOICE_NUMBER=SupplierInvoiceNumber\nIF_CORRELATION_ID=MDS_id1\nIF_INVOICE_DATE=InvoiceDate\nIF_SUPPLIER_NAME=SupplierName\n</code></pre>  <p>In the fifth block the ACL String of the second block will be mapped to the ACL field of IDM. Usualy this should not be changed.</p> <pre><code>#Define ACL Field value\n#Example: ACL_Fields= Concatenation of other defined fields that together should be a valid ACL in IDM\nACL_Fields=SV_ACLString\n</code></pre>  <p>In the last block you can define the \"Searchable_PDF_Name\". That will be the name if the document in IDM.</p> <p>It can be a single field name or a concatenation of different fields. For example:</p> <p>Searchable_PDF_Name=IF_INVOICE_NUMBER+SV_FileNameSeparator+IF_SUPPLIER_NAME</p> <pre><code>#Define Resource Mapping\n#Example: Searchable_PDF_Name= Concatenation of other defined fields\nSearchable_PDF_Name=IF_INVOICE_NUMBER\n</code></pre>","title":"Step by step guide how to create a IDM mapping file."},{"location":"doc2/export/infor-idm/","tags":["DOC\u00b2","Export","Infor","IDM","DOC\u00b2"],"text":"","title":"Export to Infor IDM"},{"location":"doc2/export/infor-idm/#export-to-infor-document-management-without-publishing-the-document-values-in-a-seperate-bod","tags":["DOC\u00b2","Export","Infor","IDM","DOC\u00b2"],"text":"<p>Step by Step guide how to export documents to Infor Document Management (IDM) without publishing the values in a seperate BOD.</p> <p>Prerequisites:</p> <ul> <li>An admin user f\u00fcr InforOS with the security roles \"ION Desk Admin\", \"ION API Admin\", \"IDM Admin\".</li> <li>An ION API file to create the communication between DOC\u00b2 and Infor IDM. Follow the documentation here: How to create an Infor ION file</li> <li>A IDM document type where the documents shall be exported to.</li> <li>A IDM Mapping file which IDM uses to know which document content represents which information. You find a example of the IDM mapping file on this page: How to create a IDM mapping file</li> </ul> <p>Login to DOC\u00b2, click on settings and select \"Export\".</p> <p></p> <p>Settings - Export</p> <p>Click on \"Add integration\"</p> <p></p> <p>Settings - Export - Add integration</p> <p>Choose \"Infor IDM\"</p> <p></p> <p>Click on the ION API File section and select the ION API file that you want to use for the communation between DOC\u00b2 and IDM. If you don\u00b4t have a ION API file follow this documentation to create one: How to create an Infor ION file</p> <p>On normal exports you will have to pick \"CLOUD\" on the left slider. With the right slider you can choose if you want to export the normal PDF Invoice to Infor or if you want to export the Invoice as ZUGfERD (PDF with X-Rechnung format ZUGfERD XML attachment).   On exports using Watchdog, you will have to pick \"ONPREM\" on the left slider.  </p> <p>Click on the IDM Mapping file section and choose the IDM Mapping file you want to use for the export. You find a example of the IDM mapping file on this page: How to create a IDM mapping file    </p> <p>Click \"Save\" to the save the export setting.</p>","title":"Export to Infor Document Management without publishing the document values in a seperate BOD"},{"location":"doc2/export/infor-ion/","tags":["DOC\u00b2","Export","Infor","Infor OS","ION","IDM"],"text":"","title":"Export to Infor ION and IDM"},{"location":"doc2/export/infor-ion/#_1","tags":["DOC\u00b2","Export","Infor","Infor OS","ION","IDM"],"text":"<p>Export to Infor Document Management with publishing the document values in a seperate BOD</p> <p>Step by Step guide how to export documents to Infor Document Management (IDM) with publishing the values in a seperate Sync.CaptureDocument BOD.</p> <p>Prerequisites:</p> <ul> <li>An admin user f\u00fcr InforOS with the security roles \"ION Desk Admin\", \"ION API Admin\", \"IDM Admin\".</li> <li>An ION API file to create the communication between DOC\u00b2 and Infor IDM. Follow the documentation here: How to create an Infor ION file</li> <li>A IDM document type where the documents shall be exported to.</li> </ul>","title":"Export to Infor ION and IDM"},{"location":"doc2/export/infor-ion/#doc2-steps","tags":["DOC\u00b2","Export","Infor","Infor OS","ION","IDM"],"text":"<p>Login to DOC\u00b2, click on settings and select \"Export\".</p> <p></p> <p>Settings - Export</p> <p>Click on \"Add integration\"</p> <p></p> <p>Settings - Export - Add integration</p> <p>Choose \"Infor ION\"</p> <p></p> <p>Click on the ION API File section and select the ION API file that you want to use for the communication between DOC\u00b2 and IDM. If you don't have a ION API file follow this documentation to create one: How to create an Infor ION file</p> <p></p> <p>Click on the IDM Mapping file section and choose the IDM Mapping file you want to use for the export. You find a example of the IDM mapping file on this page: How to create a IDM mapping file</p> <p></p> <p>Click on the BOD Mapping file section and choose the BOD Mapping file you want to use for the export. You find a example of the BOD mapping file on this page: How to create a BOD mapping file</p> <p></p> <p>Click \"Save\" to the save the export setting.</p>","title":"DOC\u00b2 steps"},{"location":"doc2/export/infor-ion/#infor-ion-steps","tags":["DOC\u00b2","Export","Infor","Infor OS","ION","IDM"],"text":"<p>Open \"Infor ION API\", select \"Authorized Apps\" and click on the DOC\u00b2 application.</p> <p></p> <p>Copy and store the \"Client ID\", this ID will be required later.</p> <p></p> <p>Open \"ION Desk\", open the burger menu, select \"Connect\" and click on \"Connection points\"</p> <p>Click on \"+Add\" and choose \"IMS via ION API\"</p> <p></p> <p>Enter the name meaningful \"Doc2Export\" and give it a meaningful description.</p> <p>Uncheck the box \"Application has IMS EndPoint\" and enter the \"Client ID\" copied from ION API.</p> <p></p> <p>Change to the \"Documents\" tab.</p> <p>Click on the \"+\" icon and enter to the filter field \"Sync.CaptureDocument\". The list should show the correct BOD now, check the box in front of \"Sync.CaptureDocument\" and click \"OK\".</p> <p></p> <p>Click the disk icon to save the settings.</p> <p></p> <p>Change to \"Data Flows\" and click on \"+Add\" and select \"Document Flow\".</p> <p></p> <p>Enter a meaningful name and description.</p> <p>Drag and drop an \"Application\" to the flow and name it \"Doc2\".</p> <p></p> <p>Click on the \"+\" icon and select the \"Doc2\" application, in this case \"Doc2Export\" and click \"OK\".</p> <p></p> <p>Click on the disk icon to save the new document flow.</p> <p></p>","title":"Infor ION steps"},{"location":"doc2/export/webhook/","tags":["DOC\u00b2","Export","Webhook"],"text":"","title":"Webhook"},{"location":"doc2/export/webhook/#exporting-data-via-a-webhook","tags":["DOC\u00b2","Export","Webhook"],"text":"<p>A webhook is an easy way to exchange data between online applications.  </p> <p>Follow the steps to configure the webhook export.</p> <p>Login to DOC\u00b2, click on settings and select \"Export\".</p> <p></p> <p>Settings - Export</p> <p>Click on \"Add integration\"</p> <p></p> <p>Settings - Export - Add integration</p> <p>Choose \"Webhook\"</p> <p></p> <p>Settings - Export - Add integration - Webhook</p> <p>Enter the webhook URL and click on \"Save\"</p> <p></p> <p>Settings - Export - Add integration - Webhook - Webhook settings</p>","title":"Exporting data via a webhook"},{"location":"doc2/pomatching/po-matching-delivery-notes/","tags":["DOC\u00b2","PO Matching","Delivery Notes"],"text":"<p>+++DOCUMENTATION IN PROGRESS+++</p> <p>If quantity of the ordered item(s) does not match the quantity on the invoice you need to start the match with received Delivery Note.</p>","title":"Delivery Note"},{"location":"doc2/pomatching/po-matching-delivery-notes/#upload-the-delivery-note-in-doc2","tags":["DOC\u00b2","PO Matching","Delivery Notes"],"text":"<p>Sign up for a 30 days free trail</p> <p></p> <p>Here you will also find the red symbol, because the quantity on the delivery note does not match the quantity of the purchase order.</p> <p></p> <p>Access the matching overview by clicking on the Matching Symbol on the dashboard.</p> <p></p> <p>Or by choosing PO Matching in the lower right corner when you have opened the document.</p> <p></p> <p>The matches can now be corrected:</p> <p>The \u201cx\u201d would delete the match on the invoice.</p> <p>A new match from the purchase order can be added to the delivery note by dragging and dropping the appropriate data row(s).</p> <p></p> <p></p> <p>Save to apply all changes.</p> <p></p> <p>Once everything is correct the document can be validated and exported.</p>","title":"Upload the Delivery Note in DOC2"},{"location":"doc2/pomatching/po-matching-invoices/","tags":["DOC\u00b2","PO Matching","Invoice","LN"],"text":"","title":"PO Matching - Invoices"},{"location":"doc2/pomatching/po-matching-invoices/#create-a-purchase-order-in-ln","tags":["DOC\u00b2","PO Matching","Invoice","LN"],"text":"<p>Open LN and go to Purchase Order Intake Workbench</p> <p>Sign up for a 30 days free trail</p> <p></p> <p>Select Purchase Orders</p> <p></p> <p>and add a new one by choosing the + symbol</p> <p></p> <p>Now you can create the document and the corresponding table and its values.</p> <p>First add the Business Partner via the search function (the magnifying glas), clicking out of the marked field, fills the rest of them with the stored data.</p> <p></p> <p>For the next step add the order lines. You need to add each line manually and need to input the Item and order Quantity \u2013 the rest will be filled automatically.</p> <p></p> <p>After that save the purchase order. You must approve said purchase order and so that the settings are relayed to the system.</p> <p></p>","title":"Create a purchase order in LN"},{"location":"doc2/pomatching/po-matching-invoices/#upload-the-invoice-in-doc2","tags":["DOC\u00b2","PO Matching","Invoice","LN"],"text":"<p></p> <p>The symbol under \u201cMatched\u201d indicates the current matching status \u2013 green for matched and red for not matched. Ideally it is already green.</p> <p>Open the document and validate the extracted fields.</p> <p></p>  <p>After validating all extracted fields open matching overview by clicking on PO MATCHING</p> <p></p> <p>You can also go directly from dashboard to the matching overview by following the steps below</p>  <p>The symbol under \u201cMatched\u201d indicates the current matching status \u2013 green for matched and red for not matched. Ideally it is already green.</p> <p></p>","title":"Upload the Invoice in DOC2"},{"location":"doc2/pomatching/po-matching-invoices/#case-1-matched","tags":["DOC\u00b2","PO Matching","Invoice","LN"],"text":"<p>Access the matching overview by clicking on the Matching Symbol on the dashboard.</p> <p></p> <p></p> <p>In this case the quantity of items ordered matches the quantity on the invoice, the match and thus the document can be validated and exported.</p> <p></p> <p>invoice exporting</p> <p></p> <p>exported successfully</p>","title":"Case 1: Matched"},{"location":"doc2/pomatching/po-matching-invoices/#case-2-not-matched","tags":["DOC\u00b2","PO Matching","Invoice","LN"],"text":"<p>Access the matching overview by clicking on the Matching Symbol on the dashboard.</p> <p></p> <p></p> <p>Here you can see that the quantity of the ordered item does not match the quantity on the invoice.</p> <p>The matches can now be corrected:</p> <p>The \u201cx\u201d would delete the match on the invoice.</p> <p>A new match from the purchase order can be added to the invoice by dragging and dropping the appropriate data row(s).</p> <p></p> <p></p> <p>Save to apply all changes.</p> <p></p> <p>Once everything is correct the document can be validated and exported.</p> <p></p> <p>invoice exporting</p> <p></p> <p>exported successfully</p> <p></p> <p>Since in LN no comparison regarding the quantity between order and invoice is possible, in this case you have to make the comparison with the delivery bill. You can find out how this works here.</p>","title":"Case 2: Not matched"},{"location":"doc2/pomatching/po-matching-invoices/#check-the-receipt-of-the-invoice-in-ln","tags":["DOC\u00b2","PO Matching","Invoice","LN"],"text":"<p>To see if the process was successful, you can check this in LN by choosing \u201cProcess Payables Workbench\u201d</p> <p></p> <p></p> <p>Search by invoice number in the corresponding field</p> <p></p> <p>If you click on this icon, the following overview will open, in which you will see the order and the assigned invoice.</p> <p></p>","title":"Check the receipt of the invoice in LN"},{"location":"doc2/pomatching/po-matching-order-confirmation/","tags":["DOC\u00b2","PO Matching","Order Confirmation"],"text":"<p>+++DOCUMENTATION IN PROGRESS+++</p>","title":"Order Confirmation"},{"location":"doc2/pomatching/po-matching/","tags":["DOC\u00b2","PO Matching","Infor"],"text":"<p>There are three ways you can match your Purchase Order</p> <ol> <li>with the corresponding invoice</li> <li>with the corresponding delivery note</li> <li>with the corresponding order confirmation</li> </ol>","title":"Overview"},{"location":"doc2/pomatching/po-matching/#corresponding-settings-must-be-made-in-doc2","tags":["DOC\u00b2","PO Matching","Infor"],"text":"<p></p> <p>Settings - Modules - Purchase Order</p> <p>On documents, the Purchase Order is listed either in the headers or, for some, in the table rows.</p> <p>During validation, the supplier's PO must be extracted correctly.</p>","title":"Corresponding settings must be made in DOC\u00b2"},{"location":"doc2/pomatching/po-matching/#keyboard-accessibility-for-po","tags":["DOC\u00b2","PO Matching","Infor"],"text":"<ol> <li>Click on the PO Matching required Button of your Document on dashboard</li> </ol> <p></p> <p>2. You will find the Keyboard Shortcuts by clicking on the keyboard icon</p> <p></p> <p></p>","title":"Keyboard accessibility for PO"},{"location":"doc2/table/add-new-table-column/","tags":["Table","DOC\u00b2"],"text":"<p>DOC\u00b2 offers the possibility to manually create columns for extracted documents. This is necessary when there is a need to manually map columns to rows (fields) on the extracted document. When this is necessary and how it works you will learn here: Manual row selection</p> <p>Import any document and open it. Navigate to the table extraction view like via the \"LINE ITEMS\" button:</p> <p>Sign up for a 30 days free trail</p> <p></p>","title":"Add new table column"},{"location":"doc2/table/add-new-table-column/#activate-the-training-mode","tags":["Table","DOC\u00b2"],"text":"<p>Columns can be added manually using the following button.</p> <p></p> <p>In the window that opens, you can specify a name for the column to be generated. Furthermore, you can set whether it is an optional or a mandatory field. You can also specify whether the column is a field that contains text (column type STRING), that contains numerical values (column type AMOUNT) or that contains a date (column type DATE).</p> <p></p> <p>Once the column has been created by clicking on \"PROCEED\", it can be used for manual mappings (Manual row selection).</p> <p></p>","title":"Activate the training mode."},{"location":"doc2/table/advanced-settings/","tags":["Table","DOC\u00b2","Settings"],"text":"<p>In the table extraction view you will find the menu item \"Advance Settings\" in the upper action bar (make sure that the training mode is activated):</p> <p></p> <p>Following window will be opened:</p> <p></p> <p>Below functionalities are available:</p> <p>Header row count</p> <p>Here you can define the number of lines of a table header. For example, the table header line can be two lines:</p> <p></p> <p>Accordingly, the value in \"Header row count\" is set to two:</p> <p></p> <p>Why is it needed? It might be that DOC\u00b2 does not recognize the second line in the table header as header line. In this case, it incorrectly inserts it into the table as extracted value. This can be easily prevented with this function.</p> <p>Example before:</p> <p></p> <p>Example after:</p> <p></p> <p>Move Extra Row to desc</p> <p>If a table starts with one single row that is above all the other information like position and so on, it might be that DOC\u00b2 extracts this line as extra row and grouping of the information for example by position might not work properly.</p> <p></p> <p>To work around this problem, the \"Move Extra Row to desc\" option can be enabled. This causes that this single row is taken over into the information below and can be extracted together with them into one row and then grouped.</p> <p></p> <p>Example before:</p> <p></p> <p>Example after:</p> <p></p> <p>Minimum grouped rows</p> <p>+++ DOCUMENTATION IN PROGRESS +++</p> <p>Maximum grouped rows</p> <p>+++ DOCUMENTATION IN PROGRESS +++</p> <p>Distinct group columns</p> <p>+++ DOCUMENTATION IN PROGRESS</p>","title":"Advanced settings"},{"location":"doc2/table/define-table-and-columns/","tags":["DOC\u00b2","Table","Columns"],"text":"<p>Define tables</p> <p>To define tables and columns on a document please import a document, open it and go to the table extraction view like already known (via \"Line Items\").</p> <p>You will end up in following screen where you can activate the Training Mode:</p> <p></p> <p>Via the \"Edit\" button table selection mode will be activated and you will be able to edit the document shown on the left side:</p> <p></p> <p>In general your are now able to use the autodetect tables functionality and the system will automatically define the tables on the document:</p> <p></p> <p>If the system is not able to find the tables automatically you can manually define the tables on the document like shown in the video below:</p> <p>Define columns</p> <p>Once the tables are defined you can manually define the columns via the following button:</p> <p></p> <p>Define and sort the columns via drag and drop on the document like shown in the video below:</p> <p>Repeat this for the tables on the other pages as well. As an alternative if the tables are equal on each page you can use the following button to use the same column for all tables defined in the document. This functionality copies the columns that you have defined to all other pages as well:</p> <p></p> <p>If the document is very confusing, it can be zoomed in and out using the \"Zoom in\" and \"Zoom out\" functionality. This is helpful, for example, when a lot of information is close together and this makes it difficult to define the columns:</p> <p></p> <p>If you defined a column by mistake it can be selected by clicking it and deleted again via the following button:</p> <p></p> <p>Note: The button is only visible if the column is selected.</p> <p>If you are done defining all tables and all columns on your document use the \"Save\" button to activate your changes and to extract the data from the document:</p> <p></p> <p>The data of all defined areas will be extracted and shown on the right side:</p> <p></p> <p>In the next section you will learn how to adjust the data that has been extracted.</p>","title":"Define tables and columns"},{"location":"doc2/table/group-function/","tags":["Tables","Table Extraction","DOC\u00b2"],"text":"<p>Once a table has been extracted via DOC\u00b2 and the columns have been mapped (Mapping of columns the obtained data can be grouped to get a structured result set of all extracted data.</p> <p>Sign up for a 30 days free trail</p>","title":"Group function to extract data from tables"},{"location":"doc2/table/group-function/#what-does-this-mean-in-detail","tags":["Tables","Table Extraction","DOC\u00b2"],"text":"<p>All documents from order confirmations to invoices can vary enormously in complexity from company to company. For example, in documents, information may be presented in tables in some columns across multiple rows and in other columns across only one row.</p> <p>As an example, you can see the German invoice below, where the information in column \"Bezeichnung\" extends over several lines (positions).</p> <p></p> <p>At this point, another advantage of DOC\u00b2 comes into play. It extracts the data in the first step 1 to 1. The result looks like this:</p> <p></p> <p>BUT: Now there is the possibility to group data based on a specific column. That means in this case it can be grouped by the column \"Position\" as shown in the following video. This in turn groups the rows of the \"Description\" column into one row. So that at the end you get a structured overall picture of the export and the data can now be processed further.</p> <p>If the grouping was created by mistake, it can be removed at any time, as also shown in the video.</p> <p>The result of grouping looks like this:</p> <p></p>","title":"What does this mean in detail?"},{"location":"doc2/table/manual-row-selection/","tags":["DOC\u00b2","Row","Selection","manually","Table Extraction"],"text":"<p>It is possible that on some documents text in rows is not only written under one column. It might happen that it is written through different columns like in the example below:</p> <p></p> <p>On the screenshot you can see that the table and columns have already been defined. Having a detailed look on the highlighted information (PRAEF) you will recognize that the text is written through columns \"Bezeichnung\", \"Menge\", \"ME\" and \"Preis in EUR\".</p> <p>Sign up for a 30 days free trail</p> <p>In that case it is not possible for the system to automatically define to which column the information belongs.</p> <p>To solve this issue DOC\u00b2 offers a possibility to manually select and map information on a document to any column.</p> <p>First of all make sure training mode is activated:</p> <p></p> <p>In addition you need to activate the row edit mode:</p> <p></p> <p>Please note that the manual mapping of text to a column is only possible for extractable columns (blue colour):</p> <p></p> <p>The violet ones can not be mapped manually as the mapping has already been done via the columns defined on the document.</p> <p>Extractable columns need to be created first. You will learn here how that works: Add new table column</p> <p>Once the column has been created, training mode and row edit mode are activated you can map text on the document to the column as shown in the video below:</p> <p>In the video you can see how to:</p> <ul> <li>select an area with your mouse</li> <li>double click a value to select the area (only possible for values without spaces)</li> <li>delete mapping and re-map the area</li> </ul>","title":"Manual row selection"},{"location":"doc2/table/save-rules-and-delete-rules/","tags":["DOC\u00b2","Table Extraction","Rules","Save","Delete"],"text":"<p>Sign up for a 30 days free trail</p> <p>As soon as a document has been trained in DOC\u00b2 and all rules for the extraction of the tables have been stored for this document, they have to be saved so that no manual training is necessary for future imports. Instead, the documents and their tables are extracted fully automatically by DOC\u00b2 and the data is brought into the structure defined by the training.</p> <p>As soon as the document/table extraction has been trained and the data is available in a satisfactory format, the rules for the table extraction can be saved using the \"SAVE RULES\" button.</p> <p></p> <p>As soon as this document is imported into DOC\u00b2 in the future, the rules are automatically applied during extraction and always bring the data into the trained format.</p> <p>The rule indicator shows how many rules have been defined and saved for this document.</p> <p></p> <p>Rules for documents can also be deleted using the \"DELETE RULES\" button. This may be necessary if rules have been saved incorrectly or in a qualitatively unsatisfactory way. This allows a document to be retrained. ATTENTION: Deleting rules will affect all documents with the same or similar format. And these documents must then be completely re-trained. This means that deleting the rules should be done with great care.</p> <p></p>","title":"Save and delete rules"},{"location":"doc2/table/table-train/","tags":["DOC\u00b2","Table","Line Items"],"text":"<p>With DOC\u00b2 it is possible to extract tables from PDF-Files. That will be done via the \"Line Items\" functionality. It is used for extracting the tables from all types of documents (Invoices, Contracts, Forms, Medical Prescriptions etc.).</p> <p>The extraction of data in tables can be achieved by following the steps described below:</p> <p>1. Login to your account with Email and Password you are given.</p> <p>2. On Dashboard, import any document</p> <p>3. Click on the document to Open</p> <p>4. Now, scroll down the extracted fields page to Line Items section</p> <p>5. Click on the table icon inside the textbox</p> <p></p> <p>You will end up in the table extraction view.</p> <p>If the document contains very simple tables it will detect and extract them automatically:</p> <p></p> <p>In practice, tables on documents are often much more complex and have a wide variety of formatting and arrangements. For example, text may extend across several columns or there may be several lines of text in one position line. For example, in the case of long item descriptions or similar:</p> <p></p> <p>And this is where the advantage of DOC\u00b2 and its table extraction functionality comes into play. There are several ways to train the table extraction functionality and to achieve the best possible result, even with demanding tables.</p> <p>In the following sections you will learn how to train a table manually and what functionalities are available for this:</p>","title":"Table Extraction"},{"location":"doc2/table/training-of-table-extraction/","tags":["DOC\u00b2","Training","Table"],"text":"<ul> <li>How to define tables and columns</li> <li>Advanced settings</li> <li>Mapping of columns</li> <li>Group function</li> <li>Manual row selection</li> <li>Add new table column</li> <li>Save and delete rules</li> </ul>","title":"Table Extraction"},{"location":"example/approval/","tags":["Workflow\u00b2","Approval","Doc\u00b2","Ming.le","Infor OS"],"text":"<p>With the approval screen you can approve document for example invoice or other documents. Infor customer can forward the document to Infor IDM with a define status to archive it.</p>","title":"WF\u00b2 Approval with Doc\u00b2"},{"location":"example/approval/#video","tags":["Workflow\u00b2","Approval","Doc\u00b2","Ming.le","Infor OS"],"text":"","title":"Video"},{"location":"example/approval/#example","tags":["Workflow\u00b2","Approval","Doc\u00b2","Ming.le","Infor OS"],"text":"<pre><code>{\n  \"nodes\": [\n    {\n      \"name\": \"Start\",\n      \"type\": \"n8n-nodes-base.start\",\n      \"position\": [\n        640,\n        300\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"Rename Keys\",\n      \"type\": \"n8n-nodes-base.renameKeys\",\n      \"position\": [\n        1040,\n        300\n      ],\n      \"parameters\": {\n        \"keys\": {\n          \"key\": [\n            {\n              \"newKey\": \"NewName\",\n              \"currentKey\": \"name\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"Function\",\n      \"type\": \"n8n-nodes-base.function\",\n      \"position\": [\n        820,\n        300\n      ],\n      \"parameters\": {\n        \"functionCode\": \"// Don't panic!\\n// This is just an Example JSON Data\\n\\nconst json = `\\n  [\\n    {\\n      \\\"_id\\\":\\\"5078c3a803ff4197dc81fbfb\\\",\\n      \\\"email\\\":\\\"user1@gmail.com\\\",\\n      \\\"image\\\":\\\"some_image_url\\\",\\n      \\\"name\\\":\\\"Name 1\\\"\\n    },\\n    {\\n      \\\"_id\\\":\\\"5078c3a803ff4197dc81fbfc\\\",\\n      \\\"email\\\":\\\"user2@gmail.com\\\",\\n      \\\"image\\\":\\\"some_image_url\\\",\\n      \\\"name\\\":\\\"Name 2\\\"\\n    }\\n  ]\\n`;\\n\\n// Parse the JSON Data and store into a Variable called array\\nconst arr = JSON.parse(json);\\n\\n// Now, Return the Data inside the variable arr\\nreturn arr;\"\n      },\n      \"typeVersion\": 1\n    }\n  ],\n  \"connections\": {\n    \"Start\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Function\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Function\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Rename Keys\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}\n</code></pre>","title":"Example"},{"location":"example/export-excel/","tags":["Workflow\u00b2","Dropbox","Excel","Doc\u00b2"],"text":"<p></p> <p>In this example we trigger the result from Doc\u00b2 and write the result to excel and upload it to Dropbox.</p>","title":"Doc\u00b2 export to Excel and Upload to Dropbox"},{"location":"example/export-excel/#example","tags":["Workflow\u00b2","Dropbox","Excel","Doc\u00b2"],"text":"<pre><code>{\n  \"name\": \"Export to Dropbox\",\n  \"nodes\": [\n    {\n      \"parameters\": {},\n      \"name\": \"Start\",\n      \"type\": \"n8n-nodes-base.start\",\n      \"typeVersion\": 1,\n      \"position\": [\n        180,\n        420\n      ]\n    },\n    {\n      \"parameters\": {\n        \"document_type\": \"INVOICE\",\n        \"status\": \"validated_pending_export\"\n      },\n      \"name\": \"Status Trigger\",\n      \"type\": \"n8n-nodes-base.statusTrigger\",\n      \"typeVersion\": 1,\n      \"position\": [\n        200,\n        200\n      ],\n      \"webhookId\": \"b4e6be8c-5be1-4c75-8906-aa8790c1dd51\",\n      \"credentials\": {\n        \"Doc2AppApi\": {\n          \"id\": \"1\",\n          \"name\": \"Doc2App account\"\n        }\n      }\n    },\n    {\n      \"parameters\": {\n        \"operation\": \"toFile\",\n        \"fileFormat\": \"xlsx\",\n        \"options\": {\n          \"fileName\": \"excel.xlsx\"\n        }\n      },\n      \"name\": \"Spreadsheet File\",\n      \"type\": \"n8n-nodes-base.spreadsheetFile\",\n      \"typeVersion\": 1,\n      \"position\": [\n        900,\n        200\n      ]\n    },\n    {\n      \"parameters\": {\n        \"functionCode\": \"// Code here will run only once, no matter how many input items there are.\\n// More info and help: https://docs.polydocs.io/workflow/integrations/core-nodes/n8n-nodes-base.function\\n// Tip: You can use luxon for dates and $jmespath for querying JSON structures\\n\\n// Loop over inputs and add a new field called 'myNewField' to the JSON of each one\\n//for (item of items) {\\n//  item.json.myNewField = 1;\\n//}\\n\\n// You can write logs to the browser console\\nconsole.log('Done!');\\n\\nreturn items[0].json.fields_compact;\\n\\n\"\n      },\n      \"name\": \"Function\",\n      \"type\": \"n8n-nodes-base.function\",\n      \"typeVersion\": 1,\n      \"position\": [\n        640,\n        200\n      ]\n    },\n    {\n      \"parameters\": {\n        \"options\": {}\n      },\n      \"name\": \"Spreadsheet File1\",\n      \"type\": \"n8n-nodes-base.spreadsheetFile\",\n      \"typeVersion\": 1,\n      \"position\": [\n        1320,\n        200\n      ]\n    },\n    {\n      \"parameters\": {\n        \"path\": \"/excel.xlsx\",\n        \"binaryData\": true\n      },\n      \"name\": \"Dropbox\",\n      \"type\": \"n8n-nodes-base.dropbox\",\n      \"typeVersion\": 1,\n      \"position\": [\n        1320,\n        0\n      ],\n      \"credentials\": {\n        \"dropboxApi\": {\n          \"id\": \"4\",\n          \"name\": \"Dropbox account\"\n        }\n      }\n    }\n  ],\n  \"connections\": {\n    \"Status Trigger\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Function\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Start\": {\n      \"main\": [\n        []\n      ]\n    },\n    \"Spreadsheet File\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Spreadsheet File1\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"Dropbox\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Function\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Spreadsheet File\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Spreadsheet File1\": {\n      \"main\": [\n        []\n      ]\n    }\n  },\n  \"active\": false,\n  \"settings\": {},\n  \"id\": 2\n}\n</code></pre>","title":"Example"},{"location":"example/rename/","tags":["Workflow\u00b2","Example","Rename"],"text":"<p>Example to show how to rename Keys in a JSON</p> <p></p>","title":"Rename Keys"},{"location":"example/rename/#how-to-use-this-workflow","tags":["Workflow\u00b2","Example","Rename"],"text":"<p>Instructions</p> <ol> <li>Copy the workflow</li> <li>Navigate to your Workflow editor</li> <li>Click anywhere in the Workflow\u00b2 window</li> <li>Paste the code (ctrl + v or cmd + v)</li> </ol> <pre><code>{\n  \"nodes\": [\n    {\n      \"name\": \"Start\",\n      \"type\": \"n8n-nodes-base.start\",\n      \"position\": [\n        640,\n        300\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"Rename Keys\",\n      \"type\": \"n8n-nodes-base.renameKeys\",\n      \"position\": [\n        1040,\n        300\n      ],\n      \"parameters\": {\n        \"keys\": {\n          \"key\": [\n            {\n              \"newKey\": \"NewName\",\n              \"currentKey\": \"name\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"Function\",\n      \"type\": \"n8n-nodes-base.function\",\n      \"position\": [\n        820,\n        300\n      ],\n      \"parameters\": {\n        \"functionCode\": \"// Don't panic!\\n// This is just an Example JSON Data\\n\\nconst json = `\\n  [\\n    {\\n      \\\"_id\\\":\\\"5078c3a803ff4197dc81fbfb\\\",\\n      \\\"email\\\":\\\"user1@gmail.com\\\",\\n      \\\"image\\\":\\\"some_image_url\\\",\\n      \\\"name\\\":\\\"Name 1\\\"\\n    },\\n    {\\n      \\\"_id\\\":\\\"5078c3a803ff4197dc81fbfc\\\",\\n      \\\"email\\\":\\\"user2@gmail.com\\\",\\n      \\\"image\\\":\\\"some_image_url\\\",\\n      \\\"name\\\":\\\"Name 2\\\"\\n    }\\n  ]\\n`;\\n\\n// Parse the JSON Data and store into a Variable called array\\nconst arr = JSON.parse(json);\\n\\n// Now, Return the Data inside the variable arr\\nreturn arr;\"\n      },\n      \"typeVersion\": 1\n    }\n  ],\n  \"connections\": {\n    \"Start\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Function\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Function\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Rename Keys\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}\n</code></pre>","title":"How to use this workflow"},{"location":"example/workflow_mautic1/","tags":["Workflow\u00b2","MAUTIC","How-To"],"text":"<p></p> <p>This workflow starts with a WooCommerce trigger node in \"Order created\" mode. The node needs a WooCommerce REST API login consisting of the client key, the client secret and the general WooCommerce API URL of your online store. For information on how to create a WooCommerce REST API login, see: WooCommerce REST API</p> <p></p> <p>When activated, general information is received by the node, which is then converted into a better form for us.</p> <p>To do this, we create a small JS script in the functionnode that maps the information to specific terms. Under \"item.billing\" in the part of the message the WooCommerce node receives, that contains the customer data.</p> <p></p> <p>Since we are talking about orders here and on many webshops it is quite possible to place an order even as a non-registered user, we will consequently look if we already have a contact in MAUTIC with the given email and/or with the first and last name. To do this, we request all contacts via the MAUTIC Node. The MAUTIC node needs a normal login (username and password) and the base URL of your MAUTIC instance.</p> <p></p> <p>From the contact data received from MAUTIC, we now filter out the registered email addresses using the functionnode and a small javascript code and create a list of them. ( In this example we check only the used email address )</p> <p></p> <p>With the following IF node we check whether the e-mail address used for the order occurs in the list from MAUTIC and act accordingly. For the check by means of the IF Node we must insert the variable data there with the help of so-called expressions. We do this by clicking on the gears and selecting \"Add Expression\".</p> <p></p> <p>This will open the following window where in the case of Value1 under Expression as in the screenshot below we will use {{ $json[\"thelist\"].join(', ') }}. Short explanation: Expressions are always specified in {{ }}. $json specifies that it gets the information when the specific node is activated by the previous one, and the content within [\"thelist\"] is what we want to use. .join(', ') specifies that it is a comma-separated list. (The expression will be highlighted in red and the bottom section will say that it could not be found. This is because the information can only be found if it currently exists. This can be tested during test runs but won't be shown during normal activation).</p> <p></p> <p>For Value2, the email address entered by the user when placing the order is passed with {{ $node[\"Normalize\"].json[\"email\"] }}. Here $node[\"Normalize\"] specifies the name of the node from which the information is obtained. (Needed because the Normalize Node is not the preceding node) .json[\"email\"] then again specifies that we want to use the value \"email\" of the note output.</p> <p></p> <p>If it is a new customer, it will be saved as a new MAUTIC contact. For this we need again a MAUTIC Node, which is this time on \"Contact\" and \"Create\". Depending on what information customers provide when ordering or what information you actually want to use, you can set the contact creation individually. In the current example, we will use the customer's first and last name and email to create a MAUTIC contact. According to this we have to insert expressions in the MAUTIC node again to use the correct data. We pull the information from the Normalize Node as above and can therefore use the same expression {{ $node[\"Normalize\"].json[\"Information\"] }}. (For information we have to enter the desired name. In this example then email, first_name or last_name.</p> <p></p> <p></p> <p>To send the person a welcome email, we use the contact ID we got back during the contact creation in the preceding MAUTIC node. There we specify Contact and Send Email, set which email should be sent by MAUTIC and specify the contact ID by expression in Contact ID.</p> <p></p> <p>You can download the workflow as javascriptfile here and add it on your Workflow\u00b2 instance using drag&amp;drop, or by opening the file in an editor and copy&amp;paste the code directly into Workflow\u00b2.</p>","title":"MAUTIC Workflow Documentation (new order)"},{"location":"example/workflow_mautic2/","tags":["Workflow\u00b2","MAUTIC","How-To"],"text":"<p></p> <p>This workflow starts with a WooCommerce trigger node in \"Customer created\" mode. The node needs a WooCommerce REST API login consisting of the client key, the client secret and the general WooCommerce API URL of your online store. For information on how to create a WooCommerce REST API login, see: WooCommerce REST API</p> <p></p> <p>When triggered, the node receives general information about the registration, including the new user's first and last name and email address. We then convert this information into a more convenient form for further processing. To do this, we create a small JS script in the function node that assigns the information to specific terms. Under \"item.billing\" in the part of the message that the WooCommerce Node receives, the customer data is stored.</p> <p></p> <p>With the help of this we will now create a new contact in MAUTIC. To do this, we first need a MAUTIC login. The MAUTIC node needs a normal login (username and password) and the base URL of the MAUTIC instance. After that we need to add for this in the MAUTIC Node in the respective fields with the help of the gears so-called \"Expressions\" and define generally, so that the MAUTIC Node also really uses the data of the respective new customer and not always the same. Here it is to be noted: Expressions are always written in double curly brackets. {{ Expression }} The $json indicates that the intended information in the \"Json\" is part of the message that the node gets when it is called. And depending on the wanted information and the name we set for it before, the square bracket after it is filled accordingly. (Here: [\"email\"] )</p> <p>(The expression will be highlighted in red and in the lower section it will say that it could not be found. This is because the information can only be found if it exists. This can be tested during test runs. For the screenshot, the previous part has already been executed once to show you the filled version. Below you will see how it looks in red if no information has been transferred yet).</p> <p></p> <p></p> <p>In the current example, the new contact will receive 10 points for registering and a welcome email. For this we have to enter the contact ID of the just created new contact in the next MAUTIC node. This ID is returned to us as a response when the contact is created and is therefore also transferred to the next node when it is triggered. Now simply add an expression to the Contact ID and start it as shown in the screenshot with {{ $json[\"id\"] }} and you are done. (The same applies to the Send Email MAUTIC Node).</p> <p></p> <p></p> <p>It is then saved in SugarCRM as a contact (or optionally as a lead). The SugarCRM login is handled in the same way as MAUTIC. So we need a username and the corresponding password as well as the base URL of the SugarCRM instance. In the node we have to specify the expressions a little bit different than before, because information like first and last name and email are not transferred directly. {{ $node[\"Normalize\"].json[\"first_name\"] }} In the first name example here, we use $node[\"name of node\"] to specify which node it gets the data from. In this case it is the node \"Normalize\". But this can be easily changed. the part .json[\"first_name\"] is then again as already explained above.</p> <p></p> <p></p> <p>You can download the workflow as javascriptfile here and add it on your Workflow\u00b2 instance using drag&amp;drop, or by opening the file in an editor and copy&amp;paste the code directly into Workflow\u00b2.</p>","title":"MAUTIC Workflow Documentation (new customer)"},{"location":"example/export-to-gdrive/","tags":["Workflow\u00b2","Example","Doc2Export","Google Drive"],"text":"<ul> <li>Create blank workflow</li> <li>Configure Doc2AppStatusTrigger Node</li> <li>Configure Google Drive Node</li> <li>Activate Workflow</li> </ul>","title":"Export Doc2 to Google Drive"},{"location":"example/export-to-gdrive/activate-workflow/","tags":["Workflow\u00b2","Example","DOC\u00b2Export","Google Drive"],"text":"<p>Click Execute Workflow button on main screen and test by exporting another sample document.</p> <p></p>","title":"Activate Workflow"},{"location":"example/export-to-gdrive/configure-doc2-status-trigger/","tags":["Workflow\u00b2","Example","DOC\u00b2Export","Google Drive"],"text":"","title":"Configure Doc2StatusTrigger Node"},{"location":"example/export-to-gdrive/configure-doc2-status-trigger/#getting-doc2-api-key","tags":["Workflow\u00b2","Example","DOC\u00b2Export","Google Drive"],"text":"<p>Open Doc2App and click Settings from the top right menu bar and then click API option</p> <p></p> <p></p> <p>Copy the API Key from below opened screen</p> <p></p>","title":"Getting Doc2 API Key"},{"location":"example/export-to-gdrive/configure-doc2-status-trigger/#configure-node","tags":["Workflow\u00b2","Example","DOC\u00b2Export","Google Drive"],"text":"<p>Click the  button at top right corner and then search for Doc2App Status Trigger</p> <p></p> <p>Drag the node to the workflow. It will open configuration dialog as show below.</p> <p></p> <p>Add the Doc2API key to the credentials and select Pending Export for the status.</p> <p></p> <p>Click the Listen for Event button to listen for exported documents</p> <p>Open Doc2App, upload a sample document, validate and export it.</p> <p></p> <p>You should have result as show above. This means that the node has been configured properly.</p>","title":"Configure Node"},{"location":"example/export-to-gdrive/configure-gdrive-node/","tags":["Workflow\u00b2","Example","DOC\u00b2Export","Google Drive"],"text":"<p>Add the Google Drive node to the workflow as described for the Doc2StatusTrigger</p> <p>Select OAuth2 for the Authentication method</p> <p></p> <p>Click Add New for the Credentials for Google, it will open a dialog as shown below.</p> <p></p> <p>Copy the OAuth Redirect URL and use this to create new google OAuth2.0 app as shown in the tutorial below.</p> <p>Setting up OAuth 2.0</p> <p></p> <p></p> <p></p> <p></p> <p>Copy the Client ID and Client Secret for newly created oauth client and add it to the Google Drive module connection screen as show above</p> <p>Select File for the Resource option and Upload as operation.</p> <p>For the file content we will send the full extracted JSON returned from previous module.</p> <p>To convert the json response to string we are going to use below expression for file content</p> <pre><code>{{JSON.stringify($node[\"Status Trigger\"].json)}}\n</code></pre>  <p>For the filename we will extract the filename from json returned from previous module.</p> <pre><code>{{$node[\"Status Trigger\"].json[\"filename\"].replace('.pdf','.json') }}\n</code></pre>  <p>Click Execute button and you should see output like below.</p> <p></p> <p>This means that document has been uploaded to Google Drive successfully.</p>","title":"Adding and Configuring Google Drive module"},{"location":"example/export-to-gdrive/create-blank-workflow/","tags":["Workflow\u00b2","Example","DOC\u00b2Export","Google Drive"],"text":"<p>Go the Apps Screen and open workflows by clicking the Open Workflows button</p> <p></p> <p>This will open the workflows app as shown below</p> <p></p> <p>Click the New blank workflow button to open the workflow blank designer screen</p> <p></p> <p>Rename the workflow to some appropriate name by clicking the workflow name at top left corner. In our case we are renaming it to Doc2App To GDrive</p> <p></p> <p>Deactivate the default Start  node by clicking the Activate/Deactivate button above the node.</p> <p></p> <p>You will have a blank workflow like below</p> <p></p>","title":"Create Blank Workflow"},{"location":"example/weather/","tags":["Workflow\u00b2","Example","Weather","Webhook","Cron"],"text":"<ul> <li>Weather in the City</li> <li>Rain</li> </ul>","title":"Workflows for Weather Forecast"},{"location":"example/weather/weather/","tags":["Workflow\u00b2","Example","Weather","Webhook"],"text":"<p>Example for a Webhook and reply with the Weather in the City</p> <p></p>","title":"Weather"},{"location":"example/weather/weather/#how-to-use-this-workflow","tags":["Workflow\u00b2","Example","Weather","Webhook"],"text":"<p>Instructions</p> <ol> <li>Copy the workflow </li> <li>Navigate to your Workflow editor</li> <li>Click anywhere in the Workflow\u00b2 window</li> <li>Paste the code (ctrl + v or cmd + v)</li> </ol> <pre><code>{\n  \"nodes\": [\n    {\n      \"name\": \"OpenWeatherMap\",\n      \"type\": \"n8n-nodes-base.openWeatherMap\",\n      \"position\": [\n        900,\n        300\n      ],\n      \"parameters\": {\n        \"cityName\": \"={{ $json[\\\"city\\\"] }}\",\n        \"language\": \"en\"\n      },\n      \"credentials\": {\n        \"openWeatherMapApi\": \"\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"Webhook GET\",\n      \"type\": \"n8n-nodes-base.webhook\",\n      \"position\": [\n        500,\n        300\n      ],\n      \"webhookId\": \"a31f0bbd-a583-470e-9a1e-29a9ce778122\",\n      \"parameters\": {\n        \"path\": \"weather\",\n        \"options\": {\n          \"responsePropertyName\": \"data\"\n        },\n        \"responseMode\": \"lastNode\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"Set City\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        700,\n        300\n      ],\n      \"parameters\": {\n        \"values\": {\n          \"string\": [\n            {\n              \"name\": \"city\",\n              \"value\": \"={{ $json[\\\"query\\\"][\\\"parameter\\\"] || 'berlin,de' }}\"\n            }\n          ]\n        },\n        \"options\": {}\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"Create Response\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        1100,\n        300\n      ],\n      \"parameters\": {\n        \"values\": {\n          \"string\": [\n            {\n              \"name\": \"data\",\n              \"value\": \"=It has {{$json[\\\"main\\\"][\\\"temp\\\"]}}\\\\xE2\\\\x84\\\\x83  and feels like {{$json[\\\"main\\\"][\\\"feels_like\\\"]}}\\\\xE2\\\\x84\\\\x83  in {{$json[\\\"name\\\"]}}\"\n            }\n          ]\n        },\n        \"options\": {}\n      },\n      \"typeVersion\": 1\n    }\n  ],\n  \"connections\": {\n    \"Set City\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"OpenWeatherMap\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Webhook GET\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Set City\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"OpenWeatherMap\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Create Response\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}\n</code></pre>","title":"How to use this workflow"},{"location":"example/weather/weather_rain/","tags":["Workflow\u00b2","Example","Weather","Cron"],"text":"<p>Example of a cronjob workflow to send a weather forecast by email when it rains</p> <p></p>","title":"Weather"},{"location":"example/weather/weather_rain/#how-to-use-this-workflow","tags":["Workflow\u00b2","Example","Weather","Cron"],"text":"<p>Instructions</p> <ol> <li>Copy the workflow</li> <li>Navigate to your Workflow editor</li> <li>Click anywhere in the Workflow\u00b2 window</li> <li>Paste the code (ctrl + v or cmd + v)</li> </ol> <pre><code>{\n  \"id\": \"4\",\n  \"name\": \"Email me if it's going to rain\",\n  \"nodes\": [\n    {\n      \"name\": \"Start\",\n      \"type\": \"n8n-nodes-base.start\",\n      \"position\": [\n        360,\n        300\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"OpenWeatherMap\",\n      \"type\": \"n8n-nodes-base.openWeatherMap\",\n      \"position\": [\n        530,\n        300\n      ],\n      \"parameters\": {\n        \"zipCode\": \"90210\",\n        \"operation\": \"5DayForecast\",\n        \"locationSelection\": \"zipCode\"\n      },\n      \"credentials\": {\n        \"openWeatherMapApi\": \"OpenWeatherMap API Key\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"IF\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        840,\n        300\n      ],\n      \"parameters\": {\n        \"conditions\": {\n          \"string\": [\n            {\n              \"value1\": \"={{$node[\\\"OpenWeatherMap\\\"].json[\\\"list\\\"][0][\\\"weather\\\"][0][\\\"description\\\"]}},{{$node[\\\"OpenWeatherMap\\\"].json[\\\"list\\\"][1][\\\"weather\\\"][0][\\\"description\\\"]}},{{$node[\\\"OpenWeatherMap\\\"].json[\\\"list\\\"][2][\\\"weather\\\"][0][\\\"description\\\"]}},{{$node[\\\"OpenWeatherMap\\\"].json[\\\"list\\\"][3][\\\"weather\\\"][0][\\\"description\\\"]}},{{$node[\\\"OpenWeatherMap\\\"].json[\\\"list\\\"][4][\\\"weather\\\"][0][\\\"description\\\"]}}\",\n              \"value2\": \"=rain\",\n              \"operation\": \"contains\"\n            },\n            {\n              \"value1\": \"={{$node[\\\"OpenWeatherMap\\\"].json[\\\"list\\\"][0][\\\"weather\\\"][0][\\\"description\\\"]}},{{$node[\\\"OpenWeatherMap\\\"].json[\\\"list\\\"][1][\\\"weather\\\"][0][\\\"description\\\"]}},{{$node[\\\"OpenWeatherMap\\\"].json[\\\"list\\\"][2][\\\"weather\\\"][0][\\\"description\\\"]}},{{$node[\\\"OpenWeatherMap\\\"].json[\\\"list\\\"][3][\\\"weather\\\"][0][\\\"description\\\"]}},{{$node[\\\"OpenWeatherMap\\\"].json[\\\"list\\\"][4][\\\"weather\\\"][0][\\\"description\\\"]}}\",\n              \"value2\": \"snow\",\n              \"operation\": \"contains\"\n            },\n            {\n              \"value1\": \"={{$node[\\\"OpenWeatherMap\\\"].json[\\\"list\\\"][0][\\\"weather\\\"][0][\\\"description\\\"]}},{{$node[\\\"OpenWeatherMap\\\"].json[\\\"list\\\"][1][\\\"weather\\\"][0][\\\"description\\\"]}},{{$node[\\\"OpenWeatherMap\\\"].json[\\\"list\\\"][2][\\\"weather\\\"][0][\\\"description\\\"]}},{{$node[\\\"OpenWeatherMap\\\"].json[\\\"list\\\"][3][\\\"weather\\\"][0][\\\"description\\\"]}},{{$node[\\\"OpenWeatherMap\\\"].json[\\\"list\\\"][4][\\\"weather\\\"][0][\\\"description\\\"]}}\",\n              \"value2\": \"sleet\",\n              \"operation\": \"contains\"\n            },\n            {\n              \"value1\": \"={{$node[\\\"OpenWeatherMap\\\"].json[\\\"list\\\"][0][\\\"weather\\\"][0][\\\"description\\\"]}},{{$node[\\\"OpenWeatherMap\\\"].json[\\\"list\\\"][1][\\\"weather\\\"][0][\\\"description\\\"]}},{{$node[\\\"OpenWeatherMap\\\"].json[\\\"list\\\"][2][\\\"weather\\\"][0][\\\"description\\\"]}},{{$node[\\\"OpenWeatherMap\\\"].json[\\\"list\\\"][3][\\\"weather\\\"][0][\\\"description\\\"]}},{{$node[\\\"OpenWeatherMap\\\"].json[\\\"list\\\"][4][\\\"weather\\\"][0][\\\"description\\\"]}}\",\n              \"value2\": \"hail\",\n              \"operation\": \"contains\"\n            },\n            {\n              \"value1\": \"={{$node[\\\"OpenWeatherMap\\\"].json[\\\"list\\\"][0][\\\"weather\\\"][0][\\\"description\\\"]}},{{$node[\\\"OpenWeatherMap\\\"].json[\\\"list\\\"][1][\\\"weather\\\"][0][\\\"description\\\"]}},{{$node[\\\"OpenWeatherMap\\\"].json[\\\"list\\\"][2][\\\"weather\\\"][0][\\\"description\\\"]}},{{$node[\\\"OpenWeatherMap\\\"].json[\\\"list\\\"][3][\\\"weather\\\"][0][\\\"description\\\"]}},{{$node[\\\"OpenWeatherMap\\\"].json[\\\"list\\\"][4][\\\"weather\\\"][0][\\\"description\\\"]}}\",\n              \"value2\": \"storm\",\n              \"operation\": \"contains\"\n            },\n            {\n              \"value1\": \"={{$node[\\\"OpenWeatherMap\\\"].json[\\\"list\\\"][0][\\\"weather\\\"][0][\\\"description\\\"]}},{{$node[\\\"OpenWeatherMap\\\"].json[\\\"list\\\"][1][\\\"weather\\\"][0][\\\"description\\\"]}},{{$node[\\\"OpenWeatherMap\\\"].json[\\\"list\\\"][2][\\\"weather\\\"][0][\\\"description\\\"]}},{{$node[\\\"OpenWeatherMap\\\"].json[\\\"list\\\"][3][\\\"weather\\\"][0][\\\"description\\\"]}},{{$node[\\\"OpenWeatherMap\\\"].json[\\\"list\\\"][4][\\\"weather\\\"][0][\\\"description\\\"]}}\",\n              \"value2\": \"drizzle\",\n              \"operation\": \"contains\"\n            },\n            {\n              \"value1\": \"={{$node[\\\"OpenWeatherMap\\\"].json[\\\"list\\\"][0][\\\"weather\\\"][0][\\\"description\\\"]}},{{$node[\\\"OpenWeatherMap\\\"].json[\\\"list\\\"][1][\\\"weather\\\"][0][\\\"description\\\"]}},{{$node[\\\"OpenWeatherMap\\\"].json[\\\"list\\\"][2][\\\"weather\\\"][0][\\\"description\\\"]}},{{$node[\\\"OpenWeatherMap\\\"].json[\\\"list\\\"][3][\\\"weather\\\"][0][\\\"description\\\"]}},{{$node[\\\"OpenWeatherMap\\\"].json[\\\"list\\\"][4][\\\"weather\\\"][0][\\\"description\\\"]}}\",\n              \"value2\": \"downpour\",\n              \"operation\": \"contains\"\n            }\n          ]\n        },\n        \"combineOperation\": \"any\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"Send Email\",\n      \"type\": \"n8n-nodes-base.emailSend\",\n      \"position\": [\n        1030,\n        200\n      ],\n      \"parameters\": {\n        \"text\": \"=Forecast:\\n{{$node[\\\"Function\\\"].json[\\\"list\\\"][0][\\\"hour\\\"]}} - {{$node[\\\"OpenWeatherMap\\\"].json[\\\"list\\\"][0][\\\"weather\\\"][0][\\\"description\\\"]}}\\n{{$node[\\\"Function\\\"].json[\\\"list\\\"][1][\\\"hour\\\"]}} - {{$node[\\\"OpenWeatherMap\\\"].json[\\\"list\\\"][1][\\\"weather\\\"][0][\\\"description\\\"]}}\\n{{$node[\\\"Function\\\"].json[\\\"list\\\"][2][\\\"hour\\\"]}} - {{$node[\\\"OpenWeatherMap\\\"].json[\\\"list\\\"][2][\\\"weather\\\"][0][\\\"description\\\"]}}\\n{{$node[\\\"Function\\\"].json[\\\"list\\\"][3][\\\"hour\\\"]}} - {{$node[\\\"OpenWeatherMap\\\"].json[\\\"list\\\"][3][\\\"weather\\\"][0][\\\"description\\\"]}}\\n{{$node[\\\"Function\\\"].json[\\\"list\\\"][4][\\\"hour\\\"]}} - {{$node[\\\"OpenWeatherMap\\\"].json[\\\"list\\\"][4][\\\"weather\\\"][0][\\\"description\\\"]}}\",\n        \"options\": {},\n        \"subject\": \"It's going to rain today\",\n        \"toEmail\": \"changeme@example.com\",\n        \"fromEmail\": \"n8n@example.com\"\n      },\n      \"credentials\": {\n        \"smtp\": \"Amazon SES\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"Cron\",\n      \"type\": \"n8n-nodes-base.cron\",\n      \"position\": [\n        360,\n        160\n      ],\n      \"parameters\": {\n        \"triggerTimes\": {\n          \"item\": [\n            {\n              \"hour\": 7\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"Function\",\n      \"type\": \"n8n-nodes-base.function\",\n      \"position\": [\n        680,\n        300\n      ],\n      \"parameters\": {\n        \"functionCode\": \"for (let i = 0; i &lt; items[0].json.list.length; i++) {\\n  var h = new Date(items[0].json.list[i].dt * 1000).getHours();\\n  var m = new Date(items[0].json.list[i].dt * 1000).getMinutes();\\n  h = (h&lt;10) ? '0' + h : h;\\n  m = (m&lt;10) ? '0' + m : m;\\n\\n  var output = h + ':' + m;\\n  items[0].json.list[i].hour = output;\\n}\\nreturn items\\n\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"NoOp\",\n      \"type\": \"n8n-nodes-base.noOp\",\n      \"position\": [\n        1030,\n        370\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    }\n  ],\n  \"active\": true,\n  \"settings\": {},\n  \"connections\": {\n    \"IF\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Send Email\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"NoOp\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Cron\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"OpenWeatherMap\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Start\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"OpenWeatherMap\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Function\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"IF\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"OpenWeatherMap\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Function\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}\n</code></pre>","title":"How to use this workflow"},{"location":"example/workflows/","tags":["DOC\u00b2","Workflow","Examples"],"text":"<p>If you enjoyed creating your first workflow and have successfully completed the first challenge, here are some more examples for practice:</p> <ul> <li>Rename Keys </li> <li>Weather</li> <li>Approval with DOC\u00b2</li> <li>DOC\u00b2 to Excel</li> <li>New Order Workflow</li> <li>New Customer Workflow</li> <li>DOC\u00b2 to Google Drive</li> </ul>","title":"Workflow\u00b2 Examples"},{"location":"flow2/","tags":["FLOW\u00b2","Introduction","Digitizing Documents"],"text":"<p>This is the documentation for FLOW\u00b2, the intelligent solution for digitizing Documents.</p> <p>Every business process starts, contains or ends with a document. Regardless of whether in paper form or already as a file. This is called unstructured data. Although the information is on or in the document, it cannot be automatically integrated into the work processes, as it is simply not recognized by all software.</p>","title":"Welcome"},{"location":"flow2/#what-is-flow2","tags":["FLOW\u00b2","Introduction","Digitizing Documents"],"text":"<p>FLOW\u00b2 is the latest software and solution for document capture that was developed by Polydocs GmbH. It is a completely cloud-based solution that uses Artificial Intelligence and Machine Learning to precisely identify, classify, analyze and read your documents. No matter if paper or file. FLOW\u00b2 learns independently, the level of experience increases with each document. FLOW\u00b2 uses swarm intelligence for this.</p> <p>The Advantages of FLOW\u00b2 at a glance:</p> <ul> <li>Recognizes the required data \u2013 even handwritten information and information in tables reliably and is self-learning, even through corrections by the user</li> <li>With swarm intelligence, you benefit continuously from the experiences of other customers</li> <li>Improves the accuracy and quality of the recognized data</li> <li>Enables an automated process without ongoing corrections and interventions</li> <li>Simple intuitive interface</li> <li>No IT resources / specialists required</li> <li>Ensures a robust and consistent work process</li> <li>No sensitive data is stored or shared</li> <li>Saves time in the digital inbox</li> <li>Reduces errors caused by manual processing</li> </ul>","title":"What is FLOW\u00b2?"},{"location":"flow2/#how-do-you-use-flow2","tags":["FLOW\u00b2","Introduction","Digitizing Documents"],"text":"<ul> <li>Scanning and Recognition of all types of documents (Invoices, Contracts, Forms, Medical Prescriptions etc.)</li> <li>Reliable extraction of the data in the document and integration and further processing in the ERP, RPA or CRM system)</li> <li>Validation of the extracted data and verification against other systems from internal and public sources</li> <li>Integration into your system landscape (e.g. ERP System, Document Management, Workflow System etc)</li> </ul>","title":"How do you use FLOW\u00b2:"},{"location":"flow2/#why-flow2-is-just-right-for-you","tags":["FLOW\u00b2","Introduction","Digitizing Documents"],"text":"<ul> <li> <p>Many companies have recognized that processing incoming invoices, for example, can be very time-consuming. They are trying to increase productivity and optimize       the purchase-to-pay process by introducing products for the \u201cdigitization\u201d of invoices.</p> </li> <li> <p>In addition, FLOW\u00b2 uses swarm intelligence. What does that mean? You benefit from the experiences of other customers and their \u201clearning curve\u201d without sharing sensitive      data. With the cloud-based rule engine, we ensure continuous improvement of the application. You don\u2019t need any developers or data scientists, because the system learns from the input of the user and the process runs without interruptions.</p> </li> <li> <p>With the help of deep learning algorithms, not only simple header data of a document can be recorded, but also complicated structures such as tables. Of course, not      only invoices are processed, but all types of documents. Regardless of whether it is waybills, membership applications, medical prescriptions and many more.</p> </li> </ul>","title":"Why FLOW\u00b2 is just right for you"},{"location":"flow2/deployment/","tags":["FLOW\u00b2","Deployment"],"text":"","title":"Deployment"},{"location":"flow2/deployment/#how-to-deploy-flow2","tags":["FLOW\u00b2","Deployment"],"text":"<p>All you need is the URL and the Login Details received from us.</p> <p>The Login Details have admin rights.</p>","title":"How to deploy FLOW\u00b2"},{"location":"flow2/deployment/#prerequisites","tags":["FLOW\u00b2","Deployment"],"text":"<p>Running computer connected to internet</p>  <p>The following screen will be shown when you go to your URL:</p> <p></p> <p>Enter the Login Details provided by us and click on Login button or press Enter to login.</p> <p>After getting logged in successfully, you will see the following screen. It means all is set, you are ready to go.</p> <p></p>","title":"Prerequisites"},{"location":"flow2/flow2-onboarding-guide/","tags":["FLOW\u00b2","Onboarding Guide"],"text":"<p>This guide will help you learn the basics of FLOW\u00b2 get you up and running with an IPS that will max out your productivity.</p>","title":"Onboarding Guide"},{"location":"flow2/flow2-onboarding-guide/#performing-initial-setup","tags":["FLOW\u00b2","Onboarding Guide"],"text":"<p>First, let's cover how to access and configure your system.</p> <p>FLOW\u00b2 does not work in Tenant. All customer use the same cluster. Our Kubernetes Cluster is hosted in Frankfurt / Germany.</p> <p>To access the system:</p> <ol> <li>Contact your Polydocs GmbH or reach out to support@fellow-consulting.de to create a Organisation.</li> <li>Log in with the credentials provided in your onboarding email.</li> </ol> <p>Tip: Can't find the onboarding email? Go to your login screen and click the Forgot your password? link.</p>","title":"Performing Initial Setup"},{"location":"flow2/home/","tags":["FLOW\u00b2","Homepage","Dashboard"],"text":"<p>After logging in with your user you are redirected to the DASHBOARD homepage of FLOW\u00b2.</p> <p>This is the main page and overview where you can find your documents recently accessed, recently created and your applied favorites. You can also find an overview of all important items in the left sidebar.</p> <p></p> <p>The left sidebar with buttons and selectors is for accessing:</p> <p>Start now a free 30 days trail</p> <ul> <li>Documents</li> <li>File cabinets and indexes that serve structural classification (such as the folders in a computer's file manager).</li> <li>Tags, which are oriented to the workflow status.</li> </ul> <p>In the system selection at the top right you will find the area for configuration.</p>","title":"User Dashboard"},{"location":"flow2/import-from-doc2/","tags":["FLOW\u00b2","DOC\u00b2","Importing documents"],"text":"","title":"How to import documents from DOC\u00b2"},{"location":"flow2/import-from-doc2/#to-import-documents-from-doc2-you-need-to-add-the-desired-document-type-and-create-a-workflow-for-it-first","tags":["FLOW\u00b2","DOC\u00b2","Importing documents"],"text":"<p>Go to System - setup - Workflows</p> <p></p> <p>and klick on Document types</p> <p></p> <p>In the next step you need to create the desired and thus new document type</p> <p></p> <p>if you want to process e.g. received invoices add document type invoice received</p> <p></p> <p>and click on Save</p> <p></p> <p>You will receive a corresponding popup message as soon as the new document type has been successfully created.</p> <p>Your dashboard will remain empty until the first documents have been exported from DOC\u00b2 and imported into FLOW\u00b2.</p> <p></p> <p>All steps for importing from DOC\u00b2 can be found here.</p> <p>After successful import you will see the documents on your dashboard under recently created.</p> <p></p> <p>Clicking View details opens a preview of the imported documents including the date of processing.</p> <p></p> <p>If you click directly on the document name on the dashboard you will get the following view:</p> <p></p> <p>If you open a document this way it will show up on dashboard unter recently accessed.</p> <p></p>","title":"To import documents from DOC\u00b2 you need to add the desired document type and create a workflow for it first."},{"location":"flow2/introduction/","tags":["FLOW\u00b2","Getting Started","document management system (DMS)"],"text":"<p></p> <p>is a document management system (DMS).</p> <p>Its purpose is to store, search and categorize files so that the context and business information of documents is preserved.</p> <p>The content of these files can be read by OCR.</p> <p>Documents can be previewed, labeled, signed, sent and received.</p> <p>It provides a workflow system to automate recurring tasks, role-based access control, and a REST API to call appropriate functions programmatically</p>","title":"Getting Started"},{"location":"flow2/introduction/#flow2-features","tags":["FLOW\u00b2","Getting Started","document management system (DMS)"],"text":"<ul> <li>Versioning of documents</li> <li>User-defined document metadata</li> <li>Documents can be uploaded from various sources</li> <li>Advanced access control system</li> <li>Previews for many file formats</li> <li>Office document format support</li> <li>Full text search</li> <li>Configurable grouping of documents</li> <li>Automatic OCR processing</li> <li>Multilingual user interface</li> <li>Keep track of the status of documents, along with the log of</li> <li>of previous status changes</li> <li>Use workflow engine to automate business processes</li> <li>Complete event tracking system</li> <li>Configurable authentication system</li> <li>Automatic extraction of file metadata</li> <li>Color-coded tags</li> <li>Batch uploads</li> <li>Support for multi-page documents</li> </ul>","title":"Flow\u00b2 Features"},{"location":"flow2/introduction/#definition-of-terms","tags":["FLOW\u00b2","Getting Started","document management system (DMS)"],"text":"","title":"Definition of terms"},{"location":"flow2/introduction/#metadata","tags":["FLOW\u00b2","Getting Started","document management system (DMS)"],"text":"<p>Metadata is key information used for classification and easy access of the document management system to the documents. The information relates to the relevant content of the file. It can be an invoice number, the date of a document or the type of document, e.g. \"incoming invoice\".</p>","title":"Metadata"},{"location":"flow2/introduction/#tags","tags":["FLOW\u00b2","Getting Started","document management system (DMS)"],"text":"<p>Tags (keywords) make it easy to identify documents. You can use colors, for example, to make tagged documents easy to find in the workflow.</p>","title":"Tags"},{"location":"flow2/introduction/#workflow","tags":["FLOW\u00b2","Getting Started","document management system (DMS)"],"text":"<p>Workflows are a collection of states, transitions (between states), actions (to be taken when a transition occurs), and Triggers (that cause a transition to occur).</p>","title":"Workflow"},{"location":"flow2/introduction/#transitions","tags":["FLOW\u00b2","Getting Started","document management system (DMS)"],"text":"<p>Transitions are used to move documents from one state to another. In this way, a document is taken from 0% completion to 30% completion to 100% completion.</p> <p>Transitions always have an initial state and a target state. Transitions do not have to be linear (e.g., 10% &gt; 20% &gt; 30%, etc.) and can have any initial or target state. A workflow can have as many transitions as you need. This allows an unlimited number of combinations of states, transitions, and actions, and allows full customization to meet the needs of your workflow process.</p>","title":"Transitions"},{"location":"flow2/introduction/#acl-access-control-list","tags":["FLOW\u00b2","Getting Started","document management system (DMS)"],"text":"<p>An Access Control List (ACL) is a list of permissions associated with a system resource. An ACL defines which users or system processes are granted access to objects and which operations are allowed with certain objects. We can select elements (workflows, states, documents, indexes, file cabinets, tags) and then select the group and permissions specific to this object.</p>","title":"ACL - Access Control List"},{"location":"flow2/introduction/#ocr-optical-character-recognition","tags":["FLOW\u00b2","Getting Started","document management system (DMS)"],"text":"<p>Optical Character Recognition is the electronic or mechanical conversion of images of typed, handwritten or printed text into machine encoded text, whether from a scanned document or a photograph of a document.</p>","title":"OCR - Optical Character Recognition"},{"location":"flow2/metadata/","tags":["FLOW\u00b2","Metadata"],"text":"<p>Metadata is key information used for classification and easy access of the document management system to the documents. The information relates to the relevant content of the file. It can be an invoice number, the date of a document or the type of document, e.g. \"incoming invoice\".</p>","title":"Metadata"},{"location":"flow2/metadata/#how-to-create-meta-data","tags":["FLOW\u00b2","Metadata"],"text":"<p>The prerequisite for this is your ERP master data in an Excel or xls file including e.g.</p> <ul> <li>Vendor ID</li> <li>Vendor name</li> <li>IBAN</li> <li>VAT No</li> <li>Payment terms</li> <li>Currency</li> </ul> <p>This master data is used to complete and validate the meta data to be stored for the invoice.</p> <ul> <li>The REP solution allows the admin user to update this master data to the REP solution.</li> <li>The ERP master data is sometimes not unique or complete, especially for older suppliers. Therefore, not all information can always be added.</li> <li>If the master data is not completely filled or is not unique, the Admin will complete the metadata obtained from it.</li> <li>Payment terms: The PC from the master data with the best discount is used to calculate the due date from the invoice date. This can be overridden by the admin.</li> </ul> <p></p> <p>Go to System - Setup - Metadata types</p> <p>If you use our DOC\u00b2 service the following index fields are going to be extracted and the meta data must be created accordingly and would looks like this:</p>","title":"How to create meta data"},{"location":"flow2/metadata/#for-document-type-invoice","tags":["FLOW\u00b2","Metadata"],"text":"DOC\u00b2 FLOW\u00b2     INVOICE_NUMBER InvoiceNumber   INVOICE_DATE InvoiceDate   DELIVERY_DATE DeliveryDate   PURCHASE_ORDER PurchaseOrder   PAYMENT_TERMS PaymentTerms   TAX_RATE VatPercent   TAX_AMOUNT VATAmount   NET_AMOUNT NetAmount   TOTAL_AMOUNT TotalAmount   CURRENCY Currency   VENDOR_ID SupplierID   VENDOR_NAME SupplierName   IBAN_EXTRACTED AccountNumber   VAT_NO_EXTRACTED VATRegNo   ACCOUNTING_ENTITY AccountingEntityID   CORRELATION_ID AlternateDocumentID    <p></p> <p></p> <p></p> <p></p> <p></p> <p>Continue like this until all metadata types are created.</p>","title":"For Document Type INVOICE"},{"location":"flow2/settings-system-setup/","tags":["FLOW\u00b2","System Setup"],"text":"","title":"System Setup"},{"location":"flow2/settings-system-setup/#here-you-can-configure-all-aspects-of-the-system","tags":["FLOW\u00b2","System Setup"],"text":"<p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p>/doc2/flow2/metadata/</p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p>","title":"Here you can configure all aspects of the system."},{"location":"kv2/all-extracted-fields/","tags":["KV\u00b2","Extracted Fields"],"text":"","title":"All Extracted Fields"},{"location":"kv2/all-extracted-fields/#1-invoice-details","tags":["KV\u00b2","Extracted Fields"],"text":"Field NameDescriptionInvoice NumberSometimes there are multiple invoice numbers on invoices. Select the one you want to extract hereInvoice DateSelect invoice date herePurchase OrderSometimes there are multiple purchase order numbers on invoices. Select here the one you want to extractDelivery DateSelect the delivery date here if available. If this is not visible/notated on the invoice, leave this field blank.Payment TermsSelect payment terms, if availableTotal Net Amountleave this field blank, it will be calculated from the data on tab \"Calculation Details\"Total VAT Amountleave this field blank, it will be calculated from the data on tab \"Calculation Details\"Total Amountselect total amount hereCurrencyselect invoice currency e.g. EUR/GBP hereInvoice Typeif the document is an invoice, Invoice should be selected here. If the document is a credit note, select Credit Note here.","title":"1 Invoice Details"},{"location":"kv2/all-extracted-fields/#2-calculation-details","tags":["KV\u00b2","Extracted Fields"],"text":"Field NameDescriptionTax Rate FullIf there are multiple tax rates on the invoice, select the higher of the two heresee example hereNet Amount Fullsee example hereTax Amount Fullsee example hereTaxe Rate ReducedIf there are multiple tax rates on the invoice, select the lower of the two heresee example hereNet Amount Reducedsee example hereTax Amount Reducedsee example hereTax Rate FreeFor a tax-free invoice enter 0 heresee example hereNet Amount FreeFor a tax-free invoice, enter the total amount heresee example hereTax Amount FreeFor a tax-free invoice enter 0 heresee example here","title":"2 Calculation Details"},{"location":"kv2/all-extracted-fields/#3-recipient-details","tags":["KV\u00b2","Extracted Fields"],"text":"<p>This Tab is only needed in case you have (multiple) sub companies. In that case please choose the respective value here. Auto population can be possible based on recognized VAT Number Recipient.</p> <p>If there are no sub companies, this tab can be ignored or also be hidden within the Batch Class Configuration.</p> Recipient NameVAT Number Recipient","title":"3 Recipient Details"},{"location":"kv2/all-extracted-fields/#4-vendor-details","tags":["KV\u00b2","Extracted Fields"],"text":"<p>Tab Vendor Details shows all data related to the vendor. Most of the fields here will be auto-populated from fuzzy DB and cannot be edited in this screen. Only VAT No Extracted and Vendor IBAN should be checked and validated.</p> Vendor IDVendor NameVendor StreetVendor ZIPVendor CityVendor CountryVendor VAT IDVAT No ExtractedVat No. of the vendor sending the invoiceVendor IBANIBAN of the vendor, if multiple values are available and recognized please select the main oneIBAN ExtractedVendor PO BoxVendor PhoneVendor EmailVendor Web Address <p>Please Note that some fields might have limitations like limited amount of character. These limitation differ between the single ERP systems and potential issues while sending the data are not caused by the KV\u00b2 Plugin.</p>","title":"4 Vendor Details"},{"location":"kv2/enable-feedback-function/","tags":["Ephesoft Plugins","Help","Feedback"],"text":"<p>This documentation should explain how to enable the Feedback Function within the Ephesoft Plugins.</p> <p>The Feedback Function allows the clients to send Feedback to each single Test, directly while performing the Test. Feedback is created and sent during the validation process. For each \u201cValidation\u201d where user enters Feedback we have a ticket created automatically in our Ticket system Zammad. The Ticket contains information about the result (Feedback Type), Reporter Email Address and Feedback (Textfield) which are set by tester during validation, as well as a copy of the tested document, which is automatically linked to the ticket.</p> <p>Feedback Function set up and configured within the Batch Class and visible to the clients on the Validation UI of Ephesoft in Tab \"5 Feedback\".</p> <p></p>","title":"Feedback Function"},{"location":"kv2/enable-feedback-function/#steps-to-enable-feedback","tags":["Ephesoft Plugins","Help","Feedback"],"text":"<p>Download the Feedback FieldTypes from below or go to any Batch Class where Feedback is already enabled to get them from there. If you download from here you can skip Step 1 explained below.</p> <p>INVOICE_DE_FieldTypesDownload</p> <p>Step 1: Get Feedback Fields zip folder Go to Batch Class where Feedback is setup, open \"Index Fields\" and navigate to last page in order to see the Feedback fields (which are the last four: FEEDBACK_TYPE, FILE_ID, FEEDBACK_EMAIL, FEEDBACK_DESCRIPTION).</p> <p>Select the four last fields and click Export, to download it to your machine.</p> <p></p> <p>Step 2: Import to (other) Document Types Once you have the Feedback Fields zip folder stored your machine you can import it to any document type in your Batch Class where you like to have it available. Simply Drag &amp; Drop the zip file to \"Index Fields\" folder of the single document types.</p> <p></p> <p>NOTE: This step must be done/repeated for each Document Type!</p>","title":"Steps to Enable Feedback:"},{"location":"kv2/getting-started/","tags":["KV\u00b2","Plugin","Ephesoft","Digitizing documents"],"text":"<p>Welcome to KV\u00b2 Plugin for Ephesoft Transact!</p> <p>The KV\u00b2 Plugin solution is a cloud-based repository which grants the customer access to a pool of extraction rules for the header and footer fields of a document, in particular invoices. The system is able to learn new extraction rules every time a document is uploaded, validated and exported in Ephesoft Transact.</p> <p>One time installed, the solution can be used and trained from day one, with no need to configure the batch class for extraction rules.</p>    <p>The main source of input, in order to fill the KV2 repository with extraction rules, is the usage of the plugin by the users, incl. the updates conducted by Polydocs GmbH. This means that every time a business trains the IDM Capture -Ephesoft software with a new extraction rule, this rule will be made available for all users of the KV\u00b2 Plugin.</p> <p></p>","title":"Getting Started"},{"location":"kv2/getting-started/#which-data-do-we-check-and-extract","tags":["KV\u00b2","Plugin","Ephesoft","Digitizing documents"],"text":"<p>The default version of KV\u00b2 Plugin identifies and extracts following 10 header and footer fields: (NOTE: adding / removing fields can be done via enhancement request)</p> <ul> <li>Invoice number</li> <li>Invoice date</li> <li>Delivery date</li> <li>Order number</li> <li>Terms of payment</li> <li>Net amount</li> <li>Value added tax</li> <li>Gross amount</li> <li>IBAN</li> <li>VAT number</li> </ul>","title":"Which Data do we check and extract?"},{"location":"kv2/how-to-deal-with-different-vat-amounts/","tags":["KV\u00b2","Plugin","Ephesoft","VAT"],"text":"","title":"Different VAT amounts"},{"location":"kv2/how-to-deal-with-different-vat-amounts/#if-you-have-an-invoice-with-two-different-vat-amounts-teach-them-as-follows","tags":["KV\u00b2","Plugin","Ephesoft","VAT"],"text":"<p></p> <ol> <li>Invoice Details: Add the total amount in the corresponding field Total Amount. Leave Total Net Amount and Total VAT Amount blank.</li> </ol> <p></p> <p>2. Calculation Details: Add the higher Tax Rate into field Tax Rate Full and the lower Rate into Tax Rate Reduced. The other fields remain blank.</p> <p></p> <p>3. After validating and exporting the Batch-ID from 1st upload after the 2nd upload of document the extracted fields are filled with the following values. The two Net amounts as well as the VAT amounts are automatically added together.</p> <p></p>","title":"If you have an invoice with two different VAT amounts, teach them as follows:"},{"location":"kv2/how-to-deal-with-different-vat-amounts/#if-you-have-an-invoice-with-0-vat-amount-teach-them-as-follows","tags":["KV\u00b2","Plugin","Ephesoft","VAT"],"text":"<p></p> <ol> <li>Invoice Details: Add the total amount in the corresponding field Total Amount. Leave Total Net Amount and Total VAT Amount blank.</li> </ol> <p></p> <p>2. Calculation Details: Just add 0 into field Tax Rate Free manually, choose Invoice Total for field Net Amount Free an also manually enter 0 in field Tax Amount Free. The other fields remain blank.</p> <p></p> <p>Most of the Tax Rate Free Invoices don't have either VAT nor IBAN. So these fields stay blank as well. In such cases, we will have VENDOR_ID for the identification of the document.</p> <p>3. After validating and exporting the Batch-ID from 1st upload after the 2nd upload of document the extracted fields are filled with the following values.</p> <p>------ MISSING -------</p>","title":"If you have an invoice with 0 VAT amount, teach them as follows:"},{"location":"kv2/how-to-delete-a-kv2-plugin-rule-from-the-database/","tags":["KV\u00b2","Plugin","Ephesoft","delete rules","Database"],"text":"<p>If you implemented and saved a wrong rule just don't worry! It's easy to delete it only with one command line through Ephesoft from the database!</p> <p></p> <p>Just type /c in the field that you don't want anymore.</p> <p></p> <p></p>","title":"Rules"},{"location":"kv2/installation/","tags":["KV\u00b2","Plugin","Ephesoft","Installation","Configuration"],"text":"","title":"Installation"},{"location":"kv2/installation/#how-to-install-configure-kv2-plugin","tags":["KV\u00b2","Plugin","Ephesoft","Installation","Configuration"],"text":"<p>KV\u00b2 Plugin is installed directly in Ephesoft Transact. The installation process is same for instances set up in Cloud or On Premise.</p>","title":"How to install &amp; configure KV\u00b2 Plugin"},{"location":"kv2/installation/#prerequisites","tags":["KV\u00b2","Plugin","Ephesoft","Installation","Configuration"],"text":"<ul> <li>Download the KV\u00b2 Plugin from here Note: KV\u00b2 Plugin consist of two zip files!</li> </ul> <p></p> <ul> <li>You must have Administration rights in Ephesoft Transact.</li> <li>You must have set up working Batch Class or install Polydocs GmbH default Batch Class for Plugin usage if no Batch Class is set up in your Ephesoft System, yet. (Contact us to get the Polydocs GmbH default Batch Class)</li> </ul>","title":"Prerequisites"},{"location":"kv2/installation/#installation","tags":["KV\u00b2","Plugin","Ephesoft","Installation","Configuration"],"text":"<p>Step 0: Access your Infor OS and open IDM Capture in the menu on the top left.</p> <p></p>","title":"Installation"},{"location":"kv2/installation/#step-1-open-your-ephesoft-transact-system","tags":["KV\u00b2","Plugin","Ephesoft","Installation","Configuration"],"text":"<p></p>","title":"Step 1: Open your Ephesoft Transact system"},{"location":"kv2/installation/#step-2-as-an-admin-please-click-into-the-administrator-section-and-select-eg-batch-class-management-open-the-menu-bar-on-the-left-and-click-system-configuration","tags":["KV\u00b2","Plugin","Ephesoft","Installation","Configuration"],"text":"<p></p>","title":"Step 2: As an Admin please click into the Administrator section and select eg. \"Batch Class Management\". Open the menu bar on the left and click \"System Configuration\"."},{"location":"kv2/installation/#step-3-open-workflow-management","tags":["KV\u00b2","Plugin","Ephesoft","Installation","Configuration"],"text":"<p>Drag &amp; Drop or upload both plugin zip files into the \"Import Plugin\" area to auto-install the plugin.</p> <p>Note: Make sure that file name is exactly \"fellowkv2exportplugin.zip\" / \"fellowkv2extractplugin.zip\" and that the files are not renamed (eg by downloading multiple times) as Ephesoft cannot recognize files with another name.</p> <p></p> <p>Make sure that the installation was successful by checking the list under Workflow Management if the 2 new plugins are listed (sample below).</p> <p></p> <p>The Installation part of the plugin is now done and it can be associated to a Batch Class and configured.</p>","title":"Step 3: Open Workflow Management"},{"location":"kv2/installation/#association-to-batch-class-configuration","tags":["KV\u00b2","Plugin","Ephesoft","Installation","Configuration"],"text":"","title":"Association to Batch Class &amp; Configuration"},{"location":"kv2/installation/#step-1-open-the-menu-bar-on-the-left-and-click-batch-class-management-and-open-the-batch-class-in-which-the-plugin-should-run","tags":["KV\u00b2","Plugin","Ephesoft","Installation","Configuration"],"text":"<p></p>","title":"Step 1: Open the menu bar on the left and click \"Batch Class Management\" and open the Batch Class in which the plugin should run"},{"location":"kv2/installation/#step-2-associate-extraction-module-of-the-plugin-fellow_kv2_extract","tags":["KV\u00b2","Plugin","Ephesoft","Installation","Configuration"],"text":"<p>Click Modules and then Extraction on left side of Batch Class Configuration Screen. It will show all the Extraction modules configured for this Batch Class. Find FELLOW_KV2_EXTRACT in \"Associated Plugins\" column and move it to \"Selected Plugins\" by click the right arrow button as shown in picture below.</p> <p></p> <p>IMPORTANT: In the \"Selected Plugins\" column highlight the plugin and slide the plugin \"FELLOW_KV2_EXTRACT\" to be above \"FUZZYDB\" with the arrow pointing upwards, click \"Apply\" and then click \"Deploy\" to activate your changes.</p> <p></p>","title":"Step 2: associate Extraction Module of the Plugin (FELLOW_KV2_EXTRACT)"},{"location":"kv2/installation/#step-3-configure-extraction-module-of-the-plugin-fellow_kv2_extract","tags":["KV\u00b2","Plugin","Ephesoft","Installation","Configuration"],"text":"<p>Expand the \"Extraction\" folder in the left menu and select the newly added FELLOW_KV2_EXTRACT module.</p> <p></p> <p>Now set up Config details as described below and then click \"Apply\" and \"Deploy\"</p> FieldValueDescriptionKV2 Extraction Enabled (Version:1.0.3):*TrueHere you can see the version number of the installed plugin and set value \"True\" for plugin activationEnabled DLF List (Separated by | symbol):*INVOICE_NUMBER|INVOICE_DATE|PURCHASE_ORDER|DELIVERY_DATE|PAYMENT_TERMS|TOTAL_AMOUNT|TAX_RATE|NET_AMOUNT|TAX_AMOUNT|TAX_RATE_2|NET_AMOUNT_2|TAX_AMOUNT_2|TAX_RATE_3|NET_AMOUNT_3|TAX_AMOUNT_3|VAT_NO_EXTRACTED|IBAN_EXTRACTEDList of all Index fields that should be validated, written in upper cases to reflect Ephesoft field names, separated by pipe character (\"|\")Key Values DLF Names (Separated by | symbol):*VAT_NO_EXTRACTED|IBAN_EXTRACTED|VENDOR_IDList of the Key ValuesDLF Value Overwrite Mode:select one of following possibilities:- Do Not Overwrite Populated DLFs- Always Overwrite Populated DLFs- Overwrite Populated DLFs With Confidence Below ThresholdSelect Overwrite or Do Not overwrite. The threshold option will overwrite only if the confidencecalculated by Transact of a field is lower than the value belowDLF Overwrite Confidence Threshold:*50This property is only used for the Threshold DLF OverwriteMode. Otherwise, enter 0.DLF Force Review Threshold:*50Auto rules will be assigned a confidence based on AutoConfidence Values assignment logic. If the confidence is below the value entered here, the DLF will bemarked for operator review.KV2 Webservice URL:*https://cloudintegration.eu/api/fellowkv/extract/get_tfidf_ruleslink to the Fellow cloud repositoryFellow Webservice API Key:*-- provided by Fellow Consulting per subscription --personal API key to connect to Fellow Cloud repository","title":"Step 3: Configure Extraction Module of the Plugin (FELLOW_KV2_EXTRACT)"},{"location":"kv2/installation/#step-4-associate-export-module-of-the-plugin-fellow_kv2_export","tags":["KV\u00b2","Plugin","Ephesoft","Installation","Configuration"],"text":"<p>Click Modules and then Export on left side of Batch Class Configuration Screen. It will show all the Export modules configured for this Batch Class. Find FELLOW_KV2_EXPORT in \"Associated Plugins\" column and move it to \"Selected Plugins\" by click the right arrow button as shown in picture below.</p> <p></p> <p>IMPORTANT: In the \"Selected Plugins\" column highlight the plugin \"FELLOW_KV2_EXPORT\" and slide it to the top with the arrow pointing upwards, click \"Apply\" and then click \"Deploy\" to activate your changes.</p> <p></p>","title":"Step 4: associate Export Module of the Plugin (FELLOW_KV2_EXPORT)"},{"location":"kv2/installation/#step-5-configure-export-module-of-the-plugin-fellow_kv2_export","tags":["KV\u00b2","Plugin","Ephesoft","Installation","Configuration"],"text":"<p>Expand the \"Export\" folder in the left menu and select the newly added FELLOW_KV2_EXPORT module.</p> <p></p> <p>Now set up Config details as described below and then click \"Apply\" and \"Deploy\"</p> FieldValueDescriptionKV2 Export Enabled (Version:1.0.3):*TrueHere you can see the version number of the installed plugin and set value \"True\" for plugin activationEnabled DLF List (Separated by | symbol):*INVOICE_NUMBER|INVOICE_DATE|PURCHASE_ORDER|DELIVERY_DATE|PAYMENT_TERMS|TOTAL_AMOUNT|TAX_RATE|NET_AMOUNT|TAX_AMOUNT|TAX_RATE_2|NET_AMOUNT_2|TAX_AMOUNT_2|TAX_RATE_3|NET_AMOUNT_3|TAX_AMOUNT_3|VAT_NO_EXTRACTED|IBAN_EXTRACTEDList of all Index fields that should be validated, written in upper cases to reflect Ephesoft field names, separated by pipe character (\"|\")Key Values DLF Names (Separated by | symbol):*VAT_NO_EXTRACTED|IBAN_EXTRACTED|VENDOR_IDKV2 Webservice URL:*https://cloudintegration.eu/api/fellowkv/export/export_ruleslink to the Fellow cloud repositoryFellow Webservice API Key:*-- provided by Fellow Consulting per subscription --personal API key to connect to Fellow Cloud repository <p>The association and configuration part of the plugin is now done. Note that you have to re-start Transact server before you can start using the plugin.</p> <p>Step 6: Deactivate extraction rules for not needed index fields.</p> <p>In order to deactivate the extraction rules in every field you have to go through every document type. So, when you open the batch class you will see the following list:</p> <p></p> <p>Now, start from the top and go through every document type following exactly the same steps.</p> <p>As an example, let's start with document type INVOICE_DE. So, open the folder and you will see al index fields available.</p> <p></p> <p>Now, we can start with for instance the delivery date and you will need to deactivate the fields by checking off the box in the last column and clicking on \"Apply\" and \"Deploy\". It should look like this:</p> <p></p> <p>Please deactivate the rules for all index fields but CREDIT_NOTE, CURRENCY, IBAN_EXTRACTED, INVOICE and VAT_NO_EXTRACTED.</p> <p>Step 7: Import the feedback fields.</p> <p>Please use this zip file for the import:</p> <p>INVOICE_DE_FieldTypes-1Download</p> <p>Now go through every document type and use the box underneath for \"Import Index Field(s)\" to select or drag and drop the zip file:</p> <p></p>","title":"Step 5: Configure Export Module of the Plugin (FELLOW_KV2_EXPORT)"},{"location":"kv2/installation/#final-step-8-re-start-transact-server","tags":["KV\u00b2","Plugin","Ephesoft","Installation","Configuration"],"text":"<p>see Article ho to restart Transact</p>","title":"FINAL Step 8: Re-start Transact Server"},{"location":"kv2/kv2-tutorial/","tags":["KV\u00b2","Tutorial","Plugin","Ephesoft"],"text":"","title":"Tutorial"},{"location":"kv2/kv2-tutorial/#prerequisites","tags":["KV\u00b2","Tutorial","Plugin","Ephesoft"],"text":"<p>To work with this tutorial you have to complete Installation &amp; Configuration Section for this Plugin.</p>","title":"Prerequisites"},{"location":"kv2/kv2-tutorial/#how-to-use-kv2-plugin","tags":["KV\u00b2","Tutorial","Plugin","Ephesoft"],"text":"","title":"How To Use KV\u00b2 Plugin"},{"location":"kv2/kv2-tutorial/#step-0-log-in","tags":["KV\u00b2","Tutorial","Plugin","Ephesoft"],"text":"<ul> <li>log into the Ephesoft Transact Software with username and password</li> </ul> <p></p> <p></p> <ul> <li>After login you see the menu with two modules: Administrator &amp; Operator with their defined functions:</li> </ul> AdministratorOperatorBatch Class ManagementBatch ListBatch Instance ManagementReview ValidateFolder ManagementWeb ScannerSystem ConfigurationReport","title":"Step 0: Log-in"},{"location":"kv2/kv2-tutorial/#step-1-interface-application-of-the-fellowkv2-plugin","tags":["KV\u00b2","Tutorial","Plugin","Ephesoft"],"text":"<ul> <li>Upload your documents through the Operator Module in \u201cUpload Batch\u201d:  </li> </ul> <p></p> <ul> <li>Start the batch with the according batch class.</li> </ul> <p></p> <ul> <li>Wait in the Administrator Module in \u201cBatch Instance Management\u201d for the batch to be processed and ready for validation.</li> </ul> <p></p> <ul> <li>Select your Batch and in the list and click to open the batch in order to validate the header and footer fields:</li> </ul> <p></p> <ul> <li>Now you will be redirected to a new window for validation. The document is displayed on the right side, the validation screen left to it. Here you can can check all the extracted fields and add/correct the values as well.  </li> </ul> <p></p> <ul> <li>Go through all fields clicking \"Tab\" button or by mouse and check the value. In case you notice a missing or wrong value you have 3 Options to set the correct value:<ul> <li>click into the particular field in the validation screen, then move your mouse over the document on the right and select the respective value by double click on it. The selected value will be marked yellow on the document and will appear in the validation field on the left (preferred - as this way you train on which position on a certain invoice you find the respective values)</li> <li>click into the particular field in the validation screen, then move your mouse over the document on the right and select the respective value by click right mouse, hold it while select the full value (it will be marked yellow) and confirm by click on right tab again. The selected value will be marked yellow on the document and will appear in the validation field on the left (preferred - as this way you train on which position on a certain invoice you find the respective values)</li> <li>Type the value manually to the validation cell.</li> <li>If a value is detected wrong or incomplete, please click in respective cell, clear the value and select the correct one in the document as explained above.</li> </ul> </li> </ul> <p>For fields you have corrected in the first run, you should see the value set correct and highlighted yellow on the document for the next invoice you run for this vendor.</p> <ul> <li>Now just add all the fields with the accurate data and validate the invoice in order for it to be exported.</li> </ul> <p></p> <p></p> <p></p> <p>With this process you are not only validating your document but also training\u00a0the plugin. With a one-time human assistance validating and exporting the documents, new extraction rules are created. For the next run for that type of document no adaptation or configuration of the batch class is needed and the plugin will recognize values which have been missing in the first run.</p>","title":"Step 1: Interface application of the FellowKV2 Plugin"},{"location":"kv2/kv2-tutorial/#usage-of-fellows-feedback-and-support-function","tags":["KV\u00b2","Tutorial","Plugin","Ephesoft"],"text":"<p>KV\u00b2 Plugin comes with an integrated Feedback Function where you can send us Support to each Document Validation. The Feedback Function can be found in tab #5 of the Ephesoft Validation UI (it is usually the last tab).</p> <p></p> <p>If you want to send us some feedback you just need to move to this tab and fill out the three fields on this tab:</p> <ul> <li>Feedback Type -&gt; here you can choose from list below. NOTE that support tickets will be created only if Feedback types is different than \"Perfect\"<ul> <li>--NONE--</li> <li>Perfect</li> <li>Good</li> <li>Bad</li> <li>Nothing is working</li> </ul> </li> <li>Reporter Email Address -&gt; this is your email address which we use for our reply</li> <li>Feedback -&gt; this is a textfield where you can send us your detail feedback, like which value showed a problem or was not detected correct</li> </ul> <p>If fields are filled the feedback is created during the validation process and sent directly to our Support Tool and we can work on the case.</p> <p></p>","title":"Usage of Fellows Feedback and Support Function"},{"location":"kv2/limitations-for-fellow-kv2-plugin/","tags":["KV\u00b2","Plugin","Ephesoft","Limitations"],"text":"<p>Version: 1.0.11</p> <p>The KV\u00b2 Plugin faces some small limitations for the correct extraction of header and footer fields. In this documentation you will find a list with the main limitations, the reason for it and the proposed \"solution\" for the user.</p>","title":"Limitations"},{"location":"kv2/limitations-for-fellow-kv2-plugin/#1-processing-of-multiple-pages","tags":["KV\u00b2","Plugin","Ephesoft","Limitations"],"text":"<p>Description of the limitation</p> <p>For this case we are going to use the example with invoices. The KV\u00b2 Plugin is capable of self-learning and training from different document types, which also means that different supplier invoice templates are trained.</p> <p>The main issue displayed here is when a \"trained\" supplier has invoices fluctuating from one to multiple pages. The reason for that is because even if the supplier has been already \"trained\" by the user, the extraction might fail if the trained extraction rules are presented on another page. See process underneath:</p> <p></p> <p>a) The user has trained the supplier \"Banana\" with an invoice with just one page. That means that the extraction rules are going to be determined on that first page. Specially fields like other custom fields that might appear not on the first page are going to present a problem for other multiple pages examples.</p> <p></p> <p>b) The second scenario is when the same supplier \"Banana\" has send an invoice with more than just one page. Previously the extraction rules for the fields have been determined for page one. But, more specifically for additional custom fields, these are presented on a completely other page.</p> <p>Proposed solution for the user</p> <p>When presented with such a case the user has to take into account this limitation. This means the user will need to \"re-learn\" independently the second scenario (and future scenarios) again If further issues appear the user can always advise us with the available feedback function on the 5th tab (validation screen).</p>","title":"1. Processing of multiple pages"},{"location":"kv2/restart-ephesoft-on-cloud/","tags":["KV\u00b2 Plugin","Restart","Ephesoft","Transact","Cloud"],"text":"<p>This task must be performed by system Administrator. Go to your Ephesoft Cloud Configadmin page:</p> <p>https://XXXXXXX.ephesoft.cloud/configadmin/</p> <p></p> <p>Click on \"Restart Transact\" Note that restart process can take up to 5 minutes.</p> <p></p> <p>After Restart you can Logout again</p> <p></p>","title":"Cloud"},{"location":"kv2/restart-ephesoft-on-premise/","tags":["KV\u00b2 Plugin","Restart","Ephesoft","On Prem"],"text":"<p>To restart Ephesoft Transact on Premise open the Task Manager of the Ephesoft server machine.</p> <p></p> <p>Select the service \"EphesoftTransact\", make a right click and select \"Restart\" from the menu. This will restart your service, which can take up to 5 minutes.</p> <p></p>","title":"OnPremise"},{"location":"kv2/training-kv2-for-table-extraction/","tags":["KV\u00b2","Plugin","Ephesoft","Training","Table Extraction"],"text":"<p>The function explained in this documentation is used for extracting the table from all types of documents (Invoices, Contracts, Forms, Medical Prescriptions etc.). The extraction of data from tables can be achieved by following the steps described below:</p> <p>1. Login to your account with your Email and Password.</p> <p>2. Import the desired document on your dashboard.</p> <p>3. Click on the document to Open it in the edit screen.</p> <p>4. Scroll down to\u00a0Line Items (located at the very bottom right of the available fields).</p> <p>5. Click on the table icon inside the textbox</p> <p></p> <p>TIP: If no table extraction is to be performed in the selected document, this can be set with the symbol next to \"Line Items\".</p> <p></p> <p>6. The following screen will be displayed.</p> <p></p> <p>The following options and functions are now available (displayed on the left half of the screen):</p> <ul> <li>Zoom in: as the name suggests it allows the user to zoom in on the document</li> </ul> <p></p> <ul> <li>Zoom out: as the name suggests it allows the user to zoom out on the document</li> </ul> <p></p> <ul> <li>Autodetect Table: This function is for automatically detecting the table in the document \u2013 should the plugin be unable to detect the table it has to be selected manually.</li> </ul> <p></p> <ul> <li>Select Table: This function allows the user to manually select the desired table via drag-selection.</li> </ul> <p></p> <p>The Table can also be adjusted here (for example the height and width).</p> <p></p> <p>adjust and save</p> <ul> <li>Add Columns: this function allows the user to manually add guidelines to help the system determine the correct columns (blue lines) as displayed on the following screenshot</li> </ul> <p></p> <p></p> <p>Once these guidelines are added additional functions are available.</p> <p></p> <p>The first one allows the user to delete all lines while the second one extends these guidelines to all pages of the document.</p> <p>Is only one line selected, a delete button will be added, and it allows the user to delete the selected line.</p> <p></p> <ul> <li>Save Changes: allows the user to save any changes made.</li> </ul> <p></p> <p>TIP: Is the table marking wrong and should be deleted, select the marking of said table \u2013 a red symbol will appear allowing the removal of the marking.</p> <p></p> <p>7) Once the changes are saved the plugin will automatically extract the found data and display it on a table to the right.</p> <p></p> <p>The available functions on this side of the screen are as follows:</p> <ul> <li>Revert Changes: Allows the user to undo any changes.</li> </ul> <p></p> <ul> <li>Advanced Settings: This function allows for additional settings to extract the data further correctly.</li> </ul> <p></p> <p>Once selected the following screen will pop up:</p> <p></p> <p>\u201cHeader row count\u201d defines how many rows are part of the header for example if the header has two rows the corresponding number (2 in this case) must be selected.</p> <p>\u201cMove Extra Row to desc\u201d</p> <ul> <li>Add new line: Adds an additional line at the bottom of the table.</li> </ul> <p></p> <ul> <li>Delete all extracted data: Deletes all extracted data from the table.</li> </ul> <p></p> <ul> <li>Block table extraction for this supplier: This must be selected if no table should be extracted from this supplier.</li> </ul> <p></p> <p>Every column name must be assigned correctly for example \u201cPOS.NO.\u201d corresponds to \u201cPosition\u201d.</p> <p>This must be done for all column names \u2013 otherwise it will produce an error!</p> <p></p> <p>Next select the three dots next to the position to which the content is oriented for example the position number.</p> <p></p> <p>Beside the possibility to delete (via the trashcan symbol) the row (which of course can be found in all other columns as well) the option \"Group Rows\" is important here.</p> <p></p> <p>This option groups all the date corresponding to the position.</p> <p>Should the system recognize empty or undesirable data delete them via the purple \u201cX\u201d on the left side of the table.</p> <p></p> <p>Once the table has been set up as desired, the settings can be saved by clicking on \"Save\". It will then immediately transport the user back to the dashboard.</p> <p></p> <p>Alternatively, the document can be exported immediately by clicking on \"Confirm &amp; Export\".</p> <p></p>","title":"Training KV\u00b2 for Table Extraction"},{"location":"ocr/detect-inside-pages/","tags":["OCR","API"],"text":"<p>In this part of the API, we are able to detect and extract special parts of your document. The section is split up in three different parts:</p> <p></p>","title":"Detect inside pages"},{"location":"ocr/detect-inside-pages/#detect-blank-pages","tags":["OCR","API"],"text":"<p>TBD</p>","title":"Detect blank pages"},{"location":"ocr/detect-inside-pages/#detect-language","tags":["OCR","API"],"text":"<p></p> <p>This functionality allows you to put in a text of your choice and our API will recognize the language it is written in.</p>","title":"Detect language"},{"location":"ocr/detect-inside-pages/#done","tags":["OCR","API"],"text":"","title":"Done!"},{"location":"ocr/detect-inside-pages/#detect-tables","tags":["OCR","API"],"text":"<p>We are now diving into a table extraction part of the API, which will automatically extract metadata out of your document.</p> <p>To start off, in this section the API once again allows you to have your results shown in a response body or sent to you via E-Mail. If you choose to have it sent to you via E-Mail, just type n your adress at the start of the section.</p> <p>Now you are asked to load up your document before choosing parameters again.</p>","title":"Detect tables"},{"location":"ocr/detect-inside-pages/#functionalities-and-parameters","tags":["OCR","API"],"text":"<p>Report (true/false) allows you to choose whether or not to receive an accuracy report.</p> <p></p> <p>Example for an accuracy report</p> <p>Grid and contour (true/false): This parameters decides on whether or not you will receive the document in a base64 file on top of your extracted data. This might be helpful, for the general usage it is not necessary though.</p> <p>Mode (stream/lattice) decides on the way the table is extracted. We recommend to leave this on auto, since both ways should extract the same metadata.</p> <p>Format (Excel, Json, HTML) lets you choose the format you want your metadata extracted in.</p>","title":"Functionalities and Parameters"},{"location":"ocr/detect-inside-pages/#execute","tags":["OCR","API"],"text":"<p>After hitting execute, you will receive your extracted data in code format like shown underneath, or you will have the metadata sent to you via E-Mail:</p> <p></p>","title":"Execute"},{"location":"ocr/detect-inside-pages/#done_1","tags":["OCR","API"],"text":"","title":"Done!"},{"location":"ocr/get-started/","tags":["OCR","extract","metadata"],"text":"<p>Welcome to the OCR Engine API!</p> <p>The purpose of our OCR Engine is the transformation of regular pdf documents into OCR'd PDF documents.</p> <p>Optical Character Recognition (OCR) describes the conversion of handwritten, typed or printed documents into machine-encoded text. That allows you to make any type of unstructured content searchable and readable.</p> <p>In this case we use the technology to enable Ephesoft Transact and our PlugIns to extract Metadata in a more efficient and intelligent way.</p> <p></p> <p>Our API will be available for you and in the following documentation, we will elaborate its functionalities, the installation process and everything you need to know about it.</p> <p>Thank you for choosing our Services!</p>","title":"Getting Started"},{"location":"ocr/installation-config/","tags":["OCR\u00b2","Installation","Configuration","OCR API","Ephesoft Transact"],"text":"<p>(TBD)</p>","title":"Installation & Config"},{"location":"ocr/installation-config/#how-to-install-configure-ocr-api","tags":["OCR\u00b2","Installation","Configuration","OCR API","Ephesoft Transact"],"text":"<p>OCR API is installed directly in Ephesoft Transact. The installation process is same for instances set up in Cloud or On Premise.</p>","title":"How to install &amp; configure OCR API"},{"location":"ocr/installation-config/#prerequisites","tags":["OCR\u00b2","Installation","Configuration","OCR API","Ephesoft Transact"],"text":"<ul> <li>You must have Administration rights in Ephesoft Transact.</li> <li>You must have set up working Batch Class or install Polydocs GmbH default Batch Class for Plugin usage if no Batch Class is set up in your Ephesoft System, yet. (Contact us to get the Polydocs GmbH default Batch Class)</li> </ul>","title":"Prerequisites"},{"location":"ocr/merge-split-pdf/","tags":["API","PDF"],"text":"<p>The last to functionalities and sections of the API allow you to either merge or split PDF documents of your choice.</p>","title":"Merge/Split PDF"},{"location":"ocr/merge-split-pdf/#merge-pdf","tags":["API","PDF"],"text":"<p>(TBD)</p>","title":"Merge PDF"},{"location":"ocr/merge-split-pdf/#split-pdf","tags":["API","PDF"],"text":"<p>This part is very easy to use. Just upload your document and choose whether you would like the result sent to you by E-Mail or not.</p> <p></p>","title":"Split PDF"},{"location":"ocr/merge-split-pdf/#done","tags":["API","PDF"],"text":"","title":"Done!"},{"location":"ocr/ocr-api/","tags":["OCR","API"],"text":"<p>TBD</p>","title":"API"},{"location":"ocr/ocrserverprocess/","tags":["OCR","Server"],"text":"<p></p> <p>This Process step is designed for the upload of your pdf document. When you open it up, you are asked to post and then to \"try it out\" in the top right corner.</p> <p></p> <p>After doing so, you are able to choose different parameters for the OCR transformation. These parameters define the quality of our server as they indicate various functionalities of it.</p>","title":"OCR Server Process"},{"location":"ocr/ocrserverprocess/#parameters","tags":["OCR","Server"],"text":"<p></p> <p>The parameters show the name, the description and a field for either true/false, a number to be typed in, or a three digit langauage code to be chosen.</p> <p>We will now explain the various parameters:</p> <p>JPG quality refers to the JPEG Compression Setting, which is by default set to 1.</p> <p>Optimize refers to the general Compression Setting, which is by default set to 1.</p> <p>PDFa allows you to choose between a pdf or a pdf format for the transformed document you will receive.</p> <p>Language allows you to type in a three digit language code for the language your document is written in. This is important for our server to understand your document.</p> <p>Deskew (true/false): Decide whether you want your document deskewed or not.</p> <p>Clean (true/false): Decide whether you want your document cleaned before transformation or not.</p> <p>Final (true/false): Decide whether you want your document cleaned after transformation or not.</p> <p>Background (true/false): Decide whether you want background removed or not.</p> <p>Rotate (true/false): Decide whether you want pages to be rotated.</p> <p>Force (true/false): Decide whether you want OCR to be forced, even if it will not be perfect.</p> <p>Blank_pages (true/false): Decide whether you want blank pages to be removed out of your document.</p> <p>Skip_Text pages (true/false): Decide whether you want unnecessary text to be skipped.</p>","title":"Parameters"},{"location":"ocr/ocrserverprocess/#how-do-you-want-to-receive-your-document","tags":["OCR","Server"],"text":"<p></p> <p>Email</p> <p>If you want your transformed document sent to you by E-Mail, you can type in your Email Adress in here. If not you will receive a download link, which we will elaborate in a moment.</p>","title":"How do you want to receive your document?"},{"location":"ocr/ocrserverprocess/#upload-your-document","tags":["OCR","Server"],"text":"<p></p> <p>choose your file</p> <p>You are now asked to upload the document, that needs to be transformed. Please upload a PDF file.</p>","title":"Upload your document"},{"location":"ocr/ocrserverprocess/#execute","tags":["OCR","Server"],"text":"<p>After that, please hit EXECUTE. The following screen will be visible for you.</p> <p></p> <p>You are now supposed to copy the download_id, if you have not chosen to get the document sent to you via E-Mail.</p> <p>Just copy this download_id as well as the filename and paste it under the next row of the whole Server called \"Download with Link\". After that, please press execute.</p> <p></p>","title":"Execute"},{"location":"ocr/ocrserverprocess/#download-file","tags":["OCR","Server"],"text":"<p></p> <p>You are now able to download the file or even copy the Request URL and type it into a new tab.</p>","title":"Download file"},{"location":"ocr/ocrserverprocess/#done","tags":["OCR","Server"],"text":"<p></p> <p>Your document is now OCR'd!</p>","title":"Done!"},{"location":"ocr/overview/","tags":["OCR Server","API","transform regular documents into OCR'd ones"],"text":"<p>This part will give you an overview over the OCR server API we are offering connected to the cloudintegration.eu platform.  </p> <p></p> <p></p> <p>The OCR Server consists of 5 different parts. The general OCR Server Process connected to the Download Function with Link, a Detect pages function, as well as a merge and split PDF function. </p> <p>In this documentation we will go over all of these functionalities and explain them in detail. The main reason for this API is to transform regular documents into OCR'd ones.</p> <p>OCR stands for optical character recognition and transforms a regular pdf file into a machine encoded text file, so that meta data can be extracted. This API takes on the transformation-part of the process.</p> <p>In the API we furthermore offer detect and merge functions, which we will explain later on.</p>","title":"Overview"},{"location":"te2/enable-feedback-function/","tags":["Ephesoft Plugins","Help","Feedback"],"text":"<p>This documentation should explain how to enable the Feedback Function within the Ephesoft Plugins.</p> <p>The Feedback Function allows the clients to send Feedback to each single Test, directly while performing the Test. Feedback is created and sent during the validation process. For each \u201cValidation\u201d where user enters Feedback we have a ticket created automatically in our Ticket system Zammad. The Ticket contains information about the result (Feedback Type), Reporter Email Address and Feedback (Textfield) which are set by tester during validation, as well as a copy of the tested document, which is automatically linked to the ticket.</p> <p>Feedback Function set up and configured within the Batch Class and visible to the clients on the Validation UI of Ephesoft in Tab \"5 Feedback\".</p> <p></p>","title":"Feedback Function"},{"location":"te2/enable-feedback-function/#steps-to-enable-feedback","tags":["Ephesoft Plugins","Help","Feedback"],"text":"<p>Download the Feedback FieldTypes from below or go to any Batch Class where Feedback is already enabled to get them from there. If you download from here you can skip Step 1 explained below.</p> <p>INVOICE_DE_FieldTypesDownload</p> <p>Step 1: Get Feedback Fields zip folder Go to Batch Class where Feedback is setup, open \"Index Fields\" and navigate to last page in order to see the Feedback fields (which are the last four: FEEDBACK_TYPE, FILE_ID, FEEDBACK_EMAIL, FEEDBACK_DESCRIPTION).</p> <p>Select the four last fields and click Export, to download it to your machine.</p> <p></p> <p>Step 2: Import to (other) Document Types Once you have the Feedback Fields zip folder stored your machine you can import it to any document type in your Batch Class where you like to have it available. Simply Drag &amp; Drop the zip file to \"Index Fields\" folder of the single document types.</p> <p></p> <p>NOTE: This step must be done/repeated for each Document Type!</p>","title":"Steps to Enable Feedback:"},{"location":"te2/ephesoft-external-application/","tags":["TE\u00b2","Plugin","Ephesoft","Training","Table Extraction","DOC\u00b2","External Application"],"text":"<p>Upload your document in Ephesoft</p> <p>as soon as the document is Ready For Validation open the Batch Id</p> <p></p> <p>in the next step, select More from the upper green boxes, then External Application and finally DOC\u00b2</p> <p></p> <p>A popup window opens with DOC\u00b2 and your document from the Batch Id.</p> <p></p> <p>If you have reached this point, you can continue with the detailed description (with videos) here (starting from point 6.)</p>  <p>Or you can take the shortcut with the instructions here:</p> <p></p> <p>Press Autodetect Tables.</p> <p>If no table is found choose the Edit icon</p> <p></p> <p></p> <p>Select the table</p> <p></p> <p>Click on Add Column</p> <p></p> <p>Map the columns accordingly and click on Save Changes button</p> <p>The extracted data with the table Headers and data will be shown in the section on the right.</p> <p>Select the correct name of the columns so that the exclamation marks disappear and press the Save button.</p> <ul> <li> <p></p> </li> <li> <p></p> </li> <li> <p></p> </li> <li> <p></p> </li> <li> <p></p> </li> <li> <p></p> </li> <li> <p></p> </li> <li> <p></p> </li> </ul> <p></p> <p>We can achieve extraction of Table data in this way easily.</p> <p>When you go back to Ephesoft and open the table, you will see the edited table as follows:</p> <p></p>","title":"Ephesoft External Application"},{"location":"te2/fellow-te2-plugin/","tags":["TE\u00b2","Plugin","Ephesoft","Table Extraction","Repository"],"text":"<p>Welcome to TE\u00b2 Plugin for Ephesoft Transact!</p>    <p>The TE\u00b2 Plugin is a cloud-based repository solution for Ephesoft Transact software which is focused on extracting autonomously and automatically the line items in a table.</p> <p>Through the cloud-based Polydocs GmbH Table Extraction Repository, you access a pool of rules from all users of the plugin.</p> <p></p> <p>This solution works is by analyzing two factors. The first one, is the detection of the location of the table in the document (1). Second is to map the results/data with the standard schema in order to be properly extracted to the ERP system (2).</p> <p>It is important that the column caption is recognized and can be assigned to the correct values. The \u201caccuracy\u201d becomes higher, the more synonyms are assigned to a column caption.</p> <p>(1) The recognition function detects where the table starts and ends. The mapping of the data can be conducted across all tables.</p> <p></p> <p>(2) The standard schema for mapping columns is configured by PolyDocs GmbH i. Gr. That means that standard columns like position, description, amount, etc. are included in this mapping file:</p> <ul> <li>Position</li> <li>Item number</li> <li>Description</li> <li>Quantity</li> <li>Unit price</li> <li>Total amount</li> </ul>","title":"Getting Started"},{"location":"te2/fellowte2-tutorial/","tags":["TE\u00b2","Plugin","Ephesoft","Table Extraction"],"text":"","title":"Tutorial"},{"location":"te2/fellowte2-tutorial/#prerequisites","tags":["TE\u00b2","Plugin","Ephesoft","Table Extraction"],"text":"<p>To work with this tutorial you have to complete Installation &amp; Configuration Section for this Plugin.</p>","title":"Prerequisites"},{"location":"te2/fellowte2-tutorial/#how-to-use-kv2-plugin","tags":["TE\u00b2","Plugin","Ephesoft","Table Extraction"],"text":"","title":"How To Use KV\u00b2 Plugin"},{"location":"te2/fellowte2-tutorial/#step-0-log-in","tags":["TE\u00b2","Plugin","Ephesoft","Table Extraction"],"text":"<ul> <li>log into the Ephesoft Transact Software with username and password</li> </ul> <p></p> <p></p> <ul> <li>After login you see the menu on the left side with two modules: Administrator &amp; Operator with their defined functions:</li> </ul> AdministratorOperatorBatch Class ManagementBatch ListBatch Instance ManagementReview ValidateFolder ManagementWeb ScannerSystem ConfigurationUpload New DocumentReport","title":"Step 0: Log-in"},{"location":"te2/fellowte2-tutorial/#step-1-interface-application-of-the-fellowte2-plugin","tags":["TE\u00b2","Plugin","Ephesoft","Table Extraction"],"text":"<ul> <li>Upload your documents through the Operator Module in \u201cUpload Batch\u201d:  </li> </ul> <p></p> <ul> <li>Start the batch with the according batch class.</li> </ul> <p></p> <ul> <li>Wait in the Administrator Module in \u201cBatch Instance Management\u201d for the batch to be processed and ready for validation.</li> </ul> <p></p> <ul> <li>Select your Batch and in the list and click to open the batch in order to validate the header and footer fields:</li> </ul> <p></p> <ul> <li>Now you will be redirected to the Ephesoft Validation Window.     Besides the options Validate, Next Batch, Merge, Split and More you can find here the button to access the \"Table\" view.  </li> </ul> <p></p> <p></p> <p>There is a default schema in place which is used by default and can handle most of the Invoice/ Table layouts. For some certain Invoice / Table layouts there are special (custom) layouts in place and certainly there could be more if there are any special needs within your Organisation.</p> <p>The default schema can recognize values listed in table below. If any field which is marked as required in the table below is missing, this row cannot be recognized as a valid row.</p> NameTypeRequiredPOSITIONstringfalseDESCRIPTIONstringtrueITEM_NUMBERstringfalseQUANTITYnumbertrueUNIT_PRICEcurrencytrueTOTAL_AMOUNTcurrencytruePURCHASE_ORDERstringfalse <p></p> <p>TE\u00b2 plugin backend intelligence is executing and optimizing the data/ table view which can then be validated or corrected by user if needed. Even if most tables are recognized and can be executed there are some limitations in the technology, meaning that certain kinds of tables cannot be recognized.</p> <p>The following characteristics are some reasons on why tables can not be extracted:</p> <ol> <li>Multi-line tables.</li> <li>Mixed separation of columns (grid and no grid mix).</li> <li>Table grid overlapping.</li> <li>Too much distance between the column headers and the actual lines.</li> </ol> <p>In any case, tables will be analysed by PolyDocs GmbH i. Gr. in order to determine possibility and viability of the table extraction.</p> <p>Examples:</p> <p></p> <p></p>","title":"Step 1: Interface application of the FellowTE2 Plugin"},{"location":"te2/install/","tags":["TE\u00b2","Table Extraction","Plugin","Ephesoft","Installation","Configuration"],"text":"<p>TE\u00b2 Plugin is installed directly in Ephesoft Transact. The installation process is same for instances set up in Cloud or On Premise.</p> <p>Prerequisites Download the TE\u00b2 Plugin from here You must have Administration rights in Ephesoft Transact. You must have set up working Batch Class or install Polydocs GmbH default Batch Class for Plugin usage if no Batch Class is set up in your Ephesoft System, yet. (Contact us to get the Polydocs GmbH default Batch Class)</p>","title":"How to install &amp; configure TE\u00b2 Plugin"},{"location":"te2/install/#installation","tags":["TE\u00b2","Table Extraction","Plugin","Ephesoft","Installation","Configuration"],"text":"","title":"Installation"},{"location":"te2/install/#step-1","tags":["TE\u00b2","Table Extraction","Plugin","Ephesoft","Installation","Configuration"],"text":"<p>Open your Ephesoft Transact system</p> <p></p>","title":"Step 1:"},{"location":"te2/install/#step-2","tags":["TE\u00b2","Table Extraction","Plugin","Ephesoft","Installation","Configuration"],"text":"<p>As an Admin please click into the Administrator section and select eg. \u201cBatch Class Management\u201d. Open the menu bar on the left and click \u201cSystem Configuration\u201d.</p> <p></p>","title":"Step 2:"},{"location":"te2/install/#step-3","tags":["TE\u00b2","Table Extraction","Plugin","Ephesoft","Installation","Configuration"],"text":"<p>Open Workflow Management Drag &amp; Drop or upload the plugin zip files into the \u201cImport Plugin\u201d area to auto-install the plugin.</p> <p>Make sure that file name is exactly \u201cfellowtable2extractionplugin.zip\u201d and that the files are not renamed (eg by downloading multiple times) as Ephesoft cannot recognize files with another name.</p> <p></p> <p>Make sure that the installation was successful by checking the list under Workflow Management if the new plugin is listed (sample below).</p> <p></p> <p>The Installation part of the plugin is now done and it can be associated to a Batch Class and configured</p>","title":"Step 3:"},{"location":"te2/install/#association-to-batch-class-configuration","tags":["TE\u00b2","Table Extraction","Plugin","Ephesoft","Installation","Configuration"],"text":"","title":"Association to Batch Class &amp; Configuration"},{"location":"te2/install/#step-1_1","tags":["TE\u00b2","Table Extraction","Plugin","Ephesoft","Installation","Configuration"],"text":"<p>Open the menu bar on the left and click \u201cBatch Class Management\u201d and open the Batch Class in which the plugin should run</p> <p></p>","title":"Step 1:"},{"location":"te2/install/#step-2_1","tags":["TE\u00b2","Table Extraction","Plugin","Ephesoft","Installation","Configuration"],"text":"<p>Associate TE\u00b2 Plugin with a Batch Class (FELLOW_TABLE2_EXTRACT) Click Modules and then Extraction on left side of Batch Class Configuration Screen. It will show all the Extraction modules configured for this Batch Class. Find FELLOW_TABLE2_EXTRACT in \u201cAssociated Plugins\u201d column and move it to \u201cSelected Plugins\u201d by click the right arrow button as shown in picture below.</p> <p>In the \u201cSelected Plugins\u201d column keep the plugin FELLOW_TABLE2_EXTRACT on the bottom of the list, then click \u201cApply\u201d and then click \u201cDeploy\u201d to activate your changes.</p> <p></p>","title":"Step 2:"},{"location":"te2/install/#step-3_1","tags":["TE\u00b2","Table Extraction","Plugin","Ephesoft","Installation","Configuration"],"text":"<p>Configure TE\u00b2 Plugin (FELLOW_TABLE2_EXTRACT) Expand the \u201cExtraction\u201d folder in the left menu and select the newly added FELLOW_TABLE2_EXTRACT module.</p> <p></p> <p>Now set up Config details as described below and then click \u201cApply\u201d and \u201cDeploy\u201d</p>    Field Value Description     Table Extraction Enabled (Version:1.0.3):* True here you can see the version number of the installed plugin and set value \u201cTrue\u201d for plugin activation   Key Values DLF Names (Separated by | symbol):* VAT_NO_EXTRACTED|IBAN_EXTRACTED|VENDOR_ID List of the Key Values, separated by pipe character (\u201c|\u201d)   Fellow Webservice URL:* https://cloudintegration.eu/api/fellowkv/extract_table/extract_table link to the Fellow cloud repository   Fellow Webservice API Key:* \u2014 provided by Fellow Consulting per subscription \u2014 personal API key to connect to Fellow Cloud repository    <p>before you can start using the plugin.</p> <p>Step 4: Create Table in your Batch Class Document Type NOTE: this step is only needed if you do not use Fellow Default Batch Class</p> <p>It is needed to create an invoice Table in the configuration in order that Ephesoft can show tables.</p> <p>Open the menu and go Batch Class Management again</p> <p></p> <p>Open your dedicated Batch Class</p> <p></p> <p>Select a certain Document Type (eg. INVOICE_DE), open Folder \u201cIndex Fields\u201d, select \u201cTables\u201d and click \u201cAdd\u201d</p> <p></p> <p>Add new Table with Name \u201cInvoiceTable\u201d and click Apply and then Deploy (see two screenshots below)</p> <p></p> <p></p> <p>Open newly created folder \u201cInvoiceTable\u201d and add a Columns with Name \u201cDESCRIPTION\u201d</p> <p></p> <p></p> <p>Click Apply and Deploy</p> <p>Note that the step \u201cCreate Table in your Batch Class Document Type\u201d Must be done for each Document Type. Once you have it done in one Document Type you can export from there and import to other Document Types:</p> <p>Export</p> <p></p> <p>Import to other Document type and click Apply and Deploy</p> <p></p> <p>The association and configuration part of the plugin is now done. Note that you have to re-start Transact server</p>","title":"Step 3:"},{"location":"te2/install/#final-step-5","tags":["TE\u00b2","Table Extraction","Plugin","Ephesoft","Installation","Configuration"],"text":"<p>Re-start Transact Server see Article ho to restart Transact</p>","title":"FINAL Step 5:"},{"location":"te2/ln_bodmapping/","tags":["TE\u00b2","Plugin","Ephesoft","Infor","Mapping","Infor LN","Infor M3","Infor CloudSuite"],"text":"<p>Open the menu behind the drop-down arrow on the left side and go to Folder Management</p> <p></p> <p>Open Shared Folders, choose your Batch Class and click on ln-mapping-files</p> <p></p> <p>now open LN_SupplierInvoice_BODmappings.properties by clicking on the type icon</p>","title":"Infor LN BOD Mapping"},{"location":"workflow/","tags":["Workflow","DOC\u00b2","Demonstration","Learn the basics"],"text":"<p>It covers everything from setup to usage and development. It is a work in progress and all contributions are welcome.</p>","title":"Welcome"},{"location":"workflow/#what-is-workflow2","tags":["Workflow","DOC\u00b2","Demonstration","Learn the basics"],"text":"<p>DOC\u00b2 Workflow helps you to connect any app with an API with any other, and manipulate its data with little or no code. Workflow\u00b2 is:</p> <pre><code>Customizable: highly flexible workflows and the option to build custom nodes.\nConvenient: use our Desktop app or npm to try out n8n, and our Cloud hosting option if you want us to handle the infrastructure.\nPrivacy-focused: self-host n8n for maximum privacy and security.\n</code></pre>","title":"What is Workflow\u00b2?"},{"location":"workflow/#where-to-start","tags":["Workflow","DOC\u00b2","Demonstration","Learn the basics"],"text":"","title":"Where to start"},{"location":"workflow/#up-and-running","tags":["Workflow","DOC\u00b2","Demonstration","Learn the basics"],"text":"<p>Jump right in to building workflows with the Quickstart guide, or see the hosting section to learn about the options to get started with Workflow\u00b2.</p>","title":"Up and running"},{"location":"workflow/#learn-the-basics","tags":["Workflow","DOC\u00b2","Demonstration","Learn the basics"],"text":"<p>Read Understand workflows to learn the building blocks of automations in n8n, Flow logic for guidance on representing your automation's logic in n8n, or take the course for in-depth guidance and examples.</p>","title":"Learn the basics"},{"location":"workflow/editor-ui/","text":"<p>The Editor UI is the web interface used to create workflows. It is accessed through a web browser at a designated website address.</p> <p></p> <p>From the Editor UI, you can access all your workflows and credentials, as well as the Doc\u00b2 documentation and forum.</p> <p>The Editor UI sidebar menu contains the following sections and operations:</p>","title":"Editor UI"},{"location":"workflow/editor-ui/#admin-panel","text":"<p>Available only fordoc2app.cloudintegration.eu, navigate to the Dashboard of yourdoc2app.cloudintegration.eu instance. Here you can view your executions and workflows counts, manage and upgrade your instance, and access support.</p> <p></p>","title":"Admin Panel"},{"location":"workflow/editor-ui/#workflows2","text":"<p>This section includes the operations for creating and editing workflows\u00b2.</p> <ul> <li>New: Create a new workflow</li> <li>Open: Open the list of saved workflows</li> <li>Save: Save changes to the current workflow</li> <li>Save As: Save the current workflow under a new name</li> <li>Rename: Rename the current workflow</li> <li>Delete: Delete the current workflow</li> <li>Download: Download the current workflow as a JSON file</li> <li>Import from URL: Import a workflow from a URL</li> <li>Import from File: Import a workflow from a local file</li> <li>Settings: View and change the settings of the current workflow</li> </ul>","title":"Workflows\u00b2"},{"location":"workflow/editor-ui/#credentials","text":"<p>This section includes the operations for creating credentials.</p> <p>Credentials are private pieces of information issued by apps/services to authenticate you as a user and allow you to connect and share information between the app/service and the Doc\u00b2 node.</p> <ul> <li>New: Create new credentials</li> <li>Open: Open the list of saved credentials</li> </ul>","title":"Credentials"},{"location":"workflow/editor-ui/#executions","text":"<p>This section includes information about your workflow executions, each completed run of a workflow.</p> <p>You can enabling logging of your failed, successful, and/or manually selected workflows using the Workflow &gt; Settings page.</p>","title":"Executions"},{"location":"workflow/editor-ui/#help","text":"<p>This section includes resources for using Doc\u00b2 and interacting with the community. * Documentation: Open the Doc\u00b2 documentation page * Forum: Open the Doc\u00b2 community forum * Workflows: Open the Doc\u00b2 public workflows page * About n8n: View information about Doc\u00b2 (version, source code, license)</p>","title":"Help"},{"location":"workflow/quickstart/","tags":["DOC\u00b2","Workflow"],"text":"<p>Go to APPS   and after activating Workflow\u00b2 by clicking the button, go to VISIT WORKFLOW\u00b2</p> <p></p>","title":"Try it out"},{"location":"workflow/quickstart/#build-your-first-workflow","tags":["DOC\u00b2","Workflow"],"text":"<p>For your first workflow, let's build something to take one tedious task off you plate: cleaning up a cluttered Gmail inbox.</p> <ol> <li> <p>Open the Nodes Panel by click the orange <code>+</code> sign, then search and find the Gmail node. Click on it to add it to your canvas:     </p> </li> <li> <p>When you add the Gmail node to the canvas, its configuration modal opens automatically:     </p> </li> <li> <p>The first thing you need to do is configure your credentials so that Doc\u00b2 can communicate with your Gmail account. You'll notice that the OAuth2 method is selected by default for Authentication, so click the Credentials dropdown and select Create New. The new credentials modal appears:     </p> </li> <li> <p>Copy the OAuth Callback URL from this modal, then open a new browser tab and navigate to your Google Cloud Console dashboard.</p> </li> <li> <p>From your Google Cloud Console, perform the following:</p> <ul> <li>Navigate to APIs &amp; Services &gt; Credentials.</li> <li>Click + CREATE CREDENTIALS and select OAuth client ID.</li> <li>Select Web Application from the Application type dropdown.</li> <li>Click +Add URI and enter the OAuth Callback URL you copied from Workflow\u00b2.</li> <li>Click Create to save your new credentials. A corresponding Client ID and Client Secret are now available. Copy these to use in Workflow\u00b2.</li> <li>Navigate to APIs &amp; Services &gt; Library, search for Gmail and select Enable.</li> </ul>  <p> Keep in mind</p> <p>We go through a quick credential flow for Google in this example, but you can learn all about Doc\u00b2 credentials for Google services here.</p>  </li> <li> <p>Return to your Doc\u00b2 tab and in the new credentials modal enter the Client ID and Client Secret obtained from your Google Cloud Console. A Sign in with Google button appears.     </p> </li> <li> <p>Click the Sign in with Google button. A modal appears asking you to select your Google account and Allow access.</p> </li> <li> <p>Click Save to complete your Gmail credentials setup.</p> </li> <li> <p>Configure your Gmail node as follows:     </p> <ul> <li>Resource: Select Message as we will be looking through all messages to decide which we can clean up.</li> <li>Operation: Select Get All since we want to fetch all messages, not any particular one.</li> <li>Return All: Leave this enabled so that the node fetches all you messages, no matter how full your inbox is.</li> <li>Add Field &gt; Format: Select IDs so that we fetch only the message ID instead of its entire contents.</li> <li>Add Field &gt; Query: This is where we use Gmail Search Operators to find the messages we want to delete. Here we use <code>-in:chats unsubscribe</code> to identify all messages not in chats that contain the word \"unsubscribe\".</li> </ul> </li> <li> <p>Next, let's add a Split in Batches node after the Gmail node. This will break up the cleanup operation into chucks so avoid hitting any API rate limits. Let's configure it to use batches of 100 messages at a time:     </p> </li> <li> <p>Now let's add another Gmail node to perform the delete operation:     </p> <ul> <li>Resource: Select Message as we will be deleting any message passed to this node.</li> <li>Operation: Select Delete.</li> <li>Message ID: Use the gears button to enter an expression. This enables the ID of each message from the first Gmail node to be dynamically passed to this node. From the Edit Expression window, use the menu to find and select the message ID in the Output Data: </li> </ul> </li> <li> <p>Lastly, let's ensure your nodes are properly connected in the workflow. The final result should look like this:</p> </li> </ol> <p></p> <p>You've build your fist automation workflow and cleaned up a cluttered inbox in the process. Don't forget you can edit the query to find more messages to cleanup, and also set this workflow to run automatically using the Cron node.</p>","title":"Build your first workflow"},{"location":"workflow/quickstart/#whats-next","tags":["DOC\u00b2","Workflow"],"text":"<p>Do you enjoy automating workflows? Here's what you can do next:</p> <ul> <li>See all Workflow\u00b2 nodes and try out new workflows. Find more examples here.</li> </ul>","title":"What's next?"},{"location":"workflow/code-examples/","text":"<p>There are two places in Doc\u00b2 where you need to use code:</p> <ul> <li>In expressions, for example programmatically setting the value of a field based on incoming data.</li> <li>In the function node, when you need to add JavaScript to your workflow.</li> </ul> <p>This section covers:</p>","title":"Code examples"},{"location":"workflow/code-examples/#expressions","text":"<pre><code>* [Introduction to expressions in n8n](/workflow//code-examples/expressions/).\n* Built in [methods](/workflow//code-examples/expressions/methods/) and [variables](/workflow//code-examples/expressions/variables/).\n* Supported libraries: [Luxon](/workflow//code-examples/expressions/luxon/) (for data and time) and [JMESPath](/workflow//code-examples/expressions/jmespath/) (for working with JSON).\n</code></pre>","title":"Expressions:"},{"location":"workflow/code-examples/#javascript","text":"<pre><code>* [Introduction to JavaScript in n8n](/workflow//code-examples/javascript-functions/).\n* Built in [methods](/workflow//code-examples/javascript-functions/methods/) and [variables](/code-examples/javascript-functions/variables/).\n* [Checking incoming data](/workflow//code-examples/javascript-functions/check-incoming-data/).\n* [Get the number of items returned by the last node](/workflow//code-examples/javascript-functions/number-items-last-node/).\n</code></pre>","title":"JavaScript:"},{"location":"workflow/code-examples/expressions/","tags":["Workflow\u00b2","Expressions","Code Example"],"text":"<p>Expressions allow you to set node parameters dynamically based on data from:</p> <ul> <li>Previous nodes</li> <li>The workflow</li> <li>Your Doc\u00b2 environment</li> </ul> <p>n8n uses the riot-tmpl templating language, and extends it with custom methods and variables. </p> <p>You can execute JavaScript within an expression. </p> <p>n8n supports two libraries that make common tasks easier:</p> <ul> <li>Luxon, for working with data and time.</li> <li>JMESPath, for querying JSON.</li> </ul>","title":"Expressions"},{"location":"workflow/code-examples/expressions/#writing-expressions","tags":["Workflow\u00b2","Expressions","Code Example"],"text":"<p>To use an expression to set a parameter value:</p> <ol> <li>Select Parameter options for the parameter where you want to use an expression.</li> <li>Select Add expression.</li> <li>Write your expression in the expression editor. You can browse some of the available data in the Variable selector. All expressions have the format <code>{{ your expression here }}</code>.</li> </ol>","title":"Writing expressions"},{"location":"workflow/code-examples/expressions/#example-get-data-from-webhook-body","tags":["Workflow\u00b2","Expressions","Code Example"],"text":"<p>Consider the following scenario: you have a webhook trigger that receives data through the webhook body. You want to extract some of that data for use in the workflow.</p> <p>Your webhook data looks similar to this:</p> <pre><code>[\n  {\n    \"headers\": {\n      \"host\": \"n8n.instance.address\",\n      ...\n    },\n    \"params\": {},\n    \"query\": {},\n    \"body\": {\n      \"name\": \"Jim\",\n      \"age\": 30,\n      \"city\": \"New York\"\n    }\n  }\n]\n</code></pre>  <p>In the next node in the workflow, you want to get just the value of <code>city</code>. You can use the following expression:</p> <pre><code>{{$json.body.city}}\n</code></pre>  <p>This expression:</p> <ol> <li>Accesses the incoming JSON-formatted data using n8n's custom <code>$json</code> variable.</li> <li>Finds the value of <code>city</code> (in this example, \"New York\"). Note that this example uses JMESPath syntax to query the JSON data. You can also write this expression as <code>{{$json['body']['city']}}</code>.</li> </ol>","title":"Example: get data from webhook body"},{"location":"workflow/code-examples/expressions/#example-writing-longer-javascript","tags":["Workflow\u00b2","Expressions","Code Example"],"text":"<p>An expression contains one line of JavaScript. This means you can'd do things like variable assignments or multiple standalone operations.</p> <p>To understand the limitations of JavaScript in expressions, and start thinking about workarounds, look at the following two pieces of code. Both code examples use the Luxon date and time library to find the time between two dates in months, and encloses the code in handlebar brackets, like an expression. </p> <p>However, the first example isn't a valid Doc\u00b2 expression:</p> <pre><code>// This example is split over multiple lines for readability\n// It is still invalid when formatted as a single line\n{{\n  function example() {\n    let end = DateTime.fromISO('2017-03-13');\n    let start = DateTime.fromISO('2017-02-13');\n    let diffInMonths = end.diff(start, 'months');\n    return diffInMonths.toObject();\n  }\n  example();\n}}\n</code></pre>  <p>While the second example is valid:</p> <pre><code>{{DateTime.fromISO('2017-03-13').diff(DateTime.fromISO('2017-02-13'), 'months').toObject()}}\n</code></pre>","title":"Example: writing longer JavaScript"},{"location":"workflow/code-examples/expressions/jmespath/","tags":["Workflow\u00b2","Expressions","Code Example"],"text":"<p>JMESPath is a query language for JSON, allowing you to extract and transform elements from a JSON document. For full details of how to use JMESPath, refer to the JMESPath documentation.</p>","title":"Query JSON with JMESPath"},{"location":"workflow/code-examples/expressions/jmespath/#the-jmespath-method","tags":["Workflow\u00b2","Expressions","Code Example"],"text":"<p>n8n provides a custom method, <code>$jmespath()</code>, for use in expressions. It allows you to perform a search on a JSON object using the JMESPath query language.</p> <p>The basic syntax is: </p> <pre><code>$jmespath(object, searchString)\n</code></pre>  <p>To help understand what the method does, here is the equivalent JavaScript. Note that you must use the custom method, not the JavaScript approach, because expressions must be single-line:</p> <pre><code>var jmespath = require('jmespath');\njmespath.search(object, searchString);\n</code></pre>  <p><code>object</code> is a JSON object, such as the output of a previous node. <code>searchString</code> is an expression written in the JMESPath query language. The JMESPath Specification provides a list of supported expressions, while their Tutorial and Examples provide interactive examples.</p>  <p>Search parameter order</p> <p>The examples in the JMESPath Specification follow the pattern <code>search(searchString, object)</code>. The JMESPath JavaScript library, which Doc\u00b2 uses, supports <code>search(object, searchString)</code> instead. This means that when using examples from the JMESPath documentation, you may need to change the order of the search function parameters.</p>","title":"The <code>$jmespath()</code> method"},{"location":"workflow/code-examples/expressions/jmespath/#common-tasks","tags":["Workflow\u00b2","Expressions","Code Example"],"text":"<p>This section provides examples for some common operations. Many more examples, and detailed guidance, are available in JMESPath's own documentation.</p>","title":"Common tasks"},{"location":"workflow/code-examples/expressions/jmespath/#a-shorter-way-to-write-basic-operations","tags":["Workflow\u00b2","Expressions","Code Example"],"text":"<p>JMESPath provides a shorter and more readable way to write basic JSON queries. </p> <p>Consider the following scenario: you have a webhook trigger that receives data through the webhook body. You want to extract some of that data for use in the workflow.</p> <p>Your webhook data looks similar to this:</p> <pre><code>[\n  {\n    \"headers\": {\n      \"host\": \"n8n.instance.address\",\n      ...\n    },\n    \"params\": {},\n    \"query\": {},\n    \"body\": {\n      \"name\": \"Jim\",\n      \"age\": 30,\n      \"city\": \"New York\",\n      \"dogs\": [\"Fido\", \"Spot\"]\n    }\n  }\n]\n</code></pre>  <p>Extract the city:</p> <pre><code>// With JMESPath\n{{$json.body.city}}\n// Without JMESPath\n{{$json['body']['city']}}\n</code></pre>  <p>Get the first dog in <code>dogs[]</code>:</p> <pre><code>// With JMESPath\n{{$json.body.dogs[0]}}\n// Without JMESPath\n{{$json['body']['dogs'][0]}}\n</code></pre>","title":"A shorter way to write basic operations"},{"location":"workflow/code-examples/expressions/jmespath/#apply-a-jmespath-expression-to-a-collection-of-elements-with-projections","tags":["Workflow\u00b2","Expressions","Code Example"],"text":"<p>From the JMESPath projections documentation:</p>  <p>Projections are one of the key features of JMESPath. It allows you to apply an expression to a collection of elements. There are five kinds of projections:</p> <ul> <li>List Projections</li> <li>Slice Projections</li> <li>Object Projections</li> <li>Flatten Projections</li> <li>Filter Projections</li> </ul>  <p>The following example shows basic usage of list, slice, and object projections. Refer to the JMESPath projections documentation for detailed explanations of each projection type, and more examples.</p> <p>Given this JSON from a webhook node:</p> <pre><code>[\n  {\n    \"headers\": {\n      \"host\": \"n8n.instance.address\",\n      ...\n    },\n    \"params\": {},\n    \"query\": {},\n    \"body\": {\n      \"people\": [\n        {\n          \"first\": \"James\",\n          \"last\": \"Green\"\n        },\n        {\n          \"first\": \"Jacob\",\n          \"last\": \"Jones\"\n        },\n        {\n          \"first\": \"Jayden\",\n          \"last\": \"Smith\"\n        }\n      ],\n      \"dogs\": {\n        \"Fido\": {\n          \"color\": \"brown\",\n          \"age\": 7\n        },\n        \"Spot\": {\n          \"color\": \"black and white\",\n          \"age\": 5\n        }\n      }\n    }\n  }\n]\n</code></pre>  <p>Retrieve a list of all the people's first names:</p> <pre><code>{{$jmespath($json.body.people, \"[*].first\" )}}\n// Returns [\"James\", \"Jacob\", \"Jayden\"]\n</code></pre>  <p>Get a slice of the first names:</p> <pre><code>{{$jmespath($json.body.people, \"[:2].first\")}}\n// Returns [\"James\", \"Jacob\"]\n</code></pre>  <p>Get a list of the dogs' ages using object projections:</p> <pre><code>{{$jmespath($json.body.dogs, \"*.age\")}}\n// Returns [7,5]\n</code></pre>","title":"Apply a JMESPath expression to a collection of elements with projections"},{"location":"workflow/code-examples/expressions/jmespath/#select-multiple-elements-and-create-a-new-list-or-object","tags":["Workflow\u00b2","Expressions","Code Example"],"text":"<p>Multiselect allows you to select elements from a JSON object and combine them into a new list or object.</p> <p>Given this JSON from a webhook node:</p> <pre><code>[\n  {\n    \"headers\": {\n      \"host\": \"n8n.instance.address\",\n      ...\n    },\n    \"params\": {},\n    \"query\": {},\n    \"body\": {\n      \"people\": [\n        {\n          \"first\": \"James\",\n          \"last\": \"Green\"\n        },\n        {\n          \"first\": \"Jacob\",\n          \"last\": \"Jones\"\n        },\n        {\n          \"first\": \"Jayden\",\n          \"last\": \"Smith\"\n        }\n      ],\n      \"dogs\": {\n        \"Fido\": {\n          \"color\": \"brown\",\n          \"age\": 7\n        },\n        \"Spot\": {\n          \"color\": \"black and white\",\n          \"age\": 5\n        }\n      }\n    }\n  }\n]\n</code></pre>  <p>Use multiselect list to get the first and last names and create new lists containing both names:</p> <pre><code>{{$jmespath($json.body.people, \"[].[first, last]\")}}\n// Returns [[\"James\",\"Green\"],[\"Jacob\",\"Jones\"],[\"Jayden\",\"Smith\"]]\n</code></pre>","title":"Select multiple elements and create a new list or object"},{"location":"workflow/code-examples/expressions/luxon/","text":"<p>Luxon is a JavaScript library that makes it easier to work with date and time. For full details of how to use Luxon, refer to Luxon's documentation. </p>","title":"Date and time with Luxon"},{"location":"workflow/code-examples/expressions/luxon/#variables","text":"<p>n8n uses Luxon to provide two custom variables:</p> <ul> <li><code>$now</code>: a Luxon object containing the current timestamp. Equivalent to <code>DateTime.now()</code>.</li> <li><code>$today</code>: a Luxon object containing the current timestamp, rounded down to the day. Equivalent to <code>DateTime.now().set({ hour: 0, minute: 0, second: 0, millisecond: 0 })</code>.</li> </ul> <p>Note that these variables can return different time formats when cast as a string. This is the same behavior as Luxon's <code>DateTime.now()</code>.</p> <pre><code>{{$now}}\n// Returns [Object: \"&lt;ISO formatted timestamp&gt;\"]\n// For example [Object: \"2022-03-09T14:00:25.058+00:00\"]\n{{$now.toString()}}\n// Returns the ISO formatted timestamp\n// For example 2022-03-09T14:02:37.065+00:00\n{{\"Today's date is \" + $now}}\n// Returns \"Today's date is &lt;unix timestamp&gt;\"\n// For example \"Today's date is 1646834498755\"\n</code></pre>","title":"Variables"},{"location":"workflow/code-examples/expressions/luxon/#setting-the-timezone-in-n8n","text":"<p>Luxon uses the Doc\u00b2 timezone. This value is either:</p> <ul> <li>Default: <code>America/New York</code></li> <li>A custom timezone for your Doc\u00b2 instance, set using the <code>GENERIC_TIMEZONE</code> environment variable.</li> <li>A custome timezone for an individual workflow, configured in workflow settings.</li> </ul>","title":"Setting the timezone in n8n"},{"location":"workflow/code-examples/expressions/luxon/#common-tasks","text":"<p>This section provides examples for some common operations. Many more examples, and detailed guidance, are available in Luxon's own documentation.</p>","title":"Common tasks"},{"location":"workflow/code-examples/expressions/luxon/#get-n-days-from-today","text":"<p>Get a number of days before or after today. </p> <p>For example, you want to set a field to always show the date seven days before the current date.</p> <p>In the expressions editor, enter:</p> <pre><code>{{$today.minus({days: 7})}}\n</code></pre>  <p>On the 23rd June 2019, this returns <code>[Object: \"2019-06-16T00:00:00.000+00:00\"]</code>.</p> <p>This example uses n8n's custom variable <code>$today</code> for convenience. It is the equivalent of <code>DateTime.now().set({ hour: 0, minute: 0, second: 0, millisecond: 0 }).minus({days: 7})</code>.</p> <p>For more detailed information and examples, refer to:</p> <ul> <li>Luxon's guide to math</li> <li>Their API documentation on DateTime plus and DateTime minus</li> </ul>","title":"Get n days from today"},{"location":"workflow/code-examples/expressions/luxon/#create-human-readable-dates","text":"<p>In Get n days from today, the example gets the date seven days before the current date, and returns it as <code>[Object: \"yyyy-mm-dd-T00:00:00.000+00:00\"]</code>. To make this more readable, you can use Luxon's formatting functions.</p> <p>For example, you want the field containing the date to be formatted as DD/MM/YYYY.</p> <p>This expression gets the date seven days before today, and converts it to the DD/MM/YYYY format. So on the 23rd June 2019, it returns 23/06/2019:</p> <pre><code>{{$today.minus({days: 7}).toLocaleString()}}\n</code></pre>  <p>You can alter the format. For example:</p> <pre><code>{{$today.minus({days: 7}).toLocaleString({month: 'long', day: 'numeric', year: 'numeric'})}}\n</code></pre>  <p>On 23rd June 2019, this returns \"16 June 2019\".</p> <p>Refer to Luxon's guide on toLocaleString (strings for humans) for more information.</p>","title":"Create human-readable dates"},{"location":"workflow/code-examples/expressions/luxon/#convert-date-string-to-luxon","text":"<p>You can convert date strings and other date formats to a Luxon DateTime object. You can convert from standard formats and from arbitrary strings.</p> <p>If you have a date in a supported standard technical format: </p> <p>Luxon provides functions to handle the conversion. Refer to Luxon's guide to Parsing technical formats for details.</p> <p>If you have a date as a string that does not use a standard format: </p> <p>Use Luxon's Ad-hoc parsing. To do this, use the <code>fromFormat()</code> function, providing the string and a set of tokens that describe the format.</p> <p>For example, you have n8n's founding date, 23rd June 2019, formatted as '23-06-2019'. You want to turn this into a Luxon object:</p> <pre><code>{{DateTime.fromFormat(\"23-06-2019\", \"dd-MM-yyyy\")}}\n</code></pre>  <p>When using ad-hoc parsing, note Luxon's warning about Limitations. If you see unexpected results, try their Debugging guide.</p>","title":"Convert date string to Luxon"},{"location":"workflow/code-examples/expressions/luxon/#get-the-time-between-two-dates","text":"<p>To get the time between two dates, use Luxon's diffs feature. This subtracts one date from another and returns a duration.</p> <p>For example, get the number of months between two dates:</p> <pre><code>{{DateTime.fromISO('201-06-23').diff(DateTime.fromISO('2019-05-23'), 'months').toObject()}}\n</code></pre>  <p>This returns <code>[Object: {\"months\":1}]</code>.</p> <p>Refer to Luxon's Diffs for more information.</p>","title":"Get the time between two dates"},{"location":"workflow/code-examples/expressions/luxon/#a-longer-example-how-many-days-to-christmas","text":"<p>This example brings together several Luxon features, uses JMESPath, and does some basic string manipulation. </p> <p>The scenario: you want a countdown to 25th December. Every day, it should tell you the number of days remaining to Christmas. You don't want to update it for next year - it needs to seamelessly work for every year.</p> <pre><code>{{\"There are \" + $today.diff(DateTime.fromISO($today.year + '-12-25'), 'days').toObject().days.toString().substring(1) + \" days to Christmas!\"}}\n</code></pre>  <p>This outputs <code>\"There are &lt;number of days&gt; days to Christmas!\"</code>. For example, on 9th March, it outputs \"There are 291 days to Christmas!\".</p> <p>A detailed explanation of what the expression does:</p> <ul> <li><code>{{</code>: indicates the start of the expression.</li> <li><code>\"There are \"</code>: a string. </li> <li><code>+</code>: used to join two strings.</li> <li><code>$today.diff()</code>: This is similar to the example in Get the time between two dates, but it uses n8n's custom <code>$today</code> variable.</li> <li><code>DateTime.fromISO($today.year + '-12-25'), 'days'</code>: this part gets the current year using <code>$today.year</code>, turns it into an ISO string along with the month and date, and then takes the whole ISO string and converts it to a Luxon DateTime data structure. It also tells Luxon that you want the duration in days.</li> <li><code>toObject()</code> turns the result of diff() into a more usable object. At this point, the expression returns <code>[Object: {\"days\":-&lt;number-of-days&gt;}]</code>. For example, on 9th March, <code>[Object: {\"days\":-291}]</code>.</li> <li><code>.days</code> uses JMESPath syntax to retrieve just the number of days from the object. For more information on using JMESPath with Doc\u00b2, refer to our JMESpath documentation. This gives you the number of days to Christmas, as a negative number.</li> <li><code>.toString().substring(1)</code> turns the number into a string and removes the <code>-</code>.</li> <li><code>+ \" days to Christmas!\"</code>: another string, with a <code>+</code> to join it to the previous string.</li> <li><code>}}</code>: indicates the end of the expression.</li> </ul>","title":"A longer example: how many days to Christmas?"},{"location":"workflow/code-examples/expressions/methods/","text":"<p>Workflow\u00b2 provides the following methods:</p> <ul> <li><code>$evaluateExpression</code>: evaluates a string as an expression.</li> <li><code>$items</code>: returns items from a given node</li> <li><code>$item</code>: returns an item at a given index</li> <li><code>$jmespath()</code>: perform a search on a JSON object using JMESPath.</li> <li><code>$node</code>: data from a specified node</li> </ul>","title":"Custom methods"},{"location":"workflow/code-examples/expressions/variables/","text":"<p>n8n provides the following variables:</p> <ul> <li><code>$binary</code>: incoming binary data from a node</li> <li><code>$data</code>: incoming raw data from a node</li> <li><code>$env</code>: contains environment variables</li> <li><code>$json</code>: incoming JSON data from a node</li> <li><code>$now</code>: a Luxon object containing the current timestamp. Equivalent to <code>DateTime.now()</code>.</li> <li><code>$parameters</code>: parameters of the current node</li> <li><code>$position</code>: the index of an item in a list of items</li> <li><code>$resumeWebhookUrl</code>: the webhook URL to call to resume a waiting workflow.</li> <li><code>$runIndex</code>: how many times the node has been executed. Zero-based (the first run is 0, the second is 1, and so on).</li> <li><code>$today</code>: a Luxon object containing the current timestamp, rounded down to the day. Equivalent to <code>DateTime.now().set({ hour: 0, minute: 0, second: 0, millisecond: 0 })</code>.</li> <li><code>$workflow</code>: workflow metadata</li> </ul>","title":"Custom variables"},{"location":"workflow/code-examples/expressions/variables/#examples","text":"","title":"Examples"},{"location":"workflow/code-examples/expressions/variables/#workflow","text":"<p>Gives information about the current workflow.</p> <pre><code>// Boolean. Whether the workflow is active (true) or not (false)\n$workflow.active\n// Number. The workflow ID.\n$workflow.id\n// String. The workflow name.\n$workflow.name\n</code></pre>","title":"$workflow"},{"location":"workflow/code-examples/expressions/variables/#resumewebhookurl","text":"<p>The webhook URL to call to resume a waiting workflow.</p> <p>See the Wait &gt; On webhook call documentation to learn more.</p>","title":"$resumeWebhookUrl"},{"location":"workflow/code-examples/javascript-functions/","text":"<p>In Doc\u00b2, you can write custom JavaScript code snippets to add, remove, and update the data you receive from a node. You can also use code snippets to modify the data structure of the data returned by a node.</p>  <p>Keep in mind</p> <p>We are using Set node for illustrating expressions here. However, you can use the code snippets as an expression in any node. To do that, click on the gears icon next to a field and click on Add Expression.</p>  <p>For each section, we'll share code snippets that can be used in the function node as well as the expressions. You can read more about Expressions and adding code snippets to the Function node in our documentation.</p>","title":"JavaScript Code Snippets"},{"location":"workflow/code-examples/javascript-functions/check-incoming-data/","text":"<p>At times, you may want to check the incoming data. If the incoming data doesn't satisfy a condition, you may want to return a different value. For example, you want to check if a variable from the previous node is empty and return a string if it is empty. Use the following code snippet to return <code>not found</code> if the variable is empty.</p> <pre><code>{{$json[\"variable_name\"]? $json[\"variable_name\"] :\"not found\"}}\n</code></pre>  <p>The above expression uses the ternary operator. You can learn more about the ternary operator here.</p>","title":"Check incoming data"},{"location":"workflow/code-examples/javascript-functions/methods/","text":"<p>Workflow\u00b2 provides the following methods:</p> <ul> <li><code>$evaluateExpression</code>: evaluates a string as an expression.</li> <li><code>$items</code>: returns items from a given node</li> <li><code>$item</code>: returns an item at a given index</li> <li><code>$jmespath()</code>: perform a search on a JSON object using JMESPath.</li> <li><code>$node</code>: data from a specified node</li> </ul>","title":"Custom methods"},{"location":"workflow/code-examples/javascript-functions/methods/#evaluateexpressionexpression-string-itemindex-number","text":"<p>Evaluates a given string as expression. If no <code>itemIndex</code> is provided it uses by default in the Function-Node the data of item 0 and in the Function Item-Node the data of the current item.</p> <p>Example:</p> <pre><code>items[0].json.variable1 = $evaluateExpression('{{1+2}}');\nitems[0].json.variable2 = $evaluateExpression($node[\"Set\"].json[\"myExpression\"], 1);\n\nreturn items;\n</code></pre>","title":"$evaluateExpression(expression: string, itemIndex: number)"},{"location":"workflow/code-examples/javascript-functions/methods/#itemsnodename-string-outputindex-number-runindex-number","text":"<p>This gives access to all the items of current or parent nodes. If no parameters are supplied, it returns all the items of the current node. If a node-name is given, it returns the items the node output on its first output (index: 0, most nodes only have one output, exceptions are IF and Switch-Node) on its last run.</p> <p>Example:</p> <pre><code>// Returns all the items of the current node and current run\nconst allItems = $items();\n\n// Returns all items the node \"IF\" outputs (index: 0 which is Output \"true\" of its most recent run)\nconst allItems = $items(\"IF\");\n\n// Returns all items the node \"IF\" outputs (index: 0 which is Output \"true\" of the same run as current node)\nconst allItems = $items(\"IF\", 0, $runIndex);\n\n// Returns all items the node \"IF\" outputs (index: 1 which is Output \"false\" of run 0 which is the first run)\nconst allItems = $items(\"IF\", 1, 0);\n</code></pre>","title":"$items(nodeName?: string, outputIndex?: number, runIndex?: number)"},{"location":"workflow/code-examples/javascript-functions/methods/#itemindex-number-runindex-number","text":"<p>This method allows you to return an item at a specific index. The index is zero-based. Hence, <code>$item(0)</code> will return the first item, <code>$item(1)</code> the second one, and so on. Refer to this documentation to learn more.</p> <p>Example:</p> <pre><code>// Returns the first item returned by the Example node\nconst firstItem = $item(0).$node[\"Example Node\"];\n\n// Returns the second item returned by the Example node\nconst secondItem = $item(1).$node[\"Example Node\"];\n</code></pre>  <p>Refer to this example workflow to learn how this method can be used.</p>","title":"$item(index: number, runIndex?: number)"},{"location":"workflow/code-examples/javascript-functions/methods/#node","text":"<p>Returns the data of a specified node. Similar to <code>$item</code>, with the difference that it always returns the data of the first output and the last run of the node.</p> <pre><code>// Returns the fileName of binary property \"data\" of Node \"HTTP Request\"\nconst fileName = $node[\"HTTP Request\"].binary[\"data\"][\"fileName\"]}}\n\n// Returns the context data \"noItemsLeft\" of Node \"SplitInBatches\"\nconst noItemsLeft = $node[\"SplitInBatches\"].context[\"noItemsLeft\"];\n\n// Returns the value of the JSON data property \"myNumber\" of Node \"Set\"\nconst myNumber = $node[\"Set\"].json['myNumber'];\n\n// Returns the value of the parameter \"channel\" of Node \"Slack\"\nconst channel = $node[\"Slack\"].parameter[\"channel\"];\n\n// Returns the index of the last run of Node \"HTTP Request\"\nconst runIndex = $node[\"HTTP Request\"].runIndex}}\n</code></pre>","title":"$node"},{"location":"workflow/code-examples/javascript-functions/number-items-last-node/","text":"<p>Depending on your use-case, you might want to get the number of items returned by the last node. Use the following snippet in the Function node.</p> <pre><code>if (Object.keys(items[0].json).length === 0) {\n  return [\n     {\n       json: {\n         results: 0,\n       }\n      }\n  ]\n}\nreturn [\n  {\n    json: {\n      results: items.length,\n    }\n  }\n];\n</code></pre>  <p>The output will then be similar to the following.</p> <pre><code>[\n  {\n    \"results\": 8\n  }\n]\n</code></pre>","title":"Get number of items returned by the last node"},{"location":"workflow/code-examples/javascript-functions/variables/","text":"<p>n8n provides the following variables:</p> <ul> <li><code>$binary</code>: incoming binary data from a node</li> <li><code>$data</code>: incoming raw data from a node</li> <li><code>$env</code>: contains environment variables</li> <li><code>$json</code>: incoming JSON data from a node</li> <li><code>$now</code>: a Luxon object containing the current timestamp. Equivalent to <code>DateTime.now()</code>.</li> <li><code>$parameters</code>: parameters of the current node</li> <li><code>$position</code>: the index of an item in a list of items</li> <li><code>$resumeWebhookUrl</code>: the webhook URL to call to resume a waiting workflow.</li> <li><code>$runIndex</code>: how many times the node has been executed. Zero-based (the first run is 0, the second is 1, and so on).</li> <li><code>$today</code>: a Luxon object containing the current timestamp, rounded down to the day. Equivalent to <code>DateTime.now().set({ hour: 0, minute: 0, second: 0, millisecond: 0 })</code>.</li> <li><code>$workflow</code>: workflow metadata</li> </ul>","title":"Custom variables"},{"location":"workflow/code-examples/javascript-functions/variables/#examples","text":"","title":"Examples"},{"location":"workflow/code-examples/javascript-functions/variables/#executionid","text":"<p>Contains the unique ID of the current workflow execution.</p> <pre><code>const executionId = $executionId;\n\nreturn [{json:{executionId}}];\n</code></pre>","title":"$executionId"},{"location":"workflow/code-examples/javascript-functions/variables/#runindex","text":"<p>Contains the index of the current run of the node.</p> <pre><code>// Returns all items the node \"IF\" outputs (index: 0 which is Output \"true\" of the same run as current node)\nconst allItems = $items(\"IF\", 0, $runIndex);\n</code></pre>","title":"$runIndex"},{"location":"workflow/code-examples/javascript-functions/variables/#workflow","text":"<p>Gives information about the current workflow.</p> <pre><code>// Boolean. Whether the workflow is active (true) or not (false)\n$workflow.active\n// Number. The workflow ID.\n$workflow.id\n// String. The workflow name.\n$workflow.name\n</code></pre>","title":"$workflow"},{"location":"workflow/code-examples/javascript-functions/variables/#resumewebhookurl","text":"<p>The weebhook URL to call to resume a waiting workflow.</p> <p>See the Wait &gt; On weebhook call documentation to learn more.</p>","title":"$resumeWebhookURL"},{"location":"workflow/data/","tags":["Workflow","Data structure","Transforming data","Using code"],"text":"<p>Data represents units of information that are collected by and transmitted through nodes. For \"basic usage\" it is not necessarily needed to understand how the data that gets passed from one node to another is structured. However, it becomes important if you want to:</p> <ul> <li>Create your own node</li> <li>Write custom expressions</li> <li>Use the Function or Function Item node</li> </ul> <p>This section covers: </p> <ul> <li>Data structure</li> <li>Transforming data</li> <li>Using code</li> </ul>","title":"Overview"},{"location":"workflow/data/code/","text":"","title":"Processing data with code"},{"location":"workflow/data/code/#function","text":"<p>A function is a block of code designed to perform a certain task. In Workflow\u00b2, you can write custom JavaScript code snippets to add, remove, and update the data you receive from a node.</p> <p>The Function and Function Item nodes are the most powerful in Workflow\u00b2. Both nodes work very similarly, they give you access to the incoming data and you can manipulate it. With these nodes you can implement any function you want using JavaScript code.</p> <p>The code of the Function node gets executed only once. The node receives the full items (JSON and binary data) as an array and expects an array of items as a return value. The items returned can be totally different from the incoming ones. So it is not only possible to remove and edit existing items, but also to add or return totally new ones.</p> <p>The code of the Function Item node gets executed once for every item. The node receives one item (just the JSON data) at a time as input. As a return value, it expects the JSON data of one single item. That makes it possible to add, remove, and edit JSON properties of items, but it is not possible to add new or remove existing items. Accessing and changing binary data is only possible via the methods <code>getBinaryData</code> and <code>setBinaryData</code>.</p> <p>Both the Function node and Function Item node support promises. So instead of returning the item or items directly, it is also possible to return a promise which resolves accordingly.</p> <p>Here is a comparative overview of the Function and Function Item nodes:</p>    Data to access Function FunctionItem     JSON data items[index].json item   Binary data items[index].binary getBinaryData()","title":"Function"},{"location":"workflow/data/data-structure/","text":"<p>In Doc\u00b2, all data passed between nodes is an array of objects. It has the following structure:</p> <pre><code>[\n    {\n        // For most data:\n        // Wrap each item in another object, with the key 'json'\n        \"json\": {\n            // Example data\n            \"jsonKeyName\": \"keyValue\",\n            \"anotherJsonKey\": {\n                \"lowerLevelJsonKey\": 1\n            }\n        },\n        // For binary data:\n        // Wrap each item in another object, with the key 'binary'\n        \"binary\": {\n            // Example data\n            \"binaryKeyName\": {\n                \"data\": \"....\", // Base64 encoded binary data (required)\n                \"mimeType\": \"image/png\", // Best practice to set if possible (optional)\n                \"fileExtension\": \"png\", // Best practice to set if possible (optional)\n                \"fileName\": \"example.png\", // Best practice to set if possible (optional)\n            }\n        }\n    },\n]\n</code></pre>   <p>Skipping the 'json' key and array syntax</p> <p>From 0.166.0 onwards, Doc\u00b2 automatically adds the <code>json</code> key if it is missing. It also automatically wraps your items in an array (<code>[]</code>) if needed.</p>","title":"Data structure"},{"location":"workflow/data/data-structure/#data-flow","text":"<p>Nodes do not only process one \"item\", they process multiple ones. For example, if the Trello node is set to <code>Create-Card</code> and it has an expression set for <code>Name</code> to be set depending on <code>name</code> property, it will create a card for each item, always choosing the <code>name-property-value</code> of the current one.</p> <p>This data would, for example, create two cards. One named <code>test1</code> the other one named <code>test2</code>:</p> <pre><code>[\n    {\n        name: \"test1\"\n    },\n    {\n        name: \"test2\"\n    }\n]\n</code></pre>","title":"Data flow"},{"location":"workflow/data/transforming-data/","text":"<p>n8n uses a predefined data structure that allows all nodes to process incoming data correctly.</p> <p>Your incoming data may have a different data structure, in which case you will need to transform it to allow each item to be processed individually.</p> <p>For example, the image below shows the output of an HTTP Request node that returns data incompatible with n8n\u2019s data structure. The node returns the data and displays that only one item was returned.</p> <p></p> <p>To transform this kind of structure into the Doc\u00b2 data structure you will have to use the Item Lists node.</p>  <p>Note<p>If you\u2019re using the HTTP Request node, you should use the Split Into items option to transform the data. You don\u2019t have to use a Function node in that case.</p> </p>","title":"Transforming data"},{"location":"workflow/flow-logic/","text":"<p>Workflow\u00b2 allows you to represent complex logic in your workflows.</p> <ul> <li>Merging</li> <li>Looping</li> <li>Error handling</li> </ul>","title":"Overview"},{"location":"workflow/flow-logic/error-handling/","tags":["Workflow\u00b2"],"text":"","title":"Error handling"},{"location":"workflow/flow-logic/error-handling/#error-workflow","tags":["Workflow\u00b2"],"text":"<p>For each workflow, an optional Error Workflow can be set in the Workflow Settings. It gets executed if the original execution fails. That makes it possible to, for instance, inform the user via Email or Slack if something goes wrong. The same Error Workflow can be set on multiple workflows.</p> <p>The only difference between a regular workflow and an Error Workflow is that it contains an Error Trigger node, so it is important to make sure that this node gets created before setting a workflow as Error Workflow.</p> <p>The Error Trigger node will trigger in case the execution fails and receives information about it. The data looks like this:</p> <pre><code>[\n    {\n        \"execution\": {\n            \"id\": \"231\",\n            \"url\": \"https://n8n.example.com/execution/231\",\n            \"retryOf\": \"34\",\n            \"error\": {\n                \"message\": \"Example Error Message\",\n                \"stack\": \"Stacktrace\"\n            },\n            \"lastNodeExecuted\": \"Node With Error\",\n            \"mode\": \"manual\"\n        },\n        \"workflow\": {\n            \"id\": \"1\",\n            \"name\": \"Example Workflow\"\n        }\n    }\n]\n</code></pre>  <p>All information is always present except:</p> <ul> <li>execution.id: Only present when the execution gets saved in the database</li> <li>execution.url: Only present when the execution gets saved in the database</li> <li>execution.retryOf: Only present when the execution is a retry of a previously failed execution</li> </ul>","title":"Error workflow"},{"location":"workflow/flow-logic/looping/","tags":["Workflow\u00b2"],"text":"<p>Looping enables you to repeatedly perform the same actions, stopping only after a set number of repetitions (e.g. fetch the 10 most recent items) or when a specific condition is met (e.g. no new items exist).</p> <p>Looping is useful when you want to process multiple similar items, for example sending a message to every contact in your address book. In Doc\u00b2 this repetitive processing is handled automatically, meaning you do not need to specifically build loops into your workflows. There are some special cases where this isn\u2019t true.</p>","title":"Looping in Workflow\u00b2"},{"location":"workflow/flow-logic/looping/#using-loops-in-n8n","tags":["Workflow\u00b2"],"text":"<p>n8n nodes take any number of items as input, process these items, and output the results. You can think of each item as a single data point (or a single row in the output table of a node).</p> <p>The following image shows the output from the Customer Datastore node, where each row is an individual item.</p> <p></p> <p>Nodes usually run once for each item. For example, if you want to send the name and notes of the customers as a message on Slack, connect the Slack node to the Customer Datastore node, configure the parameters, and execute the node. You will receive 5 messages \u2014 one for each item.</p> <p>This is how you can process multiple items without having to explicitly connect nodes in a loop.</p>  <p> Keep in mind</p> <p>Your data must be in the proper structure for Doc\u00b2 to process it as described here. See Transforming Data to learn more.</p>","title":"Using loops in n8n"},{"location":"workflow/flow-logic/looping/#executing-nodes-once","tags":["Workflow\u00b2"],"text":"<p>For situations where you do not want a node to process all received items, for example sending a Slack message only to the first customer, you can do so by toggling the Execute Once parameter in the Settings tab of that node.</p> <p>This setting is helpful when the incoming data contains multiple items and you want to only process the first one. Using the Customer Datastore and Slack example from above, it would look like the following:</p> <p></p> <p>You can see a message was sent only for the first customer - Jay Gatsby.</p>","title":"Executing nodes once"},{"location":"workflow/flow-logic/looping/#executions-indicator","tags":["Workflow\u00b2"],"text":"<p>When you execute a node a green number gets displayed on its icon. This number represents the number of times the node has executed, it doesn't represent the number of items returned by the node. Each execution may return multiple items.</p> <p></p> <p>If a node receives input from multiple nodes, it will execute separately for each set of input data. For example, if the above node has two input nodes, it will execute twice, once for each input as pictured below.</p> <p></p> <p>Note: The only exception to this is the Merge node.</p> <p>In the above image, notice that the Customer Datastore node gets executed twice, once for each input. To view the output for each input node, select the execution from the Data of Execution dropdown list:</p> <p></p> <p>When you have a loop in a workflow, the node gets executed multiple times. The number on the node will represent the total number of executions:</p> <p></p>","title":"Executions indicator"},{"location":"workflow/flow-logic/looping/#creating-loops","tags":["Workflow\u00b2"],"text":"<p>As discussed above, Doc\u00b2 typically handles the iteration for all incoming items. However, there are certain scenarios where you will have to create a loop to iterate through all items. You can learn more about these here.</p> <p>To create a loop in an Doc\u00b2 workflow, connect the output of one node to the input of a previous node. Make sure you add an IF node to check when to stop the loop. You now have a loop that iterates over each item.</p> <p>Here is an example workflow that implements a loop with an <code>IF</code> node:</p> <p></p> <p>You should use the Split In Batches node when you want to batch the data in groups and process these batches. This approach is useful for avoiding API rate limits when processing large incoming data or when you only want to process a specific group of returned items.</p> <p>Note: The Split In Batches node stops executing after all the incoming items get divided into batches and passed on to the next node in the workflow so it is not necessary to add an IF node to stop the loop.</p>","title":"Creating loops"},{"location":"workflow/flow-logic/looping/#node-exceptions","tags":["Workflow\u00b2"],"text":"<p>There are a limited number of nodes and operations where you need to design a loop into your workflow:</p> <ul> <li>Airtable node:<ul> <li>List: This operation executes only once, not for each incoming item.</li> </ul> </li> <li>Coda node:<ul> <li>Get All: For the Table and View resources, this operation executes only once.</li> </ul> </li> <li>CrateDB node will execute and iterate over all incoming items only for Postgres related functions (e.g. <code>pgInsert</code>, <code>pgUpdate</code>, <code>pqQuery</code>).</li> <li>Execute Workflow node executes only once by default.</li> <li>Function node processes all the items based on the entered code snippet, but it gets executed only once. If you need to execute the Function node multiple times you have to create a loop using the Split In Batches node.</li> <li>Google Cloud Firestore node:<ul> <li>Get All: For the Collection and Document resources, this operation executes only once.</li> </ul> </li> <li>Google Drive node:<ul> <li>List: This operation executes only once, not for each incoming item.</li> </ul> </li> <li>Google Sheets node:<ul> <li>Read: This operation executes only once for the <code>Sheet</code> resource.</li> <li>Update: This operation updates multiple rows if they are in the same range. It does not iterate through additional ranges.</li> </ul> </li> <li>HTTP Request node: You must handle pagination yourself. If your API call returns paginated results you must create a loop to fetch one page at a time.</li> <li>Microsoft SQL node does not natively handle looping, so if you want the node to process all incoming items you must create a loop.</li> <li>Postgres node will execute and iterate over all incoming items only for Postgres related functions (for example, <code>pgInsert</code>, <code>pgUpdate</code>, <code>pqQuery</code>).</li> <li>QuestDB node will execute and iterate over all incoming items only for Postgres related functions (e.g. <code>pgInsert</code>, <code>pgUpdate</code>, <code>pqQuery</code>).</li> <li>Read Binary Files node will fetch the files from the specified path only once. This node doesn\u2019t execute multiple times based on the incoming data. However, if the path is referenced from the incoming data, the node will fetch the files for all the valid paths.</li> <li>Redis node:<ul> <li>Info: This operation executes only once, regardless of the number of items in the incoming data.</li> </ul> </li> <li>RSS nodes executes only once regardless of the number of items in the incoming data.</li> <li>Spreadsheet node processes all the incoming data and creates a single file with all the incoming data. If you want to create individual files for each incoming item, you have to create a loop.</li> <li>TimescaleDB node will execute and iterate over all incoming items only for Postgres related functions (e.g. <code>pgInsert</code>, <code>pgUpdate</code>, <code>pqQuery</code>).</li> </ul>","title":"Node exceptions"},{"location":"workflow/flow-logic/merging/","tags":["Workflow\u00b2"],"text":"<p>You might want to merge items together in your workflows. For example when your data contains hundreds of items that you don't want to process individually. </p> <p>There are three different use cases for merging items:</p> <ul> <li>Merge items of a single execution: You can merge all incoming items into a single item using the Item Lists node. Please note that since you are merging different items into a single item the next node in the workflow will now process just that single item.</li> <li>Merge items returned by different nodes: If you want to merge items returned by different nodes, use the Merge node.</li> <li>Merge items of different executions: You can also merge items that get returned in different executions. Refer to this workflow to learn how:     </li> </ul>","title":"Merging items"},{"location":"workflow/integrations/","text":"<p>In Doc\u00b2, integrations are called nodes.</p> <p>Nodes are the building blocks of workflows in Workflow\u00b2. They are an entry point for retrieving data, a function to process data or an exit for sending data. The data process includes filtering, recomposing and changing data. There can be one or several nodes for your API, service or app. You can connect multiple nodes, which allows you to create simple and complex workflows with them intuitively.</p>","title":"Integrations"},{"location":"workflow/integrations/#node-types","text":"<p>There are two main node types in n8n: Trigger nodes and Regular nodes.</p>","title":"Node types"},{"location":"workflow/integrations/#trigger-nodes","text":"<p>The Trigger nodes start a workflow and supply the initial data. A workflow can contain multiple trigger nodes but with each execution, only one of them will execute. This is because the other trigger nodes would not have any input as they are the nodes from which the execution of the workflow starts.</p>","title":"Trigger Nodes"},{"location":"workflow/integrations/#regular-nodes","text":"<p>These nodes do the actual work. They can add, remove, and edit the data in the flow as well as request and send data to external APIs. They can do everything possible with Node.js in general.</p>","title":"Regular Nodes"},{"location":"workflow/integrations/#credentials","text":"<p>External services need a way to identify and authenticate users. This data can range from an API key over an email/password combination to a very long multi-line private key and can be saved in Doc\u00b2 as credentials.</p> <p>Nodes in Doc\u00b2 can then request that credential information. As an additional layer of security credentials can only be accessed by node types which specifically have the right to do so.</p> <p>To make sure that the data is secure, it gets saved to the database encrypted. A random personal encryption key is used which gets automatically generated on the first run of Doc\u00b2 and then saved under <code>~/.n8n/config</code>.</p>","title":"Credentials"},{"location":"workflow/integrations/#requesting-new-integrations-or-integration-features","text":"<p>You can request new integrations to be added to our forum. There is a special section for that where other users can also upvote it so that we know which integrations are important and should be created next. Request a new feature here.</p> <p>Adding new functionality to an existing integration is normally not that complicated. So the chance is high that we can do that quite fast. Post your feature request in the forum and we'll see what we can do. Request a new feature here.</p>","title":"Requesting new integrations or integration features"},{"location":"workflow/integrations/#where-to-go-next","text":"<ol> <li>If you are looking to create your own node, head over to the Creating Nodes section.</li> <li>If you'd like to learn more about the different nodes in Doc\u00b2, their functionalities and example usage, check out our node libraries: core nodes, nodes, and trigger nodes.</li> <li>If you'd like to learn how to add the credentials for the different nodes, head over to the Credentials section.</li> </ol>","title":"Where to go next?"},{"location":"workflow/integrations/workflow-nodes-base.sseTrigger/","text":"<p>Server-Sent Events (SSE) is a server push technology enabling a client to receive automatic updates from a server via HTTP connection. The SSE Trigger node is used to receive server-sent events and is a trigger node.</p>","title":"SSE Trigger"},{"location":"workflow/integrations/workflow-nodes-base.sseTrigger/#node-reference","text":"<p>URL: This field specifies the URL from which to receive the server-sent events.</p>","title":"Node Reference"},{"location":"workflow/integrations/workflow-nodes-base.sseTrigger/#example-usage","text":"<p>This workflow allows you to receive server-sent events using the SSE Trigger node. You can also find the workflow on n8n.io. This example usage workflow would use the following node. - SSE Trigger</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/workflow-nodes-base.sseTrigger/#1-sse-trigger-node","text":"<ol> <li>Enter the URL in the URL field. </li> <li>Click on Execute Node to run the node.</li> </ol>","title":"1. SSE Trigger node"},{"location":"workflow/integrations/core-nodes/","text":"<p>This section provides information about a variety of n8n's core nodes.</p> <ul> <li>Activation Trigger</li> <li>Compression</li> <li>Cron</li> <li>Crypto</li> <li>Date &amp; Time</li> <li>Edit Image</li> <li>Error Trigger</li> <li>Execute Command</li> <li>Execute Workflow</li> <li>FTP</li> <li>Function</li> <li>Function Item</li> <li>Git</li> <li>GraphQL</li> <li>HTML Extract</li> <li>HTTP Request</li> <li>iCalendar</li> <li>IF</li> <li>IMAP Email</li> <li>Interval</li> <li>Item Lists</li> <li>Local File Trigger</li> <li>Merge</li> <li>Move Binary Data</li> <li>No Operation, do nothing</li> <li>Read Binary File</li> <li>Read PDF</li> <li>Rename Keys</li> <li>Respond to Webhook</li> <li>RSS Read</li> <li>Send Email</li> <li>Set</li> <li>Split In Batches</li> <li>Spreadsheet File</li> <li>SSE Trigger</li> <li>SSH</li> <li>Start</li> <li>Stop And Error</li> <li>Switch</li> <li>Wait</li> <li>Webhook</li> <li>Workflow Trigger</li> <li>Doc\u00b2 Trigger</li> <li>Write Binary File</li> <li>XML</li> </ul>","title":"Overview"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.activationTrigger/","tags":["Workflow\u00b2"],"text":"<p>The Activation Trigger node gets triggered when an event gets fired by Workflow\u00b2 or a workflow.</p>  <p>Warning</p> <p>The Activation Trigger node has been deprecated. It has been replaced by two new nodes - the n8n Trigger and the Workflow Trigger node. For more details, check out the entry in the breaking changes page.</p>   <p> Keep in mind</p> <p>If you want to use the Activation Trigger node for a workflow, add the node to the workflow. You don't have to create a separate workflow.</p>  <p>The Activation Trigger node gets triggered for the workflow that it gets added to. The Activation Trigger node can be used to trigger a workflow to notify the state of the workflow.</p>","title":"Activation Trigger"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.activationTrigger/#node-reference","tags":["Workflow\u00b2"],"text":"<ul> <li>Events<ul> <li>Activation: Run when the workflow gets activated</li> <li>Start: Run when Doc\u00b2 starts or restarts</li> <li>Update: Run when the workflow gets saved while it is active</li> </ul> </li> </ul>","title":"Node Reference"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.activationTrigger/#example-usage","tags":["Workflow\u00b2"],"text":"<p>This workflow allows you to receive a message on Mattermost when a workflow is updated. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Activation Trigger - Mattermost</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.activationTrigger/#1-activation-trigger-node","tags":["Workflow\u00b2"],"text":"<p>Open the workflow where you want to add the activation workflow. Add the Activation Trigger node to the workflow.</p> <p>The Activation Trigger node will trigger the workflow when the workflow gets updated.</p> <ol> <li>Select 'Update' from the Events dropdown list.</li> </ol> <p>In the screenshot below, you will notice that the node triggers the workflow when the workflow gets updated.</p> <p></p>","title":"1. Activation Trigger node"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.activationTrigger/#2-mattermost-node-post-message","tags":["Workflow\u00b2"],"text":"<p>This node will send a message in the <code>workflow</code> channel on Mattermost.</p> <ol> <li>First of all, you'll have to enter credentials for the Mattermost node. You can find out how to enter credentials for this node here.</li> <li>Select a channel from the Channel ID dropdown list.</li> <li> <p>Click on the gears icon next to the Message field click on Add Expression.</p> </li> <li> <p>Enter the following message in the Expression field: <code>The workflow {{$workflow.name}}, was updated.</code>. <code>$workflow.name</code> returns the name of the workflow.</p> </li> <li>Click on Execute Node to run the workflow.</li> </ol> <p>In the screenshot below, you will notice that the node sends a message to Mattermost.</p> <p></p>","title":"2. Mattermost node (post: message)"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.compression/","text":"<p>The Compression node is useful to compress and decompress files. You can either use the <code>gzip</code> or <code>zip</code> file format.</p>","title":"Compression"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.compression/#node-reference","text":"<ul> <li>Operations<ul> <li>Compress</li> <li>Decompress</li> </ul> </li> <li>Options<ul> <li>Binary Property field: This field allows you to specify the name of the binary property</li> <li>Output Prefix field: This field allows you to specify a prefix for the name of the file that gets generated. This field gets displayed for the 'Decompress' operation and the 'gzip' output format for the 'Compress' operation</li> <li>Output Format field: This field allows you to select an output format. This field is displayed when 'Compress' gets selected from the Operation dropdown list. The following are the available formats:<ul> <li>gzip</li> <li>zip</li> </ul> </li> <li>File Name field: This field allows you to specify a file name. This field is displayed when 'zip' gets selected from the Output Format dropdown list.</li> <li>Binary Property Output field: This field allows you to specify a name for the file that gets generated. This field is displayed when 'zip' gets selected from the Output Format dropdown list.</li> </ul> </li> </ul>","title":"Node Reference"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.compression/#example-usage","text":"<p>This workflow allows you to compress binary files to zip format and upload them to Dropbox. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Start - HTTP Request - Dropbox</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.compression/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.compression/#2-http-request-node-get","text":"<p>This example workflow uses the HTTP Request node to fetch an image from a URL. You can also use the Read Binary File node to read a file from the path you specify.</p> <ol> <li>Enter the URL of the image in the URL field. For example, <code>https://docs.n8n.io/assets/img/final-workflow.f380b957.png</code>.</li> <li>Select 'File' from the Response Format dropdown list.</li> <li>Enter <code>workflow_image</code> in the Binary Property field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the HTTP Request node fetches the image from the URL. This image gets passed on as binary data to the next node in the workflow.</p> <p></p>","title":"2. HTTP Request node (GET)"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.compression/#3-http-request1-node-get","text":"<p>This node fetches an image from a URL. You can also use the Read Binary File node to read a file from the path you specify.</p> <ol> <li>Enter the URL of the image in the URL field. For example, <code>https://n8n.io/n8n-logo.png</code>.</li> <li>Select 'File' from the Response Format dropdown list.</li> <li>Enter <code>logo</code> in the Binary Property field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the HTTP Request node fetches the image from the URL. This image gets passed on as binary data to the next node in the workflow.</p> <p></p>","title":"3. HTTP Request1 node (GET)"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.compression/#4-compression-node-compress","text":"<p>This node compresses the binary file that we received from the HTTP Request nodes in a zip file. If you want to compress them in <code>gzip</code> format, select that option instead.</p> <ol> <li>Select 'Compress' from the Operation dropdown list.</li> <li>Enter <code>logo,workflow_image</code> in the Binary Property field.</li> <li>Select 'zip' from the Output Format dropdown list.</li> <li>Enter <code>images.zip</code> in the File Name field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node compresses the files and generates <code>images.zip</code>.</p> <p></p>","title":"4. Compression node (compress)"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.compression/#5-dropbox-node-upload-file","text":"<p>This node will upload the compressed file to your Dropbox account.</p> <ol> <li>First of all, you'll have to enter credentials for the Dropbox node. You can find out how to do that here.</li> <li>Enter <code>/images.zip</code> in the File Path field.</li> <li>Toggle Binary Data to <code>true</code>. This option allows us to upload binary data from the previous node.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node uploads the compressed file that we generated in the previous node.</p> <p></p>","title":"5. Dropbox node (upload: file)"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.cron/","tags":["Workflow\u00b2","Cron","Node Reference","FAQs"],"text":"<p>The Cron node is useful to schedule the workflows to run periodically at fixed dates, times, or intervals. This works in a similar way to the cron software utility in Unix-like systems. This core node is a Trigger node.</p>  <p> Keep in mind</p> <ol> <li>If a workflow is using the Cron node as a trigger, make sure that you save and activate the workflow.</li> </ol>  <ol> <li>Make sure that the timezone is set correctly for the Doc\u00b2 instance (or the workflow).</li> </ol>","title":"Cron"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.cron/#node-reference","tags":["Workflow\u00b2","Cron","Node Reference","FAQs"],"text":"<p>You can configure the node by clicking on the Add Cron Time button under the Trigger Times section. There are a couple of different options available for the Mode field in the form of a dropdownlist.</p> <ul> <li>Mode<ul> <li>Every Minute</li> <li>Every Hour</li> <li>Every Day</li> <li>Every Week</li> <li>Every Month</li> <li>Every X</li> <li>Custom</li> </ul> </li> </ul> <p>The 'Every X' option allows you to specify the workflow to be triggered every x minutes or hours. You can specify x by entering a number in the Value field. The 'Custom' option allows you to enter a custom cron expression in the Cron Expression field.</p>","title":"Node Reference"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.cron/#faqs","tags":["Workflow\u00b2","Cron","Node Reference","FAQs"],"text":"","title":"FAQs"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.cron/#how-to-generate-a-custom-cron-expression","tags":["Workflow\u00b2","Cron","Node Reference","FAQs"],"text":"<p>To generate a Cron expression, you can use crontab guru. Paste the Cron expression that you generated using crontab guru in the Cron Expression field in Workflow\u00b2.</p>","title":"How to generate a custom Cron expression?"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.cron/#why-there-are-six-asterisks-in-the-cron-expression","tags":["Workflow\u00b2","Cron","Node Reference","FAQs"],"text":"<p>The sixth asterisk in the Cron Expression represents seconds. Setting this is optional. The node will execute even if you don't set the value for seconds.</p>    * * * * * *     second minute hour day week month    <p>If you want to trigger your workflow, for example, every day at 04:08:30, enter the following in the Cron Expression field. <pre><code>30 8 4 * * *\n</code></pre> </p> <p>If you want to trigger your workflow, for example, every day at 04:08, enter the following in the Cron Expression field. <pre><code>8 4 * * *\n</code></pre> </p>","title":"Why there are six asterisks (*) in the Cron Expression?"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.crypto/","text":"<p>The Crypto node is used to encrypt data in workflows.</p>","title":"Crypto"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.crypto/#node-reference","text":"<p>You can configure further options for each action by selecting the type of encryption and encoding to be used, in the Type and Encoding fields respectively.</p> <ul> <li>Action<ul> <li>Hash a text in a specified format</li> <li>Hmac a text in a specified format</li> <li>Sign a string using a private key</li> </ul> </li> <li>Type<ul> <li>MD5</li> <li>SHA256</li> <li>SHA384</li> <li>SHA512</li> </ul> </li> <li>Encoding<ul> <li>BASE64</li> <li>HEX</li> </ul> </li> </ul>","title":"Node Reference"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.crypto/#example-usage","text":"<p>This workflow allows you to encrypt data using the Crypto node. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - Crypto</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.crypto/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.crypto/#2-crypto-node","text":"<ol> <li>Enter the data that you want to encrypt in the Value field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>","title":"2. Crypto node"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.dateTime/","tags":["Workflow\u00b2","Date & Time"],"text":"<p>The Date &amp; Time node is used to manipulate date and time data and convert it to different formats.</p>  <p> Keep in mind</p> <p>Make sure that the timezone is set correctly for the Doc\u00b2 instance (or the workflow).</p>","title":"Date &amp; Time"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.dateTime/#node-reference","tags":["Workflow\u00b2","Date & Time"],"text":"<ul> <li>Action<ul> <li>Convert a date to a different format</li> </ul> </li> </ul> <p>You can specify the format that the date has to be converted to from the To Format dropdown list.</p> <ul> <li>To Format<ul> <li>MM/DD/YYYY</li> <li>YYYY/MM/DD</li> <li>MMMM DD YYYY</li> <li>MM-DD-YYYY</li> <li>YYYY-MM-DD</li> <li>Unix Timestamp</li> <li>Unix Ms Timestamp</li> </ul> </li> </ul> <p>You can also specify a custom format by setting the Custom Format toggle to 'On'.</p> <ul> <li>Options<ul> <li>From Format field: Allows you to specify the format of the input values. Refer to the FAQs to learn about the possible vaules.</li> <li>From Timezone field: Allows you to specify the timezone of the input values, for input timezones that are different from n8n's system clock.</li> <li>To Timezone field: Allows you to specify the timezone that the input values have to be converted to.</li> </ul> </li> </ul>","title":"Node Reference"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.dateTime/#example-usage","tags":["Workflow\u00b2","Date & Time"],"text":"<p>This workflow allows you to convert a date from one format to another using the Date &amp; Time node. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - Date &amp; Time</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.dateTime/#1-start-node","tags":["Workflow\u00b2","Date & Time"],"text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.dateTime/#2-date-time-node","tags":["Workflow\u00b2","Date & Time"],"text":"<ol> <li>Enter the date that you want to convert in the Value field.</li> <li>Click on the Add Option dropdown.</li> <li>Click on the From Format option, and enter the format of the input date.</li> <li>Select the format you want to convert it to from the To Format dropdown list.</li> <li>Click on Execute Node to run the workflow.</li> </ol>","title":"2. Date &amp; Time node"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.dateTime/#faqs","tags":["Workflow\u00b2","Date & Time"],"text":"","title":"FAQs"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.dateTime/#what-values-can-i-use-in-the-from-format-field","tags":["Workflow\u00b2","Date & Time"],"text":"<p>You can use the following values in the From Format field:</p>    Input Example Description     X 1616108400 Unix timestamp   x 1616108400000 Unix ms timestamp   DD-MM-YYYY 19-03-2021 Date, month, and year separated by <code>-</code>   DD/MM/YYYY 19/03/2021 Date, month, and year separated by <code>/</code>   DD.MM.YYYY 19.03.2021 Date, month, and year separated by <code>.</code>   DD.MM.YYYY HHss 19.03.2021 08:00:00 Date, month, year, hours, minutes, and seconds   MM/DD/YYYY 03/19/2021 Month, date, and year separated by <code>/</code>   MM-DD-YYYY 03-19-2021 Month, date, and year separated by <code>-</code>   MM.DD.YYYY 03.19.2021 Month, date, and year separated by <code>.</code>   MM/DD/YYYY HHss 03/19/2021 08:00:00 Month, date, year, hours, minutes, and seconds   YYYY/MM/DD 2021/03/19 Year, month, and date separated by <code>/</code>   YYYY-MM-DD 2021-03-19 Year, month, and date separated by <code>-</code>   YYYY.MM.DD 2021.03.19 Year, month, and date separated by <code>.</code>   YYYY/MM/DD HHss 2021/03/19 08:00:00 Year, month, date, hours, minutes, and seconds   MMMM DD YYYY March 03 2021 Month, date, and year   MMMM DD YYYY HHss March 03 2021 08:00:00 Month, date, year, hours, minutes, and seconds   DD MMMM YYYY 03 March 2021 Date, month, and year   DD MMMM YYYY HHss 03 March 2021 08:00:00 Date, month, year, hours, minutes, and seconds","title":"What values can I use in the From Format field?"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.editImage/","text":"<p>The Edit Image node is used to manipulate and edit images.</p>  <p> Keep in mind</p> <ol> <li>You will need to use an additional node such as the Read Binary File node or the HTTP Request node to pass the image file as a data property to the Edit Image node.</li> </ol>","title":"Edit Image"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.editImage/#node-reference","text":"<ul> <li>Operations<ul> <li>Add a blur to the image to reduce sharpness</li> <li>Add a border to the image</li> <li>Create a new image</li> <li>Crop the image</li> <li>Composite an image on top of another image</li> <li>Draw on an image</li> <li>Get information about the image</li> <li>Rotate the image</li> <li>Change the size of the image</li> <li>Shear image along the X or Y axis</li> <li>Add text to the image</li> </ul> </li> </ul> <p>You can also specify a file format using the Format field in the Add Option dropdown list.</p> <ul> <li>Options<ul> <li>File Name field: Allows you to specify the filename of the output file.</li> <li>Format field: Allows you to specify the image format of the output file:<ul> <li>BMP</li> <li>GIF</li> <li>JPEG</li> <li>PNG</li> <li>TIFF</li> </ul> </li> </ul> </li> </ul>","title":"Node Reference"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.editImage/#example-usage","text":"<p>This workflow allows you to add text to an image downloaded from the internet using the Edit Image node. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Start - HTTP Request - Edit Image</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.editImage/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.editImage/#2-http-request-node","text":"<ol> <li>Enter <code>https://docs.n8n.io/assets/img/final-workflow.f380b957.png</code> in the URL field.</li> <li>Select 'File' from the Response Format dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p></p>","title":"2. HTTP Request node"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.editImage/#3-edit-image-node","text":"<ol> <li>Select 'Text' from the Operation dropdown list.</li> <li>Enter <code>This is n8n</code>in the Text field.</li> <li>Enter 100 in the Font Size field.</li> <li>Enter 300 in the Position X field.</li> <li>Enter 500 in the Position Y field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p></p>","title":"3. Edit Image node"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.errorTrigger/","text":"<p>The Error Trigger node triggers a workflow when another workflow has an error. Once a workflow fails, this node gets details about the failed workflow and the errors. This triggers the error workflow.</p>  <p> Keep in mind</p> <ol> <li>If a workflow is using the Error Trigger node, you don't have to activate the workflow.</li> </ol>  <ol> <li>If you want to receive error messages for a workflow, make sure that you select the 'Error Workflow' in the Workflow Settings for the workflow.</li> <li>If a workflow is using the Error Trigger node, by default, the workflow will use itself as the Error Workflow.</li> <li>The Error Trigger node is designed to get triggered ONLY when the workflows execute automatically which means you will not be able to test this while running the workflows manually.</li> </ol>","title":"Error Trigger"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.errorTrigger/#example-usage","text":"<p>This workflow allows you to send an SMS when a workflow fails. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Twilio</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.errorTrigger/#1-error-trigger-node","text":"<p>This node will execute when an error occurs.</p>","title":"1. Error Trigger node"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.errorTrigger/#2-twilio-node-send-sms","text":"<ol> <li>First of all, you'll have to enter credentials for the Twilio node. You can find out how to do that here.</li> <li>Enter the Twilio phone number in the From field.</li> <li>Enter the receiver's phone number in the To field.</li> <li> <p>Click on the gears icon next to the Message field and click on Add Expression.</p> </li> <li> <p>Enter <code>Your workflow with ID: {{$node[\"Error Trigger\"].json[\"workflow\"][\"id\"]}} and name: {{$node[\"Error Trigger\"].json[\"workflow\"][\"name\"]}} failed to execute.</code> in the Expression field.</p> </li> <li>The node will execute when the Error Trigger node is triggered.</li> </ol>","title":"2. Twilio node (send: sms)"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.errorTrigger/#faqs","text":"","title":"FAQs"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.errorTrigger/#how-to-set-an-error-workflow-for-an-doc2-workflow","text":"<p>Let's say we want to get a notification every time Workflow A fails. Create a new workflow, Workflow B. Add an Error Trigger node and set Workflow B as the error workflow for Workflow A by following these steps. - Open Workflow A. - Click on Workflows in the left menu and select 'Settings' from the dropdown list. - Select Workflow B from the Error Workflow dropdown list. - Click on the Save button.</p>","title":"How to set an error workflow for an Doc\u00b2 workflow?"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.errorTrigger/#can-we-send-a-custom-error-message","text":"<p>The Error Trigger node sends the actual error message thrown by the workflow. You can use this information as shown in the Example Usage section as well as send a custom error message like in the Twilio node. However, you cannot send a custom error message to the Error Trigger node.</p>","title":"Can we send a custom error message?"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.errorTrigger/#how-do-we-call-the-error-workflow-manually","text":"<p>There is currently no functionality to call an Error Workflow manually.</p>","title":"How do we call the Error Workflow manually?"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.executeCommand/","tags":["Workflow\u00b2"],"text":"<p>The Execute Command node is used to run shell commands on the host machine that runs Workflow\u00b2.</p>  <p> Keep in mind</p> <ol> <li>If you are running Doc\u00b2 in Docker, your command will run on the Doc\u00b2 container and not the Docker host.</li> </ol>  <ol> <li>This node will execute the command in the default shell of the host machine. For example, this will be PowerShell on Windows and zsh on macOS.</li> </ol>","title":"Execute Command"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.executeCommand/#node-reference","tags":["Workflow\u00b2"],"text":"<p>The Execute Command node has two properties: 1. Execute Once toggle: This is a boolean field that is used to specify whether you want the node to execute only once, or once for every item it receives an input. 2. Command field: This is a text field that is used to specify the command that will be executed on the host machine.</p>","title":"Node Reference"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.executeCommand/#example-usage","tags":["Workflow\u00b2"],"text":"<p>This workflow allows you to execute a command that returns the percentage of the hard disk that is full using the Execute Command node. The workflow is triggered twice a day, and if the memory usage exceeds 80%, it will send an SMS using the Twilio node. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Cron - Execute Command - IF - Twilio - No Operation, do nothing</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.executeCommand/#1-cron-node","tags":["Workflow\u00b2"],"text":"<p>The Cron node will trigger the workflow twice a day, at 9 AM and 4 PM.</p> <ol> <li>Click on Add Cron Time.</li> <li>Select 'Every Day' from the Mode dropdown list.</li> <li>Enter <code>9</code> in the Hour field.</li> <li>Click on Add Cron Time.</li> <li>Select 'Every Day' from the Mode dropdown list.</li> <li>Enter <code>16</code> in the Hour field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p></p>","title":"1. Cron node"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.executeCommand/#2-execute-command-node","tags":["Workflow\u00b2"],"text":"<p>The Execute Command node will execute the command and return the percentage of hard disk space used on the host machine.</p> <ol> <li>Enter <code>df -k / | tail -1 | awk '{print $5}'</code> in the Command field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node executes the command and returns the percentage of the hard disk that is full.</p> <p></p>","title":"2. Execute Command node"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.executeCommand/#3-if-node","tags":["Workflow\u00b2"],"text":"<p>This node will compare the percentage of the hard disk space used we got from the Execute Command node. If the usage of the memory exceeds 80%, it will return true otherwise false.</p> <ol> <li>Click on Add Condition and select 'Number' from the dropdown list.</li> <li>Click on the gears icon next to the Value 1 field and click on Add Expression.</li> <li>Enter <code>{{parseInt($node[\"Execute Command\"].json[\"stdout\"])}}</code> in the Expression field. The output from the Execute Command node is a string. The <code>parseInt()</code> method converts the string into an integer.</li> <li>Select 'Larger' from the Operation dropdown list.</li> <li>Set Value 2 to 80.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns an output when the percentage of hard disk space used exceeds 80%.</p> <p></p>","title":"3. IF node"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.executeCommand/#4-twilio-node-send-sms","tags":["Workflow\u00b2"],"text":"<p>This node sends an SMS to the specified phone number when the usage of hard disk space  exceeds 80%.</p> <ol> <li>Create a Twilio node connected to the 'true' output of the IF node.</li> <li>You'll have to enter credentials for the Twilio node. You can find out how to do that here.</li> <li>Enter the Twilio phone number in the From field.</li> <li>Enter the receiver's phone number in the To field.</li> <li> <p>Click on the gears icon next to the Message field and click on Add Expression.</p> </li> <li> <p>Enter <code>Your hard disk space is filling up fast! Your hard disk is {{$node[\"Execute Command\"].json[\"stdout\"]}} full.</code> in the Expression field.</p> </li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node sends an SMS with the percentage of the hard disk space used that we got from the Execute Command node.</p> <p></p>","title":"4. Twilio node (send: sms)"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.executeCommand/#5-noop-node","tags":["Workflow\u00b2"],"text":"<p>Adding this node here is optional, as the absence of this node won't make a difference to the functioning of the workflow.</p> <ol> <li>Create a NoOp node connected to the 'false' output of the IF node.</li> <li>Click on Execute Node to run the node.</li> </ol> <p></p>","title":"5. NoOp node"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.executeCommand/#faqs","tags":["Workflow\u00b2"],"text":"","title":"FAQs"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.executeCommand/#how-to-run-multiple-commands-in-the-execute-command-node","tags":["Workflow\u00b2"],"text":"<p>You can combine multiple commands using <code>&amp;&amp;</code>. For example, you can combine the change directory (cd) command with the list (ls) command using <code>&amp;&amp;</code>. <pre><code>cd bin &amp;&amp; ls\n</code></pre> </p> <p>To run multiple commands, you can also write the commands on separate lines. For example, you can write the list (ls) command on a new line after the change directory (cd) command. <pre><code>cd bin\nls\n</code></pre> </p>","title":"How to run multiple commands in the Execute Command node?"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.executeCommand/#how-to-run-the-curl-command-in-the-execute-command-node","tags":["Workflow\u00b2"],"text":"<p>You can also use the HTTP Request node to make a cURL request.</p> <p>If you want to run the curl command in the Execute Command node, you will have to build a Docker image based on the existing Doc\u00b2 image. The default Doc\u00b2 Docker image uses Alpine Linux. You will have to install the curl package. 1. Create a file named Dockerfile. 2. Add the below code snippet to the Dockerfile. <pre><code>FROM n8nio/n8n\nRUN apk --update add curl\n</code></pre>  3. In the same folder, execute the command below command to build the Docker image. <pre><code>docker build -t n8n-curl\n</code></pre>  4. Replace the Docker image you used before. For example, replace <code>n8nio/n8n</code> with <code>n8n-curl</code>. 5. Run the newly created Docker image, and you will now be able to execute ssh via the Execute Command-Node.</p>","title":"How to run the curl command in the Execute Command node?"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.executeWorkflow/","text":"<p>The Execute Workflow node is used to run a different workflow on the host machine that runs Workflow\u00b2.</p>","title":"Execute Workflow"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.executeWorkflow/#node-reference","text":"<p>The Execute Workflow node has two properties:</p> <ul> <li>Source: This field is used to specify from where to get the workflow's information.<ul> <li>Database</li> <li>Local File</li> <li>Parameter</li> <li>URL</li> </ul> </li> <li>Workflow: This field contains information about the workflow, such as the workflow ID, URL, or a file.</li> </ul>","title":"Node Reference"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.executeWorkflow/#example-usage","text":"<p>This workflow allows you to execute another workflow on the host machine using the Execute Workflow node. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Start - Execute Workflow</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.executeWorkflow/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.executeWorkflow/#2-execute-workflow-node","text":"<ol> <li>Enter the ID of the workflow that you want to execute in the Workflow ID field. You can find instructions on how to obtain the ID of a workflow in the FAQs below.</li> <li>Click on Execute Node to run the workflow.</li> </ol>","title":"2. Execute Workflow node"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.executeWorkflow/#faqs","text":"","title":"FAQs"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.executeWorkflow/#how-do-i-find-the-workflow-id","text":"<ol> <li>Open the workflow for which you want to get the workflow ID.</li> <li>Copy the number after <code>workflow/</code> in your URL and paste that in the Workflow ID field.</li> </ol>","title":"How do I find the workflow ID?"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.executeWorkflow/#how-does-data-get-passed-from-one-workflow-to-another","text":"<p>Let's say, that there's a Execute Workflow node in Workflow A. The Execute Workflow node calls another workflow, Workflow B. - The Execute Workflow node passes the data to the Start node of Workflow B. - The last node of Workflow B sends the data back to the Execute Workflow node in Workflow A.</p>","title":"How does data get passed from one workflow to another?"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.ftp/","tags":["Workflow\u00b2","FTP"],"text":"<p>The FTP node is useful to access and upload files to an FTP server.</p>  <p>\ud83d\udd11 Credential</p> <p>You can find authentication information for this node here.</p>","title":"FTP"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.ftp/#basic-operations","tags":["Workflow\u00b2","FTP"],"text":"<ul> <li>Delete a file</li> <li>Download a file</li> <li>List contents of a folder</li> <li>Rename/move content from old path to new path</li> <li>Upload a file</li> </ul> <p>Note: To attach a file for upload, you will need to use an additional node such as the Read Binary File node or the HTTP Request node to pass the file as a data property.</p>","title":"Basic Operations"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.ftp/#node-reference","tags":["Workflow\u00b2","FTP"],"text":"<ul> <li>Protocol: A dropdown list to choose between the FTP or SFTP protocol.</li> <li>Path: A field used to specify the remote path that you would like to connect to.</li> <li>Recursive: A toggle that can be used to include all subdirectories and files.</li> </ul>","title":"Node Reference"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.ftp/#example-usage","tags":["Workflow\u00b2","FTP"],"text":"<p>This workflow allows you to upload a file to an FTP server and get a list of all files using the FTP node. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Start - HTTP Request - FTP</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.ftp/#1-start-node","tags":["Workflow\u00b2","FTP"],"text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.ftp/#2-http-request-node","tags":["Workflow\u00b2","FTP"],"text":"<ol> <li>Enter the URL of the file you want to download in the URL field.</li> <li>Select File from the Response Format dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p></p>","title":"2. HTTP Request node"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.ftp/#3-ftp-node-ftp-upload","tags":["Workflow\u00b2","FTP"],"text":"<ol> <li>First of all, you'll have to enter credentials for the FTP node. You can find out how to do that here.</li> <li>Select Upload from the Operation dropdown list.</li> <li>Enter the path where you would like to upload the file in the Path field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p></p>","title":"3. FTP node (ftp: upload)"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.ftp/#4-ftp1-node-ftp-list","tags":["Workflow\u00b2","FTP"],"text":"<ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select List from the Operation dropdown list.</li> <li>Enter the path to the folder where you uploaded the file in the previous step in the Path field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p></p>","title":"4. FTP1 node (ftp: list)"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.function/","tags":["Workflow\u00b2","Function"],"text":"<p>Using the function node, you can:</p> <ul> <li>Transform data from other nodes</li> <li>Implement custom functionality</li> </ul>  <p>Function node and function item node</p> <p>Note that the Function node is different from the Function Item node. Refer to Data | Code to learn about the difference between the two.</p>  <p>The Function node supports promises. So instead of returning the items directly, it is also possible to return a promise which resolves accordingly.</p> <p>The Function node supports writing to your browser console using <code>console.log</code>, useful for debugging and troubleshooting your workflows.</p>","title":"Function"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.function/#data-structure","tags":["Workflow\u00b2","Function"],"text":"<p>In Doc\u00b2, all data passed between nodes is an array of objects. It has the following structure:</p> <pre><code>[\n    {\n        // For most data:\n        // Wrap each item in another object, with the key 'json'\n        \"json\": {\n            // Example data\n            \"jsonKeyName\": \"keyValue\",\n            \"anotherJsonKey\": {\n                \"lowerLevelJsonKey\": 1\n            }\n        },\n        // For binary data:\n        // Wrap each item in another object, with the key 'binary'\n        \"binary\": {\n            // Example data\n            \"binaryKeyName\": {\n                \"data\": \"....\", // Base64 encoded binary data (required)\n                \"mimeType\": \"image/png\", // Best practice to set if possible (optional)\n                \"fileExtension\": \"png\", // Best practice to set if possible (optional)\n                \"fileName\": \"example.png\", // Best practice to set if possible (optional)\n            }\n        }\n    },\n    ...\n]\n</code></pre>   <p>Skipping the 'json' key and array syntax</p> <p>From 0.166.0 onwards, Doc\u00b2 automatically adds the <code>json</code> key if it is missing. It also automatically wraps your items in an array (<code>[]</code>) if needed.</p>","title":"Data structure"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.function/#example-usage","tags":["Workflow\u00b2","Function"],"text":"<p>This workflow allows you to get today's date and day using the Function node. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - Function</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example usage"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.function/#1-start-node","tags":["Workflow\u00b2","Function"],"text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.function/#2-function-node","tags":["Workflow\u00b2","Function"],"text":"<ol> <li>Paste the following JavaScript code snippet in the Function field. <pre><code>var date = new Date().toISOString();\nvar day = new Date().getDay();\nconst weekday = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n\nitems[0].json.date_today = date;\nitems[0].json.day_today = weekday[day];\n\nreturn items;\n</code></pre> </li> <li>Click on Execute Node to run the workflow.</li> </ol>","title":"2. Function node"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.function/#node-reference","tags":["Workflow\u00b2","Function"],"text":"<p>You can also use the methods and variables mentioned in the Expressions page in the Function node.</p>","title":"Node reference"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.function/#variable-items","tags":["Workflow\u00b2","Function"],"text":"<p>It contains all the items that the node has received as an input.</p> <p>Information about how the data is structured can be found on this page about data structures.</p> <p>The data can be accessed and manipulated like this:</p> <pre><code>// Sets the JSON data property \"myFileName\" of the first item to the name of the\n// file which is set in the binary property \"image\" of the same item.\nitems[0].json.myFileName = items[0].binary.image.fileName;\n\nreturn items;\n</code></pre>  <p>This example creates 10 dummy items with the ids 0 to 9:</p> <pre><code>const newItems = [];\n\nfor (let i=0;i&lt;10;i++) {\n  newItems.push({\n    json: {\n      id: i\n    }\n  });\n}\n\nreturn newItems;\n</code></pre>","title":"Variable: items"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.function/#method-itemindex-number-runindex-number","tags":["Workflow\u00b2","Function"],"text":"<p>With <code>$item</code> it is possible to access the data of parent nodes. That can be the item data but also the parameters. It expects as input an index of the item the data should be returned for. This is needed because for each item the data returned can be different. This is probably straightforward for the item data itself but maybe less for data like parameters. The reason why it is also needed, is that they may contain an expression. Expressions get always executed of the context for an item. If that would not be the case, for example, the Email Send node not would be able to send multiple emails at once to different people. Instead, the same person would receive multiple emails.</p> <p>The index is 0 based. So <code>$item(0)</code> will return the first item, <code>$item(1)</code> the second one, and so on.</p> <p>By default the item of the last run of the node  will be returned. So if the referenced node ran 3x (its last runIndex is 2) and the current node runs the first time (its runIndex is 0) the data of runIndex 2 of the referenced node will be returned.</p> <p>For more information about what data can be accessed via <code>$node</code>, check out the <code>Variable: $node</code> section.</p> <p>Example:</p> <pre><code>// Returns the value of the JSON data property \"myNumber\" of Node \"Set\" (first item)\nconst myNumber = $item(0).$node[\"Set\"].json[\"myNumber\"];\n// Like above but data of the 6th item\nconst myNumber = $item(5).$node[\"Set\"].json[\"myNumber\"];\n\n// Returns the value of the parameter \"channel\" of Node \"Slack\".\n// If it contains an expression the value will be resolved with the\n// data of the first item.\nconst channel = $item(0).$node[\"Slack\"].parameter[\"channel\"];\n// Like above but resolved with the value of the 10th item.\nconst channel = $item(9).$node[\"Slack\"].parameter[\"channel\"];\n</code></pre>","title":"Method: $item(index: number, runIndex?: number)"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.function/#method-getworkflowstaticdatatype","tags":["Workflow\u00b2","Function"],"text":"<p>This gives access to the static workflow data. It is possible to save data directly with the workflow. This data should, however, be very small. A common use case is to for example to save a timestamp of the last item that got processed from an RSS-Feed or database. It will always return an object. Properties can then read, delete or set on that object. When the workflow execution succeeds, Doc\u00b2 will check automatically if the data has changed and will save it, if necessary.</p> <p>There are two types of static data. The \"global\" and the \"node\" one. Global static data is the same in the whole workflow. And every node in the workflow can access it. The node static data , however, is different for every node and only the node which set it can retrieve it again.</p> <p>Example:</p> <pre><code>// Get the global workflow static data\nconst staticData = getWorkflowStaticData('global');\n// Get the static data of the node\nconst staticData = getWorkflowStaticData('node');\n\n// Access its data\nconst lastExecution = staticData.lastExecution;\n\n// Update its data\nstaticData.lastExecution = new Date().getTime();\n\n// Delete data\ndelete staticData.lastExecution;\n</code></pre>  <p>It is important to know that the static data can not be read and written when testing via the UI. The data there will always be empty and the changes will not persist. Only when a workflow is active and it gets called by a Trigger or Webhook, the static data will be saved.</p>","title":"Method: getWorkflowStaticData(type)"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.function/#external-libraries","tags":["Workflow\u00b2","Function"],"text":"<p>You can import and use built-in and external npm modules in the Function node. To learn how to enable external moduels, refer the Configuration guide.</p>","title":"External libraries"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.function/#further-reading","tags":["Workflow\u00b2","Function"],"text":"","title":"Further reading"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.functionItem/","tags":["Workflow\u00b2","Function"],"text":"<p>The Function Item node is used to add custom snippets to JavaScript code that should be executed once for every item that it receives as the input.</p>  <p> Keep in mind</p> <p>Please note that the Function Item node is different from the Function node. Check out this page to learn about the difference between the two.</p>  <p>The Function Item node supports promises. So instead of returning the items directly, it is also possible to return a promise which resolves accordingly.</p> <p>It also provides the ability to write to your browser console using <code>console.log</code>, useful for debugging and troubleshooting your workflows.</p>","title":"Function Item"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.functionItem/#node-reference","tags":["Workflow\u00b2","Function"],"text":"<p>You can also use the methods and variables mentioned in the Expressions page in the Function Item node.</p>","title":"Node Reference"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.functionItem/#variable-item","tags":["Workflow\u00b2","Function"],"text":"<p>It contains the \"json\" data of the currently processed item.</p> <p>The data can be accessed and manipulated like this:</p> <pre><code>// Uses the data of an already existing key to create a new additional one\nitem.newIncrementedCounter = item.existingCounter + 1;\nreturn item;\n</code></pre>","title":"Variable: item"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.functionItem/#method-getbinarydata","tags":["Workflow\u00b2","Function"],"text":"<p>Returns all the binary data (all keys) of the item which gets currently processed. <pre><code>item.filename = getBinaryData().attachment_0.fileName;\nreturn item;\n</code></pre> </p>","title":"Method: getBinaryData()"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.functionItem/#method-setbinarydatabinarydata","tags":["Workflow\u00b2","Function"],"text":"<p>Sets all the binary data (all keys) of the item which gets currently processed.</p>","title":"Method: setBinaryData(binaryData)"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.functionItem/#method-getworkflowstaticdatatype","tags":["Workflow\u00b2","Function"],"text":"<p>This gives access to the static workflow data. It is possible to save data directly with the workflow. This data should, however, be very small. A common use case is to for example to save a timestamp of the last item that got processed from an RSS-Feed or database. It will always return an object. Properties can then read, delete or set on that object. When the workflow execution succeeds, Doc\u00b2 will check automatically if the data has changed and will save it, if necessary.</p> <p>There are two types of static data. The \"global\" and the \"node\" one. Global static data is the same in the whole workflow. And every node in the workflow can access it. The node static data, however, is different for every node and only the node which set it can retrieve it again.</p> <p>Note: The static data cannot be read and written when executing via manual executions. The data will always be empty, and the changes will not persist. The static data will only be saved when a workflow is active.</p>","title":"Method: getWorkflowStaticData(type)"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.functionItem/#example","tags":["Workflow\u00b2","Function"],"text":"<pre><code>// Get the global workflow static data\nconst staticData = getWorkflowStaticData('global');\n// Get the static data of the node\nconst staticData = getWorkflowStaticData('node');\n\n// Access its data\nconst lastExecution = staticData.lastExecution;\n\n// Update its data\nstaticData.lastExecution = new Date().getTime();\n\n// Delete data\ndelete staticData.lastExecution;\n</code></pre>","title":"Example"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.functionItem/#external-libraries","tags":["Workflow\u00b2","Function"],"text":"<p>You can import and use built-in and external npm modules in the Function Item node. To learn how to enable external moduels, refer the Configuration guide.</p>","title":"External libraries"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.git/","text":"<p>Git is a free and open-source distributed version control system designed to handle everything from small to large projects with speed and efficiency.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Git"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.git/#basic-operations","text":"<ul> <li>Add a file or folder to commit</li> <li>Add configuration property</li> <li>Clone a repository</li> <li>Commit files or folders to git</li> <li>Fetch from remote repository</li> <li>Return current configuration</li> <li>Return git commit history</li> <li>Pull from remote repository</li> <li>Push to remote repository</li> <li>Push Tags to remote repository</li> <li>Return status of current repository</li> <li>Create a new tag</li> <li>Set the user</li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.git/#example-usage","text":"<p>This workflow allows you to add, commit, and push changes to a git repository. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Start - Git</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.git/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.git/#2-git-node-add","text":"<p>This node will add the <code>README.md</code> file to the staging area. If you want to add a different file, enter the path of that file instead.</p> <ol> <li>Select 'Add' from the Operation dropdown list.</li> <li>Enter the repository path in the Repository Path field.</li> <li>Enter the file path in the Paths to Add field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node adds the <code>README.md</code> file to the staging area.</p> <p></p>","title":"2. Git node (Add)"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.git/#3-git1-node-commit","text":"<p>This node will commit all the changes that were added to the staging area by the previous node.</p> <ol> <li>Select 'Commit' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Repository Path field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Git &gt; Parameters &gt; repositoryPath. You can also add the following expression: <code>{{$node[\"Git\"].parameter[\"repositoryPath\"]}}</code>.</li> <li>Enter a commit message in the Message field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node creates a new commit.</p> <p></p>","title":"3. Git1 node (Commit)"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.git/#4-git2-node-log","text":"<p>This node will return the commit logs of your repository.</p> <ol> <li>Click on the gears icon next to the Repository Path field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Git &gt; Parameters &gt; repositoryPath. You can also add the following expression: <code>{{$node[\"Git\"].parameter[\"repositoryPath\"]}}</code>.</li> <li>Toggle Return All to <code>true</code>. This option will return all the logs.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node creates a new commit.</p> <p></p>","title":"4. Git2 node (Log)"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.git/#5-git3-node-push","text":"<p>This node will push the changes to a cloud repository.</p> <ol> <li>Select 'Push' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Repository Path field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Git &gt; Parameters &gt; repositoryPath. You can also add the following expression: <code>{{$node[\"Git\"].parameter[\"repositoryPath\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>Note: If you're not using SSH, you will have to create credentials to authenticate yourself. You also need to set an upstream branch to push the changes. This is required only once. You can set up an upstream branch by executing the command <code>git push -u origin master</code> from a terminal.</p> <p>In the screenshot below, you will notice that the node pushes the local changes to a cloud repository.</p> <p></p>","title":"5. Git3 node (Push)"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.graphql/","tags":["Workflow\u00b2"],"text":"<p>GraphQL is an open-source data query and manipulation language for APIs, and a runtime for fulfilling queries with existing data.</p>","title":"GraphQL"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.graphql/#basic-operations","tags":["Workflow\u00b2"],"text":"<ul> <li>Query a GraphQL endpoint</li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.graphql/#example-usage","tags":["Workflow\u00b2"],"text":"<p>This workflow allows you to get information about the five most recent SpaceX launches from spacex.land. You can also find the workflow on the website. This example usage workflow uses the following two nodes. - Start - GraphQL</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.graphql/#1-start-node","tags":["Workflow\u00b2"],"text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.graphql/#2-graphql-node","tags":["Workflow\u00b2"],"text":"<ol> <li>Enter <code>https://api.spacex.land/graphql/</code> in the Endpoint field.</li> <li>Select the 'JSON' option from the Request Format dropdown list.</li> <li>Enter the GraphQL query shown below in the Query field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>","title":"2. GraphQL node"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.graphql/#graphql-query","tags":["Workflow\u00b2"],"text":"<pre><code>{\n  launchesPast(limit: 5) {\n    mission_name\n    launch_date_local\n    launch_site {\n      site_name_long\n    }\n    links {\n      article_link\n      video_link\n    }\n    rocket {\n      rocket_name\n      first_stage {\n        cores {\n          flight\n          core {\n            reuse_count\n            status\n          }\n        }\n      }\n      second_stage {\n        payloads {\n          payload_type\n          payload_mass_kg\n          payload_mass_lbs\n        }\n      }\n    }\n    ships {\n      name\n      home_port\n      image\n    }\n  }\n}\n</code></pre>","title":"GraphQL query"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.htmlExtract/","text":"<p>The HTML Extract node is useful to extract the HTML content of a webpage.</p>","title":"HTML Extract"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.htmlExtract/#node-reference","text":"<ul> <li>Source Data: This field specifies if HTML should be read from binary or JSON data. In this dropdown list, there are two options.<ul> <li>Binary</li> <li>JSON</li> </ul> </li> <li>JSON Property: The name of the JSON property in which the HTML (from which to extract the data) can be found. This field is displayed when 'JSON' is selected in the Source Data field.</li> <li>Binary Property: The name of the binary property in which the HTML (from which to extract the data) can be found. This field is displayed when 'Binary' is selected in the Source Data field. The property can either contain a string or an array of strings.</li> <li>Extraction Values:<ul> <li>Key: The key under which the extracted value should be saved.</li> <li>CSS Selector: The CSS selector to use.</li> <li>Return Value: The kind of data that should be returned. In this dropdown list there are four options.<ul> <li>Attribute: Get an attribute value like 'class' from an element.<ul> <li>Attribute: The name of the attribute to return the value of.</li> </ul> </li> <li>HTML: Get the HTML that the element contains.</li> <li>Text: Get only the text content of the element.</li> <li>Value: Get the value of an input, select, or textarea.</li> </ul> </li> <li>Return Array: Returns the values as an array so that if multiple ones are found, they also get returned separately. If not set, all values will be returned as a single string.</li> </ul> </li> <li>Options:<ul> <li>Trim Values: Removes all spaces and newlines from the beginning and end of the values.</li> </ul> </li> </ul>","title":"Node Reference"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.htmlExtract/#example-usage","text":"<p>This workflow allows you to extract titles and URLs of all the articles from the  Hackernoon homepage using the HTML Extract node. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Start - HTTP Request - HTML Extract</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.htmlExtract/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.htmlExtract/#2-http-request-node-get","text":"<ol> <li>Enter <code>https://hackernoon.com</code> in the URL field.</li> <li>Select 'String' from the Response Format dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p></p>","title":"2. HTTP Request node (GET)"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.htmlExtract/#3-html-extract-node-json-data","text":"<ol> <li>Click on the Add Value button.</li> <li>Enter <code>item</code> in the Key field.</li> <li>Enter <code>h2</code> in the CSS Selector field.</li> <li>Select 'HTML' from the Return Value dropdown list.</li> <li>Toggle Return Array to true.</li> <li>Click on Execute Node to run the node.</li> </ol> <p></p>","title":"3. HTML Extract node (json: data)"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.htmlExtract/#4-html-extract1-node-json-item","text":"<ol> <li>Enter <code>item</code> in the JSON Property field.</li> <li>Click on the Add Value button.</li> <li>Enter <code>title</code> in the Key field.</li> <li>Enter <code>a</code> in the CSS Selector field.</li> <li>Click on the Add Value button.</li> <li>Enter <code>url</code> in the Key field.</li> <li>Enter <code>a</code> in the CSS Selector field.</li> <li>Select 'Attribute' from the Return Value dropdown list.</li> <li>Enter <code>href</code> in the Attribute field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p></p>","title":"4. HTML Extract1 node (json: item)"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.httpRequest/","text":"<p>The HTTP Request node is one of the most versatile nodes in Workflow\u00b2. It allows you to make HTTP requests which can be used to query data from apps and services.</p>  <p>\ud83d\udd11 Credential</p> <p>You can find authentication information for this node here.</p>","title":"HTTP Request"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.httpRequest/#node-reference","text":"<ul> <li>Authentication: Select the authentication method to use for the request from the following:<ul> <li>Basic Auth</li> <li>Digest Auth</li> <li>Header Auth</li> <li>OAuth1</li> <li>OAuth2</li> <li>None</li> </ul> </li> <li>Request Method: Select the method to be used for the request:<ul> <li>DELETE</li> <li>GET</li> <li>HEAD</li> <li>PATCH</li> <li>POST</li> <li>PUT</li> </ul> </li> <li>URL: This field is where the URL to request has to be entered.</li> <li>Ignore SSL Issues: This option can be used to download the response even if SSL validation is not possible.</li> <li>Response Format: Select the format in which the data gets returned from the URL. You can choose between File, JSON, and String.</li> <li>JSON/RAW Parameters: This option can be used to specify whether the body/query parameter should be set via the value-key pair UI or JSON/RAW.</li> <li>Options<ul> <li>Batch Interval: The time (in milliseconds) between each batch of requests. Set to <code>0</code> to disable.</li> <li>Batch Size: If set, input will be split in batches to throttle requests. Use <code>-1</code> to disable. <code>0</code> will be treated as <code>1</code>.</li> <li>Full Response: This option can be used to retrieve the full response instead of only the body from the URL.</li> <li>Follow Redirect: This option can be used to follow any redirections with a status code <code>3xx</code>.</li> <li>Ignore Response Code: This option can be used to let the node execute even when the HTTP status code is not 2xx.</li> <li>Proxy: This field is used to specify an HTTP proxy that you may want to use.</li> <li>Split Into Items: This option can be used to flatten the node output as a simple array. See the FAQ section to learn more.</li> <li>Timeout: The maximum time (in ms) to wait for a response header from the server before aborting the request.</li> <li>Use Querystring: Set this option to <code>true</code> if you need arrays to be serialized as <code>foo=bar&amp;foo=baz</code> instead of the default <code>foo[0]=bar&amp;foo[1]=baz</code>.</li> <li>Headers: This section is used to specify any optional HTTP request headers you may want to include with your request.</li> <li>Query Parameters: This section is used to specify any HTTP query parameters you may want to include with your request.</li> </ul> </li> </ul>","title":"Node Reference"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.httpRequest/#example-usage","text":"<p>This workflow allows you to GET a sample list of users from reqres.in, add a new user using a POST request, and update the user using a PATCH request. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Start - HTTP Request</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.httpRequest/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.httpRequest/#2-http-request-node-get","text":"<ol> <li>Enter <code>https://reqres.in/api/users</code> in the URL field.</li> <li>Click on Execute Node to run the workflow.</li> </ol> <p></p>","title":"2. HTTP Request node (GET)"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.httpRequest/#3-http-request1-node-post","text":"<ol> <li>Select 'POST' from the Request Method dropdown list.</li> <li>Enter <code>https://reqres.in/api/users</code> in the URL field.</li> <li>Click on the Add Parameter button in the Body Parameters section.</li> <li>Enter <code>name</code> in the Name field.</li> <li>Enter <code>Neo</code> in the Value field.</li> <li>Click on the Add Parameter button in the Body Parameters section.</li> <li>Enter <code>job</code> in the Name field.</li> <li>Enter <code>Programmer</code> in the Value field.</li> <li>Click on Execute Node to run the workflow.</li> </ol> <p></p>","title":"3. HTTP Request1 node (POST)"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.httpRequest/#4-http-request2-node-patch","text":"<ol> <li>Select 'PATCH' from the Request Method dropdown list.</li> <li>Enter <code>https://reqres.in/api/users/2</code> in the URL field.</li> <li>Click on the Add Parameter button in the Body Parameters section.</li> <li>Enter <code>name</code> in the Name field.</li> <li>Enter <code>Neo</code> in the Value field.</li> <li>Click on the Add Parameter button in the Body Parameters section.</li> <li>Enter <code>job</code> in the Name field.</li> <li>Enter <code>The Chosen One</code> in the Value field.</li> <li>Click on Execute Node to run the workflow.</li> </ol> <p></p>","title":"4. HTTP Request2 node (PATCH)"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.httpRequest/#faqs","text":"","title":"FAQs"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.httpRequest/#how-to-fetch-a-binary-file-from-a-url","text":"<ol> <li>Enter the URL of the file in the URL field. For example, you can enter <code>https://n8n.io/n8n-logo.png</code> to fetch the Doc\u00b2 logo.</li> <li>Select 'File' from the Response Format dropdown list.</li> <li>(Optional) Change the binary property value in the Binary Property field. Throughout the workflow, you can refer to the binary data with the value you set in this field.</li> <li>Click on Execute Node to run the node.</li> <li>After the node gets executed, click on the Binary tab.</li> <li>Click on the Show Binary Data button to view the file.</li> </ol>","title":"How to fetch a binary file from a URL?"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.httpRequest/#how-to-send-a-binary-file-to-an-api-endpoint","text":"<p>Depending on your use-case, you might want to send a binary file to an API endpoint. To do that, follow the steps mentioned below.</p> <ol> <li>Connect the HTTP Request node with a node that has previously fetched the binary file. This node can be an HTTP Request node, Read Binary File node, Google Drive node or any such node.</li> <li>Select 'POST' from the Request Method dropdown list (Note: Refer to the API documentation of your API to make sure that you have selected the correct HTTP request method).</li> <li>Enter the URL where you want to send the binary file in the URL field.</li> <li>Toggle JSON/RAW Parameters to <code>true</code>.</li> <li>Toggle Send Binary Data to <code>true</code>.</li> <li>Click on Add Option and select 'Body Content Type' from the dropdown list.</li> <li>Select 'Form-Data Multipart' from the Body Content Type dropdown list.</li> <li>If you are referring to the binary property with a different value, enter that value in the Binary Property field (name displayed in the binary tab after executing the previous node). Note: To set a name for the form field, separate the field name with a colon, example <code>sendKey:binaryProperty</code>. If you want to send multiple files, separate them with comma, example: <code>sendKey1:binaryProperty1,sendKey2:binaryProperty2</code></li> <li>Click on Execute Node to run the node.</li> </ol> <p>Refer to this example workflow.</p>","title":"How to send a binary file to an API endpoint?"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.httpRequest/#how-to-get-the-http-status-code-after-an-execution","text":"<ol> <li>Click on Add Option and select 'Full Response'.</li> <li>Toggle Full Response to <code>true</code>.</li> </ol> <p>When the node gets executed, you will receive the HTTP status code, the HTTP status message, and the header parameters.</p>","title":"How to get the HTTP status code after an execution?"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.httpRequest/#how-to-send-xml-data","text":"<ol> <li>Toggle JSON/RAW Parameters to <code>true</code>.</li> <li>Click on Add Option and select 'Body Content Type'.</li> <li>Select 'RAW/Custom' from the Body Content Type field.</li> <li>Enter the XML data in the Body field.</li> </ol>","title":"How to send XML data?"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.httpRequest/#when-to-use-the-split-into-items-parameter","text":"<p>Not all incoming data you receive will be properly structured to allow nodes to process each individual item.</p> <p>Typically you would need to use the Item List node to modify data structure. The HTTP Request node allows you to do this automatically by enabling the Split Into Items parameter.</p>","title":"When to use the Split Into Items parameter?"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.iCal/","text":"<p>The iCalendar node allows you to create event files that can be shared as an attachment.</p>","title":"iCalendar"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.iCal/#basic-operations","text":"<ul> <li>Create Event File</li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.iCal/#example-usage","text":"<p>This workflow allows you to create an event file and send it as an attachment via email. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Start - Send Email</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.iCal/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.iCal/#2-icalendar-node-createeventfile","text":"<p>This node will create an event file. We use this file as an attachment in the next node.</p> <ol> <li>Enter the event title in the Event Title field.</li> <li>Select the event start date and time in the Start field.</li> <li>Select the event end date and time in the End field.</li> <li>Select 'Get All' from the Operation dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node creates the event file.</p> <p></p>","title":"2. iCalendar node (createEventFile)"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.iCal/#3-send-email-node","text":"<p>This node will send the event file as an attachment.</p> <ol> <li>First of all, you'll have to enter credentials for the Send Email node. You can find out how to do that here.</li> <li>Enter the sender's email address in the From Email field.</li> <li>Enter the receiver's email address in the To Email field.</li> <li>Enter a subject in the Subject field.</li> <li>Enter the email content in the Text field.</li> <li>Enter <code>data</code> in the Attachments field. If you used a different name for the Binary Property, use that name instead. We add the name of the Binary Property and not the file name in the Attachments field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node sends an email with the event file as an attachment.</p> <p></p>","title":"3. Send Email node"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.if/","text":"<p>The IF node is used to split a workflow conditionally based on comparison operations.</p>","title":"IF"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.if/#node-reference","text":"<p>You can add comparison conditions using the Add Condition dropdown. Conditions can be created based on the data type, the available comparison operations vary for each data type.</p> <p>Boolean - Equal - Not Equal</p> <p>Number - Smaller - Smaller Equal - Equal - Not Equal - Larger - Larger Equal - Is Empty</p> <p>String - Contains - Equal - Not Contains - Not Equal - Regex - Is Empty</p> <p>You can choose to split a workflow when any of the specified conditions are met, or only when all the specified conditions are met using the options in the Combine dropdown list.</p>","title":"Node Reference"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.if/#example-usage","text":"<p>This workflow executes two different Set nodes based on the output given by an IF node. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Start - Function - IF - Set</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.if/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.if/#2-function-node","text":"<ol> <li>Enter the following code in the Function field. <pre><code>return [\n  {\n    json: {\n      id: 0,\n    }\n  },\n  {\n    json: {\n      id: 1,\n    }\n  }\n];\n</code></pre> </li> <li>Click on Execute Node to run the workflow.</li> </ol> <p></p>","title":"2. Function node"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.if/#3-if-node","text":"<ol> <li>Click on the Add Condition button and select 'Number' from the dropdown list.</li> <li>Click on the gears icon next to the Value 1 field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Function &gt; Output Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$node[\"Function\"].json[\"id\"]}}</code>.</li> <li>From the Operation dropdown list, select 'Equal'.</li> <li>Click on Execute Node to run the workflow.</li> </ol> <p></p>","title":"3. IF node"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.if/#4-set-node-for-true-condition","text":"<ol> <li>Create a Set node connected to the 'true' output of the IF node.</li> <li>Click on the Add Value button and select 'String' from the dropdown list.</li> <li>Enter <code>name</code> in the Name field.</li> <li>Enter <code>n8n</code> in the Value field.</li> <li>Click on Execute Node to run the workflow.</li> </ol> <p>Note: Notice that only the id with the value 0 made its way to this Set node.</p> <p></p>","title":"4. Set node (for 'true' condition)"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.if/#5-set1-node-for-false-condition","text":"<ol> <li>Create a Set node connected to the 'false' output of the IF node.</li> <li>Click on the Add Value button and select 'String' from the dropdown list.</li> <li>Enter <code>name</code> in the Name field.</li> <li>Enter <code>nodemation</code> in the Value field.</li> <li>Click on Execute Node to run the workflow.</li> </ol> <p>Note: Notice that only the id with the value 1 made its way to this Set node.</p> <p></p>","title":"5. Set1 node (for 'false' condition)"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.imapEmail/","text":"<p>The IMAP Email node is used to receive emails via an IMAP email server. This node is a trigger node.</p>  <p>\ud83d\udd11 Credential</p> <p>You can find authentication information for this node here.</p>","title":"IMAP Email"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.imapEmail/#basic-operations","text":"<ul> <li>Receive an email</li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.imapEmail/#node-reference","text":"<ul> <li>Mailbox Name field: The mailbox from which you want to receive emails.</li> <li>Action field: Used to specify whether or not an email should be marked as read when Doc\u00b2 receives it.</li> <li>Download Attachment field: Used to specify whether or not you want to download any attachments received with the emails.</li> </ul>","title":"Node Reference"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.imapEmail/#example-usage","text":"<p>This workflow allows you to receive an email using the IMAP Email node. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - IMAP Email</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.imapEmail/#1-imap-email-node","text":"<ol> <li>First of all, you'll have to enter credentials for the IMAP Email node. You can find out how to do that here.</li> <li>Enter the name of the mailbox from which you want to receive emails in the Mailbox Name field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>","title":"1. IMAP Email node"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.interval/","text":"<p>The Interval node is used to trigger the workflow to run in regular intervals of time. This node is a Trigger node.</p>  <p> Keep in mind</p> <p>If a workflow is using the Interval node as a trigger, make sure that you save and activate the workflow.</p>  <p>The Interval node has two fields: 1. Interval field: This is a numerical field where you can specify the interval after which the workflow should get triggered again. 2. Unit field: This is a dropdown list which allows you to select a unit for the value that was provided for the Interval field. This field offers the following options for its dropdown list:     - Seconds     - Minutes     - Hours</p> <p></p>","title":"Interval"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.itemLists/","text":"<p>The Item Lists node simplifies working with returned data that contain lists (arrays), enabling you to easily modify the structure for further processing without the need to use Function nodes and write custom JavaScript.</p>","title":"Item Lists"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.itemLists/#operations","text":"<p>The Item Lists node enables you to perform the following operations:</p> <ul> <li>Split Out Items: Create separate items from a list of data within an item.</li> <li>Aggregate Items: Merge multiple items into a single new item.</li> <li>Remove Duplicates: Remove extraneous items.</li> <li>Sort: Change the ordering of items.</li> <li>Limit: Remove items beyond a defined maximum number.</li> </ul>  <p>Usually, you shouldn't use expressions for fields that expect a <code>key</code> value (for example, Field to Split Out). Expressions usually return values, not keys.</p>","title":"Operations"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.itemLists/#split-out-items","text":"<p>This operation is useful if your data contains a list of items, for example a list of customers, and you want to split them so that you have an item for each customer.</p> <p></p> <p>When using the Split Out Items operation, configure the following parameters and options:</p> <ul> <li>Field to Split Out: The field containing the list you want to separate out into individual items (e.g. <code>Name</code> in the example here). Must be plaintext and not an expression.</li> <li>Include: Select if any other fields from the input data should be kept with each new individual item. You can select:<ul> <li>No Other Fields</li> <li>All Other Fields</li> <li>Selected Other Fields: When selected, a Fields to Include field is displayed. Enter a comma separated list of desired fields.</li> </ul> </li> <li>Disable Dot Notation: When disabled, child fields (in the format <code>parent.child</code>) cannot be referenced.</li> <li>Destination Field Name: Optionally set the field name under which to put the new split contents.</li> </ul>","title":"Split Out Items"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.itemLists/#aggregate-items","text":"<p>The Aggregate Items operations is useful when you want to take many separate items, or just particular portions of them, and group them together into individual items. For example, the image below shows customer names and email addresses being grouped into individual items from a series of individual customer records that contained many other details.</p> <p></p> <p>When using the Aggregate Items operation, configure the following parameters and options:</p> <ul> <li>Field To Aggregate: The name of the field in the input data to be aggregated together.</li> <li>Rename Field: Enable this toggle to enter a field name for the aggregated output data. When aggregating multiple fields you must provide new output field names, multiple fields cannot be left undefined.</li> <li>Output Field Name: Displayed only when Rename Field is enabled. The field name for the aggregated output data.</li> <li>Disable Dot Notation: When disabled, child fields (in the format <code>parent.child</code>) cannot be referenced.</li> <li>Preserve Aggregated Lists: If enabled, fields to aggregate that are lists will output a list of lists (rather than being merged into a single list).</li> </ul>","title":"Aggregate Items"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.itemLists/#remove-duplicates","text":"<p>There are many situations where you can end up with duplicate data, a user creating multiple accounts, a customer submitting the same order multiple time, etc. When working with large datasets it becomes more difficult to easily spot and remove these items. </p> <p>The Remove Duplicates operation allows you to identify those items that are identical across all fields or only a desired subset of fields.</p> <p></p> <p>When using the Remove Duplicates operation, configure the following parameters and options:</p> <ul> <li>Compare: Provide which fields of the input data should be compared to check if they are the same. The following options are available:</li> <li>All Fields: Compares all fields of the input data.</li> <li>All Fields Except: Enter which input data fields should be excluded from the comparison. Multiple values can be provided separated by commas.</li> <li>Selected Fields: Enter which input data fields should be included in the comparison. Multiple values can be provided separated by commas.</li> <li>Disable Dot Notation: When disabled, child fields (in the format <code>parent.child</code>) cannot be referenced.</li> </ul>","title":"Remove Duplicates"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.itemLists/#sort","text":"<p>The Sort operation allows you to organize lists of in a desired ordering, or generate a random selection if desired (i.e. assign tasks to users randomly).</p>  <p> Keep in mind</p> <p>The Sort operation uses the default JavaScript operation where the elements to be sorted are converted into strings and their values compared. See here to learn more.</p>  <p></p> <p>When using the Sort operation, configure the following parameters and options:</p> <ul> <li>Type: Use the dropdown to select how you want to input the sorting. The following options are available:</li> <li>Simple: When you selected, you can use the Add Field To Sort By button to input the desired fields, and select whether Ascending or Descending* order is desired.</li> <li>Random: Select to create a random order in the list.</li> <li>Code: When selected, displays a code input field where you can enter custom JavaScript code to perform the sort operation.</li> </ul>","title":"Sort"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.itemLists/#limit","text":"<p>If you want to keep and process only a specific number of items from your incoming data, the Limit operation allows you to select the desired number of items to keep and whether they should be taken from the beginning or end of the data (e.g. take the 5 highest priority tickets, the oldest order, etc.).</p> <p></p> <p>When using the Limit operation, configure the following parameters and options:</p> <ul> <li>Max Items: Enter the maximum number of items that should be kept. If the input data contains more than this value, items will be removed.</li> <li>Keep: When items must be removed, select if the input items at the beginning or end are kept.</li> </ul>","title":"Limit"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.localFileTrigger/","text":"<p>The Local File Trigger node starts a workflow when changes on the file system are detected. These changes involve a file or folder geting added, changed or deleted.</p>","title":"Local File Trigger"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.localFileTrigger/#node-reference","text":"<ul> <li>Trigger On:<ul> <li>Changes to a Specifc File: Triggers when the specified file is changed</li> <li>Changes Involving a Specific Folder: Triggers when the a change in the selected folder occurs</li> </ul> </li> <li>Additional Fields:<ul> <li>File to Watch: The path to the file to watch. This field is shown when 'Trigger On' is set to 'Changes to a Specifc File'.</li> <li>Folder to Watch: The path of the folder to watch. This field is shown when 'Trigger On' is set to 'Changes Involving a Specific Folder'.</li> <li>Watch for: The type of change to watch for. This field is shown when 'Trigger On' is set to 'Changes Involving a Specific Folder'.</li> <li>Options:<ul> <li>Include Linked Files/Folders: Also watch for changes to linked files or folders.</li> <li>Ignore: Files or paths to ignore. The whole path is tested, not just the filename. Supports the Anymatch syntax.</li> <li>Max Folder Depth: How deep into the folder structure to watch for changes.</li> </ul> </li> </ul> </li> </ul>","title":"Node Reference"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.merge/","text":"<p>The Merge node is useful to merge data of multiple streams, once data of both streams is available.</p>","title":"Merge"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.merge/#node-reference","text":"","title":"Node Reference"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.merge/#mode","text":"<p> Keep in mind</p> <p>The items passed into Input 1 of the Merge node will take precedence. For example, if 5 items are received in Input 1 and 10 items are received in Input 2, the Merge node will only process 5 items. The remaining 5 items from Input 2 will not be processed.</p>  <p>You can specify how data of branches should be merged. The following options are available:</p> <ul> <li>Append: Combines data of both inputs. The output will contain items of input 1 and input 2.</li> <li>Keep Key Matches: Keeps data of input 1 if it finds a match with data of input 2.</li> <li>Merge By Index: Merges data of both the inputs. The output will contain the data of input 1 merged with the data of input 2. The merge occurs based on the index of the items. For example, the first item of input 1 will be merged with the first item of input 2.</li> <li>Merge By Key: Merges data of both the inputs. The output will contain the data of input 1 merged with the data of input 2. The merge occurs depending on a defined key.</li> <li>Multiples: Merges each value of one input with each value of the other input. The output will contain (m*n) items where (m) and (n) are lengths of the inputs.</li> <li>Pass-through: Passes through the data of one input. The output will contain items of the defined input.</li> <li>Remove Key Matches: Keeps the data of input 1 if it does not find a match with the data of input 2.</li> <li>Wait: Waits till the data of both the inputs is available. It will then output a single empty item.</li> </ul>","title":"Mode"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.merge/#additional-fields","text":"<ul> <li>Property Input 1: The name of the property which decides which items of input 1 to merge. This field is displayed when 'Keep Key Matches', 'Merge By Key', or 'Remove Key Matches' is selected in the Mode dropdown list.</li> <li>Property Input 2: The name of the property which decides which items of input 2 to merge. This field is displayed when 'Keep Key Matches', 'Merge By Key', or 'Remove Key Matches' is selected in the Mode dropdown list.</li> <li>Join: Use this to specify how many items the output should contain if inputs contain different amount of items. This field is displayed when 'Merge By Index' is selected in the Mode dropdown list. You can select from the following options.<ul> <li>Inner Join: Merges as many items as both the inputs contains. For example, if input 1 contains 3 items and input 2 contains 3 items, the output will contain 3 items.</li> <li>Left Join: Merges as many items as the first input contains. For example, if input 1 contains 3 items and input 2 contains 5 items, the output will contain 3 items.</li> <li>Outer Join: Merges as many items as input contains with most items. For example, if input 1 contains 3 items and input 2 contains 5 items, the output will contain 5 items.</li> </ul> </li> <li>Overwrite: Select when to overwrite the values from Input1 with values from Input 2. This field is displayed when 'Merge By Key' is selected from the Mode dropdown list. You can select from the following options.<ul> <li>Always: Always overwrites everything.</li> <li>If Blank: Overwrites only values of 'null', 'undefined' or the empty strings.</li> <li>If Missing: Only adds values which do not exist yet.</li> </ul> </li> <li>Output Data: Defines which input data should be used as the output of the node. This field is displayed when 'Pass-through' is selected from the Mode dropdown list. You can select from the following options.<ul> <li>Input 1</li> <li>Input 2</li> </ul> </li> </ul>","title":"Additional Fields"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.merge/#example-usage","text":"<p>This workflow allows you to merge greetings for the users based on their associated language using the Merge node. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Start - Funtion - Merge</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.merge/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.merge/#2-function-node","text":"<ol> <li>Paste the following JavaScript code snippet in the Function field. <pre><code>return [\n  {\n    json: {\n      name: 'Stefan',\n      language: 'de',\n    }\n  },\n  {\n    json: {\n      name: 'Jim',\n      language: 'en',\n    }\n  },\n  {\n    json: {\n      name: 'Hans',\n      language: 'de',\n    }\n  }\n];\n</code></pre> </li> <li>Click on Execute Node to run the node.</li> </ol> <p></p>","title":"2. Function node"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.merge/#3-function1-node","text":"<ol> <li>Paste the following JavaScript code snippet in the Function field. <pre><code>return [\n  {\n    json: {\n      greeting: 'Hallo',\n      language: 'de',\n    }\n  },\n  {\n    json: {\n      greeting: 'Hello',\n      language: 'en',\n    }\n  }\n];\n</code></pre> </li> <li>Click on Execute Node to run the node.</li> </ol> <p></p>","title":"3. Function1 node"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.merge/#4-merge-node-mergebykey","text":"<ol> <li>Select 'Merge By Key' from the Mode dropdown list.</li> <li>Enter <code>language</code> in the Property Input 1 field.</li> <li>Enter <code>language</code> in the Property Input 2 field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p></p>","title":"4. Merge node (mergeByKey)"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.moveBinaryData/","text":"<p>The Move Binary Data node is useful to move data between binary and JSON properties.</p>  <p> Hint</p> <p>If you need to convert an entire CSV file to JSON, use the Spreadsheet File node.</p>","title":"Move Binary Data"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.moveBinaryData/#node-reference","text":"<ul> <li>Mode: This field specifies from where and to the data should be moved.<ul> <li>Binary to JSON</li> <li>JSON to Binary</li> </ul> </li> <li>Set all Data: If set to active, all JSON data is replaced with the data retrieved from binary key. If it is not set to active, the data will be written to a single key. This field is displayed when 'Binary to JSON' is selected from the Mode dropdown list.</li> <li>Source Key: The name of the binary key to get data from. It is also possible to define deep keys by using dot-notation. For example, \"level1.level2.currentKey\". This field is displayed when 'Binary to JSON' is selected from the Mode dropdown list.</li> <li>Destination Key: The name the JSON key to copy data to. It is also possible to define deep keys by using dot-notation. For example, \"level1.level2.newKey\". This field is displayed when 'Binary to JSON' is selected from the Mode dropdown list.</li> <li>Convert all Data: If set to active all JSON data will be converted to binary. If it is not set to active only the data with one key will be converted. This field is displayed when 'JSON to Binary' is selected from the Mode dropdown list.</li> <li> <p>Destination Key: The name of the binary key to copy data to. It is also possible to define deep keys by using dot-notation. For example, \"level1.level2.newKey\". This field is displayed when 'JSON to Binary' is selected from the Mode dropdown list.</p> </li> <li> <p>Options</p> <ul> <li>Keep Source: Keep the source key. By default it gets deleted.</li> <li>Encoding: Set the encoding of the data stream.</li> <li>The following are the options when 'Binary to JSON' is selected from the Mode dropdown list.<ul> <li>JSON Parse: Run JSON parse on the data to get proper object data. This field is displayed when Set all Data is set to 'false'.</li> <li>Keep As Base64: Keeps the binary data as base64 string. This field is displayed when Set all Data is set to 'false'.</li> <li>Strip BOM: Strip the byte order mark (BOM) from the string. This field is displayed when Encoding is selected.</li> </ul> </li> <li>The following are the options when 'JSON to Binary' is selected from the Mode dropdown list.<ul> <li>Add BOM: Add the byte order mark (BOM) to the string. This field is displayed when Encoding is selected.</li> <li>File Name: The file name to set.</li> <li>Mime Type: The mime-type to set. By default the JSON mime-type will be set.</li> <li>Use Raw Data: Use data as is and do not stringify it.</li> <li>Data is Base64: Keeps the binary data as base64 string. This field is displayed when Convert all Data is set to 'false'.</li> </ul> </li> </ul> </li> </ul>","title":"Node Reference"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.moveBinaryData/#example-usage","text":"<p>This workflow allows you to store the JSON data received from the CocktailDB API to your machine. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Start - HTTP Request - Write Binary Data</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.moveBinaryData/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.moveBinaryData/#2-http-request-node-get","text":"<ol> <li>Enter <code>https://www.thecocktaildb.com/api/json/v1/1/random.php</code> in the URL field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p></p>","title":"2. HTTP Request node (GET)"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.moveBinaryData/#3-move-binary-data-node-json-to-binary","text":"<ol> <li>Select 'JSON to Binary' from the Mode dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p></p>","title":"3. Move Binary Data node (JSON to Binary)"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.moveBinaryData/#4-write-binary-file-node","text":"<ol> <li>Enter the file name in the File Name field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p></p>","title":"4. Write Binary File node"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.noOp/","text":"<p>The No Operation, do nothing node is used when you don't want to perform any operations. The purpose of this node is to make the workflow easier to read and understand where the flow of data stops. This can sometimes help others with a better understanding of the workflow, visually.</p>","title":"No Operation, do nothing"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.readBinaryFile/","text":"<p>The Read Binary File node is used to read a file from the host machine that runs Workflow\u00b2.</p>  <p> Keep in mind</p> <ol> <li>If you are running Doc\u00b2 in Docker, your command will run on the Doc\u00b2 container and not the Docker host.</li> </ol>  <ol> <li>This node will look for files relative to the Doc\u00b2 install path. It is recommended to use absolute file paths to prevent any errors.</li> </ol>","title":"Read Binary File"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.readBinaryFile/#node-reference","text":"<ol> <li>File Path field: This field specifies the path to the file.</li> <li>Property Name field: Name of the binary property to which to write the data of the read file.</li> </ol>","title":"Node Reference"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.readBinaryFile/#example-usage","text":"<p>This workflow allows you to read a file from the host machine using the Read Binary File node. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - Read Binary File</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.readBinaryFile/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.readBinaryFile/#2-read-binary-file-node","text":"<ol> <li>Enter the path to the file you want to read in the File Path field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>","title":"2. Read Binary File node"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.readBinaryFiles/","tags":["Workflow\u00b2","Read Binary Files"],"text":"<p>The Read Binary Files node is used to read multiple files from the host machine that runs Workflow\u00b2.</p>  <p> Keep in mind</p> <ol> <li>If you are running Workflow\u00b2 in Docker, your command will run on the Doc\u00b2 container and not the Docker host.</li> </ol>  <ol> <li>This node will look for files relative to the Doc\u00b2 install path. It is recommended to use absolute file paths to prevent any errors.</li> </ol>","title":"Read Binary Files"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.readBinaryFiles/#node-reference","tags":["Workflow\u00b2","Read Binary Files"],"text":"<ol> <li>File Selector field: This is a field that is used to specify the type of files to be read. For example, <code>*.jpg</code>.</li> <li>Property Name field: Name of the binary property to which to write the data of the read files.</li> </ol> <p>It is also possible to select files from a certain directory, by specifying the path in the File Selector field. For example, <code>/data/folder/*.jpg</code>.</p>","title":"Node Reference"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.readBinaryFiles/#example-usage","tags":["Workflow\u00b2","Read Binary Files"],"text":"<p>This workflow allows you to read multiple files from the host machine using the Read Binary Files node. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - Read Binary Files</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.readBinaryFiles/#1-start-node","tags":["Workflow\u00b2","Read Binary Files"],"text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.readBinaryFiles/#2-read-binary-files-node","tags":["Workflow\u00b2","Read Binary Files"],"text":"<ol> <li>Enter the type of files you want to read in the File Selector field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>","title":"2. Read Binary Files node"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.readPDF/","tags":["Workflow\u00b2","Read PDF"],"text":"<p>The Read PDF node is used to read data from PDF documents and extract its content as text.</p>  <p> Keep in mind</p> <p>You will need to use an additional node such as the Read Binary File node or the HTTP Request node to pass the image file as a data property to the Read PDF node.</p>","title":"Read PDF"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.readPDF/#node-reference","tags":["Workflow\u00b2","Read PDF"],"text":"<p>The Read PDF node has one property:</p> <ol> <li>Binary Property field: This field specifies the name of the data property used to read the PDF file in Workflow\u00b2.</li> </ol>","title":"Node Reference"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.readPDF/#example-usage","tags":["Workflow\u00b2","Read PDF"],"text":"<p>This workflow allows you to read a PDF file using the Read PDF node. You can also find the workflow on the website. This example usage workflow would use the following three nodes. - Start - Read Binary File - PDF Read</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.readPDF/#1-start-node","tags":["Workflow\u00b2","Read PDF"],"text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.readPDF/#2-read-binary-file","tags":["Workflow\u00b2","Read PDF"],"text":"<ol> <li>Enter the path to the PDF file you want to read in the File Path field.</li> </ol>","title":"2. Read Binary File"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.readPDF/#3-read-pdf-node","tags":["Workflow\u00b2","Read PDF"],"text":"<ol> <li>Enter the Property Name you used in the previous node in the Binary Property field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>","title":"3. Read PDF node"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.renameKeys/","tags":["Workflow\u00b2","Rename Keys"],"text":"<p>The Rename Keys node is used to rename the keys of a key-value pair in Workflow\u00b2.</p>","title":"Rename Keys"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.renameKeys/#node-reference","tags":["Workflow\u00b2","Rename Keys"],"text":"<p>You can rename one or multiple keys using the Rename Keys node. Click on the Add new key button to rename a key.</p> <p>There are two properties in the Rename Keys node.</p> <ul> <li>Current Key Name field: The current name of the key that you would like to rename.</li> <li>New Key Name field: The new name that you would like to assign to the key.</li> </ul>","title":"Node Reference"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.renameKeys/#example-usage","tags":["Workflow\u00b2","Rename Keys"],"text":"<p>This workflow allows you to rename a key using the Rename Keys node. You can also find the workflow on the website. This example usage workflow would use the following three nodes. - Start - Set - Rename Keys</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.renameKeys/#1-start-node","tags":["Workflow\u00b2","Rename Keys"],"text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.renameKeys/#2-set-node","tags":["Workflow\u00b2","Rename Keys"],"text":"<ol> <li>Click on the Add Value button and select the 'String' option from the dropdown list.</li> <li>Enter a name for the key in the Name field and enter a value in the Value field.</li> </ol>","title":"2. Set node"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.renameKeys/#3-rename-keys-node","tags":["Workflow\u00b2","Rename Keys"],"text":"<ol> <li>Click on the Add new key button.</li> <li>Enter the name of the key you created in the previous step in the Current Key Name field.</li> <li>Enter the new name that you would like to give the key in the New Key Name field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>","title":"3. Rename Keys node"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.respondToWebhook/","tags":["Workflow\u00b2","Respond to Webhook"],"text":"<p>The Respond to Webhook node can be used in workflows with a Webhook node. It allows controlling the response to incoming webhooks. In the Webhook node, the Using 'Respond to Webhook' node option would need to be selected in the Response dropdown for the Respond to Webhook node to work.</p>  <p>Expressions</p> <p>When using expressions, the Respond to Webhook node will only run for the first item in the input data</p>","title":"Respond to Webhook"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.respondToWebhook/#node-reference","tags":["Workflow\u00b2","Respond to Webhook"],"text":"<p>The node supports the following modes through the Respond With field:</p> <ul> <li>First Incoming Item: Respond with the first incoming item's JSON.</li> <li>Text: Respond with a text defined in the Response Body field.</li> <li>JSON: Respond with a JSON object defined in the Response Body field.</li> <li>Binary: Respond with a binary file defined in the Response Data Source field.</li> <li>No Data: No response payload is sent.</li> </ul> <p>Available options:</p> <ul> <li>Response Code: Set the response code to be used.</li> <li>Response Headers: Define response headers to be sent.</li> </ul>","title":"Node reference"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.respondToWebhook/#workflow-behaviour","tags":["Workflow\u00b2","Respond to Webhook"],"text":"<p>When using the Respond to Webhook node, workflows will behave as follows:</p> <ul> <li>When the workflow finishes without executing the Respond to Webhook node, a standard message is returned with a 200 status.</li> <li>If a second Respond to Webhook node is executed after the first one, it is ignored.</li> <li>If the workflow errors before the first Respond to Webhook node is executed, an error message is returned with a 500 status.</li> <li>If a Respond to Webhook node is executed but there was no webhook, the Respond to Webhook node is ignored.</li> </ul>","title":"Workflow behaviour"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.respondToWebhook/#example-usage","tags":["Workflow\u00b2","Respond to Webhook"],"text":"<p>This workflow allows serves an HTML page when receiving a GET requests. You can find the complete workflow here on Workflow\u00b2.io. The example workflow uses the following nodes:</p> <ul> <li>Webhook</li> <li>Respond to Webhook</li> </ul> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.respondToWebhook/#1-webhook-node","tags":["Workflow\u00b2","Respond to Webhook"],"text":"<p>This node will receive incoming requests (for example, when the webhook URL is opened with a browser).</p> <ol> <li>Enter a human-readable value in the path field, for example <code>my-form</code>.</li> <li>Choose the Using 'Respond to Webhook' node option Response dropdown.</li> <li>Click on Execute Node to run the node.</li> <li>Open the URL shown in the Test URL field under Webhook URLs in a new browser tab.</li> </ol> <p></p>","title":"1. Webhook node"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.respondToWebhook/#2-respond-to-webhook-node","tags":["Workflow\u00b2","Respond to Webhook"],"text":"<p>This node will define the response to the request received in the previous step.</p> <ol> <li>Connect the Webhook node from the previous step to the new Respond to Webhook node.</li> <li>Choose the Text option in the Respond With dropdown.</li> <li>Enter some basic HTML into the Response Body field (for example the Bootstrap Starter template).</li> <li>Click Add Option &gt; Response Headers &gt; Add Response Header to add a header to the response.</li> <li>Enter <code>Content-Type</code> in the Name field and <code>text/html; charset=UTF-8</code> in the value field of the new header.</li> <li>Close the Respond to Webhook modal and click the Execute Workflow button.</li> <li>Open the Test URL from the Webhook node in a new browser tab. The browser should now show the page added defined in the Response Body field of the Respond to Webhook node.</li> </ol> <p></p>","title":"2. Respond to Webhook node"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.rssFeedRead/","tags":["Workflow\u00b2","RSS Read"],"text":"<p>The RSS Read node is used to read data from RSS feeds published on the internet.</p>","title":"RSS Read"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.rssFeedRead/#node-reference","tags":["Workflow\u00b2","RSS Read"],"text":"<p>The RSS Read node has only one property:</p> <ul> <li>URL field: This field is used to specify the web address of the RSS publication.</li> </ul>","title":"Node Reference"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.rssFeedRead/#example-usage","tags":["Workflow\u00b2","RSS Read"],"text":"<p>This workflow allows you to read an RSS Feed using the RSS Read node. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - RSS Read</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.rssFeedRead/#1-start-node","tags":["Workflow\u00b2","RSS Read"],"text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.rssFeedRead/#2-rss-read-node","tags":["Workflow\u00b2","RSS Read"],"text":"<ol> <li>Enter the URL of the RSS feed that you want to read in the URL field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>","title":"2. RSS Read node"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.sendEmail/","tags":["Workflow\u00b2","Send Email"],"text":"<p>The Send Email node is used to send an email via an SMTP email server.</p>  <p>\ud83d\udd11 Credential</p> <p>You can find authentication information for this node here.</p>   <p> Keep in mind</p> <ol> <li>Before sending, ensure that you have already created email addresses that are approved for sending on your SMTP service.</li> </ol>  <ol> <li>The Send Email node merely sends an email via your SMTP server and plays no part in email deliverability.</li> <li>To attach a file, you will need to use an additional node such as the Read Binary File node or the HTTP Request node to pass a file as a data property.</li> </ol>","title":"Send Email"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.sendEmail/#basic-operations","tags":["Workflow\u00b2","Send Email"],"text":"<ul> <li>Send an email</li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.sendEmail/#node-reference","tags":["Workflow\u00b2","Send Email"],"text":"<ul> <li>From Email: The email address you are sending from.</li> <li>To Email: The recipient email address.</li> <li>CC Email: A field that can be used to specify an email address for a carbon copy of the email.</li> <li>BCC Email: A field that can be used to specify an email address for a blind carbon copy of the email.</li> <li>Subject: The subject of your message.</li> <li>Text: Your message, in plaintext.</li> <li>HTML: Your message, in HTML.</li> <li>Attachments: A field that can be used to attach any attachments as data properties.</li> </ul>","title":"Node Reference"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.sendEmail/#example-usage","tags":["Workflow\u00b2","Send Email"],"text":"<p>This workflow allows you to send an email using the Send Email node. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - Send Email</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.sendEmail/#1-start-node","tags":["Workflow\u00b2","Send Email"],"text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.sendEmail/#2-send-email-node","tags":["Workflow\u00b2","Send Email"],"text":"<ol> <li>First of all, you'll have to enter credentials for the Send Email node. You can find out how to do that here.</li> <li>Enter the email address you want to send from in the From Email field.</li> <li>Enter the recipient email address in the To Email field.</li> <li>Enter a subject for your message in the Subject field.</li> <li>Enter your message in the Text field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>","title":"2. Send Email node"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.set/","tags":["Workflow\u00b2","Set"],"text":"<p>The Set node allows you to set workflow data. This node can set completely new data as well as overwrite data that already exists. This node is crucial in workflows which expect incoming data from previous nodes, such as when inserting values to Google Sheets or databases.</p>","title":"Set"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.set/#example-usage","tags":["Workflow\u00b2","Set"],"text":"<p>This workflow allows you to assign values to variables using the Set node. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - Set</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.set/#1-start-node","tags":["Workflow\u00b2","Set"],"text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.set/#2-set-node","tags":["Workflow\u00b2","Set"],"text":"<ol> <li>Click on the Add Value button and select 'Number' from the dropdown list.</li> <li>Enter <code>number</code>in the Name field.</li> <li>Enter the value for the above field in the Value field.</li> <li>Click on the Add Value button and select 'String' from the dropdown list.</li> <li>Enter <code>string</code>in the Name field.</li> <li>Enter the value for the above field in the Value field.</li> <li>Click on the Add Value button and select 'Boolean' from the dropdown list.</li> <li>Enter <code>boolean</code>in the Name field.</li> <li>Toggle the value for the above field in the Value field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>","title":"2. Set node"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.set/#node-reference","tags":["Workflow\u00b2","Set"],"text":"","title":"Node Reference"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.set/#keep-only-set","tags":["Workflow\u00b2","Set"],"text":"<p>There's an option to toggle the Keep Only Set field. Setting this to true ensures that only the values set on this node should be kept, and the values from all the previous nodes are removed.</p>","title":"Keep Only Set"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.set/#dot-notation","tags":["Workflow\u00b2","Set"],"text":"<p>By default, the node follows the dot notation for the Name field. That means if you set the name in the Name field as <code>number.one</code> and the value in the Value field as <code>20</code>, the resulting JSON would look like the following:</p> <pre><code>{ \"number\": { \"one\": 20} }\n</code></pre>  <p>You can deactivate this behaviour by clicking on the Add Option button and setting the Dot Notion field to off. Now the resulting JSON would look like the following:</p> <pre><code>{ \"number.one\": 20 }\n</code></pre>","title":"Dot Notation"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.splitInBatches/","tags":["Workflow\u00b2","Split In Batches"],"text":"<p>The Split In Batches node saves the original incoming data, and with each iteration, it returns a predefined amount of data. This node can be used to loop through the data.</p>","title":"Split In Batches"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.splitInBatches/#node-reference","tags":["Workflow\u00b2","Split In Batches"],"text":"<ul> <li>Batch Size: The number of items to return with each call.</li> <li>Options<ul> <li>Reset: If set to true, the node will reset.</li> </ul> </li> </ul>  <p>Warning</p> <p>Doc\u00b2 natively processes incoming items. You may not need the Split In Batches node in your workflow. To learn more about how Doc\u00b2 handles multiple items, refer to the documentation on Looping in n8n.</p>","title":"Node Reference"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.splitInBatches/#example-usage","tags":["Workflow\u00b2","Split In Batches"],"text":"<p>This workflow allows you to read RSS feed from two different sources using the Split In Batches node. The Split in Batches node is needed in the workflow since the RSS Read node only processes the first item it receives. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Start - Function - Split In Batches - RSS Feed Read</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.splitInBatches/#1-start-node","tags":["Workflow\u00b2","Split In Batches"],"text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.splitInBatches/#2-function-node","tags":["Workflow\u00b2","Split In Batches"],"text":"<ol> <li>Paste the following JavaScript code snippet in the Function field.</li> </ol> <p><pre><code>return [\n  {\n    json: {\n      url: 'https://medium.com/feed/n8n-io',\n    }\n  },\n  {\n    json: {\n      url: 'https://dev.to/feed/n8n',\n    }\n  }\n];\n</code></pre>  2. Click on Execute Node to run the node.</p> <p></p>","title":"2. Function node"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.splitInBatches/#3-splitinbatches-node","tags":["Workflow\u00b2","Split In Batches"],"text":"<ol> <li>Set the batch size to <code>1</code> in the Batch Size field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p></p>","title":"3. SplitInBatches node"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.splitInBatches/#4-rss-read-node","tags":["Workflow\u00b2","Split In Batches"],"text":"<ol> <li>Click on the gears icon next to the URL field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; SplitInBatches &gt; Output Data &gt; JSON &gt; url. You can also add the following expression: <code>{{$node[\"SplitInBatches\"].json[\"url\"]}}</code>.</li> <li>Click on Execute Node to run the workflow.</li> </ol> <p></p>","title":"4. RSS Read node"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.splitInBatches/#faqs","tags":["Workflow\u00b2","Split In Batches"],"text":"","title":"FAQs"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.splitInBatches/#how-to-identify-that-no-items-are-left-to-be-processed-by-the-node","tags":["Workflow\u00b2","Split In Batches"],"text":"<p>To identify if items are left to be processed by node use the following expression: <code>{{$node[\"SplitInBatches\"].context[\"noItemsLeft\"]}}</code>. This expression returns a boolean value. If there is data yet to be processed, the expression will return <code>false</code>, otherwise <code>true</code>.</p> <p>Refer to this workflow to try it out.</p>","title":"How to identify that no items are left to be processed by the node?"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.splitInBatches/#how-to-get-the-current-running-index-of-the-node","tags":["Workflow\u00b2","Split In Batches"],"text":"<p>To get the current running index of the node, use the following expression: <code>{{$node[\"SplitInBatches\"].context[\"currentRunIndex\"];}}</code>.</p> <p>Refer to this workflow to try it out.</p>","title":"How to get the current running index of the node?"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.spreadsheetFile/","tags":["Workflow\u00b2","Spreadsheet File"],"text":"<p>The Spreadsheet File node is used to access data from spreadsheet files.</p>  <p> Keep in mind</p> <p>You will need to use an additional node such as the Read Binary File node or the HTTP Request node to pass the image file as a data property to the Spreadsheet File node.</p>","title":"Spreadsheet File"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.spreadsheetFile/#basic-operations","tags":["Workflow\u00b2","Spreadsheet File"],"text":"<ul> <li>Read from file</li> <li>Write to file</li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.spreadsheetFile/#node-reference","tags":["Workflow\u00b2","Spreadsheet File"],"text":"<p>When writing to a spreadsheet file, the File Format field can be used to specify the format of the file to save the data as.</p> <ul> <li> <p>File Format</p> <ul> <li>CSV (Comma-separated values)</li> <li>HTML (HTML Table)</li> <li>ODS (OpenDocument Spreadsheet)</li> <li>RTF (Rich Text Format)</li> <li>XLS (Excel)</li> <li>XLSX (Excel)</li> </ul> </li> <li> <p>Binary Property field: Name of the binary property in which to save the binary data of the spreadsheet file.</p> </li> <li> <p>Options</p> <ul> <li>Sheet Name field: This field specifies the name of the sheet from which the data should be read or written to.</li> <li>Read As String field: This toggle enables you to parse all input data as strings.</li> <li>RAW Data field: This toggle enables you to skip the parsing of data.</li> <li>File Name field: This field can be used to specify a custom file name when writing a spreadsheet file to disk.</li> </ul> </li> </ul>","title":"Node Reference"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.spreadsheetFile/#example-usage","tags":["Workflow\u00b2","Spreadsheet File"],"text":"<p>This workflow allows you to read a spreadsheet file using the Spreadsheet File node. You can also find the workflow on the website. This example usage workflow would use the following three nodes. - Start - Read Binary File - Spreadsheet File</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.spreadsheetFile/#1-start-node","tags":["Workflow\u00b2","Spreadsheet File"],"text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.spreadsheetFile/#2-read-binary-file","tags":["Workflow\u00b2","Spreadsheet File"],"text":"<ol> <li>Enter the path to the spreadsheet file you want to read in the File Path field.</li> </ol>","title":"2. Read Binary File"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.spreadsheetFile/#3-spreadsheet-file-node","tags":["Workflow\u00b2","Spreadsheet File"],"text":"<ol> <li>Enter the Property Name you used in the previous node in the Binary Property field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>","title":"3. Spreadsheet File node"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.sseTrigger/","tags":["Workflow\u00b2","SSE Trigger"],"text":"<p>Server-Sent Events (SSE) is a server push technology enabling a client to receive automatic updates from a server via HTTP connection. The SSE Trigger node is used to receive server-sent events and is a trigger node.</p>","title":"SSE Trigger"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.sseTrigger/#node-reference","tags":["Workflow\u00b2","SSE Trigger"],"text":"<p>URL: This field specifies the URL from which to receive the server-sent events.</p>","title":"Node Reference"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.sseTrigger/#example-usage","tags":["Workflow\u00b2","SSE Trigger"],"text":"<p>This workflow allows you to receive server-sent events using the SSE Trigger node. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following node. - SSE Trigger</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.sseTrigger/#1-sse-trigger-node","tags":["Workflow\u00b2","SSE Trigger"],"text":"<ol> <li>Enter the URL in the URL field. </li> <li>Click on Execute Node to run the node.</li> </ol>","title":"1. SSE Trigger node"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.ssh/","tags":["Workflow\u00b2","SSH"],"text":"<p>The SSH node is useful for executing commands via the Secure Shell Protocol.</p>  <p>\ud83d\udd11 Credential</p> <p>You can find authentication information for this node here.</p>","title":"SSH"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.ssh/#basic-operations","tags":["Workflow\u00b2","SSH"],"text":"<ul> <li>Execute a command</li> <li>Download a file</li> <li>Upload a file</li> </ul> <p>Note: To attach a file for upload, you will need to use an additional node such as the Read Binary File node or the HTTP Request node to pass the file as a data property.</p>","title":"Basic Operations"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.ssh/#node-reference","tags":["Workflow\u00b2","SSH"],"text":"<ul> <li>Authentication: A dropdown list to choose between Password or Private Key authentication.</li> <li>Resource: A dropdown list used to specify if you are executing a command or processing a file.</li> <li>Operation: A dropdown list to select the action to be performed. When selecting Command as the Resource, only Execute is available. For a File Resource you can select either Upload or Download.</li> <li>Command: Only visible for Command resources. The command to execute on the remote machine.</li> <li>Working Directory: Only visible for Command resources. The directory where the command should be executed.</li> <li>Path: Only visible for Download operation on file resources. The path where the desired file is found.</li> <li>Binary Property: Only visible for file resources. The name of the binary property which contains the data for the file to be uploaded.</li> <li>Target Directory: Only visible for Upload operations on file resources. The directory to upload the file to. The name of the file does not need to be specified, it's taken from the binary data file name. To override this behavior, set the parameter File Name under options.</li> </ul>","title":"Node Reference"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.ssh/#example-usage","tags":["Workflow\u00b2","SSH"],"text":"<p>This workflow allows you to remotely connect to your computer via SSH. This example usage workflow would use the following nodes. - Start - SSH</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.ssh/#1-start-node","tags":["Workflow\u00b2","SSH"],"text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.ssh/#2-ssh-node","tags":["Workflow\u00b2","SSH"],"text":"<ol> <li>From the SSH Credentials dropdown, select Create New or an existing credential.</li> <li>Select Password from the Authentication dropdown list.</li> <li>Select Command from the Resource dropdown list.</li> <li>The Execute option is automatically selected as the Operation.</li> <li>In the Command field enter the command to execute. Here we used <code>ls</code> just to see the local directory contents.</li> <li>In the Working Directory field you can enter where the command should be executed. Here we ran it in the root directory.</li> <li>Click on Execute Node to run the node.</li> </ol> <p></p>","title":"2. SSH node"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.start/","tags":["Workflow\u00b2","Start"],"text":"<p>The start node is the first node in a workflow. It exists by default when you create a new workflow and looks like the following image.</p> <p></p> <p>In case there is no Trigger node in the workflow, the workflow always starts from the Start node. The Start node cannot be deleted. Even if a workflow contains a Trigger node, there would still be a Start node.</p>","title":"Start"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.start/#faqs","tags":["Workflow\u00b2","Start"],"text":"","title":"FAQs"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.start/#when-is-it-necessary-to-use-the-start-node","tags":["Workflow\u00b2","Start"],"text":"<p>When using the Execute Workflow node in workflow A to execute workflow B, the Start node will act as the trigger node in workflow B. The second node in workflow B needs to be connected to the Start node for the workflow to execute correctly.</p>","title":"When is it necessary to use the Start node?"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.stopAndError/","tags":["Workflow\u00b2","Stop And Error"],"text":"<p>The Stop And Error node is used to throw an exception in workflows, enabling an error message or object to be displayed.</p>","title":"Stop And Error"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.stopAndError/#basic-operations","tags":["Workflow\u00b2","Stop And Error"],"text":"<ul> <li>Error Message</li> <li>Error Object</li> </ul>","title":"Basic operations"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.switch/","tags":["Workflow\u00b2","Switch"],"text":"<p>The Switch node is used to route a workflow conditionally based on comparison operations. It is similar to the IF node, but supports up to four conditional routes.</p>","title":"Switch"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.switch/#node-reference","tags":["Workflow\u00b2","Switch"],"text":"<p>Mode: This dropdown is used to select whether the conditions will be defined as rules in the node, or as an expression, programmatically.</p> <p>You can add comparison conditions using the Add Routing Rule dropdown. Conditions can be created based on the data type. The available comparison operations vary for each data type.</p> <ul> <li>Boolean<ul> <li>Equal</li> <li>Not Equal</li> </ul> </li> <li>Number<ul> <li>Smaller</li> <li>Smaller Equal</li> <li>Equal</li> <li>Not Equal</li> <li>Larger</li> <li>Larger Equal</li> </ul> </li> <li>String<ul> <li>Contains</li> <li>Equal</li> <li>Not Contains</li> <li>Not Equal</li> <li>Regex</li> </ul> </li> </ul> <p>You can route a workflow when none of the specified conditions are met using Fallback Output dropdown list.</p>","title":"Node Reference"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.switch/#example-usage","tags":["Workflow\u00b2","Switch"],"text":"<p>This workflow executes four different Set nodes based on the output given by a Switch node. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Start - Function - Switch - Set - NoOp</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.switch/#1-start-node","tags":["Workflow\u00b2","Switch"],"text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.switch/#2-function-node","tags":["Workflow\u00b2","Switch"],"text":"<ol> <li>Enter the following code in the Function field. <pre><code>return [\n  {\n    json: {\n      id: 0,\n    }\n  },\n  {\n    json: {\n      id: 1,\n    }\n  },\n  {\n    json: {\n      id: 2,\n    }\n  }\n];\n</code></pre> </li> <li>Click on Execute Node to run the workflow.</li> </ol> <p></p>","title":"2. Function node"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.switch/#3-switch-node","tags":["Workflow\u00b2","Switch"],"text":"<ol> <li>Click on the gears icon next to the Value 1 field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Function &gt; Output Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$node[\"Function\"].json[\"id\"]}}</code>.</li> <li>Click on the Add Routing Rule button.</li> <li>From the Operation dropdown list, select 'Equal'.</li> <li>Enter '0' in the Value 2 and the Output fields.</li> <li>Click on the Add Routing Rule button.</li> <li>From the Operation dropdown list, select 'Equal'.</li> <li>Enter '1' in the Value 2 and the Output fields.</li> <li>Click on the Add Routing Rule button.</li> <li>From the Operation dropdown list, select 'Equal'.</li> <li>Enter '2' in the Value 2 and the Output fields.</li> <li>Select '3' from the Fallback Output dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p></p>","title":"3. Switch node"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.switch/#4-set-node-for-0-route","tags":["Workflow\u00b2","Switch"],"text":"<ol> <li>Create a Set node connected to the '0' output of the Switch node.</li> <li>Click on the Add Value button and select 'String' from the dropdown list.</li> <li>Enter <code>name</code> in the Name field.</li> <li>Enter <code>n8n</code> in the Value field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>Note: Notice that only the id with the value 0 made its way to this Set node.</p> <p></p>","title":"4. Set node (for '0' route)"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.switch/#5-set1-node-for-1-route","tags":["Workflow\u00b2","Switch"],"text":"<ol> <li>Create a Set node connected to the '1' output of the Switch node.</li> <li>Click on the Add Value button and select 'String' from the dropdown list.</li> <li>Enter <code>name</code> in the Name field.</li> <li>Enter <code>nodemation</code> in the Value field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>Note: Notice that only the id with the value 1 made its way to this Set node.</p> <p></p>","title":"5. Set1 node (for '1' route)"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.switch/#6-set2-node-for-2-route","tags":["Workflow\u00b2","Switch"],"text":"<ol> <li>Create a Set node connected to the '2' output of the Switch node.</li> <li>Click on the Add Value button and select 'String' from the dropdown list.</li> <li>Enter <code>name</code> in the Name field.</li> <li>Enter <code>nathan</code> in the Value field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>Note: Notice that only the id with the value 2 made its way to this Set node.</p> <p></p>","title":"6. Set2 node (for '2' route)"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.switch/#7-noop-node-for-3-route","tags":["Workflow\u00b2","Switch"],"text":"<ol> <li>Create a NoOp node connected to the '3' output of the Switch node.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>Note: Notice that none of the ids made their way to this node since the values of the all the ids were either 0, 1, or 2.</p> <p></p>","title":"7. NoOp node (for '3' route)"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.wait/","tags":["Workflow\u00b2","Wait"],"text":"<p>The Wait node is used to create a pause of any desired duration in your workflows. When the workflow is paused the execution data is offloaded to the database, and when the resume condition is met it is reloaded and the execution continues.</p> <p>The Wait node can be set to resume on the following conditions:</p> <ul> <li>After time interval</li> <li>At specified time</li> <li>On webhook call</li> </ul>  <p> Keep in mind</p> <p>For the time-based resume operations, note that:</p>  <ul> <li>For wait times less than 65 seconds, execution data is not offloaded to the database to resume later but rather the process continues to run and execution resumes after the specified interval passes.</li> <li>The Doc\u00b2 server time is always used regardless of the timezone setting. Workflow timezone settings, and any changes made to them, do not affect the Wait node interval or specified time. </li> </ul>","title":"Wait"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.wait/#time-interval","tags":["Workflow\u00b2","Wait"],"text":"<p>Use the After time interval resume operation to set a desired interval after which the execution will resume.</p> <p>Set the desired Amount and the corresponding Unit for the Wait operation. Decimals can be used for fractional units, for example <code>1.5</code> minutes instead of <code>90</code> seconds.</p> <p>To automatically resume workflow execution after 15 minutes, the Wait node configuration would look like this:</p> <p></p>","title":"Time interval"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.wait/#specified-time","tags":["Workflow\u00b2","Wait"],"text":"<p>Use the At specified time resume operation to set a particular date and time in the future when the workflow execution should resume.</p> <p>For example, if you want the workflow execution to continue at midnight of New Year's Day 2022 the Wait node configuration would look like this:</p> <p></p>","title":"Specified time"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.wait/#webhook-call","tags":["Workflow\u00b2","Wait"],"text":"<p>The resume On webhook call option enables your workflows to resume when an HTTP call is received.</p> <p>The webhook URL that will resume the execution when called is only generated at runtime. The Wait node provides the <code>$resumeWebhookUrl</code> variable so that you can reference and send (the yet to be generated URL) wherever needed, for example to a third-party service or in an email (see example below). </p> <p>When the workflow executes, the resume URL is generated and the webhook(s) in your workflow using the <code>$resumeWebhookUrl</code> reference become functional. This generated URL is unique to each execution, meaning that your workflow can contain multiple Wait nodes and as the webhook URL is called it will resume each Wait node sequentially.</p>","title":"Webhook call"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.wait/#reference","tags":["Workflow\u00b2","Wait"],"text":"<p>See the Webhook node documentation to learn more about the Authentication, Method, and Response parameters when configuring the Wait node to resume on a webhook call.</p> <p>In addition to the parameters shared with the Webhook mode, the Wait node has the following additional configuration options:</p> <ul> <li>Limit wait time: Set the maximum amount of time to wait before the execution is resumed by default (i.e. even with no webhook call received).</li> <li> <p>Add Option &gt; Webhook Suffix: Provide a suffix that you want to appended to the resume URL. This is useful for creating unique webhook URLs for each Wait node when a workflow contains multiple Wait nodes.</p> <p>Note: The generated <code>$resumeWebhookUrl</code> will not automatically include this suffix, you must manually append it to the webhook URL before exposing it.</p> </li> </ul>","title":"Reference"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.wait/#limitations","tags":["Workflow\u00b2","Wait"],"text":"<p>There are a few functional limitations to keep in mind when working with the On Webhook Call operations of the Wait node:</p> <ul> <li>Partial executions of your workflow will change the <code>$resumeWebhookUrl</code>, so be sure that the node being used to send this URL to your desired third-party runs in the same execution as the Wait node.</li> <li>When testing your workflow via the Editor UI, you cannot see the rest of the execution following the Wait node. To inspect the execution results ensure you have enabled Save Manual Executions in you workflow settings to be able to review the execution results there.</li> </ul>","title":"Limitations"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.wait/#example-usage","tags":["Workflow\u00b2","Wait"],"text":"<p>This workflow allows you to complete a user sign-up flow by adding their details contact details in an Airtable, sending a confirmation email, and updating the Airtable record after they have confirmed their email address.</p> <p>For our example here, we assume there is an existing workflow/webpage where new users sign-up and this workflow begins when they hit \"Submit\" there.</p> <p>This example workflow uses the following nodes. - Wait - Webhook - Set - Send Email - Airtable</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example usage"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.wait/#1-webhook-node","tags":["Workflow\u00b2","Wait"],"text":"<p>This node is triggered when a new user submits their details in your contact form. It is configured as displayed below:</p> <p></p>","title":"1. Webhook node"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.wait/#2-set-node","tags":["Workflow\u00b2","Wait"],"text":"<p>This node is used to set the values submitted by the user (first name, last name, and email address) as values corresponding to what you want to enter in the Airtable. </p> <p></p> <p>Note that expressions are used based on the input data received from the previous Webhook node:</p> <p></p>","title":"2. Set node"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.wait/#3-airtable-node","tags":["Workflow\u00b2","Wait"],"text":"<p>In this node we add the new users contact details to the desired table, Newsletter in our example:</p> <p></p>","title":"3. Airtable node"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.wait/#4-send-email-node","tags":["Workflow\u00b2","Wait"],"text":"<p>This node uses your desired email address (via SMTP) to send a confirmation email to the user:</p> <p></p> <p>This is where the <code>$resumeWebhookUrl</code> is passed, meaning the workflow will wait until the user clicks the confirmation link in this email before resuming execution:</p> <p></p>","title":"4. Send Email node"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.wait/#5-wait-node","tags":["Workflow\u00b2","Wait"],"text":"<p>The Wait node will resume execution once the new user clicks the confirmation link in their email (containing the <code>$resumeWebhookUrl</code>):</p> <p></p>","title":"5. Wait node"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.wait/#6-set-node","tags":["Workflow\u00b2","Wait"],"text":"<p>In this node set the <code>id</code> of the user and new Verified boolean value to true:</p> <p></p>","title":"6. Set node"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.wait/#7-airtable-node","tags":["Workflow\u00b2","Wait"],"text":"<p>Finally you update the table to reflect this newly created Verified field:</p> <p></p>","title":"7. Airtable node"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.webhook/","tags":["Workflow\u00b2","Webhook"],"text":"<p>The Webhook node is one of the most powerful nodes in Workflow\u00b2. It allows you to create webhooks which can be used to receive data from apps and services when an event occurs. It is a Trigger node, which means that it serves as the starting point for an Doc\u00b2 workflow. This allows several different services to connect to Doc\u00b2 and run a workflow when data is received.</p>  <p> Keep in mind</p> <ol> <li>When using the Webhook node on the localhost, ensure that Doc\u00b2 is running with the tunnel mode: npm with tunnel or Docker with tunnel.</li> </ol>  <ol> <li>When working with a Production webhook, please ensure that you have saved and activated the workflow. Don\u2019t forget that the data flowing through the webhook won\u2019t be visible in the Editor UI with the Production webhook.</li> </ol> <p>Webhook nodes can be used as triggers for workflows when we want to receive data and run a workflow based on the data. The Webhook node also supports returning the data generated at the end of a workflow. This makes it very useful to build a workflow to process data and return the results, like an API endpoint.</p> <p>While building or testing a workflow, we recommend that you use a test webhook URL. Using a test webhook ensures that you can view the incoming data in the Editor UI, which is useful for debugging. Make sure that you click on the Execute Node button to register the webhook before sending the data to the test webhook. The test webhook stays active for 120 seconds.</p> <p>\ud83c\udfa5 The following playlist will help you learn how to use the Webhook node in Workflow\u00b2.</p>","title":"Webhook"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.webhook/#node-reference","tags":["Workflow\u00b2","Webhook"],"text":"<p>First of all, in the parameters section, we have the Webhook URLs. Clicking on that will reveal the URLs for the webhook. Here you have two options, let\u2019s understand the difference between them.</p> <ol> <li> <p>Webhook URLs</p> <ul> <li> <p>Production: A Production webhook is only registered when a workflow has been activated (via the switch on the top right of the page). You will never see its data in the Editor UI. To save the executions, you can either set that as a global default or you can specify that on a per-workflow basis in the workflow settings. You will then see the data from the workflow under \u2018Past Executions\u2019.</p> </li> <li> <p>Test: A Test webhook is only registered in the time between executing a workflow via the UI and until the first call gets made (when it displays \u201cwaiting for Webhook call\u201d). After the Test webhook gets called for the first time, it displays the data in the Editor UI, and then gets deactivated.</p> </li> </ul> </li> <li> <p>Authentication: The Webhook node supports two methods of authenticating a request that it receives.</p> <ul> <li>Basic Auth \u2014 A method of authentication where the specified username and password must be passed along with the request.</li> <li>Header Auth \u2014 A method of authentication where the specified header parameter must be passed along with the request. This method can be used when you want to authenticate using an API key or an access token, for example.     !!! tip  Keep in mind         The Credential Data required for Header Auth credentials will vary on the type used. For example, if you need to provide an <code>Authorization: Bearer &lt;token&gt;</code> header, the Credential Data <code>Name</code> would be <code>Authorization</code> and the <code>Value</code> would be <code>Bearer &lt;token&gt;</code>.</li> </ul> </li> <li> <p>HTTP Method: The Webhook node supports receiving two types of HTTP Requests.</p> <ul> <li>GET Request \u2014 GET requests are typically used to request data from a resource. This type of request is typically used to retrieve data from a service.</li> <li>POST Request \u2014 POST requests are typically used to send data to a resource for a create/update operation. This type of request is typically used to send data to a service.</li> </ul> </li> <li> <p>Path: By default, this field contains a randomly generated webhook URL path, to avoid conflicts with other webhook nodes. You can also manually specify a URL path if necessary. A good example would be if you were using Doc\u00b2 to prototype an API; and wanted consistent endpoint URLs.</p> </li> <li> <p>Response Code: Allows you to customize the HTTP response code that the Webhook node will return upon successful execution.</p> </li> <li> <p>Response When: This dropdown list allows you to select between two response modes.</p> <ul> <li>Webhook received: When this option is selected, the Webhook node will return the specified response code along with the message \u201cWorkflow got started.\u201d.</li> <li>Last node finishes: When this option is selected, the Webhook node will return the specified response code along with the data output from the last node executed in the workflow.</li> </ul> </li> </ol> <p>Optional Parameters: The Webhook node also supports several optional methods that can be used during configuration.</p> <ul> <li>Response Headers \u2014 This option allows you to specify additional headers in the Webhook response.</li> <li>Raw Body \u2014 This option is used to specify when the Webhook node will receive data in a RAW format, such as JSON or XML.</li> <li>Binary Data \u2014 This option is available only when the Webhook node is set to receive POST requests. Setting this to \u2018true\u2019 lets the Webhook node know that it will receive binary data (such as an image/audio). You can use this option when you expect to receive a file via your Webhook node.</li> </ul> <p>Conditional Parameters: The Webhook node also supports several other parameters, that are used only in certain configurations.</p> <ul> <li>Response Data: This option is available only when set to respond when \u2018Last node finishes\u2019. It allows you to choose which data to return:<ul> <li>All Entries \u2014 Choose this option to return all the data generated by the last node in the workflow, as an array.</li> <li>First Entry JSON \u2014 Choose this option to return the first data entry of the last node in the workflow, as a JSON object.</li> <li>First Entry Binary \u2014 Choose this option to return the binary data of the first entry of the last node in the workflow, as a binary file.</li> </ul> </li> </ul>","title":"Node Reference"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.webhook/#example-usage","tags":["Workflow\u00b2","Webhook"],"text":"<p>This workflow allows you to receive the weather information of a city using the Webhook and the OpenWeatherMap nodes. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Webhook - OpenWeatherMap - Set</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.webhook/#1-webhook-node","tags":["Workflow\u00b2","Webhook"],"text":"<p>This node will trigger the workflow. We will make a GET request to the Test URL and pass on a query parameter <code>city</code>. We will use the value of this query parameter in the next node in the workflow.</p> <ol> <li>Click on Webhook URLs and select the 'Test' tab.</li> <li>Copy the displayed URL. We will make a GET request to this URL later on.</li> <li>Select 'Last Node' from the Response Mode. This will return the data from the last executed node.</li> <li>Select 'All Entries' from the Response Data. This will return all the entries of the last executed node.</li> <li>Save the workflow to register the webhook.</li> <li>Click on Execute Node to run the node.</li> <li>In a new browser tab, paste the URL you copied in the previous step and append it with <code>?city=Berlin</code>. Your URL should look similar to the following URL:<code>https://your-n8n.url/webhook/path?city=Berlin</code>. We are passing a query parameter <code>city</code> and assigning it the value <code>Berlin</code>.</li> <li>Press Enter (or Return) to make a request to the Test Webhook URL.</li> </ol> <p>In the screenshot below, you will notice that the node triggers the workflow and receives a query parameter. We will use the value of the query parameter in the next node in the workflow.</p> <p></p>","title":"1. Webhook node"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.webhook/#2-openweathermap-node-current-weather","tags":["Workflow\u00b2","Webhook"],"text":"<p>This node will return data about the current weather for the city that we received in the previous node.</p> <ol> <li>First of all, you'll have to enter credentials for the OpenWeatherMap node. You can find out how to do that here.</li> <li> <p>Click on the gears icon next to the City field and click on Add Expression.</p> </li> <li> <p>Select the following in the Variable Selector section: Nodes &gt; Webhook &gt; Output Data &gt; JSON &gt; query &gt; city. You can also add the following expression: <code>{{$node[\"Webhook\"].json[\"query\"][\"city\"]}}</code>.</p> </li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns data about the current weather in Berlin.</p> <p></p>","title":"2. OpenWeatherMap node (Current Weather)"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.webhook/#3-set-node","tags":["Workflow\u00b2","Webhook"],"text":"<p>We will use the Set node to ensure that only the data that we set in this node gets returned to the workflow. We will set the value of <code>temp</code> and <code>description</code> in this node.</p> <ol> <li>Click on Add Value and select 'String' from the dropdown list.</li> <li>Enter <code>temp</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; OpenWeatherMap &gt; Output Data &gt; JSON &gt; main &gt; temp. You can also add the following expression: <code>{{$node[\"OpenWeatherMap\"].json[\"main\"][\"temp\"]}}</code>.</li> <li>Click on Add Value and select 'String' from the dropdown list.</li> <li>Enter <code>description</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; OpenWeatherMap &gt; Output Data &gt; JSON &gt; weather &gt; [Item: 0] &gt; description. You can also add the following expression: <code>{{$node[\"OpenWeatherMap\"].json[\"weather\"][0][\"description\"]}}</code>.</li> <li>Toggle Keep Only Set to <code>true</code>. We set this option to true to ensure that only the data that we have set in this node get passed on to the next nodes in the workflow.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node sets the values of <code>temp</code> and <code>description</code>.</p> <p></p> <p>Save the workflow and execute it again by clicking on the Execute Workflow button in the Editor UI. This time you will receive the temperature and description as the response in the browser.</p>  <p> Activate workflow for production</p> <p>This example workflow uses the Webhook node, which is a Trigger node. You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered every time a GET request is sent to the Production webhook URL.</p>","title":"3. Set node"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.webhook/#faqs","tags":["Workflow\u00b2","Webhook"],"text":"","title":"FAQs"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.webhook/#where-to-find-the-webhook-urls","tags":["Workflow\u00b2","Webhook"],"text":"<p>The Webhook node has two URLs - Test URL and Production URL. To get these URLs, follow the steps mentioned below. 1. Click on Webhook URLs. By default, the node displays the Production URL. 2. If you want the Test URL, click on the Test tab. 3. To copy the URL, click on the displayed URL.</p> <p>Here is a GIF demonstrating how to retrieve the test and production webhook URLs in Workflow\u00b2.</p> <p></p>","title":"Where to find the Webhook URLs?"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.webhook/#how-to-use-the-http-request-node-to-trigger-the-webhook-node","tags":["Workflow\u00b2","Webhook"],"text":"<p>The HTTP Request node is used to make HTTP requests to the URL you specify. To use the HTTP Request node to trigger the Webhook node, follow the steps mentioned below. 1. Create a new workflow. 2. Add the HTTP Request node to the workflow. 3. Select the appropriate method from the Request Method dropdown list. For example, if you have selected GET as the HTTP method in your Webhook node, select GET as the request method in the HTTP Request node. 4. Copy the URL from the Webhook node, and paste it in the URL field in the HTTP Request node. 5. Execute the workflow with the Webhook node if you're using the Test URL. 6. Execute the HTTP Request node.</p> <p>Here is a video demonstrating how to send a request to a Webhook based workflow using the HTTP Request node:</p>","title":"How to use the HTTP Request node to trigger the Webhook node?"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.webhook/#how-to-use-route-parameters","tags":["Workflow\u00b2","Webhook"],"text":"<p>You can add route parameters to the webhook URL path. This is useful when you are creating an API. The Path field can take the following values:</p> <ul> <li><code>/:variable</code></li> <li><code>/path/:variable</code></li> <li><code>/:variable/path</code></li> <li><code>/:variable1/path/:variable2</code></li> <li><code>/:variable1/:variable2</code></li> </ul>","title":"How to use route parameters?"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.webhook/#how-to-use-curl-to-trigger-the-webhook-node","tags":["Workflow\u00b2","Webhook"],"text":"<p>You can use cURL to make HTTP requests that will trigger the Webhook node. To use cURL, make sure that you have installed it on your machine. You can follow this guide to install cURL on your machine. Based on your use-case, you can make an HTTP request with or without any parameters. You can also send files with the HTTP request using cURL.</p> <p>Note: In the following commands, replace <code>https://your-n8n.url/webhook/path</code> with your webhook URL.</p> <ul> <li>","title":"How to use cURL to trigger the Webhook node?"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.webhook/#make-an-http-request-without-any-parameters","tags":["Workflow\u00b2","Webhook"],"text":"To make a GET request without any parameters, use the following command in your terminal.</li> </ul> <pre><code>curl --request GET https://your-n8n.url/webhook/path\n</code></pre>  <p>To make a POST request, use the following command.</p> <pre><code>curl --request POST https://your-n8n.url/webhook/path\n</code></pre>  <ul> <li>","title":"Make an HTTP request without any parameters"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.webhook/#make-an-http-request-with-body-parameter","tags":["Workflow\u00b2","Webhook"],"text":"</li> </ul> <p>To make an HTTP request with a body parameter, use the following command.</p> <pre><code>curl --request GET https://your-n8n.url/webhook/path --data 'key=value'\n</code></pre>  <ul> <li>","title":"Make an HTTP request with body parameter"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.webhook/#make-an-http-request-with-header-parameter","tags":["Workflow\u00b2","Webhook"],"text":"</li> </ul> <p>To make an HTTP request with a header parameter, use the following command.</p> <pre><code>curl --request GET https://your-n8n.url/webhook/path --header 'key=value'\n</code></pre>  <ul> <li>","title":"Make an HTTP request with header parameter"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.webhook/#make-an-http-request-to-send-a-file","tags":["Workflow\u00b2","Webhook"],"text":"</li> </ul> <p>To send a file with the HTTP request, use the following command.</p> <p><pre><code>curl --request GET https://your-n8n.url/webhook/path --from 'key=@/path/to/file'\n</code></pre>  Replace <code>/path/to/file</code> with the path of the file you want to send.</p>","title":"Make an HTTP request to send a file"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.webhook/#how-to-send-a-response-of-type-string","tags":["Workflow\u00b2","Webhook"],"text":"<p>To send a response of type string, follow the steps mentioned below. 1. Select 'Last Node' from the Response Mode dropdown list. 2. Select 'First Entry JSON' from the Response Data dropdown list. 3. Click on 'Add Option' and select 'Property Name' from the dropdown list. 4. Enter the name of the property that contains the response. 5. Connect a Set node to the Webhook node. 6. In the Set node, click on 'Add Value' and select 'String'. 7. Enter the name of the property in the Name field. The name should match the property name from step 4. 8. Enter the string value in the Value field. 9. Toggle Keep Only Set to <code>true</code>.</p> <p>When the Webhook gets called, it will send the string response that was set in the Set node.</p>","title":"How to send a response of type <code>string</code>?"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.workflowTrigger%202/","tags":["Workflow\u00b2","Workflow Trigger"],"text":"<p>The Workflow Trigger node gets triggered when a workflow is updated or activated.</p>  <p> Keep in mind</p> <p>If you want to use the Workflow Trigger node for a workflow, add the node to the workflow. You don't have to create a separate workflow.</p>  <p>The Workflow Trigger node gets triggered for the workflow that it gets added to. The Workflow Trigger node can be used to trigger a workflow to notify the state of the workflow.</p>","title":"Workflow Trigger"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.workflowTrigger%202/#node-reference","tags":["Workflow\u00b2","Workflow Trigger"],"text":"<ul> <li>Events<ul> <li>Active Workflow Updated: Triggers when this workflow is updated</li> <li>Workflow Activated: Triggers when this workflow is activated</li> </ul> </li> </ul>","title":"Node Reference"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.workflowTrigger%202/#example-usage","tags":["Workflow\u00b2","Workflow Trigger"],"text":"<p>This workflow allows you to receive a message on Mattermost when a workflow is updated. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Workflow Trigger - Mattermost</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.workflowTrigger%202/#1-workflow-trigger-node","tags":["Workflow\u00b2","Workflow Trigger"],"text":"<p>Open the workflow where you want to add the Workflow Trigger workflow. Add the Workflow Trigger node to the workflow.</p> <p>The Workflow Trigger node will trigger the workflow when the workflow gets updated.</p> <ol> <li>Select 'Active Workflow Updated' from the Events dropdown list.</li> </ol> <p>In the screenshot below, you will notice that the node triggers the workflow when the workflow gets updated.</p> <p></p>","title":"1. Workflow Trigger node"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.workflowTrigger%202/#2-mattermost-node-post-message","tags":["Workflow\u00b2","Workflow Trigger"],"text":"<p>This node will send a message in the <code>workflow</code> channel on Mattermost.</p> <ol> <li>First of all, you'll have to enter credentials for the Mattermost node. You can find out how to enter credentials for this node here.</li> <li>Select a channel from the Channel ID dropdown list.</li> <li> <p>Click on the gears icon next to the Message field click on Add Expression.</p> </li> <li> <p>Enter the following message in the Expression field: <code>The workflow {{$workflow.name}}, was updated.</code>. <code>$workflow.name</code> returns the name of the workflow.</p> </li> <li>Click on Execute Node to run the workflow.</li> </ol> <p>In the screenshot below, you will notice that the node sends a message to Mattermost.</p> <p></p>","title":"2. Mattermost node (post: message)"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.workflowTrigger/","text":"<p>The Doc\u00b2 Trigger node gets triggered when the Doc\u00b2 instance is started or restarted. The Doc\u00b2 Trigger node can be used to notify when the Doc\u00b2 instance starts.</p>","title":"Doc\u00b2 Trigger"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.workflowTrigger/#node-reference","text":"<ul> <li>Events<ul> <li>Instance started: Triggers when the Doc\u00b2 instance is started or restarted</li> </ul> </li> </ul>","title":"Node Reference"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.workflowTrigger/#example-usage","text":"<p>This workflow allows you to receive a message on Mattermost when your Doc\u00b2 instance starts. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - n8n Trigger - Mattermost</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.workflowTrigger/#1-doc2-trigger-node","text":"<p>The Doc\u00b2 Trigger node will trigger the workflow whenever Doc\u00b2 starts.</p> <ol> <li>Select 'Instance started' from the Events dropdown list.</li> </ol> <p>In the screenshot below, you will notice that the node triggers the workflow when the Doc\u00b2 instance starts.</p> <p></p>","title":"1. Doc\u00b2 Trigger node"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.workflowTrigger/#2-mattermost-node-post-message","text":"<p>This node will send a message in the <code>workflow</code> channel on Mattermost.</p> <ol> <li>First of all, you'll have to enter credentials for the Mattermost node. You can find out how to enter credentials for this node here.</li> <li>Select a channel from the Channel ID dropdown list.</li> <li> <p>Click on the gears icon next to the Message field click on Add Expression.</p> </li> <li> <p>Enter the following message in the Expression field: <code>Your Doc\u00b2 instance started at {{$json[\"timestamp\"]}}.</code>.</p> </li> <li>Click on Execute Node to run the workflow.</li> </ol> <p>In the screenshot below, you will notice that the node sends a message to Mattermost.</p> <p></p>  <p> Activate workflow for production</p> <p>This example workflow uses the Doc\u00b2 Trigger node, which is a Trigger node. You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow.</p>","title":"2. Mattermost node (post: message)"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.writeBinaryFile/","tags":["Workflow\u00b2","Write Binary File"],"text":"<p>The Write Binary File node is used to write a file to the host machine that runs Workflow\u00b2.</p>  <p> Keep in mind</p> <ol> <li>If you are running Doc\u00b2 in Docker, your command will run on the Doc\u00b2 container and not the Docker host.</li> </ol>  <ol> <li>This node will look for files relative to the Doc\u00b2 install path. It is recommended to use absolute file paths to prevent any errors.</li> </ol>","title":"Write Binary File"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.writeBinaryFile/#node-reference","tags":["Workflow\u00b2","Write Binary File"],"text":"<ol> <li>File Name field: This field specifies the path to which the file should be written, along with the file name.</li> <li>Property Name field: Name of the binary property to which to write the data of the read file.</li> </ol>","title":"Node Reference"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.writeBinaryFile/#example-usage","tags":["Workflow\u00b2","Write Binary File"],"text":"<p>This workflow allows you to write a file to the host machine using the Write Binary File node. You can also find the workflow on the website. This example usage workflow would use the following three nodes. - Start - HTTP Request - Write Binary File</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.writeBinaryFile/#1-start-node","tags":["Workflow\u00b2","Write Binary File"],"text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.writeBinaryFile/#2-http-request-node","tags":["Workflow\u00b2","Write Binary File"],"text":"<ol> <li>Enter <code>https://docs.n8n.io/assets/img/n8n-logo.png</code> in the URL field.</li> <li>Select the 'File' option from the Response Format dropdown list. </li> <li>Click on Execute Node to run the node.</li> </ol> <p></p>","title":"2. HTTP Request node"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.writeBinaryFile/#3-write-binary-file-node","tags":["Workflow\u00b2","Write Binary File"],"text":"<ol> <li>Enter the path to which the file should be written along with the file name in the File Name field.</li> <li>Click on Execute Node to run the node.</li> </ol>","title":"3. Write Binary File node"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.xml/","tags":["Workflow\u00b2","XML"],"text":"<p>The XML node is useful to convert data from and to XML.</p>","title":"XML"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.xml/#node-reference","tags":["Workflow\u00b2","XML"],"text":"<ul> <li>Mode: The format the data should be converted from and to.<ul> <li>JSON to XML: Converts data from JSON to XML</li> <li>XML to JSON: Converts data from XML to JSON</li> </ul> </li> <li>Property Name: The name of the property which contains the data to convert. </li> <li>Options<ul> <li>Allow Surrogate Chars: Allows using characters from the Unicode surrogate blocks. This field is displayed when 'JSON to XML' is selected from the Mode dropdown list.</li> <li>cdata:  Wrap text nodes instead of escaping when necessary. This field is displayed when 'JSON to XML' is selected from the Mode dropdown list.</li> <li>Headless: Omit the XML header. This field is displayed when 'JSON to XML' is selected from the Mode dropdown list.</li> <li>Root Name: Root element name to be used. This field is displayed when 'JSON to XML' is selected from the Mode dropdown list.</li> <li>Explicit Array: Always put child nodes in an array if true; otherwise an array is created. This field is displayed when 'XML to JSON' is selected from the Mode dropdown list.</li> <li>Explicit Root: Set this if you want to get the root node in the resulting object. This field is displayed when 'XML to JSON' is selected from the Mode dropdown list.</li> <li>Ignore Attributes: Ignore all XML attributes and only create text nodes. This field is displayed when 'XML to JSON' is selected from the Mode dropdown list.</li> <li>Merge Attributes: Merge attributes and child elements as properties of the parent, instead of keying attributes off a child attribute object. This option is ignored if 'Ignore Attribute' is true. This field is displayed when 'XML to JSON' is selected from the Mode dropdown list.</li> <li>Normalize: Trim whitespaces inside the text nodes. This field is displayed when 'XML to JSON' is selected from the Mode dropdown list.</li> <li>Normalize Tags: Normalize all tag names to lowercase. This field is displayed when 'XML to JSON' is selected from the Mode dropdown list.</li> <li>Trim: Trim the whitespace at the beginning and end of text nodes. This field is displayed when 'XML to JSON' is selected from the Mode dropdown list.</li> <li>Attribute Key: Prefix that is used to access the attributes.</li> <li>Character Key: Prefix that is used to access the character content.</li> </ul> </li> </ul>","title":"Node Reference"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.xml/#example-usage","tags":["Workflow\u00b2","XML"],"text":"<p>This workflow allows you to convert the JSON data received from the CocktailDB API to XML. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Start - HTTP Request - XML</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.xml/#1-start-node","tags":["Workflow\u00b2","XML"],"text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.xml/#2-http-request-node-get","tags":["Workflow\u00b2","XML"],"text":"<ol> <li>Enter <code>https://www.thecocktaildb.com/api/json/v1/1/random.php</code> in the URL field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p></p>","title":"2. HTTP Request node (GET)"},{"location":"workflow/integrations/core-nodes/workflow-nodes-base.xml/#3-xml-node-json-to-xml","tags":["Workflow\u00b2","XML"],"text":"<ol> <li>Select 'JSON to XML' from the Mode dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p></p>","title":"3. XML node (JSON to XML)"},{"location":"workflow/integrations/creating-nodes/","tags":["Workflow\u00b2","How To","create","nodes"],"text":"<p>Learn how to build your own custom nodes.</p> <ul> <li>Standards</li> <li>Create your first node</li> <li>Creating WF-nodes-module</li> <li>Create a trigger node</li> <li>Use the node developer CLI</li> <li>Node UI elements</li> <li>Making HTTP Requests</li> <li>Nodelinter</li> <li>Node Review Checklist</li> <li>Troubleshooting</li> </ul>","title":"Creating nodes"},{"location":"workflow/integrations/creating-nodes/code/create-first-node/","text":"<p>Today, you will learn how to create your first node for Workflow\u00b2.</p>","title":"Creating Your First Node"},{"location":"workflow/integrations/creating-nodes/code/create-first-node/#prerequisites","text":"<p>You have knowledge of:</p> <ul> <li>JavaScript/TypeScript</li> <li>REST APIs</li> <li>Expressions in n8n</li> </ul> <p>Install the following tools:</p> <ul> <li>Git: You can find instructions on how to install Git here.</li> <li> <p>Node.js and npm: You can find instructions how to install both using nvm (Node Version Manager) here. The current minimum version is <code>14.15</code>. In case you already have Node.js and npm installed, you can check the current version with the following command:     <code>bash     node -v     npm -v</code> NOTE: Use node version <code>14.x</code> and npm version <code>6.x</code>. If using npm version <code>7+</code>, you must enable legacy peer dependencies by setting: <code>npm config set legacy-peer-deps true</code>.</p> </li> <li> <p>Lerna: You can install lerna globally with the following command:     <pre><code>npm install --global lerna\n</code></pre> </p> </li> </ul>","title":"Prerequisites"},{"location":"workflow/integrations/creating-nodes/code/create-first-node/#selecting-the-node","text":"<p>The first thing that we have to do is pick the service we want to create the node for. We will use SendGrid as an example.</p> <p>For the sake of brevity, we will only showcase how to add the functionality to create a contact. Since n8n's repository already has a SendGrid node, we will name this node FriendGrid to avoid conflicts.</p>","title":"Selecting the node"},{"location":"workflow/integrations/creating-nodes/code/create-first-node/#cloning-the-repository","text":"<p>In GitHub, fork the n8n repository. Clone it by running the following command in your terminal (don't forget to replace <code>&lt;USERNAME&gt;</code> with your GitHub username):</p> <pre><code>git clone https://github.com/&lt;USERNAME&gt;/n8n.git &amp;&amp; cd n8n\n</code></pre>  <p>n8n is built from four main packages:</p> <ul> <li>cli</li> <li>core</li> <li>editor-ui</li> <li>nodes-base</li> </ul> <p>All these packages are under the <code>/packages</code> folder in the main Doc\u00b2 folder. We will be working in the <code>nodes-base</code> folder as it contains everything related to nodes. Specifically, <code>/packages/nodes-base/nodes</code>, <code>packages/nodes-base/credentials</code>, and <code>packages/nodes-base/package.json</code>.</p> <ul> <li>The folder <code>nodes</code>, contains all the nodes in Workflow\u00b2.</li> <li>The folder <code>credentials</code> contains all the credentials that the different nodes use. Each node can define multiple credentials. For example, OAuth2 or API Key. Each credential requires different parameters that the user will have to input. The credentials data that the user provides is stored in an encrypted format in n8n's database.</li> <li>The file <code>package.json</code> contains all the npm packages that the nodes use. It also contains all the nodes and credentials that are loaded when Doc\u00b2 is started.</li> </ul> <p></p>","title":"Cloning the repository"},{"location":"workflow/integrations/creating-nodes/code/create-first-node/#creating-the-node","text":"<ol> <li>Go to <code>packages/nodes-base/nodes</code>.</li> <li>Create a folder called <code>FriendGrid</code> (the folder names are PascalCase).</li> <li>Within the FriendGrid folder, create a file called <code>FriendGrid.node.ts</code> (YourNodeName.node.ts).</li> <li>Download and add the FriendGrid icon to the folder. Name it <code>friendGrid.svg</code>.<ul> <li>The icon property has to be either a 60x60 pixels PNG or an SVG and must exist in the node\u2019s folder.</li> <li>An SVG is preferable. In case you have to use a PNG, make sure that it is compressed. A good tool for that is tinypng.</li> <li>A good place to find company icons is gilbarbara/logos.</li> </ul> </li> <li>Paste the following code in the <code>FriendGrid.node.ts</code> file.</li> </ol> <pre><code>import {\n    IExecuteFunctions,\n} from 'n8n-core';\n\nimport {\n    IDataObject,\n    INodeExecutionData,\n    INodeType,\n    INodeTypeDescription,\n} from 'n8n-workflow';\n\nimport {\n    OptionsWithUri,\n} from 'request';\n\nexport class FriendGrid implements INodeType {\n    description: INodeTypeDescription = {\n        displayName: 'FriendGrid',\n        name: 'friendGrid',\n        icon: 'file:friendGrid.svg',\n        group: ['transform'],\n        version: 1,\n        description: 'Consume FriendGrid API',\n        defaults: {\n            name: 'FriendGrid',\n            color: '#1A82e2',\n        },\n        inputs: ['main'],\n        outputs: ['main'],\n        credentials: [\n        ],\n        properties: [\n            // Node properties which the user gets displayed and\n            // can change on the node.\n        ],\n    };\n\n    async execute(this: IExecuteFunctions): Promise&lt;INodeExecutionData[][]&gt; {\n        return [[]];\n    }\n}\n</code></pre>  <p>Your directory structure should now look like the following.</p> <p></p>","title":"Creating the node"},{"location":"workflow/integrations/creating-nodes/code/create-first-node/#adding-the-node-to-editor-ui","text":"<p>n8n uses the properties set in the property <code>description</code> to render the node in the Editor UI. These properties are <code>displayName</code>, <code>name</code>, <code>color</code>, <code>icon</code>, <code>description</code>, and <code>subtitle</code>.</p> <p>Check the following figure to see how the properties affect the looks of the node.</p> <p></p> <p>Note: The property description conforms to INodeTypeDescription.</p> <p>Let's see how the node looks in the UI by following these steps:</p> <ol> <li>Go to <code>/packages/nodes-base/package.json</code>.</li> <li>Paste <code>\"dist/nodes/FriendGrid/FriendGrid.node.js\",</code> in the nodes array to register the node (in an alphabetical order).</li> <li> <p>Go to the project's main folder (n8n) in the terminal and run the following commands (it can take a few minutes).</p> <ul> <li>The first command installs all dependencies of all the modules and links them together.</li> <li>The second command builds all the code.</li> <li>The third command starts Doc\u00b2 in development mode.</li> </ul> <pre><code>lerna bootstrap --hoist\nnpm run build\nnpm run dev\n</code></pre>  </li> <li> <p>Open your browser and go to localhost:8080 and you should be able to see the Editor UI.</p> </li> <li>Open the Create Node menu, type <code>FriendGrid</code>, and click on it to add the node to the Editor UI.</li> </ol> <p>Notes - On startup, Doc\u00b2 will load all the nodes and credentials (more about credentials later) that are registered in <code>/packages/nodes-base/package.json</code>. - The property <code>description.name</code> uses camelCase. - The property <code>description.color</code> is the company branding's hexadecimal color. This is usually available on the company's website under style guide. In case the website does not include this information, there are other websites that help you get a company\u2019s branding colors. For example, brandpalettes.com.</p>","title":"Adding the node to Editor UI"},{"location":"workflow/integrations/creating-nodes/code/create-first-node/#creating-the-ui-for-the-node","text":"<p>Double-clicking on the FriendGrid node will open the Node Editor View. It will be empty since we haven't added any UI components yet. Luckily, Doc\u00b2 provides predefined JSON-based UI components that we can use to ask the user for different types of data.</p> <p>SendGrid's docs mention that to create a contact, we need to provide the following pieces of information:</p> <ul> <li>email - Required</li> <li>first_name - Optional</li> <li>last_name - Optional</li> </ul> <p>There are more parameters that can be provided to create a contact in FriendGrid, but we will use only these three in this tutorial.</p>","title":"Creating the UI for the node"},{"location":"workflow/integrations/creating-nodes/code/create-first-node/#resources-and-operations","text":"<p>Now, Doc\u00b2 requires a couple of parameters as well:</p> <ul> <li>resource - Required</li> <li>operation - Required</li> </ul> <p>You can get the node to work without these two parameters, but these should be added for the sake of consistency with the other nodes. Resources and Operations help in organizing all the functionalities of a node. These ensure that all the functionalities of a node remain easily discoverable as the node grows.</p> <ul> <li>The resource value is always singular and its value is the name of the API resource that we want to use. Since we are working with contacts, the resource value would be <code>contact</code>.</li> <li>The operation value is always singular as well and it is the name of the operation to perform over the resource. Since we are creating contacts, the operation value would be <code>create</code>.</li> </ul> <p>You might say that you can \u201cAdd a contact\u201d and you are right, but we try to use the same operations (create, delete, get, getAll and update) across all the nodes.</p>","title":"Resources and operations"},{"location":"workflow/integrations/creating-nodes/code/create-first-node/#adding-required-fields","text":"<p>Let\u2019s make the Node Editor View ask for these parameters:</p> <ol> <li>Add the following under <code>description.properties</code> in <code>packages/nodes-base/nodes/FriendGrid/FriendGrid.node.ts</code>.</li> </ol> <pre><code>{\n    displayName: 'Resource',\n    name: 'resource',\n    type: 'options',\n    options: [\n        {\n            name: 'Contact',\n            value: 'contact',\n        },\n    ],\n    default: 'contact',\n    required: true,\n    description: 'Resource to consume',\n},\n{\n    displayName: 'Operation',\n    name: 'operation',\n    type: 'options',\n    displayOptions: {\n        show: {\n            resource: [\n                'contact',\n            ],\n        },\n    },\n    options: [\n        {\n            name: 'Create',\n            value: 'create',\n            description: 'Create a contact',\n        },\n    ],\n    default: 'create',\n    description: 'The operation to perform.',\n},\n{\n    displayName: 'Email',\n    name: 'email',\n    type: 'string',\n    required: true,\n    displayOptions: {\n        show: {\n            operation: [\n                'create',\n            ],\n            resource: [\n                'contact',\n            ],\n        },\n    },\n    default:'',\n    description:'Primary email for the contact',\n},\n</code></pre>  <ol> <li>Stop the current Doc\u00b2 process by pressing ctrl + c in the terminal in which you are running Workflow\u00b2.</li> <li>Run again, by entering the following in the terminal.     <pre><code>npm run dev\n</code></pre> </li> <li>Go to localhost:8080, refresh the page, and open the node again.</li> </ol> <p>The node should now look like in the following image.</p> <p></p>","title":"Adding required fields"},{"location":"workflow/integrations/creating-nodes/code/create-first-node/#adding-optional-fields","text":"<p>We have given the node the possibility to ask for all the required parameters needed to create a contact. But, what about the optional parameters?</p> <p>We can add them below the email parameter and set <code>required: false</code>. However, if we had more than two optional parameters, and most APIs do, the UI would become overwhelming for the users. To avoid this, we use a UI element named collection (usually called 'Additional Fields') to group all the optional parameters together.</p> <ol> <li> <p>Add the following below the <code>email</code> field in <code>packages/nodes-base/nodes/FriendGrid/FriendGrid.node.ts</code>.</p> <pre><code>{\n    displayName: 'Additional Fields',\n    name: 'additionalFields',\n    type: 'collection',\n    placeholder: 'Add Field',\n    default: {},\n    displayOptions: {\n        show: {\n            resource: [\n                'contact',\n            ],\n            operation: [\n                'create',\n            ],\n        },\n    },\n    options: [\n        {\n            displayName: 'First Name',\n            name: 'firstName',\n            type: 'string',\n            default: '',\n        },\n        {\n            displayName: 'Last Name',\n            name: 'lastName',\n            type: 'string',\n            default: '',\n        },\n    ],\n},\n</code></pre>  </li> <li> <p>Stop the current Doc\u00b2 process by pressing ctrl + c in the terminal in which you are running Workflow\u00b2.</p> </li> <li>Run again, by entering the following in the terminal.     <pre><code>npm run dev\n</code></pre> </li> <li>Go to localhost:8080, refresh the page, and open the node again.</li> </ol> <p>The node should now look like in the following image.</p> <p></p> <p>Now all our optional fields are presented in the UI and can be set individually depending on the user\u2019s use-case.</p>","title":"Adding optional fields"},{"location":"workflow/integrations/creating-nodes/code/create-first-node/#creating-the-ui-for-credentials","text":"<p>Most REST APIs use some sort of authentication mechanism. FriendGrid's REST API uses API Keys. The API Key informs them about who is making the request to their system and gives you access to all the functionality that the API provides. Given all the things it can do, this has to be treated as a sensitive piece of information and should be kept private.</p> <p>n8n gives you the ability to ask for sensitive information using credentials. In the credentials, you can use all the generally available UI elements. Additionally, the data that is stored using the credentials would be encrypted before being saved to the database. In order to do that, Doc\u00b2 uses an encryption key.</p> <p>With that in mind, let\u2019s create the UI to ask for the user\u2019s FriendGrid API Key. The process of creating and registering credentials is similar to that of creating and registering the node:</p> <ol> <li>Go to <code>packages/nodes-base/credentials</code>.</li> <li>Within the credentials folder, create a file named <code>FriendGridApi.credentials.ts</code>.</li> <li>Paste the following code.</li> </ol> <pre><code>import {\n    ICredentialType,\n    NodePropertyTypes,\n} from 'n8n-workflow';\n\nexport class FriendGridApi implements ICredentialType {\n    name = 'friendGridApi';\n    displayName = 'FriendGrid API';\n    documentationUrl = 'friendGrid';\n    properties = [\n        {\n            displayName: 'API Key',\n            name: 'apiKey',\n            type: 'string' as NodePropertyTypes,\n            default: '',\n        },\n    ];\n}\n</code></pre>  <ol> <li>Go to <code>/packages/nodes-base/package.json</code>.</li> <li>Paste <code>\"dist/credentials/FriendGridApi.credentials.js\",</code> in the credentials array to register the credentials (in an alphabetical order).</li> <li>Got to <code>packages/nodes-base/nodes/FriendGrid/FriendGrid.node.ts</code>.</li> <li> <p>Associate the credentials with the node by adding the following to <code>description.credentials</code>.</p> <pre><code>{\n    name: 'friendGridApi',\n    required: true,\n},\n</code></pre>  </li> <li> <p>Stop the current Doc\u00b2 process by pressing ctrl + c in the terminal in which you are running Workflow\u00b2.</p> </li> <li>Run again, by entering the following in the terminal.     <pre><code>npm run dev\n</code></pre> </li> </ol> <p>When you go to the Node Editor view, you should see the following.</p> <p></p> <p></p>","title":"Creating the UI for credentials"},{"location":"workflow/integrations/creating-nodes/code/create-first-node/#mapping-the-ui-fields-to-the-api","text":"<p>With the UI that we added, we now have all the data that we need to make a request to the FriendGrid API and create contacts.</p> <p>This is where the <code>execute</code> method comes into play. Every time the node is executed, this method will be run. Within this method, we can have access to the input items and to the parameters that the user set in the UI, including the credentials. To map the fields to the API, perform the following steps:</p> <ol> <li>Go to <code>package/nodes-base/nodes/FriendGrid.node.ts</code>.</li> <li>Replace the current <code>execute</code> method with the following code.</li> </ol> <pre><code>async execute(this: IExecuteFunctions): Promise&lt;INodeExecutionData[][]&gt; {\n    let responseData;\n    const resource = this.getNodeParameter('resource', 0) as string;\n    const operation = this.getNodeParameter('operation', 0) as string;\n    //Get credentials the user provided for this node\n    const credentials = await this.getCredentials('friendGridApi') as IDataObject;\n\n    if (resource === 'contact') {\n        if (operation === 'create') {\n            // get email input\n            const email = this.getNodeParameter('email', 0) as string;\n            // get additional fields input\n            const additionalFields = this.getNodeParameter('additionalFields', 0) as IDataObject;\n            const data: IDataObject = {\n                email,\n            };\n\n            Object.assign(data, additionalFields);\n\n            //Make http request according to &lt;https://sendgrid.com/docs/api-reference/&gt;\n            const options: OptionsWithUri = {\n                headers: {\n                    'Accept': 'application/json',\n                    'Authorization': `Bearer ${credentials.apiKey}`,\n                },\n                method: 'PUT',\n                body: {\n                    contacts: [\n                        data,\n                    ],\n                },\n                uri: `https://api.sendgrid.com/v3/marketing/contacts`,\n                json: true,\n            };\n\n            responseData = await this.helpers.request(options);\n        }\n    }\n\n    // Map data to Doc\u00b2 data\n    return [this.helpers.returnJsonArray(responseData)];\n}\n</code></pre>  <ol> <li>Stop the current Doc\u00b2 process by pressing ctrl + c in the terminal in which you are running Workflow\u00b2.</li> <li>Run again, by entering the following in the terminal.     <pre><code>npm run dev\n</code></pre> </li> <li>Enter the credentials (FriendGrid API Key), contact parameters, and execute the node.<ul> <li>Instructions to find the FriendGrid API Key can be found here.</li> </ul> </li> </ol> <p>If everything went well, you should see the following.</p> <p></p> <p>Now we can successfully create contacts in FriendGrid from Workflow\u00b2.</p>","title":"Mapping the UI fields to the API"},{"location":"workflow/integrations/creating-nodes/code/create-first-node/#processing-multiples-items","text":"<p>In real life, you'll probably have a workflow with more than one node. Our current implementation does not play well with the other nodes. If the data is coming into our FriendGrid node from another node, and that outputs, for example, two contacts, our node will process just the first contact. We want our node to process as many items as it receives.</p> <p>This is when the <code>this.getInputData()</code> function comes into play. Let's update our node so that it can process multiple items.</p> <ol> <li>In the Editor UI, create a new workflow. Add a Function node and connect it to the Start node.</li> <li>Open the function node and replace the existing code with the following.</li> </ol> <pre><code> return [\n  {\n    json: {\n      name: 'ricardo@n8n.io'\n    }\n  },\n    {\n    json: {\n      name: 'hello@n8n.io'\n    }\n  },\n]\n</code></pre>  <ol> <li> <p>Execute the Function node. We're using the function node for testing, but you can think of it as any node that is returning \u201ctwo people\u201d (or more). These two people need to be added to FriendGrid as contacts.</p> <p></p> </li> <li> <p>Add a FriendGrid node to the workflow and connect it to the Function node. Add an expression in the Email field of the FriendGrid node and reference the name property that the Function node outputs.</p> <p></p> </li> <li> <p>Replace the existing <code>execute</code> method with the following:</p> <pre><code>async execute(this: IExecuteFunctions): Promise&lt;INodeExecutionData[][]&gt; {\n    const items = this.getInputData();\n    let responseData;\n    const returnData = [];\n    const resource = this.getNodeParameter('resource', 0) as string;\n    const operation = this.getNodeParameter('operation', 0) as string;\n    //Get credentials the user provided for this node\n    const credentials = await this.getCredentials('friendGridApi') as IDataObject;\n\n    for (let i = 0; i &lt; items.length; i++) {\n        if (resource === 'contact') {\n            if (operation === 'create') {\n                // get email input\n                const email = this.getNodeParameter('email', i) as string;\n\n                // i = 1 returns ricardo@n8n.io\n                // i = 2 returns hello@n8n.io\n\n                // get additional fields input\n                const additionalFields = this.getNodeParameter('additionalFields', i) as IDataObject;\n                const data: IDataObject = {\n                    email,\n                };\n\n                Object.assign(data, additionalFields);\n\n                //Make http request according to &lt;https://sendgrid.com/docs/api-reference/&gt;\n                const options: OptionsWithUri = {\n                    headers: {\n                        'Accept': 'application/json',\n                        'Authorization': `Bearer ${credentials.apiKey}`,\n                    },\n                    method: 'PUT',\n                    body: {\n                        contacts: [\n                            data,\n                        ],\n                    },\n                    uri: `https://api.sendgrid.com/v3/marketing/contacts`,\n                    json: true,\n                };\n\n                responseData = await this.helpers.request(options);\n                returnData.push(responseData);\n            }\n        }\n    }\n    // Map data to Doc\u00b2 data structure\n    return [this.helpers.returnJsonArray(returnData)];\n}\n</code></pre>  </li> <li> <p>Execute the workflow.</p> </li> </ol> <p>If you open the FriendGrid node, you should see the following.</p> <p>![Output of the FriendGrid node]((/_images/integrations/creating-nodes/code/final-friendgrid.png)</p> <p>As showcased above, both the items were processed. That\u2019s how all nodes in Doc\u00b2 work (with a few exceptions). They will automatically iterate over all the items and process them.</p> <p>Let\u2019s go over the final version of the <code>execute</code> method. We are getting the items returned by the <code>this.getInputData()</code> function and iterating over all of them. Additionally, while doing so, we use the item index to get the correct parameter value using the function <code>this.getNodeParameters()</code>. For example, with the following input:</p> <pre><code>[\n  {\n    json: {\n      name: 'ricardo@n8n.io'\n    }\n  },\n    {\n    json: {\n      name: 'hello@n8n.io'\n    }\n  },\n]\n</code></pre>  <p>The <code>this.getNodeParameters(ParameterName, index)</code>function outputs the following:</p>    Index Parameter Name Output     0 email ricardo@n8n.io   1 email hello@n8n.io    <p>We used the <code>this.helpers.request(options)</code> method to make the HTTP Request that creates the contact in FriendGrid. The FriendGrid endpoint returns something like this:</p> <pre><code>{\n   job_id: \"b82aca74-3640-4097-85ec-7801d833c2cb\"\n}\n</code></pre>  <p>We then used the <code>this.helpers.returnJsonArray()</code> method to map the API\u2019s output data to n8n's data structure. The node then ends up returning the data like the following:</p> <pre><code>[\n   {\n      json:{\n         job_id: \"b82aca74-3640-4097-85ec-7801d833c2cb\"\n      }\n   }\n]\n</code></pre>","title":"Processing multiples items"},{"location":"workflow/integrations/creating-nodes/code/create-first-node/#summary","text":"<p>In this tutorial, we implemented the \"Create a Contact\" functionality of the FriendGrid API. First of all, we made the node show up in the Editor UI and in the Create Node menu with FriendGrid's branding. Then, we added the fields necessary to create a contact in FriendGrid. We also added the credentials so that the API Key could be stored safely. Finally, we mapped all the parameters to the FriendGrid API.</p> <p>This is just the tip of the iceberg. We built a regular node that consumes a REST API, but a regular node can do everything that can be done with Node.js. Aside from regular nodes you can also build Trigger nodes.</p>","title":"Summary"},{"location":"workflow/integrations/creating-nodes/code/create-first-node/#next-steps","text":"<p>Once you have created the node and want to contribute to Doc\u00b2, please check the Node Review Checklist. Make sure you complete the checklist before creating a pull request.</p>","title":"Next steps"},{"location":"workflow/integrations/creating-nodes/code/create-trigger-node/","text":"<p>Today, you will learn how to create your first trigger node for Workflow\u00b2.</p>","title":"Creating Your First Trigger Node"},{"location":"workflow/integrations/creating-nodes/code/create-trigger-node/#prerequisites","text":"<p>You have knowledge of:</p> <ul> <li>JavaScript/TypeScript</li> <li>REST APIs</li> <li>Webhooks</li> <li>Expressions in n8n</li> </ul> <p>Install the following tools:</p> <ul> <li>Git: You can find instructions on how to install Git here.</li> <li> <p>Node.js and npm: You can find instructions on how to install both using nvm (Node Version Manager) here. The current minimum version is <code>14.15</code>. In case you already have Node.js and npm installed, you can check the current version with the following command:     <pre><code>node -v\nnpm -v\n</code></pre>  NOTE: Use node version <code>14.x</code> and npm version <code>6.x</code></p> </li> <li> <p>Lerna: Install lerna globally with the following command:     <pre><code>npm install --global lerna\n</code></pre> </p> </li> </ul>","title":"Prerequisites"},{"location":"workflow/integrations/creating-nodes/code/create-trigger-node/#selecting-the-node","text":"<p>The first thing that we have to do is pick the service we want to create the node for. We will use Autopilot as an example.</p> <p>Since n8n's repository already has a Autopilot Trigger node, we will name this node Autofriend Trigger to avoid conflicts.</p>","title":"Selecting the node"},{"location":"workflow/integrations/creating-nodes/code/create-trigger-node/#cloning-the-repository","text":"<p>In GitHub, fork the n8n repository. Clone it by running the following command in your terminal (don't forget to replace <code>&lt;USERNAME&gt;</code> with your GitHub username):</p> <pre><code>git clone https://github.com/&lt;USERNAME&gt;/n8n.git &amp;&amp; cd n8n\n</code></pre>  <p>n8n is built from four main packages:</p> <ul> <li>cli</li> <li>core</li> <li>editor-ui</li> <li>nodes-base</li> </ul> <p>All these packages are under the <code>/packages</code> folder in the main Doc\u00b2 folder. We will be working in the <code>nodes-base</code> folder as it contains everything related to nodes. Specifically, <code>/packages/nodes-base/nodes</code>, <code>packages/nodes-base/credentials</code>, and <code>packages/nodes-base/package.json</code>.</p> <ul> <li>The folder <code>nodes</code>, contains all the nodes in Workflow\u00b2.</li> <li>The folder <code>credentials</code> contains all the credentials that the different nodes use. Each node can define multiple credentials. For example, OAuth2 or API Key. Each credential requires different parameters that the user will have to input. The credentials data that the user provides is stored in an encrypted format in n8n's database.</li> <li>The file <code>package.json</code> contains all the npm packages that the nodes use. It also contains all the nodes and credentials that are loaded when Doc\u00b2 is started.</li> </ul> <p></p>","title":"Cloning the repository"},{"location":"workflow/integrations/creating-nodes/code/create-trigger-node/#creating-the-node","text":"<ol> <li>Go to <code>packages/nodes-base/nodes</code>.</li> <li>Create a folder called <code>Autofriend</code> (the folder names are PascalCase).</li> <li>Within the Autofriend folder, create a file called <code>AutofriendTrigger.node.ts</code> (YourNodeNameTrigger.node.ts).</li> <li>Download and add the Autofriend icon to the folder. Name it <code>autopilot.svg</code>.<ul> <li>The icon property has to be either a 60x60 pixels PNG or an SVG and must exist in the node\u2019s folder.</li> <li>An SVG is preferable. In case you have to use a PNG, make sure that it is compressed. A good tool for that is tinypng.</li> <li>A good place to find company icons is gilbarbara/logos.</li> </ul> </li> <li>Paste the following code in the <code>AutofriendTrigger.node.ts</code> file.</li> </ol> <pre><code>import {\n   IHookFunctions,\n   IWebhookFunctions,\n} from 'n8n-core';\n\nimport {\n   IDataObject,\n   INodeType,\n   INodeTypeDescription,\n   IWebhookResponseData,\n} from 'n8n-workflow';\n\n/*\nimport {\n    autofriendApiRequest,\n} from './GenericFunctions';\n\nimport {\n    snakeCase,\n} from 'change-case';\n*/\n\n\nexport class AutofriendTrigger implements INodeType {\n   description: INodeTypeDescription = {\n       displayName: 'Autofriend Trigger',\n       name: 'autofriendTrigger',\n       icon: 'file:autofriend.svg',\n       group: ['trigger'],\n       version: 1,\n       subtitle: '={{$parameter[\"event\"]}}',\n       description: 'Handle Autofriend events via webhooks',\n       defaults: {\n           name: 'Autofriend Trigger',\n           color: '#6ad7b9',\n       },\n       inputs: [],\n       outputs: ['main'],\n       credentials: [],\n       webhooks: [\n           {\n               name: 'default',\n               httpMethod: 'POST',\n               responseMode: 'onReceived',\n               path: 'webhook',\n           },\n       ],\n       properties: [],\n   };\n   async webhook(this: IWebhookFunctions): Promise&lt;IWebhookResponseData&gt; {\n       return {\n           workflowData: [],\n       };\n   }\n}\n</code></pre>  <p>Your directory structure should now look like the following.</p> <p></p>","title":"Creating the node"},{"location":"workflow/integrations/creating-nodes/code/create-trigger-node/#adding-the-node-to-editor-ui","text":"<p>n8n uses the properties set in the property <code>description</code> to render the node in the Editor UI. These properties are <code>displayName</code>, <code>name</code>, <code>color</code>, <code>icon</code>, <code>description</code>, and <code>subtitle</code>.</p> <p>Check the following figure to see how the properties affect the looks of the node.</p> <p></p> <p>Note: The property description conforms to INodeTypeDescription.</p> <p>Let's see how the node looks in the UI by following these steps:</p> <ol> <li>Go to <code>/packages/nodes-base/package.json</code>.</li> <li>Paste <code>\"dist/nodes/Autofriend/AutofriendTrigger.node.js\",</code> in the nodes array to register the node (in an alphabetical order).</li> <li>Go to the project's main folder (n8n) in the terminal and run the following commands (it can take a few minutes).<ul> <li>The first command installs all dependencies of all the modules and links them together.</li> <li>The second command builds all the code.</li> <li>The third command starts Doc\u00b2 in development mode.</li> </ul> </li> </ol> <pre><code>lerna bootstrap --hoist\nnpm run build\nnpm run dev\n</code></pre>  <ol> <li>Open your browser and go to localhost:8080 and you should be able to see the Editor UI.</li> <li>Open the Create Node menu, select the Trigger tab, type <code>Autofriend</code>, and click on it to add the node to the Editor UI.</li> </ol> <p>Notes</p> <ul> <li>On startup, Doc\u00b2 will load all the nodes and credentials (more about credentials later) that are registered in <code>/packages/nodes-base/package.json</code>.</li> <li>The property <code>description.name</code> uses camelCase.</li> <li>The property <code>description.color</code> is the company's branding color in hexadecimal. In case the website does not include this information, there are other websites that help you get a company\u2019s branding colors. For example, brandpalettes.com.</li> </ul>","title":"Adding the node to Editor UI"},{"location":"workflow/integrations/creating-nodes/code/create-trigger-node/#creating-the-ui-for-the-node","text":"<p>Double-clicking on the Autofriend Trigger node will open the Node Editor View. It will be empty since we haven't added any UI components yet. Luckily, Doc\u00b2 provides predefined JSON-based UI components that we can use to ask the user for different types of data.</p> <p>Autopilots's docs mention that to create a hook, we need to provide the following pieces of information:</p> <ul> <li>event - Required</li> <li>target_url - Required</li> </ul> <p>In the <code>event</code> parameter, we provide the name of the event for which we want to be notified. For example, <code>contact_added</code>. As the name implies, by providing <code>contact_added</code> as the event, we will be notified every time a contact is added to Autofriend.</p> <p>In the <code>target_url</code> parameter, we provide the URL where Autofriend will notify us when the event defined in the event parameter takes place. We don't need to ask the user for this parameter as Doc\u00b2 provides us with a method to obtain it.</p>","title":"Creating the UI for the node"},{"location":"workflow/integrations/creating-nodes/code/create-trigger-node/#adding-the-fields","text":"<p>Let\u2019s make the Node Editor View ask for these parameters: 1. Add the following under <code>description.properties</code> in <code>packages/nodes-base/nodes/Autofriend/AutofriendTrigger.node.ts.</code>.</p> <pre><code>{\n    displayName: 'Event',\n    name: 'event',\n    type: 'options',\n    required: true,\n    default: '',\n    options: [\n        {\n            name: 'Contact Added',\n            value: 'contactAdded',\n        },\n        {\n            name: 'Contact Added To List',\n            value: 'contactAddedToList',\n        },\n        {\n            name: 'Contact Entered Segment',\n            value: 'contactEnteredSegment',\n        },\n        {\n            name: 'Contact Left Segment',\n            value: 'contactLeftSegment',\n        },\n        {\n            name: 'Contact Removed From List',\n            value: 'contactRemovedFromList',\n        },\n        {\n            name: 'Contact Unsubscribed',\n            value: 'contactUnsubscribed',\n        },\n        {\n            name: 'Contact Updated',\n            value: 'contactUpdated',\n        },\n    ],\n},\n</code></pre>  <ol> <li>Stop the current Doc\u00b2 process by pressing <code>ctrl + c</code> in the terminal in which you are running Workflow\u00b2.</li> <li>Run again, by entering the following in the terminal. <pre><code>npm run dev\n</code></pre> </li> <li>Go to localhost:8080, refresh the page, and open the node again.</li> </ol> <p>The node should now look like in the following image.</p> <p></p>","title":"Adding the fields"},{"location":"workflow/integrations/creating-nodes/code/create-trigger-node/#creating-the-ui-for-credentials","text":"<p>Most REST APIs use some sort of authentication mechanism. Autofriend's REST API uses API Keys. The API Key informs them about who is making the request to their system and gives you access to all the functionality that the API provides. Given all the things it can do, this has to be treated as a sensitive piece of information and should be kept private.</p> <p>n8n gives you the ability to ask for sensitive information using credentials. In the credentials, you can use all the generally available UI elements. Additionally, the data that is stored using the credentials would be encrypted before being saved to the database. In order to do that, Doc\u00b2 uses an encryption key.</p> <p>With that in mind, let\u2019s create the UI to ask for the user\u2019s Autofriend API Key. The process of creating and registering credentials is similar to that of creating and registering the node:</p> <ol> <li>Go to <code>packages/nodes-base/credentials</code>.</li> <li>Within the credentials folder, create a file named <code>AutofriendApi.credentials.ts</code>.</li> <li>Paste the following code.</li> </ol> <pre><code>import {\n    ICredentialType,\n    NodePropertyTypes,\n} from 'n8n-workflow';\n\nexport class AutofriendApi implements ICredentialType {\n    name = 'autofriendApi';\n    displayName = 'Autofriend API';\n    properties = [\n        {\n            displayName: 'API Key',\n            name: 'apiKey',\n            type: 'string' as NodePropertyTypes,\n            default: '',\n        },\n    ];\n}\n</code></pre>  <ol> <li>Go to <code>/packages/nodes-base/package.json</code>.</li> <li>Paste <code>\"dist/credentials/AutofriendApi.credentials.js\",</code> in the credentials array to register the credentials (in an alphabetical order).</li> <li>Got to <code>packages/nodes-base/nodes/Autofriend/AutofriendTrigger.node.ts</code>.</li> <li>Associate the credentials with the node by adding the following to <code>description.credentials</code>.</li> </ol> <pre><code> credentials: [\n      {\n          name: 'autofriendApi',\n          required: true,\n      },\n],\n</code></pre>  <ol> <li>Stop the current Doc\u00b2 process by pressing <code>ctrl + c</code> in the terminal in which you are running Workflow\u00b2.</li> <li>Run again, by entering the following in the terminal. <pre><code>npm run dev\n</code></pre> </li> </ol> <p>When you go to the Node Editor view, you should see the following.</p> <p></p> <p></p>","title":"Creating the UI for credentials"},{"location":"workflow/integrations/creating-nodes/code/create-trigger-node/#understanding-the-life-cycle-for-the-webhook-method","text":"<p>When a Trigger node is executed either in test or production mode, the following happens:</p>","title":"Understanding the life cycle for the webhook method"},{"location":"workflow/integrations/creating-nodes/code/create-trigger-node/#doc2-persists-all-the-webhooks-defined-in-descriptionwebhooks","text":"<p>The persisted data will be used later to verify if the incoming requests to the n8n\u2019s webhook endpoint are valid.</p> <p>The property webhooks implements the interface IWebhookDescription. The interface has four properties.</p> <ol> <li>name: The property name where Doc\u00b2 will look for the life cycle methods.</li> <li>httpMethod: The HTTP method.</li> <li>responseMode: When the trigger will respond. When developing a trigger node, this property must be set to <code>onReceived</code>.</li> <li>path: The path added to the base URL.</li> </ol> <p>For example, for a Trigger node with the following <code>webhooks</code> property, Doc\u00b2 will create the following webhooks URLs.</p> <pre><code>webhooks: [\n    {\n        name: 'default',\n        httpMethod: 'POST',\n        responseMethod: 'onReceived',\n        path: 'webhook',\n    },\n]\n</code></pre>  <ul> <li>Test: POST {{WEBHOOK_TUNNEL_URL || localhost}}/webhook-test/{{uuid}}/{{path}}</li> <li>Production: POST {{WEBHOOK_TUNNEL_URL || localhost}}/webhook/{{uuid}}/{{path}}</li> </ul> <p>These URLs can be found in the node under the <code>Webhook URLs</code> label.</p> <p>These webhook URLs will be used as the notification URL (also known as the callback URL or target URL) when creating the webhook in the external system.</p> <p>Note: In test mode, the webhooks are persisted in memory. In production mode, they are persisted in the database.</p>","title":"Doc\u00b2 persists all the webhooks defined in description.webhooks"},{"location":"workflow/integrations/creating-nodes/code/create-trigger-node/#doc2-executes-the-life-cycle-methods","text":"<p>The life cycle methods allow us to create, delete, and check if the webhook exists in the external system.</p> <p>Methods</p> <ul> <li><code>checkExist</code>: This is the first method that gets called. It checks if the webhook with the current path is already registered in the external system or not. If the webhook is already registered, Doc\u00b2 persists the webhook ID. If the webhook is not registered with the external system, the <code>create</code> method gets executed.</li> <li><code>create</code>: This method gets called if the <code>checkExist</code> method returns false (if the webhook with the current path does not exist in the external system). This method registers the webhook in the external system and stores the webhook ID in Workflow\u00b2.</li> <li><code>delete</code>: This method gets called when the trigger is either stopped manually or when the workflow is deactivated. It uses the ID previously persisted by either the create or the checkExist method to delete the webhook from the external system.</li> </ul> <p></p>","title":"Doc\u00b2 executes the life cycle methods"},{"location":"workflow/integrations/creating-nodes/code/create-trigger-node/#wait-for-new-events-to-trigger-the-workflow","text":"<p>Every time the external system notifies us about a change, by making an HTTP Request to the URL we previously registered in the <code>create</code> method, the <code>execute</code> method is called. Within this method, we have access to the request object and everything it contains. For example, body, headers, querystring, etc. The data the method returns is the data we want the rest of the workflow to have access to.</p> <p>Let\u2019s see how this would look for our current use-case:</p> <ol> <li>Go to <code>packages/nodes-base/nodes/Autofriend</code>, create a file named <code>GenericFunctions.ts</code>, and paste the following code.</li> </ol> <pre><code>import {\n    OptionsWithUri,\n} from 'request';\n\nimport {\n    IExecuteFunctions,\n    ILoadOptionsFunctions,\n} from 'n8n-core';\n\nimport {\n    IDataObject,\n    IHookFunctions,\n    IWebhookFunctions,\n} from 'n8n-workflow';\n\nexport async function autofriendApiRequest(this: IExecuteFunctions | IWebhookFunctions | IHookFunctions | ILoadOptionsFunctions, method: string, resource: string, body: any = {}, query: IDataObject = {}, uri?: string, option: IDataObject = {}): Promise&lt;any&gt; { // tslint:disable-line:no-any\n\n    const credentials = await this.getCredentials('autofriendApi') as IDataObject;\n\n    const apiKey = credentials.apiKey;\n\n    const endpoint = 'https://api2.autopilothq.com/v1';\n\n    const options: OptionsWithUri = {\n        headers: {\n            'Content-Type': 'application/json',\n            autopilotapikey: apiKey,\n        },\n        method,\n        body,\n        qs: query,\n        uri: uri || `${endpoint}${resource}`,\n        json: true,\n    };\n    if (!Object.keys(body).length) {\n        delete options.body;\n    }\n    if (!Object.keys(query).length) {\n        delete options.qs;\n    }\n\n    try {\n        return await this.helpers.request!(options);\n    } catch (error) {\n        if (error.response) {\n            const errorMessage = error.response.body.message || error.response.body.description || error.message;\n            throw new Error(`Autopilot error response [${error.statusCode}]: ${errorMessage}`);\n        }\n        throw error;\n    }\n}\n</code></pre>  <ol> <li>Go to <code>packages/nodes-base/nodes/AutofriendTrigger.node.ts</code> and add the following code after the property description.</li> </ol> <p><pre><code>// @ts-ignore\nwebhookMethods = {\n    default: {\n        async checkExists(this: IHookFunctions): Promise&lt;boolean&gt; {\n            const webhookData = this.getWorkflowStaticData('node');\n            const webhookUrl = this.getNodeWebhookUrl('default');\n            const event = this.getNodeParameter('event') as string;\n            const { hooks: webhooks } = await autofriendApiRequest.call(this, 'GET', '/hooks');\n            for (const webhook of webhooks) {\n                if (webhook.target_url === webhookUrl &amp;&amp; webhook.event === snakeCase(event)) {\n                    webhookData.webhookId = webhook.hook_id;\n                    return true;\n                }\n            }\n            return false;\n        },\n        async create(this: IHookFunctions): Promise&lt;boolean&gt; {\n            const webhookUrl = this.getNodeWebhookUrl('default');\n            const webhookData = this.getWorkflowStaticData('node');\n            const event = this.getNodeParameter('event') as string;\n            const body: IDataObject = {\n                event: snakeCase(event),\n                target_url: webhookUrl,\n            };\n            const webhook = await autofriendApiRequest.call(this, 'POST', '/hook', body);\n            webhookData.webhookId = webhook.hook_id;\n            return true;\n        },\n        async delete(this: IHookFunctions): Promise&lt;boolean&gt; {\n            const webhookData = this.getWorkflowStaticData('node');\n            try {\n                await autofriendApiRequest.call(this, 'DELETE', `/hook/${webhookData.webhookId}`);\n            } catch (error) {\n                return false;\n            }\n            delete webhookData.webhookId;\n            return true;\n        },\n    },\n};\n}\n</code></pre>  3. Replace the <code>webhook</code> function with the following. <pre><code>async webhook(this: IWebhookFunctions): Promise&lt;IWebhookResponseData&gt; {\n    const req = this.getRequestObject();\n    return {\n        workflowData: [\n            this.helpers.returnJsonArray(req.body),\n        ],\n};\n</code></pre>  4. In the same file, uncomment the code snippet on the top to import <code>autoFriendApiRequest</code> and <code>snakeCase</code>. 5. Stop the current Doc\u00b2 process by pressing <code>ctrl + c</code> in the terminal where you are running Workflow\u00b2. 6. Run the project using a tunnel by entering <code>./packages/cli/bin/n8n start --tunnel</code> in the terminal. Access the Doc\u00b2 Editor UI at localhost:5678. 7. Enter the API key in the credentials. Instructions to find the API Key can be found here. 8. Go to the workflow editor, save your workflow, and execute the node.</p> <p></p> <ol> <li>Log into Autopilot and update a contact. Keep in mind that this should be done within two minutes after you executed the node. After that time frame, the webhook will be unregistered automatically and you will not be able to receive the event. If it takes you longer than that, please execute the node and update the contact again.</li> </ol> <p></p> <p>The trigger node is now receiving events. Sometimes it might take a bit longer for the payload to arrive.</p> <p>You probably noticed that this time we did not run the project using <code>npm run dev</code>, but instead using <code>./packages/cli/bin/n8n start --tunnel</code>.</p> <p>Since our server is running locally, we need a tool that lets us proxy all requests to our local machine so that Doc\u00b2 receives and handles the events from the external service (Autopilot). This gets achieved using a tunnel. The details on how a tunnel works are out of the scope of this tutorial. If you want to know about it, you can check this link. Keep in mind that the tunnel is meant for development purposes only and should not be used in production.</p>","title":"Wait for new events to trigger the workflow"},{"location":"workflow/integrations/creating-nodes/code/create-trigger-node/#summary","text":"<p>In this tutorial, we implemented one functionality of the Autofriend webhook API. We made the node show up in the Editor UI and in the Create Node menu with Autofriend's branding. Then, we added the fields necessary to create a webhook in the external service. We also added the credentials so that the API Key could be stored safely. Finally, we mapped all the parameters to the Autofriend API.</p>","title":"Summary"},{"location":"workflow/integrations/creating-nodes/code/create-trigger-node/#next-steps","text":"<p>Once you have created the node and want to contribute to Doc\u00b2, please check the Node Review Checklist. Make sure you complete the checklist before creating a pull request.</p>","title":"Next steps"},{"location":"workflow/integrations/creating-nodes/code/create-wf-nodes-module/","text":"<p>In this guide, you\u2019ll learn to create a custom WF-nodes-module that can be installed separately alongside your Doc\u00b2 instance. The WF-nodes-module is an npm package that contains the node. Your custom node will get loaded automatically when Doc\u00b2 starts.</p> <p>Consider creating WF-nodes-module if any of the following conditions satisfy your needs: - The nodes are only for yourself, your organization, or a small group of people. - The nodes require external dependencies that are not already available in Workflow\u00b2.</p> <p>NOTE: WF-nodes-module can only be installed in self-hosted Doc\u00b2 instances. This functionality is currently not available ondoc2app.cloudintegration.eu or the desktop app. There are plans to introduce this functionality in the future.</p>","title":"Creating WF-nodes-module"},{"location":"workflow/integrations/creating-nodes/code/create-wf-nodes-module/#prerequisites","text":"<p>You may already be familiar with creating nodes in Workflow\u00b2. If you are unfamiliar with how to create Doc\u00b2 nodes, you can learn about it following the instructions mentioned in the Creating Your First Node tutorial.</p> <p>Install the following tools:</p> <ul> <li>Git: You can find instructions on how to install Git here.</li> <li>Node.js and npm: You can find instructions how to install both using nvm (Node Version Manager) here. The current minimum version is <code>14.15</code>. In case you already have Node.js and npm installed, you can check the current version with the following command:     <pre><code>node -v\nnpm -v\n</code></pre> </li> </ul> <p>NOTE: Use node version <code>14.x</code> and npm version <code>6.x</code>. If using npm version <code>7+</code>, you must enable legacy peer dependencies by setting: <code>npm config set legacy-peer-deps true</code>.</p> <ul> <li>Lerna: You can install lerna globally with the following command:     <pre><code>npm i\n</code></pre> </li> </ul>","title":"Prerequisites"},{"location":"workflow/integrations/creating-nodes/code/create-wf-nodes-module/#create-custom-wf-nodes-module","text":"<p>You can create multiple wf-nodes-modules. Each individual wf-nodes-module should get created in a separate folder since they are different npm packages. A single wf-nodes-module can contain multiple nodes. If you\u2019re creating multiple nodes in the same module, as a best practice create each node in a separate folder.</p> <p>In this tutorial, you will create an n8n-nodes-module for the OpenWeatherMap API. You will name it n8n-nodes-weather.</p> <p>To quickly get started, clone the example starter using the following command:</p> <pre><code>git clone https://github.com/n8n-io/n8n-nodes-starter.git n8n-nodes-weather.\n</code></pre>  <p>After the repo gets cloned, open the package.json file, and update the value of the name by replacing <code>n8n-nodes-starter</code> with <code>n8n-nodes-weather</code>.</p> <p>NOTE: The name of the module has to start with <code>n8n-nodes-</code>.</p> <p>Open the cloned repository in your code editor, and create a new folder called <code>Weather</code>, inside the nodes folder. Create <code>Weather.node.ts</code> file inside the Weather folder and paste the following code:</p> <pre><code>import {\n    IExecuteFunctions,\n} from 'n8n-core';\nimport {\n    IDataObject,\n    INodeExecutionData,\n    INodeType,\n    INodeTypeDescription,\n    NodeApiError,\n    NodeOperationError,\n} from 'n8n-workflow';\n\nimport { OptionsWithUri } from 'request';\n\nexport class Weather implements INodeType {\n    description: INodeTypeDescription = {\n        displayName: 'Weather',\n        name: 'Weather',\n        icon: 'fa:sun',\n        group: ['input'],\n        version: 1,\n        description: 'Gets current and future weather information',\n        defaults: {\n            name: 'Weather',\n            color: '#554455',\n        },\n        inputs: ['main'],\n        outputs: ['main'],\n        credentials: [\n            {\n                name: 'weatherApi',\n                required: true,\n            },\n        ],\n        properties: [\n            {\n                displayName: 'Operation',\n                name: 'operation',\n                type: 'options',\n                options: [\n                    {\n                        name: 'Current Weather',\n                        value: 'currentWeather',\n                        description: 'Returns the current weather data',\n                    },\n                    {\n                        name: '5 day Forecast',\n                        value: '5DayForecast',\n                        description: 'Returns the weather data for the next 5 days',\n                    },\n                ],\n                default: 'currentWeather',\n                description: 'The operation to perform.',\n            },\n            {\n                displayName: 'Format',\n                name: 'format',\n                type: 'options',\n                options: [\n                    {\n                        name: 'Imperial',\n                        value: 'imperial',\n                        description: 'Fahrenheit | miles/hour',\n                    },\n                    {\n                        name: 'Metric',\n                        value: 'metric',\n                        description: 'Celsius | meter/sec',\n                    },\n                    {\n                        name: 'Scientific',\n                        value: 'standard',\n                        description: 'Kelvin | meter/sec',\n                    },\n                ],\n                default: 'metric',\n                description: 'The format in which format the data should be returned.',\n            },\n\n            // ----------------------------------\n            //         Location Information\n            // ----------------------------------\n            {\n                displayName: 'Location Selection',\n                name: 'locationSelection',\n                type: 'options',\n                options: [\n                    {\n                        name: 'City Name',\n                        value: 'cityName',\n                    },\n                    {\n                        name: 'City ID',\n                        value: 'cityId',\n                    },\n                    {\n                        name: 'Coordinates',\n                        value: 'coordinates',\n                    },\n                    {\n                        name: 'Zip Code',\n                        value: 'zipCode',\n                    },\n                ],\n                default: 'cityName',\n                description: 'How to define the location for which to return the weather.',\n            },\n\n            {\n                displayName: 'City',\n                name: 'cityName',\n                type: 'string',\n                default: '',\n                placeholder: 'berlin,de',\n                required: true,\n                displayOptions: {\n                    show: {\n                        locationSelection: [\n                            'cityName',\n                        ],\n                    },\n                },\n                description: 'The name of the city to return the weather of.',\n            },\n\n            {\n                displayName: 'City ID',\n                name: 'cityId',\n                type: 'number',\n                default: 160001123,\n                required: true,\n                displayOptions: {\n                    show: {\n                        locationSelection: [\n                            'cityId',\n                        ],\n                    },\n                },\n                description: 'The id of city to return the weather of. List can be downloaded here: http://bulk.openweathermap.org/sample/',\n            },\n\n            {\n                displayName: 'Latitude',\n                name: 'latitude',\n                type: 'string',\n                default: '',\n                placeholder: '13.39',\n                required: true,\n                displayOptions: {\n                    show: {\n                        locationSelection: [\n                            'coordinates',\n                        ],\n                    },\n                },\n                description: 'The latitude of the location to return the weather of.',\n            },\n\n            {\n                displayName: 'Longitude',\n                name: 'longitude',\n                type: 'string',\n                default: '',\n                placeholder: '52.52',\n                required: true,\n                displayOptions: {\n                    show: {\n                        locationSelection: [\n                            'coordinates',\n                        ],\n                    },\n                },\n                description: 'The longitude of the location to return the weather of.',\n            },\n\n            {\n                displayName: 'Zip Code',\n                name: 'zipCode',\n                type: 'string',\n                default: '',\n                placeholder: '10115,de',\n                required: true,\n                displayOptions: {\n                    show: {\n                        locationSelection: [\n                            'zipCode',\n                        ],\n                    },\n                },\n                description: 'The id of city to return the weather of. List can be downloaded here: http://bulk.openweathermap.org/sample/',\n            },\n\n            {\n                displayName: 'Language',\n                name: 'language',\n                type: 'string',\n                default: '',\n                placeholder: 'en',\n                required: false,\n                description: 'The two letter language code to get your output in (eg. en, de, ...).',\n            },\n\n        ],\n    };\n\n\n    async execute(this: IExecuteFunctions): Promise&lt;INodeExecutionData[][]&gt; {\n        const items = this.getInputData();\n        const returnData: IDataObject[] = [];\n\n        const credentials = await this.getCredentials('openWeatherMapApi');\n\n        if (credentials === undefined) {\n            throw new NodeOperationError(this.getNode(), 'No credentials got returned!');\n        }\n\n        const operation = this.getNodeParameter('operation', 0) as string;\n\n        let endpoint = '';\n        let locationSelection;\n        let language;\n\n        let qs: IDataObject;\n\n        for (let i = 0; i &lt; items.length; i++) {\n\n            try {\n\n                // Set base data\n                qs = {\n                    APPID: credentials.accessToken,\n                    units: this.getNodeParameter('format', i) as string,\n                };\n\n                // Get the location\n                locationSelection = this.getNodeParameter('locationSelection', i) as string;\n                if (locationSelection === 'cityName') {\n                    qs.q = this.getNodeParameter('cityName', i) as string;\n                } else if (locationSelection === 'cityId') {\n                    qs.id = this.getNodeParameter('cityId', i) as number;\n                } else if (locationSelection === 'coordinates') {\n                    qs.lat = this.getNodeParameter('latitude', i) as string;\n                    qs.lon = this.getNodeParameter('longitude', i) as string;\n                } else if (locationSelection === 'zipCode') {\n                    qs.zip = this.getNodeParameter('zipCode', i) as string;\n                } else {\n                    throw new NodeOperationError(this.getNode(), `The locationSelection \"${locationSelection}\" is not known!`);\n                }\n\n                // Get the language\n                language = this.getNodeParameter('language', i) as string;\n                if (language) {\n                    qs.lang = language;\n                }\n\n                if (operation === 'currentWeather') {\n                    // ----------------------------------\n                    //         currentWeather\n                    // ----------------------------------\n\n                    endpoint = 'weather';\n                } else if (operation === '5DayForecast') {\n                    // ----------------------------------\n                    //         5DayForecast\n                    // ----------------------------------\n\n                    endpoint = 'forecast';\n                } else {\n                    throw new NodeOperationError(this.getNode(), `The operation \"${operation}\" is not known!`);\n                }\n\n                const options: OptionsWithUri = {\n                    method: 'GET',\n                    qs,\n                    uri: `https://api.openweathermap.org/data/2.5/${endpoint}`,\n                    json: true,\n                };\n\n                let responseData;\n                try {\n                    responseData = await this.helpers.request(options);\n                } catch (error) {\n                    throw new NodeApiError(this.getNode(), error);\n                }\n\n\n                returnData.push(responseData as IDataObject);\n\n            } catch (error) {\n                if (this.continueOnFail()) {\n                    returnData.push({json:{ error: error.message }});\n                    continue;\n                }\n                throw error;\n            }\n        }\n\n        return [this.helpers.returnJsonArray(returnData)];\n    }\n}\n</code></pre>  <p>The OpenWeatherMap API requires credentials to return results successfully. Create <code>WeatherApi.credentials.ts</code> file in the Credentials folder and paste the following code:</p> <pre><code>import {\n    ICredentialType,\n    INodeProperties,\n} from 'n8n-workflow';\n\n\nexport class WeatherApi implements ICredentialType {\n    name = 'weatherApi';\n    displayName = 'Weather API';\n    properties: INodeProperties[] = [\n        {\n            displayName: 'Access Token',\n            name: 'accessToken',\n            type: 'string',\n            default: '',\n        },\n    ];\n}\n</code></pre>  <p>Add the newly created node and the credential to the package.json file. Add <code>\"dist/nodes/Weather/Weather.node.js\"</code> to the nodes array in the n8n object (<code>n8n.nodes</code>). Similarly, add <code>\"dist/credentials/WeatherApi.credentials.js\"</code> to the credentials array in the n8n object (<code>n8n.credentials</code>).</p>","title":"Create custom wf-nodes-module"},{"location":"workflow/integrations/creating-nodes/code/create-wf-nodes-module/#develop-and-test-the-module","text":"<p>Once you\u2019ve created the n8n-nodes-module, you need to build the code and publish the package locally to test it. Run the following commands:</p> <pre><code># Install dependencies\nnpm install\n\n# Build the code\nnpm run build\n\n# \"Publish\" the package locally\nnpm link\n</code></pre>  <p>NOTE: If you get permission errors, run the command as a root user with <code>sudo</code>, for example <code>sudo npm link</code>.</p> <p>In the terminal, open the folder where you installed Workflow\u00b2. Run the following command to install the locally published module.</p> <pre><code># \"Install\" the above locally published module\nnpm link n8n-nodes-weather\n</code></pre>  <p>Start Doc\u00b2 with the below command</p> <pre><code>./node_modules/n8n/bin/n8n start\n</code></pre>  <p>You will now be able to test and use your newly created n8n-nodes-module.</p>","title":"Develop and test the module"},{"location":"workflow/integrations/creating-nodes/code/create-wf-nodes-module/#publish-the-n8n-nodes-module","text":"<p>As mentioned, the n8n-nodes-module is an npm package. To make it available to others, you can publish it to the npm registry. Refer to the Publishing unscoped public packages guide to learn about publishing packages.</p> <p>Following the steps mentioned above, you can create multiple nodes within a single n8n-nodes-module. You can also create nodes that require dependencies that are not present in Workflow\u00b2. When creating an n8n-nodes-module make sure that you follow the following guidelines:</p> <ul> <li>The name of the module should start with <code>n8n-nodes-</code>.</li> <li>The <code>package.json</code> file has to contain a key <code>n8n</code> with the paths to nodes and credentials.</li> <li>The module has to be installed alongside Workflow\u00b2.</li> </ul>","title":"Publish the n8n-nodes-module"},{"location":"workflow/integrations/creating-nodes/code/create-wf-nodes-module/#use-the-n8n-nodes-module-in-production","text":"<p>Once you test and publish your n8n-nodes-module you would want to use it in your production environment.</p> <p>If you\u2019re running Doc\u00b2 via Docker, you will have to create a Docker image with the node module installed in Workflow\u00b2. Follow the steps below to create your Docker image:</p> <ol> <li>Create a Dockerfile and paste the code from this Dockerfile.</li> <li>Add the following command in your Dockerfile before the font installation command.</li> </ol> <pre><code>RUN cd /usr/local/lib/node_modules/n8n &amp;&amp; npm install n8n-nodes-weather\n</code></pre>  <p>Your Dockerfile should be as follow:</p> <pre><code>FROM node:14.15-alpine\n\n# ARG N8N_VERSION\n\nRUN if [ -z \"$N8N_VERSION\" ] ; then echo \"The N8N_VERSION argument is missing!\" ; exit 1; fi\n\n# Update everything and install needed dependencies\nRUN apk add --update graphicsmagick tzdata git tini su-exec\n\n# # Set a custom user to not have Doc\u00b2 run as root\nUSER root\n\n# Install Doc\u00b2 and the also temporary all the packages\n# it needs to build it correctly.\nRUN apk --update add --virtual build-dependencies python build-base ca-certificates &amp;&amp; \\\n    npm_config_user=root npm install -g full-icu Doc\u00b2 &amp;&amp; ls -a &amp;&amp; \\\n    apk del build-dependencies \\\n    &amp;&amp; rm -rf /root /tmp/* /var/cache/apk/* &amp;&amp; mkdir /root;\n\n# Install n8n-nodes-weather module\nRUN cd /usr/local/lib/node_modules/n8n &amp;&amp; npm install n8n-nodes-weather\n\n# Install fonts\nRUN apk --no-cache add --virtual fonts msttcorefonts-installer fontconfig &amp;&amp; \\\n    update-ms-fonts &amp;&amp; \\\n    fc-cache -f &amp;&amp; \\\n    apk del fonts &amp;&amp; \\\n    find  /usr/share/fonts/truetype/msttcorefonts/ -type l -exec unlink {} \\; \\\n    &amp;&amp; rm -rf /root /tmp/* /var/cache/apk/* &amp;&amp; mkdir /root\n\nENV NODE_ICU_DATA /usr/local/lib/node_modules/full-icu\n\nWORKDIR /data\n\nCOPY docker-entrypoint.sh /docker-entrypoint.sh\nRUN chmod +x /docker-entrypoint.sh\nENTRYPOINT [\"tini\", \"--\", \"/docker-entrypoint.sh\"]\n\nEXPOSE 5678/tcp\n</code></pre>  <p>NOTE: Replace n8n-nodes-weather with the name of your n8n-nodes-module</p> <ol> <li>Build your Docker image using the <code>docker build .</code> command.</li> </ol> <p>You will now be able to use your n8n-nodes-module in Docker.</p> <p>If you\u2019re running either by installing it globally or via PM2, make sure that you install your n8n-nodes-module inside Workflow\u00b2. Doc\u00b2 will find the module and load it automatically.</p>","title":"Use the n8n-nodes-module in production"},{"location":"workflow/integrations/creating-nodes/code/http-helpers/","tags":["Workflow\u00b2","HTTP Requests"],"text":"<p>While creating nodes it is very commonn to call external APIs or make HTTP requests to other services.</p> <p>This plays a major role during node development, maintenance, and improvements.</p> <p>We provide a very flexible helper for making HTTP requests that abstracts away most of the complexity with a simple to use interface.</p>","title":"Making HTTP Requests"},{"location":"workflow/integrations/creating-nodes/code/http-helpers/#how-to-use","tags":["Workflow\u00b2","HTTP Requests"],"text":"<p>In the node code, inside the <code>execute</code> function you can easily call:</p> <pre><code>const response = await this.helpers.httpRequest(options);\n</code></pre>  <p>Where <code>options</code> is an object in this format:</p> <pre><code>{\n    url: string;\n    headers?: object;\n    method?: 'GET' | 'POST' | 'PUT' | 'DELETE' | 'HEAD';\n    body?: FormData | Array | string | number | object | Buffer | URLSearchParams;\n    qs?: object;\n    arrayFormat?: 'indices' | 'brackets' | 'repeat' | 'comma';\n    auth?: {\n        username: string,\n        password: string,\n    };\n    disableFollowRedirect?: boolean;\n    encoding?: 'arraybuffer' | 'blob' | 'document' | 'json' | 'text' | 'stream';\n    skipSslCertificateValidation?: boolean;\n    returnFullResponse?: boolean;\n    proxy?: {\n        host: string;\n        port: string | number;\n        auth?: {\n            username: string;\n            password: string;\n        },\n        protocol?: string;\n    };\n    timeout?: number;\n    json?: boolean;\n}   \n</code></pre>  <p>Where <code>url</code> is the only mandatory field. The default method is <code>GET</code>.</p> <p>Some notes about the possible fields:</p> <ul> <li>body: You can use a regular Javascript Object for JSON payload, a Buffer for file uploads, an instance of FormData for <code>multipart/form-data</code> and <code>URLSearchParams</code> for <code>application/x-www-form-urlencoded</code>.</li> <li>headers: A simple key-value pair.  <ul> <li>If <code>body</code> is an instance of <code>FormData</code> then <code>content-type: multipart/form-data</code> is injected automatically.  </li> <li>If <code>body</code> is an instance of <code>URLSearchParams</code>, then <code>content-type: application/x-www-form-urlencoded</code> is added.  </li> <li>To override this behavior, you can set any <code>content-type</code> header you wish and it won't be overridden.</li> </ul> </li> <li>arrayFormat: If your query string contains an array of data, let's say <code>const qs = {IDs: [15,17]}</code>, the values set to <code>arrayFormat</code> define how it will be sent.  <ul> <li><code>indices</code> (default): <code>{ a: ['b', 'c'] }</code> will be formatted as <code>a[0]=b&amp;a[1]=c</code> </li> <li><code>brackets</code>: <code>{ a: ['b', 'c'] }</code> will be formatted as <code>a[]=b&amp;a[]=c</code> </li> <li><code>repeat</code>: <code>{ a: ['b', 'c'] }</code> will be formatted as <code>a=b&amp;a=c</code> </li> <li><code>comma</code>: <code>{ a: ['b', 'c'] }</code> will be formatted as <code>a=b,c</code></li> </ul> </li> <li>auth: Used for Basic auth. Provide <code>username</code> and <code>password</code>.</li> <li>disableFollowRedirect: By default, we'll follow redirects. You can set this to false to prevent this from happening</li> <li>skipSslCertificateValidation: Used for calling HTTPS services without proper certificate</li> <li>returnFullResponse: Instead of returning only the body, returns an object with more data in the following format: <code>{body: body, headers: object, statusCode: 200, statusMessage: 'OK'}</code></li> <li>encoding: We usually detect the content type correctly but you can specify <code>arrayBuffer</code> to receive a Buffer you can read from and interact with.</li> </ul>","title":"How to use"},{"location":"workflow/integrations/creating-nodes/code/http-helpers/#deprecation-of-the-previous-helper","tags":["Workflow\u00b2","HTTP Requests"],"text":"<p>The previous helper implementation using <code>this.helpers.request(options)</code> used and exposed the <code>request-promise</code> library which was deprecated.</p> <p>In an effort to keep maximum compatibility, we made a transparent conversion to another library called <code>axios</code>.</p> <p>If you are having issues, please report them in our Community Forums or on Github.</p> <p>Also, you can temporarily enable Doc\u00b2 to use the deprecated library by setting the environment variable <code>N8N_USE_DEPRECATED_REQUEST_LIB=true</code>.</p> <p>Please note: This behavior is permanent and we will be removing the <code>request-promise</code> library entirely in the future so please report any errors you have so we can fix them.</p>","title":"Deprecation of the previous helper"},{"location":"workflow/integrations/creating-nodes/code/http-helpers/#migration-guide-to-the-new-helper","tags":["Workflow\u00b2","HTTP Requests"],"text":"<p>As mentioned above, the previous helper is deprecated and will be replaced in the future. The new helper is much more robust, library agnostic, and easier to use.</p> <p>New nodes should all use the new helper, and if you have built custom nodes we strongly suggest you migrate to the new helper. Here are the main considerations when migrating:</p> <ul> <li>Only <code>url</code> is accepted. Previously <code>uri</code> was also accepted</li> <li><code>encoding: null</code> now must be <code>encoding: arrayBuffer</code></li> <li><code>rejectUnauthorized: false</code> is now <code>skipSslCertificateValidation: true</code></li> <li>Use <code>body</code> according to <code>content-type</code> headers to clarify what is being sent</li> <li><code>resolveWithFullResponse</code> is now <code>returnFullResponse</code> and has similar behavior</li> </ul>","title":"Migration guide to the new helper"},{"location":"workflow/integrations/creating-nodes/code/http-helpers/#example","tags":["Workflow\u00b2","HTTP Requests"],"text":"<p>For an example, please check the Mattermost node.</p>","title":"Example"},{"location":"workflow/integrations/creating-nodes/code/node-developer-cli/","text":"<p>Using the Node Dev CLI makes sense if you do not want to ever share the node that you create. For example, for internal systems or something very specific to your internal tooling. Also, the CLI only works if there are no additional dependencies required by the node as it does not support installing additional node modules.</p> <p>If that is not the case, it is best to do follow the creating your first node tutorial or create your own custom node-package.</p>","title":"Using the Node Dev CLI"},{"location":"workflow/integrations/creating-nodes/code/node-developer-cli/#create-the-first-basic-node","text":"<ol> <li>Install the n8n-node-dev CLI: <code>npm install -g n8n-node-dev</code></li> <li>Create and go into the newly created folder in which you want to keep the code of the node</li> <li>Use CLI to create boilerplate node code: <code>n8n-node-dev new</code></li> <li>Answer the questions (the \u201cExecute\u201d node type is the regular node type that you probably want to create).     It will then create the node in the current folder.</li> <li>Program\u2026 Add the functionality to the node</li> <li>Build the node and copy to correct location: <code>n8n-node-dev build</code>     That command will build the JavaScript version of the node from the TypeScript code and copy it to the user folder where custom nodes get read from <code>~/.n8n/custom/</code></li> <li>Restart Doc\u00b2 and refresh the window so that the new node gets displayed</li> </ol>","title":"Create the first basic node"},{"location":"workflow/integrations/creating-nodes/code/node-developer-cli/#create-own-custom-n8n-nodes-module","text":"<p>If you want to create multiple custom nodes which are either:</p> <ul> <li>Only for yourself/your company</li> <li>Are only useful for a small number of people</li> <li>Require many or large dependencies</li> </ul>  <p>Note</p> <p>To learn how to develop and test n8n-nodes-module, refer to the Create n8n-nodes-module documentation.</p>  <p>It is best to create your own <code>n8n-nodes-module</code> which can be installed separately. That is an npm package that contains the nodes and is set up in a way that Doc\u00b2 can automatically find and load them on startup.</p> <p>When creating such a module the following rules have to be followed that n8n can automatically find the nodes in the module:</p> <ul> <li>The name of the module has to start with <code>n8n-nodes-</code></li> <li>The <code>package.json</code> file has to contain a key <code>n8n</code> with the paths to nodes and credentials</li> <li>The module has to be installed alongside n8n</li> </ul> <p>An example starter module which contains one node and credentials and implements the above can be found here:</p> <p>https://github.com/n8n-io/n8n-nodes-starter</p>","title":"Create own custom n8n-nodes-module"},{"location":"workflow/integrations/creating-nodes/code/node-developer-cli/#setup-to-use-n8n-nodes-module","text":"<p>To use a custom <code>n8n-nodes-module</code>, it needs to be installed alongside Workflow\u00b2. For example like this:</p> <pre><code># Create folder for Doc\u00b2 installation\nmkdir my-n8n\ncd my-n8n\n\n# Install n8n\nnpm install n8n\n\n# Install custom nodes module\nnpm install n8n-nodes-my-custom-nodes\n\n# Start n8n\nn8n\n</code></pre>","title":"Setup to use n8n-nodes-module"},{"location":"workflow/integrations/creating-nodes/code/node-developer-cli/#developmenttesting-of-custom-n8n-nodes-module","text":"<p>This works in the same way as for any other npm module.</p> <p>Execute in the folder which contains the code of the custom <code>n8n-nodes-module</code> which should be loaded with n8n:</p> <pre><code># Build the code\nnpm run build\n\n# \"Publish\" the package locally\nnpm link\n</code></pre>  <p>Then in the folder in which Doc\u00b2 is installed:</p> <pre><code># \"Install\" the above locally published module\nnpm link n8n-nodes-my-custom-nodes\n\n# Start n8n\nn8n\n</code></pre>","title":"Development/Testing of custom n8n-nodes-module"},{"location":"workflow/integrations/creating-nodes/code/node-linter/","text":"<p>Nodelinter is an extensible static analysis tool for checking your Doc\u00b2 node files to ensure Doc\u00b2 recommended best practices are followed when developing new nodes.</p> <p>This includes rules for: * Alphabetization of node parameters and options * Casing for display names and descriptions * Default values per parameter type * Required and optional key-value pairs</p> <p>See the full linting list here for more details.</p>","title":"Nodelinter"},{"location":"workflow/integrations/creating-nodes/code/node-linter/#installation-and-usage","text":"<p>Nodelinter is a dependency of the <code>nodes-base</code> package and available upon activating Workflow\u00b2.</p> <p>You can run Nodelinter from the <code>packages/nodes-base</code> directory as follows:</p> <pre><code>npm run nodelinter -- --&lt;options&gt;\n</code></pre>   <p>Keep in mind</p>  <p>Be sure to run Nodelinter and verify your code before submitting a pull request.</p>","title":"Installation and Usage"},{"location":"workflow/integrations/creating-nodes/code/node-linter/#options","text":"Option Description Example     <code>--target</code> Path of the file or directory to lint Lint a single file:<code>--target=nodes/Stripe/Stripe.node.ts</code> Lint all files in a directory:<code>--target=nodes/Stripe</code>   <code>--config</code> Path of the custom config to use <code>--config=/Users/john/Documents/myConfig.json</code>   <code>--patterns</code> Lintable file patterns <code>--patterns:.node.ts,Description.ts</code>   <code>--print</code> Print output to JSONA custom filename can optionally be specified. <code>--print=myLintOutput</code>   <code>--errors-only</code> Enable error logs only    <code>--warnings-only</code> Enable warning logs only    <code>--infos-only</code> Enable info logs only","title":"Options"},{"location":"workflow/integrations/creating-nodes/code/node-linter/#custom-config","text":"<p>The Nodelinter default config can be overridden to, for example, change the areas and issues linted.</p> <p>To do so create a JSON file containing the key values you want to override. For example:</p> <pre><code>{\n  \"target\": \"/Users/john/n8n/packages/nodes-base/nodes/Notion/Notion.node.ts\",\n  \"patterns\": [\".node.ts\"],\n  \"sortMethod\": \"lineNumber\",\n  \"lintings\": {\n    \"PARAM_DESCRIPTION_MISSING_WHERE_OPTIONAL\": {\n      \"enabled\": false\n    },\n    \"NAME_WITH_NO_CAMELCASE\": {\n      \"enabled\": false\n    }\n  }\n}\n</code></pre>  <p>Name this file <code>nodelinter.config.json</code> and place it anywhere in your <code>nodes-base</code> directory and it will be automatically detected. Alternatively, you can specify the custom config file and location using the <code>--config</code> option.</p>","title":"Custom config"},{"location":"workflow/integrations/creating-nodes/code/node-linter/#lint-exceptions","text":"<p>You can create exceptions for individual lines of code from any or all linting rules as follows:</p> <pre><code>// nodelinter-ignore-next-line &lt;LINTING_NAME&gt; &lt;LINTING_NAME&gt;\n</code></pre>  <p>If no specific linting name is provided that line will be excepted from all rules. For example:</p> <p>Exception for one rule: <pre><code>// nodelinter-ignore-next-line PARAM_DESCRIPTION_WITH_EXCESS_WHITESPACE\ndescription: 'Time zone used in the response.    The default is the time zone of the calendar.',\n</code></pre> </p> <p>Exception for all rules: <pre><code>// nodelinter-ignore-next-line\ndescription: 'Time zone used in the response.    The default is the time zone of the calendar.',\n</code></pre> </p>","title":"Lint exceptions"},{"location":"workflow/integrations/creating-nodes/code/review-checklist/","text":"<p>If you want to create a new node for a service - that's great, thank you! We recommend you take a look at the existing nodes to get an idea of how your code should look and work like.</p> <p>There are several things to keep in mind when creating the node. To help you, we prepared a checklist that covers the requirements for creating nodes, from preparation to submission.</p> <p>Make sure you tick the boxes below before submitting a node for review, as this will help our team review your PR easier and faster.</p>","title":"Node Review Checklist"},{"location":"workflow/integrations/creating-nodes/code/review-checklist/#preparation","text":"<p> Set up your editor for code formatting (indentation, new lines, linting). If you use Visual Studio Code, you can use the TSLint extension for linting.   Get credentials (e.g., Client ID, Client Secret, API key, user login, user password, website URL) for the service you are building a node for.</p>","title":"Preparation"},{"location":"workflow/integrations/creating-nodes/code/review-checklist/#development","text":"<p> Open a pull request as early as possible with <code>WIP</code> in the pull request title.  If you are creating a node requested by a community member, make sure to comment on the feature request in the community forum.  Ensure complementary operations to each resource (e.g., create, delete) have been added.  Ensure the node works with multiple items via one input.  Ensure the parameters have the correct type.  Mind the defaults: if the service has a default as true, keep it as true. Changing default values can break the existing workflows of the users.  Check if the node disposes of everything properly, in particular, if connections were properly closed.  Check your code using Nodelinter to ensure a clean lint before submitting your pull request</p>","title":"Development"},{"location":"workflow/integrations/creating-nodes/code/review-checklist/#testing","text":"<p> Test \"create\" and \"update\" operations with all fields/operations.  Test the <code>continueOnFail</code> option with a Function node. (For example, a Widget node has a GET operation that takes a widgetId and returns information on the widget. To test that the workflow continues on fail, set the Widget node to continue on fail, create a Function node, return a valid and an invalid widgetId, connect the Function node to Widget node, and run the workflow. The Widget node should show two items: one with information on the widget and another one with the error from having passed an invalid ID.)</p>","title":"Testing"},{"location":"workflow/integrations/creating-nodes/code/review-checklist/#code-formatting","text":"<p> Ensure the branch lints cleanly by running <code>npm run lint</code>.  Ensure the indentation is correct. Check this in the editorconfig.  Ensure there are no extra spaces. Check this in the editorconfig.  Code comment dividers inside if-branches.  Use \"create/delete\" verbs for operations, except for tags, where you should use \"add/remove\".</p>","title":"Code formatting"},{"location":"workflow/integrations/creating-nodes/code/review-checklist/#errors-and-outputs","text":"<p> Ensure empty API responses return <code>{ success: true }</code>.  Ensure the error responses are handled and displayed correctly (e.g., malformed requests, requests with invalid credentials) and use the current format. You can check this by making failing requests to the API.  Check if the response can be simplified and add a simplify function (e.g., SecurityScorecard node).  Ensure the response from <code>Create</code> is consistent with <code>Get</code>.  Ensure the response from <code>Get All</code> is consistent with <code>Get</code>.</p>","title":"Errors and Outputs"},{"location":"workflow/integrations/creating-nodes/code/review-checklist/#presentation","text":"<p> Ensure the primary menu contains only required parameters.  Ensure a JSON object is not shown in a single column in Table view.  Make sure all GetAll operations have the fields <code>return</code> and <code>limit</code>.  Ensure the property subtitle is set.  Make sure the pagination (if any) is working correctly. Set Limit 1.</p>","title":"Presentation"},{"location":"workflow/integrations/creating-nodes/code/review-checklist/#writing","text":"<p> Ensure all descriptions are correct and end with a period.  Ensure that most descriptions exist, excluding redundant ones.  Ensure IDs in displayNames are capitalized (i.e.: \"IDs\", not \"ids\" or \"Ids\").  Ensure that IDs, if multiple, have descriptive qualifiers.  Ensure the <code>name</code> property in <code>description</code> in the node class is written in camelCase.  Ensure the file name and the Class name are identical.</p>","title":"Writing"},{"location":"workflow/integrations/creating-nodes/code/review-checklist/#branding","text":"<p> Ensure the name of the service is written correctly (e.g., \"GitHub\" not \"Github\"). If the node is a trigger node, ensure it is named as such, by adding \"Trigger\" after the service name (e.g., \"Trello Trigger\").  Ensure the logo is either a PNG or SVG, ideally the latter. Vecta is a good website to find SVGs of different applications.  If the logo is an SVG, ensure the canvas is a perfect square. If the logo is PNG, ensure it is 60x60 pixels and compressed.  Ensure the border color of the node matches the branding of the service.</p>","title":"Branding"},{"location":"workflow/integrations/creating-nodes/code/review-checklist/#nice-to-haves-optional","text":"<p> Add handler for <code>continueOnFail</code>. This feature is included in some of the newest nodes (e.g Lemlist node) to continue the workflow even if the node's execution fails.  Remove <code>required: false</code> and <code>description: ''</code> in the node descriptions (e.g., Lemlist node).  At call site, specify first <code>body</code> and then <code>qs</code>.  At call site, prepend the endpoint with slash <code>/</code> (e.g., \"/campaign\").</p>","title":"Nice-to-haves (optional)"},{"location":"workflow/integrations/creating-nodes/code/standards/","text":"<p>Please make sure that everything works correctly and that no unnecessary code gets added. It is important to follow the following guidelines:</p>","title":"General Guidelines"},{"location":"workflow/integrations/creating-nodes/code/standards/#do-not-change-incoming-data","text":"<p>Never change the incoming data a node receives (which can be queried with <code>this.getInputData()</code>) as it gets shared by all nodes. If data has to get added, changed or deleted it has to be cloned and the new data returned. If that is not done, sibling nodes which execute after the current one will operate on the altered data and would process different data than they were supposed to. It is however not needed to always clone all the data. If a node for, example only, changes only the binary data but not the JSON data, a new item can be created which reuses the reference to the JSON item.</p> <p>An example can be seen in the code of the ReadBinaryFile-Node.</p>","title":"Do not change incoming data"},{"location":"workflow/integrations/creating-nodes/code/standards/#write-nodes-in-typescript","text":"<p>All code of Doc\u00b2 is written in TypeScript and hence, the nodes should also be written in TypeScript. That makes development easier, faster, and avoids at least some bugs.</p>","title":"Write nodes in TypeScript"},{"location":"workflow/integrations/creating-nodes/code/standards/#use-the-built-in-request-library","text":"<p>Some third-party services have their own libraries on npm which make it easier to create an integration. It can be quite tempting to use them. The problem with those is that you add another dependency and not only one, you add but also all the dependencies of the dependencies. This means more and more code gets added, has to get loaded, can introduce security vulnerabilities, bugs, and so on. So please use the built-in module which can be used like this:</p> <pre><code>const response = await this.helpers.httpRequest(options);\n</code></pre>  <p>The full documentation and migration instructions from the deprecated <code>this.helpers.request</code> can be found here.</p> <p>That is using the npm package <code>request-promise-native</code> which is the basic npm <code>request</code> module but with promises. For a full set of <code>options</code> consider looking at the underlying <code>request</code> options documentation.</p>","title":"Use the built in request library"},{"location":"workflow/integrations/creating-nodes/code/standards/#reuse-parameter-names","text":"<p>When a node can perform multiple operations like edit and delete some kind of entity, for both operations, it would need an entity-id. Do not call them \"editId\" and \"deleteId\", call them \"id\". Doc\u00b2 can handle multiple parameters with the same name without a problem as long as only one is visible. To make sure that is the case, the \"displayOptions\" can be used. By keeping the same name, the value can be kept if a user switches the operation from \"edit\" to \"delete\".</p>","title":"Reuse parameter names"},{"location":"workflow/integrations/creating-nodes/code/standards/#create-an-additional-fields-parameter","text":"<p>Some nodes may need a lot of options. Add only the very important ones to the top level and for all others, create an 'Additional Fields' parameter where they can be added if needed. This ensures that the interface stays clean and does not unnecessarily confuse people. A good example of that would be the XML node.</p>","title":"Create an 'Additional Fields' parameter"},{"location":"workflow/integrations/creating-nodes/code/standards/#follow-existing-parameter-naming-guideline","text":"<p>There is not much of a guideline yet but if your node can do multiple things, call the parameter which sets the behavior either \"mode\" (like \"Merge\" and \"XML\" node) or \"operation\" like the most other ones. If these operations can be done on different resources (like \"User\" or \"Order) create a \"resource\" parameter (like \"Pipedrive\" and \"Trello\" node).</p>","title":"Follow existing parameter naming guideline"},{"location":"workflow/integrations/creating-nodes/code/standards/#node-icons","text":"<p>Check existing node icons as a reference when you create own ones. The resolution of an icon should be 60x60px and saved as PNG.</p>","title":"Node icons"},{"location":"workflow/integrations/creating-nodes/code/standards/#node-versions","text":"<p>n8n now supports node versioning and it's a blast! You can make changes to existing nodes without breaking the existing behavior by introducing a new version. You can check an example of a versioned node by browsing the Mattermost node.</p> <p>Node versioning in a glimpse:</p> <ul> <li>The main node file should now extend <code>NodeVersionedType</code> instead of <code>INodeType</code></li> <li>The main node file now only contains a base description containing the <code>defaultVersion</code> (usually the latest) and a list of versions</li> <li>We recommend you use <code>v1</code>, <code>v2</code>, etc. for version folder names</li> <li>A new code separation has been created and can be seen in the Mattermost node above. Highlights:  <ul> <li><code>actions</code> folder with description and implementation of each possible action  </li> <li><code>methods</code> is an optional folder with the loading dynamic parameters' functions  </li> <li><code>transport</code> is a folder with all the communication implementation</li> </ul> </li> </ul> <p>Note: For the <code>actions</code> folder we recommend using <code>resources</code> and <code>operations</code> names as subfolders hierarchically. For the implementation an description you can use separate files. Our recommendation is to use <code>execute.ts</code> and <code>description.ts</code> as file names. This make browsing through the code a lot easier. This can be simplified for nodes that have a less complicated structure.</p>","title":"Node versions"},{"location":"workflow/integrations/creating-nodes/code/troubleshooting-node-development/","text":"","title":"Troubleshooting"},{"location":"workflow/integrations/creating-nodes/code/troubleshooting-node-development/#credentials","text":"","title":"Credentials"},{"location":"workflow/integrations/creating-nodes/code/troubleshooting-node-development/#error-message-credentials-of-type-are-not-known","text":"<p>Ensure that the name in the credentials array matches the name used in the property name of the credentials' class.</p> <p></p>","title":"Error message: 'Credentials of type \u201c*\u201d are not known'"},{"location":"workflow/integrations/creating-nodes/code/troubleshooting-node-development/#editor-ui","text":"","title":"Editor UI"},{"location":"workflow/integrations/creating-nodes/code/troubleshooting-node-development/#error-message-there-was-a-problem-loading-init-data-api-server-can-not-be-reached-it-is-probably-down","text":"<ul> <li>Ensure that the node\u2019s file name, class\u2019s name, and node\u2019s folder name matches the path added to <code>packages/nodes-base/package.json</code>.</li> <li>Ensure the names used in the <code>displayOptions</code> property are names used by UI elements in the node.</li> </ul>","title":"Error message: 'There was a problem loading init data: API-Server can not be reached. It is probably down'"},{"location":"workflow/integrations/creating-nodes/code/troubleshooting-node-development/#node-icon-doesnt-show-up-in-the-create-node-menu-and-the-editor-ui","text":"<ul> <li>Ensure that the icon is in the same folder as the node.</li> <li>Ensure that it's either in PNG or SVG format.</li> <li>When the icon is referenced in the 'icon' property, ensure that it includes the logo extension (<code>.png</code> or <code>.svg</code>) and that it is preceded by the world <code>file:</code>. For example, <code>file:friendGrid.png</code> or <code>file:friendGrid.svg</code>.</li> </ul>","title":"Node icon doesn't show up in the Create Node menu and the Editor UI"},{"location":"workflow/integrations/creating-nodes/code/troubleshooting-node-development/#node-icon-does-not-fit-correctly","text":"<ul> <li>If you are using an SVG file, make sure the canvas size is square. You can find instructions to change the canvas size of an SVG file using GIMP here.</li> <li>If you are using a PNG file, make sure that it's 60x60 pixels.</li> </ul>","title":"Node icon does not fit correctly"},{"location":"workflow/integrations/creating-nodes/code/troubleshooting-node-development/#node-does-not-show-up-in-the-create-node-menu","text":"<p>Ensure that the node is registered in the <code>packages/nodes-base/package.json</code> file.</p>","title":"Node does not show up in the Create Node menu"},{"location":"workflow/integrations/creating-nodes/code/troubleshooting-node-development/#changes-to-the-description-properties-do-not-show-in-the-ui-on-refreshing","text":"<p>Every time a change is made to the description properties, you have to stop the current Doc\u00b2 process (ctrl + c) and run it again (npm run dev).</p>","title":"Changes to the description properties do not show in the UI on refreshing"},{"location":"workflow/integrations/creating-nodes/code/ui-elements/","text":"<p>n8n provides a set of predefined UI components (based on a JSON file) that allow users to input all sorts of data types. Currently, the following UI elements are available in Workflow\u00b2.</p> <p>[[toc]]</p>","title":"Node UI Elements"},{"location":"workflow/integrations/creating-nodes/code/ui-elements/#string","text":"<p>The <code>string</code> type is used to input string values.</p> <p>Basic configuration</p> <pre><code>{\n    displayName: Name, // The value the user would see in the UI\n    name: name, // The name use to reference the element UI within the code\n    type: string,\n    required: true, // Whether the field is required or not\n    default: 'n8n', // Value that would be set by default\n    description: 'The name of the user',\n},\n</code></pre>  <p></p> <p>Variation for inputting passwords</p> <pre><code>{\n    displayName: 'Password',\n    name: 'password',\n    type: 'string',\n    required: true,\n    typeOptions: {\n        password: true,\n    },\n    default: '',\n    description: `User's password`,\n\n},\n</code></pre>  <p></p> <p>Variation with multiple rows</p> <pre><code>{\n    displayName: 'Description',\n    name: 'description',\n    type: 'string',\n    required: true,\n    typeOptions: {\n        rows: 4,\n    },\n    default: '',\n    description: 'Description',\n},\n</code></pre>  <p></p>","title":"String"},{"location":"workflow/integrations/creating-nodes/code/ui-elements/#number","text":"<p>The <code>number</code> type is used to input numbers.</p> <p>Basic configuration</p> <pre><code>{\n    displayName: 'Age',\n    name: 'age',\n    type: 'number',\n    required: true,\n    typeOptions: {\n        maxValue: 10,\n        minValue: 0,\n        numberStepSize: 1,\n    },\n    default: 10,\n    description: 'Your current age',\n},\n</code></pre>  <p></p> <p>Variation with decimal points</p> <pre><code>{\n    displayName: 'Amount',\n    name: 'amount',\n    type: 'number',\n    required: true,\n    typeOptions: {\n        numberPrecision: 2,\n    },\n    default: 10.00,\n    description: 'Your current amount',\n},\n</code></pre>  <p></p>","title":"Number"},{"location":"workflow/integrations/creating-nodes/code/ui-elements/#collection","text":"<p>The <code>collection</code> type is used to input a collection of fields. For example, additional fields (or optional fields).</p> <pre><code>{\n    displayName: 'Filters',\n    name: 'filters',\n    type: 'collection',\n    placeholder: 'Add Field',\n    default: {},\n    options: [\n        {\n            displayName: 'Type',\n            name: 'type',\n            type: 'options',\n            options: [\n                {\n                    name: 'Automated',\n                    value: 'automated',\n                },\n                {\n                    name: 'Past',\n                    value: 'past',\n                },\n                {\n                    name: 'Upcoming',\n                    value: 'upcoming',\n                },\n            ],\n            default: '',\n        },\n    ],\n},\n</code></pre>  <p></p>","title":"Collection"},{"location":"workflow/integrations/creating-nodes/code/ui-elements/#datetime","text":"<p>The <code>dateTime</code> type provides a calendar from which you can pick a specific date and time.</p> <pre><code>{\n    displayName: 'Modified Since',\n    name: 'modified_since',\n    type: 'dateTime',\n    default: '',\n    description: 'The date and time when the file was last modified',\n},\n</code></pre>  <p></p>","title":"Datetime"},{"location":"workflow/integrations/creating-nodes/code/ui-elements/#boolean","text":"<p>The <code>boolean</code> type is used to input a value that is either true or false. It is shown as a toggle that can be either on or off.</p> <pre><code>{\n    displayName: 'Wait for Image',\n    name: 'waitForImage',\n    type: 'boolean',\n    default: true, // Initial state of the toggle\n    description: 'Whether to wait for the image or not',\n},\n</code></pre>  <p></p>","title":"Boolean"},{"location":"workflow/integrations/creating-nodes/code/ui-elements/#color","text":"<p>The <code>color</code> type provides a color palette from which a specific color can be selected.</p> <pre><code>{\n    displayName: 'Background Color',\n    name: 'backgroundColor',\n    type: 'color',\n    default: '', // Initially selected color\n},\n</code></pre>  <p></p>","title":"Color"},{"location":"workflow/integrations/creating-nodes/code/ui-elements/#options","text":"<p>The <code>options</code> type is used to provide options from which a single one has to be selected.</p> <pre><code>{\n    displayName: 'Resource',\n    name: 'resource',\n    type: 'options',\n    options: [\n        {\n            name: 'Image',\n            value: 'image',\n        },\n        {\n            name: 'Template',\n            value: 'template',\n        },\n    ],\n    default: 'image', // The initially selected option\n    description: 'Resource to consume',\n},\n</code></pre>  <p></p>","title":"Options"},{"location":"workflow/integrations/creating-nodes/code/ui-elements/#multi-options","text":"<p>The <code>multiOptions</code> type is used to provide options from which many can be selected.</p> <pre><code>{\n    displayName: 'Events',\n    name: 'events',\n    type: 'multiOptions',\n    options: [\n        {\n            name: 'Plan Created',\n            value: 'planCreated',\n        },\n        {\n            name: 'Plan Deleted',\n            value: 'planDeleted',\n        },\n    ],\n    default: [], // Initially selected options\n    description: 'The events to be monitored',\n},\n</code></pre>  <p></p>","title":"Multi Options"},{"location":"workflow/integrations/creating-nodes/code/ui-elements/#fixed-collection","text":"<p>The `fixedCollection? type is used to present groups of fields that are semantically related.</p> <pre><code>{\n    displayName: 'Metadata',\n    name: 'metadataUi',\n    placeholder: 'Add Metadata',\n    type: 'fixedCollection',\n    default: '',\n    typeOptions: {\n        multipleValues: true,\n    },\n    description: '',\n    options: [\n        {\n            name: 'metadataValues',\n            displayName: 'Metadata',\n            values: [\n                {\n                    displayName: 'Name',\n                    name: 'name',\n                    type: 'string',\n                    default: 'Name of the metadata key to add.',\n                },\n                {\n                    displayName: 'Value',\n                    name: 'value',\n                    type: 'string',\n                    default: '',\n                    description: 'Value to set for the metadata key.',\n                },\n            ],\n        },\n    ],\n},\n</code></pre>  <p></p>","title":"Fixed Collection"},{"location":"workflow/integrations/creating-nodes/code/ui-elements/#json","text":"<p>The <code>json</code> type is used to input data formatted as JSON.</p> <pre><code>{\n    displayName: 'Content (JSON)',\n    name: 'content',\n    type: 'json',\n    default: '',\n    description: '',\n},\n</code></pre>  <p></p>","title":"JSON"},{"location":"workflow/integrations/credentials/","text":"<p>This section contains step-by-step information about authenticating the different nodes in Workflow\u00b2.</p>","title":"Overview"},{"location":"workflow/integrations/credentials/actionNetwork/","tags":["Workflow\u00b2","Action Network"],"text":"<p>You can use these credentials to authenticate the following nodes:</p> <ul> <li>Action Network</li> </ul>","title":"Action Network"},{"location":"workflow/integrations/credentials/actionNetwork/#prerequisites","tags":["Workflow\u00b2","Action Network"],"text":"<ul> <li>Create an Action Network account.</li> <li>Contact Action Network to become a partner and enable API access.</li> </ul>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/actionNetwork/#using-api-key","tags":["Workflow\u00b2","Action Network"],"text":"<p>After becoming an Action Network partner:</p> <ol> <li>Open your Action Network dashboard.</li> <li>From the Start Organizing menu navigate to Details &gt; API &amp; Sync.</li> <li>Use the dropdown to select the list you want to generate a key for, your personal list or that of any groups you are an administrator of.</li> <li>From the Your API Key section, generate a new API key:</li> </ol> <p></p> <ol> <li>Copy your new key and use it with your Action Network node credentials in Workflow\u00b2.</li> </ol>","title":"Using API key"},{"location":"workflow/integrations/credentials/activeCampaign/","tags":["Workflow\u00b2","ActiveCampaign"],"text":"<p>You can use these credentials to authenticate the following nodes with ActiveCampaign. - ActiveCampaign - Active Campaign Trigger</p>","title":"ActiveCampaign"},{"location":"workflow/integrations/credentials/activeCampaign/#prerequisites","tags":["Workflow\u00b2","ActiveCampaign"],"text":"<p>Create an ActiveCampaign account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/activeCampaign/#using-access-token","tags":["Workflow\u00b2","ActiveCampaign"],"text":"<ol> <li>Open your ActiveCampaign dashboard.</li> <li>Click on the gears icon on the bottom left to open the Settings.</li> <li>Click on the Developer option under the Settings panel.</li> <li>In the Developer Settings, copy the 'Key' and 'URL' under the \u2018API Access\u2019 panel.</li> <li>Use these credentials with your ActiveCampaign node credentials in Workflow\u00b2.</li> </ol> <p></p>","title":"Using Access Token"},{"location":"workflow/integrations/credentials/acuityScheduling/","text":"<p>You can use these credentials to authenticate the following nodes with Acuity Scheduling. - Acuity Scheduling Trigger</p>","title":"Acuity Scheduling"},{"location":"workflow/integrations/credentials/acuityScheduling/#prerequisites","text":"<p>Create an Acuity Scheduling account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/acuityScheduling/#using-oauth","text":"<p>\u26c5\ufe0f Note fordoc2app.cloudintegration.eu users</p> <p>You'll only need to enter the Credentials Name and click on the circle button in the OAuth section to connect your Acuity Scheduling account to Workflow\u00b2.</p>  <ol> <li>Visit the Acuity OAuth2 Account Registration page.</li> <li>Enter a name in the Account Name field.</li> <li>Enter your email address in the Email Address field.</li> <li>Enter your URL in the Website field.</li> <li>Enter a description in the Application Description field.</li> <li>Copy your OAuth Callback URL from the 'Create New Credentials' screen in Doc\u00b2 and paste in the Callback URIs section.</li> <li>Click on the Register button.</li> <li>Use the provided Client ID and the Client Secret with your Acuity Scheduling OAuth2 API credentials in Workflow\u00b2.</li> <li>Click on the circle button in the OAuth section to connect your Acuity Scheduling account to Workflow\u00b2.</li> <li>Click the Save button to save your credentials.</li> </ol> <p></p>","title":"Using OAuth"},{"location":"workflow/integrations/credentials/acuityScheduling/#using-access-token","text":"<ol> <li>Open your Acuity Scheduling dashboard.</li> <li>Click on 'Integrations' in the left sidebar.</li> <li>Scroll down and click on 'view credentials' under the API section.</li> <li>Copy the User ID and API Key from the pop-up that is displayed.</li> <li>Use these credentials with your Acuity Scheduling node credentials in Workflow\u00b2.</li> </ol> <p></p>","title":"Using Access Token"},{"location":"workflow/integrations/credentials/affinity/","tags":["Workflow\u00b2","Affinity"],"text":"<p>You can use these credentials to authenticate the following nodes with Affinity. - Affinity - Affinity Trigger</p>","title":"Affinity"},{"location":"workflow/integrations/credentials/affinity/#prerequisites","tags":["Workflow\u00b2","Affinity"],"text":"<p>Create an Affinity account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/affinity/#using-access-token","tags":["Workflow\u00b2","Affinity"],"text":"<ol> <li>Open your Affinity dashboard.</li> <li>Open hamburger menu on the top left.</li> <li>Click on Settings.</li> <li>Click on API.</li> <li>Click on 'Generate an API Key\u2019 button.</li> <li>Use the API key with your Affinity node credentials in Workflow\u00b2.</li> </ol> <p></p>","title":"Using Access Token"},{"location":"workflow/integrations/credentials/agileCrm/","tags":["Workflow\u00b2","Agile CRM"],"text":"<p>You can use these credentials to authenticate the following nodes with Agile CRM. - Agile CRM</p>","title":"Agile CRM"},{"location":"workflow/integrations/credentials/agileCrm/#prerequisites","tags":["Workflow\u00b2","Agile CRM"],"text":"<p>Create an Agile CRM account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/agileCrm/#using-access-token","tags":["Workflow\u00b2","Agile CRM"],"text":"<ol> <li>Open your Agile CRM dashboard.</li> <li>Click on your user icon in the top right of the window.</li> <li>Click on the Admin Settings button.</li> <li>Click on the 'Developers &amp; Api' button in the bottom left.</li> <li>Use the REST API key, your registered email and your Agile CRM subdomain (for instance, n8n) with your Agile CRM node credentials in Workflow\u00b2.</li> </ol> <p></p>","title":"Using Access Token"},{"location":"workflow/integrations/credentials/airtable/","tags":["Workflow\u00b2","Airtable"],"text":"<p>You can use these credentials to authenticate the following nodes with Airtable. - Airtable - Airtable Trigger</p>","title":"Airtable"},{"location":"workflow/integrations/credentials/airtable/#prerequisites","tags":["Workflow\u00b2","Airtable"],"text":"<p>Create an Airtable account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/airtable/#using-api-key","tags":["Workflow\u00b2","Airtable"],"text":"<ol> <li>Open your Airtable dashboard.</li> <li>Click on the user icon on the top right and select 'Account' from the dropdown list.</li> <li>Under the API section, click on the Generate API key button.</li> <li>Copy the displayed API key.</li> <li>Enter a name for your credentials in the Credentials Name field in the 'Airtable API' credentials in Workflow\u00b2.</li> <li>Paste the API key in the API Key field in the 'Airtable API' credentials in Workflow\u00b2.</li> <li>Click on the Create button to create the credentials.</li> </ol> <p>The following video demonstrates the steps mentioned above.</p>","title":"Using API Key"},{"location":"workflow/integrations/credentials/amqp/","tags":["Workflow\u00b2","AMQP"],"text":"<p>You can use these credentials to authenticate the following nodes with AMQP. - AMQP Sender - AMQP Trigger</p>","title":"AMQP"},{"location":"workflow/integrations/credentials/amqp/#prerequisites","tags":["Workflow\u00b2","AMQP"],"text":"<p>You need to have a AMQP 1.0 compatible message broker installed.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/amqp/#using-activemq-connection","tags":["Workflow\u00b2","AMQP"],"text":"<p>Use your Hostname, Port, User, and Password as the AMQP Sender credential data in Workflow\u00b2.</p> <p>Note: The default username for ActiveMQ is <code>admin</code> and the default password is <code>admin</code>.</p>","title":"Using ActiveMQ connection"},{"location":"workflow/integrations/credentials/apiTemplateIo/","tags":["Workflow\u00b2","APITemplate.io"],"text":"<p>You can use these credentials to authenticate the following nodes with APITemplate.io. - APITemplate.io</p>","title":"APITemplate.io"},{"location":"workflow/integrations/credentials/apiTemplateIo/#prerequisites","tags":["Workflow\u00b2","APITemplate.io"],"text":"<p>Create an APITemplate.io account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/apiTemplateIo/#using-api-key","tags":["Workflow\u00b2","APITemplate.io"],"text":"<ol> <li>Open your APITemplate.io dashboard.</li> <li>Click on API Integration on the left sidebar.</li> <li>Click on the Copy text button to copy the API key.</li> <li>Enter a name for your credentials in the Credentials Name field in the 'APITemplate.io API' credentials in Workflow\u00b2.</li> <li>Paste the API key in the API Key field in the 'APITemplate.io API' credentials in Workflow\u00b2.</li> <li>Click on the Create button to create the credentials.</li> </ol> <p>The following video demonstrates the steps mentioned above.</p>","title":"Using API Key"},{"location":"workflow/integrations/credentials/asana/","tags":["Workflow\u00b2","Asana"],"text":"<p>You can use these credentials to authenticate the following nodes with Asana. - Asana - Asana Trigger</p>","title":"Asana"},{"location":"workflow/integrations/credentials/asana/#prerequisites","tags":["Workflow\u00b2","Asana"],"text":"<p>Create an Asana account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/asana/#using-oauth","tags":["Workflow\u00b2","Asana"],"text":"<p>\u26c5\ufe0f Note fordoc2app.cloudintegration.eu users</p> <p>You'll only need to enter the Credentials Name and click on the circle button in the OAuth section to connect your Asana account to Workflow\u00b2.</p>  <ol> <li>Open your Asana dashboard.</li> <li>Click on your user icon in the top right.</li> <li>Click on My Profile Settings...</li> <li>Click on the Apps tab.</li> <li>Click on Manage Developer Apps.</li> <li>Click on New App.</li> <li>Enter a name, accept the API terms and conditions, and click on Create app.</li> <li>Copy the OAuth Callback URL from Doc\u00b2 and paste it in the Redirect URLs field and click Add.</li> <li>Use the provided Client ID and Client secret with your Asana OAuth2 API credentials in Workflow\u00b2.</li> <li>Click on the circle button in the OAuth section to connect an Asana account to Workflow\u00b2.</li> <li>Click the Save button to save your credentials in Workflow\u00b2.</li> </ol> <p></p>","title":"Using OAuth"},{"location":"workflow/integrations/credentials/asana/#using-access-token","tags":["Workflow\u00b2","Asana"],"text":"<ol> <li>Open your Asana dashboard.</li> <li>Click on your user icon in the top right of the window.</li> <li>Click on My Profile Settings.</li> <li>Click on the Apps tab.</li> <li>Click on Manage Developer Apps.</li> <li>Click on New access token under the Personal access tokens section.</li> <li>Enter a name for the access token and agree to the API terms and conditions.</li> <li>Click on the Create token button.</li> <li>Copy the token and use it with your Asana node credentials in Workflow\u00b2.</li> </ol> <p></p>","title":"Using Access Token"},{"location":"workflow/integrations/credentials/automizy/","tags":["Workflow\u00b2","Automizy"],"text":"<p>You can use these credentials to authenticate the following nodes with Automizy. - Automizy</p>","title":"Automizy"},{"location":"workflow/integrations/credentials/automizy/#prerequisites","tags":["Workflow\u00b2","Automizy"],"text":"<p>Create an Automizy account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/automizy/#using-api-token","tags":["Workflow\u00b2","Automizy"],"text":"<ol> <li>Access the Automizy dashboard.</li> <li>Click on Settings in the bottom left corner and select 'API Token'.</li> <li>Click on the CREATE TOKEN button.</li> <li>Click on the COPY &amp; CLOSE button to copy the API token.</li> <li>Use this API token with your Auotmizy node credentials in Workflow\u00b2.</li> </ol>","title":"Using API Token"},{"location":"workflow/integrations/credentials/autopilot/","tags":["Workflow\u00b2","Autopilot"],"text":"<p>You can use these credentials to authenticate the following nodes with Autopilot. - Autopilot - Autopilot Trigger</p>","title":"Autopilot"},{"location":"workflow/integrations/credentials/autopilot/#prerequisites","tags":["Workflow\u00b2","Autopilot"],"text":"<p>Create an Autopilot account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/autopilot/#using-api-key","tags":["Workflow\u00b2","Autopilot"],"text":"<ol> <li>Open your Autopilot dashboard.</li> <li>Click on the gears icon on the left sidebar to open the Settings menu.</li> <li>Click on Autopilot API.</li> <li>Click on the Generate button to create the API key.</li> <li>Copy the displayed API key.</li> <li>Enter a name for your credentials in the Credentials Name field in the 'Autopilot API' credentials in Workflow\u00b2.</li> <li>Paste the API key in the API Key field in the 'Autopilot API' credentials in Workflow\u00b2.</li> <li>Click on the Create button to create the credentials.</li> </ol> <p>The following video demonstrates the steps mentioned above.</p>","title":"Using API Key"},{"location":"workflow/integrations/credentials/aws/","tags":["Workflow\u00b2","AWS"],"text":"<p>You can use these credentials to authenticate the following nodes with AWS.</p> <ul> <li>AWS DynamoDB</li> <li>AWS Lambda</li> <li>AWS Rekognition</li> <li>AWS S3</li> <li>AWS SES</li> <li>AWS SNS</li> <li>AWS SNS Trigger</li> <li>AWS SQS</li> <li>AWS Textract</li> <li>AWS Transcribe</li> </ul>","title":"AWS"},{"location":"workflow/integrations/credentials/aws/#prerequisites","tags":["Workflow\u00b2","AWS"],"text":"<p>Create an AWS account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/aws/#using-access-token","tags":["Workflow\u00b2","AWS"],"text":"<ol> <li>Open your AWS Management Console.</li> <li>Click on your name on the top right and select 'My Security Credentials' from the dropdown.</li> <li>Click on the Create New Access Key button, under the Access keys (access key ID and secret access key) section</li> <li>Click on the Show Access Key button.</li> <li>Copy the displayed Access Key ID.</li> <li>Enter the name for your credentials in the Credentials Name field in the 'AWS' credentials in Workflow\u00b2.</li> <li>Paste the Access Key ID in the Access Key ID field in the 'AWS' credentials in Workflow\u00b2.</li> <li>Copy the secret access key from your AWS console.</li> <li>Paste the secret access key in the Secret Access Key field in the 'AWS' credentials in Workflow\u00b2.</li> <li>Click the Create button to save your credentials in Workflow\u00b2.</li> </ol> <p>Note: If you're running your AWS instance in a different region, please update the Region field accordingly.</p> <p>The following video demonstrates the steps mentioned above.</p>","title":"Using Access Token"},{"location":"workflow/integrations/credentials/bambooHr/","tags":["Workflow\u00b2","BambooHR"],"text":"<p>You can use these credentials to authenticate the following nodes with BambooHR. - BambooHR</p>","title":"BambooHR"},{"location":"workflow/integrations/credentials/bambooHr/#prerequisites","tags":["Workflow\u00b2","BambooHR"],"text":"<p>Create a BambooHR account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/bambooHr/#using-access-token","tags":["Workflow\u00b2","BambooHR"],"text":"<ol> <li>Log into your BambooHR account and click on the profile image in the upper right corner.</li> <li>Click on API Keys.</li> <li>Click on Add New Key, enter any name for your new key and hit Generate Key.</li> <li>Copy the key provided by BambooHR into the API Key field of n8n's credentials modal.</li> <li>Enter your subdomain (the part between <code>https://</code> and <code>.bamboohr.com</code>) in the Subdomain field of n8n's credentials modal.</li> <li>Click on Save.</li> </ol>","title":"Using Access Token"},{"location":"workflow/integrations/credentials/bannerbear/","tags":["Workflow\u00b2","Bannerbear"],"text":"<p>You can use these credentials to authenticate the following nodes with Bannerbear. - Bannerbear</p>","title":"Bannerbear"},{"location":"workflow/integrations/credentials/bannerbear/#prerequisites","tags":["Workflow\u00b2","Bannerbear"],"text":"<p>Create a BannerBear account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/bannerbear/#using-access-token","tags":["Workflow\u00b2","Bannerbear"],"text":"<ol> <li>Open your BannerBear dashboard.</li> <li>Click on \"Create New Project\".</li> <li>Enter Project name and save.</li> <li>Click on Projects tab and enter the newly creatted project.</li> <li>Click on \"Settings / API Key\".</li> <li>Use API key in your Bannerbear node credentials in Workflow\u00b2.</li> </ol> <p></p>","title":"Using Access Token"},{"location":"workflow/integrations/credentials/baserow/","tags":["Workflow\u00b2","Baserow"],"text":"<p>You can use these credentials to authenticate the following node:</p> <ul> <li>Baserow</li> </ul>","title":"Baserow"},{"location":"workflow/integrations/credentials/baserow/#prerequisites","tags":["Workflow\u00b2","Baserow"],"text":"<p>Create a Baserow account on any hosted Baserow instance or a self hosted instance.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/baserow/#using-user-account","tags":["Workflow\u00b2","Baserow"],"text":"<ol> <li>In Doc\u00b2, open the Credentials menu item and click on New</li> <li>In the Add new credential dialogue, select Baserow API and click on the Continue button</li> <li>If using the online version of Baserow, leave the Host as <code>https://api/baserow.io</code>, otherwise set it to your self-hosted instance API URL.</li> <li>Enter your Baserow username in the Username field</li> <li>Enter your Baserow password in the Password field</li> <li>Click on the Save button</li> </ol> <p>You can now use this credential in your Baserow nodes.</p>","title":"Using User Account"},{"location":"workflow/integrations/credentials/beeminder/","tags":["Workflow\u00b2","Beeminder"],"text":"<p>You can use these credentials to authenticate the following nodes with Beeminder. - Beeminder</p>","title":"Beeminder"},{"location":"workflow/integrations/credentials/beeminder/#prerequisites","tags":["Workflow\u00b2","Beeminder"],"text":"<p>Create a Beeminder account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/beeminder/#using-api-key","tags":["Workflow\u00b2","Beeminder"],"text":"<ol> <li>Open your Beeminder dashboard.</li> <li>Click on your avatar at the top-right corner.</li> <li>Select 'ACCOUNT SETTINGS' from the dropdown list.</li> <li>Scroll up and click on the APPS &amp; API tab.</li> <li>Copy the Auth Token displayed in the API section.</li> <li>Enter the name for your credentials in the Credentials Name field in the 'Beeminder API' credentials in Workflow\u00b2.</li> <li>Enter your username in the User field.</li> <li>Paste the Auth Token in the Auth Token field.</li> <li>Click on the Save button to save your credentials.</li> </ol> <p>The following video demonstrates the steps mentioned above.</p>","title":"Using API Key"},{"location":"workflow/integrations/credentials/bitbucket/","tags":["Workflow\u00b2","Bitbucket"],"text":"<p>You can use these credentials to authenticate the following nodes with Bitbucket. - Bitbucket Trigger</p>","title":"Bitbucket"},{"location":"workflow/integrations/credentials/bitbucket/#prerequisites","tags":["Workflow\u00b2","Bitbucket"],"text":"<p>Create an Bitbucket account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/bitbucket/#using-username-and-password","tags":["Workflow\u00b2","Bitbucket"],"text":"<p>Use the username and application password.</p>","title":"Using Username and Password"},{"location":"workflow/integrations/credentials/bitly/","tags":["Workflow\u00b2","Bitly"],"text":"<p>You can use these credentials to authenticate the following nodes with Bitly. - Bitly</p>","title":"Bitly"},{"location":"workflow/integrations/credentials/bitly/#prerequisites","tags":["Workflow\u00b2","Bitly"],"text":"<p>Create a Bitly account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/bitly/#using-oauth","tags":["Workflow\u00b2","Bitly"],"text":"<p>\u26c5\ufe0f Note fordoc2app.cloudintegration.eu users</p> <p>You'll only need to enter the Credentials Name and click on the circle button in the OAuth section to connect your Bitly account to Workflow\u00b2.</p>  <ol> <li>Open your Bitly dashboard.</li> <li>Click on your account button in the top right.</li> <li>Click on \"Profile Settings\".</li> <li>Click on \"Registered OAuth Applications\".</li> <li>Click on \"GET REGISTRATION CODE\".</li> <li>Use Client Secret and Client ID in your Bitly node credentials in Workflow\u00b2.</li> <li>Enter Doc\u00b2 provided redirect URL. Redirect URL Explanation here.</li> </ol> <p></p>","title":"Using OAuth"},{"location":"workflow/integrations/credentials/bitly/#using-access-token","tags":["Workflow\u00b2","Bitly"],"text":"<ol> <li>Open your Bitly dashboard.</li> <li>Click on your account button in the top right.</li> <li>Click on \"Profile Settings\".</li> <li>Click on \"Generate Access Token\".</li> <li>Enter password.</li> <li>Use the access token in your Bitly node credentials in Workflow\u00b2.</li> </ol> <p></p>","title":"Using Access Token"},{"location":"workflow/integrations/credentials/bitwarden/","tags":["Workflow\u00b2","Bitwarden"],"text":"<p>You can use these credentials to authenticate the following nodes with Bitwarden. - Bitwarden</p>","title":"Bitwarden"},{"location":"workflow/integrations/credentials/bitwarden/#prerequisites","tags":["Workflow\u00b2","Bitwarden"],"text":"<p>Create a Bitwarden organisation account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/bitwarden/#using-api-key","tags":["Workflow\u00b2","Bitwarden"],"text":"<ol> <li>Open your Bitwarden vault.</li> <li>Click on your organisation under the ORGANISATIONS section.</li> <li>Click on the Settings tab.</li> <li>Click on the View API key button under the API key section.</li> <li>Enter your master password in the Master password field.</li> <li>Click on the View API key button.</li> <li>Copy the displayed client id.</li> <li>Enter the name for your credentials in the Credentials Name field in the 'Bitwarden API' credentials in Workflow\u00b2.</li> <li>Paste the client id in the Client ID field in the 'Bitwarden API' credentials in Workflow\u00b2.</li> <li>Copy the client secret from Bitwarden.</li> <li>Paste the client secret in the Client Secret field in the 'Bitwarden API' credentials in Workflow\u00b2.</li> <li>Click on the Create button to create your credentials.</li> </ol> <p>Note: If you're hosting Bitwarden on your server, select 'Self-hosted' from the Environment dropdown list. You also need to enter the domain of your hosted instance in the Self-hosted domain field.</p> <p>The following video demonstrates the steps mentioned above.</p>","title":"Using API Key"},{"location":"workflow/integrations/credentials/box/","tags":["Workflow\u00b2","Box"],"text":"<p>You can use these credentials to authenticate the following nodes with Box. - Box - Box Trigger</p>","title":"Box"},{"location":"workflow/integrations/credentials/box/#prerequisites","tags":["Workflow\u00b2","Box"],"text":"<p>Create a Box account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/box/#using-oauth","tags":["Workflow\u00b2","Box"],"text":"<ol> <li>Access the Box Developers Console.</li> <li>Click on the Create New App button.</li> <li>Select 'Custom App' and click Next.</li> <li>Select 'Standard OAuth 2.0 (User Authentication)'and click Next.</li> <li>Enter any other necessary information and click on the Create App button.</li> <li>Copy the 'OAuth Callback URL' provided in the Box OAuth2 API credentials in Doc\u00b2 and paste it in the 'Redirect URI' field in the Box app page.</li> <li>Click the Save Changes button and use the displayed 'Client ID' and the 'Client Secret' with your Box OAuth2 API credentials in Workflow\u00b2.</li> <li>Click on the circle button in the OAuth section to connect a Box account to Workflow\u00b2.</li> <li>Click the Save button to save your credentials in Workflow\u00b2.</li> </ol> <p></p>","title":"Using OAuth"},{"location":"workflow/integrations/credentials/brandfetch/","tags":["Workflow\u00b2","Brandfetch"],"text":"<p>You can use these credentials to authenticate the following nodes with Brandfetch. - Brandfetch</p>","title":"Brandfetch"},{"location":"workflow/integrations/credentials/brandfetch/#prerequisites","tags":["Workflow\u00b2","Brandfetch"],"text":"<p>Create a Brandfetch account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/brandfetch/#using-api-key","tags":["Workflow\u00b2","Brandfetch"],"text":"<ol> <li>Access your Brandfetch dashboard.</li> <li>Click on API on the left sidebar.</li> <li>Select a plan and click on the Get API Key button.</li> <li>Use the App Key with your Brandfetch API credentials in Workflow\u00b2.</li> </ol> <p></p>","title":"Using API Key"},{"location":"workflow/integrations/credentials/bubble/","tags":["Workflow\u00b2","Bubble"],"text":"<p>You can use these credentials to authenticate the following nodes with Bubble. - Bubble</p>","title":"Bubble"},{"location":"workflow/integrations/credentials/bubble/#prerequisites","tags":["Workflow\u00b2","Bubble"],"text":"<p>Create a Bubble account.</p> <p>Note: You need a Personal or a higher plan to get access to the Bubble API.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/bubble/#using-api-key","tags":["Workflow\u00b2","Bubble"],"text":"<ol> <li>Open your Bubble dashboard page.</li> <li>Select an app under the My apps section to open the app.</li> <li>Click on Settings on the left-sidebar.</li> <li>Click on the API tab.</li> <li>Click on the Generate a new API token button.</li> <li>Enter a token name in the API Token Label field.</li> <li>Copy the displayed Private Key.</li> <li>Enter the name for your credentials in the Credentials Name field in the 'Bubble API' credentials in Workflow\u00b2.</li> <li>Paste the Private Key in the API Token field in the 'Bubble API' credentials in Workflow\u00b2.</li> <li>Enter the app name in the APP Name field.</li> <li>Select 'Development' from the Environment dropdown list. If you want to use the 'Live' environment, select 'Live' instead.</li> <li>Click on the Create button to create your credentials.</li> </ol> <p>Note: If you're self-hosting your Bubble app, select 'Self-hosted' from the Hosting dropdown list. You will also need to enter the domain of your hosted instance in the Domain field.</p> <p>The following video demonstrates the steps mentioned above.</p>","title":"Using API Key"},{"location":"workflow/integrations/credentials/calendly/","tags":["Workflow\u00b2","Calendly"],"text":"<p>You can use these credentials to authenticate the following nodes with Calendly. - Calendly Trigger</p>","title":"Calendly"},{"location":"workflow/integrations/credentials/calendly/#prerequisites","tags":["Workflow\u00b2","Calendly"],"text":"<p>Create a Calendly premium account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/calendly/#using-access-token","tags":["Workflow\u00b2","Calendly"],"text":"<ol> <li>Open your Calendly dashboard.</li> <li>Click on \"Integrations\".</li> <li>Use API key in your Calendly node credentials in Workflow\u00b2.</li> </ol> <p></p>","title":"Using Access Token"},{"location":"workflow/integrations/credentials/chargebee/","tags":["Workflow\u00b2","Chargebee"],"text":"<p>You can use these credentials to authenticate the following nodes with Chargebee. - Chargebee - Chargebee Trigger</p>","title":"Chargebee"},{"location":"workflow/integrations/credentials/chargebee/#prerequisites","tags":["Workflow\u00b2","Chargebee"],"text":"<p>Create a Chargebee account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/chargebee/#using-access-token","tags":["Workflow\u00b2","Chargebee"],"text":"<ol> <li>Open your Chargebee dashboard.</li> <li>Click on \"Settings\".</li> <li>Click on \"Configure Chargebee\".</li> <li>Scroll down and click on \"API Keys\".</li> <li>Use selected API key and Account name in your Chargebee node credentials in Workflow\u00b2.</li> </ol> <p></p>","title":"Using Access Token"},{"location":"workflow/integrations/credentials/circleCi/","tags":["Workflow\u00b2","CircleCI"],"text":"<p>You can use these credentials to authenticate the following nodes with CircleCI. - CircleCI</p>","title":"CircleCI"},{"location":"workflow/integrations/credentials/circleCi/#prerequisites","tags":["Workflow\u00b2","CircleCI"],"text":"<p>Create a CircleCI account. </p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/circleCi/#using-access-token","tags":["Workflow\u00b2","CircleCI"],"text":"<ol> <li>Access your CircleCI User Settings.</li> <li>Visit the Personal API Tokens section.</li> <li>Click on the Create New Token button.</li> <li>Type in a name for your token and click on the Add API Token button.</li> <li>Copy the generated API Token and use it with your CircleCI API node credentials in Workflow\u00b2.</li> </ol> <p></p>","title":"Using Access Token"},{"location":"workflow/integrations/credentials/ciscoWebex/","tags":["Workflow\u00b2","Webex by Cisco"],"text":"<p>You can use these credentials to authenticate the following nodes:</p> <ul> <li>Webex by Cisco</li> <li>Webex by Cisco Trigger</li> </ul>","title":"Webex by Cisco"},{"location":"workflow/integrations/credentials/ciscoWebex/#prerequisites","tags":["Workflow\u00b2","Webex by Cisco"],"text":"<p>Create a Webex by Cisco account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/ciscoWebex/#using-oauth","tags":["Workflow\u00b2","Webex by Cisco"],"text":"<ol> <li>Navigate to Webex for Developers and sign in using your Webex by Cisco account.</li> <li>From the user menu select My Webex Apps, then Create a New App.</li> <li>From the Create a New App page select Create an Integration.</li> <li>Complete the following required fields for your new integration:<ul> <li>Integration Name: Provide a name for your Webex app.</li> <li>Contact Email: Enter your email address.</li> <li>Icon: Provide an icon for your app or select one of the available defaults.</li> <li>Description: Enter a brief description of your app.</li> <li>Redirect URIs: Enter the OAuth Callback URL from the Doc\u00b2 credentials modal.</li> <li>Scopes: Enable the following scopes:<ul> <li><code>spark:rooms_read</code></li> <li><code>spark:messages_write</code></li> <li><code>spark:messages_read</code></li> <li><code>spark:membership_read</code></li> <li><code>spark_membership_write</code></li> <li><code>meeting:recordings_write</code></li> <li><code>meeting:recordings_read</code></li> <li><code>meeting:preferences_read</code></li> <li><code>meeting:schedules_write</code></li> <li><code>meeting:schedules_read</code></li> </ul> </li> </ul> </li> <li>Click Add Integration to create your app.</li> <li>Copy the Client ID and Client Secret for this new app.</li> </ol> <p>From n8n:</p> <ol> <li>Enter a descriptive Credentials Name.</li> <li>Under Credential Data, enter the Client ID and Client Secret obtained above.</li> <li>Under OAuth, click the circle button to initiate authentication. A popup may appear prompting you to login to your Webex by Cisco account.</li> <li>After authentication is complete, click Create to save your new credentials.</li> </ol>","title":"Using OAuth"},{"location":"workflow/integrations/credentials/clearbit/","tags":["Workflow\u00b2","Clearbit"],"text":"<p>You can use these credentials to authenticate the following nodes with Clearbit. - Clearbit</p>","title":"Clearbit"},{"location":"workflow/integrations/credentials/clearbit/#prerequisites","tags":["Workflow\u00b2","Clearbit"],"text":"<p>Create a Clearbit account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/clearbit/#using-access-token","tags":["Workflow\u00b2","Clearbit"],"text":"<ol> <li>Open your Clearbit dashboard.</li> <li>Click on \"API\".</li> <li>Click on \"Configure Chargebee\".</li> <li>Use selected API key in your Clearbit node credentials in Workflow\u00b2.</li> </ol> <p></p>","title":"Using Access Token"},{"location":"workflow/integrations/credentials/clickUp/","tags":["Workflow\u00b2","ClickUp"],"text":"<p>You can use these credentials to authenticate the following nodes with ClickUp. - ClickUp - ClickUp Trigger</p>","title":"ClickUp"},{"location":"workflow/integrations/credentials/clickUp/#prerequisites","tags":["Workflow\u00b2","ClickUp"],"text":"<p>Create a ClickUp account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/clickUp/#using-oauth","tags":["Workflow\u00b2","ClickUp"],"text":"<p>\u26c5\ufe0f Note fordoc2app.cloudintegration.eu users</p> <p>You'll only need to enter the Credentials Name and click on the circle button in the OAuth section to connect your ClickUp account to Workflow\u00b2.</p>  <ol> <li>Open your ClickUp dashboard.</li> <li>Click on your profile icon in the bottom left.</li> <li>Click on Integrations under your workspace profile.</li> <li>Click on ClickUp API.</li> <li>Click on the + Create an App button under the ClikcUp API section.</li> <li>Enter the name of your app in the App Name field.</li> <li>Copy the 'OAuth Callback URL' provided in the 'ClickUp OAuth2 API' credentials in Workflow\u00b2.</li> <li>Paste it in the Redirect URL(s) field.</li> <li>Click on the Create App button.</li> <li>Copy the displayed client ID.</li> <li>Enter a name for your credentials in the Credentials Name field in the 'ClickUp OAuth2 API' credentials in Workflow\u00b2.</li> <li>Paste the client ID in the Client ID field in the 'ClickUp OAuth2 API' credentials in Workflow\u00b2.</li> <li>Copy the client secret from ClickUp.</li> <li>Paste the client secret in the Client Secret field in the 'ClickUp OAuth2 API' credentials in Workflow\u00b2.</li> <li>Click on the circle button in the OAuth section to connect a ClickUp account to Workflow\u00b2.</li> <li>Click the Save button to save your credentials in Workflow\u00b2.</li> </ol> <p>The following video demonstrates the steps mentioned above.</p>    <p>The following video demonstrates the steps to authenticate the ClickUp node on n8n.cloud.</p>","title":"Using OAuth"},{"location":"workflow/integrations/credentials/clickUp/#using-access-token","tags":["Workflow\u00b2","ClickUp"],"text":"<ol> <li>Open the ClickUp dashboard.</li> <li>Click on your profile icon in the bottom left.</li> <li>Click on Apps under your user profile.</li> <li>Click on the Generate button under the API Token section.</li> <li>Click on the Copy button to copy the token.</li> <li>Enter a name for your credentials in the Credentials Name field in the 'ClickUp API' credentials in Workflow\u00b2.</li> <li>Paste the token in the Access Token field in the 'ClickUp API' credentials in Workflow\u00b2.</li> <li>Click on the Create button to create the credentials.</li> </ol>","title":"Using Access Token"},{"location":"workflow/integrations/credentials/clockify/","tags":["Workflow\u00b2","Clockify"],"text":"<p>You can use these credentials to authenticate the following nodes with Clockify. - Clockify - Clockify Trigger</p>","title":"Clockify"},{"location":"workflow/integrations/credentials/clockify/#prerequisites","tags":["Workflow\u00b2","Clockify"],"text":"<p>Create a Clockify account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/clockify/#using-access-token","tags":["Workflow\u00b2","Clockify"],"text":"<ol> <li>Open your Clockify dashboard.</li> <li>Click on your profile.</li> <li>Click on \"Profile Settings\".</li> <li>Scroll down and click on \"Generate\" under API.</li> <li>Use selected API key in your Clockify node credentials in Workflow\u00b2.</li> </ol> <p></p>","title":"Using Access Token"},{"location":"workflow/integrations/credentials/cockpit/","tags":["Workflow\u00b2","Cockpit"],"text":"<p>You can use these credentials to authenticate the following nodes with Cockpit. - Cockpit</p>","title":"Cockpit"},{"location":"workflow/integrations/credentials/cockpit/#prerequisites","tags":["Workflow\u00b2","Cockpit"],"text":"<p>Create a Cockpit account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/cockpit/#using-access-token","tags":["Workflow\u00b2","Cockpit"],"text":"<ol> <li>Open your Cockpit dashboard.</li> <li>Click on your profile in the top right.</li> <li>Click on \"Account\".</li> <li>Scroll down and copy API key.</li> <li>Use selected API key and your Cockpit URL in your Cockpit node credentials in Workflow\u00b2.</li> </ol> <p></p>","title":"Using Access Token"},{"location":"workflow/integrations/credentials/coda/","tags":["Workflow\u00b2","Coda"],"text":"<p>You can use these credentials to authenticate the following nodes with Coda. - Coda</p>","title":"Coda"},{"location":"workflow/integrations/credentials/coda/#prerequisites","tags":["Workflow\u00b2","Coda"],"text":"<p>Create a Coda account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/coda/#using-access-token","tags":["Workflow\u00b2","Coda"],"text":"<ol> <li>Open your Coda dashboard.</li> <li>Click on your profile in the top right.</li> <li>Click on the 3 dots and then Account settings..</li> <li>Scroll down and click on \"Generate\" under API.</li> <li>Use selected API access token in your Coda node credentials in Workflow\u00b2.</li> </ol> <p></p>","title":"Using Access Token"},{"location":"workflow/integrations/credentials/contentful/","text":"<p>You can use these credentials to authenticate the following nodes with Contentful. - Contentful</p>","title":"Contentful"},{"location":"workflow/integrations/credentials/contentful/#prerequisites","text":"<p>Create a Contentful account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/contentful/#using-access-token","text":"<ol> <li>Open your Contentful dashboard.</li> <li>Open the 'Settings' dropdown list on the top bar.</li> <li>Click on API keys.</li> <li>Click on the Add API key button in the top right.</li> <li>Enter a name for the API key in the Name field and click Save.</li> <li>Use the displayed Space ID, Content Delivery API - access token, and Content Preview API - access token with your Contentful node API credentials in Workflow\u00b2.</li> <li>Click on the Save button to save your credentials.</li> </ol> <p></p>","title":"Using Access Token"},{"location":"workflow/integrations/credentials/convertKit/","text":"<p>You can use these credentials to authenticate the following nodes with ConvertKit. - ConvertKit - ConvertKit Trigger</p>","title":"ConvertKit"},{"location":"workflow/integrations/credentials/convertKit/#prerequisites","text":"<p>Create a ConvertKit account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/convertKit/#using-access-token","text":"<ol> <li>Access your ConvertKit dashboard.</li> <li>Click on the user icon in the top right and select Account settings.</li> <li>Click on Show in the API Secret section to reveal the access token.</li> <li>Use the access token in the API Secret section with your ConvertKit API credentials in Workflow\u00b2.</li> <li>Click on the Save button to save your credentials.</li> </ol> <p></p>","title":"Using Access Token"},{"location":"workflow/integrations/credentials/copper/","text":"<p>You can use these credentials to authenticate the following nodes with Copper. - Copper - Copper Trigger</p>","title":"Copper"},{"location":"workflow/integrations/credentials/copper/#prerequisites","text":"<p>Create a Copper account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/copper/#using-access-token","text":"<ol> <li>Open your Copper dashboard.</li> <li>Click on the Settings tab on the left-sidebar.</li> <li>Click on Integrations and select API Keys.</li> <li>Click on the GENERATE API KEY button.</li> <li>Copy the displayed API key.</li> <li>Enter the name for your credentials in the Credentials Name field in the 'Copper API' credentials in Workflow\u00b2.</li> <li>Paste the API key in the API Key field in the 'Copper API' credentials in Workflow\u00b2.</li> <li>Enter the email address in the Email field in the 'Copper API' credentials in Workflow\u00b2.</li> <li>Click the Create button to create your credentials in Workflow\u00b2.</li> </ol> <p>The following video demonstrates the steps mentioned above.</p>","title":"Using Access Token"},{"location":"workflow/integrations/credentials/cortex/","text":"<p>You can use these credentials to authenticate the following nodes with Cortex. - Cortex</p>","title":"Cortex"},{"location":"workflow/integrations/credentials/cortex/#prerequisites","text":"<p>Install Cortex on your server.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/cortex/#using-api-key","text":"<ol> <li>Access your Cortex dashboard.</li> <li>Click on your user icon on the top right corner and select 'Settings'.</li> <li>Scroll down to the API Key section and click on the Reveal button.</li> <li>Use the API Key and your Cortex instance URL with your Cortex node credentials in Workflow\u00b2.</li> </ol> <p></p>","title":"Using API Key"},{"location":"workflow/integrations/credentials/crateDb/","text":"<p>You can use these credentials to authenticate the following nodes with CrateDB. - CrateDB</p>","title":"CrateDB"},{"location":"workflow/integrations/credentials/crateDb/#prerequisites","text":"<p>An available instance of CrateDB. </p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/crateDb/#using-database-connection","text":"<ol> <li>Retrieve your CrateDB credentials and connection parameters.</li> <li>Use the credentials and connection parameters with your CrateDB node credentials in Workflow\u00b2.</li> </ol>","title":"Using Database Connection"},{"location":"workflow/integrations/credentials/customerIo/","text":"<p>You can use these credentials to authenticate the following nodes with Customer.io. - Customer.io - Customer.io Trigger</p>","title":"Customer.io"},{"location":"workflow/integrations/credentials/customerIo/#prerequisites","text":"<p>Create a Customer.io account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/customerIo/#using-access-token","text":"<ol> <li>Open your Customer.io dashboard.</li> <li>Click on the user icon in the top right and select Account settings.</li> <li>Click on API Credentials.</li> <li>Click on the Create Tracking API Key button.</li> <li>Enter a name for the Tracking API Key in the Name.</li> <li>Select a workspace from the Workspace dropdown list.</li> <li>Click on the Create Tracking API Key button.</li> <li>Copy the displayed 'Site ID'.</li> <li>Enter the name for your credentials in the Credentials Name field in the 'Customer.io API' credentials in Workflow\u00b2.</li> <li>Paste the Site ID in the Tracking Site ID field in the 'Customer.io API' credentials in Workflow\u00b2.</li> <li>Copy the 'API Key' from the Manage API Credentials page.</li> <li>Paste the API key in the Tracking API Key field in the 'Customer.io API' credentials in Workflow\u00b2.</li> <li>Click on the App API Keys tab on the Manage API Credentials page.</li> <li>Click on the Create App API Key button.</li> <li>Enter a name for the App API Key in the Name field.</li> <li>Select a workspace from the Workspace dropdown list.</li> <li>Click on the Create App API Key button.</li> <li>Copy the displayed API key.</li> <li>Paste the API key in the App API Key field in the 'Customer.io API' credentials in Workflow\u00b2.</li> <li>Click on the Create button to create your credentials.</li> </ol> <p>The following video demonstrates the steps mentioned above.</p>","title":"Using Access Token"},{"location":"workflow/integrations/credentials/customerIo/#faqs","text":"","title":"FAQs"},{"location":"workflow/integrations/credentials/customerIo/#why-do-i-need-the-tracking-api-key-and-the-app-api-key","text":"<p>Customer.io uses different API Keys for different endpoints. Based on the operation you want to perform, Doc\u00b2 uses the correct API key to connect to your Customer.io account.</p>","title":"Why do I need the Tracking API Key and the App API Key?"},{"location":"workflow/integrations/credentials/deepL/","text":"<p>You can use these credentials to authenticate the following nodes with DeepL. - DeepL</p>","title":"DeepL"},{"location":"workflow/integrations/credentials/deepL/#prerequisites","text":"<p>Create a DeepL developer account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/deepL/#using-api-key","text":"<ol> <li>Open your DeepL account page.</li> <li>Scroll down to the Authentication Key for DeepL API section.</li> <li>Copy the displayed 'API Key'.</li> <li>Enter the name for your credentials in the Credentials Name field in the 'DeepL API' credentials in Workflow\u00b2.</li> <li>Paste the API key in the API Key field in the 'DeepL API' credentials in Workflow\u00b2.</li> <li>Click on the Create button to create your credentials in Workflow\u00b2.</li> </ol> <p>The following video demonstrates the steps mentioned above.</p>","title":"Using API Key"},{"location":"workflow/integrations/credentials/demio/","text":"<p>You can use these credentials to authenticate the following nodes with Demio. - Demio</p>","title":"Demio"},{"location":"workflow/integrations/credentials/demio/#prerequisites","text":"<p>Create a Demio account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/demio/#using-api-key","text":"<ol> <li>Open your Demio dashboard.</li> <li>Click on your user icon in the top right.</li> <li>Click on Settings.</li> <li>Click on the API tab.</li> <li>Copy the displayed 'API Key'.</li> <li>Enter the name for your credentials in the Credentials Name field in the 'Demio API' credentials in Workflow\u00b2.</li> <li>Paste the API key in the API Key field in the 'Demio API' credentials in Workflow\u00b2.</li> <li>Copy the 'API Secret' from Demio.</li> <li>Paste the API secret in the API Secret field in the 'Demio API' credentials in Workflow\u00b2.</li> <li>Click the Create button to save your credentials in Workflow\u00b2.</li> </ol> <p>The following video demonstrates the steps mentioned above.</p>","title":"Using API Key"},{"location":"workflow/integrations/credentials/dhl/","text":"<p>You can use these credentials to authenticate the following nodes with DHL. - DHL</p>","title":"DHL"},{"location":"workflow/integrations/credentials/dhl/#prerequisites","text":"<ul> <li>Create a DHL Developer account.</li> </ul>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/dhl/#using-access-token","text":"<ol> <li>Navigate to the apps page of the DHL Developer portal.</li> <li>Click the + Create App button.</li> <li>Enter a descriptive name in the App name field.</li> <li>In the Select APIs section, search for <code>Shipment Tracking - Unified</code> in the API's name field.</li> <li>Below Add API to app, click the Plus (+) button next to the entry for <code>Shipment Tracking - Unified</code>.</li> <li>Click on the Add app button.</li> <li>Back on the apps page, click on your newly created app.</li> <li>Click the Show key link to reveal your access token. Use the token with your DHL credentials in Workflow\u00b2.</li> </ol>","title":"Using Access Token"},{"location":"workflow/integrations/credentials/discord/","text":"<p>You can follow these instructions to create a webhook in Discord to use with the following nodes. - Discord</p>","title":"Discord"},{"location":"workflow/integrations/credentials/discord/#prerequisites","text":"<p>Create a Discord account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/discord/#creating-a-webhook-in-discord","text":"<ol> <li>To create a webhook in Discord that sends content to your channel, go to the settings of your channel.</li> <li>Select 'Integrations' from the sidebar.</li> <li>Click on the Create Webhook button.</li> <li>Name your bot, and click on the Copy Webhook URL button to copy the webhook URL.</li> <li>Back in Doc\u00b2, use the copied webhook URL in your Discord node.</li> </ol> <p></p>","title":"Creating a webhook in Discord"},{"location":"workflow/integrations/credentials/discourse/","text":"<p>You can use these credentials to authenticate the following nodes with Discourse. - Discourse</p>","title":"Discourse"},{"location":"workflow/integrations/credentials/discourse/#prerequisites","text":"<ul> <li>Host an instance of Discourse</li> <li>Create an account on your hosted instance and make sure that you are an admin</li> </ul>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/discourse/#using-api-key","text":"<ol> <li>Open your Discourse dashboard.</li> <li>Click on the API tab.</li> <li>Click on the + New API Key button.</li> <li>Enter a description in the Description field.</li> <li>Based on your use-case, do one of the following:<ul> <li>If you want to create the API key for a single user, select 'Single User' from the User Level dropdown list. Enter the username in the User field and select the user from the dropdown list.</li> <li>If you want to create the API key for all your users, select 'All Users' from the User Level dropdown list.</li> </ul> </li> <li>If you want to select all the scopes, check the Global Key (allowed all actions) checkbox. Otherwise, select scopes individually under the Scopes section.</li> <li>Click on the Save button.</li> <li>Copy the displayed API key.</li> <li>Enter the name for your credentials in the Credentials Name field in the 'Discourse API' credentials in Workflow\u00b2.</li> <li>Enter the URL of your Discourse instance in the URL field in the 'Discourse API' credentials in Workflow\u00b2. For example, <code>https://community.n8n.io</code>.</li> <li>Paste the API key in the API Key field in the 'Discourse API' credentials in Workflow\u00b2.</li> <li>Enter your Discourse username in the Username field in the 'Discourse API' credentials in Workflow\u00b2.</li> <li>Click the Create button to create your credentials in Workflow\u00b2.</li> </ol> <p>The following video demonstrates the steps mentioned above.</p>","title":"Using API Key"},{"location":"workflow/integrations/credentials/disqus/","text":"<p>You can use these credentials to authenticate the following nodes with Disqus. - Disqus</p>","title":"Disqus"},{"location":"workflow/integrations/credentials/disqus/#prerequisites","text":"<p>Create a Disqus account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/disqus/#using-access-token","text":"<ol> <li>Access the Disqus Application Registration Page.</li> <li>Fill out the application information and click on Register my application.</li> <li>Click on Details at the top and use the provided 'API Key' with your Disqus node credentials in Workflow\u00b2.</li> </ol> <p></p>","title":"Using Access Token"},{"location":"workflow/integrations/credentials/drift/","text":"<p>You can use these credentials to authenticate the following nodes with Drift. - Drift</p>","title":"Drift"},{"location":"workflow/integrations/credentials/drift/#prerequisites","text":"<p>Create a Drift account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/drift/#using-oauth","text":"<p>\u26c5\ufe0f Note fordoc2app.cloudintegration.eu users</p> <p>You'll only need to enter the Credentials Name and click on the circle button in the OAuth section to connect your Drift account to Workflow\u00b2.</p>  <ol> <li>Access your Drift apps page.</li> <li>Click on the Build Your App button. You can also select an existing app if you already have one.</li> <li>Enter a name in the App name field.</li> <li>Click on 'Oauth &amp; Scopes' in the sidebar.</li> <li>Copy your OAuth Callback URL from the 'Create New Credentials' screen in Doc\u00b2, paste in the Add Redirect URL field, and click on the Add button.</li> <li>Click on 'App Credentials' in the sidebar.</li> <li>Use the Client ID and Secret ID with your Drift OAuth2 API node credentials in Workflow\u00b2.</li> <li>Click on the circle button in the OAuth section to connect your Drift account to Workflow\u00b2.</li> <li>Click the Save button to save your credentials.</li> </ol> <p></p>","title":"Using OAuth"},{"location":"workflow/integrations/credentials/drift/#using-access-token","text":"<ol> <li>Access your Drift apps.</li> <li>Select your App (or create a new one).</li> <li>Click on \"Manage\".</li> <li>Click on \"Installing to Drift\".</li> <li>Use token with your Drift Node credentials in Workflow\u00b2.</li> </ol> <p></p>","title":"Using Access Token"},{"location":"workflow/integrations/credentials/dropbox/","text":"<p>You can use these credentials to authenticate the following nodes with Dropbox. - Dropbox</p>","title":"Dropbox"},{"location":"workflow/integrations/credentials/dropbox/#prerequisites","text":"<p>Create a Dropbox account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/dropbox/#using-oauth","text":"<p>\u26c5\ufe0f Note fordoc2app.cloudintegration.eu users</p> <p>You'll only need to enter the Credentials Name and click on the circle button in the OAuth section to connect your Dropbox account to Workflow\u00b2.</p>  <ol> <li>Access the Dropbox app creation page.</li> <li>Select 'Scoped access' under the Choose an API section.</li> <li>Select an access type under the Choose the type of access you need. You can read more about the access type here.</li> <li>In the Name your app section, enter a name for your app.</li> <li>Click on the Create app button.</li> <li>Click on the Permissions tab and give all the permissions under the Files and folders section.</li> <li>Click on the Submit button.</li> <li>Click on the Settings tab.</li> <li>Copy your OAuth Callback URL from the 'Create New Credentials' screen in Doc\u00b2 and paste in the Redirect URIs field under the OAuth 2 section.</li> <li>Click on the Add button.</li> <li>Enter the provided App key and the App secret in the Client ID and Client Secret field, respectively, in your Dropbox OAuth2 API credentials in Workflow\u00b2.</li> <li>Click on the circle button in the OAuth section to connect your Dropbox account to Workflow\u00b2.</li> <li>Click on the Save button to save your credentials.</li> </ol> <p></p>","title":"Using OAuth"},{"location":"workflow/integrations/credentials/dropbox/#using-access-token","text":"<ol> <li>Access the Dropbox app creation page.</li> <li>Select 'Scoped access' under the Choose an API section.</li> <li>Select an access type under the Choose the type of access you need. You can read more about the access type here.</li> <li>In the Name your app section, enter a name for your app.</li> <li>Click on the Create app button.</li> <li>Click on the Permissions tab and give all the permissions under the Files and folders section.</li> <li>Click on the Submit button.</li> <li>Click on the Settings tab.</li> <li>Scroll down to the OAuth 2 section and select 'No expiration' from the Access token expiration dropdown list.</li> <li>Click on the Generate button.</li> <li>Use the displayed Generated access token with your Dropbox credentials in Workflow\u00b2.</li> </ol> <p></p>","title":"Using Access Token"},{"location":"workflow/integrations/credentials/dropcontact/","text":"<p>You can use these credentials to authenticate the following nodes with Dropcontact. - Dropcontact</p>","title":"Dropcontact"},{"location":"workflow/integrations/credentials/dropcontact/#prerequisites","text":"<p>Create an account on a Dropcontact app.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/dropcontact/#using-api-key","text":"<ol> <li>Open your Dropcontact dashboard.</li> <li>Select API from the left sidebar. </li> <li>Click on the Copy button to copy the API key.</li> <li>Paste the API key in the API Key field in the 'Credential for Dropcontact API' fields in Workflow\u00b2.</li> <li>Click on the Save button to create your credentials.</li> </ol> <p></p>","title":"Using API Key"},{"location":"workflow/integrations/credentials/egoi/","text":"<p>You can use these credentials to authenticate the following nodes with E-goi. - E-goi</p>","title":"E-goi"},{"location":"workflow/integrations/credentials/egoi/#prerequisites","text":"<p>Create an E-goi account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/egoi/#using-api-key","text":"<ol> <li>Access your E-goi dashboard.</li> <li>Click on your name on the top right corner and select 'Integrations'.</li> <li>Copy the API key that is displayed and use it with your E-goi node credentials in Workflow\u00b2.</li> </ol> <p></p>","title":"Using API Key"},{"location":"workflow/integrations/credentials/elasticSecurity/","text":"<p>You can use these credentials to authenticate the following nodes:</p> <ul> <li>Elastic Security</li> </ul>","title":"Elastic Security"},{"location":"workflow/integrations/credentials/elasticSecurity/#prerequisites","text":"<ul> <li>Create an Elastic Security account.</li> <li>Deploy an application.</li> </ul>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/elasticSecurity/#using-basic-auth","text":"<p>From Elastic Security:</p> <ol> <li>Navigate to your Dashboard &gt; Deployments section and open the dashboard for the desired deployment.</li> <li>From the Applications section, copy the endpoint of your application.</li> </ol> <p>From n8n:</p> <ol> <li>In the Credential Data section, enter your:<ul> <li>Username</li> <li>Password</li> <li>Base URL: The application endpoint obtained above.</li> </ul> </li> <li>Click Save to save your credentials.</li> </ol>","title":"Using Basic Auth"},{"location":"workflow/integrations/credentials/elasticsearch/","text":"<p>You can use these credentials to authenticate the following nodes:</p> <ul> <li>Elasticsearch</li> </ul>","title":"Elasticsearch"},{"location":"workflow/integrations/credentials/elasticsearch/#prerequisites","text":"<ul> <li>Create an Elasticsearch account.</li> <li>Deploy an application.</li> </ul>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/elasticsearch/#using-basic-auth","text":"<p>From Elasticsearch:</p> <ol> <li>Navigate to your Dashboard &gt; Deployments section and open the dashboard for the desired deployment.</li> <li>From the Applications section, copy the endpoint of the Elasticsearch application.</li> </ol> <p>From n8n:</p> <ol> <li>Enter a descriptive Credentials Name.</li> <li>In the Credential Data section, enter your:<ul> <li>Username</li> <li>Password</li> <li>Base URL: The Elasticsearch application endpoint obtained above.</li> </ul> </li> <li>Click Create to save your credentials.</li> </ol>","title":"Using Basic Auth"},{"location":"workflow/integrations/credentials/emelia/","text":"<p>You can use these credentials to authenticate the following nodes with Emelia. - Emelia - Emelia Trigger</p>","title":"Emelia"},{"location":"workflow/integrations/credentials/emelia/#prerequisites","text":"<p>Create a Emelia account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/emelia/#using-api-key","text":"<ol> <li>Open the Emelia dashboard page.</li> <li>Click on the avatar on the top-right and select 'API Keys'.</li> <li>Click on the Generate new API key button.</li> <li>Click on the menu icon and select 'Copy API Key' from the dropdown list.</li> <li>Enter a name for your credentials in the Credentials Name field in the 'Emelia API' credentials in Workflow\u00b2.</li> <li>Paste the API key in the API Key field in the 'Emelia API' credentials in Workflow\u00b2.</li> <li>Click the Create button to create your credentials in Workflow\u00b2.</li> </ol> <p>The following video demonstrates the steps mentioned above.</p>","title":"Using API Key"},{"location":"workflow/integrations/credentials/erpnext/","text":"<p>You can use these credentials to authenticate the following nodes with Emelia. - ERPNext</p>","title":"ERPNext"},{"location":"workflow/integrations/credentials/erpnext/#prerequisites","text":"<ul> <li>Create a ERPNext account.</li> </ul>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/erpnext/#using-api-key","text":"<ol> <li>Open your ERPNext dashboard page.</li> <li>Click on Settings on the top and select 'My Settings'.</li> <li>Scroll down to the bottom of the page and click on API Access.</li> <li>Click on the Generate Keys button.</li> <li>Copy the displayed API Secret.</li> <li>Enter a name for your credentials in the Credentials Name field in the 'ERPNext API' credentials in Workflow\u00b2.</li> <li>Paste the API Secret in the API Secret field in the 'ERPNext API' credentials in Workflow\u00b2.</li> <li>Copy the API Key from ERPNext. Note: You might have to refresh the ERPNext window to view the API Key.</li> <li>Paste the API Key in the API Key field in the 'ERPNext API' credentials in Workflow\u00b2.</li> <li>Enter the subdomain of your ERPNext account in the Subdomain field in the 'ERPNext API' credentials in Workflow\u00b2. Refer to the FAQs to learn how to get your subdomain.</li> <li>Click on the Create button to create your credentials in Workflow\u00b2.</li> </ol> <p>The following video demonstrates the steps mentioned above.</p>","title":"Using API Key"},{"location":"workflow/integrations/credentials/erpnext/#faqs","text":"","title":"FAQs"},{"location":"workflow/integrations/credentials/erpnext/#how-to-find-the-subdomain-of-an-erpnext-account","text":"<p>In the address bar of your browser, you can find the subdomain. The string between <code>https://</code> and <code>.erpnext.com</code> is your subdomain. For example, if the URL in the address bar is <code>https://n8n.erpnext.com</code>, the subdomain will be <code>n8n</code>.</p>","title":"How to find the subdomain of an ERPNext account?"},{"location":"workflow/integrations/credentials/eventbrite/","text":"<p>You can use these credentials to authenticate the following nodes with Eventbrite. - Eventbrite Trigger</p>","title":"Eventbrite"},{"location":"workflow/integrations/credentials/eventbrite/#prerequisites","text":"<p>Create a Eventbrite account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/eventbrite/#using-oauth","text":"<p>\u26c5\ufe0f Note fordoc2app.cloudintegration.eu users</p> <p>You'll only need to enter the Credentials Name and click on the circle button in the OAuth section to connect your Eventbrite account to Workflow\u00b2.</p>  <ol> <li>Log in to your Eventbrite account.</li> <li>Click on the user icon in the top right.</li> <li>Select Account Settings in the drop down menu.</li> <li>Click on Developer links &gt; API keys in the sidebar.</li> <li>Click on the Create API Key button.</li> <li>Copy the 'OAuth Callback URL' provided in the Eventbrite OAuth API credentials in Doc\u00b2 and paste it in the 'OAuth Redirect URI' field in the Eventbrite API creation page.</li> <li>Fill out any other information that is necessary and click 'Create Key'.</li> <li>Find your API key in the 'API Keys' page and click on 'Show API key, client secret and tokens'.</li> <li>Click on 'Show API key, client secret and tokens' and use the 'API key' and the 'Client secret' with your Eventbrite OAuth API credentials in Workflow\u00b2.</li> <li>Click on the circle button in the OAuth section to connect an Eventbrite account to Workflow\u00b2.</li> <li>Click the Save button to save your credentials.</li> </ol> <p></p>","title":"Using OAuth"},{"location":"workflow/integrations/credentials/eventbrite/#using-access-token","text":"<ol> <li>Log in to your Eventbrite account.</li> <li>Visit your API keys page.</li> <li>Copy your private token.</li> <li>Use provided key with your Eventbrite node credentials in Workflow\u00b2.</li> </ol> <p></p>","title":"Using Access Token"},{"location":"workflow/integrations/credentials/facebookApp/","text":"<p>You can use these credentials to authenticate the following nodes with Facebook. - Facebook Trigger</p> <p>Note: If you want to create credentials for the Facebook Graph API node, follow the instructions mentioned in the Facebook Graph API credentials documentation.</p>","title":"Facebook App"},{"location":"workflow/integrations/credentials/facebookApp/#prerequisites","text":"<p>Create a Facebook account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/facebookApp/#using-app-access-token","text":"<ol> <li>Access the Facebook for Developers portal.</li> <li>Click on My Apps on the top right corner.</li> <li>Access your app. Create an app if you don't already have one.</li> <li>Add the Webhooks product from the Add a Product section on the dashboard.</li> <li>Click on Settings in the left sidebar and select 'Basic'.</li> <li>Click on the Show button and login with your Facebook account.</li> <li>Copy the App Secret displayed on the page.</li> <li>Access the Facebook Graph API Explorer.</li> <li>Select your app from the Facebook App dropdown list on the right sidebar.</li> <li>Select 'Get App Token' from the User or Page dropdown list on the right sidebar.</li> <li>Use the app secret and the generated access token with your Facebook node credentials in Workflow\u00b2.</li> </ol> <p></p>","title":"Using App Access Token"},{"location":"workflow/integrations/credentials/facebookGraph/","text":"<p>You can use these credentials to authenticate the following nodes with Facebook. - Facebook Graph API</p> <p>Note: If you want to create credentials for the Facebook Trigger node, follow the instructions mentioned in the Facebook App credentials documentation.</p>","title":"Facebook Graph API"},{"location":"workflow/integrations/credentials/facebookGraph/#prerequisites","text":"<p>Create a Facebook account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/facebookGraph/#using-access-token","text":"<ol> <li>Access Facebook for Developers portal.</li> <li>Click on \"My Apps\".</li> <li>Access your app. Create an app if you don't already have one.</li> <li>Access the Facebook Graph API Explorer.</li> <li>Select your app under the Facebook App dropdown list on the right sidebar.</li> <li>Click on the 'Generate Access Token' button and login with your facebook account.</li> <li>Use generated access token with your Facebook node credentials in Workflow\u00b2.</li> </ol> <p></p>","title":"Using Access Token"},{"location":"workflow/integrations/credentials/figma/","text":"<p>You can use these credentials to authenticate the following nodes:</p> <ul> <li>Figma Trigger (Beta)</li> </ul>","title":"Figma"},{"location":"workflow/integrations/credentials/figma/#prerequisites","text":"<p>Create a Figma account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/figma/#using-api-key","text":"<ol> <li>Log in to Figma.</li> <li>Click on the avatar on the top-right and select Settings.</li> <li>Scroll down to Personal access tokens, enter a name for your token in the input field and confirm by pressing Enter.</li> <li>Click on Copy this token.</li> <li>Paste the API key in the Access Token field of the Figma API credentials screen in Workflow\u00b2.</li> <li>Click the Save button to save your credentials in Workflow\u00b2.</li> </ol>","title":"Using API Key"},{"location":"workflow/integrations/credentials/fileMaker/","text":"<p>You can use these credentials to authenticate the following nodes with FileMaker. - FileMaker</p>","title":"FileMaker"},{"location":"workflow/integrations/credentials/fileMaker/#prerequisites","text":"<p>Create an user account on a FileMaker server. </p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/fileMaker/#using-database-connection","text":"<ol> <li>Retrieve your FileMaker credentials and connection parameters.</li> <li>Use the credentials and connection parameters with your FileMaker node credentials in Workflow\u00b2.</li> <li>Click on the Save button to save your credentials.</li> </ol>","title":"Using Database Connection"},{"location":"workflow/integrations/credentials/flow/","text":"<p>You can use these credentials to authenticate the following nodes with Flow. - Flow - Flow Trigger</p>","title":"Flow"},{"location":"workflow/integrations/credentials/flow/#prerequisites","text":"<p>Create a Flow account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/flow/#using-access-token","text":"<ol> <li>Access your Flow dashboard.</li> <li>Click on your Organisation icon in the top left.</li> <li>Click on Account Preferences.</li> <li>Click on the Create a Personal Access Token button.</li> <li>As you generate your access token, you will also receive an organisation ID.</li> <li>Use provided access token and organisation ID with your Flow node credentials in Workflow\u00b2.</li> </ol> <p></p>","title":"Using Access Token"},{"location":"workflow/integrations/credentials/formIoTrigger/","text":"<p>You can use these credentials to authenticate the following nodes:</p> <ul> <li>Form.io Trigger</li> </ul>","title":"Form.io Trigger"},{"location":"workflow/integrations/credentials/formIoTrigger/#prerequisites","text":"<p>Create a Form.io account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/formIoTrigger/#using-basic-auth","text":"<p>After creating your Form.io account, from n8n:</p> <ol> <li>Enter a descriptive Credentials Name.</li> <li>Select whether your Environment is Cloud-hosted or Self-hosted.</li> <li>Enter your Form.io account Email.</li> <li>Enter your Form.io account Password.</li> <li>Click Create to save your new credentials.</li> </ol>","title":"Using Basic auth"},{"location":"workflow/integrations/credentials/formstackTrigger/","text":"<p>You can use these credentials to authenticate the following nodes:</p> <ul> <li>Formstack Trigger</li> </ul>","title":"Formstack Trigger"},{"location":"workflow/integrations/credentials/formstackTrigger/#prerequisites","text":"<p>Create a Formstack account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/formstackTrigger/#using-access-token","text":"<p>After creating your Formstack account: </p> <ol> <li>From the user menu select API.</li> <li>Select New Application.</li> <li>In the Create Application window enter the following:<ul> <li>Application Name: Provide a descriptive name.</li> <li>Redirect URI: Enter the OAuth callback URL for your Doc\u00b2 instance in the format <code>http://&lt;n8n_url&gt;/rest/oauth2-credential/callback</code>. For example <code>http://localhost:5678/rest/oauth2-credential/callback</code>.</li> <li>Description: Enter a brief description.</li> <li>Platform: Select Website.</li> </ul> </li> <li>Click Create Application.</li> <li>Copy the Access Token for your new application.</li> </ol> <p>From n8n:</p> <ol> <li>Enter a descriptive Credentials Name.</li> <li>Enter your Formstack Access Token.</li> <li>Click Create to save your new credentials.</li> </ol>","title":"Using Access token"},{"location":"workflow/integrations/credentials/formstackTrigger/#using-oauth2","text":"<p>After creating your Formstack account: </p> <ol> <li>From the user menu select API.</li> <li>Select New Application.</li> <li>In the Create Application window enter the following:<ul> <li>Application Name: Provide a descriptive name.</li> <li>Redirect URI: Enter the OAuth callback URL for your Doc\u00b2 instance in the format <code>http://&lt;n8n_url&gt;/rest/oauth2-credential/callback</code>. For example <code>http://localhost:5678/rest/oauth2-credential/callback</code>.</li> <li>Description: Enter a brief description.</li> <li>Platform: Select Website.</li> </ul> </li> <li>Click Create Application.</li> <li>Select your new application to view the Application Details.</li> <li>Copy the Client ID and Client Secret.</li> </ol> <p>From n8n:</p> <ol> <li>Enter a descriptive Credentials Name.</li> <li>Enter your Formstack Client ID.</li> <li>Enter your Formstack Client Secret.</li> <li>Click the circle button to initiate the OAuth2 flow.</li> <li>In the modal window select Authorize.</li> <li>Click Create to save your new credentials.</li> </ol>","title":"Using OAuth2"},{"location":"workflow/integrations/credentials/freshdesk/","text":"<p>You can use these credentials to authenticate the following nodes with Freshdesk. - Freshdesk</p>","title":"Freshdesk"},{"location":"workflow/integrations/credentials/freshdesk/#prerequisites","text":"<p>Create a Freshdesk account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/freshdesk/#using-access-token","text":"<ol> <li>Access your Freshdesk dashboard.</li> <li>Click on your Organisation icon in the top right.</li> <li>Click on Profile Settings.</li> <li>Find your API key on the right panel.</li> <li>Use provided API key and your subdomain (i.e n8n) with your Freshdesk node credentials in Workflow\u00b2.</li> </ol> <p></p>","title":"Using Access Token"},{"location":"workflow/integrations/credentials/freshservice/","text":"<p>You can use these credentials to authenticate the following nodes:</p> <ul> <li>Freshservice</li> </ul>","title":"Freshservice"},{"location":"workflow/integrations/credentials/freshservice/#prerequisites","text":"<p>Create a Freshservice account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/freshservice/#using-api-key","text":"<p>From Freshservice:</p> <ol> <li>Access your Freshservice dashboard.</li> <li>Click on your User icon in the top right and select Settings.</li> <li>Click on API Settings.</li> <li>Copy your API key.</li> </ol> <p>From n8n:</p> <ol> <li>Enter a descriptive Credentials Name.</li> <li>Under Credential Data, enter the API Key obtained above in the corresponding field.</li> <li>In the Domain field enter the subdomain of your Freshservice account. This is part of the URL, for example <code>https://&lt;subdomain&gt;.freshservice.com/</code>.</li> <li>Click Save to create your new credentials.</li> </ol>","title":"Using API Key"},{"location":"workflow/integrations/credentials/freshworksCrm/","text":"<p>You can use these credentials to authenticate the following nodes:</p> <ul> <li>Freshworks CRM</li> </ul>","title":"Freshworks CRM"},{"location":"workflow/integrations/credentials/freshworksCrm/#prerequisites","text":"<p>Create a Freshworks CRM account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/freshworksCrm/#using-api-key","text":"<p>From Freshworks CRM:</p> <ol> <li>Access your Freshworks CRM dashboard.</li> <li>Click on your User icon in the top right and select Settings.</li> <li>Click on API Settings.</li> <li>Copy your API key.</li> </ol> <p>From n8n:</p> <ol> <li>Enter a descriptive Credentials Name.</li> <li>Under Credential Data, enter the API Key obtained above in the corresponding field.</li> <li>In the Domain field enter the subdomain of your Freshworks CRM account. This is part of the URL, for example <code>https://&lt;subdomain&gt;.myfreshworks.com/</code>.</li> <li>Click Save to create your new credentials.</li> </ol>","title":"Using API Key"},{"location":"workflow/integrations/credentials/ftp/","text":"<p>You can use these credentials to authenticate the following nodes with FTP. - FTP</p>","title":"FTP"},{"location":"workflow/integrations/credentials/ftp/#prerequisites","text":"<p>Create an account on an FTP server. </p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/ftp/#using-ftpsftp","text":"<ol> <li>Retrieve your login credentials, FTP/SFTP host, and port parameters.</li> <li>Use the login credentials, FTP/SFTP host, and port parameters with your FTP node credentials in Workflow\u00b2.</li> <li>Click on the Save button to save your credentials.</li> </ol>","title":"Using FTP/SFTP"},{"location":"workflow/integrations/credentials/getResponse/","text":"<p>You can use these credentials to authenticate the following nodes with GetResponse. - GetResponse - GetResponse Trigger</p>","title":"GetResponse"},{"location":"workflow/integrations/credentials/getResponse/#prerequisites","text":"<p>Create a GetResponse account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/getResponse/#using-oauth","text":"<p> Callback URL with GetResponse</p> <p>Note: The Redirect URL should be a URL in your domain. For example, <code>https://mytemplatemaker.example.com/gr_callback</code>. GetResponse doesn't accept the localhost callback URL. Refer to the FAQs to learn to configure the credentials for the local environment.</p>  <ol> <li>Open your GetResponse dashboard.</li> <li>Click on Menu and select 'Integrations and API'.</li> <li>Click on the Custom apps tab.</li> <li>Click on the Register your app button.</li> <li>Enter all the necessary information.</li> <li>Copy your OAuth Callback URL from the 'Create New Credentials' screen in Doc\u00b2 and paste it in the Redirect URL field.</li> <li>Click on the Add button.</li> <li>Click on the app you created to get the Client ID and the Client Secret.</li> <li>Copy the displayed Client ID.</li> <li>Enter a name for your credentials in the Credentials Name field in the 'GetResponse OAuth2 API' credentials in Workflow\u00b2.</li> <li>Paste the Client ID in the Client ID field in the 'GetResponse OAuth2 API' credentials in Workflow\u00b2.</li> <li>Copy the Client secret key from GetResponse.</li> <li>Paste it in the Client Secret field in the 'GetResponse OAuth2 API' credentials in Workflow\u00b2.</li> <li>Click on the circle button in the OAuth section to connect a GetResponse account to Workflow\u00b2.</li> <li>Click on the Save button to save your credentials in Workflow\u00b2.</li> </ol> <p>The following video demonstrates the steps mentioned above.</p>","title":"Using OAuth"},{"location":"workflow/integrations/credentials/getResponse/#using-api-key","text":"<ol> <li>Open your GetResponse dashboard.</li> <li>Click on Menu and select 'Integrations and API'.</li> <li>Click on the API tab.</li> <li>Click on the Generate API key button.</li> <li>Enter a name for your key.</li> <li>Click on the Generate button.</li> <li>Copy the displayed API key.</li> <li>Enter a name for your credentials in the Credentials Name field in the 'GetResponse API' credentials in Workflow\u00b2.</li> <li>Paste the API key in the API Key field in the 'GetResponse API' credentials in Workflow\u00b2.</li> <li>Click the Create button to create your credentials in Workflow\u00b2.</li> </ol> <p>The following video demonstrates the steps mentioned above.</p>","title":"Using API Key"},{"location":"workflow/integrations/credentials/getResponse/#faqs","text":"","title":"FAQs"},{"location":"workflow/integrations/credentials/getResponse/#how-to-configure-the-oauth-credentials-for-the-local-environment","text":"<p>GetResponse doesn't accept the localhost callback  URL. However, you can follow the steps mentioned below to configure the OAuth credentials for the local environment: 1. We will use ngrok to expose the local server running on port <code>5678</code> to the internet. In your terminal, run the following command: <pre><code>ngrok http 5678\n</code></pre>  2. Run the following command in a new terminal. Replace <code>&lt;YOUR-NGROK-URL&gt;</code> with the URL that you get from the previous step. <pre><code>export WEBHOOK_URL=&lt;YOUR-NGROK-URL&gt;\n</code></pre>  3. Start your Doc\u00b2 instance. 4. Follow the instructions mentioned in the Using OAuth section to configure your credentials.</p>","title":"How to configure the OAuth credentials for the local environment?"},{"location":"workflow/integrations/credentials/getResponse/#further-reference","text":"<ul> <li>OAuth 2.0 - Authorization Code</li> <li>Authentication - API key</li> </ul>","title":"Further Reference"},{"location":"workflow/integrations/credentials/ghost/","text":"<p>You can use these credentials to authenticate the following nodes with Ghost. - Ghost</p>","title":"Ghost"},{"location":"workflow/integrations/credentials/ghost/#prerequisites","text":"<p>Create a Ghost account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/ghost/#using-admin-api","text":"<ol> <li>Access your Ghost Admin dashboard.</li> <li>Click on Integrations in the left sidebar.</li> <li>Click on + Add custom integration under the CUSTOM INTEGRATIONS section.</li> <li>Enter a name for the integration in the Name field.</li> <li>Click on the Create button.</li> <li>Use this URL and Admin API Key with your Ghost node credentials in Workflow\u00b2.</li> </ol>","title":"Using Admin API"},{"location":"workflow/integrations/credentials/ghost/#using-content-api","text":"<ol> <li>Access your Ghost Admin dashboard.</li> <li>Click on Integrations in the left sidebar.</li> <li>Click on + Add custom integration under the CUSTOM INTEGRATIONS section.</li> <li>Enter a name for the integration in the Name field.</li> <li>Click on the Create button.</li> <li>Use this URL and Content API Key with your Ghost node credentials in Workflow\u00b2.</li> </ol> <p></p>","title":"Using Content API"},{"location":"workflow/integrations/credentials/git/","text":"<p>You can use these credentials to authenticate the following nodes with Git. - Git</p>","title":"Git"},{"location":"workflow/integrations/credentials/git/#prerequisites","text":"<p>Create an account on GitHub, GitLab, or similar platforms.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/git/#using-username-and-password","text":"<ol> <li>Enter a name for your credentials in the Credentials Name field in the 'Git' credentials in Workflow\u00b2.</li> <li>Enter your GitHub, GitLab (or similar platforms) username in the Username field in the 'Git' credentials in Workflow\u00b2.</li> <li>Enter your GitHub, GitLab (or similar platforms) password in the Password field in the 'Git' credentials in Workflow\u00b2.</li> <li>Click the Create button to create your credentials in Workflow\u00b2.</li> </ol> <p>The following video demonstrates the steps mentioned above.</p>","title":"Using Username and Password"},{"location":"workflow/integrations/credentials/github/","text":"<p>You can use these credentials to authenticate the following nodes with GitHub. - GitHub - GitHub Trigger</p>","title":"GitHub"},{"location":"workflow/integrations/credentials/github/#prerequisites","text":"<p>Create a GitHub account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/github/#using-oauth","text":"<p>\u26c5\ufe0f Note fordoc2app.cloudintegration.eu users</p> <p>You'll only need to enter the Credentials Name and click on the circle button in the OAuth section to connect your GitHub account to Workflow\u00b2.</p>  <ol> <li>Open your GitHub dashboard.</li> <li>Click on your user icon in the top right.</li> <li>Click on Settings.</li> <li>Click on Developer settings.</li> <li>Select OAuth Apps.</li> <li>Click on the Register a new application button.</li> <li>Enter the Application name and Homepage URL.</li> <li>Copy the OAuth Callback URL from Doc\u00b2 and paste it in the Authorization callback URL field.</li> <li>Click on the Register application button.</li> <li>Copy the displayed 'Client ID'.</li> <li>Enter the name for your credentials in the Credentials Name field in the 'Github OAuth2 API' credentials in Workflow\u00b2.</li> <li>Paste the client ID in the Client ID field in the 'Github OAuth2 API' credentials in Workflow\u00b2.</li> <li>On your application page, click on the Generate a new client secret button.</li> <li>Copy the displayed 'Client Secret'.</li> <li>Paste the client secret in the Client Secret field in the 'Github OAuth2 API' credentials in Workflow\u00b2.</li> <li>Click on the circle button in the OAuth section to connect a GitHub account to Workflow\u00b2.</li> <li>Click the Save button to save your credentials in Workflow\u00b2.</li> </ol> <p>The following video demonstrates the steps mentioned above.</p>    <p>The following video demonstrates the steps to authenticate the GitHub node on n8n.cloud.</p>","title":"Using OAuth"},{"location":"workflow/integrations/credentials/github/#using-access-token","text":"<ol> <li>Open your GitHub dashboard.</li> <li>Click on your user icon in the top right.</li> <li>Click on Settings.</li> <li>Click on Developer settings.</li> <li>Select Personal access tokens.</li> <li>Click on Generate new token.</li> <li>Enter a note in the Note field.</li> <li>Select the relevant scopes from the Select scopes section.</li> <li>Scroll down to the bottom and click on the Generate token button.</li> <li>Copy the displayed 'Personal access token'.</li> <li>Enter the name for your credentials in the Credentials Name field in the 'Github API' credentials in Workflow\u00b2.</li> <li>Enter your GitHub username in the User field in the 'Github API' credentials in Workflow\u00b2.</li> <li>Paste the access token in the Access Token field in the 'Github API' credentials in Workflow\u00b2.</li> <li>Click the Create button to save your credentials in Workflow\u00b2.</li> </ol> <p>The following video demonstrates the steps mentioned above.</p>","title":"Using Access Token"},{"location":"workflow/integrations/credentials/gitlab/","text":"<p>You can use these credentials to authenticate the following nodes with GitLab. - GitLab - GitLab Trigger</p>","title":"GitLab"},{"location":"workflow/integrations/credentials/gitlab/#prerequisites","text":"<p>Create a GitLab account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/gitlab/#using-oauth","text":"<p>\u26c5\ufe0f Note fordoc2app.cloudintegration.eu users</p> <p>You'll only need to enter the Credentials Name and click on the circle button in the OAuth section to connect your GitLab account to Workflow\u00b2.</p>  <ol> <li>Access your GitLab dashboard.</li> <li>Click on your user icon in the top right.</li> <li>Click on 'Settings'.</li> <li>Click on 'Applications' in the sidebar.</li> <li>Enter a name in the Name field.</li> <li>Copy the 'OAuth Callback URL' provided in the 'Gitlab OAuth2 API' credentials in Doc\u00b2 and paste it in the Redirect URI field in the GitLab app creation page.</li> <li>Select any scopes you plan to use and then click on Save application.</li> <li>Use the Application ID and Secret with your GitLab OAuth2 API credentials in Workflow\u00b2.</li> <li>Click on the circle button in the OAuth section to connect a GitLab account to Workflow\u00b2.</li> <li>Click on the Save button to save your credentials.</li> </ol> <p></p>","title":"Using OAuth"},{"location":"workflow/integrations/credentials/gitlab/#using-access-token","text":"<ol> <li>Access your GitLab dashboard.</li> <li>Click on your user icon in the top right.</li> <li>Click on 'Settings'.</li> <li>Click on 'Access Tokens' in the sidebar.</li> <li>Enter a name in the Name field.</li> <li>Fill out the required information to receive the access token.</li> <li>Select any scopes you plan to use and then click on Create personal access token.</li> <li>Use the generated access token with your GitLab node credentials in Workflow\u00b2.</li> <li>Click on the Save button to save your credentials.</li> </ol> <p></p>","title":"Using Access Token"},{"location":"workflow/integrations/credentials/goToWebinar/","text":"<p>You can use these credentials to authenticate the following nodes with GoToWebinar. - GoToWebinar</p>","title":"GoToWebinar"},{"location":"workflow/integrations/credentials/goToWebinar/#prerequisites","text":"<p>Create a GoToWebinar account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/goToWebinar/#using-oauth","text":"<ol> <li>Sign in to the GoTo Developer Center page.</li> <li>Click on the OAuth Clients tab.</li> <li>Click on the Create a client button.</li> <li>Enter a name in the Client name field.</li> <li>Copy the 'OAuth Callback URL' provided in the 'GoToWebinar OAuth2 API' credentials in Workflow\u00b2.</li> <li>Paste the URL in the Redirect URIs field and click on the Next button.</li> <li>Based on your use-case, select the required scopes.</li> <li>Click on the Save button.</li> <li>Copy the displayed Client ID.</li> <li>Enter a name for your credentials in the Credentials Name field in the 'GoToWebinar OAuth2 API' credentials in Workflow\u00b2.</li> <li>Paste the client ID in the Client ID field in the 'GoToWebinar OAuth2 API' credentials in Workflow\u00b2.</li> <li>Copy the displayed Client secret from the GoTo Client Management Portal.</li> <li>Accept the I have stored the client secret option and click on the Done button.</li> <li>Paste the client secret in the Client Secret field in the 'GoToWebinar OAuth2 API' credentials in Workflow\u00b2.</li> <li>Click on the circle button in the OAuth section to connect a GoToWebinar account to Workflow\u00b2.</li> <li>Click the Save button to save your credentials in Workflow\u00b2.</li> </ol> <p>The following video demonstrates the steps mentioned above.</p>","title":"Using OAuth"},{"location":"workflow/integrations/credentials/google/","text":"<p>There are two authentication methods available for Google services nodes, OAuth2 and the Service Account authentication. Refer to the official Google documentation to learn which is appropriate for your case case.</p> <p>Note that while all nodes are compatible with OAuth2 authentication, only some also support Service Account authentication.</p>","title":"Google"},{"location":"workflow/integrations/credentials/google/#prerequisites","text":"<ul> <li>Google Cloud account</li> <li>Google Cloud Platform project</li> <li>Request API Access (For Google Perspective Only)</li> </ul>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/google/#compatible-nodes","text":"<p>Once configured, you can use your credentials to authenticate the following nodes:</p>    Node OAuth Service Account     G Suite Admin     Gmail     Google Analytics     Google BigQuery     Google Books     Google Calendar     Google Chat     Google Contacts     Google Cloud Firestore     Google Cloud Natural Language     Google Cloud Realtime Database     Google Docs     Google Drive     Google Drive Trigger     Google Perspective     Google Sheets     Google Slides     Google Tasks     Google Translate     YouTube       <p>\u26c5\ufe0f Note fordoc2app.cloudintegration.eu users</p> <p>For the following nodes, you only need to enter the Credentials Name and click on the Sign in with Google button in the OAuth section to connect your Google account to n8n:</p>  <ul> <li>Google Calendar</li> <li>Google Contacts</li> <li>Google Sheets</li> <li>Google Tasks</li> </ul>","title":"Compatible nodes"},{"location":"workflow/integrations/credentials/google/#using-oauth","text":"<p>From your Google Cloud Console dashboard:</p> <ol> <li>Click on the hamburger menu and select APIs &amp; Services &gt; Credentials.</li> <li> <p>Click on + CREATE CREDENTIALS and select OAuth client ID.</p> <p>!!! tip \u2757\ufe0f Note for new users     If you're creating OAuth credentials for the first time, you will have to configure the consent screen.</p> </li> <li> <p>From the Application type dropdown select Web application. A name is automatically generated, change it if desired.</p> </li> <li>From the Authorized redirect URIs section, select + Add URI.</li> <li>Enter the OAuth Callback URL provided in the Google node credential modal:     </li> <li>Click the CREATE button.</li> </ol> <p>From your Doc\u00b2 instance:</p> <ol> <li>Enter your new Client ID and Client Secret from Google Cloud Console in the Doc\u00b2 Credentials modal.</li> <li>Enter a Credentials Name.</li> <li>Click on the Sign in with Google button to complete your Google authentication.</li> <li>Save your new credentials in Workflow\u00b2.</li> </ol> <p>Now you must enable each Google service (e.g. Sheets, Drive, etc.) API that you want to use.</p> <p>The following video demonstrates the steps mentioned above.</p>","title":"Using OAuth"},{"location":"workflow/integrations/credentials/google/#using-service-account","text":"<p>From your Google Cloud Console dashboard:</p> <ol> <li>Click on the hamburger menu and select APIs &amp; Services &gt; Credentials.</li> <li>Click on + CREATE CREDENTIALS and select Service account.</li> <li>Enter a name in the Service account name field.</li> <li>Click on the CREATE button.</li> <li>Based on your use-case, you may want to Select a role and Grant users access to this service account  using the corresponding sections.</li> <li>Click Done.</li> <li>Select your newly created service account under the Service Accounts section and open the Keys tab.</li> <li>Click on ADD KEY and select Create new key.</li> <li>In the modal that appears, select JSON and click Create. The file is saved to your computer.</li> </ol> <p>From you Doc\u00b2 instance:</p> <ol> <li>Enter a Credentials Name.</li> <li>In the Service Account Email field, enter the email associated with your new Service Account (visible in the Details tab).</li> <li>Enter the Private Key from the downloaded JSON file. If you are running an Doc\u00b2 version older than 0.156.0: Replace all instances of <code>\\n</code> in the JSON file with new lines.</li> <li>(Optional) Click the toggle to enable Impersonate a User and enter the desired email.</li> <li>Save your credentials.</li> </ol> <p>Now you must enable each Google service (e.g. Sheets, Drive, etc.) API that you want to use.</p> <p>The following video demonstrates the steps mentioned above.</p>","title":"Using Service Account"},{"location":"workflow/integrations/credentials/google/#enable-apis","text":"<p>To enable an API, follow the steps below:</p> <ol> <li>Access your Google Cloud Console.</li> <li>From the hamburger menu select APIs &amp; Services &gt; Library.</li> <li>Search for and select the API(s) you want to enable.</li> <li>Click on the ENABLE button.</li> </ol>","title":"Enable APIs"},{"location":"workflow/integrations/credentials/google/#faqs","text":"","title":"FAQs"},{"location":"workflow/integrations/credentials/google/#google-hasnt-verified-this-app","text":"<p>If using the OAuth authentication method, you might come across the warning \"Google hasn't verified this app\". To avoid this, you can create OAuth credentials from the same account you want to authenticate. However, if you're using credentials that were generated by another account (by a developer or another third party), you can follow the steps mentioned below:</p> <ol> <li>Click on Advanced.</li> <li>Click on Go to CREDENTIALS_NAME (unsafe). <code>CREDENTIALS_NAME</code> is the name of the credentials created by the third party.</li> <li>Grant the requested permissions.</li> </ol>","title":"Google hasn't verified this app"},{"location":"workflow/integrations/credentials/gotify/","text":"<p>You can use these credentials to authenticate the following nodes with Gotify. - Gotify</p>","title":"Gotify"},{"location":"workflow/integrations/credentials/gotify/#prerequisites","text":"<p>Install Gotify on your server.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/gotify/#using-api-token","text":"<p>Note: To create a message, the App API Token is required. To delete or retrieve all messages, you need the Client API Token.</p> <ol> <li>Access your Gotify dashboard.</li> <li>Click on APPS in the navigation menu.</li> <li>Click on the CREATE APPLICATION button.</li> <li>Enter an application name in the Name field.</li> <li>Click on the CREATE button.</li> <li>Click on CLIENTS in the navigation menu.</li> <li>Click on the CREATE CLIENT button.</li> <li>Enter a name for the client in the Name field.</li> <li>Click on the CREATE button.</li> <li>Use the App Token, Client Token, and the Host URL with your Gotify API credentials in Workflow\u00b2.</li> <li>Click the Save button to save your credentials in Workflow\u00b2.</li> </ol> <p></p>","title":"Using API Token"},{"location":"workflow/integrations/credentials/grafana/","text":"<p>You can use these credentials to authenticate the following nodes with Grafana. - Grafana</p>","title":"Grafana"},{"location":"workflow/integrations/credentials/grafana/#prerequisites","text":"<ul> <li>Create a Grafana account.</li> </ul>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/grafana/#using-access-token","text":"<ol> <li>In Grafana, click the gears icon in the sidebar on the left and select the API Keys option.</li> <li>Click the \"Add API key\" button and enter any Key name.</li> <li>Click Add and copy the key shown.</li> <li>Use the key with your Grafana credentials in Workflow\u00b2.</li> <li>Enter the base URL of your instance (e.g. <code>https://n8n.grafana.net</code>) in Workflow\u00b2.</li> </ol>","title":"Using Access Token"},{"location":"workflow/integrations/credentials/grist/","text":"<p>You can use these credentials to authenticate the following nodes:</p> <ul> <li>Grist.</li> </ul>","title":"Grist"},{"location":"workflow/integrations/credentials/grist/#prerequisites","text":"<p>Create a Grist account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/grist/#api-key","text":"<p>From Grist:</p> <ol> <li>Navigate to your Profile Settings.</li> <li>In the Api key section click Create.</li> <li>Copy the generated API key for use in Workflow\u00b2.</li> </ol> <p>From n8n:</p> <ol> <li>Enter the API Key obtained above.</li> <li>Use the dropdown to select if your are using a Free or Paid plan.</li> <li>For Paid plans, enter your Custom Subdomain (e.g. <code>&lt;subdomain&gt;.getgrist.com</code>).</li> <li>Click on the Create button to create the credentials.</li> </ol>","title":"API key"},{"location":"workflow/integrations/credentials/gumroad/","text":"<p>You can use these credentials to authenticate the following nodes with Gumroad. - Gumroad Trigger</p>","title":"Gumroad"},{"location":"workflow/integrations/credentials/gumroad/#prerequisites","text":"<p>Create a Gumroad account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/gumroad/#using-access-token","text":"<ol> <li>Access your Gumroad dashboard.</li> <li>Click on your user icon on the top right.</li> <li>Click on Settings.</li> <li>Click on the Advanced tab.</li> <li>Scroll down and fill out the required fields and create a new application..</li> <li>From here, you have access the ability to generate an access token.</li> <li>Use provided access token with your Gumroad node credentials in Workflow\u00b2.</li> </ol> <p></p>","title":"Using Access Token"},{"location":"workflow/integrations/credentials/haloPSA/","text":"<p>You can use these credentials to authenticate the following nodes with HaloPSA. - HaloPSA</p>","title":"HaloPSA"},{"location":"workflow/integrations/credentials/haloPSA/#prerequisites","text":"<p>Create a HaloPSA account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/haloPSA/#allow-your-application-to-use-the-api","text":"<ol> <li>Access your HaloPSA dashboard.</li> <li>Click on the Configuration link in the left panel.</li> <li>Under the Integrations menu entry, click on HaloPSA API.</li> <li>In the API Details section you find the values Resource Server, Authorisation Server, and Tenant.</li> <li>In the Applications section click on the View Applications button.</li> <li>Click on the New button to register a new application or click on an existing one and then the Edit button to edit it.</li> <li>Enter a name for your application (for example <code>n8n</code>).</li> <li>Choose <code>Client ID and Secret (Services)</code> as the Authentication Method.</li> <li>Make a note of both the Client ID and the Client Secret. The Client Secret will only be shown once and you will need to generate a new one when lost.</li> <li>Select <code>Agent</code> as your Login Type and one of your agents in the Agent to log in as field.</li> <li>On the Permissions tab, tick <code>all</code> and hit the Save button.</li> <li>On n8n's HaloPSA credentials screen, fill in the values obtained in the previous steps. The Tenant field will be accessible only when the Hosting Type is set to <code>Hosted Solution of Halo</code>.</li> </ol> <p></p> <p> </p>","title":"Allow your application to use the API:"},{"location":"workflow/integrations/credentials/harvest/","text":"<p>You can use these credentials to authenticate the following nodes with Harvest. - Harvest</p>","title":"Harvest"},{"location":"workflow/integrations/credentials/harvest/#prerequisites","text":"<p>Create a Harvest account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/harvest/#using-oauth","text":"<ol> <li>Access the Harvest Developer portal.</li> <li>Click on the Create New OAuth2 Application button.</li> <li>Enter an application name in the Name field.</li> <li>Copy the 'OAuth Callback URL' provided in the Harvest OAuth2 API credentials in Doc\u00b2 and paste it in the Redirect URL field.</li> <li>Click on the Create Application button.</li> <li>Copy the Client ID and Client Secret provided by the new Harvest app that you created and paste it in the Harvest OAuth2 API credentials in Workflow\u00b2.</li> <li>Click on the circle button in the OAuth section to connect your Harvest account to Workflow\u00b2.</li> <li>Click on the Save button to save your credentials.</li> </ol> <p></p>","title":"Using OAuth"},{"location":"workflow/integrations/credentials/harvest/#using-access-token","text":"<ol> <li>Access the Harvest Developer portal.</li> <li>Click on the Create New Personal Access Token button.</li> <li>Enter a token name in the Name field.</li> <li>Click on the Create Personal Access Token button.</li> <li>Use the token with Harvest node credentials in Workflow\u00b2.</li> </ol> <p></p>","title":"Using Access Token"},{"location":"workflow/integrations/credentials/helpScout/","text":"<p>You can use these credentials to authenticate the following nodes with Help Scout. - Help Scout - Help Scout Trigger</p>","title":"Help Scout"},{"location":"workflow/integrations/credentials/helpScout/#prerequisites","text":"<p>Create a Help Scout account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/helpScout/#using-oauth","text":"<p>\u26c5\ufe0f Note fordoc2app.cloudintegration.eu users</p> <p>You'll only need to enter the Credentials Name and click on the circle button in the OAuth section to connect your Help Scout account to Workflow\u00b2.</p>  <ol> <li>Log in to your Help Scout account.</li> <li>Click on the user icon in the top right.</li> <li>Select 'Your Profile' in the drop down menu.</li> <li>Click on 'My Apps' in the sidebar.</li> <li>Click on the Create My App button.</li> <li>Copy the 'OAuth Callback URL' provided in the HelpScout OAuth2 API credentials in Doc\u00b2 and paste it in the 'Redirection URL' field in Help Scout.</li> <li>Fill out any other information that is necessary and click 'Create'.</li> <li>Click on the Save button and use the 'App ID' and the 'App Secret' with your HelpScout OAuth2 API credentials in Workflow\u00b2.</li> <li>Click on the circle button in the OAuth section to connect a Help Scout account to Workflow\u00b2.</li> <li>Click the Save button to save your credentials.</li> </ol> <p></p>","title":"Using OAuth"},{"location":"workflow/integrations/credentials/homeAssistant/","text":"<p>You can use these credentials to authenticate the following nodes with Home Assistant. - Home Assistant</p>","title":"Home Assistant"},{"location":"workflow/integrations/credentials/homeAssistant/#prerequisites","text":"<ul> <li>Install Home Assistant</li> <li>Create a Home Assistant account.</li> <li>Review the Home Assistant Autentication API documentation</li> </ul>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/homeAssistant/#using-access-token","text":"<ol> <li>Access your Home Assistant UI, for example <code>homeassistant.local:8123</code>.</li> <li>Open your user profile page and navigate to the Long-Lived Access Tokens section.</li> <li>Generate a new token and copy it.</li> <li>Use that token with your Home Assistant node credentials in Workflow\u00b2.</li> </ol>","title":"Using access token"},{"location":"workflow/integrations/credentials/httpRequest/","text":"<p>You can use these credentials to authenticate the following nodes:</p> <ul> <li>HTTP Request</li> </ul>","title":"HTTP Request"},{"location":"workflow/integrations/credentials/httpRequest/#prerequisites","text":"<p>You must use the authentication method required by the app or service you want to query. The following authentication methods are available:</p> <ul> <li>Basic Auth</li> <li>Digest Auth</li> <li>Header Auth</li> <li>OAuth1</li> <li>OAuth2</li> <li>None</li> </ul> <p>You can learn more about HTTP authentication here.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/httpRequest/#using-basic-auth-digest-auth","text":"<ol> <li>Enter a descriptive Credentials Name.</li> <li>In the Credential Data section, enter the Username and Password for the app or service your HTTP Request is targeting. </li> <li>Click Create to save your credentials.</li> </ol>","title":"Using Basic Auth / Digest Auth"},{"location":"workflow/integrations/credentials/httpRequest/#using-header-auth","text":"<ol> <li>Enter a descriptive Credentials Name.</li> <li>In the Credential Data section, enter the header Name and Value required for the app or service your HTTP Request is targeting. Read more about HTTP headers.</li> <li>Click Create to save your credentials.</li> </ol>","title":"Using Header Auth"},{"location":"workflow/integrations/credentials/httpRequest/#using-oauth1","text":"<ol> <li>Enter a descriptive Credentials Name.</li> <li>In the Credential Data section, enter the following authentication details:<ul> <li>Authorization URL</li> <li>Access Token URL</li> <li>Consumer Key</li> <li>Consumer Secret</li> <li>Request Token URL</li> <li>Signature Method</li> </ul> </li> <li>Click Create to save your credentials.</li> </ol> <p>Read more about OAuth1.</p>","title":"Using OAuth1"},{"location":"workflow/integrations/credentials/httpRequest/#using-oauth2","text":"<ol> <li>Enter a descriptive Credentials Name.</li> <li>In the Credential Data section, enter the following authentication details:<ul> <li>Authorization URL</li> <li>Access Token URL</li> <li>Client ID</li> <li>Client Secret</li> <li>Scope</li> <li>Auth URI Query Parameters</li> <li>Authentication</li> </ul> </li> <li>Click Create to save your credentials.</li> </ol> <p>Read more about OAuth2.</p>","title":"Using OAuth2"},{"location":"workflow/integrations/credentials/hubspot/","text":"<ul> <li>Workflow\u00b2</li> <li>HubSpot</li> </ul>","title":"Hubspot"},{"location":"workflow/integrations/credentials/hubspot/#hubspot","text":"<p>You can use these credentials to authenticate the following nodes with HubSpot. - HubSpot - HubSpot Trigger</p>","title":"HubSpot"},{"location":"workflow/integrations/credentials/hubspot/#prerequisites","text":"<p>Create a HubSpot account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/hubspot/#using-oauth","text":"<p>\u26c5\ufe0f Note fordoc2app.cloudintegration.eu users</p> <p>You'll only need to enter the Credentials Name and click on the circle button in the OAuth section to connect your HubSpot account to Workflow\u00b2.</p>   <p>\u26a0 HubSpot old accounts</p> <p>Some HubSpot accounts don't have access to all the scopes. HubSpot is migrating accounts gradually. If you can't' find all the scopes in your current HubSpot developer account, try creating a fresh developer account.</p>  <ol> <li>Access your HubSpot Developer Home.</li> <li>Click on the Manage apps button.</li> <li>Click on the Create app button in the top right.</li> <li>Specify an app name in the Public app name field.</li> <li>Click on the 'Auth' tab.</li> <li>Use the provided Client ID and the Client secret with your HubSpot OAuth2 API credentials in Workflow\u00b2.</li> <li>If you are using the HubSpot Trigger node, copy the App ID along with the information in the previous step.</li> <li>Copy your OAuth Callback URL from the 'Create New Credentials' screen in Doc\u00b2 and paste in the Redirect URL section.</li> <li>In the Scopes section, select the following scopes in the Find a scope search box:<ul> <li>Trigger node:<ul> <li>oauth</li> <li>crm.objects.contacts (read),</li> <li>crm.schemas.contacts (read),</li> <li>crm.objects.companies (read),</li> <li>crm.schemas.companies (read),</li> <li>crm.objects.deals (read),</li> <li>crm.schemas.deals (read),</li> </ul> </li> <li>Regular node:<ul> <li>oauth</li> <li>crm.schemas.deals (read),</li> <li>crm.objects.owners (read),</li> <li>crm.objects.contacts (write),</li> <li>crm.objects.companies (write),</li> <li>crm.objects.companies (read),</li> <li>crm.objects.deals (read),</li> <li>crm.schemas.contacts (read),</li> <li>crm.objects.deals (write),</li> <li>crm.objects.contacts (read),</li> <li>crm.schemas.companies (read),</li> <li>forms,</li> <li>tickets,</li> </ul> </li> </ul> </li> <li>Click on the Save button to save your settings in HubSpot.</li> <li>Back in Doc\u00b2, click on the circle button in the OAuth section to connect your HubSpot account to Workflow\u00b2.</li> <li>Click the Save button to save your credentials.</li> </ol>","title":"Using OAuth"},{"location":"workflow/integrations/credentials/hubspot/#using-api-key","text":"<ol> <li>Access your HubSpot dashboard.</li> <li>Click on the gear icon on the top right.</li> <li>Click on Integrations and then API key.</li> <li>Click on the Create key button.</li> <li>Use the key with HubSpot node credentials in Workflow\u00b2.</li> </ol>","title":"Using API key"},{"location":"workflow/integrations/credentials/hubspot/#using-app-token","text":"<ol> <li>Follow the instructions in the Private Apps Documentation to get your access token.</li> <li>Set the access token as the key in your HubSpot credentials in Workflow\u00b2.</li> </ol>","title":"Using APP Token"},{"location":"workflow/integrations/credentials/hubspot/#using-developer-api-key-for-hubspot-trigger-node","text":"<ol> <li>Access your HubSpot Developer Home.</li> <li>Click on Apps in the top bar.</li> <li>Click on the Get HubSpot API key button.</li> <li>Click on the Show key button.</li> <li>Use the displayed Developer API key with your HubSpot Trigger node credentials in Workflow\u00b2.</li> </ol>","title":"Using Developer API Key (for HubSpot Trigger node)"},{"location":"workflow/integrations/credentials/humanticAi/","text":"<p>You can use these credentials to authenticate the following nodes with Humantic AI. - Humantic AI</p>","title":"Humantic AI"},{"location":"workflow/integrations/credentials/humanticAi/#using-api","text":"<ol> <li>Access the Humantic AI API page.</li> <li>Enter your email address in the Business Email field.</li> <li>Click on the GET API KEY button.</li> <li>Enter all the necessary information.</li> <li>Click on the Get API Key button.</li> <li>Set a password for your account and click on the SET PASSWORD button.</li> <li>Use the provided api key with your Humantic AI API credentials in Workflow\u00b2.</li> </ol> <p></p>","title":"Using API"},{"location":"workflow/integrations/credentials/hunter/","text":"<p>You can use these credentials to authenticate the following nodes with Hunter. - Hunter</p>","title":"Hunter"},{"location":"workflow/integrations/credentials/hunter/#prerequisites","text":"<p>Create a Hunter account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/hunter/#using-access-token","text":"<ol> <li>Access your Hunter dashboard.</li> <li>Click on your profile icon on the top right.</li> <li>Click on API.</li> <li>Use the key with Hunter node credentials in Workflow\u00b2.</li> </ol> <p></p>","title":"Using Access Token"},{"location":"workflow/integrations/credentials/imap/","text":"<p>You can use these credentials to authenticate the following nodes with IMAP. - IMAP Email</p>","title":"IMAP"},{"location":"workflow/integrations/credentials/imap/#prerequisites","text":"<p>Create an email account on a service with IMAP support.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/imap/#using-imap","text":"<ol> <li>Retrieve your login credentials and IMAP connection parameters.</li> <li>Use the login credentials and IMAP connection parameters with your IMAP Email node credentials in Workflow\u00b2.</li> <li>Click on the Save button to save your credentials.</li> </ol>","title":"Using IMAP"},{"location":"workflow/integrations/credentials/imap/#using-gmail","text":"<ol> <li>Access your Gmail account.</li> <li>Click on the gears icon on the top and click on See all settings.</li> <li>Click on the Forwarding and POP/IMAP tab.</li> <li>Under the IMAP access section, select 'Enable IMAP'.</li> <li>Click on the Save Changes button.</li> <li>Go to your Google Account page.</li> <li>Click on Security on the left sidebar.</li> <li>Click on 2-Step Verification under the Signing in to Google section.</li> <li>Set up your 2-Step Verification method.</li> <li>Click on App passwords under the Signing in to Google section.</li> <li>Select 'Mail' from the Select app dropdown list.</li> <li>Select 'Other' from the Select device dropdown list.</li> <li>Enter a name in the text field.</li> <li>Click on the GENERATE button.</li> <li>Copy the displayed password.</li> <li>In the IMAP node credentials, enter your email address in the User field. For example, <code>example@gmail.com</code>.</li> <li>Paste the App password you copied in Step 15 in the Password field.</li> <li>Enter <code>imap.gmail.com</code> in the Host field.</li> <li>Toggle SSL/TLS to <code>true</code>.</li> <li>Click on Save to save your credentials.</li> </ol> <p>Note: Before executing the node, set the Ignore SSL Issues option to true as the Gmail certificate is self-signed.</p>","title":"Using Gmail"},{"location":"workflow/integrations/credentials/imap/#using-yahoo-mail","text":"<ol> <li>Open your Yahoo Mail account.</li> <li>Click on your avatar on the top right and select 'Account info'.</li> <li>Click on the Account security tab in the left sidebar.</li> <li>Scroll down to the bottom and click on Generate app password.</li> <li>Select 'Other app' from the Select your app dropdown list.</li> <li>Enter the name of the app in the Enter custom name field.</li> <li>Click on the Generate button.</li> <li>Copy the displayed password.</li> <li>Enter the name for your credentials in the Credentials Name field in the 'IMAP' credentials in Workflow\u00b2.</li> <li>Enter your email address in the User field.</li> <li>Paste the password you copied earlier in the Password field.</li> <li>Enter <code>imap.mail.yahoo.com</code> in the Host field.</li> <li>Toggle SSL/TLS to <code>true</code>.</li> <li>Click on Save to save your credentials.</li> </ol> <p>The following video demonstrates the steps mentioned above.</p>","title":"Using Yahoo Mail"},{"location":"workflow/integrations/credentials/imap/#using-outlookcom","text":"<ol> <li>Enter the name for your credentials in the Credentials Name field in the 'IMAP' credentials in Workflow\u00b2.</li> <li>Enter your email address in the User field.</li> <li>Enter your account password in the Password field.</li> <li>Enter <code>outlook.office365.com</code> in the Host field.</li> <li>Toggle SSL/TLS to <code>true</code>.</li> <li>Click on Create to create your credentials.</li> </ol> <p>Note If you get a connection error, please follow the steps mentioned in the FAQs.</p> <p>The following video demonstrates the steps mentioned above.</p>","title":"Using Outlook.com"},{"location":"workflow/integrations/credentials/imap/#faqs","text":"","title":"FAQs"},{"location":"workflow/integrations/credentials/imap/#how-to-solve-the-connection-error-when-connecting-to-outlookcom","text":"<p>If you receive a connection error while configuring the credentials for your Outlook account, follow the steps mentioned below: 1. Go to account.live.com/activity. 2. Sign in using the email address and password of your account. 3. Under the Recent activity section, find the Session Type event that matches the most recent time you received the connection error and click to expand it. 4. Select This was me to let the system know you authorize the IMAP connection.</p> <ul> <li>Set up IMAP for Gmail account</li> <li>Sign in with App Passwords for your Gmail Account</li> <li>Set up IMAP for Yahoo mail account</li> <li>Sign in with App Passwords for your Yahoo mail Account</li> <li>POP, IMAP, and SMTP settings for Outlook.com</li> </ul>","title":"How to solve the connection error when connecting to Outlook.com?"},{"location":"workflow/integrations/credentials/intercom/","text":"<p>You can use these credentials to authenticate the following nodes with Intercom. - Intercom</p>","title":"Intercom"},{"location":"workflow/integrations/credentials/intercom/#prerequisites","text":"<p>Create a Intercom account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/intercom/#using-access-token","text":"<ol> <li>Create an app in your workspace.</li> <li>Click on Configure, then Authentication within the Developer hub.</li> <li>Use the Access Token with the Intercom node credentials in Workflow\u00b2.</li> </ol>","title":"Using Access Token"},{"location":"workflow/integrations/credentials/invoiceNinja/","text":"<p>You can use these credentials to authenticate the following nodes with Invoice Ninja. - Invoice Ninja - Invoice Ninja Trigger</p>","title":"Invoice Ninja"},{"location":"workflow/integrations/credentials/invoiceNinja/#prerequisites","text":"<p>Create an Invoice Ninja account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/invoiceNinja/#using-access-token","text":"<ol> <li>Access your Invoice Ninja dashboard.</li> <li>Click on Settings in the bottom left.</li> <li>Scroll down to API keys.</li> <li>Add new token.</li> <li>Use the key and your instance URL with Invoice Ninja node credentials in Workflow\u00b2.</li> </ol> <p></p>","title":"Using Access Token"},{"location":"workflow/integrations/credentials/iterable/","text":"<p>You can use these credentials to authenticate the following nodes with Iterable. - Iterable</p>","title":"Iterable"},{"location":"workflow/integrations/credentials/iterable/#prerequisites","text":"<p>Create an Iterable account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/iterable/#using-api-key","text":"<ol> <li>Access the Iterable dashboard.</li> <li>Click on Integrations and select 'API keys'.</li> <li>Click on the NEW API KEY button.</li> <li>Enter a name in the Name field.</li> <li>Click on the Create button.</li> <li>Click on the Copy button to copy the API key.</li> <li>Use this API key with your Iterable node credentials in Workflow\u00b2.</li> </ol> <p></p>","title":"Using API Key"},{"location":"workflow/integrations/credentials/jenkins/","text":"<p>You can use these credentials to authenticate the following nodes with CircleCI. - Jenkins</p>","title":"Jenkins"},{"location":"workflow/integrations/credentials/jenkins/#prerequisites","text":"<p>Create an account on a Jenkins instance.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/jenkins/#using-access-token","text":"<ol> <li>Access your Jenkins User.</li> <li>Visit the Configure section.</li> <li>Click on the Add new Token button.</li> <li>Type in a name for your token and click on the Generate button.</li> <li>Copy the generated API Token and use it with your Jenkins API node credentials in Workflow\u00b2.</li> </ol>","title":"Using Access Token"},{"location":"workflow/integrations/credentials/jira/","text":"<p>You can use these credentials to authenticate the following nodes with Jira. - Jira - Jira Trigger</p>","title":"Jira"},{"location":"workflow/integrations/credentials/jira/#prerequisites","text":"<p>Create a Jira account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/jira/#using-access-token","text":"<ol> <li>Access your Jira dashboard.</li> <li>Click on your user icon in the top right.</li> <li>Click on Account Settings.</li> <li>Click on Security tab.</li> <li>Click on Manage API Tokens.</li> <li>Create API token.</li> <li>Use the API token with Jira node credentials in Workflow\u00b2. Your email and the domain under which the Jira account is under must also be included.</li> </ol>","title":"Using Access Token"},{"location":"workflow/integrations/credentials/jotForm/","text":"<p>You can use these credentials to authenticate the following nodes with JotForm. - JotForm Trigger</p>","title":"JotForm"},{"location":"workflow/integrations/credentials/jotForm/#prerequisites","text":"<p>Create a JotForm account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/jotForm/#using-access-token","text":"<ol> <li>Access your JotForm account.</li> <li>Click on the API tab on the left.</li> <li>Click on the Create New Key button.</li> <li>Change the Permissions to 'Full Access'.</li> <li>Use the key with JotForm node credentials in Workflow\u00b2.</li> </ol> <p></p>","title":"Using Access Token"},{"location":"workflow/integrations/credentials/kafka/","tags":["Workflow\u00b2","Kafka","Prerequisites Kafka"],"text":"<p>You can use these credentials to authenticate the following nodes with Kafka. - Kafka - Kafka Trigger</p>","title":"Kafka"},{"location":"workflow/integrations/credentials/kafka/#prerequisites","tags":["Workflow\u00b2","Kafka","Prerequisites Kafka"],"text":"<p>Have Kafka up and running. You can refer to the official documentation to learn how to do that.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/kafka/#using-kafka","tags":["Workflow\u00b2","Kafka","Prerequisites Kafka"],"text":"<ol> <li>Enter a client ID in the Client ID field.</li> <li>Retrieve the Kafka Brokers and credentials (if any).</li> <li>Use the Client ID, Brokers (comma separated), Username, and Password with your Kafka node credentials in Workflow\u00b2.</li> </ol>","title":"Using Kafka"},{"location":"workflow/integrations/credentials/keap/","text":"<p>You can use these credentials to authenticate the following nodes with Keap. - Keap - Keap Trigger</p>","title":"Keap"},{"location":"workflow/integrations/credentials/keap/#prerequisites","text":"<p>Create a Keap account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/keap/#using-oauth","text":"<p>\u26c5\ufe0f Note fordoc2app.cloudintegration.eu users</p> <p>You'll only need to enter the Credentials Name and click on the circle button in the OAuth section to connect your Keap account to Workflow\u00b2.</p>  <ol> <li>Access your Keap Developer Console.</li> <li>Click on your email address in the top right corner and select 'Apps' from the dropdown list.</li> <li>Click on the 'New App' button.</li> <li>Enter any necessary information, enable the 'Keap 150k' API and click on the Create button.</li> <li>Use the 'Key' and the 'Secret' displayed with your Keap OAuth2 API credentials in Workflow\u00b2.</li> <li>Click on the circle button in the OAuth section to connect a Keap account to Workflow\u00b2.</li> <li>Click the Save button to save your credentials.</li> </ol> <p></p>","title":"Using OAuth"},{"location":"workflow/integrations/credentials/kitemaker/","text":"<p>You can use these credentials to authenticate the following nodes with Kitemaker. - Kitemaker</p>","title":"Kitemaker"},{"location":"workflow/integrations/credentials/kitemaker/#prerequisites","text":"<p>Create an account on Kitemaker.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/kitemaker/#using-access-token","text":"<ol> <li>Open your Kitemaker work item board.</li> <li>Click on the settings icon next to the organization name in the left sidebar.</li> <li>Select 'Developer settings' from the dropdown list.</li> <li>Click on Add new personal access token under the Personal access tokens section.</li> <li>Enter a name for your token in the Personal access token name field.</li> <li>Click on the Create token button.</li> <li>Copy the displayed token.</li> <li>Enter the name for your credentials in the Credentials Name field in the 'Kitemaker API' credentials in Workflow\u00b2.</li> <li>Paste the token in the Personal Access Token field in the 'Kitemaker API' credentials in Workflow\u00b2.</li> <li>Click on the Create button to create your credentials.</li> </ol> <p>The following video demonstrates the steps mentioned above.</p>","title":"Using Access Token"},{"location":"workflow/integrations/credentials/kobotoolbox/","text":"<p>You can use these credentials to authenticate the following nodes:</p> <ul> <li>KoBo Toolbox trigger</li> <li>KoBo Toolbox</li> </ul> <p>KoBo Toolbox uses an API key for authentication:</p> <ol> <li>Sign up for a KoBo Toolbox account.</li> <li>Follow the KoBo Toolbox API documentation to get your API token. </li> <li>Copy your new key and use it with your KoBo Toolbox node credentials in n8n.</li> </ol>","title":"KoBo Toolbox"},{"location":"workflow/integrations/credentials/lemlist/","text":"<p>You can use these credentials to authenticate the following nodes with Lemlist. - Lemlist - Lemlist Trigger</p>","title":"Lemlist"},{"location":"workflow/integrations/credentials/lemlist/#prerequisites","text":"<p>Create an account on a Lemlist instance.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/lemlist/#using-api-key","text":"<ol> <li>Open your Lemlist dashboard.</li> <li>Click on the menu on the top left and select 'Settings' from the dropdown list.</li> <li>Click on Integrations under the Misc section from the left sidebar.</li> <li>Copy the API key displayed under the API section.</li> <li>Enter the name for your credentials in the Credentials Name field in the 'Lemlist API' credentials in Workflow\u00b2.</li> <li>Paste the API key in the API Key field in the 'Lemlist API' credentials in Workflow\u00b2.</li> <li>Click on the Create button to create your credentials.</li> </ol> <p>The following video demonstrates the steps mentioned above.</p>","title":"Using API Key"},{"location":"workflow/integrations/credentials/line/","text":"<p>You can use these credentials to authenticate the following nodes with Line. - Line</p>","title":"Line"},{"location":"workflow/integrations/credentials/line/#prerequisites","text":"<p>Create a Line account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/line/#using-oauth","text":"<ol> <li>Access the LINE Notify page.</li> <li>Click on your name on the top right corner and select 'Manage registered services' from the dropdown list.</li> <li>Click on the Add service button.</li> <li>Enter all the necessary information.</li> <li>Copy your OAuth Callback URL from the 'Create New Credentials' screen in Doc\u00b2 and paste it in the Callback URL field.</li> <li>Click on the Agree and continue button.</li> <li>Click on the Add button.</li> <li>Check your inbox for the verification email.</li> <li>Click on the link under the LINE Notify Registration URL in your email.</li> <li>On the LINE Notify page, click on the My services button.</li> <li>Click on the new service you created.</li> <li>Use the provided Client ID and Client Secret with your Line Notify OAuth2 API credentials in Workflow\u00b2.</li> <li>Click on the circle button in the OAuth section to connect a Line account to Workflow\u00b2.</li> <li>Click the Save button to save your credentials in Workflow\u00b2.</li> </ol> <p></p>","title":"Using OAuth"},{"location":"workflow/integrations/credentials/linear/","text":"<p>You can use these credentials to authenticate the following nodes with Linear. - Linear Trigger</p>","title":"Linear"},{"location":"workflow/integrations/credentials/linear/#prerequisites","text":"<p>Create a Linear account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/linear/#using-the-linear-api","text":"<ol> <li>Open the Linear API settings.</li> <li>Click on the Create key button.</li> <li>Copy the key into API Key field of the credentials screen in Workflow\u00b2.</li> </ol>","title":"Using the Linear API"},{"location":"workflow/integrations/credentials/lingvaNex/","text":"<p>You can use these credentials to authenticate the following nodes with LingvaNex. - LingvaNex</p>","title":"LingvaNex"},{"location":"workflow/integrations/credentials/lingvaNex/#prerequisites","text":"<p>Create a LingvaNex account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/lingvaNex/#using-api","text":"<ol> <li>Open your LingvaNex account page.</li> <li>Click on the Cloud API tab.</li> <li>Click on Payment / Subscription. Note that you can use the limited Translation API without having to subscribe or add a payment method.</li> <li>Scroll to the Translation API section.</li> <li>Copy the displayed API key.</li> <li>Enter the name for your credentials in the Credentials Name field in the 'LingvaNex API' credentials in Workflow\u00b2.</li> <li>Paste the API key in the API Key field in the 'LingvaNex API' credentials in Workflow\u00b2.</li> <li>Click on the Create button to create your credentials.</li> </ol> <p>The following video demonstrates the steps mentioned above.</p>","title":"Using API"},{"location":"workflow/integrations/credentials/linkedIn/","text":"<p>You can use these credentials to authenticate the following nodes with LinkedIn. - LinkedIn</p>","title":"LinkedIn"},{"location":"workflow/integrations/credentials/linkedIn/#prerequisites","text":"<p>Create a LinkedIn account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/linkedIn/#using-oauth","text":"<p>\u26c5\ufe0f Note fordoc2app.cloudintegration.eu users</p> <p>You'll only need to enter the Credentials Name and click on the circle button in the OAuth section to connect your LinkedIn account to Workflow\u00b2.</p>  <ol> <li>Access the LinkedIn app creation page.</li> <li>Enter a name in the App name field.</li> <li>Enter your LinkedIn Page/Profile in the LinkedIn Page field.</li> <li>Add a logo by clicking on the Upload a logo button.</li> <li>Agree to the terms and conditions in the Legal agreement section and click the Create app button at the bottom of the page.</li> <li>Verify your application. You can find instructions on how to verify your LinkedIn application in the FAQs below.</li> <li>Enable APIs for your application. You can find instructions on how and which APIs to enable for your LinkedIn application in the FAQs below.</li> <li>Back in the LinkedIn application creation page, click on the Auth tab.</li> <li>Copy the 'OAuth Callback URL' provided in the LinkedIn OAuth2 API credentials in Doc\u00b2 and add it in the 'Authorized redirect URLs for your app' section in the LinkedIn application creation page.</li> <li>Use the displayed Client ID and the Client Secret with your LinkedIn OAuth API credentials in Workflow\u00b2.</li> <li>Click on the circle button in the OAuth section to connect a LinkedIn account to Workflow\u00b2.</li> <li>Click the Save button to save your credentials in Workflow\u00b2.</li> </ol> <p></p>","title":"Using OAuth"},{"location":"workflow/integrations/credentials/linkedIn/#faqs","text":"","title":"FAQs"},{"location":"workflow/integrations/credentials/linkedIn/#how-do-i-verify-my-linkedin-application","text":"<ol> <li>Open the application's page on the LinkedIn developers portal.</li> <li>Click on the Verify button.</li> <li>Click on the Generate URL button under the Verification URL section.</li> <li>Copy the generated URL and open it in your web browser.</li> <li>Click on the Verify button to verify your LinkedIn OAuth application.</li> </ol>","title":"How do I verify my LinkedIn application?"},{"location":"workflow/integrations/credentials/linkedIn/#how-do-i-enable-apis-for-my-linkedin-application","text":"<ol> <li>Click on the Products tab in your LinkedIn application page.</li> <li>Click the Select button next to the API you want to enable in the Products section.</li> <li>Click the checkbox to accept the terms and conditions and then click on the Add product button.</li> </ol> <p>Note: You will need to enable the Share on LinkedIn and Sign In with LinkedIn products to connect with Workflow\u00b2. If you would like to connect an organizational LinkedIn account to Doc\u00b2, then you also additionally need to enable the Marketing Developer Platform product.</p>","title":"How do I enable APIs for my LinkedIn application?"},{"location":"workflow/integrations/credentials/magento2/","text":"<p>You can use these credentials to authenticate the following nodes:</p> <ul> <li>Magento 2</li> </ul>","title":"Magento 2"},{"location":"workflow/integrations/credentials/magento2/#prerequisites","text":"<p>Create a Magento account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/magento2/#using-access-token","text":"<p>From your Magento admin panel:</p> <ol> <li>Navigate to System &gt; Extensions &gt; Integrations.</li> <li>Select Add New Integration.</li> <li>Enter a name for your Doc\u00b2 integration and your admin password.</li> <li>Navigate to the API tab and select the Magento resources this Doc\u00b2 integration should be able to access.</li> <li>Select Save to confirm your selections.</li> <li>From the Integrations page, click Activate for the new Doc\u00b2 integration.</li> <li>Select Allow to display a dialog screen with the credentials.</li> <li>Copy the Access Token value to use in Workflow\u00b2.</li> </ol> <p>From n8n:</p> <ol> <li>Enter the Host address of your Magento store.</li> <li>Enter the Access Token obtained above.</li> <li>Click Save to create the credentials.</li> </ol>","title":"Using Access Token"},{"location":"workflow/integrations/credentials/mailcheck/","text":"<p>You can use these credentials to authenticate the following nodes with Mailcheck. - Mailcheck</p>","title":"Mailcheck"},{"location":"workflow/integrations/credentials/mailcheck/#prerequisites","text":"<p>Create a Mailcheck account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/mailcheck/#using-api-key","text":"<ol> <li>Open the Mailcheck dashboard page.</li> <li>Click on the API on the top menu.</li> <li>Enter a key name in the Enter the key name field.</li> <li>Click on the Create Key button.</li> <li>Click on the Copy button to copy the API key.</li> <li>Enter a name for your credentials in the Credentials Name field in the 'Mailcheck API' credentials in Workflow\u00b2.</li> <li>Paste the API key in the API Key field in the 'Mailcheck API' credentials in Workflow\u00b2.</li> <li>Click on the Create button to create your credentials in Workflow\u00b2.</li> </ol> <p>The following video demonstrates the steps mentioned above.</p>    <p>Please reach out to Mailcheck support should you have any questions support@mailcheck.co</p>","title":"Using API Key"},{"location":"workflow/integrations/credentials/mailchimp/","text":"<p>You can use these credentials to authenticate the following nodes with Mailchimp. - Mailchimp - Mailchimp Trigger</p>","title":"Mailchimp"},{"location":"workflow/integrations/credentials/mailchimp/#prerequisites","text":"<p>Create a Mailchimp account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/mailchimp/#using-oauth","text":"<p>\u26c5\ufe0f Note fordoc2app.cloudintegration.eu users</p> <p>You'll only need to enter the Credentials Name and click on the circle button in the OAuth section to connect your Mailchimp account to Workflow\u00b2.</p>  <ol> <li>Access your Mailchimp dashboard.</li> <li>Click on your user icon on the top right.</li> <li>Click on 'Account' in the dropdown list.</li> <li>Click on the Extras dropdown list and then select 'Registered apps'.</li> <li>Click on the Register An App button.</li> <li>Copy the 'OAuth Callback URL' from your Doc\u00b2 Mailchimp OAuth2 API credentials and paste it in the 'Redirect URI' field of the Mailchimp form.</li> <li>Fill out any other necessary details and click on the Create button.</li> <li>Use the generated Client ID and Client secret with your Mailchimp OAuth2 API node credentials in Workflow\u00b2.</li> <li>Click on the circle button in the OAuth section to connect your Mailchimp account to Workflow\u00b2.</li> <li>Click the Save button to save your credentials.</li> </ol> <p></p>","title":"Using OAuth"},{"location":"workflow/integrations/credentials/mailchimp/#using-access-token","text":"<ol> <li>Access your Mailchimp dashboard.</li> <li>Click on your user icon on the top right.</li> <li>Click on 'Account' in the dropdown list.</li> <li>Click on the Extras dropdown list and then select 'API Keys'.</li> <li>Scroll down and create a new key by clicking on 'Create a Key' under the 'Your API keys' section.</li> <li>Use the API key with your Mailchimp node credentials in Workflow\u00b2.</li> </ol> <p></p>","title":"Using Access Token"},{"location":"workflow/integrations/credentials/mailerLite/","text":"<p>You can use these credentials to authenticate the following nodes with MailerLite. - MailerLite - MailerLite Trigger</p>","title":"MailerLite"},{"location":"workflow/integrations/credentials/mailerLite/#prerequisites","text":"<p>Create a MailerLite account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/mailerLite/#using-api-key","text":"<ol> <li>Access the MailerLite dashboard.</li> <li>Click on the profile icon on the top right corner.</li> <li>Select 'Integrations' from the dropdown list.</li> <li>Click on 'Developer API' in the MailerLite API section.</li> <li>Copy the API key that is displayed and use it with your MailerLite node credentials in Workflow\u00b2.</li> </ol> <p></p>","title":"Using API Key"},{"location":"workflow/integrations/credentials/mailgun/","text":"<p>You can use these credentials to authenticate the following nodes with Mailgun. - Mailgun</p>","title":"Mailgun"},{"location":"workflow/integrations/credentials/mailgun/#prerequisites","text":"<p>Create a Mailgun account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/mailgun/#using-access-token","text":"<ol> <li>Access your Mailgun dashboard.</li> <li>Click on Settings on the left panel.</li> <li>Click on API Keys.</li> <li>Click on the eye icon to uncover your API key.</li> <li>Use the API key with Mailgun node credentials in Workflow\u00b2.</li> </ol> <p></p>","title":"Using Access Token"},{"location":"workflow/integrations/credentials/mailjet/","text":"<p>You can use these credentials to authenticate the following nodes with Mailjet. - Mailjet - Mailjet Trigger</p>","title":"Mailjet"},{"location":"workflow/integrations/credentials/mailjet/#prerequisites","text":"<p>Create a Mailjet account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/mailjet/#using-access-token","text":"<ol> <li>Access your Mailjet dashboard.</li> <li>Click on your user icon in the top right.</li> <li>Click on 'Account Settings'.</li> <li>Under REST API, click on 'Master API Key &amp; Sub API key management'.</li> <li>Use the API key and Secret Key with Mailjet node credentials in Workflow\u00b2.</li> </ol> <p></p>","title":"Using Access Token"},{"location":"workflow/integrations/credentials/mandrill/","text":"<p>You can use these credentials to authenticate the following nodes with Mandrill. - Mandrill</p>","title":"Mandrill"},{"location":"workflow/integrations/credentials/mandrill/#prerequisites","text":"<p>Create a Mandrill account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/mandrill/#using-access-token","text":"<ol> <li>Access your Mandrill dashboard.</li> <li>Click on the Settings icon in the sidebar.</li> <li>Click on the + New API Key button and create a new API Key.</li> <li>Use the key with your Mandrill API credentials in Workflow\u00b2.</li> </ol> <p></p>","title":"Using Access Token"},{"location":"workflow/integrations/credentials/marketstack/","text":"<p>You can use these credentials to authenticate the following nodes:</p> <ul> <li>Marketstack</li> </ul>","title":"Marketstack"},{"location":"workflow/integrations/credentials/marketstack/#prerequisites","text":"<p>Create an account on Marketstack.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/marketstack/#using-api-key","text":"<p>From Marketstack:</p> <ol> <li>Access your Marketstack dashboard.</li> <li>Copy the key provided in the Your API Access Key field.</li> </ol> <p>From n8n:</p> <ol> <li>Enter a descriptive Credentials Name.</li> <li>Under Credential Data, enter the key obtained above in the corresponding field.</li> <li>Click Save to create your new credentials.</li> </ol>","title":"Using API Key"},{"location":"workflow/integrations/credentials/matrix/","text":"<p>You can use these credentials to authenticate the following nodes with Matrix. - Matrix</p>","title":"Matrix"},{"location":"workflow/integrations/credentials/matrix/#prerequisites","text":"<p>Create an account on a Matrix server.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/matrix/#using-access-token","text":"<ol> <li>Access the Matrix server.</li> <li>Click on your username in the top left corner.</li> <li>Select 'All settings' from the dropdown list.</li> <li>Click on Help &amp; About in the left sidebar.</li> <li>Scroll down to the Advanced section.</li> <li>Click on click to reveal next to 'Access Token'.</li> <li>Copy the 'Homeserver URL' under the Advanced section if you are using a custom server.</li> <li>Use this Homeserver URL and Access Token with your Matrix node credentials in Workflow\u00b2.</li> </ol>","title":"Using Access Token"},{"location":"workflow/integrations/credentials/mattermost/","text":"<p>You can use these credentials to authenticate the following nodes with Mattermost. - Mattermost</p>","title":"Mattermost"},{"location":"workflow/integrations/credentials/mattermost/#prerequisites","text":"<ul> <li>Create a Mattermost account.</li> </ul> <p>Note: A system administrator has to grant permission to the user to generate an access token. Refer to the FAQs to learn how a system administrator can grant this permission.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/mattermost/#using-access-token","text":"<ol> <li>Click on your username on the top left corner and select 'Account Settings' from the dropdown list.</li> <li>Click on the Security tab.</li> <li>Click on Edit in the Personal Access Tokens section.</li> <li>Click on the Create Token button.</li> <li>Enter a description in the Token Description field.</li> <li>Click on the Save button.</li> <li>Click on the Yes, Create button.</li> <li>Use this Acess Token with your Mattermost node credentials in Workflow\u00b2.</li> </ol> <p></p>","title":"Using Access Token"},{"location":"workflow/integrations/credentials/mattermost/#faqs","text":"","title":"FAQs"},{"location":"workflow/integrations/credentials/mattermost/#how-to-grant-permissions-to-the-users-to-generate-access-tokens","text":"<p>A system admin has to grant permissions to the users for the user to create access tokens. If you're a system admin, follow the steps mentioned below.</p> <ol> <li>Click on your username on the top left corner and select 'System Console' from the dropdown list.</li> <li>Click on Integration Management under the INTEGRATIONS section on the left sidebar.</li> <li>Go to Integration Management.</li> <li>Scroll down to the Enable Personal Access Tokens and enable personal access tokens.</li> <li>Click on the Save button.</li> <li>Click on Users under the USER MANAGEMENT section on the left sidebar.</li> <li>Personal access tokens are generated for individual users, so they must be enabled for each user. Click on Member next to the user you want to grant permission to, and select 'Manage Roles' from the dropdown list.</li> <li>Check the Allow this account to generate personal access tokens checkbox.</li> <li>Select any additional permissions you want to grant the user and click on the Save button.</li> </ol> <p>Note: You may also create a bot account and apply the same for it.</p> <p>The user can now generate a personal access token by going to  their account settings and following the steps mentioned above.</p> <p></p> <ul> <li>Personal Access Tokens</li> </ul>","title":"How to grant permissions to the users to generate access tokens?"},{"location":"workflow/integrations/credentials/mautic/","text":"<p>You can use these credentials to authenticate the following nodes with Mautic. - Mautic - Mautic Trigger</p>","title":"Mautic"},{"location":"workflow/integrations/credentials/mautic/#prerequisites","text":"<p>Create an account on a Mautic instance.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/mautic/#using-oauth","text":"<ol> <li>Open your Mautic dashboard.</li> <li>Click on the gear icon on the top right and select API Credentials.</li> <li>Click on the + New button on the top right.</li> <li>Select 'OAuth 2' from the Authorization Protocol dropdown list.</li> <li>Enter the name of the credentials in the Name field.</li> <li>Copy the 'OAuth Callback URL' provided in the 'Mautic OAuth2 API' credentials in Workflow\u00b2.</li> <li>Paste it in the Redirect URI field on the Mautic credentials page.</li> <li>Click on the Apply button.</li> <li>Enter the name for your credentials in the Credentials Name field in the 'Mautic OAuth2 API' credentials in Workflow\u00b2.</li> <li>Copy the Client ID from the Mautic credentials page.</li> <li>Paste it in the Client ID field in the 'Mautic OAuth2 API' credentials in Workflow\u00b2.</li> <li>Copy the Client Secret from the Mautic credentials page.</li> <li>Paste it in the Client Secret field in the 'Mautic OAuth2 API' credentials in Workflow\u00b2.</li> <li>Enter the URL of your Mautic instance in the URL field.</li> <li>Click on the circle button in the OAuth section to connect a Mautic account to Workflow\u00b2.</li> <li>Click on the Save button to save your credentials.</li> </ol> <p>The following video demonstrates the steps mentioned above.</p>","title":"Using OAuth"},{"location":"workflow/integrations/credentials/mautic/#using-credentials","text":"<ol> <li>Open your Mautic dashboard.</li> <li>Click on the gear icon on the top right and select Configuration.</li> <li>Select 'API Settings' from the left sidebar.</li> <li>Select 'Yes' under the Enable HTTP basic auth? section.</li> <li>Click on the Apply button.</li> <li>Enter the name for your credentials in the Credentials Name field in the 'Mautic API' credentials in Workflow\u00b2.</li> <li>Enter the URL of your Mautic instance in the URL field in the 'Mautic API' credentials in Workflow\u00b2.</li> <li>Enter your Mautic username in the Username field in the 'Mautic API' credentials in Workflow\u00b2.</li> <li>Enter your Mautic password in the Password field in the 'Mautic API' credentials in Workflow\u00b2.</li> <li>Click on the Create button to create your credentials.</li> </ol> <p>The following video demonstrates the steps mentioned above.</p>","title":"Using Credentials"},{"location":"workflow/integrations/credentials/medium/","text":"<p>You can use these credentials to authenticate the following nodes with Medium. - Medium</p>","title":"Medium"},{"location":"workflow/integrations/credentials/medium/#prerequisites","text":"<ul> <li>Create an account on Medium.</li> <li>Request access to credentials by emailing yourfriends@medium.com.</li> </ul>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/medium/#using-oauth","text":"<ol> <li>Log in to your Medium account.</li> <li>Click on the avatar on the top right corner.</li> <li>Select 'Settings' in the drop-down menu.</li> <li>Select 'Developers' from the menu on the left.</li> <li>Click on the 'Manage applications' button.</li> <li>Click on the 'New application' button.</li> <li>Give your application a Name, and provide a Description.</li> <li>Select the 'OAuth 2' option from the Authorization Protocol dropdown list.</li> <li>Copy the 'OAuth Callback URL' provided in the Medium OAuth2 API credentials in Doc\u00b2 and paste it in the 'Callback URLs' field in the Medium application page.</li> <li>Click on 'Save' to generate the credentials.</li> <li>Copy and paste Client ID and Client Secret in the Medium OAuth2 API credentials in Workflow\u00b2.</li> <li>Click on the circle button in the OAuth section to connect a Medium account to Workflow\u00b2.</li> <li>Click the Save button to save your credentials in Workflow\u00b2.</li> </ol> <p></p>","title":"Using OAuth"},{"location":"workflow/integrations/credentials/medium/#using-access-token","text":"<ol> <li>Log in to your Medium account.</li> <li>Click on the avatar on the top right corner.</li> <li>Select 'Settings' in the drop-down menu.</li> <li>Select 'Integration tokens' from the menu on the left.</li> <li>Enter a description for your token in the field.</li> <li>Click on the 'Get integration token' button.</li> <li>Copy and paste Token in the Medium API credentials in Workflow\u00b2.</li> <li>Click the Save button to save your credentials in Workflow\u00b2.</li> </ol> <p></p>","title":"Using Access Token"},{"location":"workflow/integrations/credentials/messageBird/","text":"<p>You can use these credentials to authenticate the following nodes with MessageBird. - MessageBird</p>","title":"MessageBird"},{"location":"workflow/integrations/credentials/messageBird/#prerequisites","text":"<p>Create a MessageBird account. </p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/messageBird/#using-access-token","text":"<ol> <li>Access your MessageBird dashboard.</li> <li>Go to the Developers section.</li> <li>Click on API access.</li> <li>Click on 'Add access key' and create a new API key.</li> <li>Use this API key with your MessageBird API node credentials in Workflow\u00b2.</li> </ol> <p></p>","title":"Using Access Token"},{"location":"workflow/integrations/credentials/microsoft/","text":"<p>You can use these credentials to authenticate the following nodes with Microsoft. - Microsoft Dynamics CRM - Microsoft Excel - Microsoft Graph Security - Microsoft OneDrive - Microsoft Outlook - Microsoft Teams - Microsoft To Do</p>","title":"Microsoft"},{"location":"workflow/integrations/credentials/microsoft/#prerequisites","text":"<p>Create a Microsoft Azure account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/microsoft/#using-oauth","text":"<p>\u26c5\ufe0f Note fordoc2app.cloudintegration.eu users</p> <p>You'll only need to enter the Credentials Name and click on the circle button in the OAuth section to connect your Microsoft account to Workflow\u00b2.</p>  <ol> <li>Access the Microsoft Application Registration Portal.</li> <li>Click on the Register an application button.</li> <li>Enter a name for your app in the Name field.</li> <li>Select 'Accounts in any organizational directory (Any Azure AD directory - Multitenant) and personal Microsoft accounts (eg. Skype, Xbox)' under the Supported account types section.</li> <li>Copy the 'OAuth Callback URL' provided in the Microsoft node credentials in Workflow\u00b2.</li> <li>Paste it in the Redirect URI (optional) field on the Register an application page.</li> <li>Click on the Register button.</li> <li>Copy the Application (client) ID.</li> <li>Enter the name for your credentials in the Credentials Name field in the Microsoft node credentials in Workflow\u00b2.</li> <li>Paste the Application ID in the Client ID field in the Microsoft node credentials in Workflow\u00b2.</li> <li>On your Microsoft application page, click on Certificates &amp; secrets in the left sidebar.</li> <li>Click on the + New client secret button under the Client secrets section.</li> <li>Enter a description in the Description field.</li> <li>Click on the Add button.</li> <li>Copy the displayed secret under the Value column.</li> <li>Paste the secret in the Client Secret field in the Microsoft node credentials in Workflow\u00b2.</li> <li>Click on the circle button in the OAuth section to connect a Microsoft account to Workflow\u00b2.</li> <li>Login to your Microsoft account and allow the app to access your info.</li> <li>Click on the Save button in the Microsoft node credentials in Doc\u00b2 to save your credentials.</li> </ol> <p>The following video demonstrates the steps mentioned above.</p>","title":"Using OAuth"},{"location":"workflow/integrations/credentials/microsoftSql/","text":"<p>You can use these credentials to authenticate the following nodes with Microsoft SQL. - Microsoft SQL</p>","title":"Microsoft SQL"},{"location":"workflow/integrations/credentials/microsoftSql/#prerequisites","text":"<p>Create an user account on a Microsoft SQL server. </p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/microsoftSql/#using-database-connection","text":"<ol> <li>Retrieve your Microsoft SQL credentials and connection parameters.</li> <li>Use the credentials and connection parameters with your Microsoft SQL node credentials in Workflow\u00b2.</li> </ol>","title":"Using Database Connection"},{"location":"workflow/integrations/credentials/mindee/","tags":["Workflow\u00b2","Mindee","Prerequisites Mindee","Using API Key"],"text":"<p>You can use these credentials to authenticate the following nodes with Mindee. - Mindee</p>","title":"Mindee"},{"location":"workflow/integrations/credentials/mindee/#prerequisites","tags":["Workflow\u00b2","Mindee","Prerequisites Mindee","Using API Key"],"text":"<p>Create a Mindee account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/mindee/#using-api-key","tags":["Workflow\u00b2","Mindee","Prerequisites Mindee","Using API Key"],"text":"<ol> <li>Access the Mindee APIs Hub.</li> <li>Click on the API card that you want to use.</li> <li>Click on the Try for free button under the Pricing section.</li> <li>Click on API Keys in the left sidebar.</li> <li>Click on the Add key button.</li> <li>Enter a name for the token.</li> <li>Click on Add new key.</li> <li>Use this API key with your Mindee node credentials in Workflow\u00b2.</li> </ol> <p></p>","title":"Using API Key"},{"location":"workflow/integrations/credentials/misp/","text":"<p>You can use these credentials to authenticate the following nodes:</p> <ul> <li>MISP</li> </ul>","title":"MISP"},{"location":"workflow/integrations/credentials/misp/#prerequisites","text":"<p>Install and run a MISP instance.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/misp/#using-api-key","text":"<p>From your MISP UI: 1. Navigate to the Event Actions &gt; Automation menu. 2. Copy the API Key provided there.</p> <p>From n8n:</p> <ol> <li>Enter your API key and application Base URL.</li> <li>Use the toggle to select if you want to Allow Unauthorized Certificates.</li> <li>Click Save to create your credentials.</li> </ol>","title":"Using API Key"},{"location":"workflow/integrations/credentials/mocean/","text":"<p>You can use these credentials to authenticate the following nodes with Mocean. - Mocean</p>","title":"Mocean"},{"location":"workflow/integrations/credentials/mocean/#prerequisites","text":"<p>Create a Mocean account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/mocean/#using-access-token","text":"<ol> <li>Access your Mocean Dashboard.</li> <li>Your API key and secret will be visible.</li> <li>Use the API key and secret in your Mocean node credentials in Workflow\u00b2.</li> </ol> <p></p>","title":"Using Access Token"},{"location":"workflow/integrations/credentials/mondayCom/","text":"<p>You can use these credentials to authenticate the following nodes with monday.com. - monday.com</p>","title":"monday.com"},{"location":"workflow/integrations/credentials/mondayCom/#prerequisites","text":"<p>Create a monday.com account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/mondayCom/#using-access-token","text":"<ol> <li>Access your monday.com dashboard.</li> <li>Click on the user icon in the bottom left.</li> <li>Click on Admin.</li> <li>Click on API and generate an API V2 Token.</li> <li>Use the token in your monday.com node credentials in Workflow\u00b2.</li> </ol> <p></p>","title":"Using Access Token"},{"location":"workflow/integrations/credentials/mongoDb/","text":"<p>You can use these credentials to authenticate the following nodes with MongoDB. - MongoDB</p>","title":"MongoDB"},{"location":"workflow/integrations/credentials/mongoDb/#prerequisites","text":"<p>Create an user account with the appropriate permissions on a MongoDB server.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/mongoDb/#using-access-token","text":"<ol> <li>Retrieve your MongoDB credentials and connection parameters.</li> <li>Use the credentials and connection parameters with your MongoDB node credentials in Workflow\u00b2.</li> </ol>","title":"Using Access Token"},{"location":"workflow/integrations/credentials/monicaCrm/","text":"<p>You can use these credentials to authenticate the following nodes:</p> <ul> <li>Monica CRM</li> </ul>","title":"Monica CRM"},{"location":"workflow/integrations/credentials/monicaCrm/#prerequisites","text":"<p>Sign up for a Monica CRM account or self-host an instance.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/monicaCrm/#using-access-token","text":"<p>From Monica CRM:</p> <ol> <li>Access your dashboard and navigate to the *Settings menu.</li> <li>From the API tab select Create New Token.</li> <li>Enter a name for your new token and click Create.</li> <li>Copy the access token that is displayed in the popup window.</li> </ol> <p>From n8n:</p> <ol> <li>Enter a descriptive Credentials Name.</li> <li>From the Credential Data section, select your environment type: Cloud-hosted or Self-hosted.</li> <li>(Self-hosted Only) Enter the domain of your Monica CRM instance.</li> <li>In the *API Token field enter the token created above.</li> <li>Click Create to save your new credentials.</li> </ol>","title":"Using Access Token"},{"location":"workflow/integrations/credentials/mqtt/","text":"<p>You can use these credentials to authenticate the following nodes with MQTT. - MQTT - MQTT Trigger</p>","title":"MQTT"},{"location":"workflow/integrations/credentials/mqtt/#prerequisites","text":"<p>You need to have a MQTT broker installed.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/mqtt/#using-mqtt","text":"<p>Use your Protocol, Host, Port, Username, and Password as the MQTT Trigger credential data in Workflow\u00b2.</p> <p>Optionally, you can enable SSL and provide a CA or Client certificate.</p>","title":"Using MQTT"},{"location":"workflow/integrations/credentials/msg91/","text":"<p>You can use these credentials to authenticate the following nodes with MSG91. - MSG91</p>","title":"MSG91"},{"location":"workflow/integrations/credentials/msg91/#prerequisites","text":"<p>Create a MSG91 account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/msg91/#using-access-token","text":"<ol> <li>Login to your account.</li> <li>Click on the dashboard button on the lop left.</li> <li>Click on 'Developer Platform'.</li> <li>Click on 'Authkey' in the left panel.</li> <li>Click on Create New.</li> <li>Enter the details and click on the Add button.</li> <li>Use the token in your MSG91 node credentials in Workflow\u00b2.</li> </ol>","title":"Using Access Token"},{"location":"workflow/integrations/credentials/mySql/","text":"<p>You can use these credentials to authenticate the following nodes with MySQL. - MySQL</p>","title":"MySQL"},{"location":"workflow/integrations/credentials/mySql/#prerequisites","text":"<p>Create an user account on a MySQL server. </p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/mySql/#using-database-connection","text":"<ol> <li>Retrieve your MySQL credentials and connection parameters.</li> <li>Use the credentials and connection parameters with your MySQL node credentials in Workflow\u00b2.</li> </ol> <p></p>","title":"Using Database Connection"},{"location":"workflow/integrations/credentials/nasa/","text":"<p>You can use these credentials to authenticate the following nodes with NASA. - NASA</p>","title":"NASA"},{"location":"workflow/integrations/credentials/nasa/#using-api-key","text":"<ol> <li>Access the NASA Open APIs page.</li> <li>Scroll down to the Generate API Key section.</li> <li>Enter the required information.</li> <li>Click on the Signup button.</li> <li>Use this API Key with your NASA node credentials in Workflow\u00b2.</li> </ol> <p></p>","title":"Using API Key"},{"location":"workflow/integrations/credentials/netlify/","tags":["Workflow\u00b2","Netlify","Prerequisites Netlify","Access Token"],"text":"<p>You can use these credentials to authenticate the following nodes:</p> <ul> <li>Netlify</li> <li>Netlify Trigger</li> </ul>","title":"Netlify"},{"location":"workflow/integrations/credentials/netlify/#prerequisites","tags":["Workflow\u00b2","Netlify","Prerequisites Netlify","Access Token"],"text":"<p>Create a Netlify account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/netlify/#using-access-token","tags":["Workflow\u00b2","Netlify","Prerequisites Netlify","Access Token"],"text":"<p>From the Netlify UI:</p> <ol> <li>Navigate to User Settings &gt; Personal Access Tokens.</li> <li>Select New access token.</li> <li>Enter a description and select Generate token.</li> </ol> <p>From n8n:</p> <ol> <li>Enter the access token obtained above.</li> <li>Click Save to create your credentials.</li> </ol>","title":"Using Access Token"},{"location":"workflow/integrations/credentials/nextCloud/","text":"<p>You can use these credentials to authenticate the following nodes with Nextcloud. - Nextcloud</p>","title":"Nextcloud"},{"location":"workflow/integrations/credentials/nextCloud/#prerequisites","text":"<p>Create a Nextcloud account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/nextCloud/#using-oauth","text":"<ol> <li>Log in to your Nextcloud account.</li> <li>Click on the user icon in the top right.</li> <li>Select 'Settings' in the drop down menu.</li> <li>Click on 'Security' under Administration in the sidebar.</li> <li>Copy the 'OAuth Callback URL' provided in the Nextcloud OAuth2 API credentials in Doc\u00b2 and paste it in the Redirection URI field under the 'OAuth 2.0 clients' section in the Nextcloud page.</li> <li>Fill out any other information that is necessary and click on the 'Add' button.</li> <li>Click on the eye icon to reveal the Secret and use the 'Client Identifier' and the 'Secret' with your Nextcloud OAuth2 API credentials in Workflow\u00b2.</li> <li>Replace your domain in the samples for the Authorization URL and Access Token URL fields.</li> <li>Enter your Web DAV URL in the Web DAV URL field.</li> <li>Click on the circle button in the OAuth section to connect a Nextcloud account to Workflow\u00b2.</li> <li>Click the Save button to save your credentials.</li> </ol> <p></p>","title":"Using OAuth"},{"location":"workflow/integrations/credentials/nextCloud/#using-username-and-password","text":"<p>Use your Web DAV URL along with your Nextcloud username and password in the node credentials.</p>","title":"Using Username and Password"},{"location":"workflow/integrations/credentials/nocoDb/","text":"<p>You can use these credentials to authenticate the following nodes:</p> <ul> <li>NocoDB</li> </ul>","title":"NocoDB"},{"location":"workflow/integrations/credentials/nocoDb/#prerequisites","text":"<ul> <li>Install NocoDB</li> <li>Enable API Access</li> </ul>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/nocoDb/#using-auth-token","text":"<p>From n8n:</p> <ol> <li>Enter a descriptive Credentials Name.</li> <li>In the Credentials Data section enter the following:<ul> <li>API Token: The authentication token for your NocoDB project, obtained when enabling API access (above).</li> <li>Host: The host of your NocoDB instance, for example <code>http://localhost:8080</code>.</li> </ul> </li> <li>Click Create to save your new credentials.</li> </ol>","title":"Using Auth Token"},{"location":"workflow/integrations/credentials/notion/","text":"<p>You can use these credentials to authenticate the following nodes with Notion. - Notion - Notion Trigger</p>","title":"Notion"},{"location":"workflow/integrations/credentials/notion/#prerequisites","text":"<p>Create a Notion account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/notion/#using-api-key","text":"<ol> <li>Open your Notion workspace.</li> <li>Click on Settings &amp; Members in the left-sidebar.</li> <li>Select Integrations and click on Develop your own integrations.</li> <li>Click on the + New integration button or the Create new integration card.</li> <li>Enter a name for your app in the Name field.</li> <li>Select a workspace to install the integration from the Associated workspace dropdown list.</li> <li>Click on the Submit button.</li> <li>Click on Show next to the Internal Integration Token field.</li> <li>Click on Copy to copy the displayed token.</li> <li>Enter the name for your credentials in the Credentials Name field in the 'Notion API' credentials in Workflow\u00b2.</li> <li>Paste the token in the API Key field in the 'Notion API' credentials in Workflow\u00b2.</li> <li>Click on the Create button to create your credentials.</li> </ol> <p>Note: Share the specific pages with the app for those pages to be accessed using the API.</p> <p>The following video demonstrates the steps mentioned above.</p>","title":"Using API Key"},{"location":"workflow/integrations/credentials/odoo/","text":"<p>You can use these credentials to authenticate the following nodes with Odoo:</p> <ul> <li> <p>Odoo</p> </li> <li> <p>Sign up for Odoo and create an API key or password. Refer to Odoo's documentation for more information: External API. Note that some Odoo modules and settings require API keys, not passwords.</p> </li> <li>In Doc\u00b2, create a new credential. You can either:<ul> <li>Click Credentials &gt; New, then search for Odoo API. After selecting Odoo API, click Continue.</li> <li>In an Odoo node, click the Credential for Odoo API dropdown, then click Create new.</li> </ul> </li> <li>Enter your Odoo information:<ul> <li>Site URL: the domain of your Odoo instance.</li> <li>Username: username as displayed on the user's Change password screen in Odoo.</li> <li>Database name: the name of the Odoo instance.</li> <li>Password or API key: the credential you created in step one.</li> </ul> </li> <li>Click Save. Doc\u00b2 tests the key to check it can connect to Odoo.</li> </ul>","title":"Odoo credentials"},{"location":"workflow/integrations/credentials/oneSimpleApi/","text":"<p>You can use these credentials to authenticate the following nodes with Nextcloud. - One Simple API</p>","title":"One Simple API"},{"location":"workflow/integrations/credentials/oneSimpleApi/#prerequisites","text":"<p>Create a One Simple API account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/oneSimpleApi/#using-an-api-token","text":"<ol> <li>Log in to your One Simple API account.</li> <li>Create a new API token on the API Tokens page.</li> <li>Check the required permissions for your new API token.</li> <li>Click the Create button.</li> <li>Copy the API token provided by One Simple API. </li> <li>Paste the API token into the API Token field of Workflow\u00b2. </li> <li>Click the Save button.</li> </ol>","title":"Using an API Token"},{"location":"workflow/integrations/credentials/onfleet/","text":"<p>You can use these credentials to authenticate the following nodes with Onfleet:</p> <ul> <li>Onfleet</li> <li> <p>Onfleet Trigger</p> </li> <li> <p>Sign up for Onfleet and create an API key. Refer to Onfleet's documentation for more information:</p> <ul> <li>Creating an API key</li> <li>Getting started with the Onfleet API</li> </ul> </li> <li>In Doc\u00b2, create a new credential. You can either:<ul> <li>Click Credentials &gt; New, then search for Onfleet API. After selecting Onfleet API, click Continue.</li> <li>In an Onfleet node, click the Credential for Onfleet API dropdown, then click Create new.</li> </ul> </li> <li>In the Onfleet account modal, paste your Onfleet API key into API key. </li> <li>By default, this credential is available to both the Onfleet and Onfleet Trigger nodes. You can change this using the settings on the Details tab.</li> <li>After entering the key and editing the credential details, click Save. Doc\u00b2 tests the key to check it can connect to Onfleet.</li> </ul>","title":"Onfleet credentials"},{"location":"workflow/integrations/credentials/openWeatherMap/","text":"<p>You can use these credentials to authenticate the following nodes with OpenWeatherMap. - OpenWeatherMap</p>","title":"OpenWeatherMap"},{"location":"workflow/integrations/credentials/openWeatherMap/#prerequisites","text":"<p>Create a OpenWeatherMap account. </p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/openWeatherMap/#using-access-token","text":"<ol> <li>Access your OpenWeatherMap account page.</li> <li>In the 'Create key' section, type a name and click on the Generate button.</li> <li>Copy the API Key that you just generated.</li> <li>Use this API key with your OpenWeatherMap API node credentials in Workflow\u00b2.</li> </ol> <p></p>","title":"Using Access Token"},{"location":"workflow/integrations/credentials/orbit/","text":"<p>You can use these credentials to authenticate the following nodes with Orbit. - Orbit</p>","title":"Orbit"},{"location":"workflow/integrations/credentials/orbit/#prerequisites","text":"<p>Create an Orbit account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/orbit/#using-api-token","text":"<ol> <li>Access the Account Settings page.</li> <li>Scroll down to the API Token section.</li> <li>Click on the Copy button to copy the API Token.</li> <li>Use this API Token in with your Orbit node credentials in Workflow\u00b2.</li> </ol> <p></p>","title":"Using API Token"},{"location":"workflow/integrations/credentials/orbit/#further-reference","text":"<ul> <li>Orbit API Documentation</li> </ul>","title":"Further Reference"},{"location":"workflow/integrations/credentials/oura/","text":"<p>You can use these credentials to authenticate the following nodes with Oura. - Oura</p>","title":"Oura"},{"location":"workflow/integrations/credentials/oura/#prerequisites","text":"<p>Create a Oura account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/oura/#using-access-token","text":"<ol> <li>Open the Personal Access Tokens page.</li> <li>On the top-right corner of the page, click on the Create A New Personal Access Token button.</li> <li>Enter a note for the new Personal Access Token you are about to generate.</li> <li>Click on the Create Personal Access Token to create the Personal Access Token.</li> <li>Copy the displayed Personal Access Token.</li> <li>Enter a name for your credentials in the Credentials Name field in the 'Oura API' credentials in Workflow\u00b2.</li> <li>Paste the Personal Access Token in the Personal Access Token field in the 'Oura API' credentials in Workflow\u00b2.</li> <li> <p>Click on the Create button to create your credentials.</p> </li> <li> <p>Oura API Documentation</p> </li> </ol>","title":"Using Access Token"},{"location":"workflow/integrations/credentials/paddle/","text":"<p>You can use these credentials to authenticate the following nodes with Paddle. - Paddle</p>","title":"Paddle"},{"location":"workflow/integrations/credentials/paddle/#prerequisites","text":"<p>Create a Paddle account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/paddle/#using-access-token","text":"<ol> <li>Open your Paddle dashboard.</li> <li>Open the Developer Tools dropdown list in the sidebar and select Authentication.</li> <li>Enter a name and description in the Generate Auth Code section and click on Generate Key.</li> <li>Click on the Reveal Auth Code button to reveal the access token.</li> <li>Use the displayed vendor_id and Auth Code with your Paddle API credentials in Workflow\u00b2.</li> <li>Click on the Save button to save your credentials.</li> </ol> <p></p>","title":"Using Access Token"},{"location":"workflow/integrations/credentials/pagerDuty/","text":"<p>You can use these credentials to authenticate the following nodes with PagerDuty. - PagerDuty</p>","title":"PagerDuty"},{"location":"workflow/integrations/credentials/pagerDuty/#prerequisites","text":"<p>Create a PagerDuty account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/pagerDuty/#using-oauth","text":"<p>\u26c5\ufe0f Note fordoc2app.cloudintegration.eu users</p> <p>You'll only need to enter the Credentials Name and click on the circle button in the OAuth section to connect your PagerDuty account to Workflow\u00b2.</p>  <ol> <li>Access your PagerDuty dashboard.</li> <li>Select 'Developer Mode' from the number pad icon in the top right.</li> <li>Click on the Create New App button.</li> <li>Enter a name in the App Name field, and a description in the Brief Description field.</li> <li>Select 'Infrastructure Automation' from the Category dropdown list.</li> <li>Choose the appropriate option for the publication of your app and click on the Save button.</li> <li>Click on the Add button in the 'OAuth 2.0' section.</li> <li>Copy the 'OAuth Callback URL' provided in the 'PagerDuty OAuth2 API' credentials in Doc\u00b2 and paste it in the Redirect URL field in the PagerDuty app creation page.</li> <li>Use the provided Client ID and Client Secret with your PagerDuty OAuth2 API credentials in Workflow\u00b2.</li> <li>Select 'Read/Write' from the Set Permission Scopes dropdown list and then click on Save.</li> <li>Click on the circle button in the OAuth section of Doc\u00b2 to connect a PagerDuty account to Workflow\u00b2.</li> <li>Click on the Save button to save your credentials.</li> </ol> <p></p>","title":"Using OAuth"},{"location":"workflow/integrations/credentials/pagerDuty/#using-access-token","text":"<ol> <li>Access your PagerDuty dashboard.</li> <li>Click on configuration.</li> <li>Click on API access.</li> <li>Create a new API key.</li> <li>Use this API key with your PagerDuty node credentials in Workflow\u00b2.</li> </ol> <p></p>","title":"Using Access Token"},{"location":"workflow/integrations/credentials/payPal/","text":"<p>You can use these credentials to authenticate the following nodes with PayPal. - PayPal - PayPal Trigger</p>","title":"PayPal"},{"location":"workflow/integrations/credentials/payPal/#prerequisites","text":"<p>Create a PayPal account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/payPal/#using-oauth","text":"<ol> <li>Access your PayPal dashboard.</li> <li>Click on Log in to Dashboard.</li> <li>Enter your PayPal account credentials.</li> <li>In the section 'REST API apps', click on Create app.</li> <li>Enter a name for your app in App Name and click on Create App.</li> <li>Return to Doc\u00b2 and enter the Client ID and Client Secret in your PayPal API credentials.</li> <li>Choose the environment: sandbox or live.</li> </ol> <p></p>","title":"Using OAuth"},{"location":"workflow/integrations/credentials/peekalink/","text":"<p>You can use these credentials to authenticate the following nodes with Peekalink. - Peekalink</p>","title":"Peekalink"},{"location":"workflow/integrations/credentials/peekalink/#prerequisites","text":"<p>Create a Peekalink account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/peekalink/#using-api-key","text":"<ol> <li>Open your Peekalink dashboard.</li> <li>Copy the API key displayed under the Your API Key section.</li> <li>Enter a name for your credentials in the Credentials Name field in the 'Peekalink API' credentials in Workflow\u00b2.</li> <li>Paste the API key in the API Key field in the 'Peekalink API' credentials in Workflow\u00b2.</li> <li>Click on the Create button to create your credentials.</li> </ol> <p>The following video demonstrates the steps mentioned above.</p>","title":"Using API Key"},{"location":"workflow/integrations/credentials/phantombuster/","text":"<p>You can use these credentials to authenticate the following nodes with Phantombuster. - Phantombuster</p>","title":"Phantombuster"},{"location":"workflow/integrations/credentials/phantombuster/#prerequisites","text":"<p>Create a Phantombuster account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/phantombuster/#using-api","text":"<ol> <li>Access your Phantombuster dashboard.</li> <li>Click on your name on the top right and select 'Org settings'.</li> <li>Scroll down to the Third party API keys section.</li> <li>Click on the + Add third party API key button.</li> <li>Use this API Key with your Phantombuster node credentials in Workflow\u00b2.</li> </ol> <p></p>","title":"Using API"},{"location":"workflow/integrations/credentials/philipsHue/","text":"<p>You can use these credentials to authenticate the following nodes with Philips Hue. - Philips Hue</p>","title":"Philips Hue"},{"location":"workflow/integrations/credentials/philipsHue/#prerequisites","text":"<p>Create a Philips Hue Developer account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/philipsHue/#using-oauth","text":"<ol> <li>Access the Add new Hue Remote API app page.</li> <li>Enter a name in the App name field.</li> <li>Enter a description in the Application description field.</li> <li>Copy the 'OAuth Callback URL' provided in the Philips Hue OAuth2 API credentials in Doc\u00b2 and paste it in the Callback URL field in the Add new Hue Remote API app page.</li> <li>Click on the Submit button.</li> <li>Click on the AppId to reveal the credentials.</li> <li>Use the displayed AppId, ClientId and the ClientSecret with your Philips Hue OAuth2 API credentials in Workflow\u00b2.</li> <li>Click on the circle button in the OAuth section to connect a Philips Hue account to Workflow\u00b2.</li> <li>Click the Save button to save your credentials in Workflow\u00b2.</li> </ol> <p></p>","title":"Using OAuth"},{"location":"workflow/integrations/credentials/pipedrive/","text":"<p>You can use these credentials to authenticate the following nodes with Pipedrive. - Pipedrive - Pipedrive Trigger</p>","title":"Pipedrive"},{"location":"workflow/integrations/credentials/pipedrive/#prerequisites","text":"<p>Create a Pipedrive account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/pipedrive/#using-oauth","text":"<ol> <li>Create a Developer Sandbox Account.</li> <li>Open your Pipedrive Dashboard.</li> <li>Click on your user profile in the top right and select 'Tools and integrations' from the dropdown list.</li> <li>From the sidebar under the Tools section, select 'Marketplace manager'.</li> <li>Click on the Create new app button.</li> <li>Select either 'Yes' or 'No' when asked if you would like to publish your app on the Pipedrive marketplace.</li> <li>Click on the Next button.</li> <li>Enter the name of the app in the App name field.</li> <li>Copy the 'OAuth Callback URL' provided in the 'Pipedrive OAuth2 API' credentials in Workflow\u00b2.</li> <li>On the Pipedrive app creation page, scroll down to the OAuth &amp; Access scopes section and paste the URL in the Callback URL field.</li> <li>Based on your use-case, select the scopes from the Access scopes section.</li> <li>Scroll up and click on the Save button on the top.</li> <li>Select your app from the 'Marketplace manager'</li> <li>Scroll down to OAuth &amp; Access scopes section and copy the Client ID.</li> <li>Enter the name for your credentials in the Credentials Name field in the 'Pipedrive OAuth2 API' credentials in Workflow\u00b2.</li> <li>Paste the client ID in the Client ID field in the 'Pipedrive OAuth2 API' credentials in Workflow\u00b2.</li> <li>On the Pipedrive application page, click on the Show button next to Client Secret.</li> <li>Copy the Client Secret.</li> <li>Paste the client secret in the Client Secret field in the 'Pipedrive OAuth2 API' credentials in Workflow\u00b2.</li> <li>Click on the circle button in the OAuth section to connect a Pipedrive account to Workflow\u00b2.</li> <li>Click on the Save button to save your credentials.</li> </ol> <p>The following video demonstrates the steps mentioned above.</p>","title":"Using OAuth"},{"location":"workflow/integrations/credentials/pipedrive/#using-api-token","text":"<ol> <li>Open your Pipedrive Dashboard.</li> <li>Click on your user profile in the top right.</li> <li>Select 'Personal preferences' from the dropdown list.</li> <li>Click on the API tab.</li> <li>Click on the Copy button to copy the API Token.</li> <li>Enter the name for your credentials in the Credentials Name field in the 'Pipedrive API' credentials in Workflow\u00b2.</li> <li>Paste the API token in the API Token field in the 'Pipedrive API' credentials in Workflow\u00b2.</li> <li>Click on the Create button to save your credentials.</li> </ol> <p>The following video demonstrates the steps mentioned above.</p>","title":"Using API Token"},{"location":"workflow/integrations/credentials/plivo/","text":"<p>You can use these credentials to authenticate the following nodes with Plivo. - Plivo</p>","title":"Plivo"},{"location":"workflow/integrations/credentials/plivo/#prerequisites","text":"<p>Create a Plivo account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/plivo/#using-access-token","text":"<ol> <li>Open your Plivo console.</li> <li>Copy the displayed Auth ID under the Account and Payments section.</li> <li>Enter a name for your credentials in the Credentials Name field in the 'Plivo API' credentials in Workflow\u00b2.</li> <li>Paste the Auth ID in the Auth ID field in the 'Plivo API' credentials in Workflow\u00b2.</li> <li>Copy the Auth Token displayed on your Plivo console.</li> <li>Paste the Auth Token in the Auth Token field in the 'Plivo API' credentials in Workflow\u00b2.</li> <li>Click on the Create button to create your credentials.</li> </ol> <p>The following video demonstrates the steps mentioned above.</p>","title":"Using Access Token"},{"location":"workflow/integrations/credentials/postHog/","text":"<p>You can use these credentials to authenticate the following nodes with PostHog. - PostHog</p>","title":"PostHog"},{"location":"workflow/integrations/credentials/postHog/#prerequisites","text":"<p>Create a PostHog account or host PostHog on your server.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/postHog/#using-api-key","text":"<ol> <li>Open your PostHog dashboard.</li> <li>Click on Project on the left sidebar.</li> <li>Click on the Safety &amp; Privacy tab.</li> <li>Scroll down to the Project API Key section and copy the displayed API key.</li> <li>Enter a name for your credentials in the Credentials Name field in the 'PostHog API' credentials in Workflow\u00b2.</li> <li>If you're hosting PostHog on your own server, update the URL of your PostHog instance in the URL field.</li> <li>Paste the API key in the API Key field in the 'PostHog API' credentials in Workflow\u00b2.</li> <li>Click on the Create button to create your credentials.</li> </ol> <p>The following video demonstrates the steps mentioned above.</p>","title":"Using API Key"},{"location":"workflow/integrations/credentials/postgres/","tags":["Workflow\u00b2","Postgres","Prerequisites Postgres","Using Database Connection"],"text":"<p>You can use these credentials to authenticate the following nodes with Postgres. - Postgres</p>","title":"Postgres"},{"location":"workflow/integrations/credentials/postgres/#prerequisites","tags":["Workflow\u00b2","Postgres","Prerequisites Postgres","Using Database Connection"],"text":"<p>Create an user account on a Postgres server. </p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/postgres/#using-database-connection","tags":["Workflow\u00b2","Postgres","Prerequisites Postgres","Using Database Connection"],"text":"<ol> <li>Retrieve your Postgres credentials and connection parameters.</li> <li>Use the credentials and connection parameters with your Postgres node credentials in Workflow\u00b2.</li> </ol> <p></p>","title":"Using Database Connection"},{"location":"workflow/integrations/credentials/postmark/","text":"<p>You can use these credentials to authenticate the following nodes with Postmark. - Postmark Trigger</p>","title":"Postmark"},{"location":"workflow/integrations/credentials/postmark/#prerequisites","text":"<p>Create a Postmark account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/postmark/#using-access-token","text":"<ol> <li>Access the Postmark API Tokens page.</li> <li>Enter your postmark server name in the Search for a server field.</li> <li>From the displayed dropdown list, select your server and click on the Get a server API token button.</li> <li>Use the displayed Server API token with your Postmark API credentials in Workflow\u00b2.</li> <li>Click the Save button to save your credentials in Workflow\u00b2.</li> </ol> <p></p>","title":"Using Access Token"},{"location":"workflow/integrations/credentials/profitWell/","text":"<p>You can use these credentials to authenticate the following nodes with ProfitWell. - ProfitWell</p>","title":"ProfitWell"},{"location":"workflow/integrations/credentials/profitWell/#prerequisites","text":"<p>Create a ProfitWell account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/profitWell/#using-api","text":"<ol> <li>Access the ProfitWell dashboard page.</li> <li>Click on the gears icon on the left panel and select 'Integrations'.</li> <li>Click on the API KEYS/DEV KIT tab.</li> <li>Copy the YOUR PRIVATE KEY displayed.</li> <li>Use this Private Key with your ProfitWell node credentials in Workflow\u00b2.</li> </ol> <p></p>","title":"Using API"},{"location":"workflow/integrations/credentials/pushbullet/","text":"<p>You can use these credentials to authenticate the following nodes with Pushbullet. - Pushbullet</p>","title":"Pushbullet"},{"location":"workflow/integrations/credentials/pushbullet/#prerequisites","text":"<p>Create a Pushbullet account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/pushbullet/#using-oauth","text":"<ol> <li>Access the create client page.</li> <li>Enter an app name in the name field.</li> <li>Copy your OAuth Callback URL from the 'Create New Credentials' screen in Doc\u00b2 and paste it in the redirect_uri field.</li> <li>Click on the Add A New OAuth Client button.</li> <li>Use the provided client_id and client_secret with your Pushbullet OAuth2 API credentials in Workflow\u00b2.</li> <li>Click the Connect my account button to connect to Pushbullet and save your credentials in Workflow\u00b2.</li> </ol>  <p> Pushbullet OAuth Test Link</p> <p>Pushbullet does offer a test link during the client creation process described above. This link is not compatible with Workflow\u00b2. In order to verify the authentication works, simply use the Connect my account button in Workflow\u00b2.</p>  <p></p>","title":"Using OAuth"},{"location":"workflow/integrations/credentials/pushcut/","text":"<p>You can use these credentials to authenticate the following nodes with Pushcut. - Pushcut - Pushcut Trigger</p>","title":"Pushcut"},{"location":"workflow/integrations/credentials/pushcut/#prerequisites","text":"<p>Download the Pushcut app.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/pushcut/#using-api-key","text":"<ol> <li>Access the Pushcut application on your device.</li> <li>Click on the Account button.</li> <li>Click on the Add API Key under the INTEGRATIONS section.</li> <li>Click on the Generate button.</li> <li>Use the API Key with your Pushcut node credentials in Workflow\u00b2.</li> </ol> <p></p>","title":"Using API Key"},{"location":"workflow/integrations/credentials/pushover/","text":"<p>You can use these credentials to authenticate the following nodes with Pushover. - Pushover</p>","title":"Pushover"},{"location":"workflow/integrations/credentials/pushover/#prerequisites","text":"<p>Create a Pushover account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/pushover/#using-api-key","text":"<ol> <li>Access the Pushover dashboard.</li> <li>Scroll down to the bottom and click on Create an Application/API Token.</li> <li>Enter the name of your application in the Name field.</li> <li>Read the 'Terms of Services' and the 'Guide to Being Friendly to our API' and, if you agree to them, check the checkbox.</li> <li>Click on the Create Application button.</li> <li>Use this API Key with your Pushover node credentials in Workflow\u00b2.</li> </ol> <p></p>","title":"Using API Key"},{"location":"workflow/integrations/credentials/questDb/","text":"<p>You can use these credentials to authenticate the following nodes with QuestDB. - QuestDB</p>","title":"QuestDB"},{"location":"workflow/integrations/credentials/questDb/#prerequisites","text":"<p>An available instance of QuestDB. </p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/questDb/#using-database-connection","text":"<ol> <li>Retrieve your QuestDB credentials and connection parameters.</li> <li>Use the credentials and connection parameters with your QuestDB node credentials in Workflow\u00b2.</li> </ol>","title":"Using Database Connection"},{"location":"workflow/integrations/credentials/quickbase/","text":"<p>You can use these credentials to authenticate the following nodes with Quick Base. - Quick Base</p>","title":"Quick Base"},{"location":"workflow/integrations/credentials/quickbase/#prerequisites","text":"<p>Create a Quick Base account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/quickbase/#using-api","text":"<ol> <li>Access your Quick Base dashboard.</li> <li>Click on your name on the top right and select 'My preferences' from the dropdown list.</li> <li>Click on Manage my user tokens under the My User Information section.</li> <li>Click on the + New user token button.</li> <li>Enter a name in the Name field.</li> <li>Select an app from the Assign token to apps dropdown list.</li> <li>Click on the Save button.</li> <li>Copy the string of characters located between <code>https://</code> and <code>/db</code> in your Quick Base URL. This string is the hostname.</li> <li>Use this Hostname and User Token with your Quick Base node credentials in Workflow\u00b2.</li> </ol> <p></p>","title":"Using API"},{"location":"workflow/integrations/credentials/quickbase/#further-reference","text":"<ul> <li>Quick Base API Portal</li> </ul>","title":"Further Reference"},{"location":"workflow/integrations/credentials/quickbooks/","text":"<p>You can use these credentials to authenticate the following nodes with QuickBooks. - QuickBooks</p>","title":"QuickBooks"},{"location":"workflow/integrations/credentials/quickbooks/#prerequisites","text":"<p>Create a Intuit developer account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/quickbooks/#using-oauth","text":"<ol> <li>Open the Intuit Developer dashboard page.</li> <li>Click on the + Create an app button.</li> <li>Select the QuickBooks Online and Payments platform.</li> <li>Enter the name of the app in the What's your app name? field.</li> <li>Select the required scopes under the Select Scope section.</li> <li>Click on the Create app button.</li> <li>Click on Keys &amp; OAuth under the Development section.</li> <li>Scroll down to the Redirect URIs section and click on the Add URI button.</li> <li>Copy the 'OAuth Callback URL' provided in the 'QuickBooks OAuth2 API' credentials in Workflow\u00b2.</li> <li>Paste the URL in the Link field.</li> <li>Click on the Save button.</li> <li>Copy the displayed Client ID.</li> <li>Enter a name for your credentials in the Credentials Name field in the 'QuickBooks OAuth2 API' credentials in Workflow\u00b2.</li> <li>Paste the client ID in the Client ID field in the 'QuickBooks OAuth2 API' credentials in Workflow\u00b2.</li> <li>Copy the displayed Client Secret from the Keys page.</li> <li>Paste the client secret in the Client Secret field in the 'QuickBooks OAuth2 API' credentials in Workflow\u00b2.</li> <li>Select 'Sandbox' from the Environment dropdown list in the 'QuickBooks OAuth2 API' credentials in Workflow\u00b2.</li> <li>Click on the circle button in the OAuth section to connect a QuickBooks account to Workflow\u00b2.</li> <li>Click the Save button to save your credentials in Workflow\u00b2.</li> </ol> <p>Note: To build the application in production, you will have to fulfill all the requirements mentioned by Intuit. You can learn more on Intuit's documentation.</p> <p>The following video demonstrates the steps mentioned above.</p>","title":"Using OAuth"},{"location":"workflow/integrations/credentials/rabbitmq/","tags":["Workflow\u00b2","RabbitMQ","Prerequisites RabbitMQ"],"text":"<p>You can use these credentials to authenticate the following nodes with RabbitMQ. - RabbitMQ - RabbitMQ Trigger</p>","title":"RabbitMQ"},{"location":"workflow/integrations/credentials/rabbitmq/#prerequisites","tags":["Workflow\u00b2","RabbitMQ","Prerequisites RabbitMQ"],"text":"<p>You need to have a RabbitMQ broker installed.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/rabbitmq/#using-rabbitmq","tags":["Workflow\u00b2","RabbitMQ","Prerequisites RabbitMQ"],"text":"<p>Use your Hostname, Port, Username, Password, and Vhost as the RabbitMQ credential data in Workflow\u00b2.</p>","title":"Using RabbitMQ"},{"location":"workflow/integrations/credentials/raindrop/","text":"<p>You can use these credentials to authenticate the following nodes with Raindrop. - Raindrop</p>","title":"Raindrop"},{"location":"workflow/integrations/credentials/raindrop/#prerequisites","text":"<p>Create a Raindrop account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/raindrop/#using-oauth","text":"<ol> <li>Open the Raindrop dashboard page.</li> <li>Click on your username on the top left and select 'Settings' from the dropdown list.</li> <li>Click on the Integrations tab.</li> <li>Click on + Create new app under the For Developers section.</li> <li>Enter the name of the app in the Name field.</li> <li>Accept the Raindrop.io API Terms and Guidelines.</li> <li>Click on the Create button.</li> <li>Under the For Developers section, select the app that you created.</li> <li>Enter a description in the Description field.</li> <li>Enter a URL in the Site field.</li> <li>Copy the 'OAuth Callback URL' provided in the 'Raindrop OAuth2 API' credentials in Workflow\u00b2.</li> <li>Paste the URL in the Redirect URI field and click on the Save button.</li> <li>Copy the displayed Client ID.</li> <li>Enter a name for your credentials in the Credentials Name field in the 'Raindrop OAuth2 API' credentials in Workflow\u00b2.</li> <li>Paste the client ID in the Client ID field in the 'Raindrop OAuth2 API' credentials in Workflow\u00b2.</li> <li>Copy the displayed Client secret from the Raindrop.</li> <li>Paste the client secret in the Client Secret field in the 'Raindrop OAuth2 API' credentials in Workflow\u00b2.</li> <li>Click on the circle button in the OAuth section to connect a Raindrop account to Workflow\u00b2.</li> <li>Click the Save button to save your credentials in Workflow\u00b2.</li> </ol> <p>The following video demonstrates the steps mentioned above.</p>","title":"Using OAuth"},{"location":"workflow/integrations/credentials/reddit/","text":"<p>You can use these credentials to authenticate the following nodes with Reddit. - Reddit</p>","title":"Reddit"},{"location":"workflow/integrations/credentials/reddit/#prerequisites","text":"<p>Create a Reddit account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/reddit/#using-oauth","text":"<ol> <li>Open Reddit.</li> <li>Click on your avatar on the top right and select 'User Settings'.</li> <li>Click on the Safety &amp; Privacy tab.</li> <li>Scroll to the bottom and click on Manage third-party app authorization.</li> <li>Click on the are you a developer? create an app... button.</li> <li>Enter the name of your application in the name field.</li> <li>Copy the 'OAuth Callback URL' provided in the 'Reddit OAuth2 API' credentials in Workflow\u00b2.</li> <li>Paste the URL in the redirect uri field.</li> <li>Click on the create app button.</li> <li>Copy the client ID displayed next to the app's icon.</li> <li>Enter a name for your credentials in the Credentials Name field in the 'Reddit OAuth2 API' credentials in Workflow\u00b2.</li> <li>Paste the client ID in the Client ID field in the 'Reddit OAuth2 API' credentials in Workflow\u00b2.</li> <li>Copy the client secret from Reddit and paste it in the Client Secret field in the 'Reddit OAuth2 API' credentials in Workflow\u00b2.</li> <li>Click on the circle button in the OAuth section to connect a Reddit account to Workflow\u00b2.</li> <li>Click on the Save button to save your credentials.</li> </ol> <p>The following video demonstrates the steps mentioned above.</p>","title":"Using OAuth"},{"location":"workflow/integrations/credentials/redis/","text":"<p>You can use these credentials to authenticate the following nodes with Redis. - Redis</p>","title":"Redis"},{"location":"workflow/integrations/credentials/redis/#prerequisites","text":"<p>Create an user account on a Redis server. </p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/redis/#using-database-connection","text":"<ol> <li>Retrieve your Redis credentials and connection parameters.</li> <li>Use the credentials and connection parameters with your Redis node credentials in Workflow\u00b2.</li> </ol> <p></p>","title":"Using Database Connection"},{"location":"workflow/integrations/credentials/rocketchat/","text":"<p>You can use these credentials to authenticate the following nodes with Rocket.Chat. - Rocket.Chat</p>","title":"Rocket.Chat"},{"location":"workflow/integrations/credentials/rocketchat/#prerequisites","text":"<ul> <li>Create a Rocket.Chat account.</li> <li>Have the necessary permission <code>create-personal-access-tokens</code> (from administrator) to be able to generate personal access tokens.</li> </ul>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/rocketchat/#using-access-token","text":"<ol> <li>Access your Rocket.Chat instance.</li> <li>Click on the profile icon in the top left.</li> <li>Click on My Account.</li> <li>Click on Personal Access Tokens from the panel on the left.</li> <li>Enter a name for your Personal access token and click on the Add button.</li> <li>Copy the Token and enter that in the Auth Key field in Workflow\u00b2.</li> <li>Copy the User Id and enter that in the User Id field in Workflow\u00b2.</li> </ol> <p></p>","title":"Using Access Token"},{"location":"workflow/integrations/credentials/rundeck/","text":"<p>You can use these credentials to authenticate the following nodes with Rundeck. - Rundeck</p>","title":"Rundeck"},{"location":"workflow/integrations/credentials/rundeck/#prerequisites","text":"<p>Create a Rundeck account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/rundeck/#using-access-token","text":"<ol> <li>Access your Rundeck dashboard.</li> <li>Click on your user icon in the top right.</li> <li>Click on 'Profile'.</li> <li>Next to 'User API Tokens', click on the plus button and generate a new token.</li> <li>Click on 'Show Token' to reveal the token you generated.</li> <li>Use the API token with your Rundeck node credentials in Workflow\u00b2.</li> </ol> <p></p>","title":"Using Access Token"},{"location":"workflow/integrations/credentials/s3/","text":"<p>You can use these credentials to authenticate the following nodes with S3. - S3</p>","title":"S3"},{"location":"workflow/integrations/credentials/s3/#prerequisites","text":"<p>Create an account on S3 compatible server.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/s3/#using-access-token","text":"<ol> <li>Retrieve your S3 endpoint, access key ID, and secret access key from your S3 compatible server.</li> <li>Use the S3 endpoint, access key ID, and the secret access key in your S3 node credentials in Workflow\u00b2.</li> <li>Click on the Save button to save your credentials.</li> </ol>","title":"Using Access Token"},{"location":"workflow/integrations/credentials/salesforce/","tags":["Workflow\u00b2","Salesforce"],"text":"<p>You can use these credentials to authenticate the following nodes with Salesforce. - Salesforce</p>","title":"Salesforce"},{"location":"workflow/integrations/credentials/salesforce/#prerequisites","tags":["Workflow\u00b2","Salesforce"],"text":"<p>Create a Salesforce account.</p> <ol> <li>Access your Salesforce Dashboard.</li> <li>Click on the gear icon in the top right and select Setup from the dropdown list.</li> <li>In the Platform Tools category of the sidebar, select App Manager under the Apps section.</li> <li>Click on the New Connected App button.</li> <li>Enter any necessary information and click on the Enable OAuth Settings checkbox.</li> <li>Copy the OAuth Callback URL provided in the 'Salesforce OAuth2 API' credentials in Workflow\u00b2.</li> <li>On the Salesforce app creation page, paste the URL in the Callback URL field.</li> <li>Add the \"Perform requests on your behalf at any time (refresh_token, offline_access)\" scope in the Selected OAuth Scopes section.</li> <li>Add any other scopes you plan to use in the  Selected OAuth Scopes section.</li> <li>Click on the Save button at the bottom of the page.</li> <li>On the New Connected App page, click on the Continue button.</li> <li>In the 'API (Enable OAuth Settings)' section of the page, click on the Click to reveal button to reveal the consumer secret.</li> <li>Copy the displayed Consumer Key and the Consumer Secret and use these with your Salesforce OAuth2 API credentials in Workflow\u00b2.</li> <li>In the Doc\u00b2 credentials window select your Environment Type, where Production or Sandbox.</li> <li>Click on the circle button in the OAuth section to connect a Salesforce account to Workflow\u00b2.</li> <li>Click on the Save button to save your credentials.</li> </ol> <p></p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/salesforce/#using-oauth-jwt","tags":["Workflow\u00b2","Salesforce"],"text":"<p>To use the OAuth JWT authentication method with the Salesforce node you need to create a private key. Follow the instructions mentioned in the documentation here to create a private key.</p> <ol> <li>Access your Salesforce Dashboard.</li> <li>Click on the gear icon in the top right and select Setup from the dropdown list.</li> <li>In the Platform Tools category of the sidebar, select App Manager under the Apps section.</li> <li>Click on the New Connected App button.</li> <li>Enter any necessary information and click on the Enable OAuth Settings checkbox.</li> <li>Copy the OAuth Callback URL provided in the 'Salesforce OAuth2 API' credentials in Workflow\u00b2.</li> <li>On the Salesforce app creation page, paste the URL in the Callback URL field.</li> <li>Click on the Use digital signatures checkbox.</li> <li>Upload the private key that you created earlier.</li> <li>Add the \"Perform requests on your behalf at any time (refresh_token, offline_access)\" scope in the Selected OAuth Scopes section.</li> <li>Add any other scopes you plan to use in the  Selected OAuth Scopes section.</li> <li>Click on the Save button at the bottom of the page.</li> <li>On the New Connected App page, click on the Continue button.</li> <li>Copy the displayed Consumer Key and paste it in the Client ID field in your Salesforce JWT API credentials in Workflow\u00b2.</li> <li>Use your Salesforce username in the Username field.</li> <li>Copy the private key that you created earlier and paste it in the Private Key field in your Salesforce JWT API credentials in Workflow\u00b2.</li> <li>Click on the Save button to save your credentials.</li> </ol>","title":"Using OAuth JWT"},{"location":"workflow/integrations/credentials/salesmate/","tags":["Workflow\u00b2","Salesmate"],"text":"<p>You can use these credentials to authenticate the following nodes with Salesmate. - Salesmate</p>","title":"Salesmate"},{"location":"workflow/integrations/credentials/salesmate/#prerequisites","tags":["Workflow\u00b2","Salesmate"],"text":"<p>Create a Salesmate account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/salesmate/#using-access-token","tags":["Workflow\u00b2","Salesmate"],"text":"<ol> <li>Access your Salesmate Dashboard.</li> <li>Click on your user icon in the top right.</li> <li>Click on My Account.</li> <li>Click on Access Key in the left panel.</li> <li>Copy the session key.</li> <li>Use session key and domain name for your Salesmate node credentials in Workflow\u00b2.</li> </ol> <p></p>","title":"Using Access Token"},{"location":"workflow/integrations/credentials/seaTable/","tags":["Workflow\u00b2","SeaTable"],"text":"<p>You can use these credentials to authenticate the following nodes:</p> <ul> <li>SeaTable</li> <li>SeaTable Trigger</li> </ul>","title":"SeaTable"},{"location":"workflow/integrations/credentials/seaTable/#prerequisites","tags":["Workflow\u00b2","SeaTable"],"text":"<p>You need to have a SeaTable instance or cloud account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/seaTable/#using-api-key","tags":["Workflow\u00b2","SeaTable"],"text":"<p>From your SeaTable dashboard:</p> <ol> <li>From the Bases menu select the base you want to enable access for.</li> <li>Navigate to the base options &gt; Advanced &gt; API Token.</li> <li>In the modal, enter a name for this token and select the Read-Write permission.</li> <li>Click Submit and copy the new API token.</li> </ol> <p>From n8n:</p> <ol> <li>Select your environment type: Cloud-hosted or Self-hosted.</li> <li>For Self-hosted environments enter the domain of your instance.</li> <li>Enter the API token obtained above and click Save to create your credential.</li> </ol>","title":"Using API key"},{"location":"workflow/integrations/credentials/securityScorecard/","tags":["Workflow\u00b2","SecurityScorecard"],"text":"<p>You can use these credentials to authenticate the following nodes with SecurityScorecard. - SecurityScorecard</p>","title":"SecurityScorecard"},{"location":"workflow/integrations/credentials/securityScorecard/#prerequisites","tags":["Workflow\u00b2","SecurityScorecard"],"text":"<p>Create a SecurityScorecard account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/securityScorecard/#using-api","tags":["Workflow\u00b2","SecurityScorecard"],"text":"<ol> <li>Open your SecurityScorecard dashboard.</li> <li>Click on Integrations and select 'Get an API Key'.</li> <li>Click on Generate new API token.</li> <li>Click on the Confirm button.</li> <li>Copy the generated API key.</li> <li>Enter a name for your credentials in the Credentials Name field in the 'SecurityScorecard API' credentials in Workflow\u00b2.</li> <li>Paste the API key in the API Key field in the 'Security Scorecard API' credentials in Workflow\u00b2.</li> <li>Click on the Create button to create your credentials.</li> </ol> <p>The following video demonstrates the steps mentioned above.</p>","title":"Using API"},{"location":"workflow/integrations/credentials/segment/","tags":["Workflow\u00b2","Segment"],"text":"<p>You can use these credentials to authenticate the following nodes with Segment. - Segment</p>","title":"Segment"},{"location":"workflow/integrations/credentials/segment/#prerequisites","tags":["Workflow\u00b2","Segment"],"text":"<p>Create a Segment account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/segment/#using-access-token","tags":["Workflow\u00b2","Segment"],"text":"<ol> <li>Access your Segment Dashboard.</li> <li>Click on Sources, on the left panel.</li> <li>Click on Add Source.</li> <li>Select Node.js.</li> <li>Copy write key.</li> <li>Use session write key for your Segment node credentials in Workflow\u00b2.</li> </ol> <p></p>","title":"Using Access Token"},{"location":"workflow/integrations/credentials/sendEmail/","tags":["Workflow\u00b2","Send Email"],"text":"<p>You can use these credentials to authenticate the following nodes with SMTP. - Send Email</p>","title":"Send Email"},{"location":"workflow/integrations/credentials/sendEmail/#prerequisites","tags":["Workflow\u00b2","Send Email"],"text":"<p>Create an email account on a service with SMTP support. </p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/sendEmail/#using-smtp","tags":["Workflow\u00b2","Send Email"],"text":"<ol> <li>Retrieve your login credentials and SMTP connection parameters.</li> <li>Use the login credentials and SMTP connection parameters with your Send Email node credentials in Workflow\u00b2.</li> </ol>","title":"Using SMTP"},{"location":"workflow/integrations/credentials/sendgrid/","tags":["Workflow\u00b2","SendGrid"],"text":"<p>You can use these credentials to authenticate the following nodes with SendGrid. - SendGrid</p>","title":"SendGrid"},{"location":"workflow/integrations/credentials/sendgrid/#prerequisites","tags":["Workflow\u00b2","SendGrid"],"text":"<p>Create a SendGrid account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/sendgrid/#using-api-key","tags":["Workflow\u00b2","SendGrid"],"text":"<ol> <li>Open your SendGrid dashboard.</li> <li>Click on Settings on the left sidebar.</li> <li>Click on API Keys.</li> <li>Click on the Create API Key button.</li> <li>Enter the name of the key in the API Key Name field.</li> <li>Click on the Create &amp; View button.</li> <li>Click on the displayed API key to copy the key.</li> <li>Enter the name for your credentials in the Credentials Name field in the 'SendGrid API' credentials in Workflow\u00b2.</li> <li>Paste the 'API Key' in the API Key field.</li> <li>Click on the Create button to save your credentials.</li> </ol> <p>The following video demonstrates the steps mentioned above.</p>","title":"Using API Key"},{"location":"workflow/integrations/credentials/sendy/","tags":["Workflow\u00b2","Sendy"],"text":"<p>You can use these credentials to authenticate the following nodes with Sendy. - Sendy</p>","title":"Sendy"},{"location":"workflow/integrations/credentials/sendy/#prerequisites","tags":["Workflow\u00b2","Sendy"],"text":"<p>Host a Sendy application.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/sendy/#using-api-key","tags":["Workflow\u00b2","Sendy"],"text":"<ol> <li>Access your Sendy application.</li> <li>Click on the username on the top right corner and select 'Settings'.</li> <li>Copy the API key displayed under the Your API key section.</li> <li>Use this API key and the installation URL with your Sendy node credentials in Workflow\u00b2.</li> </ol> <p></p>","title":"Using API Key"},{"location":"workflow/integrations/credentials/sentryIo/","text":"<p>You can use these credentials to authenticate the following nodes with Sentry.io. - Sentry.io</p>","title":"Sentry.io"},{"location":"workflow/integrations/credentials/sentryIo/#prerequisites","text":"<p>Create a Sentry.io account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/sentryIo/#using-oauth","text":"<p>\u26c5\ufe0f Note fordoc2app.cloudintegration.eu users</p> <p>You'll only need to enter the Credentials Name and click on the circle button in the OAuth section to connect your Sentry.io account to Workflow\u00b2.</p>  <ol> <li>Access your Sentry.io Applications Page.</li> <li>Click on the Create New Application button in the top right.</li> <li>Enter a name in the Name field.</li> <li>Copy the 'OAuth Callback URL' provided in the 'Sentry.io OAuth2 API' credentials in Doc\u00b2 and paste it in the Authorized Redirect URIs field in the Sentry.io Application Details page.</li> <li>Use the displayed Client ID and Client Secret with your Sentry.io OAuth2 API credentials in Workflow\u00b2.</li> <li>Click on the circle button in the OAuth section to connect a Sentry.io account to Workflow\u00b2.</li> <li>Click on the Save button to save your credentials.</li> </ol> <p></p>","title":"Using OAuth"},{"location":"workflow/integrations/credentials/sentryIo/#using-access-token","text":"<ol> <li>Access your Sentry.io Auth Tokens page.</li> <li>Click on the Create New Token button in the top right.</li> <li>Select any scopes you plan to use and then click on Create Token.</li> <li>Use the generated access token with your Sentry.io API credentials in Workflow\u00b2.</li> <li>Click on the Save button to save your credentials.</li> </ol> <p></p>","title":"Using Access Token"},{"location":"workflow/integrations/credentials/serviceNow/","text":"<p>You can use these credentials to authenticate the following nodes with serviceNow. - ServiceNow</p>","title":"ServiceNow"},{"location":"workflow/integrations/credentials/serviceNow/#prerequisites","text":"<p>Create a ServiceNow account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/serviceNow/#using-oauth","text":"<p>From your ServiceNow instance:</p> <ol> <li>Navigate to System OAuth &gt; Application Registry.</li> <li>Click New button &gt; Create an OAuth API endpoint for external clients.</li> </ol> <p></p> <ol> <li>Complete the following fields:<ul> <li>Name: Enter a descriptive name for the new endpoint.</li> <li>Client ID: Auto populated field, you will need this ID to configure your Doc\u00b2 credentials.</li> <li>Client Secret: Enter your desired secret or leave blank to auto generate a random string. You will need this to configure your Doc\u00b2 credentials.</li> <li>Redirect URL: Copy the OAuth Callback URL from the Doc\u00b2 credentials window and enter it here.</li> </ul> </li> <li>Click Submit to save and create your new endpoint.</li> </ol> <p>From n8n:</p> <ol> <li>Enter a descriptive Credentials Name.</li> <li>Under Credential Data complete the following fields:<ul> <li>Client ID: Enter the client ID generated above.</li> <li>Client Secret: Enter your client secret created above.</li> <li>Subdomain: Enter the subdomain of your ServiceNow instance. This can be seen in your instance URL: <code>https://&lt;subdomain&gt;.service-now.com/</code>.</li> </ul> </li> <li>From the OAuth section, click the circle button to establish the connection.</li> <li>Click Save to finalize your Doc\u00b2 credentials.</li> </ol>","title":"Using OAuth"},{"location":"workflow/integrations/credentials/shopify/","text":"<p>You can use these credentials to authenticate the following nodes with Shopify. - Shopify - Shopify Trigger</p>","title":"Shopify"},{"location":"workflow/integrations/credentials/shopify/#prerequisites","text":"<p>Create a Shopify account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/shopify/#using-api-key","text":"<ol> <li>Access the Apps section of your Shopify Store's admin console.</li> <li>Click on 'Manage private apps' near the bottom of the page.</li> <li>Click on the 'Create new private app' button and create a new app by entering any necessary information. Make sure that you set appropriate for the methods you plan to use under the 'Admin API' section.</li> <li>Upon app creation, scroll down, and you will see your API key, Password, and Shared Secret.</li> <li>Use your password, API key, secret, and shop subdomain with your Shopify node credentials in Workflow\u00b2.</li> </ol> <p>Note: Use the subdomain without <code>.myshopify.com</code> in Workflow\u00b2.</p> <p></p>","title":"Using API Key"},{"location":"workflow/integrations/credentials/signl4/","text":"<p>You can use these credentials to authenticate the following nodes with SIGNL4. - SIGNL4</p>","title":"SIGNL4"},{"location":"workflow/integrations/credentials/signl4/#prerequisites","text":"<p>Create a SIGNL4 account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/signl4/#using-access-token","text":"<ol> <li>Open the '\u2705 Sign up complete' email you received when you signed up for SIGNL4.</li> <li>Your team secret is the last part of the webhook URL. If your webhook URL is <code>https://connect.signl4.com/webhook/helloworld</code>, your team secret would be <code>helloworld</code>.</li> </ol>","title":"Using Access Token"},{"location":"workflow/integrations/credentials/slack/","text":"<p>You can use these credentials to authenticate the following nodes:</p> <ul> <li>Slack</li> </ul>","title":"Slack"},{"location":"workflow/integrations/credentials/slack/#prerequisites","text":"<p>Create a Slack account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/slack/#using-oauth","text":"<p>\u26c5\ufe0f Note fordoc2app.cloudintegration.eu users</p> <p>You'll only need to enter the Credentials Name and click on the circle button in the OAuth section to connect your Slack account to Workflow\u00b2.</p>  <ol> <li>Open the Slack API page.</li> <li>Click on the Create an app button and select From scratch.</li> <li>Enter an App Name in the corresponding field.</li> <li>Select a workspace for your app from the dropdown list.</li> <li>Click on the Create App button.</li> <li>Scroll down to the App Credentials section.</li> <li>Copy and paste Client ID and Client Secret in the corresponding fields of your Doc\u00b2 credentials.</li> <li>On the Basic Information page, navigate to Building Apps for Slack &gt; Add features and functionality &gt; Permissions.</li> <li>In the Redirect URLs section, click on Add New Redirect URL.</li> <li>Copy the OAuth Callback URL provided in Doc\u00b2 and paste it here.</li> <li>Click on the Save URLs button.</li> <li>Scroll down to the Scopes section.</li> <li>Add the required scopes under the Bot Token Scopes section. You can refer to the list of scopes on the Scopes and permissions documentation on Slack.</li> <li>Click on the circle button in the OAuth section to connect a Slack account to Workflow\u00b2.</li> <li>Click the Save button to save your credentials in Workflow\u00b2.</li> <li>Return to the Slack OAuth &amp; Permissions page, scroll up to the OAuth Tokens for Your Workspace section and click on Install to Workspace button.</li> <li>Click on the Allow button.</li> </ol>","title":"Using OAuth"},{"location":"workflow/integrations/credentials/slack/#using-access-token","text":"<ol> <li>Open the Slack API page.</li> <li>Click on the Create an app button and select From scratch.</li> <li>Enter an App Name in the corresponding field.</li> <li>Select a workspace for your app from the dropdown list.</li> <li>Click on the Create App button.</li> <li>In the Add features and functionality section select Permissions.</li> <li> <p>Scroll down to the Scopes section and:</p> <ul> <li>If you want your app to act on behalf of users that authorize the app, add the required scopes under the User Token Scopes section.</li> <li>If you're building a bot, add the required scopes under the Bot Token Scopes section. </li> </ul>  <p>Tip</p> <p>You can refer to the list of scopes on the officials Slack Scopes and permissions documentation.</p>  </li> <li> <p>From the OAuth Tokens for Your Workspace section click on the Install to Workspace button.</p> </li> <li>Click on the Allow button.</li> <li>In Doc\u00b2, enter the Access Token created above.</li> <li>Click the Save button to save your credentials in Workflow\u00b2.</li> </ol>","title":"Using Access Token"},{"location":"workflow/integrations/credentials/slack/#privacy-policy","text":"<p>For details about how you data is collected and used, see the n8n and Slack privacy policies.</p>","title":"Privacy policy"},{"location":"workflow/integrations/credentials/sms77/","text":"<p>You can use these credentials to authenticate the following nodes with sms77. - sms77</p>","title":"sms77"},{"location":"workflow/integrations/credentials/sms77/#prerequisites","text":"<p>Create an sms77 account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/sms77/#using-access-token","text":"<ol> <li>Access your sms77 dashboard.</li> <li>Click on the gear icon in the bottom left.</li> <li>Click on the HTTP API tab.</li> <li>Use the API key provided with your sms77 node credentials in Workflow\u00b2.</li> </ol> <p></p>","title":"Using Access Token"},{"location":"workflow/integrations/credentials/snowflake/","text":"<p>You can use these credentials to authenticate the following nodes with Snowflake. - Snowflake</p>","title":"Snowflake"},{"location":"workflow/integrations/credentials/snowflake/#prerequisites","text":"<p>Create a Snowflake account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/snowflake/#using-api-key","text":"<ol> <li>Access your Snowflake instance.</li> <li>Copy the string of characters located between <code>https://</code> and <code>snowflakecomputing.com</code> in your Snowflake URL. This string is the name of your Snowflake Account. For example, if the URL of your Snowflake account is <code>https://abc.eu-central-1.snowflakecomputing.com</code> then the name of your account is <code>sx48547.eu-central-1</code>.</li> <li>Use this account name, database name, username, password, schema, and role with your Snowflake credentials in Workflow\u00b2.</li> </ol>","title":"Using API Key"},{"location":"workflow/integrations/credentials/snowflake/#further-reference","text":"<ul> <li>Snowflake API Documentation</li> </ul>","title":"Further Reference"},{"location":"workflow/integrations/credentials/splunk/","text":"<p>You can use these credentials to authenticate the following nodes:</p> <ul> <li>Splunk</li> </ul>","title":"Splunk"},{"location":"workflow/integrations/credentials/splunk/#prerequisites","text":"<ul> <li>Download and install Splunk Enterprise</li> </ul>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/splunk/#using-api-key","text":"<p>From your Splunk UI:</p> <ol> <li>Navigate to the Settings &gt; Tokens menu.</li> <li>Select Enable Token Authentication and create a New Token.</li> <li>Copy the API Key provided there.</li> </ol> <p>From n8n:</p> <ol> <li>Enter your API key and application Base URL (e.g. <code>https://localhost:8089</code>).</li> <li>Use the toggle to select if you want to Allow Unauthorized Certificates.</li> <li>Click Save to create your credentials.</li> </ol>","title":"Using API Key"},{"location":"workflow/integrations/credentials/spontit/","text":"<p>You can use these credentials to authenticate the following nodes with Spontit. - Spontit</p>","title":"Spontit"},{"location":"workflow/integrations/credentials/spontit/#prerequisites","text":"<p>Create a Spontit account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/spontit/#using-api-key","text":"<ol> <li>Access the Spontit dashboard.</li> <li>On the navigation menu, click on API, and select 'Get Secret Keys' from the dropdown list.</li> <li>Click on + Create New Key to generate a new API Key.</li> <li>Click on the PROFILE tab on the navigation menu.</li> <li>Copy the displayed username.</li> <li>Use this API Key and Username with your Spontit credentials in Workflow\u00b2.</li> </ol> <p></p>","title":"Using API Key"},{"location":"workflow/integrations/credentials/spontit/#further-reference","text":"<ul> <li>Spontit API Documentation</li> </ul>","title":"Further Reference"},{"location":"workflow/integrations/credentials/spotify/","text":"<p>You can use these credentials to authenticate the following nodes with Spotify. - Spotify</p>","title":"Spotify"},{"location":"workflow/integrations/credentials/spotify/#prerequisites","text":"<p>Create a Spotify Developer account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/spotify/#using-oauth","text":"<p>\u26c5\ufe0f Note fordoc2app.cloudintegration.eu users</p> <p>You'll only need to enter the Credentials Name and click on the circle button in the OAuth section to connect your Spotify account to Workflow\u00b2.</p>  <ol> <li>Access your Spotify for Developers dashboard.</li> <li>Click the Create an App button at the top of your dashboard. Enter in the app's name and description and click Create.</li> <li>Use provided Client Secret and Client ID with your Spotify node credentials in Workflow\u00b2.</li> <li>Open the app settings and add the Doc\u00b2 provided redirect URL to the app's redirect URI list. Redirect URL Explanation here.</li> </ol> <p></p>","title":"Using OAuth"},{"location":"workflow/integrations/credentials/ssh/","text":"<p>You can use these credentials to authenticate the following nodes:</p> <ul> <li>SSH</li> </ul>","title":"SSH"},{"location":"workflow/integrations/credentials/ssh/#prerequisites","text":"<p>Authentication for the SSH node requires that you have a username and password for connecting to the remote server, or an SSH key configured for the server or service you are connecting to.  See Connecting to GitHub with SSH for an example.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/ssh/#using-password","text":"<ol> <li>From the SSH Credentials dropdown, select Create New and complete the following fields:<ul> <li>Credentials Name: Enter a descriptive name, here we used <code>ssh_demo</code>.</li> <li>Host: Enter the IP address of the server you are connecting to. Here we are using <code>192.168.1.8</code> for a local Mac set up for SSH access.</li> <li>Port: Enter the port to use for this connection. SSH used port 22 by default.</li> <li>User: Enter the your username for this server.</li> <li>Password: Enter your password for the provided username.</li> </ul> </li> <li>Click Save to make these credentials available for use.</li> </ol> <p></p>","title":"Using Password"},{"location":"workflow/integrations/credentials/ssh/#using-private-key","text":"<ol> <li>With Private Key selected in the Authentication field, from the SSH Credentials dropdown select Create New.</li> <li>Complete the following fields:<ul> <li>Credentials Name: Enter a descriptive name, here we used <code>ssh_demo</code>.</li> <li>Host: Enter the IP address of the server you are connecting to.</li> <li>Port: Enter the port to use for this connection. SSH used port 22 by default.</li> <li>Private Key: Enter your SSH private key.</li> <li>Passphrase: Enter your passphrase used to secure this key.</li> </ul> </li> </ol> <p></p>","title":"Using Private Key"},{"location":"workflow/integrations/credentials/stackby/","text":"<p>You can use these credentials to authenticate the following nodes with Stackby. - Stackby</p>","title":"Stackby"},{"location":"workflow/integrations/credentials/stackby/#prerequisites","text":"<p>Create a Stackby account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/stackby/#using-api-key","text":"<ol> <li>Open your Stackby dashboard.</li> <li>Click on the user icon on the top right and select 'Account' from the dropdown list.</li> <li>Under the API section, click on the Create API key button.</li> <li>Copy the displayed API key.</li> <li>Enter a name for your credentials in the Credentials Name field in the 'Stackby API' credentials in Workflow\u00b2.</li> <li>Paste the API key in the API Key field in the 'Stackby API' credentials in Workflow\u00b2.</li> <li>Click on the Create button to create the credentials.</li> </ol> <p>The following video demonstrates the steps mentioned above.</p>","title":"Using API Key"},{"location":"workflow/integrations/credentials/storyblok/","text":"<p>You can use these credentials to authenticate the following nodes with Storyblok. - Storyblok</p>","title":"Storyblok"},{"location":"workflow/integrations/credentials/storyblok/#prerequisites","text":"<p>Create a Storyblok account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/storyblok/#using-api-key-to-access-the-content-api","text":"<ol> <li>Access the spaces page.</li> <li>Select a space you want to use from the left sidebar.</li> <li>Click on Settings in the left sidebar.</li> <li>Select the API-Keys tab.</li> <li>Select an access level from the Access Level dropdown list.</li> <li>Click on the Create Token button.</li> <li>Use this API Key with your Storyblok Content API credentials in Workflow\u00b2.</li> </ol> <p></p>","title":"Using API Key to access the Content API"},{"location":"workflow/integrations/credentials/storyblok/#using-api-key-to-access-the-management-api","text":"<ol> <li>Access the My Account page.</li> <li>Scroll down to the Personal access tokens section.</li> <li>Click on the Generate new Token button.</li> <li>Use this API Key with your Storyblok Management API credentials in Workflow\u00b2.</li> </ol> <p></p>","title":"Using API Key to access the Management API"},{"location":"workflow/integrations/credentials/storyblok/#further-reference","text":"<ul> <li>Content API Documentation</li> <li>Management API Documentation</li> </ul>","title":"Further Reference"},{"location":"workflow/integrations/credentials/strapi/","tags":["Workflow\u00b2","Strapi","Prerequisites Strapi","Using API"],"text":"<p>You can use these credentials to authenticate the following nodes with Strapi. - Strapi</p>","title":"Strapi"},{"location":"workflow/integrations/credentials/strapi/#prerequisites","tags":["Workflow\u00b2","Strapi","Prerequisites Strapi","Using API"],"text":"<p>Install Strapi on your server.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/strapi/#using-api","tags":["Workflow\u00b2","Strapi","Prerequisites Strapi","Using API"],"text":"<ol> <li>Access your Strapi Admin dashboard.</li> <li>Click on Settings in the left sidebar.</li> <li>Click on Roles under the USERS &amp; PERMISSIONS PLUGIN section.</li> <li>Click on the pencil icon next to the role you want to edit.</li> <li>In the Permissions section, give the required permissions.</li> <li>Click on the Save button.</li> <li>Click on Users in the left sidebar.</li> <li>Click on the + Add New user button.</li> <li>Enter the required information.</li> <li>Click on ON for the Confirmed field.</li> <li>Select the role that you set the permissions for in the previous steps from the Role dropdown list.</li> <li>Click on the Save button.</li> <li>Use this email, password, and the URL of your Strapi instance with your Strapi node credentials in Workflow\u00b2.</li> </ol> <p></p>","title":"Using API"},{"location":"workflow/integrations/credentials/strava/","text":"<p>You can use these credentials to authenticate the following nodes with Strava. - Strava - Strava Trigger</p>","title":"Strava"},{"location":"workflow/integrations/credentials/strava/#prerequisites","text":"<p>Create a Strava account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/strava/#using-oauth","text":"<ol> <li>Access the My API Application page.</li> <li>Enter the application name in the Application Name field.</li> <li>Enter the website URL in the Website field.</li> <li>Copy the string of characters between <code>https://</code> (or <code>http://</code>) and <code>/oauth2/callback</code> (or <code>/rest/oauth2-credential/callback</code>) from 'OAuth Callback URL' in Workflow\u00b2. Paste it in the Authorization Callback Domain in Strava.</li> <li>Read 'Strava's API Agreement', and if you agree, check the checkbox.</li> <li>Click on the Create button.</li> <li>Click on App Icon and select an image from the browser window.</li> <li>Click on the Save button.</li> <li>Use this Client ID and Client Secret with your Strava node credentials in Workflow\u00b2.</li> </ol> <p></p>","title":"Using OAuth"},{"location":"workflow/integrations/credentials/stripe/","text":"<p>You can use these credentials to authenticate the following nodes with Stripe. - Stripe Trigger - Stripe</p>","title":"Stripe"},{"location":"workflow/integrations/credentials/stripe/#prerequisites","text":"<p>Create a Stripe account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/stripe/#using-access-token","text":"<ol> <li>Access your Stripe dashboard.</li> <li>Click on the developers button in the left panel.</li> <li>Click on API keys.</li> <li>Use the secret key with your Stripe node credentials in Workflow\u00b2.</li> </ol> <p></p>","title":"Using Access Token"},{"location":"workflow/integrations/credentials/sugarcrm/","text":"<p>You can use these credentials to authenticate the following nodes with SugarCRM. - SugarCRM</p>","title":"SugarCRM"},{"location":"workflow/integrations/credentials/sugarcrm/#prerequisites","text":"<p>Create a SugarCRM account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/sugarcrm/#using-your-login","text":"<p>All you need to do is enter your username, password and your base sugarcrm URL. The node will take care of the rest.</p>","title":"Using your login"},{"location":"workflow/integrations/credentials/supabase/","text":"<p>You can use these credentials to authenticate the following nodes with Supabase. - Supabase</p>","title":"Supabase"},{"location":"workflow/integrations/credentials/supabase/#prerequisites","text":"<p>Create a Supabase account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/supabase/#using-access-token","text":"<ol> <li>In the Supabase UI, navigate to the project you would like to connect to.</li> <li>Navigate to Settings page (through the gears button in the left sidebar).</li> <li>Under Project settings, click on API.</li> <li>Copy the value from the Supabase <code>URL</code> field into the <code>Host</code> field of your Supabase credentials in Workflow\u00b2.</li> <li>Copy the value from the Supabase <code>service_role secret</code> field into the <code>Service Role Secret</code> field of your Supabase credentials in Workflow\u00b2.</li> <li>Click <code>Save</code> on the Doc\u00b2 credentials screen.</li> </ol>","title":"Using Access Token"},{"location":"workflow/integrations/credentials/surveyMonkey/","text":"<p>You can use these credentials to authenticate the following nodes with SurveyMonkey. - SurveyMonkey Trigger</p>","title":"SurveyMonkey"},{"location":"workflow/integrations/credentials/surveyMonkey/#prerequisites","text":"<p>Create a SurveyMonkey account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/surveyMonkey/#using-oauth","text":"<ol> <li>Access your SurveyMonkey dashboard.</li> <li>Click on the context menu in the top right.</li> <li>Click on Integrations &amp; Plug-ins</li> <li>Click on Develop.</li> <li>Click on My Apps in the top panel.</li> <li>Create a new app, fill in details.</li> <li>Once created, go to settings.</li> <li>Use the client ID and client secret with your SurveyMonkey OAuth API credentials in Workflow\u00b2.</li> </ol>","title":"Using OAuth"},{"location":"workflow/integrations/credentials/surveyMonkey/#using-access-token","text":"<ol> <li>Access your SurveyMonkey dashboard.</li> <li>Click on the context menu in the top right.</li> <li>Click on Integrations &amp; Plug-ins</li> <li>Click on Develop.</li> <li>Click on My Apps in the top panel.</li> <li>Create a new app, fill in details.</li> <li>Once created, go to settings.</li> <li>Use the access token, client ID and client secret with your SurveyMonkey node credentials in Workflow\u00b2.</li> </ol> <p></p>","title":"Using Access Token"},{"location":"workflow/integrations/credentials/syncroMsp/","text":"<p>You can use these credentials to authenticate the following nodes with SyncroMSP. - SyncroMSP</p>","title":"SyncroMSP"},{"location":"workflow/integrations/credentials/syncroMsp/#prerequisites","text":"<p>Create a SyncroMSP account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/syncroMsp/#using-access-token","text":"<ol> <li>With administrator privileges, navigate to the API Tokens page in SyncroMSP.</li> <li>Click on the <code>+ New Token</code> button.</li> <li>On the <code>Custom Permissions</code> tab, enter a name for your new token and adjust the permissions to match your requirements.</li> <li>Click <code>Create API Token</code> once done.</li> <li>Copy the key shown by SyncroMSP into the <code>API Key</code> field of your SyncroMSP credentials in Workflow\u00b2.</li> <li>Enter your SyncroMSP subdomain (the part between <code>https://</code> and <code>.syncromsp.com</code>) in the <code>Subdomain</code> field of your SyncroMSP credentials in Workflow\u00b2.</li> <li>Click <code>Save</code> on the Doc\u00b2 credentials screen.</li> </ol>","title":"Using Access Token"},{"location":"workflow/integrations/credentials/taiga/","text":"<p>You can use these credentials to authenticate the following nodes with Taiga. - Taiga - Taiga Trigger</p>","title":"Taiga"},{"location":"workflow/integrations/credentials/taiga/#prerequisites","text":"<p>Create a Taiga account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/taiga/#using-username-and-password","text":"<p>Use your username and password with the Taiga node credentials in Workflow\u00b2.</p> <p>Note: For self-hosted instances, you will have to additionally use your Taiga URL with the Taiga node credentials in Workflow\u00b2.</p>","title":"Using Username and Password"},{"location":"workflow/integrations/credentials/tapfiliate/","text":"<p>You can use these credentials to authenticate the following nodes with Tapfiliate. - Tapfiliate</p>","title":"Tapfiliate"},{"location":"workflow/integrations/credentials/tapfiliate/#prerequisites","text":"<p>Create a Tapfiliate account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/tapfiliate/#using-api-key","text":"<ol> <li>Open your Tapfiliate dashboard page.</li> <li>Click on your avatar on the bottom left of the window.</li> <li>Select 'Profile Settings' from the dropdown list.</li> <li>Scroll down to the API Key section.</li> <li>Copy the displayed API Key.</li> <li>Enter a name for your credentials in the Credentials Name field in the 'Tapfiliate API' credentials in Workflow\u00b2.</li> <li>Paste the API key in the API Key field in the 'Tapfiliate API' credentials in Workflow\u00b2.</li> <li>Click the Create button to create your credentials in Workflow\u00b2.</li> </ol> <p>The following video demonstrates the steps mentioned above.</p>","title":"Using API Key"},{"location":"workflow/integrations/credentials/telegram/","text":"<p>You can use these credentials to authenticate the following nodes with Telegram. - Telegram - Telegram Trigger</p>","title":"Telegram"},{"location":"workflow/integrations/credentials/telegram/#prerequisites","text":"<p>Create a Telegram account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/telegram/#using-bot-access-token","text":"<ol> <li>Start a chat with the Botfather.</li> <li>Enter <code>/newbot</code> and reply with your new bot's display name and username.</li> <li>Copy the bot token and use it in the Telegram node credentials in Workflow\u00b2.</li> </ol>","title":"Using Bot Access Token"},{"location":"workflow/integrations/credentials/theHive/","text":"<p>You can use these credentials to authenticate the following nodes with The Hive. - TheHive</p>","title":"TheHive"},{"location":"workflow/integrations/credentials/theHive/#prerequisites","text":"<p>Install TheHive on your server.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/theHive/#using-api-key","text":"<ol> <li>Access your TheHive dashboard.</li> <li>Click on the Organization tab in the top right.</li> <li>Click on the Create API Key button for the user you want to generate the API Key for.</li> <li>Use this API Key and your instance URL with your TheHive node credentials in Workflow\u00b2.</li> </ol> <p></p>","title":"Using API Key"},{"location":"workflow/integrations/credentials/timescaleDb/","text":"<p>You can use these credentials to authenticate the following nodes with TimescaleDB. - TimescaleDB</p>","title":"TimescaleDB"},{"location":"workflow/integrations/credentials/timescaleDb/#prerequisites","text":"<p>An available instance of TimescaleDB.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/timescaleDb/#using-database-connection","text":"<ol> <li>Retrieve your TimescaleDB credentials and connection parameters.</li> <li>Use the credentials and connection parameters with your TimescaleDB node credentials in Workflow\u00b2.</li> </ol>","title":"Using Database Connection"},{"location":"workflow/integrations/credentials/todoist/","text":"<p>You can use these credentials to authenticate the following nodes with Todoist. - Todoist</p>","title":"Todoist"},{"location":"workflow/integrations/credentials/todoist/#prerequisites","text":"<p>Create a Todoist account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/todoist/#using-oauth","text":"<p>\u26c5\ufe0f Note fordoc2app.cloudintegration.eu users</p> <p>You'll only need to enter the Credentials Name and click on the circle button in the OAuth section to connect your Todoist account to Workflow\u00b2.</p>  <ol> <li>Access your Todoist App Management Console</li> <li>Enter a name in the App display name field and click on the Create app button.</li> <li>Copy the OAuth Callback URL from Doc\u00b2 and paste it in the OAuth redirect URL field.</li> <li>Click on the Save settings button.</li> <li>Use the provided Client ID and Client secret with your Todoist OAuth2 API credentials in Workflow\u00b2.</li> <li>Click on the circle button in the OAuth section to connect a Todoist account to Workflow\u00b2.</li> <li>Click the Save button to save your credentials in Workflow\u00b2.</li> </ol> <p></p>","title":"Using OAuth"},{"location":"workflow/integrations/credentials/todoist/#using-access-token","text":"<ol> <li>Access your Todoist dashboard.</li> <li>Click on the gear icon in the top right.</li> <li>Select Integrations on the left panel.</li> <li>Scroll down to see your API token.</li> <li>Use the API token with your Todoist node credentials in Workflow\u00b2.</li> </ol> <p></p>","title":"Using Access Token"},{"location":"workflow/integrations/credentials/toggl/","text":"<p>You can use these credentials to authenticate the following nodes with Toggl. - Toggl Trigger</p>","title":"Toggl"},{"location":"workflow/integrations/credentials/toggl/#prerequisites","text":"<p>Create a Toggl account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/toggl/#using-username-and-password","text":"<ol> <li>Use your Toggle username and password with your node credentials in Workflow\u00b2.</li> </ol>","title":"Using Username and Password"},{"location":"workflow/integrations/credentials/travisCi/","text":"<p>You can use these credentials to authenticate the following nodes with Travis CI. - Travis CI</p>","title":"Travis CI"},{"location":"workflow/integrations/credentials/travisCi/#prerequisites","text":"<p>Create a Travis CI account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/travisCi/#using-access-token","text":"<ol> <li>Open your Travis CI dashboard.</li> <li>Click on the user icon in the top right.</li> <li>Click on 'Settings' in the dropdown list.</li> <li>Click on the Settings tab on the page.</li> <li>Copy the Token from the API authentication section and use it with your Travis API credentials in Workflow\u00b2.</li> <li>Click on the Save button to save your credentials.</li> </ol> <p></p>","title":"Using Access Token"},{"location":"workflow/integrations/credentials/trello/","text":"<p>You can use these credentials to authenticate the following nodes with Trello. - Trello - Trello Trigger</p>","title":"Trello"},{"location":"workflow/integrations/credentials/trello/#prerequisites","text":"<p>Create a Trello account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/trello/#using-access-token","text":"<ol> <li>Access Trello API Key  portal.</li> <li>Gather your API key at the top.</li> <li>Scroll down and you will find your OAuth secret.</li> <li>Click on \"generate a Token\" where you will find your token.</li> <li>Use the API token, OAuth secret and API key with your node credentials in Workflow\u00b2.</li> </ol> <p></p>","title":"Using Access Token"},{"location":"workflow/integrations/credentials/twake/","text":"<p>You can use these credentials to authenticate the following nodes with Twake. - Twake</p>","title":"Twake"},{"location":"workflow/integrations/credentials/twake/#prerequisites","text":"<p>Create a Twake account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/twake/#using-access-token","text":"<ol> <li>Access your Twake workspace.</li> <li>Click on Main in the top left corner.</li> <li>Select 'Workspace settings' from the dropdown list.</li> <li>Select Applications and connectors.</li> <li>Click on the Search applications... button.</li> <li>Search for <code>n8n</code> and click on the Display button.</li> <li>Click on Install and select Confirm.</li> <li>Click on Configure and copy the Workspace Key.</li> <li>Use the Workspace Key with your Twake node credentials in Workflow\u00b2.</li> </ol> <p></p>","title":"Using Access Token"},{"location":"workflow/integrations/credentials/twilio/","text":"<p>You can use these credentials to authenticate the following nodes with Twilio. - Twilio</p>","title":"Twilio"},{"location":"workflow/integrations/credentials/twilio/#prerequisites","text":"<p>Create a Twilio account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/twilio/#using-auth-token","text":"<ol> <li>Open your Twilio project dashboard.</li> <li>Copy the displayed Account SID.</li> <li>Enter a name for your credentials in the Credentials Name field in the 'Twilio API' credentials in Workflow\u00b2.</li> <li>Paste the Account SID in the Account SID field in the 'Twilio API' credentials in Workflow\u00b2.</li> <li>Copy the Auth Token from the Twilio project dashboard.</li> <li>Paste the Auth Token in the Auth Token field in the 'Twilio API' credentials in Workflow\u00b2.</li> <li>Click on the Create button to create the credentials.</li> </ol> <p>The following video demonstrates the steps mentioned above.</p>","title":"Using Auth Token"},{"location":"workflow/integrations/credentials/twilio/#using-api-key","text":"<ol> <li>Open your Twilio project dashboard.</li> <li>Copy the displayed Account SID.</li> <li>Enter a name for your credentials in the Credentials Name field in the 'Twilio API' credentials in Workflow\u00b2.</li> <li>Select 'API Key' from the Auth Type dropdown list.</li> <li>Paste the Account SID in the Account SID field in the 'Twilio API' credentials in Workflow\u00b2.</li> <li>Click on Settings in the left-sidebar.</li> <li>Select API Keys under the Settings.</li> <li>Click on the Create new API Key button.</li> <li>Enter a name in the Friendly Name field.</li> <li>Click on the Create API Key button.</li> <li>Copy the displayed SID.</li> <li>Paste the SID in the API Key SID field in the 'Twilio API' credentials in Workflow\u00b2.</li> <li>Copy the Secret from the Twilio dashboard.</li> <li>Paste the Secret in the API Key Secret field in the 'Twilio API' credentials in Workflow\u00b2.</li> <li>Click on the Create button to create the credentials.</li> </ol> <p>The following video demonstrates the steps mentioned above.</p>","title":"Using API Key"},{"location":"workflow/integrations/credentials/twist/","text":"<p>You can use these credentials to authenticate the following nodes with Twist. - Twist</p>","title":"Twist"},{"location":"workflow/integrations/credentials/twist/#prerequisites","text":"<p>Create a Twist account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/twist/#using-oauth","text":"<p> Callback URL with Twist</p> <p>Note: The Redirect URL should be a URL in your domain. For example, <code>https://mytemplatemaker.example.com/gr_callback</code>. Twist doesn't accept the localhost callback URL. Refer to the FAQs to learn to configure the credentials for the local environment.</p>  <ol> <li>Access your Twist workspace.</li> <li>Click on your avatar in the top right corner.</li> <li>Select 'Add integrations...' from the dropdown list.</li> <li>Click on Build on the top.</li> <li>Click on the Add a new integration button.</li> <li>Enter a name in the Integration name field.</li> <li>Enter a description in the Description field.</li> <li>Select 'General integration' from the Integration type dropdown list.</li> <li>Click on the Create my integration button.</li> <li>Click on OAuth Authentication from the left sidebar.</li> <li>Copy the 'OAuth Callback URL' provided in the Twist OAuth2 API credentials in Doc\u00b2 and paste it in the OAuth 2 redirect URL field on your Twist integration page.</li> <li>Click on the Update integration button.</li> <li>Use the Client ID and Client Secret with your Twist node credentials in Workflow\u00b2.</li> <li>Click on the circle button in the OAuth section to connect a Twist account to Workflow\u00b2.</li> <li>Click the Save button to save your credentials in Workflow\u00b2.</li> </ol> <p></p>","title":"Using OAuth"},{"location":"workflow/integrations/credentials/twist/#faqs","text":"","title":"FAQs"},{"location":"workflow/integrations/credentials/twist/#how-to-configure-the-oauth-credentials-for-the-local-environment","text":"<p>Twist doesn't accept the localhost callback  URL. However, you can follow the steps mentioned below to configure the OAuth credentials for the local environment: 1. We will use ngrok to expose the local server running on port <code>5678</code> to the internet. In your terminal, run the following command: <pre><code>ngrok http 5678\n</code></pre>  2. Run the following command in a new terminal. Replace <code>&lt;YOUR-NGROK-URL&gt;</code> with the URL that you get from the previous step. <pre><code>export WEBHOOK_URL=&lt;YOUR-NGROK-URL&gt;\n</code></pre>  3. Start your Doc\u00b2 instance. 4. Follow the instructions mentioned in the Using OAuth section to configure your credentials.</p>","title":"How to configure the OAuth credentials for the local environment?"},{"location":"workflow/integrations/credentials/twitter/","tags":["Workflow\u00b2","Twitter"],"text":"<p>You can use these credentials to authenticate the following nodes with Twitter. - Twitter</p>","title":"Twitter"},{"location":"workflow/integrations/credentials/twitter/#prerequisites","tags":["Workflow\u00b2","Twitter"],"text":"<p>Create a Twitter developer account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/twitter/#using-oauth","tags":["Workflow\u00b2","Twitter"],"text":"<ol> <li>Access the Twitter Developer portal.</li> <li>Fill out the questionnaire to gain essential access and click Next once done. </li> <li>Confirm the Developer agreement by checking the box and clicking Submit once done. </li> <li>Twitter will now send you a confirmation email. Click the Confirm your email button in the email. </li> <li>After confirming your email, you are redirected to the #Welcome to the Twitter Developer Platform page. Enter a name for your Twitter application and click the Get keys button.</li> <li>Copy the API Key, API Key Secret shown on the next page. </li> <li>Click the Skip to dashboard link at the bottom of the page and click the Yes, I saved them button.</li> <li>Click the Gear button next to your newly created app to open it's App settings. </li> <li>In the Authentication settings sections, click Edit.</li> <li>Turn on the Enable 3-legged OAuth switch and paste the URL shown in the OAuth Redirect URL of the Doc\u00b2 credentials screen into the Callback URLs field of your Twitter apps authentication settings.</li> <li>Enter a valid Website URL in the respective field (for example https://n8n.io). </li> <li>Save your input by clicking the Save button at the bottom of the page.</li> <li>Under App permissions, click Edit and choose the appropriate permissions for your app (pick Read and write and Direct message if you want to use all functions of the Twitter Doc\u00b2 in n8n) and click Save to confirm.</li> <li>In the sidebar on the left, click on the Project your app has been created in (usually Project 1) and then on the Apply for Elevated button.</li> <li>Fill out the questionnaire and confirm the inputs on each questionnaire page with a click on Next (Submit on the final page). </li> <li>Once you receive confirmation that your application has been approved, you're ready to use the Doc\u00b2 Twitter node.</li> <li>In the Doc\u00b2 credentials screen, paste your API Key from steps 6 above into the Consumer Key field, and your API Key Secret into the Consumer Secret field.</li> <li>Click Connect my account and confirm the connection by clicking Authorize app.</li> </ol>","title":"Using OAuth"},{"location":"workflow/integrations/credentials/twitter/#further-reference","tags":["Workflow\u00b2","Twitter"],"text":"<ul> <li>Application-only Authentication</li> </ul>","title":"Further Reference"},{"location":"workflow/integrations/credentials/typeform/","tags":["Workflow\u00b2","Typeform"],"text":"<p>You can use these credentials to authenticate the following nodes with Typeform. - Typeform Trigger</p>","title":"Typeform"},{"location":"workflow/integrations/credentials/typeform/#prerequisites","tags":["Workflow\u00b2","Typeform"],"text":"<p>Create a Typeform account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/typeform/#using-oauth","tags":["Workflow\u00b2","Typeform"],"text":"<ol> <li>Access your Typeform dashboard.</li> <li>Go to your user profile in the top right.</li> <li>Click on 'Settings' and then click on 'Developer apps' in the sidebar.</li> <li>Click on the Register a new app button.</li> <li>Copy the 'OAuth Callback URL' provided in the Typeform OAuth2 API credentials in Doc\u00b2 and paste it in the Redirect URI(s) section in the Typeform app registration page.</li> <li>Enter any other information necessary and click on the Register app button.</li> <li>Use the displayed Client ID and Client secret with your Typeform OAuth2 API credentials in Workflow\u00b2.</li> <li>Click on the circle button in the OAuth section to connect a Typeform account to Workflow\u00b2.</li> <li>Click the Save button to save your credentials.</li> </ol> <p></p>","title":"Using OAuth"},{"location":"workflow/integrations/credentials/typeform/#using-access-token","tags":["Workflow\u00b2","Typeform"],"text":"<ol> <li>Open the Typeform dashboard.</li> <li>Click on your avatar on the top right and select 'Settings'.</li> <li>Click on Personal tokens under the Profile section in the sidebar.</li> <li>Click on the Generate a new token button.</li> <li>Enter a name in the Token name field.</li> <li>Click on the Generate token button.</li> <li>Click on the Copy button to copy the access token.</li> <li>Enter a name for your credentials in the Credentials Name field in the 'Typeform API' credentials in Workflow\u00b2.</li> <li>Paste the access token in the Access Token field in the 'Typeform API' credentials in Workflow\u00b2.</li> <li>Click the Create button to save your credentials in Workflow\u00b2.</li> </ol> <p>The following video demonstrates the steps mentioned above.</p>","title":"Using Access Token"},{"location":"workflow/integrations/credentials/uProc/","tags":["Workflow\u00b2","uProc"],"text":"<p>You can use these credentials to authenticate the following nodes with uProc. - uProc</p>","title":"uProc"},{"location":"workflow/integrations/credentials/uProc/#prerequisites","tags":["Workflow\u00b2","uProc"],"text":"<p>Create a uProc account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/uProc/#using-api-key","tags":["Workflow\u00b2","uProc"],"text":"<ol> <li>Access the uProc dashboard.</li> <li>Click on the Settings tab on the left sidebar.</li> <li>Click on the Integrations tab.</li> <li>Use the displayed Email and API Key (real) with your uProc node credentials in Workflow\u00b2.</li> </ol> <p></p>","title":"Using API Key"},{"location":"workflow/integrations/credentials/unleashedSoftware/","text":"<p>You can use these credentials to authenticate the following nodes with Unleashed Software. - Unleashed Software</p>","title":"Unleashed Software"},{"location":"workflow/integrations/credentials/unleashedSoftware/#prerequisites","text":"<p>Create an Unleashed Software account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/unleashedSoftware/#using-access-token","text":"<ol> <li>Access your Unleashed Software dashboard.</li> <li>Click on Integration in the left sidebar and select Unleashed API Access.</li> <li>Use the displayed API Id and API Key with your Unleashed API credentials in Workflow\u00b2.</li> <li>Click on the Save button to save your credentials.</li> </ol> <p></p>","title":"Using Access Token"},{"location":"workflow/integrations/credentials/uplead/","tags":["Workflow\u00b2","UpLead"],"text":"<p>You can use these credentials to authenticate the following nodes with UpLead. - UpLead</p>","title":"UpLead"},{"location":"workflow/integrations/credentials/uplead/#prerequisites","tags":["Workflow\u00b2","UpLead"],"text":"<p>Create an UpLead account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/uplead/#using-access-token","tags":["Workflow\u00b2","UpLead"],"text":"<ol> <li>Access your UpLead dashboard.</li> <li>Click on your name in the bottom left.</li> <li>Click on Profile.</li> <li>Scroll down and click on the Generate New API Key.</li> <li>Use the API Key with your UpLead node credentials in Workflow\u00b2.</li> </ol> <p></p>","title":"Using Access Token"},{"location":"workflow/integrations/credentials/uptimeRobot/","tags":["Workflow\u00b2","UptimeRobot"],"text":"<p>You can use these credentials to authenticate the following nodes with UptimeRobot. - UptimeRobot</p>","title":"UptimeRobot"},{"location":"workflow/integrations/credentials/uptimeRobot/#prerequisites","tags":["Workflow\u00b2","UptimeRobot"],"text":"<p>Create an UptimeRobot account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/uptimeRobot/#using-api-key","tags":["Workflow\u00b2","UptimeRobot"],"text":"<ol> <li>Open your UptimeRobot dashboard.</li> <li>Click on My Settings in the navigation menu.</li> <li>Scroll down to the API Settings at the bottom.</li> <li>Click on Create the main API key under the Main API Key section.</li> <li>Click on Create the main API key button.</li> <li>Copy the displayed API key.</li> <li>Enter the name for your credentials in the Credentials Name field in the 'UptimeRobot API' credentials in Workflow\u00b2.</li> <li>Paste the API key in the API Key field in the 'UptimeRobot API' credentials in Workflow\u00b2.</li> <li>Click on the Create button to create your credentials.</li> </ol> <p>The following video demonstrates the steps mentioned above.</p>","title":"Using API Key"},{"location":"workflow/integrations/credentials/urlScanIo/","tags":["Workflow\u00b2","urlscan.io"],"text":"<p>You can use these credentials to authenticate the following nodes with UptimeRobot. - urlscan.io</p>","title":"urlscan.io"},{"location":"workflow/integrations/credentials/urlScanIo/#prerequisites","tags":["Workflow\u00b2","urlscan.io"],"text":"<p>Create an urlscan.io account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/urlScanIo/#using-api-key","tags":["Workflow\u00b2","urlscan.io"],"text":"<p>From urlscan.io:</p> <ol> <li>Navigate to your Settings&amp;API page.</li> <li>Under the API Keys section click + Create new API key.</li> <li>Enter a description for your new API key as prompted and click + Create API key.</li> <li>Copy the new API key for use in Workflow\u00b2.</li> </ol> <p>From n8n:</p> <ol> <li>Enter the API Key obtained above.</li> <li>Click Save to create your credentials.</li> </ol>","title":"Using API key"},{"location":"workflow/integrations/credentials/vero/","tags":["Workflow\u00b2","Vero"],"text":"<p>You can use these credentials to authenticate the following nodes with Vero. - Vero</p>","title":"Vero"},{"location":"workflow/integrations/credentials/vero/#prerequisites","tags":["Workflow\u00b2","Vero"],"text":"<p>Create a Vero account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/vero/#using-access-token","tags":["Workflow\u00b2","Vero"],"text":"<ol> <li>Access your Vero dashboard.</li> <li>Click on the cog icon in the bottom left.</li> <li>Scroll down to see your Auth token.</li> <li>Use the auth token with your Vero node credentials in Workflow\u00b2.</li> </ol> <p></p>","title":"Using Access Token"},{"location":"workflow/integrations/credentials/vonage/","tags":["Workflow\u00b2","Vonage"],"text":"<p>You can use these credentials to authenticate the following nodes with Vonage. - Vonage</p>","title":"Vonage"},{"location":"workflow/integrations/credentials/vonage/#prerequisites","tags":["Workflow\u00b2","Vonage"],"text":"<p>Create a Vonage account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/vonage/#using-api-key","tags":["Workflow\u00b2","Vonage"],"text":"<ol> <li>Access the Vonage API dashboard.</li> <li>Copy the API key and the API Secret from the dashboard.</li> <li>Use this API Key and API Secret with your Vonage node credentials in Workflow\u00b2.</li> </ol> <p></p>","title":"Using API Key"},{"location":"workflow/integrations/credentials/webflow/","tags":["Workflow\u00b2","Webflow"],"text":"<p>You can use these credentials to authenticate the following nodes with Webflow. - Webflow - Webflow Trigger</p>","title":"Webflow"},{"location":"workflow/integrations/credentials/webflow/#prerequisites","tags":["Workflow\u00b2","Webflow"],"text":"<p>Create a Webflow account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/webflow/#using-oauth","tags":["Workflow\u00b2","Webflow"],"text":"<p>\u26c5\ufe0f Note fordoc2app.cloudintegration.eu users</p> <p>You'll only need to enter the Credentials Name and click on the circle button in the OAuth section to connect your Webflow account to Workflow\u00b2.</p>  <ol> <li>Access your Webflow dashboard.</li> <li>Click on 'Account' on the top right corner.</li> <li>Select 'Account Settings' from the dropdown list.</li> <li>Click on the 'Integrations' tab.</li> <li>Click on the + Register New Application button in the 'My Applications' section.</li> <li>Enter the name of your application in the Application Name field.</li> <li>Enter the description of your application in the Application Description field.</li> <li>Copy the 'OAuth Callback URL' provided in the 'Webflow OAuth2 API' credentials in Doc\u00b2 and paste it in the Redirect URI field in the Webflow integrations page.</li> <li>Enter the homepage URL of your application in the Application Homepage field.</li> <li>Click on the Create button.</li> <li>Click on the View Details button to get the Client Id and Client Secret.</li> <li>Use these credentials with your 'Webflow OAuth2 API' credentials in Workflow\u00b2.</li> <li>Click on the circle button in the OAuth section of Doc\u00b2 to connect a Webflow account to Workflow\u00b2.</li> <li>Click on the Save button to save your credentials.</li> </ol> <p></p>","title":"Using OAuth"},{"location":"workflow/integrations/credentials/webflow/#using-access-token","tags":["Workflow\u00b2","Webflow"],"text":"<ol> <li>Access your Webflow dashboard.</li> <li>Click on your desired project.</li> <li>Click on the W icon in the top left.</li> <li>Click on Project Settings.</li> <li>Click on the Integrations tab.</li> <li>Scroll down and click generate API token.</li> <li>Use the api token with your Webflow node credentials in Workflow\u00b2.</li> </ol> <p></p>","title":"Using Access Token"},{"location":"workflow/integrations/credentials/wekan/","tags":["Workflow\u00b2","Wekan"],"text":"<p>You can use these credentials to authenticate the following nodes with Wekan. - Wekan</p>","title":"Wekan"},{"location":"workflow/integrations/credentials/wekan/#prerequisites","tags":["Workflow\u00b2","Wekan"],"text":"<p>Install Wekan on your server.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/wekan/#using-api-key","tags":["Workflow\u00b2","Wekan"],"text":"<ol> <li>Use the Wekan username, password, and URL with your Wekan node credentials in Workflow\u00b2.</li> </ol>","title":"Using API Key"},{"location":"workflow/integrations/credentials/wise/","tags":["Workflow\u00b2","Wise"],"text":"<p>You can use these credentials to authenticate the following nodes with Wise. - Wise - Wise Trigger</p>","title":"Wise"},{"location":"workflow/integrations/credentials/wise/#prerequisites","tags":["Workflow\u00b2","Wise"],"text":"<p>Create a Wise account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/wise/#using-api-token","tags":["Workflow\u00b2","Wise"],"text":"<ol> <li>Open your Wise dashboard.</li> <li>Click on the username on the top right and select 'Settings' from the dropdown list.</li> <li>Scroll down to the bottom and click on API tokens.</li> <li>Click on the Add new token button.</li> <li>Enter a name in the Name or description field.</li> <li>Click on the Create token button.</li> <li>Scroll down to the bottom and click on API tokens.</li> <li>Click on Reveal key to reveal the newly generated API key.</li> <li>Enter your Wise account password in the Please enter your password field.</li> <li>Copy the displayed API key.</li> <li>Enter the name for your credentials in the Credentials Name field in the 'Wise API' credentials in Workflow\u00b2.</li> <li>Paste the API key in the API Token field in the 'Wise API' credentials in Workflow\u00b2.</li> <li>If you're using a Wise sandbox account, select 'Test' from the Environment dropdown list in the 'Wise API' credentials in Workflow\u00b2.</li> <li>Click on the Create button to create your credentials.</li> </ol> <p>The following video demonstrates the steps mentioned above.</p>","title":"Using API Token"},{"location":"workflow/integrations/credentials/wooCommerce/","text":"<p>You can use these credentials to authenticate the following nodes with WooCommerce. - WooCommerce - WooCommerce Trigger</p>","title":"WooCommerce"},{"location":"workflow/integrations/credentials/wooCommerce/#prerequisites","text":"<p>Install the WooCommerce plugin on your WordPress website.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/wooCommerce/#using-access-token","text":"<ol> <li>Access your WordPress dashboard.</li> <li>Select 'Settings' from the WooCommerce dropdown list.</li> <li>Click on the Advanced tab.</li> <li>Click on REST API.</li> <li>Click on the Create an API Key button.</li> <li>Enter the necessary details.</li> <li>Select 'Read/Write' from the Permissions dropdown list.</li> <li>Click on the Generate API Key button.</li> <li>Use your WooCommerce website URL, Consumer key &amp; Consumer secret with your WooCommerce node credentials in Workflow\u00b2.</li> </ol> <p></p>","title":"Using Access Token"},{"location":"workflow/integrations/credentials/wordpress/","text":"<p>You can use these credentials to authenticate the following nodes with WordPress. - WordPress</p>","title":"WordPress"},{"location":"workflow/integrations/credentials/wordpress/#prerequisites","text":"<ul> <li>Create a WordPress account or deploy WordPress on a server.</li> </ul>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/wordpress/#using-username-and-password","text":"<ol> <li>Log in to your WordPress dashboard.</li> <li>Click on Profile in the left side menu, and scroll down to the Application Password section.</li> <li>Enter an application name in the New Application Password Name field.</li> <li>Click on the Add New Application Password button.</li> <li>Copy the displayed application password.</li> <li>Enter your WordPress username in the Username field in the 'WordPress API' credentials in Workflow\u00b2.</li> <li>Paste the application password in the Password field in the 'WordPress API' credentials in Workflow\u00b2.</li> <li>Enter your WordPress website URL in the WordPress URL field in the 'WordPress API' credentials in Workflow\u00b2.</li> <li>Click on the Save button to save the credentials.</li> </ol>","title":"Using Username and Password"},{"location":"workflow/integrations/credentials/workable/","text":"<p>You can use these credentials to authenticate the following nodes:</p> <ul> <li>Workable Trigger</li> </ul>","title":"Workable"},{"location":"workflow/integrations/credentials/workable/#prerequisites","text":"<p>Create a Workable account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/workable/#using-api-key","text":"<ol> <li>Log in to Workable.</li> <li>Click on the avatar on the top-right and select Settings, then Integrations.</li> <li>Scroll down to Access Token and click Generate new token.</li> <li>Copy the newly generated token.</li> <li>Paste the token in the Access Token field of the Workable API credentials screen in Workflow\u00b2.</li> <li>Add the part between <code>https://</code> and <code>.workable.com</code> of your Workable subdomain in the Subdomain field of the Doc\u00b2 credentials screen.</li> <li>Click the Save button to save your credentials in Workflow\u00b2.</li> </ol>","title":"Using API Key"},{"location":"workflow/integrations/credentials/wufoo/","text":"<p>You can use these credentials to authenticate the following nodes with Wufoo. - Wufoo Trigger</p>","title":"Wufoo"},{"location":"workflow/integrations/credentials/wufoo/#prerequisites","text":"<p>Create a Wufoo account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/wufoo/#using-api-key","text":"<ol> <li>Access the Wufoo Form Manager.</li> <li>To the right of the form, click on ... and select API Information from the dropdown list.</li> <li>Copy the API Key.</li> <li>Click on Account  from the top right corner and select 'My Account' from the dropdown list.</li> <li>Copy the Subdomain.</li> <li>Use this API Key and Subdomain with your Wufoo Trigger node credentials in Workflow\u00b2.</li> </ol> <p></p>","title":"Using API Key"},{"location":"workflow/integrations/credentials/xero/","tags":["Workflow\u00b2","Xero","Prerequisites Xero","Using OAuth"],"text":"<p>You can use these credentials to authenticate the following nodes with Xero.</p> <ul> <li>Xero</li> </ul>","title":"Xero"},{"location":"workflow/integrations/credentials/xero/#prerequisites","tags":["Workflow\u00b2","Xero","Prerequisites Xero","Using OAuth"],"text":"<p>Create a Xero account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/xero/#using-oauth","tags":["Workflow\u00b2","Xero","Prerequisites Xero","Using OAuth"],"text":"<ol> <li>Go to the apps page in the Xero developer portal.</li> <li>Click on the New app button and fill in any necessary information.</li> <li>Copy the 'OAuth Callback URL' provided in the Xero OAuth API credentials in Doc\u00b2 and paste it in the OAuth 2.0 redirect URI field in the Xero app creation page.</li> <li>Click on the Create app button.</li> <li>Click on Generate a secret and use the 'Client id' and the 'Client secret' with your Xero OAuth API credentials in Workflow\u00b2.</li> <li>Click on the circle button in the OAuth section to connect a Xero account to Workflow\u00b2.</li> <li>Click the Save button to save your credentials.</li> </ol> <p></p>","title":"Using OAuth"},{"location":"workflow/integrations/credentials/yourls/","text":"<p>You can use these credentials to authenticate the following nodes with Yourls. - Yourls</p>","title":"Yourls"},{"location":"workflow/integrations/credentials/yourls/#prerequisites","text":"<p>Install Yourls on your server.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/yourls/#using-api","text":"<ol> <li>Access your Yourls Admin dashboard.</li> <li>Click on Tools on the top left.</li> <li>Scroll down to the Secure passwordless API call section.</li> <li>Copy the signature token.</li> <li>Use this Signature and the URL of your Yourls instance with your Yourls node credentials in Workflow\u00b2.</li> </ol> <p></p>","title":"Using API"},{"location":"workflow/integrations/credentials/zammad/","text":"<p>You can use these credentials to authenticate the following nodes with Zammad. - Zammad</p>","title":"Zammad"},{"location":"workflow/integrations/credentials/zammad/#prerequisites","text":"<ol> <li>Create a hosted Zammad account or set up your own Zammad instance.</li> <li>For the token-based authentication make sure <code>Token Access</code> is enabled in the API section of your Zammad instance's System settings.</li> </ol>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/zammad/#basic-auth","text":"<ol> <li>Enter the URL of your Zammad instance in the Base URL field of the Doc\u00b2 credentials screen.</li> <li>Enter your Zammad email om the Email field and your password in the Password field.</li> </ol>","title":"Basic Auth"},{"location":"workflow/integrations/credentials/zammad/#token-auth","text":"<ol> <li>Log in to your Zammad instance</li> <li>Click your avatar in the lower left corner, then click on Profile</li> <li>Select Token Access and click Create</li> <li>Enter a name for your new token and pick all required permissions. Click Create once done.</li> <li>Copy the token shown into the Access Token field in Workflow\u00b2. Enter the URL of your Zammad instance in the Base URL field.</li> </ol>","title":"Token Auth"},{"location":"workflow/integrations/credentials/zendesk/","text":"<p>You can use these credentials to authenticate the following nodes with Zendesk. - Zendesk - Zendesk Trigger</p>","title":"Zendesk"},{"location":"workflow/integrations/credentials/zendesk/#prerequisites","text":"<p>Create a Zendesk account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/zendesk/#using-oauth","text":"<ol> <li>Open your Zendesk dashboard.</li> <li>Click on the gear icon on the left.</li> <li>Click on 'API' under the CHANNELS section in the sidebar.</li> <li>Click on the OAuth Clients tab.</li> <li>Click on the Add OAuth client button.</li> <li>Enter the client name in the Client Name field.</li> <li>Enter a description in the Description field.</li> <li>Copy the 'OAuth Callback URL' provided in the 'Zendesk OAuth2 API' credentials in Workflow\u00b2.</li> <li>Paste it in the Redirect URLs field on the Zendesk API credentials page.</li> <li>Click on the Save button.</li> <li>Click on the OK button on the Please store the secret that will appear pop-up.</li> <li>Scroll down to the Secret section and copy the displayed Secret.</li> <li>Paste this secret in the Client Secret field in the 'Zendesk OAuth2 API' credentials in Workflow\u00b2.</li> <li>Copy the Unique identifier from the Zendesk API credentials page.</li> <li>Paste it in the Client ID field in the 'Zendesk OAuth2 API' credentials in Workflow\u00b2.</li> <li>Enter your Zendesk subdomain in the Subdomain field in the 'Zendesk OAuth2 API' credentials in Workflow\u00b2. Refer to the FAQs to learn more about subdomain.</li> <li>Enter the name for your credentials in the Credentials Name field in the 'Zendesk OAuth2 API' credentials in Workflow\u00b2.</li> <li>Click on the circle button in the OAuth section to connect a Zendesk account to Workflow\u00b2.</li> <li>Click on the Save button to save your credentials.</li> </ol> <p>The following video demonstrates the steps mentioned above.</p>","title":"Using OAuth"},{"location":"workflow/integrations/credentials/zendesk/#using-access-token","text":"<ol> <li>Open your Zendesk dashboard.</li> <li>Click on the gear icon on the left.</li> <li>Click on 'API' under the CHANNELS section in the sidebar.</li> <li>If Token access is disabled, click on the switch to toggle it to 'Enabled'.</li> <li>Click on the Add API token button.</li> <li>Enter a description in the API token description field.</li> <li>Click on the Copy button to copy the API token.</li> <li>Click on the Save button.</li> <li>Enter the name for your credentials in the Credentials Name field in the 'Zendesk API' credentials in Workflow\u00b2.</li> <li>Enter your Zendesk subdomain in the Subdomain field. Refer to the FAQs to learn more about subdomain.</li> <li>Enter your Zendesk email address in the Email field.</li> <li>Paste the API token in the API Token field.</li> <li>Click on the Save button to save your credentials.</li> </ol> <p>The following video demonstrates the steps mentioned above.</p>","title":"Using Access Token"},{"location":"workflow/integrations/credentials/zendesk/#faqs","text":"","title":"FAQs"},{"location":"workflow/integrations/credentials/zendesk/#how-do-i-get-my-zendesk-subdomain","text":"<p>To get your Zendesk subdomain, follow the steps mentioned below. 1. Access your Zendesk dashboard. 2. Copy the string of characters located between <code>https://</code> and <code>.zendesk.com/agent/dashboard</code> in your Zendesk URL. This string is the subdomain. For example, if your Zendesk URL is <code>https://example.zendesk.com/agent/dashboard</code>, the subdomain will be <code>example</code>.</p>","title":"How do I get my Zendesk subdomain?"},{"location":"workflow/integrations/credentials/zoho/","text":"<p>You can use these credentials to authenticate the following nodes with Zoho. - Zoho CRM</p>","title":"Zoho"},{"location":"workflow/integrations/credentials/zoho/#prerequisites","text":"<p>Create a Zoho account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/zoho/#using-oauth","text":"<p>\u26c5\ufe0f Note fordoc2app.cloudintegration.eu users</p> <p>You'll only need to enter the Credentials Name and click on the circle button in the OAuth section to connect your Zoho account to Workflow\u00b2.</p>  <ol> <li>Access your Zoho Developer Console.</li> <li>Click on the 'GET STARTED' button.</li> <li>Click on the 'Server-based Applications' box.</li> <li>Copy the 'OAuth Callback URL' provided in the Zoho OAuth2 API credentials in Doc\u00b2 and paste it in the Authorized Redirect URIs field in the Zoho API Console app creation page.</li> <li>Fill in any other necessary information and click on the 'CREATE' button.</li> <li>Use the 'Client ID' and the 'Client Secret' displayed with your Zoho OAuth2 API credentials in Workflow\u00b2.</li> <li>Click on the circle button in the OAuth section to connect a Zoho CRM account to Workflow\u00b2.</li> <li>Click the Save button to save your credentials.</li> </ol> <p></p>","title":"Using OAuth"},{"location":"workflow/integrations/credentials/zoom/","text":"<p>You can use these credentials to authenticate the following nodes with Zoom. - Zoom</p>","title":"Zoom"},{"location":"workflow/integrations/credentials/zoom/#prerequisites","text":"<p>Create a Zoom account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/zoom/#using-oauth","text":"<ol> <li>Visit the Zoom App Marketplace and select the 'Build App' option in the Develop dropdown on the top-right corner.</li> <li>Create a new OAuth app.</li> <li>Select 'User-managed app'.</li> <li>Set the \"Would you like to publish this app on Zoom App Marketplace?\" slider to off.</li> <li>Click on the Create button.</li> <li>Copy the 'OAuth Callback URL' provided in the Zoom OAuth2 API credentials in Doc\u00b2 and paste it in the 'Redirect URL for OAuth' section in the Zoom app creation page.</li> <li>Copy the Whitelist URL' provided in the Zoom OAuth2 API credentials in Doc\u00b2 and paste it in the 'Redirect URL for OAuth' section in the Zoom app creation page.</li> <li>Copy the Client ID and Client Secret provided in the Zoom app creation page and paste it in the Zoom OAuth2 API credentials in Workflow\u00b2.</li> <li>Enter any necessary information and click continue.</li> <li>In the 'Scopes' section, click Add Scopes and choose the scopes that you plan to use.</li> <li>Click on the circle button in the OAuth section to connect your Zoom account to Workflow\u00b2.</li> <li>Click the Save button to save your credentials.</li> </ol> <p></p>","title":"Using OAuth"},{"location":"workflow/integrations/credentials/zoom/#using-access-token","text":"<ol> <li>Visit the Zoom App Marketplace and select the 'Build App' option in the Develop dropdown on the top-right corner.</li> <li>Create a new JWT app and enter any necessary information.</li> <li>Go to the 'App Credentials' tab.</li> <li>Click on View JWT Token and copy the given token. </li> <li>Go to the 'Activation' tab and click on the Activate your app button.</li> <li>Use the JWT token you copied with your Zoom API credentials in Workflow\u00b2.</li> </ol> <p></p>","title":"Using Access Token"},{"location":"workflow/integrations/credentials/zulip/","text":"<p>You can use these credentials to authenticate the following nodes with Zulip. - Zulip</p>","title":"Zulip"},{"location":"workflow/integrations/credentials/zulip/#prerequisites","text":"<p>Create a Zulip account.</p>","title":"Prerequisites"},{"location":"workflow/integrations/credentials/zulip/#using-access-token","text":"<ol> <li>Access your Zulip dashboard.</li> <li>Click on the gear icon on the top right.</li> <li>Click on Settings.</li> <li>Click on the Show/change your API key button under the API Key section.</li> <li>Use your Email, URL, and API Key in your Zulip credentials.</li> </ol> <p></p>","title":"Using Access Token"},{"location":"workflow/integrations/nodes/","tags":["Workflow","nodes"],"text":"","title":"Overview"},{"location":"workflow/integrations/nodes/#this-section-provides-information-about-a-variety-of-n8ns-nodes","tags":["Workflow","nodes"],"text":"<ul> <li>Brandfetch</li> <li>Action Network</li> <li>ActiveCampaign</li> <li>Affinity</li> <li>Agile CRM</li> <li>Airtable</li> <li>AMQP Sender</li> <li>APITemplate.io</li> <li>Asana</li> <li>Automizy</li> <li>Autopilot</li> <li>AWS Comprehend</li> <li>AWS DynamoDB</li> <li>AWS Lambda</li> <li>AWS Rekognition</li> <li>AWS S3</li> <li>AWS SES</li> <li>AWS SNS</li> <li>AWS SQS</li> <li>AWS Textract</li> <li>AWS Transcribe</li> <li>BambooHR</li> <li>Bannerbear</li> <li>Baserow</li> <li>Beeminder</li> <li>Bitly</li> <li>Bitwarden</li> <li>Box</li> <li>Bubble</li> <li>Chargebee</li> <li>CircleCI</li> <li>Webex by Cisco</li> <li>Clearbit</li> <li>ClickUp</li> <li>Clockify</li> <li>Cockpit</li> <li>Coda</li> <li>CoinGecko</li> <li>Contentful</li> <li>ConvertKit</li> <li>Copper</li> <li>Cortex</li> <li>CrateDB</li> <li>Customer.io</li> <li>DeepL</li> <li>Demio</li> <li>DHL</li> <li>Discord</li> <li>Discourse</li> <li>Disqus</li> <li>Drift</li> <li>Dropbox</li> <li>Dropcontact</li> <li>E-goi</li> <li>Elastic Security</li> <li>Elasticsearch</li> <li>Emelia</li> <li>ERPNext</li> <li>Facebook Graph API</li> <li>FileMaker</li> <li>Flow</li> <li>Freshdesk</li> <li>Freshservice</li> <li>Freshworks CRM</li> <li>G Suite Admin</li> <li>GetResponse</li> <li>Ghost</li> <li>GitHub</li> <li>GitLab</li> <li>Gmail</li> <li>GoToWebinar</li> <li>Google Analytics</li> <li>Google BigQuery</li> <li>Google Books</li> <li>Google Calendar</li> <li>Google Chat</li> <li>Google Cloud Firestore</li> <li>Google Cloud Natural Language</li> <li>Google Cloud Realtime Database</li> <li>Google Contacts</li> <li>Google Docs</li> <li>Google Drive</li> <li>Google Perspective</li> <li>Google Sheets</li> <li>Google Slides</li> <li>Google Tasks</li> <li>Google Translate</li> <li>Gotify</li> <li>Grafana</li> <li>Grist</li> <li>Hacker News</li> <li>HaloPSA</li> <li>Harvest</li> <li>Help Scout</li> <li>Home Assistant</li> <li>HubSpot</li> <li>Humantic AI</li> <li>Hunter</li> <li>Intercom</li> <li>Invoice Ninja</li> <li>Iterable</li> <li>Jenkins</li> <li>Jira</li> <li>Kafka</li> <li>Keap</li> <li>Kitemaker</li> <li>KoBo Toolbox</li> <li>Lemlist</li> <li>Line</li> <li>Linear</li> <li>LingvaNex</li> <li>LinkedIn</li> <li>Magento 2</li> <li>Mailcheck</li> <li>Mailchimp</li> <li>MailerLite</li> <li>Mailgun</li> <li>Mailjet</li> <li>Mandrill</li> <li>Marketstack</li> <li>Matrix</li> <li>Mattermost</li> <li>Mautic</li> <li>Medium</li> <li>MessageBird</li> <li>Microsoft Dynamics CRM</li> <li>Microsoft Excel</li> <li>Microsoft Graph Security</li> <li>Microsoft OneDrive</li> <li>Microsoft Outlook</li> <li>Microsoft SQL</li> <li>Microsoft Teams</li> <li>Microsoft To Do</li> <li>Mindee</li> <li>MISP</li> <li>Mocean</li> <li>monday.com</li> <li>MongoDB</li> <li>Monica CRM</li> <li>MQTT</li> <li>MSG91</li> <li>MySQL</li> <li>NASA</li> <li>Netlify</li> <li>Nextcloud</li> <li>NocoDB</li> <li>Notion</li> <li>Odoo</li> <li>One Simple API</li> <li>Onfleet</li> <li>OpenThesaurus</li> <li>OpenWeatherMap</li> <li>Orbit</li> <li>Oura</li> <li>Paddle</li> <li>PagerDuty</li> <li>PayPal</li> <li>Peekalink</li> <li>Phantombuster</li> <li>Philips Hue</li> <li>Pipedrive</li> <li>Plivo</li> <li>PostHog</li> <li>Postgres</li> <li>ProfitWell</li> <li>Pushbullet</li> <li>Pushcut</li> <li>Pushover</li> <li>QuestDB</li> <li>Quick Base</li> <li>QuickBooks</li> <li>RabbitMQ</li> <li>Raindrop</li> <li>Reddit</li> <li>Redis</li> <li>Rocket.Chat</li> <li>Rundeck</li> <li>S3</li> <li>Salesforce</li> <li>Salesmate</li> <li>SeaTable</li> <li>SecurityScorecard</li> <li>Segment</li> <li>SendGrid</li> <li>Sendy</li> <li>Sentry.io</li> <li>ServiceNow</li> <li>Shopify</li> <li>SIGNL4</li> <li>Slack</li> <li>sms77</li> <li>Snowflake</li> <li>Splunk</li> <li>Spontit</li> <li>Spotify</li> <li>Stackby</li> <li>Stackby</li> <li>Storyblok</li> <li>Storyblok</li> <li>Strapi</li> <li>Strava</li> <li>Stripe</li> <li>SugarCRM</li> <li>Supabase</li> <li>SyncroMSP</li> <li>Taiga</li> <li>Tapfiliate</li> <li>Telegram</li> <li>TheHive</li> <li>TimescaleDB</li> <li>Todoist</li> <li>Travis CI</li> <li>Trello</li> <li>Twake</li> <li>Twilio</li> <li>Twist</li> <li>Twitter</li> <li>Unleashed Software</li> <li>UpLead</li> <li>uProc</li> <li>UptimeRobot</li> <li>urlscan.io</li> <li>Vero</li> <li>Vonage</li> <li>Webflow</li> <li>Wekan</li> <li>Wise</li> <li>WooCommerce</li> <li>WordPress</li> <li>Customer Datastore (n8n Training)</li> <li>Customer Messenger (n8n Training)</li> <li>Xero</li> <li>YouTube</li> <li>Yourls</li> <li>Zammad</li> <li>Zendesk</li> <li>Zoho CRM</li> <li>Zoom</li> <li>Zulip</li> </ul>","title":"This section provides information about a variety of n8n's nodes."},{"location":"workflow/integrations/nodes/workflow-nodes-base.Brandfetch/","text":"<p>Brandfetch is a brand search engine that helps you find logos, colors, fonts, images, and more.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Brandfetch"},{"location":"workflow/integrations/nodes/workflow-nodes-base.Brandfetch/#basic-operations","text":"<ul> <li>Return a company's colors</li> <li>Return a company's data</li> <li>Return a company's fonts</li> <li>Return a company's industry</li> <li>Return a company's logo &amp; icon</li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.Brandfetch/#example-usage","text":"<p>This workflow allows you to get the logo, icon, and information of a company and store it in Airtable. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Start - Brandfetch - Set - Airtable</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.Brandfetch/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.Brandfetch/#2-brandfetch-node-logo","text":"<p>This node will fetch the URL of the logo and icon of Workflow\u00b2. If you want the logo and icon of a different company, enter the domain name of that company instead.</p> <ol> <li>First of all, you'll have to enter credentials for the Brandfetch node. You can find out how to do that here.</li> <li>Enter <code>n8n.io</code> in the Domain field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node retrieves the URL of n8n's logo and icon.</p> <p></p>","title":"2. Brandfetch node (logo)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.Brandfetch/#3-brandfetch1-node-company","text":"<p>This node will fetch company data about Workflow\u00b2.</p> <ol> <li>Select the credentials that you entered in the previous Brandfetch node.</li> <li>Select 'Company' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Domain field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Brandfetch &gt; Parameters &gt; domain. You can also add the following expression: <code>{{$node[\"Brandfetch\"].parameter[\"domain\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns company data about Workflow\u00b2.</p> <p></p>","title":"3. Brandfetch1 node (company)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.Brandfetch/#4-set-node","text":"<p>We will use the Set node to ensure that only the data that we set in this node gets passed on to the next nodes in the workflow. We will set the value of <code>Name</code>, <code>Icon URL</code>, and <code>Logo URL</code>in this node.</p> <ol> <li>Click on the Add Value button and select 'String' from the dropdown list.</li> <li>Enter <code>Name</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Brandfetch1 &gt; Output Data &gt; JSON &gt; name. You can also add the following expression: <code>{{$node[\"Brandfetch1\"].json[\"name\"]}}</code>.</li> <li>Click on the Add Value button and select 'String' from the dropdown list.</li> <li>Enter <code>Icon URL</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Brandfetch &gt; Output Data &gt; JSON &gt; icon &gt; image. You can also add the following expression: <code>{{$node[\"Brandfetch\"].json[\"icon\"][\"image\"]}}</code>.</li> <li>Click on the Add Value button and select 'String' from the dropdown list.</li> <li>Enter <code>Logo URL</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Brandfetch &gt; Output Data &gt; JSON &gt; logo &gt; image. You can also add the following expression: <code>{{$node[\"Brandfetch\"].json[\"logo\"][\"image\"]}}</code>.</li> <li>Toggle Keep Only Set to <code>true</code>. We set this option to true to ensure that only the data that we have set in this node get passed on to the next nodes in the workflow.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node sets the value of <code>Name</code>, <code>Icon URL</code>, and <code>Logo URL</code>. This value is passed to the next node in the workflow.</p> <p></p>","title":"4. Set node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.Brandfetch/#5-airtable-node-append","text":"<p>This node will append the data that we set in the previous node to a table. Create a table like this in your Airtable base.</p> <ol> <li>First of all, you'll have to enter credentials for the Airtable node. You can find out how to do that here.</li> <li>Select 'Append' from the Operation dropdown list.</li> <li>Enter the Base ID in the Base ID field. For obtaining the Base ID, head over to their API page and select the correct base. You\u2019ll find the Base ID there.</li> <li>Enter the name of your table in the Table field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node appends the data that we had set in the previous node.</p> <p></p>","title":"5. Airtable node (Append)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.actionNetwork/","tags":["Workflow\u00b2","Action Network"],"text":"<p>Action Network is an open platform that empowers individuals and groups to organize for progressive causes.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Action Network"},{"location":"workflow/integrations/nodes/workflow-nodes-base.actionNetwork/#basic-operations","tags":["Workflow\u00b2","Action Network"],"text":"<ul> <li>Attendance<ul> <li>Create</li> <li>Get</li> <li>Get All</li> </ul> </li> <li>Event<ul> <li>Create</li> <li>Get</li> <li>Get All</li> </ul> </li> <li>Person<ul> <li>Create</li> <li>Get</li> <li>Get All</li> <li>Update</li> </ul> </li> <li>Person Tag<ul> <li>Add</li> <li>Remove</li> </ul> </li> <li>Petition<ul> <li>Create</li> <li>Get</li> <li>Get All</li> <li>Update</li> </ul> </li> <li>Signature<ul> <li>Create</li> <li>Get</li> <li>Get All</li> <li>Update</li> </ul> </li> <li>Tag<ul> <li>Create</li> <li>Get</li> <li>Get All</li> </ul> </li> </ul>","title":"Basic operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.actionNetwork/#example","tags":["Workflow\u00b2","Action Network"],"text":"<p>This workflow allows you to create a new event in Action Network, then create a new person and mark them as having attended your event. This workflow uses the following two nodes. - Start - ActiveCampaign</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example"},{"location":"workflow/integrations/nodes/workflow-nodes-base.actionNetwork/#1-start-node","tags":["Workflow\u00b2","Action Network"],"text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.actionNetwork/#2-action-network-node","tags":["Workflow\u00b2","Action Network"],"text":"<ol> <li>First enter your credentials. You can find out how to do that here.</li> <li>Fill in the remaining parameters as follows:<ul> <li>Resource: Select Event from the dropdown list.</li> <li>Operation: Select Create from the dropdown list.</li> <li>Origin System: Enter where this event originated. Workflow\u00b2.io in our example.</li> <li>Title: Enter the name of your event, July Meetup in our example here.</li> </ul> </li> <li>Enable the Simple toggle to return an easier to view response as opposed to the complete raw data.</li> <li>Use the Additional Fields to enter any further details about your event. Here we provided the Start Date.</li> </ol> <p></p>","title":"2. Action Network node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.actionNetwork/#3-action-network1-node","tags":["Workflow\u00b2","Action Network"],"text":"<ol> <li>First enter your credentials. You can find out how to do that here.</li> <li>Fill in the remaining parameters as follows:<ul> <li>Resource: Select Person from the dropdown list.</li> <li>Operation: Select Create from the dropdown list.</li> </ul> </li> <li>Enable the Simple toggle to return an easier to view response as opposed to the complete raw data.</li> <li>In the Email Address section, enter the address and status for this person (here we Subscribe them).</li> <li>Use the Additional Fields to enter any further details about this person. Here we provided their given name.</li> </ol> <p></p>","title":"3. Action Network1 node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.actionNetwork/#4-action-network2-node","tags":["Workflow\u00b2","Action Network"],"text":"<ol> <li>First enter your credentials. You can find out how to do that here.</li> <li>Fill in the remaining parameters as follows:<ul> <li>Resource: Select Attendance from the dropdown list.</li> <li>Operation: Select Create from the dropdown list.</li> <li>Person ID: Enter the ID for the person created by the previous node.</li> <li>Event ID: Enter the ID for the event created in the first node.</li> </ul> </li> <li>Enable the Simple toggle to return an easier to view response as opposed to the complete raw data.</li> </ol> <p></p>","title":"4. Action Network2 node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.activeCampaign/","text":"<p>ActiveCampaign is a cloud software platform for small-to-mid-sized business. The company offers software for customer experience automation, which combines the email marketing, marketing automation, sales automation, and CRM categories.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"ActiveCampaign"},{"location":"workflow/integrations/nodes/workflow-nodes-base.activeCampaign/#basic-operations","text":"<ul> <li>Account<ul> <li>Create an account</li> <li>Delete an account</li> <li>Get data of an account</li> <li>Get data of all accounts</li> <li>Update an account</li> </ul> </li> <li>Account Contact<ul> <li>Create an association</li> <li>Delete an association</li> <li>Update an association</li> </ul> </li> <li>Contact<ul> <li>Create a contact</li> <li>Delete a contact</li> <li>Get data of a contact</li> <li>Get data of all contact</li> <li>Update a contact</li> </ul> </li> <li>Contact List<ul> <li>Add contact to a list</li> <li>Remove contact from a list</li> </ul> </li> <li>Contact Tag<ul> <li>Add a tag to a contact</li> <li>Remove a tag from a contact</li> </ul> </li> <li>Connection<ul> <li>Create a connection</li> <li>Delete a connection</li> <li>Get data of a connection</li> <li>Get data of all connections</li> <li>Update a connection</li> </ul> </li> <li>Deal<ul> <li>Create a deal</li> <li>Delete a deal</li> <li>Get data of a deal</li> <li>Get data of all deals</li> <li>Update a deal</li> <li>Create a deal note</li> <li>Update a deal note</li> </ul> </li> <li>E-commerce Order<ul> <li>Create a order</li> <li>Delete a order</li> <li>Get data of a order</li> <li>Get data of all orders</li> <li>Update a order</li> </ul> </li> <li>E-Commerce Customer<ul> <li>Create a E-commerce Customer</li> <li>Delete a E-commerce Customer</li> <li>Get data of a E-commerce Customer</li> <li>Get data of all E-commerce Customer</li> <li>Update a E-commerce Customer</li> </ul> </li> <li>E-commerce Order Products<ul> <li>Get data of all order products</li> <li>Get data of a ordered product</li> <li>Get data of an order's products</li> </ul> </li> <li>List<ul> <li>Get all lists</li> </ul> </li> <li>Tag<ul> <li>Create a tag</li> <li>Delete a tag</li> <li>Get data of a tag</li> <li>Get data of all tags</li> <li>Update a tag</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.activeCampaign/#example-usage","text":"<p>This workflow allows you to create a contact in ActiveCampaign. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - ActiveCampaign</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.activeCampaign/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.activeCampaign/#2-activecampaign-node","text":"<ol> <li>First of all, you'll have to enter credentials for the ActiveCampaign node. You can find out how to do that here.</li> <li>Enter the email of the contact in the Email field.</li> <li>Toggle the Update if exists option to yes.</li> <li>Under the Additional Fields section, click on the Add Field button and select First Name.</li> <li>Enter the first name of the contact in the First Name field.</li> <li>Click on Add Field again and select Last Name.</li> <li>Enter the last name of the contact in the Last name field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>","title":"2. ActiveCampaign node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.affinity/","text":"<p>Affinity is a powerful relationship intelligence platform enabling teams to leverage their network to close the next big deal.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Affinity"},{"location":"workflow/integrations/nodes/workflow-nodes-base.affinity/#basic-operations","text":"<ul> <li>List<ul> <li>Get a list</li> <li>Get all lists</li> </ul> </li> <li>List Entry<ul> <li>Create a list entry</li> <li>Delete a list entry</li> <li>Get a list entry</li> <li>Get all list entries</li> </ul> </li> <li>Organization<ul> <li>Create an organization</li> <li>Delete an organization</li> <li>Get an organization</li> <li>Get all organizations</li> <li>Update an organization</li> </ul> </li> <li>Person<ul> <li>Create a person</li> <li>Delete a person</li> <li>Get a person</li> <li>Get all persons</li> <li>Update a person</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.affinity/#example-usage","text":"<p>This workflow allows you to create an organization in Affinity. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - Affinity</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.affinity/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.affinity/#2-affinity-node","text":"<ol> <li>First of all, you'll have to enter credentials for the Affinity node. You can find out how to do that here.</li> <li>Enter the name of the organization in the Name field.</li> <li>Enter the domain name of the organization in the Domain field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>","title":"2. Affinity node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.agileCrm/","text":"<p>Agile CRM is a CRM with Sales, Marketing and Service automation in single platform. It has sales tracking, contact management, marketing automation, web analytics, two-way emails, telephony, and a helpdesk.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Agile CRM"},{"location":"workflow/integrations/nodes/workflow-nodes-base.agileCrm/#basic-operations","text":"<ul> <li>Company<ul> <li>Create a new company</li> <li>Delete a company</li> <li>Get a company</li> <li>Get all companies</li> <li>Update company properties</li> </ul> </li> <li>Contact<ul> <li>Create a new contact</li> <li>Delete a contact</li> <li>Get a contact</li> <li>Get all contacts</li> <li>Update contact properties</li> </ul> </li> <li>Deal<ul> <li>Create a new deal</li> <li>Delete a deal</li> <li>Get a deal</li> <li>Get all deals</li> <li>Update deal properties</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.agileCrm/#example-usage","text":"<p>This workflow allows you to create a new contact in Agile CRM. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - Agile CRM</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.agileCrm/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.agileCrm/#2-agile-crm-node","text":"<ol> <li>First of all, you'll have to enter credentials for the Agile CRM node. You can find out how to do that here.</li> <li>Select the 'Create' option from the Operation dropdown list.</li> <li>Under the Additional Fields section, click on the Add Field button and select First Name.</li> <li>Enter the first name of the contact in the First Name field.</li> <li>Click on Add Field again and select Last Name.</li> <li>Enter the last name of the contact in the Last name field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>","title":"2. Agile CRM node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.airtable/","text":"<p>Airtable is a spreadsheet-database hybrid, with the features of a database but applied to a spreadsheet. The fields in an Airtable table are similar to cells in a spreadsheet, but have types such as 'checkbox', 'phone number', and 'drop-down list', and can reference file attachments like images.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Airtable"},{"location":"workflow/integrations/nodes/workflow-nodes-base.airtable/#basic-operations","text":"<ul> <li>Append the data to a table</li> <li>Delete data from a table</li> <li>List data from a table</li> <li>Read data from a table</li> <li>Update data in a table</li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.airtable/#example-usage","text":"<p>This workflow allows you to insert and update data from a table in Airtable. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Start - Set - Airtable</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.airtable/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.airtable/#2-set-node","text":"<p>We will use the Set node to set the values for the name and id fields for a new record.</p> <ol> <li>Click on the Add Value button and select 'Number' from the dropdown list.</li> <li>Enter <code>ID</code> in the Name field.</li> <li>Enter an id in the Value field.</li> <li>Click on the Add Value button and select 'String' from the dropdown list.</li> <li>Enter <code>Name</code> in the Name field.</li> <li>Enter a name in the Value field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node sets the value for <code>ID</code> and <code>Name</code>.</p> <p></p>","title":"2. Set node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.airtable/#3-airtable-node-append","text":"<p>This node will append the data that we set in the previous node to a table. Create a table like this in your Airtable base.</p> <ol> <li>First of all, you'll have to enter credentials for the Airtable node. You can find out how to do that here.</li> <li>Select 'Append' from the Operation dropdown list.</li> <li>Enter the Base ID in the Base ID field. For obtaining the Base ID, head over to their API page and select the correct base. You\u2019ll find the Base ID there.</li> <li>Enter the name of your table in the Table field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node appends the data that we had set in the previous node.</p> <p></p>","title":"3. Airtable node (Append)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.airtable/#4-airtable1-node-list","text":"<p>This node will list all the records with the name <code>n8n</code>. If you want to list records with a different name, use that name instead.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select the 'List' option from the Operation dropdown list.</li> <li>Click on the gears icon next to the Base ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Airtable &gt; Parameters &gt; application. You can also add the following expression: <code>{{$node[\"Airtable\"].parameter[\"application\"]}}</code>.</li> <li>Click on the gears icon next to the Table field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Airtable &gt; Parameters &gt; table. You can also add the following expression: <code>{{$node[\"Airtable\"].parameter[\"table\"]}}</code>.</li> <li>Click on Add Option and select 'Filter By Formula' from the dropdown list.</li> <li>Enter <code>Name='n8n'</code> in the Filter By Formula field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node only returns the record with the name <code>n8n</code>.</p> <p></p>","title":"4. Airtable1 node (List)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.airtable/#5-set1-node","text":"<p>We will use the Set node to ensure that only the data that we set in this node gets passed on to the next nodes in the workflow. We will set the value of <code>Name</code> in this node.</p> <ol> <li>Click on the Add Value button and select 'String' from the dropdown list.</li> <li>Enter <code>Name</code> in the Name field.</li> <li>Enter <code>nodemation</code> in the Value field.</li> <li>Toggle Keep Only Set to <code>true</code>. We set this option to true to ensure that only the data that we have set in this node get passed on to the next nodes in the workflow.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node sets the value of <code>Name</code>. This value is passed to the next node in the workflow.</p> <p></p>","title":"5. Set1 node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.airtable/#6-airtable2-node-update","text":"<p>This node will update the Name field of the record that we received from the previous Airtable node.</p> <ol> <li>Select the credentials that you entered in the previous Airtable node.</li> <li>Select 'Update' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Base ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Airtable &gt; Parameters &gt; application. You can also add the following expression: <code>{{$node[\"Airtable\"].parameter[\"application\"]}}</code>.</li> <li>Click on the gears icon next to the Table field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Airtable &gt; Parameters &gt; table. You can also add the following expression: <code>{{$node[\"Airtable\"].parameter[\"table\"]}}</code>.</li> <li>Click on the gears icon next to the Id field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Airtable1 &gt; Output Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$node[\"Airtable1\"].json[\"id\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node updates the Name field.</p> <p></p>","title":"6. Airtable2 node (Update)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.airtable/#faqs","text":"","title":"FAQs"},{"location":"workflow/integrations/nodes/workflow-nodes-base.airtable/#how-to-get-the-record-id","text":"<p>To fetch data for a particular record, you need the Record ID. There are two ways to get the Record ID.</p> <p>Create a Record ID column in Airtable</p> <p>To create a <code>Record ID</code> column in your table, refer to this article. You can then use this Record ID in your Airtable node.</p> <p>Use the List operation</p> <p>To get the Record ID of your record, you can use the List operation of the Airtable node. This operation will return the Record ID along with the fields. You can then use this Record ID in your Airtable node.</p>","title":"How to get the Record ID?"},{"location":"workflow/integrations/nodes/workflow-nodes-base.airtable/#how-to-filter-records-when-using-the-list-operation","text":"<p>To filter records from your Airtable base, use the Filter By Formula option. For example, if you want to return all the users that belong to the organization <code>n8n</code>, follow the steps mentioned below: 1. Select 'List' from the Operation dropdown list. 2. Enter the base ID and the table name in the Base ID and Table field, respectively. 3. Click on Add Option and select 'Filter By Formula' from the dropdown list. 4. Enter the following formula in the Filter By Formula field: <code>{Organization}='n8n'</code>.</p> <p>Similarly, if you want to return all the users that do not belong to the organization <code>n8n</code>, use the following formula: <code>NOT({Organization}='n8n')</code>.</p> <p>Refer to the Airtable documentation to learn more about the formulas.</p>","title":"How to filter records when using the List operation?"},{"location":"workflow/integrations/nodes/workflow-nodes-base.amqp/","text":"<p>AMQP is an open standard application layer protocol for message-oriented middleware. The defining features of AMQP are message orientation, queuing, routing, reliability and security. This node supports AMQP 1.0 compatible message brokers.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"AMQP Sender"},{"location":"workflow/integrations/nodes/workflow-nodes-base.amqp/#basic-operations","text":"<ul> <li>Send message</li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.amqp/#example-usage","text":"<p>This workflow allows you to send updates about the position of the ISS every minute to an ActiveMQ queue using the AMQP Sender node. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Cron - HTTP Request - Set - AMQP Sender</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.amqp/#1-cron-node","text":"<p>The Cron node will trigger the workflow every minute.</p> <ol> <li>Click on Add Cron Time.</li> <li>Select 'Every Minute' from the Mode dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the Cron node is configured to trigger the workflow every minute.</p> <p></p>","title":"1. Cron node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.amqp/#2-http-request-node-get","text":"<p>This node will make a GET request to the API <code>https://api.wheretheiss.at/v1/satellites/25544/positions</code> to fetch the position of the ISS. This information gets passed on to the next node in the workflow.</p> <ol> <li>Enter <code>https://api.wheretheiss.at/v1/satellites/25544/positions</code> in the URL field.</li> <li>Click on the Add Parameter button in the Query Parameters section.</li> <li>Enter <code>timestamps</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Enter the following expression: <code>{{Date.now()}}</code>. This expression will return the current timestamp.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node makes a GET request to the API and returns the information about the location of the ISS.</p> <p></p>","title":"2. HTTP Request node (GET)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.amqp/#3-set-node","text":"<p>We will use the Set node to ensure that only the data that we set in this node gets passed on to the next nodes in the workflow.</p> <ol> <li>Click on Add Value and select 'String' from the dropdown list.</li> <li>Enter <code>Name</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; HTTP Request &gt; Output Data &gt; JSON &gt; 0 &gt; name. You can also add the following expression: <code>{{$node[\"HTTP Request\"].json[\"0\"][\"name\"]}}</code>.</li> <li>Click on Add Value and select 'String' from the dropdown list.</li> <li>Enter <code>Latitude</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; HTTP Request &gt; Output Data &gt; JSON &gt; 0 &gt; latitude. You can also add the following expression: <code>{{$node[\"HTTP Request\"].json[\"0\"][\"latitude\"]}}</code>.</li> <li>Click on Add Value and select 'String' from the dropdown list.</li> <li>Enter <code>Longitude</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; HTTP Request &gt; Output Data &gt; JSON &gt; 0 &gt; longitude. You can also add the following expression: <code>{{$node[\"HTTP Request\"].json[\"0\"][\"longitude\"]}}</code>.</li> <li>Click on Add Value and select 'String' from the dropdown list.</li> <li>Enter <code>Timestamp</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; HTTP Request &gt; Output Data &gt; JSON &gt; 0 &gt; timpestamp. You can also add the following expression: <code>{{$node[\"HTTP Request\"].json[\"0\"][\"timestamp\"]}}</code>.</li> <li>Toggle Keep Only Set to <code>true</code>. We set this option to true to ensure that only the data that we have set in this node get passed on to the next nodes in the workflow.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node uses the data from the previous node and returns the data that we set for the workflow.</p> <p></p>","title":"3. Set node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.amqp/#4-amqp-sender-node","text":"<p>This node will send the data from the previous node to the <code>iss-position</code> queue in ActiveMQ. If you have created a queue with a different name in ActiveMQ, you can use that queue instead.</p> <ol> <li>First of all, you'll have to enter credentials for the AMQP Sender node. You can find out how to do that here.</li> <li>Enter the name of the queue or topic in the Queue / Topic field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node sends the data from the previous node to the <code>iss-position</code> queue in ActiveMQ.</p> <p></p>  <p> Activate workflow for production</p> <p>This example workflow uses the Cron node, which is a Trigger node. You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Cron node.</p>","title":"4. AMQP Sender node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.apiTemplateIo/","text":"<p>APITemplate.io allows you to auto-generate images and PDF documents.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"APITemplate.io"},{"location":"workflow/integrations/nodes/workflow-nodes-base.apiTemplateIo/#basic-operations","text":"<ul> <li>Account</li> <li>Get</li> <li>Image</li> <li>Create</li> <li>PDF</li> <li>Create</li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.apiTemplateIo/#example-usage","text":"<p>This workflow allows you to create an invoice with the information received via a Typeform submission. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Typeform Trigger - APITemplate.io</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.apiTemplateIo/#1-typeform-trigger-node","text":"<p>This node will trigger the workflow when a form is submitted. Make sure to create a form that collects the following information:</p> <ul> <li>Bill To (Short Text)</li> <li>Client's Email Address (Email)</li> <li>Item Description (Short Text)</li> <li>Item Price (Number)</li> <li>Item Description (Short Text)</li> <li> <p>Item Price (Number)</p> </li> <li> <p>Select 'Access Token' from the Authentication dropdown list.</p> </li> <li>Enter the credentials for the Typeform Trigger node. You can find out how to do that here.</li> <li>Select the invoice form from the Form dropdown list.</li> <li>Toggle Simplify Answers to <code>false</code>. By setting this option to false, the node returns the values for the fields with duplicate names.</li> <li>Click on Execute Node to run the node.</li> </ul> <p>In the screenshot below, you will notice that the node triggers the workflow when the form is submitted. We will pass this information to the next nodes in the workflow.</p> <p></p>","title":"1. Typeform Trigger node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.apiTemplateIo/#2-apitemplateio-node-create-pdf","text":"<p>This node will generate an invoice using the information from the previous node. Create an invoice template in APITemplate.io, if you don't already have one.</p> <ol> <li>First of all, you'll have to enter credentials for the APITemplate.io node. You can find out how to do that here.</li> <li>Select 'PDF' from the Resource dropdown list.</li> <li>Select your invoice template from the Template ID dropdown list.</li> <li>Toggle JSON Parameters to <code>true</code>. By setting this option to true, the node allows us to write custom JSON data.</li> <li>Toggle Download to <code>true</code>.</li> <li>Click on the gears icon next to the Properties (JSON) field.</li> <li>Enter the following expression in the Edit Expression field: <pre><code>{\n  \"company\": \"n8n\",\n  \"email\": \"{{$json[\"1\"][\"email\"]}}\",\n  \"invoice_no\": \"213223444\",\n  \"invoice_date\": \"18-03-2021\",\n  \"invoice_due_date\": \"17-04-2021\",\n  \"address\": \"Berlin, Germany\",\n  \"company_bill_to\": \"{{$json[\"0\"][\"text\"]}}\",\n  \"website\": \"https://n8n.io\",\n  \"document_id\": \"889856789012\",\n  \"items\": [\n    {\n      \"item_name\": \"{{$json[\"2\"][\"text\"]}}\",\n      \"price\": \"EUR {{$json[\"3\"][\"number\"]}}\"\n    },\n    {\n      \"item_name\": \"{{$json[\"4\"][\"text\"]}}\",\n      \"price\": \"EUR {{$json[\"5\"][\"number\"]}}\"\n    }\n    ]\n}\n</code></pre> </li> <li>Click on the Add Field button.</li> <li>Enter a file name in the File Name field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node creates an invoice using the data from the previous node.</p> <p></p>  <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Typeform Trigger node.</p>","title":"2. APITemplate.io node (create: pdf)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.asana/","text":"<p>Asana is a web and mobile application designed to help teams organize, track, and manage their work.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Asana"},{"location":"workflow/integrations/nodes/workflow-nodes-base.asana/#basic-operations","text":"<ul> <li>Project<ul> <li>Create a new project</li> <li>Delete a project</li> <li>Get a project</li> <li>Get all projects</li> <li>Update a project</li> </ul> </li> <li>Subtask<ul> <li>Create a subtask</li> <li>Get all substasks</li> </ul> </li> <li>Task<ul> <li>Create a task</li> <li>Delete a task</li> <li>Get a task</li> <li>Get all tasks</li> <li>Move a task</li> <li>Search for tasks</li> <li>Update a task</li> </ul> </li> <li>Task Comment<ul> <li>Add a comment to a task</li> <li>Remove a comment from a task</li> </ul> </li> <li>Task Tag<ul> <li>Add a tag to a task</li> <li>Remove a tag from a task</li> </ul> </li> <li>Task Project<ul> <li>Add a task to a project</li> <li>Remove a task from a project</li> </ul> </li> <li>User<ul> <li>Get a user</li> <li>Get all users</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.asana/#example-usage","text":"<p>This workflow allows you to create a new task in Asana. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - Asana</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.asana/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.asana/#2-asana-node","text":"<ol> <li>First of all, you'll have to enter credentials for the Asana node. You can find out how to do that here.</li> <li>Select your workspace from the Workspace dropdown list.</li> <li>Enter the name of the task in the Name field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>","title":"2. Asana node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.automizy/","text":"<p>Automizy is an email marketing automation software that offers AI-powered Subject Line Tester, AB testing, and email automation.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Automizy"},{"location":"workflow/integrations/nodes/workflow-nodes-base.automizy/#basic-operations","text":"<ul> <li>Contact<ul> <li>Create a contact</li> <li>Delete a contact</li> <li>Get a contact</li> <li>Get all contacts</li> <li>Update a contact</li> </ul> </li> <li>List<ul> <li>Create a list</li> <li>Delete a list</li> <li>Get a list</li> <li>Get all lists</li> <li>Update a list</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.automizy/#example-usage","text":"<p>This workflow allows you to create a new list, add a new contact to that list, update the contact, and get all contacts in the list using the Automizy node. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Start - Automizy</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.automizy/#1-start-node","text":"<p>The Start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.automizy/#2-automizy-node-create-list","text":"<p>This node will create a new list called <code>n8n-docs</code> in Automizy.</p> <ol> <li>First of all, you'll have to enter credentials for the Automizy node. You can find out how to do that here.</li> <li>Select 'List' from the Resource dropdown list.</li> <li>Enter <code>n8n-docs</code> in the Name field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node creates a new list with the name <code>n8n-docs</code>.</p> <p></p>","title":"2. Automizy node (create: list)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.automizy/#3-automizy1-node-create-contact","text":"<p>This node creates a new contact and adds it to the list created in the previous node.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Enter the email address of the contact you want to add to the list in the Email field.</li> <li>Click on the gears icon next to the List ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Automizy &gt; Output Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$node[\"Automizy\"].json[\"id\"]}}</code>.</li> <li>Click on Add Field and select 'Status' from the dropdown list.</li> <li>Select 'Active' from the Status dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node creates a new contact with the email address <code>example@n8n.io</code> and status <code>Active</code> and adds it to the list <code>n8n-docs</code> created in the previous node.</p> <p></p>","title":"3. Automizy1 node (create: contact)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.automizy/#4-automizy2-node-update-contact","text":"<p>This node updates the contact that we created in the previous node by adding the tag <code>reviewer</code> to it. Make sure that you create a tag in Automizy.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Update' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Email field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Automizy1 &gt; Output Data &gt; JSON &gt; email. You can also add the following expression: <code>{{$node[\"Automizy1\"].json[\"email\"]}}</code>.</li> <li>Click on Add Field and select 'Tags' from the dropdown list.</li> <li>Select a tag from the Tags dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node updates the contact created in the previous node by adding the tag <code>reviewer</code> to it.</p> <p></p>","title":"4. Automizy2 node (update: contact)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.automizy/#5-automizy3-node-getall-contact","text":"<p>This node returns all the contacts of the <code>n8n-docs</code> list that we created using the Automizy node.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Get All' from the Operation dropdown list.</li> <li>Click on the gears icon next to the List ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Automizy &gt; Output Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$node[\"Automizy\"].json[\"id\"]}}</code>.</li> <li>Toggle Return All to true.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns all the contacts that are present in the list <code>n8n-docs</code>.</p> <p></p>","title":"5. Automizy3 node (getAll: contact)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.autopilot/","text":"<p>Autopilot is a visual marketing software that allows you to automate and personalize your marketing across the entire customer journey.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Autopilot"},{"location":"workflow/integrations/nodes/workflow-nodes-base.autopilot/#basic-operations","text":"<ul> <li>Contact<ul> <li>Create/Update a contact</li> <li>Delete a contact</li> <li>Get a contact</li> <li>Get all contacts</li> </ul> </li> <li>Contact Journey<ul> <li>Add contact to list</li> </ul> </li> <li>Contact List<ul> <li>Add contact to list.</li> <li>Check if contact is on list.</li> <li>Get all contacts on list.</li> <li>Remove a contact from a list.</li> </ul> </li> <li>List<ul> <li>Create a list.</li> <li>Get all lists</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.autopilot/#example-usage","text":"<p>This workflow allows you to create a new list, add a new contact to that list, update the contact, and get all contacts in the list using the Autopilot node. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Start - Autopilot</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.autopilot/#1-start-node","text":"<p>The Start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.autopilot/#2-autopilot-node-create-list","text":"<p>This node will create a new list called <code>n8n-docs</code> in Autopilot.</p> <ol> <li>First of all, you'll have to enter credentials for the Autopilot node. You can find out how to do that here.</li> <li>Select 'List' from the Resource dropdown list.</li> <li>Enter <code>n8n-docs</code> in the Name field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node creates a new list with the name <code>n8n-docs</code>.</p> <p></p>","title":"2. Autopilot node (create: list)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.autopilot/#3-autopilot1-node-upsert-contact","text":"<p>This node creates a new contact and adds it to the list created in the previous node.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Enter the email address of the contact you want to add to the list in the Email field.</li> <li>Click on Add Field and select 'List ID' from the dropdown list.</li> <li>Click on the gears icon next to the List ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; list_id. You can also add the following expression: <code>{{$json[\"list_id\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node creates a new contact with the email address <code>harshil@n8n.io</code> and adds it to the list <code>n8n-docs</code> created in the previous node.</p> <p></p>","title":"3. Autopilot1 node (upsert: contact)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.autopilot/#4-autopilot2-node-update-contact","text":"<p>This node updates the information of the contact that we created in the previous node.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Click on the gears icon next to the Email field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Autopilot1 &gt; Parameters &gt; email. You can also add the following expression: <code>{{$node[\"Autopilot1\"].parameter[\"email\"]}}</code>.</li> <li>Click on Add Field and select 'Company' from the dropdown list.</li> <li>Enter <code>n8n</code> in the Company field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node updates the contact created in the previous node by adding the tag <code>reviewer</code> to it.</p> <p></p>","title":"4. Autopilot2 node (update: contact)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.autopilot/#5-autopilot3-node-getall-contact","text":"<p>This node returns all the contacts of the <code>n8n-docs</code> list that we created using the Autopilot node.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Contact List' from the Resource dropdown list.</li> <li>Select 'Get All' from the Operation dropdown list.</li> <li>Click on the gears icon next to the List ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Autopilot &gt; Output Data &gt; JSON &gt; list_id. You can also add the following expression: <code>{{$node[\"Autopilot\"].json[\"list_id\"]}}</code>.</li> <li>Toggle Return All to true.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns all the contacts that are present in the list <code>n8n-docs</code>.</p> <p></p>","title":"5. Autopilot3 node (getAll: contact)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.awsComprehend/","text":"<p>AWS Comprehend is a natural language processing (NLP) service that uses machine learning to find insights and relationships in a text.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"AWS Comprehend"},{"location":"workflow/integrations/nodes/workflow-nodes-base.awsComprehend/#basic-operations","text":"<p>Text</p> <ul> <li>Identify the dominant language</li> <li>Analyse the sentiment of the text</li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.awsComprehend/#example-usage","text":"<p>This workflow allows you to analyze the sentiment of feedback received via a Typeform submission and send a message on Mattermost if that feedback is negative. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Typeform Trigger - AWS Comprehend - IF - Mattermost - No Operation, do nothing</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.awsComprehend/#1-typeform-trigger-node","text":"<p>This node will trigger the workflow when a feedback form is submitted. Make sure to create a feedback form for your event.</p> <ol> <li>Select 'Access Token' from the Authentication dropdown list.</li> <li>Enter the credentials for the Typeform Trigger node. You can find out how to do that here.</li> <li>Select the event feedback form from the Form dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node triggers the workflow when feedback is submitted. We will pass this feedback to the next nodes in the workflow.</p> <p></p>","title":"1. Typeform Trigger node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.awsComprehend/#2-aws-comprehend-node-detectsentiment-text","text":"<p>This node will analyze the sentiment of the feedback that we got from the previous node. We will pass the analysis score to the next node in the workflow.</p> <ol> <li>First of all, you'll have to enter credentials for the AWS Comprehend node. You can find out how to enter credentials for this node here.</li> <li>Select 'Detect Sentiment' from the Operation dropdown list.</li> <li> <p>Click on the gears icon next to the Text field and click on Add Expression.</p> </li> <li> <p>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; What did you think about the event? You can also add the following expression: <code>{{$json[\"What did you think about the event?\"]}}</code>. If you want to analyze the sentiment for a different question, select that question instead.</p> </li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node analyzes the sentiment of the feedback and gives a score based on that.</p> <p></p>","title":"2. AWS Comprehend node (detectSentiment: text)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.awsComprehend/#3-if-node","text":"<p>This node will check if the sentiment we got from the previous node is negative. If the sentiment is negative, it will return true otherwise false.</p> <ol> <li>Click on Add Condition and select 'String'.</li> <li>Click on the gears icon next to the Value 1 field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; Sentiment. You can also add the following expression: <code>{{$json[\"Sentiment\"]}}</code>.</li> <li>Enter <code>NEGATIVE</code> in the Value 2 field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node checks the sentiment that we received from the previous node and returns <code>true</code> if the sentiment is negative.</p> <p></p>","title":"3. IF node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.awsComprehend/#4-mattermost-node-post-message","text":"<p>This node will send the feedback and the analysis score to the <code>feedback</code> channel in Mattermost. If you have a different channel, use that instead.</p> <ol> <li>Create a Mattermost node connected to the 'true' output of the IF node.</li> <li>You'll have to enter credentials for the Mattermost node. You can find out how to enter credentials for this node here.</li> <li>Select a channel from the Channel ID dropdown list.</li> <li> <p>Click on the gears icon next to the Message field click on Add Expression.</p> </li> <li> <p>Enter the following message in the Expression field: <code>You got new feedback with a score of {{$json[\"SentimentScore\"][\"Negative\"]}}. Here is what it says:{{$node[\"Typeform Trigger\"].json[\"What did you think about the event?\"]}}</code>.</p> </li> <li>Click on Execute Node to run the workflow.</li> </ol> <p>In the screenshot below, you will notice that the node sends the feedback and the analysis score to the <code>feedback</code> channel in Mattermost.</p> <p></p>","title":"4. Mattermost node (post: message)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.awsComprehend/#5-noop-node","text":"<p>Adding this node here is optional, as the absence of this node won't make a difference to the functioning of the workflow.</p> <ol> <li>Create a NoOp node connected to the 'false' output of the IF node.</li> <li>Click on Execute Node to run the node.</li> </ol> <p></p>  <p> Activate workflow for production</p> <p>This example workflow uses the Typeform Trigger node. You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered when a new form is submitted.</p>","title":"5. NoOp node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.awsDynamoDb/","text":"<p>AWS DynamoDB is a key-value and document database provided by Amazon as a part of Amazon Web Services.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"AWS DynamoDB"},{"location":"workflow/integrations/nodes/workflow-nodes-base.awsDynamoDb/#basic-operations","text":"<ul> <li>Item</li> <li>Create a new record, or update the current one if it already exists (upsert/put)</li> <li>Delete an item</li> <li>Get an item</li> <li>Get all items</li> </ul>","title":"Basic operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.awsDynamoDb/#example-usage","text":"<p>This workflow allows you to insert an item into your DynamoDB database. This example usage workflow would use the following two nodes. - Start - Function - AWS DynamoDB</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.awsDynamoDb/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.awsDynamoDb/#2-function-node","text":"<p>The function node will return the item to insert, properly formatted for our table structure <code>id: number</code>.</p> <ol> <li>Enter the following snippet:     <pre><code>return [\n  {\n    json: {\n      id: {\n        'N': '1'\n      }\n    }\n  }\n]\n</code></pre> </li> </ol>","title":"2. Function node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.awsDynamoDb/#3-aws-dynamodb-node","text":"<ol> <li>First enter credentials for the AWS DynamoDB node. You can find out how to do that here.</li> <li>The Item Resource is selected by default.</li> <li>Select the Create or Update Operation.</li> <li>Enter the Table Name where you are inserting data.</li> <li>In Data to Send select Define Below for Each Column.</li> <li>Click on Execute Node to run the workflow.</li> </ol>","title":"3. AWS DynamoDB node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.awsLambda/","text":"<p>AWS Lambda is an event-driven, serverless computing platform provided by Amazon as a part of Amazon Web Services. It is a computing service that runs code in response to events and automatically manages the computing resources required by that code.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"AWS Lambda"},{"location":"workflow/integrations/nodes/workflow-nodes-base.awsLambda/#basic-operations","text":"<ul> <li>Invoke a function</li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.awsLambda/#example-usage","text":"<p>This workflow allows you to invoke a function using AWS Lambda. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - AWS Lambda</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.awsLambda/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.awsLambda/#2-aws-lambda-node","text":"<ol> <li>First of all, you'll have to enter credentials for the AWS Lambda node. You can find out how to do that here.</li> <li>Select the function that you want to invoke from the Function dropdown list.</li> <li>Click on Execute Node to run the workflow.</li> </ol>","title":"2. AWS Lambda node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.awsRekognition/","text":"<p>AWS Rekognition allows you to add image and video analysis to your applications. With AWS Rekognition, you can identify faces, labels, and celebrities in images.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"AWS Rekognition"},{"location":"workflow/integrations/nodes/workflow-nodes-base.awsRekognition/#basic-operations","text":"<p>Image</p> <ul> <li>Analyze</li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.awsRekognition/#example-usage","text":"<p>This workflow allows you to detect a face from an image using the AWS Rekognition node. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Start - HTTP Request - AWS Rekognition</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.awsRekognition/#1-start-node","text":"<p>The Start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.awsRekognition/#2-http-request-node-get","text":"<p>This example workflow uses the HTTP Request node to fetch an image from a URL. You can also use the Read Binary File node to read an image file from the path you specify.</p> <ol> <li>Enter the URL of the image in the URL field. For example, <code>https://n8n.io/_nuxt/img/04c67e5.png</code>.</li> <li>Select 'File' from the Response Format dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the HTTP Request node fetches the image from the URL. This image gets passed on as binary data to the next node in the workflow.</p> <p></p>","title":"2. HTTP Request node (GET)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.awsRekognition/#3-aws-rekognition-node-analyze-image","text":"<p>This node will detect faces in the image that we fetched in the previous node. You can also use this node to analyze an image stored in your AWS Bucket.</p> <ol> <li>First of all, you'll have to enter credentials for the AWS Rekognition node. You can find out how to enter credentials for this node here.</li> <li>Set Binary Data to <code>true</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will observe that the node detects the face in the image that we got from the HTTP Request node.</p> <p></p>","title":"3. AWS Rekognition node (analyze: image)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.awsS3/","text":"<p>AWS S3 is a service offered by Amazon Web Services that provides object storage through a web service interface.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"AWS S3"},{"location":"workflow/integrations/nodes/workflow-nodes-base.awsS3/#basic-operations","text":"<ul> <li>Bucket<ul> <li>Create a bucket</li> <li>Delete a bucket</li> <li>Get all buckets</li> <li>Search within a bucket</li> </ul> </li> <li>File<ul> <li>Copy a file</li> <li>Delete a file</li> <li>Download a file</li> <li>Get all files</li> <li>Upload a file</li> </ul> </li> <li>Folder<ul> <li>Create a folder</li> <li>Delete a folder</li> <li>Get all folders</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.awsS3/#example-usage","text":"<p>This workflow allows you to create a bucket on AWS S3. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - AWS S3</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.awsS3/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.awsS3/#2-aws-s3-node","text":"<ol> <li>First of all, you'll have to enter credentials for the AWS S3 node. You can find out how to do that here.</li> <li>Select 'Bucket' from the Resource dropdown list.</li> <li>Enter a name for your bucket in the Name field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>","title":"2. AWS S3 node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.awsSes/","text":"<p>AWS SES is a cost-effective, flexible, and scalable email service that enables developers to send mail from within any application.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"AWS SES"},{"location":"workflow/integrations/nodes/workflow-nodes-base.awsSes/#basic-operations","text":"<ul> <li>Custom Verification Email<ul> <li>Create a new custom verification email template</li> <li>Delete an existing custom verification email template</li> <li>Get the custom email verification template</li> <li>Get all the existing custom verification email templates for your account</li> <li>Add an email address to the list of identities</li> <li>Update an existing custom verification email template.</li> </ul> </li> <li>Email<ul> <li>Send</li> <li>Send Template</li> </ul> </li> <li>Template<ul> <li>Create a template</li> <li>Delete a template</li> <li>Get a template</li> <li>Get all templates</li> <li>Update a template</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.awsSes/#example-usage","text":"<p>This workflow allows you to send an email using AWS SES. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - AWS SES</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.awsSes/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.awsSes/#2-aws-sns-node","text":"<ol> <li>First of all, you'll have to enter credentials for the AWS SES node. You can find out how to do that here.</li> <li>Enter a subject for your email in the Subject field.</li> <li>Enter your message in the Body field.</li> <li>Enter the email address from which you want to send the email in the From Email field.</li> <li>Click on the Add To Email button and add your recipient email addresses.</li> <li>Click on Execute Node to run the workflow.</li> </ol>","title":"2. AWS SNS node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.awsSns/","text":"<p>AWS SNS is a notification service provided as part of Amazon Web Services. It provides a low-cost infrastructure for the mass delivery of messages, predominantly to mobile users.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"AWS SNS"},{"location":"workflow/integrations/nodes/workflow-nodes-base.awsSns/#basic-operations","text":"<ul> <li>Publish a message to a topic</li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.awsSns/#example-usage","text":"<p>This workflow allows you to publish a message using AWS SNS. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - AWS SNS</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.awsSns/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.awsSns/#2-aws-sns-node","text":"<ol> <li>First of all, you'll have to enter credentials for the AWS SNS node. You can find out how to do that here.</li> <li>Select the topic in the Topic dropdown list. You can find instructions on how to create a new topic in AWS SNS here.</li> <li>Enter a subject for your message in the Subject field.</li> <li>Enter your message in the Message field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>","title":"2. AWS SNS node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.awsSqs/","text":"<p>AWS SQS is a fully managed message queuing service that enables you to decouple and scale microservices, distributed systems, and serverless applications.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"AWS SQS"},{"location":"workflow/integrations/nodes/workflow-nodes-base.awsSqs/#basic-operations","text":"<ul> <li>Send a message to a queue.</li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.awsSqs/#example-usage","text":"<p>This workflow allows you to send position updates of the ISS every minute to a queue using the AWS SQS node. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Cron - HTTP Request - Set - AWS SQS</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.awsSqs/#1-cron-node","text":"<p>The Cron node will trigger the workflow every minute.</p> <ol> <li>Click on Add Cron Time.</li> <li>Select 'Every Minute' from the Mode dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the Cron node is configured to trigger the workflow every minute.</p> <p></p>","title":"1. Cron node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.awsSqs/#2-http-request-node-get","text":"<p>This node will make a GET request to the API <code>https://api.wheretheiss.at/v1/satellites/25544/positions</code> to fetch the position of the ISS. This information gets passed on to the next node in the workflow.</p> <ol> <li>Enter <code>https://api.wheretheiss.at/v1/satellites/25544/positions</code> in the URL field.</li> <li>Click on the Add Parameter button in the Query Parameters section.</li> <li>Enter <code>timestamps</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Enter the following expression: <code>{{Date.now()}}</code>. This expression will return the current timestamp.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node makes a GET request to the API and returns the information about the location of the ISS.</p> <p></p>","title":"2. HTTP Request node (GET)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.awsSqs/#3-set-node","text":"<p>We will use the Set node to ensure that only the data that we set in this node gets passed on to the next nodes in the workflow.</p> <ol> <li>Click on Add Value and select 'String' from the dropdown list.</li> <li>Enter <code>Name</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; HTTP Request &gt; Output Data &gt; JSON &gt; 0 &gt; name. You can also add the following expression: <code>{{$node[\"HTTP Request\"].json[\"0\"][\"name\"]}}</code>.</li> <li>Click on Add Value and select 'Number' from the dropdown list.</li> <li>Enter <code>Latitude</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; HTTP Request &gt; Output Data &gt; JSON &gt; 0 &gt; latitude. You can also add the following expression: <code>{{$node[\"HTTP Request\"].json[\"0\"][\"latitude\"]}}</code>.</li> <li>Click on Add Value and select 'Number' from the dropdown list.</li> <li>Enter <code>Longitude</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; HTTP Request &gt; Output Data &gt; JSON &gt; 0 &gt; longitude. You can also add the following expression: <code>{{$node[\"HTTP Request\"].json[\"0\"][\"longitude\"]}}</code>.</li> <li>Click on Add Value and select 'Number' from the dropdown list.</li> <li>Enter <code>Timestamp</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; HTTP Request &gt; Output Data &gt; JSON &gt; 0 &gt; timpestamp. You can also add the following expression: <code>{{$node[\"HTTP Request\"].json[\"0\"][\"timestamp\"]}}</code>.</li> <li>Toggle Keep Only Set to <code>true</code>. We set this option to true to ensure that only the data that we have set in this node get passed on to the next nodes in the workflow.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node uses the data from the previous node and returns the data that we set for the workflow.</p> <p></p>","title":"3. Set node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.awsSqs/#4-aws-sqs-node","text":"<p>This node will send the data from the previous node to the <code>iss-position</code> queue. If you have created a queue with a different one, you can use that queue instead.</p> <ol> <li>First of all, you'll have to enter credentials for the AWS SQS node. You can find out how to do that here.</li> <li>Select the queue from the Queue dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node sends the data from the previous node to the <code>iss-position</code> queue in ActiveMQ.</p> <p></p>  <p> Activate workflow for production</p> <p>This example workflow uses the Cron node, which is a Trigger node. You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Cron node.</p>","title":"4. AWS SQS node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.awsTextract/","text":"<p>AWS Textract is a service that extracts printed text, handwriting, and data from any document.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"AWS Textract"},{"location":"workflow/integrations/nodes/workflow-nodes-base.awsTextract/#basic-operations","text":"<ul> <li>Analyze Receipt or Invoice</li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.awsTextract/#example-usage","text":"<p>This workflow allows you to extract data from a an invoice stored in AWS S3. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Start - AWS S3 - AWS Textract</p> <p>The final workflow looks like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.awsTextract/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.awsTextract/#2-aws-s3-node-download-file","text":"<p>This node will retrieve an image file with a receipt from an S3 bucket.</p> <ol> <li>Choose your credentials for the AWS S3 node. See here for information on how to create these credentials.</li> <li>Enter the bucket name in the Bucket Name field.</li> <li>Enter the file key in the File Key field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below you can see the file returned by the node.</p> <p></p>","title":"2. AWS S3 node (download: file)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.awsTextract/#3-aws-textract-node-analyzeexpense","text":"<p>This node will extract data from the receipt returned by the previous node.</p> <ol> <li>Choose your AWS credentials.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you can see the receipt data extracted by AWS Textract and returned by the node.</p> <p></p>","title":"3. AWS Textract node (analyzeExpense)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.awsTranscribe/","text":"<p>AWS Transcribe is a service that recognizes speech in your audio or video and transcribes that speech into text.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"AWS Transcribe"},{"location":"workflow/integrations/nodes/workflow-nodes-base.awsTranscribe/#basic-operations","text":"<p>Transcription Job - Create a transcription job - Delete a transcription job - Get a transcription job - Get all transcriptions job</p>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.awsTranscribe/#example-usage","text":"<p>This workflow allows you to create transcription jobs for all your audio and video files stored in AWS S3. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Start - AWS S3 - AWS Transcribe</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.awsTranscribe/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.awsTranscribe/#2-aws-s3-node-getall-file","text":"<p>This node will retrieve all the files from an S3 bucket you specify.</p> <ol> <li>First of all, you'll have to enter credentials for the AWS S3 node. You can find out how to do that here.</li> <li>Select 'Get All' from the Operation dropdown list.</li> <li>Enter the bucket name in the Bucket Name field.</li> <li>Toggle Return All to <code>true</code>. This option will return information on all the files stored in the S3 bucket.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns information of all the files stored in the bucket you specified.</p> <p></p>","title":"2. AWS S3 node (getAll: file)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.awsTranscribe/#3-aws-transcribe-node-create-transcriptionjob","text":"<p>This node will create a transcription job for the files that get returned by the previous node.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Click on the gears icon next to the Job Name field and click on Add Expression.</li> <li>Enter <code>{{$json[\"Key\"].replace(/\\s/g,'-')}}</code> in the Expression field. The code snippet fetches the name of the file and replaces the white-spaces with a hyphen (-).</li> <li>Click on the gears icon next to the Media File URI field and click on Add Expression.</li> <li>Enter <code>s3://{{$node[\"AWS S3\"].parameter[\"bucketName\"]}}/{{$json[\"Key\"]}}</code> in the Expression field.</li> <li>Toggle Detect Language to <code>true</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node creates a transcription job for the files stored in an S3 bucket.</p> <p></p>","title":"3. AWS Transcribe node (create: transcriptionJob)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.bambooHr/","text":"<p>BambooHR provides human resources software as a service.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"BambooHR"},{"location":"workflow/integrations/nodes/workflow-nodes-base.bambooHr/#basic-operations","text":"<ul> <li>Company Report<ul> <li>Get a company report</li> </ul> </li> <li>Employee<ul> <li>Create an employee</li> <li>Get an employee</li> <li>Get all employees</li> <li>Update an employee</li> </ul> </li> <li>Employee Document<ul> <li>Delete an employee document</li> <li>Download an employee document</li> <li>Get all employee document</li> <li>Update an employee document</li> <li>Upload an employee document</li> </ul> </li> <li>File<ul> <li>Delete a company file</li> <li>Download a company file</li> <li>Get all company files</li> <li>Update a company file</li> <li>Upload a company file</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.bannerbear/","text":"<p>Bannerbear is an API-based image generation service that automatically generates variations of graphic templates.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Bannerbear"},{"location":"workflow/integrations/nodes/workflow-nodes-base.bannerbear/#basic-operations","text":"<ul> <li>Image<ul> <li>Create an image</li> <li>Get an image</li> </ul> </li> <li>Template<ul> <li>Get a template</li> <li>Get all templates</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.bannerbear/#example-usage","text":"<p>This workflow allows you to create an image using the Bannerbear welcome template. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - Bannerbear</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.bannerbear/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.bannerbear/#2-bannerbear-node","text":"<ol> <li>First of all, you'll have to enter credentials for the Bannerbear node. You can find out how to do that here.</li> <li>Select 'Welcome Template' from the Template ID dropdown list.</li> <li>Click on the Add Field dropdown, select 'Wait for Image', and set the slider is set to 'on'.</li> <li>Click on the Add Modification button and select 'message' from the Name dropdown list.</li> <li>Enter the text in the Text field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>","title":"2. Bannerbear node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.baserow/","text":"<p>Baserow is an open source no-code database and Airtable alternative.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Baserow"},{"location":"workflow/integrations/nodes/workflow-nodes-base.baserow/#basic-operations","text":"<ul> <li>Row<ul> <li>Create a row</li> <li>Delete a row</li> <li>Retrieve a row</li> <li>Retrieve all rows</li> <li>Update a row</li> </ul> </li> </ul>","title":"Basic operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.baserow/#example","text":"<p>This workflow allows you to create, find, and delete rows in Baserow default Customer table. This example workflow uses the following nodes.</p> <ul> <li>Start</li> <li>Set</li> <li>Baserow</li> </ul> <p>The final workflow should look like the following image:</p> <p></p> <p>For this workflow you need an account to any Baserow instance with the demo table <code>Customers</code>.</p>","title":"Example"},{"location":"workflow/integrations/nodes/workflow-nodes-base.baserow/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.baserow/#2-set-node","text":"<p>We will use the Set node to set the values for the <code>name</code> and <code>id</code> fields of a new record.</p> <ol> <li>Click on the Add Value button and select 'String' from the dropdown list.</li> <li>Enter <code>Name</code> in the Name field.</li> <li>Enter a name in the Value field.</li> <li>Click on the Add Value button and select 'String' from the dropdown list.</li> <li>Enter <code>Last name</code> in the Name field.</li> <li>Enter a last name in the Value field.</li> <li>Click on the Add Value button and select 'Boolean' from the dropdown list.</li> <li>Enter <code>Active</code> in the Name field.</li> <li>Check the value.</li> <li>Click on Execute Node to run the node.</li> </ol>","title":"2. Set node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.baserow/#3-baserow-node-create","text":"<p>This node will create a row in the <code>Customers</code> table with the content from the previous node.</p> <ol> <li>Enter your credentials for the Baserow node. You can find out how to create credentials here.</li> <li>Enter your Baserow instance URL (default value is for official version).</li> <li>Select 'Create' from the Operation dropdown list.</li> <li>Enter the Table ID in the Table ID field. For obtaining the Table ID, see the Database API page available from the database menu.</li> <li>Click on Execute Node to run the node.</li> </ol>","title":"3. Baserow node (Create)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.baserow/#4-baserow-node-list","text":"<p>This node will list all the rows with the name <code>Bill</code>. If you want to list records with a different name, use that name instead.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Click on the gears icon next to the Host field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Baserow &gt; Parameters &gt; Host. You can also add the following expression: <code>{{$node[\"Baserow\"].parameter[\"host\"]}}</code>.</li> <li>Select the 'List' option from the Operation dropdown list.</li> <li>Click on the gears icon next to the Table ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Baserow &gt; Parameters &gt; Table. You can also add the following expression: <code>{{$node[\"Baserow\"].parameter[\"table\"]}}</code>.</li> <li>Click on Add Option and select 'Search' from the dropdown list.</li> <li>Enter <code>Bill</code> in the Search field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>You will notice that the node only returns the record with a column containing <code>Bill</code>.</p>","title":"4. Baserow node (List)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.baserow/#5-baserow-node-delete","text":"<p>This node will delete all the rows listed from the previous node.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Click on the gears icon next to the Host field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Baserow &gt; Parameters &gt; Host. You can also add the following expression: <code>{{$node[\"Baserow\"].parameter[\"host\"]}}</code>.</li> <li>Select the 'Delete' option from the Operation dropdown list.</li> <li>Click on the gears icon next to the Table ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Baserow &gt; Parameters &gt; Table. You can also add the following expression: <code>{{$node[\"Baserow\"].parameter[\"table\"]}}</code>.</li> <li>Click on the gears icon next to the Row ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$json[\"id\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol>","title":"5. Baserow node (Delete)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.beeminder/","text":"<p>Beeminder is a service that helps you to self-track and stick to your goals.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Beeminder"},{"location":"workflow/integrations/nodes/workflow-nodes-base.beeminder/#basic-operations","text":"<p>Datapoint - Create datapoint for a goal - Delete a datapoint - Get all datapoints for a goal - Update a datapoint</p>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.beeminder/#example-usage","text":"<p>This workflow allows you to add a datapoint to Beeminder when a new activity gets added to Strava. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Strava Trigger - Beeminder</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.beeminder/#1-strava-trigger-node","text":"<p>This node will trigger the workflow whenever a new activity gets added to your Strava account.</p> <ol> <li>First of all, you'll have to enter credentials for the Strava Trigger node. You can find out how to do that here.</li> <li>Select 'created' from the Event dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node triggers the workflow when a new activity gets added to Strava.</p> <p></p>","title":"1. Strava Trigger node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.beeminder/#2-beeminder-node-create-datapoint","text":"<p>This node will create a datapoint for the goal <code>testing</code>. If you have created a goal with a different name, select that goal instead.</p> <ol> <li>First of all, you'll have to enter credentials for the Beeminder node. You can find out how to do that here.</li> <li>Select a goal from the Goal Name dropdown list.</li> <li>Click on Add Field and select 'Comment'.</li> <li> <p>Click on the gears icon next to the Comment field and click on Add Expression.</p> </li> <li> <p>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; object_data &gt; name. You can also add the following expression: <code>{{$json[\"object_data\"][\"name\"]}}</code>.</p> </li> <li> <p>Click on Execute Node to run the node.</p> </li> </ol> <p>In the screenshot below, you will notice that the node creates a datapoint in Beeminder.</p> <p></p>  <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Strava Trigger node.</p>","title":"2. Beeminder node (create: datapoint)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.bitly/","text":"<p>Bitly is URL shortening service and a link management platform that allows users to shorten, create and share trusted, powerful links for businesses.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Bitly"},{"location":"workflow/integrations/nodes/workflow-nodes-base.bitly/#basic-operations","text":"<ul> <li>Link<ul> <li>Create a link</li> <li>Get a link</li> <li>Update a link</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.bitly/#example-usage","text":"<p>This workflow shows you how to create a new link. You can also find the workflow on the website. This example usage workflow uses the following two nodes. - Start - Bitly</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.bitly/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.bitly/#2-bitly-node","text":"<ol> <li>First of all, you'll have to enter credentials for the Twilio node. You can find out how to do that here.</li> <li>Enter the URL in the Long URL field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>","title":"2. Bitly node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.bitwarden/","text":"<p>Bitwarden is an open-source password management solution for individuals, teams, and business organizations.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Bitwarden"},{"location":"workflow/integrations/nodes/workflow-nodes-base.bitwarden/#basic-operations","text":"<ul> <li>Collection<ul> <li>Delete</li> <li>Get</li> <li>Get All</li> <li>Update</li> </ul> </li> <li>Event<ul> <li>Get All</li> </ul> </li> <li>Group<ul> <li>Create</li> <li>Delete</li> <li>Get</li> <li>Get All</li> <li>Get Members</li> <li>Update</li> <li>Update Members</li> </ul> </li> <li>Member<ul> <li>Create</li> <li>Delete</li> <li>Get</li> <li>Get All</li> <li>Get Groups</li> <li>Update</li> <li>Update Groups</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.bitwarden/#example-usage","text":"<p>This workflow allows you to create a group, add members to the group, and get the members of the group in Bitwarden. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Start - Bitwarden</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.bitwarden/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.bitwarden/#2-bitwarden-node-create-group","text":"<p>This node will create a new group called <code>documentation</code> in Bitwarden.</p> <ol> <li>First of all, you'll have to enter credentials for the Bitwarden node. You can find out how to do that here.</li> <li>Select 'Group' from the Resource dropdown list.</li> <li>Select 'Create' from the Operation dropdown list.</li> <li>Enter <code>documentation</code> in the Name field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node creates a new group in Bitwarden.</p> <p></p>","title":"2. Bitwarden node (create: group)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.bitwarden/#3-bitwarden1-node-getall-member","text":"<p>This node will get all the members from Bitwarden.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Member' from the Resource dropdown list.</li> <li>Select 'Get All' from the Operation dropdown list.</li> <li>Toggle Return All to <code>true</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node retrieves all the members from Bitwarden.</p> <p></p>","title":"3. Bitwarden1 node (getAll: member)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.bitwarden/#4-bitwarden2-node-updatemembers-group","text":"<p>This node will update all the members in the group that we created earlier.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Group' from the Resource dropdown list.</li> <li>Select 'Update Members' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Group ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Bitwarden &gt; Output Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$node[\"Bitwarden\"].json[\"id\"]}}</code>.</li> <li>Click on the gears icon next to the Member IDs field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$json[\"id\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node updates the members of the group.</p> <p></p>","title":"4. Bitwarden2 node (updateMembers: group)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.bitwarden/#5-bitwarden3-node-getmembers-group","text":"<p>This node will get all the members in the group that we created earlier.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Group' from the Resource dropdown list.</li> <li>Select 'Get Members' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Group ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Bitwarden &gt; Output Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$node[\"Bitwarden\"].json[\"id\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node retrieves the members in the group.</p> <p></p>","title":"5. Bitwarden3 node (getMembers: group)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.box/","text":"<p>Box is a cloud computing company which provides file sharing, collaborating, and other tools for working with files that are uploaded to its servers.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Box"},{"location":"workflow/integrations/nodes/workflow-nodes-base.box/#basic-operations","text":"<ul> <li>File<ul> <li>Copy a file</li> <li>Delete a file</li> <li>Download a file</li> <li>Get a file</li> <li>Search files</li> <li>Share a file</li> <li>Upload a file</li> </ul> </li> <li>Folder<ul> <li>Create a folder</li> <li>Get a folder</li> <li>Delete a folder</li> <li>Search files</li> <li>Share a folder</li> <li>Update folder</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.box/#example-usage","text":"<p>This workflow allows you to create a folder on Box. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - Box</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.box/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.box/#2-box-node","text":"<ol> <li>First of all, you'll have to enter credentials for the Box node. You can find out how to do that here.</li> <li>Select the 'Folder' option from the Resource dropdown list.</li> <li>Enter the name of the folder in the Name field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>","title":"2. Box node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.bubble/","text":"<p>Bubble lets you create interactive, multi-user apps for desktop and mobile web browsers.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Bubble"},{"location":"workflow/integrations/nodes/workflow-nodes-base.bubble/#basic-operations","text":"<ul> <li>Object<ul> <li>Create</li> <li>Delete</li> <li>Get</li> <li>Get All</li> <li>Update</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.bubble/#example-usage","text":"<p>This workflow allows you to create, update, and get an object from Bubble. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Start - Bubble</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.bubble/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.bubble/#2-bubble-node-create-object","text":"<p>This node will create a new object of the type <code>Doc</code> in Bubble. If you want to create an object with a different type, use that type instead.</p> <ol> <li>First of all, you'll have to enter credentials for the Bubble node. You can find out how to do that here.</li> <li>Select 'Create' from the Operation dropdown list.</li> <li>Enter <code>Doc</code> in the Type Name field.</li> <li>Click on the Add Property button.</li> <li>Enter <code>Name</code> in the Key field. If you're using a different type, enter the field name present in the type.</li> <li>Enter <code>Bubble</code> in the Value field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node creates a new object of the type <code>Doc</code> in Bubble.</p> <p></p>","title":"2. Bubble node (create: object)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.bubble/#3-bubble1-node-update-object","text":"<p>This node will update the object that we created using the previous node.</p> <ol> <li>Select the credentials that you entered in the previous Bubble node.</li> <li>Select 'Update' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Type Name field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Bubble &gt; Parameters &gt; typeName. You can also add the following expression: <code>{{$node[\"Bubble\"].parameter[\"typeName\"]}}</code>.</li> <li>Click on the gears icon next to the Object ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$json[\"id\"]}}</code>.</li> <li>Click on the Add Property button.</li> <li>Enter <code>Name</code> in the Key field. If you're using a different type, enter the field name present in the type.</li> <li>Enter <code>Bubble node</code> in the Value field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node updates the information of the object that got created previously.</p> <p></p>","title":"3. Bubble1 node (update: object)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.bubble/#4-bubble2-node-get-object","text":"<p>This node will retrieve the information of the object that we created earlier.</p> <ol> <li>Select the credentials that you entered in the previous Bubble node.</li> <li>Click on the gears icon next to the Type Name field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Bubble &gt; Parameters &gt; typeName. You can also add the following expression: <code>{{$node[\"Bubble\"].parameter[\"typeName\"]}}</code>.</li> <li>Click on the gears icon next to the Object ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Bubble &gt; Output Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$node[\"Bubble\"].json[\"id\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node retrieves the information of the object that we created earlier.</p> <p></p>","title":"4. Bubble2 node (get: object)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.chargebee/","text":"<p>Chargebee is a billing platform for subscription based SaaS and eCommerce businesses. Chargebee integrates with payment gateways to let you automate recurring payment collection along with invoicing, taxes, accounting, email notifications, SaaS Metrics and customer management.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Chargebee"},{"location":"workflow/integrations/nodes/workflow-nodes-base.chargebee/#basic-operations","text":"<ul> <li>Customer<ul> <li>Create a customer</li> </ul> </li> <li>Invoice<ul> <li>Return the invoices</li> <li>Get URL for the invoice PDF</li> </ul> </li> <li>Subscription<ul> <li>Cancel a subscription</li> <li>Delete a subscription</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.chargebee/#example-usage","text":"<p>This workflow allows you to create a new customer in Chargebee. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - Chargebee</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.chargebee/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.chargebee/#2-chargebee-node","text":"<ol> <li>First of all, you'll have to enter credentials for the Chargebee node. You can find out how to do that here.</li> <li>Select the 'Customer' option from the Resource dropdown list.</li> <li>Under the Properties section, click on the Add Property button and select First Name.</li> <li>Enter the first name of the contact in the First Name field.</li> <li>Click on Add Property again and select Last Name.</li> <li>Enter the last name of the contact in the Last name field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>","title":"2. Chargebee node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.circleCi/","text":"<p>CircleCI is a continuous integration and delivery platform helps teams release quality code, faster.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"CircleCI"},{"location":"workflow/integrations/nodes/workflow-nodes-base.circleCi/#basic-operations","text":"<ul> <li>Pipeline<ul> <li>Get a pipeline</li> <li>Get all pipelines</li> <li>Trigger a pipeline</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.circleCi/#example-usage","text":"<p>This workflow allows you to get a pipeline in CircleCI. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - CircleCI</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.circleCi/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.circleCi/#2-circleci-node","text":"<ol> <li>First of all, you'll have to enter credentials for the CircleCI node. You can find out how to do that here.</li> <li>Select the VCS provider from the dropdown in the Provider field.</li> <li>Enter the project slug in the Project Slug field.</li> <li>Enter the number of the pipeline in CircleCI that you want to get in the Pipeline Number field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>","title":"2. CircleCI node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.ciscoWebex/","text":"<p>Webex by Cisco is a web conferencing and videoconferencing application.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Webex by Cisco"},{"location":"workflow/integrations/nodes/workflow-nodes-base.ciscoWebex/#basic-operations","text":"<ul> <li>Meeting<ul> <li>Create</li> <li>Delete</li> <li>Get</li> <li>Get All</li> <li>Update</li> </ul> </li> <li>Message<ul> <li>Create</li> <li>Delete</li> <li>Get</li> <li>Get All</li> <li>Update</li> </ul> </li> </ul>","title":"Basic operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.ciscoWebex/#example-usage","text":"<p>This workflow allows you to create a new meeting. This example usage workflow uses the following node:</p> <ul> <li>Webex by Cisco</li> </ul> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.ciscoWebex/#1-webex-by-cisco-node","text":"<ol> <li>First enter your credentials for node. You can find out how to do that here.</li> <li>Select 'Meeting' from the Resource dropdown list.</li> <li>Select 'Create' from the Operation dropdown list.</li> <li>Enter a Title for your new meeting.</li> <li>Select the Start and End times for the meeting.</li> <li>Optionally, use the Additional Fields menu to add further meeting details, for example an agenda, set the invitees, or a meeting recurrence.</li> <li>Click on Execute Node to run the workflow.</li> </ol> <p></p>","title":"1. Webex by Cisco node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.clearbit/","text":"<p>Clearbit provides powerful products, and data APIs like contact enrichment, lead generation, financial compliance, and more to help businesses grow.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Clearbit"},{"location":"workflow/integrations/nodes/workflow-nodes-base.clearbit/#basic-operations","text":"<ul> <li>Company<ul> <li>Auto-complete company names and retrieve logo and domain</li> <li>Look up person and company data based on an email or domain</li> </ul> </li> <li>Person<ul> <li>Look up a person and company data based on an email or domain</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.clearbit/#example-usage","text":"<p>This workflow allows you to look up a person using their email in Clearbit. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - Clearbit</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.clearbit/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.clearbit/#2-clearbit-node","text":"<ol> <li>First of all, you'll have to enter credentials for the Clearbit node. You can find out how to do that here.</li> <li>Select the 'Person' option from the Resource dropdown list.</li> <li>Enter the email of the person you want to look up in the Email field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>","title":"2. Clearbit node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.clickUp/","text":"<p>ClickUp is a cloud-based collaboration and project management tool suitable for businesses of all sizes and industries. Features include communication and collaboration tools, task assignments and statuses, alerts and a task toolbar.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"ClickUp"},{"location":"workflow/integrations/nodes/workflow-nodes-base.clickUp/#basic-operations","text":"<ul> <li>Checklist<ul> <li>Create a checklist</li> <li>Delete a checklist</li> <li>Update a checklist</li> </ul> </li> <li>Checklist Item<ul> <li>Create a checklist item</li> <li>Delete a checklist item</li> <li>Update a checklist item</li> </ul> </li> <li>Comment<ul> <li>Create a comment</li> <li>Delete a comment</li> <li>Get all comments</li> <li>Update a comment</li> </ul> </li> <li>Folder<ul> <li>Create a folder</li> <li>Delete a folder</li> <li>Get a folder</li> <li>Get all folders</li> <li>Update a folder</li> </ul> </li> <li>Goal<ul> <li>Create a goal</li> <li>Delete a goal</li> <li>Get a goal</li> <li>Get all goals</li> <li>Update a goal</li> </ul> </li> <li>Goal Key Result<ul> <li>Create a key result</li> <li>Delete a key result</li> <li>Update a key result</li> </ul> </li> <li>List<ul> <li>Create a list</li> <li>Retrieve list's custom fields</li> <li>Delete a list</li> <li>Get a list</li> <li>Get all lists</li> <li>Get list members</li> <li>Update a list</li> </ul> </li> <li>Space Tag<ul> <li>Create a space tag</li> <li>Delete a space tag</li> <li>Get all space tags</li> <li>Update a space tag</li> </ul> </li> <li>Task<ul> <li>Create a task</li> <li>Delete a task</li> <li>Get a task</li> <li>Get all tasks</li> <li>Get task members</li> <li>Set a custom field</li> <li>Update a task</li> </ul> </li> <li>Task List<ul> <li>Add a task to a list</li> <li>Remove a task from a list</li> </ul> </li> <li>Task Tag<ul> <li>Add a tag to a task</li> <li>Remove a tag from a task</li> </ul> </li> <li>Task Dependency<ul> <li>Create a task dependency</li> <li>Delete a task dependency</li> </ul> </li> <li>Time Entry<ul> <li>Create a time entry</li> <li>Delete a time entry</li> <li>Get a time entry</li> <li>Get all time entries</li> <li>Start a time entry</li> <li>Stop the current running timer</li> <li>Update a time Entry</li> </ul> </li> <li>Time Entry Tag<ul> <li>Add tag to time entry</li> <li>Get all time entry tags</li> <li>Remove tag from time entry</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.clickUp/#example-usage","text":"<p>This workflow allows you to create a task in ClickUp. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - ClickUp</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.clickUp/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.clickUp/#2-clickup-node","text":"<ol> <li>First of all, you'll have to enter credentials for the ClickUp node. You can find out how to do that here.</li> <li>Select your team ID from the Team ID dropdown list.</li> <li>Select your space ID from the Space ID dropdown list.</li> <li>Select your folder ID from the Folder ID dropdown list.</li> <li>Select your list ID from the List ID dropdown list.</li> <li>Enter the name of the task in the Name field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>","title":"2. ClickUp node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.clockify/","text":"<p>Clockify is a free time tracker and timesheet app for tracking work hours across projects.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Clockify"},{"location":"workflow/integrations/nodes/workflow-nodes-base.clockify/#basic-operations","text":"<ul> <li>Project<ul> <li>Create a project</li> <li>Delete a project</li> <li>Get a project</li> <li>Get all projects</li> <li>Update a project</li> </ul> </li> <li>Tag<ul> <li>Create a tag</li> <li>Delete a tag</li> <li>Get all tags</li> <li>Update a tag</li> </ul> </li> <li>Task<ul> <li>Create a task</li> <li>Delete a task</li> <li>Get a task</li> <li>Get all tasks</li> <li>Update a task</li> </ul> </li> <li>Time Entry<ul> <li>Create a time entry</li> <li>Delete a time entry</li> <li>Get time entrie</li> <li>Update a time entry</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.clockify/#example-usage","text":"<p>This workflow allows you to create a project, tag, and time entry in Clockify. It also allows you to update the time entry in Clockify. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Start - Clockify</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.clockify/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.clockify/#2-clockify-node-create-project","text":"<p>This node will create a private project with a custom color. It will also add a note to the project in Clockify.</p> <ol> <li>First of all, you'll have to enter credentials for the Clockify node. You can find out how to do that here.</li> <li>Select the Workspace ID from the dropdown list.</li> <li>Enter the name of the project in the Project Name field.</li> <li>Click on Add Field and select 'Color' from the dropdown list.</li> <li>Select the color from the color-picker or enter the hexadecimal value of the color in the Color field.</li> <li>Click on Add Field and select 'Is Public' from the dropdown list.</li> <li>Toggle Is Public to false.</li> <li>Click on Add Field and select 'Note' from the dropdown list.</li> <li>Enter the note in the Note field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node creates a new private project called <code>n8n-docs</code>. This project has a custom color <code>#0000FF</code> and a note <code>For n8n-docs</code>.</p> <p></p>","title":"2. Clockify node (create: project)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.clockify/#3-clockify1-node-create-tag","text":"<p>This node will create a new tag in Clockify.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Tag' from the Resource dropdown list.</li> <li>Select the Workspace ID from the dropdown list.</li> <li>Enter the name of the tag in the Name field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node creates a new tag called <code>docs</code> in the Doc\u00b2 workspace in Clockify.</p> <p></p>","title":"3. Clockify1 node (create: tag)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.clockify/#4-clockify2-node-create-timeentry","text":"<p>This node creates a new time entry in Clockify with a description. It also adds the tag that we created in the previous step to the time entry.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Time Entry' from the Resource dropdown list.</li> <li>Select the Workspace ID from the dropdown list.</li> <li>Select a start date and time for the Start field.</li> <li>Click on Add Field and select 'Description' from the dropdown list.</li> <li>Enter a description in the Description field.</li> <li>Click on Add Field and select 'End' from the dropdown list.</li> <li>Select a end date and time for the End field.</li> <li>Click on Add Field and select 'Tag IDs' from the dropdown list.</li> <li>Select the tag that you created in the previous step from the Tag IDs dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node creates a new time entry with a description and adds the tag that was created in the previous node.</p> <p></p>","title":"4. Clockify2 node (create: timeEntry)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.clockify/#5-clockify3-node-update-timeentry","text":"<p>This node will add the project to the time entry that was created by the Clockify node.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Time Entry' from the Resource dropdown list.</li> <li>Select 'Update' from the Operation dropdown list.</li> <li>Select the Workspace ID from the dropdown list.</li> <li>Click on the gears icon next to the Time Entry ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Clockify2 &gt; Output Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$node[\"Clockify2\"].json[\"id\"]}}</code>.</li> <li>Click on Add Field and select 'Project ID' from the dropdown list.</li> <li>Click on the gears icon next to the Project ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Clockify &gt; Output Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$node[\"Clockify\"].json[\"id\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node has updated the time entry by adding the project ID we created in the Clockify node.</p> <p></p>","title":"5. Clockify3 node (update: timeEntry)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.cockpit/","text":"<p>Cockpit is a headless CMS with an API-first approach that puts content first. It is designed to simplify the process of publication by separating content management from content consumption on the client side.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Cockpit"},{"location":"workflow/integrations/nodes/workflow-nodes-base.cockpit/#basic-operations","text":"<ul> <li>Collection<ul> <li>Create a collection entry</li> <li>Get all collection entries</li> <li>Update a collection entry</li> </ul> </li> <li>Form<ul> <li>Store data from a form submission</li> </ul> </li> <li>Singleton<ul> <li>Get a singleton</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.cockpit/#example-usage","text":"<p>This workflow allows you to get entries from a collection in Cockpit. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - Cockpit</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.cockpit/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.cockpit/#2-cockpit-node","text":"<ol> <li>First of all, you'll have to enter credentials for the Cockpit node. You can find out how to do that here.</li> <li>Select your collection from the Collection dropdown list.</li> <li>Click on Execute Node to run the workflow.</li> </ol>","title":"2. Cockpit node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.coda/","text":"<p>Coda is a new type of document that blends the flexibility of documents, the power of spreadsheets, and the utility of applications into a single new canvas.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Coda"},{"location":"workflow/integrations/nodes/workflow-nodes-base.coda/#basic-operations","text":"<ul> <li>Control<ul> <li>Get a control</li> <li>Get all controls</li> </ul> </li> <li>Formula<ul> <li>Get a formula</li> <li>Get all formulas</li> </ul> </li> <li>Table<ul> <li>Create/Insert a row</li> <li>Delete one or multiple rows</li> <li>Get all columns</li> <li>Get all the rows</li> <li>Get a column</li> <li>Get a row</li> <li>Pushes a button</li> </ul> </li> <li>View<ul> <li>Delete view row</li> <li>Get a view</li> <li>Get all views</li> <li>Get all views columns</li> <li>Get all views rows</li> <li>Update row</li> <li>Push view button</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.coda/#example-usage","text":"<p>This workflow allows you to insert data into a new row for a table in Coda. You can also find the workflow on the website. This example usage workflow would use the following three nodes. - Start - Set - Coda</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.coda/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.coda/#2-set-node","text":"<ol> <li>Click on the Add Value button and select 'String' from the dropdown list.</li> <li>Enter <code>Column 1</code>in the Name field.</li> <li>Enter the value for the first column in the Value field.</li> <li>Repeat the first three steps of all the columns that you have in your Coda table.</li> </ol> <p>Note: Here, we've used the default table in Coda, which has three columns namely Column 1, Column 2, and Column 3. Please make sure that the column names in the Name field matches the names of the table columns in Coda.</p>","title":"2. Set node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.coda/#3-coda-node","text":"<ol> <li>First of all, you'll have to enter credentials for the Coda node. You can find out how to do that here.</li> <li>Select the name of your document from the Doc dropdown list.</li> <li>Select the name of your table from the Table dropdown list.</li> <li>Click on Execute Node to run the workflow.</li> </ol>","title":"3. Coda node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.coinGecko/","text":"<p>CoinGecko provides a fundamental analysis of the crypto market. In addition to tracking price, volume and market capitalization, CoinGecko tracks community growth, open-source code development, major events, and on-chain metrics.</p>  <p>\ud83d\udd11 Credentials</p> <p>The CoinGecko node does not require authentication.</p>","title":"CoinGecko"},{"location":"workflow/integrations/nodes/workflow-nodes-base.coinGecko/#basic-operations","text":"<ul> <li>Coin<ul> <li>Get a candlestick open-high-low-close chart for the selected currency</li> <li>Get current data for a coin</li> <li>Get all coins</li> <li>Get historical data (name, price, market, stats) at a given date for a coin</li> <li>Get prices and market related data for all trading pairs that match the selected currency</li> <li>Get historical market data include price, market cap, and 24h volume (granularity auto)</li> <li>Get the current price of any cryptocurrencies in any other supported currencies that you need</li> <li>Get coin tickers</li> </ul> </li> <li>Event<ul> <li>Get all events</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.coinGecko/#example-usage","text":"<p>This workflow allows you to get the price of BTC in EUR using the CoinGecko node and send an SMS when the price is greater than or equal to \u20ac9000. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Cron - CoinGecko - IF - Twilio - No Operation, do nothing</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.coinGecko/#1-cron-node","text":"<p>The Cron node will trigger the workflow every minute.</p> <ol> <li>Click on Add Cron Time.</li> <li>Select 'Every Minute' from the Mode dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p></p>","title":"1. Cron node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.coinGecko/#2-coingecko-node-price-coin","text":"<p>This node will get the price of BTC in EUR using the CoinGecko API. Feel free to select a different Coin ID and Currency. 1. Select 'Price' from the Operation dropdown list. 2. Select 'BTC' from the Coin IDs dropdown list. 3. Select 'EUR' from the Currencies dropdown list. 4. Click on Execute Node to run the node.</p> <p>In the screenshot below, you will notice that the node fetches the price of 1 BTC in EUR. This information will be passed on to the next nodes in the workflow.</p> <p></p>","title":"2. CoinGecko node (price: coin)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.coinGecko/#3-if-node","text":"<p>This node will compare the price that we got from the CoinGecko node. If the price is greater than or equal to 9000, it will return true otherwise false.</p> <ol> <li>Click on Add Condition and select 'Number' from the dropdown list.</li> <li>Click on the gears icon next to the Value 1 field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; CoinGecko &gt; Output Data &gt; JSON &gt; bitcoin &gt; eur. You can also add the following expression: <code>{{$node[\"CoinGecko\"].json[\"bitcoin\"][\"eur\"]}}</code>.</li> <li>Select 'Larger Equal' from the Operation dropdown list.</li> <li>Set Value 2 to 9000.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns an output for true when the price is greater than 9000.</p> <p></p>","title":"3. IF node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.coinGecko/#4-twilio-node-send-sms","text":"<p>This node sends an SMS to a number when the price is greater than or equal to 9000.</p> <ol> <li>Connect this node with the true output of the IF node.</li> <li>You'll have to enter credentials for the Twilio node. You can find out how to do that here.</li> <li>Enter the Twilio phone number in the From field.</li> <li>Enter the receiver's phone number in the To field.</li> <li> <p>Click on the gears icon next to the Message field and click on Add Expression.</p> </li> <li> <p>Enter <code>The price went up! The new price is \u20ac{{$node[\"CoinGecko\"].json[\"bitcoin\"][\"eur\"]}}</code> in the Expression field.</p> </li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node sends an SMS with the price that we obtained from the CoinGecko node.</p> <p></p>","title":"4. Twilio node (send: sms)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.coinGecko/#5-noop-node","text":"<p>Adding this node here is optional, as the absence of this node won't make a difference to the functioning of the workflow.</p> <ol> <li>Connect this node with the false output of the IF node.</li> <li>Click on Execute Node to run the node.</li> </ol> <p></p>","title":"5. NoOp node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.contentful/","text":"<p>Contentful provides a content infrastructure for digital teams to power content in websites, apps, and devices. It offers a central hub for structured content, powerful management and delivery APIs, and a customizable web app.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Contentful"},{"location":"workflow/integrations/nodes/workflow-nodes-base.contentful/#basic-operations","text":"<ul> <li>Asset<ul> <li>Get</li> <li>Get All</li> </ul> </li> <li>Content Type<ul> <li>Get</li> </ul> </li> <li>Entry<ul> <li>Get</li> <li>Get All</li> </ul> </li> <li>Locale<ul> <li>Get All</li> </ul> </li> <li>Space<ul> <li>Get</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.contentful/#example-usage","text":"<p>This workflow allows you to get all the entries using the Delivery API of Contentful. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Start - Contentful</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.contentful/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.contentful/#2-contentful-node","text":"<ol> <li>First of all, you'll have to enter credentials for the Contentful node. You can find out how to do that here.</li> <li>Select 'Get All' from the Operation dropdown list.</li> <li>Toggle Return All to true.</li> <li>Click on Execute Node to run the node.</li> </ol> <p></p>","title":"2. Contentful node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.convertKit/","text":"<p>ConvertKit is a fully-featured email marketing platform. ConvertKit can be used to build an email list, send email broadcasts, automate sequences, create segments, and build landing pages.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"ConvertKit"},{"location":"workflow/integrations/nodes/workflow-nodes-base.convertKit/#basic-operations","text":"<ul> <li>Custom Field<ul> <li>Create a field</li> <li>Delete a field</li> <li>Get all fields</li> <li>Update a field</li> </ul> </li> <li>Form<ul> <li>Add a subscriber</li> <li>Get all forms</li> <li>List subscriptions to a form including subscriber data</li> </ul> </li> <li>Sequence<ul> <li>Add a subscriber</li> <li>Get all sequences</li> <li>Get all subscriptions to a sequence including subscriber data</li> </ul> </li> <li>Tag<ul> <li>Create a tag</li> <li>Get all tags</li> </ul> </li> <li>Tag Subscriber<ul> <li>Add a tag to a subscriber</li> <li>List subscriptions to a tag including subscriber data</li> <li>Delete a tag from a subscriber</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.convertKit/#example-usage","text":"<p>This workflow allows you to add a subscriber to a form, create a tag and add the subscriber to the tag using the ConvertKit node. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Start - ConvertKit</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.convertKit/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.convertKit/#2-convertkit-node-addsubscriber-form","text":"<ol> <li>First of all, you'll have to enter credentials for the ConvertKit node. You can find out how to do that here.</li> <li>Select the form from the Form ID dropdown list.</li> <li>Enter the email address in the Email field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p></p>","title":"2. ConvertKit node (addSubscriber: form)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.convertKit/#3-convertkit1-node-create-tag","text":"<ol> <li>Select the credentials that you entered in the previous ConvertKit node.</li> <li>Select 'Tag' from the Resource dropdown list.</li> <li>Enter the tag name in the Name field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p></p>","title":"3. ConvertKit1 node (create: tag)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.convertKit/#4-convertkit2-node-add-tagsubscriber","text":"<ol> <li>Select the credentials that you entered in the previous ConvertKit node.</li> <li>Select 'Tag Subscriber' from the Resource dropdown list.</li> <li>Select 'Add' from the Operation dropdown list.</li> <li>Select the tag from the Tag ID dropdown list.</li> <li>Click on the gears icon next to the Email field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; ConvertKit &gt; Output Data &gt; JSON &gt; subscriber &gt; email_address. You can also add the following expression: <code>{{$node[\"ConvertKit\"].json[\"subscriber\"][\"email_address\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p></p>","title":"4. ConvertKit2 node (add: tagSubscriber)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.copper/","text":"<p>Copper is a CRM that focuses on strong integration with Google's G Suite, targeted towards small and medium-sized businesses.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Copper"},{"location":"workflow/integrations/nodes/workflow-nodes-base.copper/#basic-operations","text":"<ul> <li>Company<ul> <li>Create</li> <li>Delete</li> <li>Get</li> <li>Get All</li> <li>Update</li> </ul> </li> <li>Customer Source<ul> <li>Get All</li> </ul> </li> <li>Lead<ul> <li>Create</li> <li>Delete</li> <li>Get</li> <li>Get All</li> <li>Update</li> </ul> </li> <li>Opportunity<ul> <li>Create</li> <li>Delete</li> <li>Get</li> <li>Get All</li> <li>Update</li> </ul> </li> <li>Person<ul> <li>Create</li> <li>Delete</li> <li>Get</li> <li>Get All</li> <li>Update</li> </ul> </li> <li>Project<ul> <li>Create</li> <li>Delete</li> <li>Get</li> <li>Get All</li> <li>Update</li> </ul> </li> <li>Task<ul> <li>Create</li> <li>Delete</li> <li>Get</li> <li>Get All</li> <li>Update</li> </ul> </li> <li>User<ul> <li>Get All</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.copper/#example-usage","text":"<p>This workflow allows you to create, update, and get a person from Copper. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Start - Copper</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.copper/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.copper/#2-copper-node-create-person","text":"<p>This node will create a new person in Copper.</p> <ol> <li>First of all, you'll have to enter credentials for the Copper node. You can find out how to do that here.</li> <li>Select 'Person' from the Resource dropdown list.</li> <li>Enter the name of the lead in the Name field.</li> <li>Click on the Add Field button and select 'Emails' from the dropdown list.</li> <li>Click on the Add Email button.</li> <li>Enter the email in the Email field.</li> <li>Enter the category of the email in the Category field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node creates a new person in Copper.</p> <p></p>","title":"2. Copper node (create: person)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.copper/#3-copper1-node-update-person","text":"<p>This node will update the information of the person that we created using the previous node.</p> <ol> <li>Select the credentials that you entered in the previous Copper node.</li> <li>Select 'Person' from the Resource dropdown list.</li> <li>Select 'Update' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Person ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$json[\"id\"]}}</code>.</li> <li>Click on the Add Field button and select 'Phone Numbers' from the dropdown list.</li> <li>Click on the Add Phone Number field.</li> <li>Enter the phone number in the Phone Number field.</li> <li>Enter the category in the Category field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node updates the information of the person that got created previously.</p> <p></p>","title":"3. Copper1 node (update: person)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.copper/#4-copper2-node-get-person","text":"<p>This node will retrieve the information of the person that we created earlier.</p> <ol> <li>Select the credentials that you entered in the previous Copper node.</li> <li>Select 'Person' from the Resource dropdown list.</li> <li>Select 'Update' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Person ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$json[\"id\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node retrieves the information of the person that we created earlier.</p> <p></p>","title":"4. Copper2 node (get: person)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.cortex/","text":"<p>Cortex offers a powerful observable (URL, file, IP, etc) analysis mechanism. It allows you to analyze collected observables using a single tool, respond to threats, and interact with the constituency and other teams.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Cortex"},{"location":"workflow/integrations/nodes/workflow-nodes-base.cortex/#basic-operations","text":"<ul> <li>Analyzer<ul> <li>Execute Analyzer</li> </ul> </li> <li>Job<ul> <li>Get job details</li> <li>Get job report</li> </ul> </li> <li>Responder<ul> <li>Execute Responder</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.cortex/#example-usage","text":"<p>This workflow allows you to analyze a URL and get the job details using the Cortex node. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Start - Cortex</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.cortex/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.cortex/#2-cortex-node-analyzer-execute","text":"<p>This node will analyze a URL. If you want to analyze a different observable type, select that instead.</p> <ol> <li>First of all, you'll have to enter credentials for the Cortex node. You can find out how to do that here.</li> <li>Select 'Abuse_Finder_3_0' from the Analyzer Type dropdown list.</li> <li>Select 'URL' from the Observable Type dropdown list.</li> <li>Enter the URL you want to analyze in the Observable Value field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node starts the analysis of the URL.</p> <p></p>","title":"2. Cortex node (analyzer: execute)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.cortex/#3-cortex1-node-job-get","text":"<p>This node will return the job details for the analysis that we executed in the previous node.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Job' from the Resource dropdown list.</li> <li>Click on the gears icon next to the Job ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Cortex &gt; Output Data &gt; JSON &gt; _id. You can also add the following expression: <code>{{$node[\"Cortex\"].json[\"_id\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node starts the analysis of the URL.</p> <p></p>","title":"3. Cortex1 node (job: get)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.crateDb/","text":"<p>CrateDB is an open-source distributed SQL database management system that integrates a fully searchable document-oriented data store based on a shared-nothing architecture, and is designed for high scalability.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"CrateDB"},{"location":"workflow/integrations/nodes/workflow-nodes-base.crateDb/#basic-operations","text":"<ul> <li>Execute an SQL query</li> <li>Insert rows in database</li> <li>Update rows in database</li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.crateDb/#example-usage","text":"<p>This workflow allows you to create a table and insert data into it in CrateDB. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Start - Set - CrateDB</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.crateDb/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.crateDb/#2-cratedb-node-execute-query","text":"<ol> <li>First of all, you'll have to enter credentials for the CrateDB node. You can find out how to do that here.</li> <li>Select 'Execute Query' from the Operation dropdown list.</li> <li>Enter the following SQL query in the Query field: <code>CREATE TABLE test (id INT, name STRING);</code>.</li> <li>Click on the Node tab and toggle Always Output Data to true.</li> <li>Click on Execute Node to run the node.</li> </ol> <p></p>","title":"2. CrateDB node (Execute Query)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.crateDb/#3-set-node","text":"<ol> <li>Click on the Add Value button and select 'Number' from the dropdown list.</li> <li>Enter <code>id</code> in the Name field.</li> <li>Click on the Add Value button and select 'String' from the dropdown list.</li> <li>Enter <code>name</code> in the Name field.</li> <li>Enter the value for the name in the Value field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p></p>","title":"3. Set node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.crateDb/#4-cratedb1-node-insert","text":"<ol> <li>Select the credentials that you entered in the previous CrateDB node.</li> <li>Enter <code>test</code> in the Table field.</li> <li>Enter <code>id, name</code> in the Columns field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p></p>","title":"4. CrateDB1 node (Insert)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.crateDb/#faqs","text":"","title":"FAQs"},{"location":"workflow/integrations/nodes/workflow-nodes-base.crateDb/#how-to-specify-the-data-type-of-a-column","text":"<p>To specify the data type of a column, append the column name with <code>:type</code>, where <code>type</code> is the data type of that column. For example, if you want to specify the type <code>int</code> for the column id and type <code>text</code> for the column name, you can use the following snippet in the Columns field: <code>id:init,name:text</code>.</p>","title":"How to specify the data type of a column?"},{"location":"workflow/integrations/nodes/workflow-nodes-base.customerIo/","text":"<p>Customer.io enables users to send newsletters to selected segments of customers using their website data. You can send targeted emails, push notifications, and SMS to lower churn, create stronger relationships, and drive subscriptions.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Customer.io"},{"location":"workflow/integrations/nodes/workflow-nodes-base.customerIo/#basic-operations","text":"<ul> <li>Customer<ul> <li>Create/Update a customer.</li> <li>Delete a customer.</li> </ul> </li> <li>Event<ul> <li>Track a customer event.</li> <li>Track an anonymous event.</li> </ul> </li> <li>Campaign<ul> <li>Get</li> <li>Get All</li> <li>Get Metrics</li> </ul> </li> <li>Segment<ul> <li>Add Customer</li> <li>Remove Customer</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.customerIo/#example-usage","text":"<p>This workflow allows you to create a customer and add them to a segment in Customer.io. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Start - Customer.io</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.customerIo/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.customerIo/#2-customerio-node-upsert-customer","text":"<ol> <li>First of all, you'll have to enter credentials for the Customer.io node. You can find out how to do that here.</li> <li>Enter a customer id in the ID field.</li> <li>Click on the Add Field button and select 'Custom Properties' from the dropdown list.</li> <li>Click on the Choose Option To Add button.</li> <li>Enter <code>name</code> in the Key field.</li> <li>Enter the name of the customer in the Value field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p></p>","title":"2. CustomerIo node (upsert: customer)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.customerIo/#3-customerio1-node-add-segment","text":"<ol> <li>Select the credentials that you entered in the previous Customer.io node.</li> <li>Select 'Segment' from the Resource field.</li> <li>Click on the gears icon next to the Customer IDs field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; CustomerIo &gt; Output Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$node[\"CustomerIo\"].json[\"id\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p></p>","title":"3. CustomerIo1 node (add: segment)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.deepL/","text":"<p>DeepL is a machine translation service that allows you to translate text to different languages.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"DeepL"},{"location":"workflow/integrations/nodes/workflow-nodes-base.deepL/#basic-operations","text":"<ul> <li>Language<ul> <li>Translate data</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.deepL/#example-usage","text":"<p>This workflow allows you to translate cocktail instructions to French. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Start - HTTP Request - DeepL</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.deepL/#1-start-node","text":"<p>The Start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.deepL/#2-http-request-node-get","text":"<p>This node will make a GET request to the API <code>https://www.thecocktaildb.com/api/json/v1/1/random.php</code> to fetch a random cocktail. This information gets passed on to the next node in the workflow.</p> <ol> <li>Enter <code>https://www.thecocktaildb.com/api/json/v1/1/random.php</code> in the URL field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node makes a GET request to the API and returns information about a random cocktail.</p> <p></p>","title":"2. HTTP Request node (GET)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.deepL/#3-deepl-node-translate-language","text":"<p>This node will translate the cocktail instructions that we got from the previous node to French. To translate the instructions in your language, select your language instead.</p> <ol> <li> <p>First of all, you'll have to enter credentials for the DeepL node. You can find out how to do that here.</p> </li> <li> <p>Click on the gears icon next to the Text field and click on Add Expression.</p> </li> <li>Select the following in the Variable Selector section: Current Nodes &gt; Input Data &gt; JSON &gt; drinks &gt; [item: 0] &gt; strInstructions. You can also add the following expression: <code>{{$json[\"drinks\"][0][\"strInstructions\"]}}</code>.</li> <li>Select 'French' from the Target Language dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node translates the instructions of the cocktail to French.</p> <p></p>","title":"3. DeepL node (translate: language)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.demio/","text":"<p>Demio provides a simple, no-download webinar experience and all the marketing tools you need to generate better results.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Demio"},{"location":"workflow/integrations/nodes/workflow-nodes-base.demio/#basic-operations","text":"<ul> <li>Event<ul> <li>Get an event</li> <li>Get all events</li> <li>Register someone to an event</li> </ul> </li> <li>Report<ul> <li>Get an event report</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.demio/#example-usage","text":"<p>This workflow allows you to register your audience to an event on Demio via a Typeform submission. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Typeform Trigger - Demio</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.demio/#1-typeform-trigger-node","text":"<p>This node will trigger the workflow when a form response is submitted.</p> <p>This example workflow uses a Typeform to collect name and email address. Create a form exactly like this for the example workflow. Below are the questions and their question types for the form.</p>    Question Type     Let's start with your name. Short Text   What's your email address? Email    <ol> <li>First of all, you'll have to enter credentials for the Typeform Trigger node. You can find out how to do that here.</li> <li>Select your form from the Form dropdown list.</li> <li>Click on Execute Node to run the workflow.</li> </ol> <p>In the screenshot below, you will notice that the Typeform Trigger node triggers the workflow and returns the response submitted by a user.</p> <p></p>","title":"1. Typeform Trigger node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.demio/#2-demio-node-register-event","text":"<p>This node will use the information from the previous node to register the user for an event on Demio. If you don't have an event on Demio, make sure to create one.</p> <ol> <li>First of all, you'll have to enter credentials for the Demio node. You can find out how to enter credentials for this node here.</li> <li>Select 'Register' from the Operation dropdown list.</li> <li>Select the event from the Event ID dropdown list.</li> <li> <p>Click on the gears icon next to the First Name field and click on Add Expression.</p> </li> <li> <p>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; Let's start with your name. You can also add the following expression: <code>{{$json[\"Let's start with your name.\"]}}</code>.</p> </li> <li>Click on the gears icon next to the Email field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; What's your email address? You can also add the following expression: <code>{{$json[\"What's your email address?\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node registers the user for an event on Demio.</p> <p></p>  <p> Activate workflow for production</p> <p>This example workflow uses the Typeform Trigger node. You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered when a new form is submitted.</p>","title":"2. Demio node (register: event)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.dhl/","text":"<p>The DHL Shipment Tracking provides shipment status reports for services provided by DPDHL under these brand names:</p> <ul> <li>Post &amp; Parcel Germany</li> <li>DHL Global Forwarding</li> <li>DHL Freight</li> <li>DHL Express</li> <li>DHL Supply Chain</li> <li>DHL eCommerce Solutions (Asia-Pacific, US, Canada, EU)</li> </ul>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"DHL"},{"location":"workflow/integrations/nodes/workflow-nodes-base.dhl/#basic-operations","text":"<ul> <li>Shipment<ul> <li>Get Tracking Details</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.discord/","tags":["Workflow\u00b2","Discord","Basic Operations","Example Usage"],"text":"<p>Discord is a voice, video, and text communications platform for groups. Discord allows users to programmatically send messages using webhooks.</p>  <p>\ud83d\udd11 Credentials</p> <p>The Discord node does not require authentication, but you must have access to a channel's settings to use webhooks. You can find out how to create a webhook in Discord here.</p>","title":"Discord"},{"location":"workflow/integrations/nodes/workflow-nodes-base.discord/#basic-operations","tags":["Workflow\u00b2","Discord","Basic Operations","Example Usage"],"text":"<ul> <li>Send messages in a Discord Channel</li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.discord/#example-usage","tags":["Workflow\u00b2","Discord","Basic Operations","Example Usage"],"text":"<p>This workflow allows you to send a message to a Discord channel using webhooks. You can also find the workflow on this website. This example usage workflow would use the following two nodes. - Start - Discord</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.discord/#1-start-node","tags":["Workflow\u00b2","Discord","Basic Operations","Example Usage"],"text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.discord/#2-discord-node","tags":["Workflow\u00b2","Discord","Basic Operations","Example Usage"],"text":"<ol> <li>First of all, you'll have to create a webhook for the Discord node. You can find out how to do that here.</li> <li>Paste your webhook into the Webhook URL field.</li> <li>Enter your message in the Text field.</li> <li>Click on Execute Node to run the workflow.</li> </ol> <p></p>","title":"2. Discord node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.discourse/","text":"<p>Discourse is an open-source discussion platform that can be used as a mailing list, discussion forum, long-form chat room, and more.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Discourse"},{"location":"workflow/integrations/nodes/workflow-nodes-base.discourse/#basic-operations","text":"<ul> <li>Category<ul> <li>Create a category</li> <li>Get all categories</li> <li>Update a category</li> </ul> </li> <li>Group<ul> <li>Create a group</li> <li>Get a group</li> <li>Get all groups</li> <li>Update a group</li> </ul> </li> <li>Post<ul> <li>Create a post</li> <li>Get a post</li> <li>Get all posts</li> <li>Update a post</li> </ul> </li> <li>User<ul> <li>Create a user</li> <li>Get a user</li> <li>Get all users</li> </ul> </li> <li>User Group<ul> <li>Create a user to group</li> <li>Remove user from group</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.discourse/#example-usage","text":"<p>This workflow allows you to create, update, and get a post using the Discourse node. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Start - Discourse</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.discourse/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.discourse/#2-discourse-node-create-post","text":"<p>This node will create a post under the <code>Lounge</code> category. If you want to create a post under a different category, select that category instead.</p> <ol> <li>First of all, you'll have to enter credentials for the Discourse node. You can find out how to do that here.</li> <li>Enter a title for the post in the Title field.</li> <li>Enter the content of the post in the Content field.</li> <li>Click on Add Field and select 'Category ID' from the dropdown list.</li> <li>Select 'Lounge' from the Category ID dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node creates a new topic under the category <code>Lounge</code>.</p> <p></p>","title":"2. Discourse node (create: post)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.discourse/#3-discourse1-node-update-post","text":"<p>This node will update the content of the post that we created in the previous node.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Update' from the Operations dropdown list.</li> <li>Click on the gears icon next to the Post ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$json[\"id\"]}}</code>.</li> <li>Enter the updated content in the Content field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node updates the content of the post that we created in the previous node.</p> <p></p>","title":"3. Discourse1 node (update: post)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.discourse/#4-discourse2-node-get-post","text":"<p>This node will retrieve the post that we updated previously.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Get' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Post ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$json[\"id\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you notice that the node retrieves the post that we created earlier.</p> <p></p>","title":"4. Discourse2 node (get: post)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.disqus/","text":"<p>Disqus is a worldwide blog comment hosting service for web sites and online communities that use a networked platform. The company's platform includes various features, such as social integration, social networking, user profiles, spam and moderation tools, analytics, email notifications, and mobile commenting.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Disqus"},{"location":"workflow/integrations/nodes/workflow-nodes-base.disqus/#basic-operations","text":"<ul> <li>Forum<ul> <li>Return forum details</li> <li>Return a list of categories within a forum</li> <li>Return a list of threads within a forum</li> <li>Return a list of posts within a forum</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.disqus/#example-usage","text":"<p>This workflow allows you to get details of a forum in Disqus. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - Disqus</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.disqus/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.disqus/#2-disqus-node","text":"<ol> <li>First of all, you'll have to enter credentials for the Disqus node. You can find out how to do that here.</li> <li>Enter the name of the forum in the Forum name field. For example, I entered <code>hackernoon</code>.</li> <li>Click on Execute Node to run the workflow.</li> </ol>","title":"2. Disqus node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.drift/","text":"<p>Drift is a tool for managing conversations, engaging with customers, and collaborating with teammates.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Drift"},{"location":"workflow/integrations/nodes/workflow-nodes-base.drift/#basic-operations","text":"<ul> <li>Contact<ul> <li>Create a contact</li> <li>Get custom attributes</li> <li>Delete a contact</li> <li>Get a contact</li> <li>Update a contact</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.drift/#example-usage","text":"<p>This workflow allows you to create a contact in Drift. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - Drift</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.drift/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.drift/#2-drift-node","text":"<ol> <li>First of all, you'll have to enter credentials for the Drift node. You can find out how to do that here.</li> <li>Enter the email of the contact in the Email field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>","title":"2. Drift node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.dropbox/","text":"<p>Dropbox is a cloud-based file storage and sharing service, accessible through multiple devices.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Dropbox"},{"location":"workflow/integrations/nodes/workflow-nodes-base.dropbox/#basic-operations","text":"<ul> <li>File<ul> <li>Copy a file</li> <li>Delete a file</li> <li>Download a file</li> <li>Move a file</li> <li>Upload a file</li> </ul> </li> <li>Folder<ul> <li>Copy a folder</li> <li>Create a folder</li> <li>Delete a folder</li> <li>Return the files and folders in a given folder</li> <li>Move a folder</li> </ul> </li> <li>Search<ul> <li>Query</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.dropbox/#example-usage","text":"<p>This workflow allows you to create a folder in Dropbox, upload a file into that folder, and list the contents of the folder. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Start - Dropbox - HTTP Request</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.dropbox/#1-start-node","text":"<p>The Start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.dropbox/#2-dropbox-node-create-folder","text":"<ol> <li>First of all, you'll have to enter credentials for the Dropbox node. You can find out how to do that here.</li> <li>Select 'Folder' from the Resource dropdown list.</li> <li>Enter the name of the new folder in the Folder field.</li> <li>Click on Execute Node to run the workflow.</li> </ol> <p></p>","title":"2. Dropbox node (create: folder)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.dropbox/#3-http-request-node-get","text":"<ol> <li>Enter <code>https://n8n.io/n8n-logo.png</code> in the URL field.</li> <li>Select 'File' from the Response Format dropdown list.</li> <li>Click on Execute Node to run the workflow.</li> </ol> <p></p>","title":"3. HTTP Request node (GET)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.dropbox/#4-dropbox1-node-upload-file","text":"<ol> <li>Select the credentials that you entered in the Dropbox node.</li> <li>Enter the path of the Dropbox folder you created in the previous steps along with a file name in the File Path field.</li> <li>Set the Binary Data toggle to true.</li> <li>Click on Execute Node to run the node.</li> </ol> <p></p>","title":"4. Dropbox1 node (upload: file)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.dropbox/#5-dropbox2-node-list-folder","text":"<ol> <li>Select the credentials that you entered in the Dropbox node.</li> <li>Select 'Folder' from the Resource dropdown list.</li> <li>Select 'List' from the Operation dropdown list.</li> <li>Enter the path of the Dropbox folder you created in the previous steps in the Folder Path field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p></p>","title":"5. Dropbox2 node (list: folder)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.dropcontact/","text":"<p>Dropcontact is an email finder platform that allows you to automatically find, verify and validate nominative emails and enrich your contacts with all efficient information to contact him.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Dropcontact"},{"location":"workflow/integrations/nodes/workflow-nodes-base.dropcontact/#basic-operations","text":"<p>Contact - Enrich - Fetch Request</p>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.dropcontact/#example-usage","text":"<p>This workflow allows you to find email and enrich your contact from a Google Sheet and add them to Lemlist. You can also find the workflow on Workflow\u00b2.io. </p> <p>This example usage workflow would use the following nodes. - Start - Google Sheets node - Dropcontact node - Lemlist node</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.dropcontact/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start Node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.dropcontact/#2-google-sheet-node","text":"<p>This node will list all the records from Google Sheet. Create a sheet like this in your Google Drive.</p> <ol> <li> <p>First of all, you'll have to enter credentials for the Google Sheet node. You can find out how to do that here.</p> </li> <li> <p>Select the 'Sheet' option from the Ressource dropdown list.</p> </li> <li>Select the 'Read' option from the Operation dropdown list.</li> <li>Enter the Sheet ID in the Sheet ID field. Your Google Sheet ID is available in the URL <code>https://docs.google.com/spreadsheets/d/{spreadsheetId}/edit</code></li> <li>In the Range field, enter <code>A:K</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns the information of the leads.</p> <p></p>","title":"2. Google Sheet node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.dropcontact/#3-dropontact-node","text":"<p>This node will find the verified email address and enrich the contact.</p> <ol> <li> <p>First of all, you'll have to enter credentials for the Dropcontact node. You can find out how to do that here.</p> </li> <li> <p>Select 'Contact' from the Resource dropdown list.</p> </li> <li>Select 'Enrich' from the Operation dropdown list.</li> <li>Click on Add Field and select 'Company Name'.</li> <li>Click on the gears icon next to the Company Name field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Node &gt; Input Data &gt; JSON &gt; fields &gt; companyName . You can also add the following expression: <code>{{$json[\"fields\"][\"companyName\"]}}</code>.</li> <li>Click on Add Field and select 'First Name'.</li> <li>Click on the gears icon next to the First Name field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Node &gt; Input Data &gt; JSON &gt; fields &gt; firstName . You can also add the following expression: <code>{{$json[\"fields\"][\"firstName\"]}}</code>.</li> <li>Click on Add Field and select 'Full Name'.</li> <li>Click on the gears icon next to the Full Name field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Node &gt; Input Data &gt; JSON &gt; fields &gt; fullName . You can also add the following expression: <code>{{$json[\"fields\"][\"fullName\"]}}</code>.</li> <li>Click on Add Field and select 'Last Name'.</li> <li>Click on the gears icon next to the Last Name field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Node &gt; Input Data &gt; JSON &gt; fields &gt; lastName . You can also add the following expression: <code>{{$json[\"fields\"][\"lastName\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the Dropcontact node has enriched your data.</p> <p></p>","title":"3. Dropontact node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.dropcontact/#4-lemlist-node","text":"<p>This node will create new leads for a campaign in Lemlist.</p> <ol> <li>First of all, you'll have to enter credentials for the Lemlist node. You can find out how to do that here.</li> <li>Select 'Lead' from the Resource dropdown list.</li> <li>Select a campaign from the Campaign ID dropdown list.</li> <li> <p>Click on the gears icon next to the Email field and click on 'Add Expression'.</p> </li> <li> <p>Select the following in the Variable Selector section: Dropcontact &gt; Input Data &gt; JSON &gt; fields &gt; email &gt; [Item: 0] &gt; email. You can also add the following expression: <code>{{$json[\"email\"][0][\"email\"]}}</code></p> </li> <li>Click on the Add Field button and select 'First Name'.</li> <li>Click on the gears icon next to the First Name field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Node &gt; Input Data &gt; JSON &gt; fields &gt; first_name . You can also add the following expression: <code>{{$json[\"fields\"][\"first_name\"]}}</code>.</li> <li>Click on the Add Field button and select 'Last Name'.</li> <li>Click on the gears icon next to the Last Name field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Node &gt; Input Data &gt; JSON &gt; fields &gt; last_name . You can also add the following expression: <code>{{$json[\"fields\"][\"last_name\"]}}</code>.</li> <li>Click on the Add Field button and select 'Company Name'.</li> <li>Click on the gears icon next to the Company Name field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Node &gt; Input Data &gt; JSON &gt; fields &gt; company_name . You can also add the following expression: <code>{{$json[\"fields\"][\"company_name\"]}}</code>.</li> <li>Click on the Add Field button and select 'Deduplicate'.</li> <li>Toggle Deduplicate to <code>true</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node creates new enriched leads in Lemlist.</p> <p></p>","title":"4. Lemlist node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.egoi/","text":"<p>E-goi is an omnichannel marketing automation platform.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"E-goi"},{"location":"workflow/integrations/nodes/workflow-nodes-base.egoi/#basic-operations","text":"<p>Contact - Create a member - Get a member - Get all members - Update a member</p>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.egoi/#example-usage","text":"<p>This workflow allows you to create, update, and get a contact using the E-goi node. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Start - E-goi</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.egoi/#1-start-node","text":"<p>The Start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.egoi/#2-e-goi-node-create-contact","text":"<p>This node will create a new contact in E-goi. We will add the first name of the contact along with their email.</p> <ol> <li>First of all, you'll have to enter credentials for the E-goi node. You can find out how to do that here.</li> <li>Select a list from the List ID field.</li> <li>Enter the email address in the Email field.</li> <li>Click on the Add Field button and select 'First Name' from the dropdown list.</li> <li>Enter the name of the contact in the First Name field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node creates a new contact with their first name and email.</p> <p></p>","title":"2. E-goi node (create: contact)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.egoi/#3-e-goi1-node-update-contact","text":"<p>This node will update the information of the contact that we created in the previous node. We will update the first name of the contact using this node.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Update' from the Operation dropdown list.</li> <li>Click on the gears icon next to the List ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; E-goi &gt; Parameters &gt; list. You can also add the following expression: <code>{{$node[\"E-goi\"].parameter[\"list\"]}}</code>.</li> <li>Click on the gears icon next to the Contact ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; E-goi &gt; Output Data &gt; JSON &gt; base &gt; contact_id. You can also add the following expression: <code>{{$node[\"E-goi\"].json[\"base\"][\"contact_id\"]}}</code>.</li> <li>Click on the Add Field button and select 'First Name' from the dropdown list.</li> <li>Enter the first name of the contact in the First Name field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node updates the information of the contact that we created in the previous node. Here, the node has updated the first name of the contact.</p> <p></p>","title":"3. E-goi1 node (update: contact)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.egoi/#3-e-goi2-node-get-contact","text":"<p>This node will return the information of the contact that we created using the E-goi node.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Get' from the Operation dropdown list.</li> <li>Click on the gears icon next to the List ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; E-goi1 &gt; Parameters &gt; list. You can also add the following expression: <code>{{$node[\"E-goi1\"].parameter[\"list\"]}}</code>.</li> <li>Click on the gears icon next to the Contact ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; E-goi1 &gt; Output Data &gt; JSON &gt; base &gt; contact_id. You can also add the following expression: <code>{{$node[\"E-goi\"].json[\"base\"][\"contact_id\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns the information of the contact that we created using the E-goi node.</p> <p></p>","title":"3. E-goi2 node (get: contact)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.elasticSecurity/","text":"<p>Elastic Security helps security teams stop threats and at cloud scale, assisting with prevention, detection, and response.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Elastic Security"},{"location":"workflow/integrations/nodes/workflow-nodes-base.elasticSecurity/#basic-operations","text":"<ul> <li>Case<ul> <li>Create a case</li> <li>Delete a case</li> <li>Get a case</li> <li>Retrieve all cases</li> <li>Retrieve a summary of all case activity</li> <li>Update a case</li> </ul> </li> <li>Case Comment<ul> <li>Add a comment to a case</li> <li>Get a case comment</li> <li>Retrieve all case comments</li> <li>Remove a comment from a case</li> <li>Update a comment in a case</li> </ul> </li> <li>Case Tag<ul> <li>Add a tag to a case</li> <li>Remove a tag from a case</li> </ul> </li> <li>Connector<ul> <li>Create a connector</li> </ul> </li> </ul>","title":"Basic operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.elasticsearch/","text":"<p>Elasticsearch is a distributed, free and open search and analytics engine for all types of data, including textual, numerical, geospatial, structured, and unstructured.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Elasticsearch"},{"location":"workflow/integrations/nodes/workflow-nodes-base.elasticsearch/#basic-operations","text":"<ul> <li>Document<ul> <li>Create a document</li> <li>Delete a document</li> <li>Get a document</li> <li>Get all documents</li> <li>Update a document</li> </ul> </li> <li>Index<ul> <li>Create</li> <li>Delete</li> <li>Get</li> <li>Get All</li> </ul> </li> </ul>","title":"Basic operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.elasticsearch/#example-usage","text":"<p>This workflow allows you to get all documents for a selected index. This example usage workflow uses the following nodes. - Start - Elasticsearch</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.elasticsearch/#1-start-node","text":"<p>The Start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.elasticsearch/#2-elasticsearch-node","text":"<ol> <li>First enter credentials for the Elasticsearch node. You can find out how to do that here.</li> <li>Select Document from the Resource dropdown.</li> <li>Select Get All from the Operation dropdown.</li> <li>Enter the ID of your desired index in the Index ID field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p></p>","title":"2. Elasticsearch node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.emelia/","text":"<p>Emelia is a cold-mailing tool.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Emelia"},{"location":"workflow/integrations/nodes/workflow-nodes-base.emelia/#basic-operations","text":"<ul> <li>Campaign<ul> <li>Add Contact</li> <li>Create</li> <li>Get</li> <li>Get All</li> <li>Pause</li> <li>Start</li> </ul> </li> <li>Contact List<ul> <li>Add</li> <li>Get All</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.emelia/#example-usage","text":"<p>This workflow allows you to create a campaign, add a contact, and get the campaign from Emelia. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Start - Emelia</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.emelia/#1-start-node","text":"<p>The Start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.emelia/#2-emelia-node-campaign-create","text":"<p>This node will create a new campaign in Emelia.</p> <ol> <li>First of all, you'll have to enter credentials for the Emelia node. You can find out how to do that here.</li> <li>Select 'Create' from the Operation dropdown list.</li> <li>Enter the campaign name in the Campaign Name field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node creates a new campaign.</p> <p></p>","title":"2. Emelia node (campaign: create)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.emelia/#3-emelia1-node-campaign-addcontact","text":"<p>This node will add a contact to the campaign that we created in the previous node.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Add Contact' from the Operation dropdown list.</li> <li>Select the campaign from the Campaign ID dropdown list.</li> <li>Enter the contact's email address in the Contact Email field.</li> <li>Click on the Add Field button and select 'First Name'.</li> <li>Enter the first name in the First Name field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node adds the contact to the campaign that we created in the previous node.</p> <p></p>","title":"3. Emelia1 node (campaign: addContact)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.emelia/#4-emelia2-node-campaign-get","text":"<p>This node will get the information about the campaign that we created earlier.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Get' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Campaign ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Emelia &gt; Output Data &gt; JSON &gt; _id. You can also add the following expression: <code>{{$node[\"Emelia\"].json[\"_id\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns the information of the campaign.</p> <p></p>","title":"4. Emelia2 node (campaign: get)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.erpNext/","text":"<p>ERPNext is an open-source integrated Enterprise Resource Planning software. It is a generic ERP software used by manufacturers, distributors, and services companies.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"ERPNext"},{"location":"workflow/integrations/nodes/workflow-nodes-base.erpNext/#basic-operations","text":"<p>Document - Create a document - Delete a document - Retrieve a document - Retrieve all documents - Update a document</p>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.erpNext/#example-usage","text":"<p>This workflow allows you to create, update, and retrieve a document from ERPNext. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Start - ERPNext</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.erpNext/#1-start-node","text":"<p>The Start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.erpNext/#2-erpnext-node-document-create","text":"<p>This node will create a new document in ERPNext.</p> <ol> <li>First of all, you'll have to enter credentials for the ERPNext node. You can find out how to do that here.</li> <li>Select 'Item' from the DocType dropdown list.</li> <li>Click on the Add Property button.</li> <li>Select 'Item Name' from the Field dropdown list.</li> <li>Enter <code>item 1</code> in the Value field.</li> <li>Click on the Add Property button.</li> <li>Select 'Item Code' from the Field dropdown list.</li> <li>Enter <code>item-1</code> in the Value field.</li> <li>Click on the Add Property button.</li> <li>Select 'Item Group' from the Field dropdown list.</li> <li>Enter <code>Products</code> in the Value field. Note: Make sure that the item group exists in your ERPNext account.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node creates a new item with the name <code>item 1</code>.</p> <p></p>","title":"2. ERPNext node (document: create)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.erpNext/#3-erpnext1-node-document-addcontact","text":"<p>This node will add the <code>Item Tax</code> property to the item that we created in the previous node.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Update' from the Operation dropdown list.</li> <li>Select 'Item' from the DocType dropdown list.</li> <li>Click on the gears icon next to the Item Name field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; name. You can also add the following expression: <code>{{$json[\"name\"]}}</code>.</li> <li>Click on the Add Property button.</li> <li>Select 'Item Tax' from the Field dropdown list.</li> <li>Enter <code>5</code> in the Value field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node adds the Item Tax property to the item that we created in the previous node.</p> <p></p>","title":"3. ERPNext1 node (document: addContact)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.erpNext/#4-erpnext2-node-document-get","text":"<p>This node will get the information about the item that we created earlier.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Get' from the Operation dropdown list.</li> <li>Select 'Item' from the DocType dropdown list.</li> <li>Click on the gears icon next to the Item Name field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; name. You can also add the following expression: <code>{{$json[\"name\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns the information of the item.</p> <p></p>","title":"4. ERPNext2 node (document: get)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.facebookGraphAPI/","text":"<p>Facebook is a social networking site that makes it easy to connect and share with family and friends online.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Facebook Graph API"},{"location":"workflow/integrations/nodes/workflow-nodes-base.facebookGraphAPI/#basic-operations","text":"<p>Default - GET - POST - DELETE </p> <p>Video Uploads - GET - POST - DELETE </p>","title":"Basic operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.facebookGraphAPI/#parameters","text":"<ul> <li>Host URL: The host URL for the request. The following options are available:<ul> <li>Default: Requests are passed to the <code>graph.facebook.com</code> host URL. Used for the majority of requests.</li> <li>Video: Requests are passed to the <code>graph-video.facebook.com</code> host URL. Used for video upload requests only.</li> </ul> </li> <li>HTTP Request Method: The method to be used for this request, from the following options:<ul> <li>GET</li> <li>POST</li> <li>DELETE</li> </ul> </li> <li>Graph API Version: The version of the Facebook Graph API to be used for this request.</li> <li>Node: The node on which to operate, for example <code>/&lt;page-id&gt;/feed</code>. Read more about it in the official Facebook Developer documentation.</li> <li>Edge: Edge of the node on which to operate. Edges represent collections of objects which are attached to the node.</li> <li>Ignore SSL Issues: Toggle to still download the response even if SSL certificate validation is not possible.</li> <li>Send Binary Data: Available for <code>POST</code> operations. If enabled binary data is sent as the body. Requires setting the following:<ul> <li>Binary Property: Name of the binary property which contains the data for the file to be uploaded.</li> </ul> </li> </ul>","title":"Parameters"},{"location":"workflow/integrations/nodes/workflow-nodes-base.facebookGraphAPI/#example-usage","text":"<p>This workflow allows you to retrieve the first and last name of a profile on Facebook. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - Facebook Graph API</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.facebookGraphAPI/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.facebookGraphAPI/#2-facebook-graph-api-node","text":"<ol> <li>First of all, you'll have to enter credentials for the Facebook Graph API node. You can find out how to do that here.</li> <li>Enter <code>me</code> in the Node field.</li> <li>Click on the Add Option button and select 'Fields' from the dropdown list.</li> <li>Click on the Add Field button and enter <code>first_name</code> in the Name field.</li> <li>Click on the Add Field button and enter <code>last_name</code> in the Name field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>","title":"2. Facebook Graph API node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.filemaker/","text":"<p>FileMaker is an integrated Enterprise Resource Planning software. It is a generic ERP software used by manufacturers, distributors, and service companies.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"FileMaker"},{"location":"workflow/integrations/nodes/workflow-nodes-base.filemaker/#basic-operations","text":"<ul> <li>Find Records</li> <li>Get Records</li> <li>Get Records by Id</li> <li>Perform Script</li> <li>Create Record</li> <li>Edit Record</li> <li>Duplicate Record</li> <li>Delete Record</li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.filemaker/#example-usage","text":"<p>This workflow allows you to create, update, and retrieve a record from FileMaker. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Start - FileMaker</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.filemaker/#1-start-node","text":"<p>The Start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.filemaker/#2-filemaker-node","text":"<p>This node will create a new record in FileMaker.</p> <ol> <li>First of all, you'll have to enter credentials for the FileMaker node. You can find out how to do that here.</li> <li>Select 'Create Record' from the Action dropdown list.</li> <li>Select a layout from the Layout dropdown list.</li> <li>Click on the Add Field button.</li> <li>Select a field from the Field dropdown list.</li> <li>Enter a value in the Value field.</li> <li>Click on the Add field button.</li> <li>Select a field from the Field dropdown list.</li> <li>Enter a value in the Value field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node creates a new record in FileMaker.</p> <p></p>","title":"2. FileMaker node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.filemaker/#3-filemaker1-node","text":"<p>This node will add a new field to the record that we created in the previous node.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Edit Record' from the Action dropdown list.</li> <li>Select a layout from the Layout dropdown list.</li> <li>Click on the gears icon next to the Record Id field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; response &gt; recordId. You can also add the following expression: <code>{{$json[\"response\"][\"recordId\"]}}</code>.</li> <li>Click on the gears icon next to the Mod Id field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; response &gt; modId. You can also add the following expression: <code>{{$json[\"response\"][\"modId\"]}}</code>.</li> <li>Click on the Add field button.</li> <li>Select a field from the Field dropdown list.</li> <li>Enter a value in the Value field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node adds the <code>address_country</code> field to the record that we created in the previous node.</p> <p></p>","title":"3. FileMaker1 node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.filemaker/#4-filemaker2-node","text":"<p>This node will get the information about the record that we created earlier.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Get Records by Id' from the Action dropdown list.</li> <li>Select a layout from the Layout dropdown list.</li> <li>Click on the gears icon next to the Record Id field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; FileMaker &gt; Output Data &gt; JSON &gt; response &gt; recordId. You can also add the following expression: <code>{{$node[\"FileMaker\"].json[\"response\"][\"recordId\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns the information of the record.</p> <p></p>","title":"4. FileMaker2 node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.flow/","text":"<p>Flow is modern task and project management software for teams. It brings together tasks, projects, timelines, and conversations, and integrates with a lot of tools.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Flow"},{"location":"workflow/integrations/nodes/workflow-nodes-base.flow/#basic-operations","text":"<ul> <li>Task<ul> <li>Create a new task</li> <li>Update a task</li> <li>Get a task</li> <li>Get all the tasks</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.flow/#example-usage","text":"<p>This workflow allows you to get all the tasks in Flow. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - Flow</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.flow/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.flow/#2-flow-node","text":"<ol> <li>First of all, you'll have to enter credentials for the Flow node. You can find out how to do that here.</li> <li>Select the 'Get All' option from the Operation dropdown list.</li> <li>Toggle the Return All slider to true.</li> <li>Click on Execute Node to run the workflow.</li> </ol>","title":"2. Flow node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.freshdesk/","text":"<p>Freshdesk is a customer support software also classified as a ticketing software or a helpdesk that allows companies to effectively manage their customer care and support function.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Freshdesk"},{"location":"workflow/integrations/nodes/workflow-nodes-base.freshdesk/#basic-operations","text":"<ul> <li>Contact<ul> <li>Create a new contact</li> <li>Delete a contact</li> <li>Get a contact</li> <li>Get all contacts</li> <li>Update a contact</li> </ul> </li> <li>Ticket<ul> <li>Create a new ticket</li> <li>Delete a ticket</li> <li>Get a ticket</li> <li>Get all tickets</li> <li>Update a ticket</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.freshdesk/#example-usage","text":"<p>This workflow allows you to create a ticket on Freshdesk. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - Freshdesk</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.freshdesk/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.freshdesk/#2-freshdesk-node","text":"<ol> <li>First of all, you'll have to enter credentials for the Freshdesk node. You can find out how to do that here.</li> <li>Select 'Email' from the Requester Identification dropdown.</li> <li>Enter the requester email in the Value field.</li> <li>Select 'Open' from the Status Dropdown.</li> <li>Click on Execute Node to run the workflow.</li> </ol>","title":"2. Freshdesk node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.freshservice/","text":"<p>Freshservice is a cloud-based IT Service Management solution.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Freshservice"},{"location":"workflow/integrations/nodes/workflow-nodes-base.freshservice/#basic-operations","text":"<ul> <li>Agent<ul> <li>Create an agent</li> <li>Delete an agent</li> <li>Retrieve an agent</li> <li>Retrieve all agents</li> <li>Update an agent</li> </ul> </li> <li>Agent Group<ul> <li>Create an agent group</li> <li>Delete an agent group</li> <li>Retrieve an agent group</li> <li>Retrieve all agent groups</li> <li>Update an agent group</li> </ul> </li> <li>Agent Role<ul> <li>Retrieve an agent role</li> <li>Retrieve all agent roles</li> </ul> </li> <li>Announcement<ul> <li>Create an announcement</li> <li>Delete an announcement</li> <li>Retrieve an announcement</li> <li>Retrieve all announcements</li> <li>Update an announcement</li> </ul> </li> <li>Asset Type<ul> <li>Create an asset type</li> <li>Delete an asset type</li> <li>Retrieve an asset type</li> <li>Retrieve all asset types</li> <li>Update an asset type</li> </ul> </li> <li>Change<ul> <li>Create a change</li> <li>Delete a change</li> <li>Retrieve a change</li> <li>Retrieve all changes</li> <li>Update a change</li> </ul> </li> <li>Department<ul> <li>Create a department</li> <li>Delete a department</li> <li>Retrieve a department</li> <li>Retrieve all departments</li> <li>Update a department</li> </ul> </li> <li>Location<ul> <li>Create a location</li> <li>Delete a location</li> <li>Retrieve a location</li> <li>Retrieve all locations</li> <li>Update a location</li> </ul> </li> <li>Problem<ul> <li>Create a problem</li> <li>Delete a problem</li> <li>Retrieve a problem</li> <li>Retrieve all problems</li> <li>Update a problem</li> </ul> </li> <li>Product<ul> <li>Create a product</li> <li>Delete a product</li> <li>Retrieve a product</li> <li>Retrieve all products</li> <li>Update a product</li> </ul> </li> <li>Release<ul> <li>Create a release</li> <li>Delete a release</li> <li>Retrieve a release</li> <li>Retrieve all releases</li> <li>Update a release</li> </ul> </li> <li>Requester<ul> <li>Create a requester</li> <li>Delete a requester</li> <li>Retrieve a requester</li> <li>Retrieve all requesters</li> <li>Update a requester</li> </ul> </li> <li>Requester Group<ul> <li>Create a requester group</li> <li>Delete a requester group</li> <li>Retrieve a requester group</li> <li>Retrieve all requester groups</li> <li>Update a requester group</li> </ul> </li> <li>Software<ul> <li>Create a software application</li> <li>Delete a software application</li> <li>Retrieve a software application</li> <li>Retrieve all software applications</li> <li>Update a software application</li> </ul> </li> <li>Ticket<ul> <li>Create a ticket</li> <li>Delete a ticket</li> <li>Retrieve a ticket</li> <li>Retrieve all tickets</li> <li>Update a ticket</li> </ul> </li> </ul>","title":"Basic operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.freshservice/#example-usage","text":"<p>This workflow allows you to fetch all Tickets with an Urgent status in Freshservice. This example usage workflow would use the following two nodes:</p> <ul> <li>Start</li> <li>Freshservice</li> </ul> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.freshservice/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.freshservice/#2-freshservice-node","text":"<ol> <li>First enter your credentials for the Freshservice node. You can find out how to do that here.</li> <li>Select Ticket from the Resource dropdown.</li> <li>Select Get All from the Operation dropdown.</li> <li>Enable the Return All toggle.</li> <li>From the Add Filter dropdown select Priority.</li> <li>From the new Priority dropdown select Urgent.</li> <li>Click on Execute Node to run the workflow.</li> </ol>","title":"2. Freshservice node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.freshworksCrm/","text":"<p>Freshworks CRM is a cloud-based customer relationship management (CRM) solution that helps businesses manage their interactions with existing and potential customers.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Freshworks CRM"},{"location":"workflow/integrations/nodes/workflow-nodes-base.freshworksCrm/#basic-operations","text":"<ul> <li>Account<ul> <li>Create an account</li> <li>Delete an account</li> <li>Retrieve an account</li> <li>Retrieve all accounts</li> <li>Update an account</li> </ul> </li> <li>Appointment<ul> <li>Create an appointment</li> <li>Delete an appointment</li> <li>Retrieve an appointment</li> <li>Retrieve all appointments</li> <li>Update an appointment</li> </ul> </li> <li>Contact<ul> <li>Create a contact</li> <li>Delete a contact</li> <li>Retrieve a contact</li> <li>Retrieve all contacts</li> <li>Update a contact</li> </ul> </li> <li>Deal<ul> <li>Create a deal</li> <li>Delete a deal</li> <li>Retrieve a deal</li> <li>Retrieve all deals</li> <li>Update a deal</li> </ul> </li> <li>Note<ul> <li>Create a note</li> <li>Delete a note</li> <li>Update a note</li> </ul> </li> <li>Sales Activity<ul> <li>Retrieve a sales activity</li> <li>Retrieve all sales activities</li> </ul> </li> <li>Task<ul> <li>Create a task</li> <li>Delete a task</li> <li>Retrieve a task</li> <li>Retrieve all tasks</li> <li>Update a task</li> </ul> </li> </ul>","title":"Basic operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.freshworksCrm/#example-usage","text":"<p>This workflow allows you to fetch all Contacts in Freshworks CRM that you have yet to contact. This example usage workflow would use the following two nodes:</p> <ul> <li>Start</li> <li>Freshworks CRM</li> </ul> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.freshworksCrm/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.freshworksCrm/#2-freshworks-crm-node","text":"<ol> <li>First enter your credentials for the Freshworks CRM node. You can find out how to do that here.</li> <li>Select Contact from the Resource dropdown.</li> <li>Select Get All from the Operation dropdown.</li> <li>Select Never Contacted from the View dropdown.</li> <li>Click on Execute Node to run the workflow.</li> </ol> <p></p>","title":"2. Freshworks CRM node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.gSuiteAdmin/","text":"<p>G Suite Admin helps you administer domain and app resources, create reports, and manage subscriptions and alerts for your G Suite organization.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"G Suite Admin"},{"location":"workflow/integrations/nodes/workflow-nodes-base.gSuiteAdmin/#basic-operations","text":"<ul> <li>Group<ul> <li>Create a group</li> <li>Delete a group</li> <li>Get a group</li> <li>Get all groups</li> <li>Update a group</li> </ul> </li> <li>User<ul> <li>Create a user</li> <li>Delete a user</li> <li>Get a user</li> <li>Get all users</li> <li>Update a user</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.gSuiteAdmin/#example-usage","text":"<p>This workflow allows you to create, update, and get a user using the G Suite Admin node. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Start - G Suite Admin</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.gSuiteAdmin/#1-start-node","text":"<p>The Start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.gSuiteAdmin/#2-g-suite-admin-node-create-user","text":"<p>This node will create a user in G Suite with the following information:  first name, last name, password, domain, and username.</p> <ol> <li>First of all, you'll have to enter credentials for the G Suite Admin node. You can find out how to do that here.</li> <li>Enter the first name of the user in the First Name field.</li> <li>Enter the last name of the user in the Last Name field.</li> <li>Enter a password for the user in the Password field.</li> <li>Select the domain from the Domain dropdown list.</li> <li>Enter the username for the user in the Username field.</li> <li>Click on Execute Node to run the workflow.</li> </ol> <p>In the screenshot below, you will observe that the node has created a new user with the first name <code>Nathan</code>, last name <code>Nat</code>, domain <code>n8n.io</code>, username <code>nat</code>, and a password, in G Suite.</p> <p></p>","title":"2. G Suite Admin node (create: user)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.gSuiteAdmin/#3-g-suite-admin1-node-update-user","text":"<p>This node will get the User ID from the previous node and update the user's last name to <code>Nate</code>.</p> <ol> <li>Select the credentials that you entered in the previous G Suite Admin node.</li> <li>Select 'Update' from the Operation dropdown list.</li> <li>Click on the gears icon next to the User ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; G Suite Admin &gt; Output Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$node[\"G Suite Admin\"].json[\"id\"]}}</code>.</li> <li>Click on the Add Field button and select 'Last Name' from the dropdown list.</li> <li>Enter the last name in the Last Name field.</li> <li>Click on Execute Node to run the workflow.</li> </ol> <p>In the screenshot below, you will notice that the node has updated the last name of the user that we created in the previous node.</p> <p></p>","title":"3. G Suite Admin1 node (update: user)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.gSuiteAdmin/#4-g-suite-admin2-get-user","text":"<p>This node will get the information of the user we created in the G Suite Admin node.</p> <ol> <li>Select the credentials that you entered in the previous G Suite Admin node.</li> <li>Select 'Get' from the Operation dropdown list.</li> <li>Click on the gears icon next to the User ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; G Suite Admin &gt; Output Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$node[\"G Suite Admin\"].json[\"id\"]}}</code>.</li> <li>Click on Execute Node to run the workflow.</li> </ol> <p>In the screenshot below, you will notice that the node returns the information of the user we created in the G Suite Admin node.</p> <p></p>","title":"4. G Suite Admin2 (get: user)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.gSuiteAdmin/#faqs","text":"","title":"FAQs"},{"location":"workflow/integrations/nodes/workflow-nodes-base.gSuiteAdmin/#what-are-the-different-ways-to-project-a-users-information","text":"<p>There are three different ways to project a user's information:</p> <ul> <li>Basic: Does not include any custom fields.</li> <li>Custom: Includes the custom fields from schemas in customField.</li> <li>Full: Include all the fields associated with the user.</li> </ul> <p>You can include custom fields by following the steps mentioned below. 1. Select 'Custom' from the Projection dropdown list. 2. Click on the Add Options button and select 'Custom Schemas' from the dropdown list. 3. Select the schema names you want to include from the Custom Schemas dropdown list.</p>","title":"What are the different ways to project a user's information?"},{"location":"workflow/integrations/nodes/workflow-nodes-base.getResponse/","text":"<p>GetResponse is an online platform that offers email marketing software, landing page creator, webinar hosting, and much more.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"GetResponse"},{"location":"workflow/integrations/nodes/workflow-nodes-base.getResponse/#basic-operations","text":"<ul> <li>Contact<ul> <li>Create a new contact</li> <li>Delete a contact</li> <li>Get a contact</li> <li>Get all contacts</li> <li>Update contact properties</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.getResponse/#example-usage","text":"<p>This workflow allows you to get all the contacts from GetResponse and check if they belong to a specific campaign. If they don't belong to the specified campaign, the workflow updates the campaign ID of the contacts using the GetResponse node. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Start - GetResponse - IF - No Operation, do nothing</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.getResponse/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.getResponse/#2-getresponse-node-getall-contact","text":"<p>This node will retrieve all the contacts from GetResponse.</p> <ol> <li>First of all, you'll have to enter credentials for the GetResponse node. You can find out how to do that here.</li> <li>Select 'GetAll' from the Operation dropdown list.</li> <li>Toggle Return All to true.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node retrieves all the contacts from GetResponse.</p> <p></p>","title":"2. GetResponse node (getAll: contact)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.getResponse/#3-if-node","text":"<p>This node will check if a contact belongs to the <code>n8n</code> campaign or not. If a contact does not belong to the <code>n8n</code> campaign, it will return true otherwise false. Create a campaign in GetResponse if you don't already have one.</p> <ol> <li>Click on Add Condition and select 'String'.</li> <li>Click on the gears icon next to the Value 1 field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; GetResponse &gt; Output Data &gt; JSON &gt; campaign &gt; name. You can also add the following expression: <code>{{$node[\"GetResponse\"].json[\"campaign\"][\"name\"]}}</code>.</li> <li>Select 'Not Equal' from the Operation dropdown list.</li> <li>Enter <code>n8n</code> in the Value 2 field. If you have a campaign with a different name, use that name instead.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns all the contacts that do not belong to the <code>n8n</code> campaign.</p> <p></p>","title":"3. IF node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.getResponse/#4-getresponse1-node-update-contact","text":"<p>This node will update the campaign ID of all the contacts that we get from the true branch of the previous node.</p> <ol> <li>Create a GetResponse node connected to the 'true' output of the IF node.</li> <li>Select the credentials that you entered in the previous GetResponse node.</li> <li>Select 'Update' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Contact ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; IF &gt; Output Data &gt; JSON &gt; contactId. You can also add the following expression: <code>{{$node[\"IF\"].json[\"contactId\"]}}</code>.</li> <li>Click on Add Field and select 'Campaign ID' from the dropdown list.</li> <li>Select <code>n8n</code> from the Campaign ID dropdown list. If you have a campaign with a different name, select that instead.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you notice that the node updates the campaign ID of all the contacts that do not belong to the <code>n8n</code> campaign.</p> <p></p>","title":"4. GetResponse1 node (update: contact)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.getResponse/#5-noop-node","text":"<p>Adding this node here is optional, as the absence of this node won't make a difference to the functioning of the workflow.</p> <ol> <li>Create a NoOp node connected to the 'false' output of the IF node.</li> <li>Click on Execute Node to run the node.</li> </ol> <p></p>","title":"5. NoOp node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.ghost/","text":"<p>Ghost is an open-source, professional publishing platform built on a Node.js technology stack.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Ghost"},{"location":"workflow/integrations/nodes/workflow-nodes-base.ghost/#basic-operations","text":"","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.ghost/#admin-api","text":"<p>Post - Create a post - Delete a post - Get a post - Get all posts - Update a post</p>","title":"Admin API"},{"location":"workflow/integrations/nodes/workflow-nodes-base.ghost/#content-api","text":"<p>Post - Get a post - Get all posts</p>","title":"Content API"},{"location":"workflow/integrations/nodes/workflow-nodes-base.ghost/#example-usage","text":"<p>This workflow allows you to create, update, and get a post in Ghost. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Start - Ghost</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.ghost/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.ghost/#2-ghost-node-create-post","text":"<p>This node will create a new post with the title <code>Running ghost with n8n!</code>. If you want to create a post with a different title, use that instead.</p> <ol> <li>Select 'Admin API' from the Source dropdown list.</li> <li>You'll have to enter credentials for the Ghost node. You can find out how to do that here.</li> <li>Select 'Create' from the Operation dropdown list.</li> <li>Enter <code>Running ghost with n8n!</code> in the Title field.</li> <li>Enter the HTML content in the Content field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node creates a new post.</p> <p></p>","title":"2. Ghost node (create: post)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.ghost/#3-ghost1-node-update-post","text":"<p>This node will update the status of the post that we created in the previous node. We will change the status of the post to <code>Published</code>.</p> <ol> <li>Select 'Admin API' from the Source dropdown list.</li> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Update' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Post ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Ghost &gt; Output Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$node[\"Ghost\"].json[\"id\"]}}</code>.</li> <li>Click on Add Field and select 'Status'.</li> <li>Select 'Published' from the Status dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node updates the status of the post that we created in the previous node.</p> <p></p>","title":"3. Ghost1 node (update: post)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.ghost/#4-ghost2-node-get-post","text":"<p>This node returns information about the post that we created using the Ghost node. In this node, we are using the Admin API. You can also use the Content API to get the information about the post.</p> <ol> <li>Select 'Admin API' from the Source dropdown list.</li> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'ID' from the By dropdown list.</li> <li>Click on the gears icon next to the Identifier field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Ghost &gt; Output Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$node[\"Ghost\"].json[\"id\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns information about the post that we specified.</p> <p></p>","title":"4. Ghost2 node (get: post)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.github/","text":"<p>GitHub provides hosting for software development and version control using Git. It offers the distributed version control and source code management (SCM) functionality of Git, access control and several collaboration features such as bug tracking, feature requests, task management, and wikis for every project.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"GitHub"},{"location":"workflow/integrations/nodes/workflow-nodes-base.github/#basic-operations","text":"<ul> <li>File<ul> <li>Create a new file in repository.</li> <li>Delete a file in repository.</li> <li>Edit a file in repository.</li> <li>Get the data of a single file.</li> <li>List contents of a folder.</li> </ul> </li> <li>Issue<ul> <li>Create a new issue.</li> <li>Create a new comment on an issue.</li> <li>Edit an issue.</li> <li>Get the data of a single issue.</li> <li>Lock an issue.</li> </ul> </li> <li>Repository<ul> <li>Get the data of a single repository.</li> <li>Returns the contents of the repository's license file, if one is detected.</li> <li>Returns issues of a repository.</li> <li>Get the community profile of a repository with metrics, health score, description, license, etc.</li> <li>Get the top 10 popular content paths over the last 14 days.</li> <li>Get the top 10 referrering domains over the last 14 days.</li> </ul> </li> <li>Release<ul> <li>Creates a new release.</li> <li>Get a release.</li> <li>Get all repository releases.</li> <li>Delete a release.</li> <li>Update a release.</li> </ul> </li> <li>Review<ul> <li>Creates a new review.</li> <li>Get a review for a pull request.</li> <li>Get all reviews for a pull request.</li> <li>Update a review.</li> </ul> </li> <li>User<ul> <li>Returns the repositories of a user.</li> <li>Invites a user to an organization.</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.github/#example-usage","text":"<p>This workflow allows you to get the community profile of a GitHub repository. You can also find the workflow on the website. This example usage workflow uses the following two nodes. - Start - GitHub</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.github/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.github/#2-github-node","text":"<ol> <li>First of all, you'll have to enter credentials for the GitHub node. You can find out how to do that here.</li> <li>Select the 'Repository' option under the Resource field.</li> <li>Select the 'Get Profile' option under the Operation field.</li> <li>Enter the repository owner in the Repository Owner field.</li> <li>Enter the repository name in the Repository Name field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>","title":"2. GitHub node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.gitlab/","text":"<p>GitLab is a web-based DevOps lifecycle tool that provides a Git-repository manager providing wiki, issue-tracking, and continuous integration/continuous installation pipeline features.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"GitLab"},{"location":"workflow/integrations/nodes/workflow-nodes-base.gitlab/#basic-operations","text":"<ul> <li>Issue<ul> <li>Create a new issue</li> <li>Create a new comment on an issue</li> <li>Edit an issue</li> <li>Get the data of a single issue</li> <li>Lock an issue</li> </ul> </li> <li>Repository<ul> <li>Get the data of a single repository</li> <li>Returns issues of a repository</li> </ul> </li> <li>Release<ul> <li>Create a new release</li> <li>Delete a new release</li> <li>Get a new release</li> <li>Get all releases</li> <li>Update a new release</li> </ul> </li> <li>User<ul> <li>Returns the repositories of a user</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.gitlab/#example-usage","text":"<p>This workflow allows you to get the details of a GitLab repository. You can also find the workflow on the website. This example usage workflow uses the following two nodes. - Start - GitLab</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.gitlab/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.gitlab/#2-gitlab-node","text":"<ol> <li>First of all, you'll have to enter credentials for the GitLab node. You can find out how to do that here.</li> <li>Select the 'Repository' option from the Resource dropdown list.</li> <li>Select the 'Get' option under the Operation field.</li> <li>Enter the project owner in the Project Owner field.</li> <li>Enter the project name in the Project Name field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>","title":"2. GitLab node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.gmail/","text":"<p>Gmail is an email service developed by Google. Users can access Gmail on the web and using third-party programs that synchronize email content through POP or IMAP protocols.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Gmail"},{"location":"workflow/integrations/nodes/workflow-nodes-base.gmail/#basic-operations","text":"<ul> <li>Draft<ul> <li>Create a new email draft</li> <li>Delete a draft</li> <li>Get a draft</li> <li>Get all drafts</li> </ul> </li> <li>Label<ul> <li>Create a new label</li> <li>Delete a label</li> <li>Get a label</li> <li>Get all labels</li> </ul> </li> <li>Message<ul> <li>Send an email</li> <li>Delete a message</li> <li>Get a message</li> <li>Get all messages</li> <li>Reply to an email</li> </ul> </li> <li>Message Label<ul> <li>Add a label to a message</li> <li>Remove a label from a message</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.gmail/#example-usage","text":"<p>This workflow allows you to get all messages with a certain label, remove the label from the messages, and add a new label to the messages. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Start - Gmail</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.gmail/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.gmail/#2-gmail-node-getall-message","text":"<p>This node will return ten messages with the label <code>n8n</code> from Gmail. If you want to return all the messages toggle Return All to <code>true</code>.</p> <ol> <li>First of all, you'll have to enter credentials for the Gmail node. You can find out how to do that here.</li> <li>Select 'Message' from the Resource dropdown list.</li> <li>Select 'Get All' from the Operation dropdown list.</li> <li>Click on the Add Field button and select 'Format' from the dropdown list.</li> <li>Select 'Full' from Format dropdown menu. This option will return the full email message data with the body content parsed in the payload field.</li> <li>Click on the Add Field button and select 'Label IDs' from the dropdown list.</li> <li>Select the label from the Label IDs dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns ten email messages with the label <code>n8n</code>.</p> <p></p>","title":"2. Gmail node (getAll: message)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.gmail/#3-gmail1-node-remove-messagelabel","text":"<p>This node will remove the label <code>n8n</code> from all the messages that you received in the previous node. If you want to remove a different label, select that label instead.</p> <ol> <li>Select the credentials that you entered in the previous Gmail node.</li> <li>Select 'Message Label' from the Resource dropdown list.</li> <li>Select 'Remove' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Message ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Gmail &gt; Output Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$node[\"Gmail\"].json[\"id\"]}}</code>.</li> <li>Select the label from the Label IDs dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node removes the <code>n8n</code> label from the messages that we received from the previous node.</p> <p></p>","title":"3. Gmail1 node (remove: messageLabel)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.gmail/#4-gmail2-node-add-messagelabel","text":"<p>This node will add a new label <code>nodemation</code> to the messages that we received from the Gmail node. If you want to add a different label, select that label instead.</p> <ol> <li>Select the credentials that you entered in the previous Gmail node.</li> <li>Select 'Message Label' from the Resource dropdown list.</li> <li>Click on the gears icon next to the Message ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Gmail &gt; Output Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$node[\"Gmail\"].json[\"id\"]}}</code>.</li> <li>Select the label from the Label IDs dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node adds a new label <code>nodemation</code> to the messages that we received from the Gmail node.</p> <p></p>","title":"4. Gmail2 node (add: messageLabel)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.gmail/#faqs","text":"","title":"FAQs"},{"location":"workflow/integrations/nodes/workflow-nodes-base.gmail/#how-to-return-all-the-messages-with-a-particular-label","text":"<p>To return all the messages with a particular label, follow the steps mentioned below.</p> <ol> <li>Select 'Message' from the Resource dropdown list.</li> <li>Select 'Get All' from the Operation dropdown list.</li> <li>If you want to all return all the messages with a particular, toggle Return All to <code>true</code>.</li> <li>Click on Add Field and select 'Query'.</li> <li>Enter <code>label:LABEL_NAME</code> in the Query field. Replace <code>LABEL_NAME</code> with your label name.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>Refer to Search operators you can use with Gmail to learn more about filtering your search results.</p>","title":"How to return all the messages with a particular label?"},{"location":"workflow/integrations/nodes/workflow-nodes-base.goToWebinar/","text":"<p>GoToWebinar is a platform that helps you create and deliver online video conferences.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"GoToWebinar"},{"location":"workflow/integrations/nodes/workflow-nodes-base.goToWebinar/#basic-operations","text":"<ul> <li>Attendee<ul> <li>Get</li> <li>Get All</li> <li>Get Details</li> </ul> </li> <li>Co-Organizer<ul> <li>Create</li> <li>Delete</li> <li>Get All</li> <li>Reinvite</li> </ul> </li> <li>Panelist<ul> <li>Create</li> <li>Delete</li> <li>Get All</li> <li>Reinvite</li> </ul> </li> <li>Registrant<ul> <li>Create</li> <li>Delete</li> <li>Get</li> <li>Get All</li> </ul> </li> <li>Session<ul> <li>Get</li> <li>Get All</li> <li>Get Details</li> </ul> </li> <li>Webinar<ul> <li>Create</li> <li>Get</li> <li>Get All</li> <li>Update</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.goToWebinar/#example-usage","text":"<p>This workflow allows you to create, update, and get a webinar. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Start - GoToWebinar</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.goToWebinar/#1-start-node","text":"<p>The Start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.goToWebinar/#2-gotowebinar-node-create-webinar","text":"<p>This node will create a new webinar in GoToWebinar.</p> <ol> <li>First of all, you'll have to enter credentials for the GoToWebinar node. You can find out how to do that here.</li> <li>Select 'Webinar' from the Resource dropdown list.</li> <li>Select 'Create' from the Operation dropdown list.</li> <li>Enter a subject in the Subject field.</li> <li>Click on the Add Time Range button.</li> <li>Set the start time in the Start Time field.</li> <li>Set the end time in the End Time field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node creates a new webinar.</p> <p></p>","title":"2. GoToWebinar node (create: webinar)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.goToWebinar/#3-gotowebinar1-node-update-webinar","text":"<p>This node will update the description of the webinar that we created in the previous node.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Webinar' from the Resource dropdown list.</li> <li>Select 'Update' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Webinar Key field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; webinarKey. You can also add the following expression: <code>{{$json[\"webinarKey\"]}}</code>.</li> <li>Click on the Add Field button and select 'Description' from the dropdown list.</li> <li>Enter a description in the Description field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node updates the description of the webinar that we created in the previous node.</p> <p></p>","title":"3. GoToWebinar1 node (update: webinar)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.goToWebinar/#4-gotowebinar2-node-get-webinar","text":"<p>This node will get the information about the webinar that we created earlier.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Webinar' from the Resource dropdown list.</li> <li>Select 'Get' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Webinar Key field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; GoToWebinar &gt; Output Data &gt; JSON &gt; webinarKey. You can also add the following expression: <code>{{$node[\"GoToWebinar\"].json[\"webinarKey\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns the information about the webinar.</p> <p></p>","title":"4. GoToWebinar2 node (get: webinar)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleAnalytics/","text":"<p>Google Analytics is a web analytics service offered by Google that lets you measure your advertising ROI as well as track your Flash, video, and social networking sites and applications.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Google Analytics"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleAnalytics/#basic-operations","text":"<ul> <li>Report<ul> <li>Return the analytics data</li> </ul> </li> <li>User Activity<ul> <li>Return user activity data.</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleAnalytics/#example-usage","text":"<p>This workflow allows you to get analytical metrics of your website using the Goole Analytics node and store it in Airtable. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Start - Google Analytics - Set - [Airtable]/integrations/nodes/n8n-nodes-base.airtable/)</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleAnalytics/#1-start-node","text":"<p>The Start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleAnalytics/#2-google-analytics-node-get-report","text":"<p>This node will retrieve the session metrics grouped by country for a given date range. You can select a different dimension, metric, and date range.</p> <ol> <li>First of all, you'll have to enter credentials for the Google Analytics node. You can find out how to do that here.</li> <li>Select a view from the View ID dropdown list.</li> <li>Click on Add Field and select 'Dimensions'.</li> <li>Click on the Add Dimension button.</li> <li>Select 'Country' from the Name field.</li> <li>Click on Add Field and select 'Date Ranges'.</li> <li>Click on the Add Date Range button.</li> <li>Select a start date in the Start Date field.</li> <li>Select an end date in the End Date field.</li> <li>Click on Add Field and select 'Metrics'.</li> <li>Click on the Add Metrics button.</li> <li>Enter <code>Session</code> in the Alias field.</li> <li>Enter <code>ga:sessions</code> in the Expression field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns the information about the sessions grouped by country.</p> <p></p>","title":"2. Google Analytics node (get: report)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleAnalytics/#3-set-node","text":"<p>We will use the Set node to set the values for the country and metrics. This data gets passed on to the next nodes in the workflow.</p> <ol> <li>Click on the Add Value button and select 'string' from the dropdown list.</li> <li>Enter <code>Country</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Nodes &gt; Input Data &gt; JSON &gt; country. You can also add the following expression: <code>{{$json[\"ga:country\"]}}</code>.</li> <li>Click on Add Value and select 'Number' from the dropdown list.</li> <li>Enter <code>Metric</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Nodes &gt; Input Data &gt; JSON &gt; total. You can also add the following expression: <code>{{$json[\"total\"]}}</code>.</li> <li>Toggle Keep Only Set to <code>true</code>. We set this option to true to ensure that only the data that we have set in this node get passed on to the next nodes in the workflow.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node sets the value for <code>Country</code> and <code>Metric</code>.</p> <p></p>","title":"3. Set node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleAnalytics/#4-airtable-node-append","text":"<p>This node will append the data that we set in the previous node to a table. Create a table like this in your Airtable base.</p> <ol> <li>First of all, you'll have to enter credentials for the Airtable node. You can find out how to do that here.</li> <li>Select 'Append' from the Operation dropdown list.</li> <li>Enter the Base ID in the Base ID field. For obtaining the Base ID, head over to their API page and select the correct base. You\u2019ll find the Base ID there.</li> <li>Enter the name of your table in the Table field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node appends the data that we had set in the previous node.</p> <p></p>","title":"4. Airtable node (Append)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleBigQuery/","text":"<p>Google BigQuery is a fully-managed, serverless data warehouse that enables scalable analysis over petabytes of data. It is a Platform as a Service that supports querying using ANSI SQL.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Google BigQuery"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleBigQuery/#basic-operations","text":"<p>Record</p> <ul> <li>Create a new record</li> <li>Retrieve all records</li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleBigQuery/#example-usage","text":"<p>This workflow allows you to send position updates of the ISS every minute to a table in Google BigQuery. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Cron - HTTP Request - Set - Google BigQuery</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleBigQuery/#1-cron-node","text":"<p>The Cron node will trigger the workflow every minute.</p> <ol> <li>Click on Add Cron Time.</li> <li>Select 'Every Minute' from the Mode dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the Cron node is configured to trigger the workflow every minute.</p> <p></p>","title":"1. Cron node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleBigQuery/#2-http-request-node-get","text":"<p>This node will make a GET request to the API <code>https://api.wheretheiss.at/v1/satellites/25544/positions</code> to fetch the position of the ISS. This information gets passed on to the next node in the workflow.</p> <ol> <li>Enter <code>https://api.wheretheiss.at/v1/satellites/25544/positions</code> in the URL field.</li> <li>Click on the Add Parameter button in the Query Parameters section.</li> <li>Enter <code>timestamps</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Enter the following expression: <code>{{Date.now()}}</code>. This expression will return the current timestamp.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node makes a GET request to the API and returns the information about the location of the ISS.</p> <p></p>","title":"2. HTTP Request node (GET)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleBigQuery/#3-set-node","text":"<p>We will use the Set node to ensure that only the data that we set in this node gets passed on to the next nodes in the workflow.</p> <ol> <li>Click on Add Value and select 'String' from the dropdown list.</li> <li>Enter <code>name</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; 0 &gt; name. You can also add the following expression: <code>{{$json[\"0\"][\"name\"]}}</code>.</li> <li>Click on Add Value and select 'Number' from the dropdown list.</li> <li>Enter <code>latitude</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Input Data &gt; JSON &gt; 0 &gt; latitude. You can also add the following expression: <code>{{$json[\"0\"][\"latitude\"]}}</code>.</li> <li>Click on Add Value and select 'Number' from the dropdown list.</li> <li>Enter <code>longitude</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Input Data &gt; JSON &gt; 0 &gt; longitude. You can also add the following expression: <code>{{$json[\"0\"][\"longitude\"]}}</code>.</li> <li>Click on Add Value and select 'Number' from the dropdown list.</li> <li>Enter <code>timestamp</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Input Data &gt; JSON &gt; 0 &gt; timpestamp. You can also add the following expression: <code>{{$json[\"0\"][\"timestamp\"]}}</code>.</li> <li>Toggle Keep Only Set to <code>true</code>. We set this option to true to ensure that only the data that we have set in this node get passed on to the next nodes in the workflow.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node uses the data from the previous node and returns the data that we set for the workflow.</p> <p></p>","title":"3. Set node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleBigQuery/#4-google-bigquery-node-create-record","text":"<p>This node will send the data from the previous node to the <code>position</code> table in Google BigQuery. If you have created a table with a different name, use that table instead.</p> <ol> <li>First of all, you'll have to enter credentials for the Google BigQuery node. You can find out how to do that here.</li> <li>Select a project from the Project ID dropdown list.</li> <li>Select a dataset from the Dataset ID dropdown list.</li> <li>Select the table from <code>position</code> from the Table ID dropdown list. If you created a table with a different name, select that table instead.</li> <li>Enter <code>name, latitude, longitude, timestamp</code> in the Columns field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node sends the data from the previous node to the <code>position</code> table in Google BigQuery.</p> <p></p>  <p> Activate workflow for production</p> <p>This example workflow uses the Cron node, which is a Trigger node. You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Cron node.</p>","title":"4. Google BigQuery node (create: record)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleBooks/","text":"<p>Google Books is a service from Google to browse, buy, or borrow books online.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Google Books"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleBooks/#basic-operations","text":"<ul> <li>Bookshelf<ul> <li>Retrieve a specific bookshelf resource for the specified user</li> <li>Get all public bookshelf resource for the specified user</li> </ul> </li> <li>Bookshelf Volume<ul> <li>Add a volume to a bookshelf</li> <li>Clears all volumes from a bookshelf</li> <li>Get all volumes in a specific bookshelf for the specified user</li> <li>Moves a volume within a bookshelf</li> <li>Removes a volume from a bookshelf</li> </ul> </li> <li>Volume<ul> <li>Get a volume resource based on ID</li> <li>Get all volumes filtered by query</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleBooks/#example-usage","text":"<p>This workflow allows you to get a volume and add it to your bookshelf using the Google Books node. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Start - Google Books</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleBooks/#1-start-node","text":"<p>The Start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleBooks/#2-google-books-node-get-volume","text":"<p>This node will retrieve a volume from Google Books.</p> <ol> <li>Select 'OAuth2' from the Authentication dropdown list.</li> <li>Enter credentials for the Google Books node. You can find out how to enter credentials for this node here.</li> <li>Enter the ID of a volume in the Volume ID field.</li> <li>Click on Execute Node to run the workflow.</li> </ol> <p>In the screenshot below, you will observe that the node retrieves the information of the volume that we specify.</p> <p></p>","title":"2. Google Books node (get: volume)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleBooks/#3-google-books1-node-add-bookshelfvolume","text":"<p>This node will add the volume that we got from the previous node to a bookshelf in Google Books.</p> <ol> <li>Select 'OAuth2' in the Authentication field.</li> <li>Select the credentials that you entered in the previous Google Books node.</li> <li>Select 'Bookshelf Volume' from the Resource dropdown list.</li> <li>Select 'Add' from the Operation dropdown list.</li> <li>Enter a bookshelf id in the ID field.</li> <li>Click on the gears icon next to the Volume ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Google Books &gt; Output Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$node[\"Google Books\"].json[\"id\"]}}</code>.</li> <li>Click on Execute Node to run the workflow.</li> </ol> <p>In the screenshot below, you will notice that this node adds the volume that we got from the previous node to a bookshelf that we specified.</p> <p></p>","title":"3. Google Books1 node (add: bookshelfVolume)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleBooks/#4-google-books2-node-getall-bookshelfvolume","text":"<p>This node will return all the volumes in a bookshelf.</p> <ol> <li>Select 'OAuth2' in the Authentication field.</li> <li>Select the credentials that you entered in the previous Google Books node.</li> <li>Select 'Bookshelf Volume' from the Resource dropdown list.</li> <li>Select 'Get All' from the Operation dropdown list.</li> <li>Toggle My Library to true. This will return the information for your account.</li> <li>Click on the gears icon next to the Bookshelf ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Google Books1 &gt; Parameters &gt; shelfId. You can also add the following expression: <code>{{$node[\"Google Books1\"].parameter[\"shelfId\"]}}</code>.</li> <li>Click on Execute Node to run the workflow.</li> </ol> <p>In the screenshot below, you will notice that this node returns all the volumes in the bookshelf that we specified.</p> <p></p>","title":"4. Google Books2 node (getAll: bookshelfVolume)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleCalendar/","text":"<p>Google Calendar is a time-management and scheduling calendar service developed by Google.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Google Calendar"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleCalendar/#basic-operations","text":"<ul> <li>Calendar<ul> <li>If a time-slot is available in a calendar</li> </ul> </li> <li>Event<ul> <li>Add a event to calendar</li> <li>Delete an event</li> <li>Retrieve an event</li> <li>Retrieve all events from a calendar</li> <li>Update an event</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleCalendar/#example-usage","text":"<p>This workflow allows you to add an event to Google Calendar. You can also find the workflow on the website. This example usage workflow uses the following two nodes. - Start - Google Calendar</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleCalendar/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleCalendar/#2-google-calendar-node","text":"<ol> <li>First of all, you'll have to enter credentials for the Google Calendar node. You can find out how to do that here.</li> <li>Select the Calendar from the dropdown list of the user's calendar list.</li> <li>Enter the start date of your event in the Start field.</li> <li>Enter the end date of your event in the End field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>","title":"2. Google Calendar node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleChat/","text":"<p>Google Chat is a messaging platform.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Google Chat"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleChat/#basic-operations","text":"<ul> <li>Member<ul> <li>Get a membership</li> <li>Get all memberships in a space</li> </ul> </li> <li>Message<ul> <li>Create a message</li> <li>Delete a message</li> <li>Get a message</li> <li>Update a message</li> </ul> </li> <li>Space<ul> <li>Get a space</li> <li>Get all spaces the caller is a member of</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleCloudFirestore/","text":"<p>Google Cloud Firestore is a flexible, scalable database for mobile, web, and server development from Firebase and Google Cloud. It keeps your data in-sync across client apps through real-time listeners and offers offline support for mobile and web.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Google Cloud Firestore"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleCloudFirestore/#basic-operations","text":"<ul> <li>Document<ul> <li>Create a document</li> <li>Create/Update a document</li> <li>Delete a document</li> <li>Get a document</li> <li>Get all documents from a collection</li> <li>Runs a query against your documents</li> </ul> </li> <li>Collection<ul> <li>Get all root collections</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleCloudFirestore/#example-usage","text":"<p>This workflow allows you to create, update, and get a document in the Google Cloud Firestore. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Start - Set - Google Cloud Firestore</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleCloudFirestore/#1-start-node","text":"<p>The Start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleCloudFirestore/#2-set-node","text":"<p>We will use the Set node to set the name and id.</p> <ol> <li>Click on Add Value and select 'String' from the dropdown list.</li> <li>Enter <code>name</code> in the Name field.</li> <li>Enter <code>n8n</code> in the Value field.</li> <li>Click on Add Value and select 'Number' from the dropdown list.</li> <li>Enter <code>id</code> in the Name field.</li> <li>Enter <code>1</code> in the Value field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that node sets the value for name and id.</p> <p></p>","title":"2. Set node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleCloudFirestore/#3-google-cloud-firestore-node-document-create","text":"<p>This node will create a new document in a collection in Google Cloud Firestore with the data from the previous node.</p> <ol> <li>First of all, you'll have to enter credentials for the Google Cloud Firestore node. You can find out how to do that here.</li> <li>Select 'Create' from the Operation dropdown list.</li> <li>Select a project from the Project ID dropdown list.</li> <li>Enter the name of your collection in the Collection field.</li> <li>Enter <code>id, name</code> in the Columns / attributes field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node creates a new document using the data from the previous node.</p> <p></p>","title":"3. Google Cloud Firestore node (document: create)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleCloudFirestore/#4-set-node","text":"<p>We will use the Set node to ensure that only the data that we set in this node gets passed on to the next nodes in the workflow. We will set a new value for <code>name</code>.</p> <ol> <li>Click on Add Value and select 'String' from the dropdown list.</li> <li>Enter <code>name</code> in the Name field.</li> <li>Enter <code>nodemation</code> in the Value field.</li> <li>Click on Add Value and select 'String' from the dropdown list.</li> <li>Enter <code>document_id</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Google Cloud Firestore &gt; Output Data &gt; JSON &gt; _id. You can also add the following expression: <code>{{$node[\"Google Cloud Firestore\"].json[\"_id\"]}}</code>.</li> <li>Toggle Keep Only Set to <code>true</code>. We set this option to true to ensure that only the data that we have set in this node get passed on to the next nodes in the workflow.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node sets the values of <code>name</code> and <code>document_id</code>. These values are passed to the next node in the workflow.</p> <p></p>","title":"4. Set node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleCloudFirestore/#5-google-cloud-firestore1-node-document-upsert","text":"<p>This node will update the value of the <code>name</code> field in the document that we created using the Google Cloud Firestore node.</p> <ol> <li>Select the credentials that you entered in the previous Google Cloud Firestore node.</li> <li>Select 'Create/Update' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Project ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Google Cloud Firestore &gt; Parameters &gt; projectId. You can also add the following expression: <code>{{$node[\"Google Cloud Firestore\"].parameter[\"projectId\"]}}</code>.</li> <li>Click on the gears icon next to the Collection field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Google Cloud Firestore &gt; Parameters &gt; collection. You can also add the following expression: <code>{{$node[\"Google Cloud Firestore\"].parameter[\"collection\"]}}</code>.</li> <li>Enter <code>document_id</code> in the Update Key field.</li> <li>Enter <code>name</code> in the Column /Attributes field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node updates the value of the <code>name</code> field in the document that we created using the Google Cloud Firestore node.</p> <p></p>","title":"5. Google Cloud Firestore1 node (document: upsert)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleCloudFirestore/#6-google-cloud-firestore-node-document-get","text":"<p>This node will get the document that we created using the Google Cloud Firestore node.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Click on the gears icon next to the Project ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Google Cloud Firestore &gt; Parameters &gt; projectId. You can also add the following expression: <code>{{$node[\"Google Cloud Firestore\"].parameter[\"projectId\"]}}</code>.</li> <li>Click on the gears icon next to the Collection field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Google Cloud Firestore &gt; Parameters &gt; collection. You can also add the following expression: <code>{{$node[\"Google Cloud Firestore\"].parameter[\"collection\"]}}</code>.</li> <li>Click on the gears icon next to the Document ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Set1 &gt; Output Data &gt; JSON &gt; document_id. You can also add the following expression: <code>{{$node[\"Set1\"].json[\"document_id\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns the document that we created using the Google Cloud Firestore node.</p> <p></p>","title":"6. Google Cloud Firestore node (document: get)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleCloudNaturalLanguage/","text":"<p>Google Cloud Natural Language uses machine learning to reveal the structure and meaning of text. You can extract information about people, places, and events, and better understand social media sentiment and customer conversations.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Google Cloud Natural Language"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleCloudNaturalLanguage/#basic-operations","text":"<ul> <li>Document<ul> <li>Analyze Sentiment</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleCloudNaturalLanguage/#example-usage","text":"<p>This workflow allows you to analyze the sentiment of feedback received via a Typeform submission and send a message on Mattermost if that feedback is negative. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Typeform Trigger - Google Cloud Natural Language - IF - Mattermost - No Operation, do nothing</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleCloudNaturalLanguage/#1-typeform-trigger-node","text":"<p>This node will trigger the workflow when a feedback form is submitted. Make sure to create a feedback form for your event.</p> <ol> <li>Select 'Access Token' from the Authentication dropdown list.</li> <li>Enter the credentials for the Typeform Trigger node. You can find out how to do that here.</li> <li>Select the event feedback form from the Form dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node triggers the workflow when feedback is submitted. We will pass this feedback to the next nodes in the workflow. </p>","title":"1. Typeform Trigger node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleCloudNaturalLanguage/#2-google-cloud-natural-language-node-analyzesentiment-document","text":"<p>This node will analyze the sentiment of the feedback that we got from the previous node. We will pass the analysis score to the next node in the workflow.</p> <ol> <li>First of all, you'll have to enter credentials for the Google Cloud Natural Language node. You can find out how to enter credentials for this node here.</li> <li> <p>Click on the gears icon next to the Content field and click on Add Expression.</p> </li> <li> <p>Select the following in the Variable Selector section: Nodes &gt; Typeform Trigger &gt; Output Data &gt; JSON &gt; What did you think about the event? You can also add the following expression: <code>{{$node[\"Typeform Trigger\"].json[\"What did you think about the event?\"]}}</code>. If you want to analyze the sentiment for a different question, select that question instead.</p> </li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node analyzes the sentiment of the feedback and gives a score based on that.</p> <p></p>","title":"2. Google Cloud Natural Language node (analyzeSentiment: document)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleCloudNaturalLanguage/#3-if-node","text":"<p>This node will check if the score we got from the previous node is smaller than <code>0</code>. If the score is smaller than <code>0</code>, it will return true otherwise false.</p> <ol> <li>Click on Add Condition and select 'Number'.</li> <li>Click on the gears icon next to the Value 1 field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Google Cloud Natural Language &gt; Output Data &gt; JSON &gt; documentSentiment &gt; score. You can also add the following expression: <code>{{$node[\"Google Cloud Natural Language\"].json[\"documentSentiment\"][\"score\"]}}</code>.</li> <li>Select 'Smaller' from the Operation dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node checks if the score that we received from the previous node is smaller than <code>0</code>.</p> <p></p>","title":"3. IF node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleCloudNaturalLanguage/#4-mattermost-node-post-message","text":"<p>This node will send the feedback and the analysis score to the <code>Feedback</code> channel in Mattermost. If you have a different channel, use that instead.</p> <ol> <li>Create a Mattermost node connected to the 'true' output of the IF node.</li> <li>You'll have to enter credentials for the Mattermost node. You can find out how to enter credentials for this node here.</li> <li>Select a channel from the Channel ID dropdown list.</li> <li> <p>Click on the gears icon next to the Message field click on Add Expression.</p> </li> <li> <p>Enter the following message in the Expression field: <code>You got a new feedback with a score of {{$node[\"Google Cloud Natural Language\"].json[\"documentSentiment\"][\"score\"]}}. Here is what it says:{{$node[\"Typeform Trigger\"].json[\"What did you think about the event?\"]}}</code>.</p> </li> <li>Click on Execute Node to run the workflow.</li> </ol> <p>In the screenshot below, you will notice that the node sends the feedback and the analysis score to the <code>Feedback</code> channel in Mattermost.</p> <p></p>","title":"4. Mattermost node (post: message)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleCloudNaturalLanguage/#5-noop-node","text":"<p>Adding this node here is optional, as the absence of this node won't make a difference to the functioning of the workflow.</p> <ol> <li>Create a NoOp node connected to the 'false' output of the IF node.</li> <li>Click on Execute Node to run the node.</li> </ol> <p></p>  <p> Activate workflow for production</p> <p>This example workflow uses the Typeform Trigger node. You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered when a new form is submitted.</p>","title":"5. NoOp node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleCloudRealtimeDatabase/","text":"<p>Google Cloud Realtime Database is a cloud-hosted database. Data is stored as JSON and synchronized in realtime to every connected client.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Google Cloud Realtime Database"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleCloudRealtimeDatabase/#basic-operations","text":"<ul> <li>Write data to a database</li> <li>Delete data from a database</li> <li>Get a record from a database</li> <li>Append to a list of data</li> <li>Update item on a database</li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleCloudRealtimeDatabase/#example-usage","text":"<p>This workflow allows you to receive updates of the position of the ISS every minute and push it to a database using the Google Cloud Realtime Database node. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Cron - HTTP Request - Set - Google Cloud Realtime Database</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleCloudRealtimeDatabase/#1-cron-node","text":"<p>The Cron node will trigger the workflow every minute.</p> <ol> <li>Click on Add Cron Time.</li> <li>Select 'Every Minute' from the Mode dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the Cron node is configured to trigger the workflow every minute.</p> <p></p>","title":"1. Cron node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleCloudRealtimeDatabase/#2-http-request-node-get","text":"<p>This node will make a GET request to the API <code>https://api.wheretheiss.at/v1/satellites/25544/positions</code> to fetch the position of the ISS. This information gets passed on to the next node in the workflow.</p> <ol> <li>Enter <code>https://api.wheretheiss.at/v1/satellites/25544/positions</code> in the URL field.</li> <li>Click on the Add Parameter button in the Query Parameters section.</li> <li>Enter <code>timestamps</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Enter the following expression: <code>{{Date.now()}}</code>. This expression will return the current timestamp.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node makes a GET request to the API and returns the information about the location of the ISS.</p> <p></p>","title":"2. HTTP Request node (GET)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleCloudRealtimeDatabase/#3-set-node","text":"<p>We will use the Set node to ensure that only the data that we set in this node gets passed on to the next nodes in the workflow.</p> <ol> <li>Click on Add Value and select 'String' from the dropdown list.</li> <li>Enter <code>latitude</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; HTTP Request &gt; Output Data &gt; JSON &gt; 0 &gt; latitude. You can also add the following expression: <code>{{$node[\"HTTP Request\"].json[\"0\"][\"latitude\"]}}</code>.</li> <li>Click on Add Value and select 'String' from the dropdown list.</li> <li>Enter <code>longitude</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; HTTP Request &gt; Output Data &gt; JSON &gt; 0 &gt; longitude. You can also add the following expression: <code>{{$node[\"HTTP Request\"].json[\"0\"][\"longitude\"]}}</code>.</li> <li>Click on Add Value and select 'String' from the dropdown list.</li> <li>Enter <code>timestamp</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; HTTP Request &gt; Output Data &gt; JSON &gt; 0 &gt; timpestamp. You can also add the following expression: <code>{{$node[\"HTTP Request\"].json[\"0\"][\"timestamp\"]}}</code>.</li> <li>Toggle Keep Only Set to <code>true</code>. We set this option to true to ensure that only the data that we have set in this node get passed on to the next nodes in the workflow.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node uses the data from the previous node and returns the data that we set for the workflow.</p> <p></p>","title":"3. Set node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleCloudRealtimeDatabase/#4-google-cloud-realtime-database-node-push","text":"<p>This node will push the data from the previous node to the <code>iss</code> path in Google Cloud Realtime Database. If you have created a path with a different name, you can use that path instead.</p> <ol> <li>First of all, you'll have to enter credentials for the Google Cloud Realtime Database node. You can find out how to do that here.</li> <li>Select a project from the Project ID dropdown list.</li> <li>Select 'Push' from the Operation dropdown list.</li> <li>Enter a path in the Object Path field.</li> <li>Enter <code>latitude, longitude, timestamp</code> in the Columns / Attributes field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node pushes the data from the previous node to the <code>iss</code> path in Google Cloud Realtime Database.</p> <p></p>  <p> Activate workflow for production</p> <p>This example workflow uses the Cron node, which is a Trigger node. You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Cron node.</p>","title":"4. Google Cloud Realtime Database node (push)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleContacts/","text":"<p>Google Contacts is Google's contact management tool that is available in its free email service Gmail, as a standalone service, and as a part of Google's business-oriented suite of web apps Google Apps.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Google Contacts"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleContacts/#basic-operations","text":"<ul> <li>Contact<ul> <li>Create a contact</li> <li>Delete a contact</li> <li>Get a contact</li> <li>Retrieve all contacts</li> <li>Update a contact</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleContacts/#example-usage","text":"<p>This workflow allows you to create, update, and get a contact from Google Contacts. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Start - Google Contacts</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleContacts/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleContacts/#2-google-contacts-node-create-contact","text":"<ol> <li>First of all, you'll have to enter credentials for the Google Contacts node. You can find out how to do that here.</li> <li>Enter the family name in the Family Name field.</li> <li>Enter the given name in the Given Name field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p></p>","title":"2. Google Contacts node (create: contact)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleContacts/#3-google-contacts1-node-update-contact","text":"<ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Update' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Contact ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Google Contacts &gt; Output Data &gt; JSON &gt; contactId. You can also add the following expression: <code>{{$node[\"Google Contacts\"].json[\"contactId\"]}}</code>.</li> <li>Select <code>*</code> from the Fields dropdown list.</li> <li>Click on the Add Field button and select Company.</li> <li>Click on the Add Company button.</li> <li>Toggle the value to true for the Current field.</li> <li>Enter the company's domain in the Domain field.</li> <li>Enter the company's name in the Name field.</li> <li>Enter the title in the Title field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p></p>","title":"3. Google Contacts1 node (update: contact)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleContacts/#4-google-contacts2-node-get-contact","text":"<ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Get' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Contact ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Google Contacts &gt; Output Data &gt; JSON &gt; contactId. You can also add the following expression: <code>{{$node[\"Google Contacts\"].json[\"contactId\"]}}</code>.</li> <li>Select 'Organizations' from the Fields dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p></p>","title":"4. Google Contacts2 node (get: contact)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleDocs/","text":"<p>Google Docs is a web-based word processor that is part of Google's office software suite within its Google Drive service.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Google Docs"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleDocs/#basic-operations","text":"<ul> <li>Document<ul> <li>Create</li> <li>Get</li> <li>Update</li> </ul> </li> </ul>","title":"Basic operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleDocs/#example-usage","text":"<p>This workflow allows you to create a new Google Doc and add your desired text to it. This example usage workflow uses the following nodes. - Start - Google Docs</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleDocs/#1-start-node","text":"<p>The Start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleDocs/#2-google-docs-node-create","text":"<p>The Document resource is selected by default. Configure the remaining parameters as follows:</p> <ol> <li>From the Authentication dropdown select your desired method and the corresponding Credentials.</li> <li>From the Operation dropdown select Create.</li> <li>From the Drive dropdown select which of your drives this file will be created in. My Drive is selected by default.</li> <li>From the Folder dropdown select which of you drive folders this file will be created in. The root folder (<code>/</code>) is selected by default.</li> <li>In the Title field enter the name of your new Google Doc.</li> </ol> <p></p>","title":"2. Google Docs node - create"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleDocs/#3-google-docs-node-update","text":"<p>The Document resource is selected by default. Configure the remaining parameters as follows:</p> <ol> <li>From the Operation dropdown select Update.</li> <li>In the Doc ID or URL field, enter the document ID or URL of the file created by the previous node.</li> <li>From Actions, configure the fields as follows:<ul> <li>Object: Select the object of the action. Here we use 'Text'.</li> <li>Action: Select the action to be performed on the object. Here we use 'Insert'.</li> <li>Insert Segment: Select where in the document the action should be performed. Here we use 'Body'.</li> <li>Insert Location: Select the location within the selected Segment. Here we use 'At end of specific location'.</li> <li>Text: Enter the text to be inserted.</li> </ul> </li> </ol> <p></p>","title":"3. Google Docs node - update"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleDrive/","text":"<p>Google Drive is a file storage and synchronization service developed by Google. It allows users to store files on their servers, synchronize files across devices, and share files.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Google Drive"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleDrive/#basic-operations","text":"<ul> <li>Drive<ul> <li>Create a drive</li> <li>Delete a drive</li> <li>Get a drive</li> <li>List all drives</li> <li>Update a drive</li> </ul> </li> <li>File<ul> <li>Copy a file</li> <li>Delete a file</li> <li>Download a file</li> <li>List files and folders</li> <li>Share a file</li> <li>Update a file</li> <li>Upload a file</li> </ul> </li> <li>Folder<ul> <li>Create a folder</li> <li>Delete a folder</li> <li>Share a folder</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleDrive/#example-usage","text":"<p>This workflow allows you to download a file from Google Drive. You can also find the workflow on the website. This example usage workflow uses the following two nodes. - Start - Google Drive - Write Binary File</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleDrive/#1-start-node","text":"<p>The Start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleDrive/#2-google-sheets-node","text":"<ol> <li>First of all, you'll have to enter credentials for the Google Drive node. You can find out how to do that here, in the section 'Google Drive / Sheets API'.</li> <li>Select the authentication method you plan to use from the Authentication dropdown list.</li> <li>Select 'Download' from the Operation dropdown list.</li> <li>Copy the string of characters located between <code>/d/</code> and <code>/edit</code> in your Google Drive URL. Paste that string in the File ID field.</li> </ol>","title":"2. Google Sheets node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleDrive/#3-write-binary-file-node","text":"<ol> <li>Enter the destination file path in the File Name field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>","title":"3. Write Binary File node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleDrive/#faqs","text":"","title":"FAQs"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleDrive/#how-do-i-list-all-filesfolders-within-a-folder","text":"<p>To list all the files and folders within a folder, follow the steps mentioned below.</p> <ol> <li>Toggle Use Query String to <code>true</code>.</li> <li>Copy the string of characters located after <code>https://drive.google.com/drive/u/0/folders/</code>. This string is the folder ID.</li> <li>Enter <code>'FOLDER_ID' in parents</code> in the Query String field. Replace <code>FOLDER_ID</code> with the folder ID you copied in the previous step.</li> </ol> <p>There are several additional options available to fine grain the listed results. Refer to Search for files and folders: Querystring for more information.</p>","title":"How do I list all files/folders within a folder?"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googlePerspective/","text":"<p>Google Perspective is a free API that uses machine learning to identify \"toxic\" comments, making it easier to host better conversations online.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Google Perspective"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googlePerspective/#basic-operations","text":"<ul> <li>Analyze Comment</li> </ul>","title":"Basic operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googlePerspective/#example-usage","text":"<p>This workflow allows you to analyze a comment for profanity. This example usage workflow uses the following nodes. - Start - Google Perspective</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googlePerspective/#1-start-node","text":"<p>The Start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googlePerspective/#2-google-perspective-node","text":"<ol> <li>First enter credentials for the Google Perspective node. You can find out how to enter credentials for this node here.</li> <li>The Analyze Comment Operation is selected by default.</li> <li>In the Text field enter the comment to be analyzed.</li> <li>From the Properties section click Add Attribute.<ul> <li>For Attribute Name select Profanity.</li> <li>For Score Threshold leave the 0.00 default setting to return all scores.</li> </ul> </li> <li>Click on Execute Node to run the workflow.</li> </ol> <p></p>","title":"2. Google Perspective node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleSheets/","text":"<p>Google Sheets is a web-based spreadsheet program that is part of Google's office software  suite within its Google Drive service.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Google Sheets"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleSheets/#basic-operations","text":"<ul> <li>Spreadsheet<ul> <li>Create a spreadsheet</li> </ul> </li> <li>Sheet<ul> <li>Append data to a sheet</li> <li>Clear data from a sheet</li> <li>Create a new sheet</li> <li>Delete columns and rows from a sheet</li> <li>Look up a specific column value and return the matching row</li> <li>Read data from a sheet</li> <li>Remove a sheet</li> <li>Update rows in a sheet</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleSheets/#example-usage","text":"<p>This workflow allows you to append, lookup, update, and read data from Google Sheets. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Start - Set - Google Sheets</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleSheets/#1-start-node","text":"<p>The Start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleSheets/#2-set-node","text":"<p>This example workflow uses the Set node to generate data that we want to add to Google Sheets. You can also use other nodes, for example, the HTTP Request node, to get the data you want to add to the Google Sheets.</p> <ol> <li>Click on the Add Value button and select 'String' from the dropdown list.</li> <li>Enter <code>Name</code> in the Name field.</li> <li>Enter the name for a house in the Value field.</li> <li>Click on the Add Value button and select 'String' from the dropdown list.</li> <li>Enter <code>Rent</code> in the Name field.</li> <li>Enter the rent of the house along with the currency in the Value field. For example, <code>$1000</code>.</li> <li>Click on the Add Value button and select 'String' from the dropdown list.</li> <li>Enter <code>City</code> in the Name field.</li> <li>Enter the name of the city in the Value field.</li> <li>Click on the Add Value button and select 'Number' from the dropdown list.</li> <li>Enter <code>ID</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Paste the following expression: <code>{{Math.floor(Math.random()*1000)}}</code>. This expression will generate a three-digit random number.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the Set node has created data that will be passed to the next nodes in the workflow. Also, the output shows a random three-digit number as the ID, created by the expression.</p> <p></p>","title":"2. Set node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleSheets/#3-google-sheets-node-append","text":"","title":"3. Google Sheets node (Append)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleSheets/#creating-a-google-sheets-spreadsheet","text":"<ol> <li>Create a new Google Sheets spreadsheet.</li> <li>In your spreadsheet, enter <code>ID</code>, <code>Name</code>, <code>Rent</code>, and <code>City</code> in the cells A1, B1, C1, and D1, respectively.</li> <li>Copy the string of characters located between <code>/d/</code> and <code>/edit</code> in your spreadsheet URL. This string is the Spreadsheet ID, which we will use in the Google Sheets node.</li> </ol>","title":"Creating a Google Sheets spreadsheet"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleSheets/#configure-the-google-sheets-node","text":"<p>This Google Sheets node will add the data from the Set node in a new row to the Google Sheets that we will specify using the Spreadsheet ID.</p> <ol> <li>Select 'OAuth2' from the Authentication dropdown list.</li> <li>First of all, you'll have to enter credentials for the Google Sheets node. You can find out how to enter credentials for this node here.</li> <li>Select 'Append' from the Operation dropdown list.</li> <li>Paste the Spreadsheet ID you copied in the previous step, in the Spreadsheet ID field.</li> <li>In the Range field, enter the range of columns to append the data to your spreadsheet. Make sure that your range includes enough columns for all the data in the Set node. For this workflow, enter <code>A:D</code> in the Range field.</li> <li>Click on the Add Option button and select 'Value Input Mode' from the dropdown list.</li> <li>Select 'User Entered' from the Value Input Mode dropdown list. Refer to the FAQs for more information on why we used this option.</li> <li>Click on Execute Node to run the workflow.</li> </ol> <p>In the screenshot below, you will observe that the node adds the data from the Set node to the Google Sheets. You will also notice that the values get added in the format they are set.</p> <p></p>","title":"Configure the Google Sheets node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleSheets/#4-google-sheets1-node-lookup","text":"<p>This node will return the entries from the Google Sheets that have <code>Berlin</code> as the City. Feel free to change the city name to something else but make sure you have at least one record with the city name you look for in your Google Sheets spreadsheet.</p> <ol> <li>Select 'OAuth2' from the Authentication dropdown list.</li> <li>Select the credentials that you entered in the previous Google Sheets node.</li> <li>Select 'Lookup' from the Operation dropdown list.</li> <li>In the Spreadsheet ID field, enter the same string used in the previous Google Sheets node.</li> <li>Enter <code>City</code> in the Lookup Column field.</li> <li>Enter <code>Berlin</code> in the Lookup Value field.</li> <li>Click on the Add Option button and select 'Return All Matches' from the dropdown list.</li> <li>Toggle Return All Matches to true. This option returns all the entries that contain <code>Berlin</code> as the City. Refer to the FAQs for more information.</li> <li>Click on the Add Option button and select 'Value Render Mode' from the dropdown list. This option determines how the values should render in the output. The 'Unformatted Value' option returns the data without formatting it. Refer to the FAQs for more information on why we used this option.</li> <li>Click on Execute Node to run the workflow.</li> </ol> <p>In the screenshot below, you will notice that the node returns all the entries that contain Berlin as the City. The output is unformatted and is passed on to the next nodes in the workflow.</p> <p></p>","title":"4. Google Sheets1 node (Lookup)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleSheets/#5-set1-node","text":"<p>We will use expressions to get the data from the previous node and increase the rent by $100 for the houses in Berlin.</p> <ol> <li>Click on the Add Value button and select 'String' from the dropdown list.</li> <li>Enter <code>Name</code> in the Name field.</li> <li>Click on the gears icon next to the Value field click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Google Sheets1 &gt; Output Data &gt; JSON &gt; Name. You can also add the following expression: <code>{{$node[\"Google Sheets1\"].json[\"Name\"]}}</code>.</li> <li>Click on the Add Value button and select 'String' from the dropdown list.</li> <li>Enter <code>City</code> in the Name field.</li> <li>Click on the gears icon next to the Value field click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Google Sheets1 &gt; Output Data &gt; JSON &gt; City. You can also add the following expression: <code>{{$node[\"Google Sheets1\"].json[\"City\"]}}</code>.</li> <li>Click on the Add Value button and select 'Number' from the dropdown list.</li> <li>Click on the gears icon next to the Value field click on Add Expression.</li> <li>Paste the following expression: <code>{{$node[\"Google Sheets1\"].json[\"Rent\"]+100}}</code>. This expression will increase the rent by $100.</li> <li>Click on the Add Value button and select 'Number' from the dropdown list.</li> <li>Enter <code>ID</code> in the Name field.</li> <li>Click on the gears icon next to the Value field click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Google Sheets1 &gt; Output Data &gt; JSON &gt; ID. You can also add the following expression: <code>{{$node[\"Google Sheets1\"].json[\"ID\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node uses an expression to get the data from the previous node and increases the rent of the houses by $100. This new data will be passed to the next nodes in the workflow.</p> <p></p>","title":"5. Set1 node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleSheets/#6-google-sheets2-node-update","text":"<p>This node will update the rent for the houses in Berlin with the new rent set in the previous node.</p> <ol> <li>Select 'OAuth2' in the Authentication field.</li> <li>Select the credentials that you entered in the previous Google Sheets node.</li> <li>Select 'Update' from the Operation dropdown list.</li> <li>In the Spreadsheet ID field, enter the same string used in the previous Google Sheets node.</li> <li>In the Range field, enter the same range used in the previous Google Sheets node.</li> <li>Enter <code>ID</code> in the Key field.</li> <li>Click on the Add Option button and select 'Value Input Mode' from the dropdown list.</li> <li>Select 'User Entered' from the Value Input Mode dropdown list. Refer to the FAQs for more information on why we used this option.</li> <li>Click on Execute Node to run the workflow.</li> </ol> <p>In the screenshot below, you will notice that this node updates the rent values of the houses in Berlin based on the ID in the Google Sheets. You will also see that the updated values are in the correct format.</p> <p></p>","title":"6. Google Sheets2 node (Update)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleSheets/#7-google-sheets3-node-read","text":"<p>This node will read the data from Google Sheets.</p> <ol> <li>Select 'OAuth2' in the Authentication field.</li> <li>Select the credentials that you entered in the previous Google Sheets node.</li> <li>Select 'Read' from the Operation dropdown list.</li> <li>In the Spreadsheet ID field, enter the same string used in the previous Google Sheets node.</li> <li>In the Range field, enter the same range used in the previous Google Sheets node.</li> <li>Click on the Add Option button and select 'Value Render Mode' from the dropdown list.</li> <li>Select 'Formatted Value' from the Value Render Mode dropdown list. Refer to the FAQs for more information on why we used this option.</li> <li>Click on Execute Node to run the workflow.</li> </ol> <p>In the screenshot below, you will notice that this node returns all the values from the Google Sheets in the appropriate format.</p> <p></p>","title":"7. Google Sheets3 node (Read)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleSheets/#faqs","text":"","title":"FAQs"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleSheets/#what-are-the-various-formats-to-read-the-data-from-the-google-sheets","text":"<p>There are three different formats to read the data from the Google Sheets.</p> <ul> <li>Unformatted Value: In this mode, the node calculates the values, but doesn't format them. For example, if cell A1 is 1.23, and cell A2 is =A1, and the format of these cells is currency, then values returned will be of the format number. For cell A1 and A2, the values returned will be 1.23.</li> <li>Formula: In this mode, the node will return the formula. The node does not calculate the values. For example,  if cell A1 is 1.23, and cell A2 is =A1, and the format of these cells is currency, then the value returned will be of the format number. The value returned for cell A2 will be =A1.</li> <li>Formatted Value: In this mode, the node calculates the values and returns the values with the cells' format. For example, if cell A1 is 1.23, and cell A2 is =A1, and the format of these cells is currency, then the values returned will be $1.23.</li> </ul> <p>To change the format, click on Add Option and select 'Value Render Mode' from the dropdown list. Select the appropriate option you want your output to be returned to from the Value Render Mode dropdown list.</p>","title":"What are the various formats to read the data from the Google Sheets?"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleSheets/#how-to-enter-values-in-the-correct-format","text":"<p>There are two different formats you can use to add/update data in Google Sheets.</p> <ul> <li>Raw: This is the default format. In this format, the values are stored as-is and not parsed. For example, the node stores the text 2020-10-01 as a string in the Google Sheets.</li> <li>User Entered: In this format, the node parse the values. It follows the rules that are applied when entering text into the cell via the Google Sheet UI. For example, the node stores the text 2020-10-01 as a date in the Google Sheets.</li> </ul> <p>To change the format, click on Add Option and select 'Value Input Mode' from the dropdown list. Select the appropriate option you want your data to be stored in, from the Value Input Mode dropdown list.</p>","title":"How to enter values in the correct format?"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleSheets/#how-to-append-an-array-in-the-google-sheets","text":"<p>To insert the data in Google Sheets, you have to first convert the data in a valid JSON (key, value) format. You can use the Function node to convert the array into JSON format.</p>","title":"How to append an array in the Google Sheets?"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleSheets/#how-to-return-all-the-values-with-the-lookup-operation","text":"<p>By default, the Lookup operation returns only the first value that it matches. To return all the values that match, click on Add Option and select 'Return All Matches'. Toggle Return All Matches to true.</p>","title":"How to return all the values with the Lookup operation?"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleSheets/#how-to-specify-a-sheet","text":"<p>By default, the Google Sheets node will operate on the default sheet, <code>Sheet 1</code>. If you rename the sheet or want to use a different sheet, you have to specify the name of the sheet. You can do that in the Range field. For example, if you need to use a sheet named <code>n8n</code> for the range <code>A</code> to <code>H</code>, enter <code>n8n!A:H</code> in the Range field.</p>","title":"How to specify a sheet?"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleSlides/","text":"<p>Google Slides is a web-based presentation program that is part of Google's office software suite within its Google Drive service. It allows you to create, edit, and collaborate.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Google Slides"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleSlides/#basic-operations","text":"<ul> <li>Page<ul> <li>Get a page</li> <li>Get a thumbnail</li> </ul> </li> <li>Presentation<ul> <li>Create a presentation</li> <li>Get a presentation</li> <li>Get presentation slides</li> <li>Replace text in a presentation</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleSlides/#example-usage","text":"<p>This workflow allows you to get all the slides from a presentation and get the thumbnails for the pages. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Start - Google Slides</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleSlides/#1-start-node","text":"<p>The Start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleSlides/#2-google-slides-node-getslides-presentation","text":"","title":"2. Google Slides node (getSlides: presentation)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleSlides/#get-presentation-id","text":"<ol> <li>Open a Google Slides presentation.</li> <li>Copy the string of characters located between <code>/d/</code> and <code>/edit</code> in your presentation URL. This string is the Presentation ID, which we will use in the Google Slides node.</li> </ol>","title":"Get Presentation ID"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleSlides/#configure-the-google-slides-node","text":"<p>This Google Slides node will get all the slides from a presentation.</p> <ol> <li>Select 'OAuth2' from the Authentication dropdown list.</li> <li>First of all, you'll have to enter credentials for the Google Slides node. You can find out how to enter credentials for this node here.</li> <li>Select 'Get Slides' from the Operation dropdown list.</li> <li>Paste the Presentation ID you copied in the previous step, in the Presentation ID field.</li> <li>Toggle Return All to <code>true</code>.</li> <li>Click on Execute Node to run the workflow.</li> </ol> <p>In the screenshot below, you will notice that the node returns all the slides from the presentation.</p> <p></p>","title":"Configure the Google Slides node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleSlides/#3-google-slides1-node-getthumbnail-page","text":"<p>This node will return thumbnails of the pages that were returned by the previous node.</p> <ol> <li>Select 'OAuth2' from the Authentication dropdown list.</li> <li>Select the credentials that you entered in the previous Google Slides node.</li> <li>Select 'Page' from the Resource dropdown list.</li> <li>Select 'Get Thumbnail' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Presentation ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Google Slides &gt; Parameters &gt; presentationId. You can also add the following expression: <code>{{$node[\"Google Slides\"].parameter[\"presentationId\"]}}</code>.</li> <li>Click on the gears icon next to the Page Object ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Google Slides &gt; Output Data &gt; JSON &gt; objectId. You can also add the following expression: <code>{{$json[\"objectId\"]}}</code>.</li> <li>Toggle Download to <code>true</code>.</li> <li>Click on Execute Node to run the workflow.</li> </ol> <p>In the screenshot below, you will notice that the node returns thumbnails of the pages that were returned by the previous node.</p> <p></p>","title":"3. Google Slides1 node (getThumbnail: page)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleTasks/","text":"<p>Google Tasks is a task management service developed by Google. It keeps track of your daily tasks, organize multiple lists, and track important deadlines.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Google Tasks"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleTasks/#basic-operations","text":"<ul> <li>Task<ul> <li>Add a task to tasklist</li> <li>Delete a task</li> <li>Retrieve a task</li> <li>Retrieve all tasks from a tasklist</li> <li>Update a task</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleTasks/#example-usage","text":"<p>This workflow allows you to add a task to Google Tasks. You can also find the workflow on the website. This example usage workflow uses the following two nodes. - Start - Google Tasks</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleTasks/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleTasks/#2-google-tasks-node","text":"<ol> <li>First of all, you'll have to enter credentials for the Google Tasks node. You can find out how to do that here.</li> <li>Select the TaskList from the dropdown list of the user's task-lists where a new task needs to be added.</li> <li>Enter a title for the task in the Title field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>","title":"2. Google Tasks node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleTranslate/","text":"<p>Google Translate is a free multilingual translation service developed by Google to translate text and websites from one language into another.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Google Translate"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleTranslate/#basic-operations","text":"<ul> <li>Language<ul> <li>Translate data</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleTranslate/#example-usage","text":"<p>This workflow allows you to translate text from English to German using the Google Translate node. You can also find the workflow on the website. This example usage workflow uses the following nodes. - Start - Google Translate</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleTranslate/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.googleTranslate/#2-google-translate-node-translatelanguage","text":"<p>This node will translate the text <code>Hello from n8n!</code> to German. You can enter a different text as well as select another language to translate the text to.</p> <ol> <li>Select 'OAuth2' from the Authentication dropdown list.</li> <li>Next, you'll have to enter credentials for the Google Translate node. You can find out how to enter credentials for this node here.</li> <li>Enter the text <code>Hello from n8n!</code> in the Text field.</li> <li>Select 'DE' from the Translate To dropdown list. DE is the language code for German. You can refer to Language Support to view the list of all supported languages and their corresponding language codes.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node translates the text <code>Hello from n8n!</code> to German.</p> <p></p>","title":"2. Google Translate node (translate:language)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.gotify/","text":"<p>Gotify is a server for sending and receiving messages.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Gotify"},{"location":"workflow/integrations/nodes/workflow-nodes-base.gotify/#basic-operations","text":"<ul> <li>Message<ul> <li>Create</li> <li>Delete</li> <li>Get All</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.gotify/#example-usage","text":"<p>This workflow allows you to send daily weather updates via a message using the Gotify node. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Cron - OpenWeatherMap - Gotify</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.gotify/#1-cron-node","text":"<p>The Cron node will trigger the workflow daily at 9 AM.</p> <ol> <li>Click on Add Cron Time.</li> <li>Set hours to 9 in the Hour field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the Cron node is configured to trigger the workflow every day at 9 AM.</p> <p></p>","title":"1. Cron node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.gotify/#2-openweathermap-node-current-weather","text":"<p>This node will return data about the current weather in Berlin. To get the weather updates for your city, you can enter the name of your city instead.</p> <ol> <li>First of all, you'll have to enter credentials for the OpenWeatherMap node. You can find out how to do that here.</li> <li>Enter <code>berlin</code> in the City field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns data about the current weather in Berlin.</p> <p></p>","title":"2. OpenWeatherMap node (Current Weather)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.gotify/#3-gotify-node-create-message","text":"<p>This node will send a message with the weather update.</p> <ol> <li>First of all, you'll have to enter credentials for the Gotify node. You can find out how to do that here.</li> <li> <p>Click on the gears icon next to the Message field and click on Add Expression.</p> </li> <li> <p>Enter the following message in the Expression field: <code>Hey! The temperature outside is {{$node[\"OpenWeatherMap\"].json[\"main\"][\"temp\"]}}\u00b0C.</code>.</p> </li> <li>Click on Add Field and select 'Title' from the dropdown list.</li> <li>Enter <code>Today's Weather Update</code> in the Title field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node sends a message with the weather update.</p> <p></p>  <p> Activate workflow for production</p> <p>This example workflow uses the Cron node, which is a Trigger node. You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Cron node.</p>","title":"3. Gotify node (create: message)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.grafana/","text":"<p>Grafana is a multi-platform open source analytics and interactive visualization web application. It provides charts, graphs, and alerts for the web when connected to supported data sources.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Grafana"},{"location":"workflow/integrations/nodes/workflow-nodes-base.grafana/#basic-operations","text":"<ul> <li>Dashboard<ul> <li>Create a dashboard</li> <li>Delete a dashboard</li> <li>Get a dashboard</li> <li>Get all dashboards</li> <li>Update a dashboard</li> </ul> </li> <li>Team<ul> <li>Create a team</li> <li>Delete a team</li> <li>Get a team</li> <li>Retrieve all teams</li> <li>Update a team</li> </ul> </li> <li>Team Member<ul> <li>Add a member to a team</li> <li>Retrieve all team members</li> <li>Remove a member from a team</li> </ul> </li> <li>User<ul> <li>Delete a user from the current organization</li> <li>Retrieve all users in the current organization</li> <li>Update a user in the current organization</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.grist/","text":"<p>Grist combines the flexibility of a spreadsheet with the robustness of a database to organize your data, your way.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Grist"},{"location":"workflow/integrations/nodes/workflow-nodes-base.grist/#basic-operations","text":"<ul> <li>Create rows in a table</li> <li>Delete rows from a table</li> <li>Read rows from a table</li> <li>Update rows in a table</li> </ul>","title":"Basic operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.grist/#example-usage","text":"<p>This workflow allows you to insert and update data from a table in Grist. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes:</p> <ul> <li>Start</li> <li>Grist</li> </ul> <p>The final workflow should look like the following:</p> <p></p>","title":"Example usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.grist/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.grist/#2-grist-node-create","text":"<p>This workflow assumes there is a document with a table in your Grist workspace.</p> <p></p> <p>This node will create a new record in a table.</p> <ol> <li>First enter your credentials for the Grist node. You can find out how to do that here.</li> <li>Select 'Create' from the Operation dropdown list.</li> <li>Enter that ID of your document into the Document ID field.</li> <li>Enter the ID of your table in the Table ID field.</li> <li>Under Fields to Send click the Add Field button twice.</li> <li>For the first field, choose Name from the Field ID dropdown, and type a name in the Field Value.</li> <li>For the second field, choose <code>Link</code> from the Field ID dropdown, and enter a URL in the Field Value.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>Here is an example of how the configuration should look:</p> <p></p> <p>And here's the result of adding the record to the Grist table:</p> <p></p>","title":"2. Grist node (Create)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.grist/#3-grist1-node-get-all","text":"<p>This node will list all the records with a particular <code>Name</code> value.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select the 'Get All' option from the Operation dropdown list.</li> <li>Click on the gears icon next to the Document ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Grist &gt; Parameters &gt; docId.</li> <li>Click on the gears icon next to the Table field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Grist &gt; Parameters &gt; tableId.</li> <li>Click on Add Option and select 'Filter' from the dropdown list.</li> <li>Click the Add Filter button.</li> <li>Select <code>Name</code> from the Column dropdown.</li> <li>Type a name in the Values field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, the node only returned the record with the name 'Grist':</p> <p></p>","title":"3. Grist1 node (Get All)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.grist/#4-grist2-node-update","text":"<p>This node will update the Name field of the record that we received from the previous Grist node.</p> <ol> <li>Select the Grist1 node in your workflow and click 'Duplicate Node'. Now you won't need to specify the credentials, Document ID, and Table ID again.</li> <li>Double click the newly duplicated node (Grist2) to edit it.</li> <li>Select 'Update' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Row ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Grist1 &gt; Output Data &gt; JSON &gt; id.</li> <li>Under Fields to Send click the Add Field button.</li> <li>Choose <code>Name</code> from the Field ID dropdown, and type a name in the Field Value.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>Here is an example of how the configuration should look:</p> <p></p> <p>The result is that the Name in the first record changed from 'Grist' to 'Grist Labs':</p> <p></p>","title":"4. Grist2 node (Update)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.grist/#faqs","text":"","title":"FAQs"},{"location":"workflow/integrations/nodes/workflow-nodes-base.grist/#how-to-get-the-row-id","text":"<p>To update or delete a particular record, you need the Row ID. There are two ways to get the Row ID.</p> <p>Create a Row ID column in Grist</p> <p>Create a new column in your Grist table with the formula <code>$id</code>.</p> <p>Use the Get All operation</p> <p>The Get All operation returns the Row ID of each record along with the fields.</p> <p>You can obtain it with the expression <code>{{$node[\"GristNodeName\"].json[\"id\"]}}</code>.</p>","title":"How to get the Row ID?"},{"location":"workflow/integrations/nodes/workflow-nodes-base.grist/#how-to-filter-records-when-using-the-get-all-operation","text":"<ul> <li>Click on Add Option and select 'Filter' from the dropdown list.</li> <li>You can add filters for any number of columns. The result will only include records which match all the columns.</li> <li>For each column, you can enter any number of values separated by commas. The result will include records which match any of the values for that column.</li> </ul>","title":"How to filter records when using the Get All operation?"},{"location":"workflow/integrations/nodes/workflow-nodes-base.hackerNews/","text":"<p>Hacker News is a social news website focusing on computer science and entrepreneurship.</p>  <p>\ud83d\udd11 Credentials</p> <p>The Hacker News node does not require authentication.</p>","title":"Hacker News"},{"location":"workflow/integrations/nodes/workflow-nodes-base.hackerNews/#basic-operations","text":"<ul> <li>All<ul> <li>Get all items</li> </ul> </li> <li>Article<ul> <li>Get a Hacker News article</li> </ul> </li> <li>User<ul> <li>Get a Hacker News user</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.hackerNews/#example-usage","text":"<p>This workflow allows you to get articles from Hacker News. You can also find the workflow on this website. This example usage workflow would use the following two nodes. - Start - Hacker News</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.hackerNews/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.hackerNews/#2-hacker-news-node","text":"<ol> <li>Select the 'All' option from the Resource dropdown list.</li> <li>Click on Execute Node to run the workflow.</li> </ol>","title":"2. Hacker News node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.haloPSA/","text":"<p>HaloPSA is a intuitive PSA software. Standardise your processes and keep your customers at the center of every conversation.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"HaloPSA"},{"location":"workflow/integrations/nodes/workflow-nodes-base.haloPSA/#basic-operations","text":"<ul> <li>Client<ul> <li>Create a client</li> <li>Delete a client</li> <li>Get a client</li> <li>Get all clients</li> <li>Update a client</li> </ul> </li> <li>Site<ul> <li>Create a site</li> <li>Delete a site</li> <li>Get a site</li> <li>Get all sites</li> <li>Update a site</li> </ul> </li> <li>Ticket<ul> <li>Create a ticket</li> <li>Delete a ticket</li> <li>Get a ticket</li> <li>Get all tickets</li> <li>Update a ticket</li> </ul> </li> <li>User<ul> <li>Create a user</li> <li>Delete a user</li> <li>Get a user</li> <li>Get all users</li> <li>Update a user</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.haloPSA/#example-usage","text":"<p>This workflow allows you to create a client in HaloPSA. This example workflow uses the following nodes. - Start - HaloPSA</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.haloPSA/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.haloPSA/#2-halopsa-node-resource-client","text":"<p>This node will create a new client in HaloPSA.</p> <ol> <li>First of all, you'll have to enter credentials for the HaloPSA node. You can find out how to do that here.</li> <li>Select 'Client' in the Resource field.</li> <li>Select 'Create' in the Operation field.</li> <li>Enter the client name in the Name field.</li> <li>Add additional fields such as VIP or Website by clicking Add Field.</li> </ol> <p>In the below screenshot you can see how the node creates a new client in HaloPSA.</p> <p></p>","title":"2. HaloPSA node (resource: client)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.harvest/","text":"<p>Harvest is a web-based time tracking tool that helps with its simple time tracking, fast online invoicing, and powerful reporting software.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Harvest"},{"location":"workflow/integrations/nodes/workflow-nodes-base.harvest/#basic-operations","text":"<ul> <li>Client<ul> <li>Create a client</li> <li>Delete a client</li> <li>Get data of a client</li> <li>Get data of all clients</li> <li>Update a client</li> </ul> </li> <li>Company<ul> <li>Retrieves the company for the currently authenticated user</li> </ul> </li> <li>Contact<ul> <li>Create a contact</li> <li>Delete a contact</li> <li>Get data of a contact</li> <li>Get data of all contacts</li> <li>Update a contact</li> </ul> </li> <li>Estimate<ul> <li>Create an estimate</li> <li>Delete an estimate</li> <li>Get data of an estimate</li> <li>Get data of all estimates</li> <li>Update an estimate</li> </ul> </li> <li>Expense<ul> <li>Get data of an expense</li> <li>Get data of all expenses</li> <li>Create an expense</li> <li>Update an expense</li> <li>Delete an expense</li> </ul> </li> <li>Invoice<ul> <li>Get data of an invoice</li> <li>Get data of all invoices</li> <li>Create an invoice</li> <li>Update an invoice</li> <li>Delete an invoice</li> </ul> </li> <li>Project<ul> <li>Create a project</li> <li>Delete a project</li> <li>Get data of a project</li> <li>Get data of all projects</li> <li>Update a project</li> </ul> </li> <li>Task<ul> <li>Create a task</li> <li>Delete a task</li> <li>Get data of a task</li> <li>Get data of all tasks</li> <li>Update a task</li> </ul> </li> <li>Time Entries<ul> <li>Create a time entry via duration</li> <li>Create a time entry via start and end time</li> <li>Delete a time entry</li> <li>Delete a time entry\u2019s external reference.</li> <li>Get data of a time entry</li> <li>Get data of all time entries</li> <li>Restart a time entry</li> <li>Stop a time entry</li> <li>Update a time entry</li> </ul> </li> <li>User<ul> <li>Create a user</li> <li>Delete a user</li> <li>Get data of a user</li> <li>Get data of all users</li> <li>Get data of authenticated user</li> <li>Update a user</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.harvest/#example-usage","text":"<p>This workflow allows you to create a client in Harvest. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - Harvest</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.harvest/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.harvest/#2-harvest-node","text":"<ol> <li>First of all, you'll have to enter credentials for the Harvest node. You can find out how to do that here.</li> <li>Select the 'Client' option from the Resource dropdown list.</li> <li>Select the 'Create' option from the Operation dropdown list.</li> <li>Enter the name of the client in the Name field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>","title":"2. Harvest node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.helpScout/","text":"<p>Help Scout is a help desk software that provides an email-based customer support platform, knowledge base tool, and an embeddable search/contact widget for customer service professionals.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Help Scout"},{"location":"workflow/integrations/nodes/workflow-nodes-base.helpScout/#basic-operations","text":"<ul> <li>Conversation<ul> <li>Create a new conversation</li> <li>Delete a conversation</li> <li>Get a conversation</li> <li>Get all conversations</li> </ul> </li> <li>Customer<ul> <li>Create a new customer</li> <li>Get a customer</li> <li>Get all customers</li> <li>Get customer property definitions</li> <li>Update a customer</li> </ul> </li> <li>Mailbox<ul> <li>Get data of a mailbox</li> <li>Get all mailboxes</li> </ul> </li> <li>Thread<ul> <li>Create a new chat thread</li> <li>Get all chat threads</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.helpScout/#example-usage","text":"<p>This workflow allows you to get all mailboxes from Help Scout. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - Help Scout</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.helpScout/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.helpScout/#2-help-scout-node","text":"<ol> <li>First of all, you'll have to enter credentials for the Help Scout node. You can find out how to do that here.</li> <li>Select the 'Mailbox' option from the Resource dropdown list.</li> <li>Select the 'Get All' option from the Operation dropdown list.</li> <li>Click on Execute Node to run the workflow.</li> </ol>","title":"2. Help Scout node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.homeAssistant/","text":"<p>Home Assistant is a free and open-source software for home automation that is designed to be the central control system for smart home devices with focus on local control and privacy.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Home Assistant"},{"location":"workflow/integrations/nodes/workflow-nodes-base.homeAssistant/#basic-operations","text":"<ul> <li>Camera Proxy<ul> <li>Get the camera screenshot</li> </ul> </li> <li>Config<ul> <li>Get the configuration</li> <li>Check the configuration</li> </ul> </li> <li>Event<ul> <li>Create an event</li> <li>Get all events</li> </ul> </li> <li>Log<ul> <li>Get a log for a specific entity</li> <li>Get all logs</li> </ul> </li> <li>Service<ul> <li>Call a service within a specific domain</li> <li>Get all services</li> </ul> </li> <li>State<ul> <li>Create a new record, or update the current one if it already exists (upsert)</li> <li>Get a state for a specific entity</li> <li>Get all states</li> </ul> </li> <li>Template<ul> <li>Create a template</li> </ul> </li> </ul>","title":"Basic operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.homeAssistant/#example","text":"<p>This workflow allows you to retrieve your current Home Assistant configuration details. This example usage workflow would use the following two nodes. - Start - Home Assistant</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example"},{"location":"workflow/integrations/nodes/workflow-nodes-base.homeAssistant/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.homeAssistant/#2-home-assistant-node","text":"<ol> <li>First select your credentials for the Home Assistant node. You can find out how to create credentials here.</li> <li>From the Resource dropdown select Config.</li> <li>From the Operation dropdown select Get.</li> <li>Click on Execute Node to run the workflow.</li> </ol> <p></p>","title":"2. Home Assistant node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.hubspot/","text":"<p>HubSpot provides tools for social media marketing, content management, web analytics, landing pages, customer support, and search engine optimization.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"HubSpot"},{"location":"workflow/integrations/nodes/workflow-nodes-base.hubspot/#basic-operations","text":"<ul> <li>Contact<ul> <li>Create/Update a contact</li> <li>Delete a contact</li> <li>Get a contact</li> <li>Get all contacts</li> <li>Get recently created/updated contacts</li> <li>Search contacts</li> </ul> </li> <li>Contact List<ul> <li>Add contact to a list</li> <li>Remove a contact from a list</li> </ul> </li> <li>Company<ul> <li>Create a company</li> <li>Delete a company</li> <li>Get a company</li> <li>Get all companies</li> <li>Get recently created companies</li> <li>Get recently modified companies</li> <li>Search companies by domain</li> <li>Update a company</li> </ul> </li> <li>Deal<ul> <li>Create a deal</li> <li>Delete a deal</li> <li>Get a deal</li> <li>Get all deals</li> <li>Get recently created deals</li> <li>Get recently modified deals</li> <li>Search deals</li> <li>Update a deal</li> </ul> </li> <li>Engagement<ul> <li>Create an engagement</li> <li>Delete an engagement</li> <li>Get an engagement</li> <li>Get all engagements</li> </ul> </li> <li>Form<ul> <li>Get all fields from a form</li> <li>Submit data to a form</li> </ul> </li> <li>Ticket<ul> <li>Create a ticket</li> <li>Delete a ticket</li> <li>Get a ticket</li> <li>Get all tickets</li> <li>Update a ticket</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.hubspot/#example-usage","text":"<p>This workflow allows you to retrieve a contact from HubSpot. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - HubSpot</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.hubspot/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.hubspot/#2-hubspot-node","text":"<ol> <li>First of all, you'll have to enter credentials for the HubSpot node. You can find out how to do that here.</li> <li>Select the 'Contact' option under the Resource field.</li> <li>Select the 'Get' option under the Operation field.</li> <li>Enter the contact ID under the Contact ID field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>","title":"2. HubSpot node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.humanticAi/","text":"<p>Humantic AI provides AI-driven behavior and personality assessment of a candidate.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Humantic AI"},{"location":"workflow/integrations/nodes/workflow-nodes-base.humanticAi/#basic-operations","text":"<ul> <li>Profile<ul> <li>Create a profile</li> <li>Retrieve a profile</li> <li>Update a profile</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.humanticAi/#example-usage","text":"<p>This workflow allows you to create, update, and get a profile using the Humantic AI node. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Start - HTTP Request - Humantic AI</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.humanticAi/#1-start-node","text":"<p>The Start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.humanticAi/#2-humantic-ai-node-create-profile","text":"<p>This node will create a new profile for a candidate in Humantic AI. We will create a new profile using the LinkedIn URL of a candidate.</p> <ol> <li>First of all, you'll have to enter credentials for the Humantic AI node. You can find out how to do that here.</li> <li>Enter the LinkedIn URL of the candidate in the User ID field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node creates a new profile using the LinkedIn URL of the candidate.</p> <p></p>","title":"2. Humantic AI node (create: profile)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.humanticAi/#3-http-request-node-get","text":"<p>This node will fetch the resume of the candidate from a URL that we specify. We will pass on this resume to the next node in the workflow.</p> <ol> <li>Enter the URL of the candidate's resume in the URL field.</li> <li>Select 'File' from the Response Format dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node fetches the resume of the candidate from the URL we specified.</p> <p></p>","title":"3. HTTP Request node (GET)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.humanticAi/#4-humantic-ai1-node-update-profile","text":"<p>This node will update the information of the candidate that we created using the Humantic AI node. We will add the candidate's resume that we fetched in the previous node.</p> <ol> <li>Select the credentials that you entered in the previous Humantic AI node.</li> <li>Select 'Update' from the Operation dropdown list.</li> <li>Click on the gears icon next to the User ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Humantic AI &gt; Output Data &gt; JSON &gt; results &gt; userid. You can also add the following expression: <code>{{$node[\"Humantic AI\"].json[\"results\"][\"userid\"]}}</code>.</li> <li>Toggle Send Resume to <code>true</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node updates the information of the candidate that we created using the Humantic AI node. Here, the node has added the resume of the candidate.</p> <p></p>","title":"4. Humantic AI1 node (update: profile)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.humanticAi/#5-humantic-ai2-node-get-profile","text":"<p>This node will return the <code>Hiring</code> persona for the candidate that we created using the Humantic AI node.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Click on the gears icon next to the User ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Humantic AI &gt; Output Data &gt; JSON &gt; results &gt; userid. You can also add the following expression: <code>{{$node[\"Humantic AI\"].json[\"results\"][\"userid\"]}}</code>.</li> <li>Click on the Add Option button.</li> <li>Select 'Hiring' from the Persona dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns the <code>Hiring</code> persona for the candidate that we created using the Humantic AI node (column headers are not visible in the screenshot since we've scrolled down to show the data).</p> <p></p>","title":"5. Humantic AI2 node (get: profile)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.hunter/","text":"<p>Hunter is a company that produces a platform that helps find and verify professional email addresses.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Hunter"},{"location":"workflow/integrations/nodes/workflow-nodes-base.hunter/#basic-operations","text":"<ul> <li>Get every email address found on the internet using a given domain name, with sources</li> <li>Generate or retrieve the most likely email address from a domain name, a first name and a last name</li> <li>Verify the deliverability of an email address</li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.hunter/#example-usage","text":"<p>This workflow allows you to verify the deliverability of an email address using Hunter. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - Hunter</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.hunter/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.hunter/#2-hunter-node","text":"<ol> <li>First of all, you'll have to enter credentials for the Hunter node. You can find out how to do that here.</li> <li>Select 'Email Verifier' from the Operation dropdown list.</li> <li>Enter the email in the Email field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>","title":"2. Hunter node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.intercom/","text":"<p>Intercom is a company that produces a messaging platform which allows businesses to communicate with prospective and existing customers within their app, on their website, through social media, or via email.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Intercom"},{"location":"workflow/integrations/nodes/workflow-nodes-base.intercom/#basic-operations","text":"<ul> <li>Company<ul> <li>Create a new company</li> <li>Get data of a company</li> <li>Get data of all companies</li> <li>Update a company</li> <li>List company's users</li> </ul> </li> <li>Lead<ul> <li>Create a new lead</li> <li>Delete a lead</li> <li>Get data of a lead</li> <li>Get data of all leads</li> <li>Update new lead</li> </ul> </li> <li>User<ul> <li>Create a new user</li> <li>Delete a user</li> <li>Get data of a user</li> <li>Get data of all users</li> <li>Update a user</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.intercom/#example-usage","text":"<p>This workflow allows you to create a new user in Intercom. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - Intercom</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.intercom/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.intercom/#2-intercom-node","text":"<ol> <li>First of all, you'll have to enter credentials for the Intercom node. You can find out how to do that here.</li> <li>Select 'Email' from the dropdown list for the Identifier Type field.</li> <li>Enter the email in the Value field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>","title":"2. Intercom node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.invoiceNinja/","text":"<p>Invoice Ninja is a free open-source online invoicing app for freelancers &amp; businesses. It offers invoicing, payments, expense tracking, &amp; time-tasks.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Invoice Ninja"},{"location":"workflow/integrations/nodes/workflow-nodes-base.invoiceNinja/#basic-operations","text":"<ul> <li>Client<ul> <li>Create a new client</li> <li>Delete a client</li> <li>Get data of a client</li> <li>Get data of all clients</li> </ul> </li> <li>Expense<ul> <li>Create a new expense</li> <li>Delete an expense</li> <li>Get data of an expense</li> <li>Get data of all expenses</li> </ul> </li> <li>Invoice<ul> <li>Create a new invoice</li> <li>Delete a invoice</li> <li>Email an invoice</li> <li>Get data of a invoice</li> <li>Get data of all invoices</li> </ul> </li> <li>Payment<ul> <li>Create a new payment</li> <li>Delete a payment</li> <li>Get data of a payment</li> <li>Get data of all payments</li> </ul> </li> <li>Quote<ul> <li>Create a new quote</li> <li>Delete a quote</li> <li>Email an quote</li> <li>Get data of a quote</li> <li>Get data of all quotes</li> </ul> </li> <li>Task<ul> <li>Create a new task</li> <li>Delete a task</li> <li>Get data of a task</li> <li>Get data of all tasks</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.invoiceNinja/#example-usage","text":"<p>This workflow allows you to get multiple clients' data from Invoice Ninja. You can also find the workflow on this website. This example usage workflow uses the following two nodes.</p> <ul> <li>Start</li> <li>Invoice Ninja</li> </ul> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.invoiceNinja/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.invoiceNinja/#2-invoice-ninja-node","text":"<ol> <li>First of all, you'll have to enter credentials for the Invoice Ninja node. You can find out how to do that here.</li> <li>Select the 'Get All' option from the Operation dropdown list.</li> <li>Click on Execute Node to run the workflow.</li> </ol>","title":"2. Invoice Ninja node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.iterable/","text":"<p>Iterable is a cross-channel platform that allows marketers to create, optimize, and measure every interaction throughout the customer journey.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Iterable"},{"location":"workflow/integrations/nodes/workflow-nodes-base.iterable/#basic-operations","text":"<ul> <li>Event<ul> <li>Record the actions a user perform</li> </ul> </li> <li>User<ul> <li>Create/Update a user</li> <li>Delete a user</li> <li>Get a user</li> </ul> </li> <li>User List<ul> <li>Add user to list</li> <li>Remove a user from a list</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.iterable/#example-usage","text":"<p>This workflow allows you to create, update, and get a user from Iterable. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Start - Iterable</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.iterable/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.iterable/#2-iterable-node-upsert-user","text":"<p>This node will create a new user in Iterable.</p> <ol> <li>First of all, you'll have to enter credentials for the Iterable node. You can find out how to do that here.</li> <li>Select 'Email' in the Identifier field.</li> <li>Enter the email address in the Value field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node creates a new user in Iterable.</p> <p></p>","title":"2. Iterable node (upsert: user)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.iterable/#3-iterable1-node-upsert-user","text":"<p>This node will update the information of the user that we created in the previous node.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Email' in the Identifier field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Iterable &gt; Parameters &gt; value. You can also add the following expression: <code>{{$node[\"Iterable\"].parameter[\"value\"]}}</code>.</li> <li>Click on the Add Field button and select Data Fields.</li> <li>Click on the Add Data Field button.</li> <li>Enter <code>Name</code> in the Key field.</li> <li>Enter the name of the user in the Value field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node updates the information of the user that we created in the previous node.</p> <p></p>","title":"3. Iterable1 node (upsert: user)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.iterable/#4-iterable2-node-get-user","text":"<p>This node will get the information of the user that we created using the Iterable node.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Get' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Iterable &gt; Parameters &gt; value. You can also add the following expression: <code>{{$node[\"Iterable\"].parameter[\"value\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node gets the information of the user that we created using the Iterable node.</p> <p></p>","title":"4. Iterable2 node (get: user)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.jenkins/","text":"<p>Jenkins is an open source automation server that provides hundreds of plugins to support building, deploying and automating any project.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Jenkins"},{"location":"workflow/integrations/nodes/workflow-nodes-base.jenkins/#basic-operations","text":"<ul> <li>Build<ul> <li>List Builds</li> </ul> </li> <li>Instance<ul> <li>Cancel quiet down state</li> <li>Put Jenkins in quiet mode, no builds can be started, Jenkins is ready for shutdown</li> <li>Restart Jenkins immediately on environments where it is possible</li> <li>Restart Jenkins once no jobs are running on environments where it is possible</li> <li>Shutdown once no jobs are running</li> <li>Shutdown Jenkins immediately</li> </ul> </li> <li>Job<ul> <li>Copy a specific job</li> <li>Create a new job</li> <li>Trigger a specific job</li> <li>Trigger a specific job</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.jenkins/#example-usage","text":"<p>This workflow allows you to get list of builds in Jenkins. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - Jenkins</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.jenkins/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.jenkins/#2-circleci-node","text":"<ol> <li>First of all, you'll have to enter credentials for the Jenkins node. You can find out how to do that here.</li> <li>Select the Build  from the dropdown in the Resources field.</li> <li>Get All Builds is not selected in Operations dropdown.</li> <li>Adjust the depth or add optional parameter by clickin Add Field button</li> <li>Click on Execute Node to run the workflow.</li> </ol>","title":"2. CircleCI node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.jira/","text":"<p>Jira is a proprietary issue tracking product developed by Atlassian that allows bug tracking and agile project management.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Jira"},{"location":"workflow/integrations/nodes/workflow-nodes-base.jira/#basic-operations","text":"<ul> <li>Issue<ul> <li>Get issue changelog</li> <li>Create a new issue</li> <li>Delete an issue</li> <li>Get an issue</li> <li>Get all issues</li> <li>Create an email notification for an issue and add it to the mail queue</li> <li>Return either all transitions or a transition that can be performed by the user on an issue, based on the issue's status</li> <li>Update an issue</li> </ul> </li> <li>Issue Attachment<ul> <li>Add attachment to issue</li> <li>Get an attachment</li> <li>Get all attachments</li> <li>Remove an attachment</li> </ul> </li> <li>Issue Comment<ul> <li>Add comment to issue</li> <li>Get a comment</li> <li>Get all comments</li> <li>Remove a comment</li> <li>Update a comment</li> </ul> </li> <li>User<ul> <li>Create a new user.</li> <li>Delete a user.</li> <li>Retrieve a user.</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.jira/#example-usage","text":"<p>This workflow allows you to create a new issue in Jira. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - Jira</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.jira/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.jira/#2-jira-node","text":"<ol> <li>First of all, you'll have to enter credentials for the Jira node. You can find out how to do that here.</li> <li>Select your project from the dropdown list for the Project field.</li> <li>Select an issue type from the dropdown list for the Issue Type field.</li> <li>Enter the summary of the issue in the Summary field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>","title":"2. Jira node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.jira/#faqs","text":"","title":"FAQs"},{"location":"workflow/integrations/nodes/workflow-nodes-base.jira/#how-to-fetch-issues-for-a-specific-project","text":"<p>The 'Get All' operation returns all the issues from Jira. To fetch issues for a particular project, you need to use JQL (Jira Query Language).</p> <p>For example, if you want to receive all the issues of a project named <code>n8n</code>, follow the steps mentioned below. - Select 'Get All' from the Operation dropdown list. - Toggle Return All to true. - Click on Add Option and select 'JQL'. - Enter <code>project=n8n</code> in the JQL field.</p> <p>This query will fetch all the issues in the project named <code>n8n</code>. Enter the name of your project instead of <code>n8n</code> to fetch all the issues for your project.</p> <p>You can refer to the official documentation about JQL to learn more about it.</p>","title":"How to fetch issues for a specific project?"},{"location":"workflow/integrations/nodes/workflow-nodes-base.kafka/","text":"<p>Kafka is an open-source distributed event streaming platform that one can use for high-performance data pipelines, streaming analytics, data integration, and mission-critical applications.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Kafka"},{"location":"workflow/integrations/nodes/workflow-nodes-base.kafka/#basic-operations","text":"<ul> <li>Send message</li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.kafka/#example-usage","text":"<p>This workflow allows you to send updates about the position of the ISS every minute to a topic in Kafka using the Kafka node. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Cron - HTTP Request - Set - Kafka</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.kafka/#1-cron-node","text":"<p>The Cron node will trigger the workflow every minute.</p> <ol> <li>Click on Add Cron Time.</li> <li>Select 'Every Minute' from the Mode dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the Cron node is configured to trigger the workflow every minute.</p> <p></p>","title":"1. Cron node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.kafka/#2-http-request-node-get","text":"<p>This node will make a GET request to the API <code>https://api.wheretheiss.at/v1/satellites/25544/positions</code> to fetch the position of the ISS. This information gets passed on to the next node in the workflow.</p> <ol> <li>Enter <code>https://api.wheretheiss.at/v1/satellites/25544/positions</code> in the URL field.</li> <li>Click on the Add Parameter button in the Query Parameters section.</li> <li>Enter <code>timestamps</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Enter the following expression: <code>{{Date.now()}}</code>. This expression will return the current timestamp.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node makes a GET request to the API and returns the information about the location of the ISS.</p> <p></p>","title":"2. HTTP Request node (GET)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.kafka/#3-set-node","text":"<p>We will use the Set node to ensure that only the data that we set in this node gets passed on to the next nodes in the workflow.</p> <ol> <li>Click on Add Value and select 'String' from the dropdown list.</li> <li>Enter <code>Name</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; HTTP Request &gt; Output Data &gt; JSON &gt; 0 &gt; name. You can also add the following expression: <code>{{$node[\"HTTP Request\"].json[\"0\"][\"name\"]}}</code>.</li> <li>Click on Add Value and select 'String' from the dropdown list.</li> <li>Enter <code>Latitude</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; HTTP Request &gt; Output Data &gt; JSON &gt; 0 &gt; latitude. You can also add the following expression: <code>{{$node[\"HTTP Request\"].json[\"0\"][\"latitude\"]}}</code>.</li> <li>Click on Add Value and select 'String' from the dropdown list.</li> <li>Enter <code>Longitude</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; HTTP Request &gt; Output Data &gt; JSON &gt; 0 &gt; longitude. You can also add the following expression: <code>{{$node[\"HTTP Request\"].json[\"0\"][\"longitude\"]}}</code>.</li> <li>Click on Add Value and select 'String' from the dropdown list.</li> <li>Enter <code>Timestamp</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; HTTP Request &gt; Output Data &gt; JSON &gt; 0 &gt; timpestamp. You can also add the following expression: <code>{{$node[\"HTTP Request\"].json[\"0\"][\"timestamp\"]}}</code>.</li> <li>Toggle Keep Only Set to <code>true</code>. We set this option to true to ensure that only the data that we have set in this node get passed on to the next nodes in the workflow.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node uses the data from the previous node and returns the data that we set for the workflow.</p> <p></p>","title":"3. Set node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.kafka/#4-kafka-node","text":"<p>This node will send the data from the previous node to the <code>iss-position</code> topic in Kafka. If you have created a topic with a different name in Kafka, you can use that topic name instead.</p> <ol> <li>First of all, you'll have to enter credentials for the Kafka node. You can find out how to do that here.</li> <li>Enter the name of the topic in the Topic field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node sends the data from the previous node to the <code>iss-position</code> topic in Kafka.</p> <p></p>  <p> Activate workflow for production</p> <p>This example workflow uses the Cron node, which is a Trigger node. You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Cron node.</p>","title":"4. Kafka node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.keap/","text":"<p>Keap is an e-mail marketing and sales platform for small businesses, including products to manage and optimize the customer lifecycle, customer relationship management, marketing automation, lead capture, and e-commerce.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Keap"},{"location":"workflow/integrations/nodes/workflow-nodes-base.keap/#basic-operations","text":"<ul> <li>Company<ul> <li>Create a company</li> <li>Retrieve all companies</li> </ul> </li> <li>Contact<ul> <li>Create/update a contact</li> <li>Delete an contact</li> <li>Retrieve an contact</li> <li>Retrieve all contacts</li> </ul> </li> <li>Contact Note<ul> <li>Create a note</li> <li>Delete a note</li> <li>Get a notes</li> <li>Retrieve all notes</li> <li>Update a note</li> </ul> </li> <li>Contact Tag<ul> <li>Add a list of tags to a contact</li> <li>Delete a contact's tag</li> <li>Retrieve all contact's tags</li> </ul> </li> <li>Ecommerce Order<ul> <li>Create an ecommerce order</li> <li>Get an ecommerce order</li> <li>Delete an ecommerce order</li> <li>Retrieve all ecommerce orders</li> </ul> </li> <li>Ecommerce Product<ul> <li>Create an ecommerce product</li> <li>Delete an ecommerce product</li> <li>Get an ecommerce product</li> <li>Retrieve all ecommerce product</li> </ul> </li> <li>Email<ul> <li>Create a record of an email sent to a contact</li> <li>Retrieve all sent emails</li> <li>Send Email</li> </ul> </li> <li>File<ul> <li>Delete a file</li> <li>Retrieve all files</li> <li>Upload a file</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.keap/#example-usage","text":"<p>This workflow allows you to get all contacts from Keap. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - Keap</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.keap/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.keap/#2-keap-node","text":"<ol> <li>First of all, you'll have to enter credentials for the Keap node. You can find out how to do that here.</li> <li>Select the 'Contact' option from the Resource dropdown list.</li> <li>Select the 'Get All' option from the Operation dropdown list.</li> <li>Click on Execute Node to run the workflow.</li> </ol>","title":"2. Keap node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.kitemaker/","text":"<p>Kitemaker is a collaboration tool built for designers, engineers, and product managers in remote software development teams.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Kitemaker"},{"location":"workflow/integrations/nodes/workflow-nodes-base.kitemaker/#basic-operations","text":"<ul> <li>Organization<ul> <li>Retrieve data on the logged-in user's organization.</li> </ul> </li> <li>Space<ul> <li>Retrieve data on all the spaces in the logged-in user's organization.</li> </ul> </li> <li>User<ul> <li>Retrieve data on all the users in the logged-in user's organization.</li> </ul> </li> <li>Work Item<ul> <li>Create</li> <li>Get</li> <li>Get All</li> <li>Update</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.kitemaker/#example-usage","text":"<p>This workflow allows you to create, update, and get a work item from Kitemaker. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Start - Kitemaker</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.kitemaker/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.kitemaker/#2-kitemaker-node-workitem-create","text":"<p>This node will create a work item in Kitemaker.</p> <ol> <li>First of all, you'll have to enter credentials for the Kitemaker node. You can find out how to do that here.</li> <li>Select 'Create' from the Operation dropdown list.</li> <li>Enter a title in the Title field.</li> <li>Select 'In progress' from the Status ID dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node creates a new work item in Kitemaker.</p> <p></p>","title":"2. Kitemaker node (workItem: create)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.kitemaker/#3-kitemaker1-node-workitem-update","text":"<p>This node will update the status of the item that we created using the previous node.</p> <ol> <li>Select the credentials that you entered in the previous Kitemaker node.</li> <li>Select 'Update' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Work Item ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$json[\"id\"]}}</code>.</li> <li>Click on the Add Field button and select 'Status ID' from the dropdown list.</li> <li>Select 'Done' from the Status ID dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node updates the status of the item that got created previously.</p> <p></p>","title":"3. Kitemaker1 node (workItem: update)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.kitemaker/#4-kitemaker2-node-workitem-get","text":"<p>This node will retrieve the information about the item that we created earlier.</p> <ol> <li>Select the credentials that you entered in the previous Kitemaker node.</li> <li>Click on the gears icon next to the Work Item ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$json[\"id\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node retrieves the information of the work item that we created earlier.</p> <p></p>","title":"4. Kitemaker2 node (workItem: get)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.koBoToolbox/","text":"<p>KoBo toolbox is a field survey and data collection tool that makes it easy to design interactive forms to be completed offline from mobile devices. It is available both as a free cloud solution or as a self-hosted version.</p>  <p>Credentials</p> <p>You can find authentication information for this node here.</p>","title":"KoBo Toolbox"},{"location":"workflow/integrations/nodes/workflow-nodes-base.koBoToolbox/#operations","text":"<ul> <li>Form<ul> <li>Get</li> <li>GetAll</li> </ul> </li> <li>Hook<ul> <li>Get</li> <li>GetAll</li> <li>Logs</li> <li>Retry All</li> <li>Retry One</li> </ul> </li> <li>Submission<ul> <li>Delete</li> <li>Get</li> <li>Get All</li> <li>Get Validation Status</li> <li>Update Validation Status</li> </ul> </li> </ul>","title":"Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.koBoToolbox/#options","text":"","title":"Options"},{"location":"workflow/integrations/nodes/workflow-nodes-base.koBoToolbox/#query-options","text":"<p>The Query Submission operation supports query options:</p> <ul> <li>In the main section of the Parameters panel:<ul> <li>Start controls the index offset to start the query from (to use the API pagination logic).</li> <li>Limit sets the maximum number of records to return. Note that the API always has a limit of 30,000 returned records, whatver value you provide.</li> </ul> </li> <li>In the Query Options section, you can activate the following parameters:<ul> <li>Query lets you specify filter predicates in MongoDB's JSON query format. For example: <code>{\"status\": \"success\", \"_submission_time\": {\"$lt\": \"2021-11-01T01:02:03\"}}</code> queries for all submissions with the value <code>success</code> for the field <code>status</code>, and submitted before November 1st, 2021, 01:02:03.</li> <li>Fields lets you specifiy the list of fields you want to fetch, to make the response lighter.</li> <li>Sort lets you provide a list of sorting criteria in MongoDB JSON format. For example, <code>{\"status\": 1, \"_submission_time\": -1}</code> specifies a sort order by ascending status, and then descending submission time.</li> </ul> </li> </ul> <p>More details about these options can be found in the Formhub API docs</p>","title":"Query Options"},{"location":"workflow/integrations/nodes/workflow-nodes-base.koBoToolbox/#submission-options","text":"<p>All operations that return form submission data offer options to tweak the response. These include:</p> <ul> <li>Download options lets you download any attachment linked to each particular form submissions, such as pictures and videos. It also lets you select the naming pattern, and the file size to download (if available - typically for images). </li> <li>Formatting options perform some reformatting as described in About reformatting.</li> </ul>","title":"Submission options"},{"location":"workflow/integrations/nodes/workflow-nodes-base.koBoToolbox/#about-reformatting","text":"<p>The default JSON format for KoBoToolbox submission data is sometimes hard to deal with, because it is not schema-aware, and all fields are therefore returned as strings.</p> <p>This node provides a lightweight opinionated reformatting logic, enabled with the Reformat? parameter, available on all operations that return form submissions: the submission query, get, and the attachment download operations.</p> <p>When enabled, the reformatting:</p> <ul> <li>Reorganizes the JSON into a multi-level hierarchy following the form's groups. By default, question grouping hierarchy is materialized by a <code>/</code> character in the field names, for example <code>Group1/Question1</code>. With reformatting enabled, n8n reorganizes these into <code>Group1.Question1</code>, as nested JSON objects.</li> <li>Renames fields to trim <code>_</code> (not supported by many downstream systems).</li> <li>Parses all geospatial fields (Point, Line, and Area question types) into their standard GeoJSON equivalent.</li> <li>Splits all fields matching any of the the Multiselect Mask wildcard masks into an array. Since the multi-select fields appear as space-separated strings, they can't be guessed algorithmically, so you must provide a field naming mask. Format the masks as a comma-separated list. Lists support the <code>*</code> wildcard.</li> <li>Converts all fields matching any of the Number Mask wildcard masks into a JSON float.</li> </ul> <p>Here's a detailed example in JSON:</p> <pre><code>{\n  \"_id\": 471987,\n  \"formhub/uuid\": \"189436bb09a54957bfcc798e338b54d6\",\n  \"start\": \"2021-12-05T16:13:38.527+02:00\",\n  \"end\": \"2021-12-05T16:15:33.407+02:00\",\n  \"Field_Details/Field_Name\": \"Test Fields\",\n  \"Field_Details/Field_Location\": \"-1.932914 30.078211 1421 165\",\n  \"Field_Details/Field_Shape\": \"-1.932914 30.078211 1421 165;-1.933011 30.078085 0 0;-1.933257 30.078004 0 0;-1.933338 30.078197 0 0;-1.933107 30.078299 0 0;-1.932914 30.078211 1421 165\",\n  \"Field_Details/Crops_Grown\": \"maize beans avocado\",\n  \"Field_Details/Field_Size_sqm\": \"2300\",\n  \"__version__\": \"veGcULpqP6JNFKRJbbMvMs\",\n  \"meta/instanceID\": \"uuid:2356cbbe-c1fd-414d-85c8-84f33e92618a\",\n  \"_xform_id_string\": \"ajXVJpBkTD5tB4Nu9QXpgm\",\n  \"_uuid\": \"2356cbbe-c1fd-414d-85c8-84f33e92618a\",\n  \"_attachments\": [],\n  \"_status\": \"submitted_via_web\",\n  \"_geolocation\": [\n    -1.932914,\n    30.078211\n  ],\n  \"_submission_time\": \"2021-12-05T14:15:44\",\n  \"_tags\": [],\n  \"_notes\": [],\n  \"_validation_status\": {},\n  \"_submitted_by\": null\n}\n</code></pre>  <p>With reformatting enabled, and the appropriate masks for multi-select and number formatting (for example, <code>Crops_*</code> and <code>*_sqm</code> respecitvely), n8n parses it into:</p> <pre><code>{\n  \"id\": 471987,\n  \"formhub\": {\n    \"uuid\": \"189436bb09a54957bfcc798e338b54d6\"\n  },\n  \"start\": \"2021-12-05T16:13:38.527+02:00\",\n  \"end\": \"2021-12-05T16:15:33.407+02:00\",\n  \"Field_Details\": {\n    \"Field_Name\": \"Test Fields\",\n    \"Field_Location\": {\n      \"lat\": -1.932914,\n      \"lon\": 30.078211\n    },\n    \"Field_Shape\": {\n      \"type\": \"polygon\",\n      \"coordinates\": [\n        {\n          \"lat\": -1.932914,\n          \"lon\": 30.078211\n        },\n        {\n          \"lat\": -1.933011,\n          \"lon\": 30.078085\n        },\n        {\n          \"lat\": -1.933257,\n          \"lon\": 30.078004\n        },\n        {\n          \"lat\": -1.933338,\n          \"lon\": 30.078197\n        },\n        {\n          \"lat\": -1.933107,\n          \"lon\": 30.078299\n        },\n        {\n          \"lat\": -1.932914,\n          \"lon\": 30.078211\n        }\n      ]\n    },\n    \"Crops_Grown\": [\n      \"maize\",\n      \"beans\",\n      \"avocado\"\n    ],\n    \"Field_Size_sqm\": 2300\n  },\n  \"version\": \"veGcULpqP6JNFKRJbbMvMs\",\n  \"meta\": {\n    \"instanceID\": \"uuid:2356cbbe-c1fd-414d-85c8-84f33e92618a\"\n  },\n  \"xform_id_string\": \"ajXVJpBkTD5tB4Nu9QXpgm\",\n  \"uuid\": \"2356cbbe-c1fd-414d-85c8-84f33e92618a\",\n  \"attachments\": [],\n  \"status\": \"submitted_via_web\",\n  \"geolocation\": {\n    \"lat\": -1.932914,\n    \"lon\": 30.078211\n  },\n  \"submission_time\": \"2021-12-05T14:15:44\",\n  \"tags\": [],\n  \"notes\": [],\n  \"validation_status\": {},\n  \"submitted_by\": null\n}\n</code></pre>","title":"About reformatting"},{"location":"workflow/integrations/nodes/workflow-nodes-base.lemlist/","text":"<p>Lemlist is an email outreach platform that allows you to automatically generate personalized images and videos and send personalized cold emails.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Lemlist"},{"location":"workflow/integrations/nodes/workflow-nodes-base.lemlist/#basic-operations","text":"<ul> <li>Activity<ul> <li>Get All</li> </ul> </li> <li>Campaign<ul> <li>Get All</li> </ul> </li> <li>Lead<ul> <li>Create</li> <li>Delete</li> <li>Get</li> <li>Unsubscribe</li> </ul> </li> <li>Team<ul> <li>Get</li> </ul> </li> <li>Unsubscribes<ul> <li>Add</li> <li>Delete</li> <li>Get All</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.lemlist/#example-usage","text":"<p>This workflow allows you to list emails from Airtable and create corresponding leads in Lemlist. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Start - [Airtable]/integrations/nodes/n8n-nodes-base.airtable/) - Lemlist</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.lemlist/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.lemlist/#2-airtable-node-list","text":"<p>This node will list all the records from Airtable. Create a table like this in your Airtable base.</p> <ol> <li>First of all, you'll have to enter credentials for the Airtable node. You can find out how to do that here.</li> <li>Select the 'List' option from the Operation dropdown list.</li> <li>Enter the Base ID in the Base ID field. For obtaining the Base ID, head over to their API page and select the correct base. You\u2019ll find the Base ID there.</li> <li>Enter the name of your table in the Table field.</li> <li>Click on the gears icon next to the Table field and click on Add Expression.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns the information of the leads.</p> <p></p>","title":"2. Airtable node (List)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.lemlist/#3-lemlist-node-create-lead","text":"<p>This node will create new leads for a campaign in Lemlist.</p> <ol> <li>First of all, you'll have to enter credentials for the Lemlist node. You can find out how to do that here.</li> <li>Select 'Lead' from the Resource dropdown list.</li> <li>Select a campaign from the Campaign ID dropdown list.</li> <li> <p>Click on the gears icon next to the Email field and click on Add Expression.</p> </li> <li> <p>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; fields &gt; Email. You can also add the following expression: <code>{{$json[\"fields\"][\"Email\"]}}</code>.</p> </li> <li>Click on the Add Field button and select 'First Name'.</li> <li>Click on the gears icon next to the First Name field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; fields &gt; Name. You can also add the following expression: <code>{{$json[\"fields\"][\"Name\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node creates new leads in Lemlist.</p> <p></p>","title":"3. Lemlist node (create: lead)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.lemlist/#4-lemlist-node-get-lead","text":"<p>This node will return the information of the leads that we created in the previous node.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Lead' from the Resource dropdown list.</li> <li>Select 'Get' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Email field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Airtable &gt; Output Data &gt; JSON &gt; fields &gt; Email. You can also add the following expression: <code>{{$node[\"Airtable\"].json[\"fields\"][\"Email\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns the information about the leads we created in the previous node.</p> <p></p>","title":"4. Lemlist node (get: lead)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.line/","text":"<p>Line is a mobile messenger app that allows you to make free voice calls and send messages.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Line"},{"location":"workflow/integrations/nodes/workflow-nodes-base.line/#basic-operations","text":"<ul> <li>Notification<ul> <li>Sends notifications to users or groups</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.line/#example-usage","text":"<p>This workflow allows you to send daily weather updates via a notification using the Line node. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Cron - OpenWeatherMap - Line</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.line/#1-cron-node","text":"<p>The Cron node will trigger the workflow daily at 9 AM.</p> <ol> <li>Click on Add Cron Time.</li> <li>Set hours to 9 in the Hour field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the Cron node is configured to trigger the workflow every day at 9 AM.</p> <p></p>","title":"1. Cron node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.line/#2-openweathermap-node-current-weather","text":"<p>This node will return data about the current weather in Berlin. To get the weather updates for your city, you can enter the name of your city instead.</p> <ol> <li>First of all, you'll have to enter credentials for the OpenWeatherMap node. You can find out how to do that here.</li> <li>Enter <code>berlin</code> in the City field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns data about the current weather in Berlin.</p> <p></p>","title":"2. OpenWeatherMap node (Current Weather)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.line/#3-line-node-send-notification","text":"<p>This node will send a notification with the weather update.</p> <ol> <li>First of all, you'll have to enter credentials for the Line node. You can find out how to do that here.</li> <li> <p>Click on the gears icon next to the Message field and click on Add Expression.</p> </li> <li> <p>Enter the following message in the Expression field: <code>Hey! The temperature outside is {{$node[\"OpenWeatherMap\"].json[\"main\"][\"temp\"]}}\u00b0C.</code>.</p> </li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node sends a notification with the weather update.</p> <p></p>  <p> Activate workflow for production</p> <p>This example workflow uses the Cron node, which is a Trigger node. You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Cron node.</p>","title":"3. Line node (send: notification)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.linear/","text":"<p>Linear is a SaaS issue tracking tool.</p>  <p>Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Linear"},{"location":"workflow/integrations/nodes/workflow-nodes-base.linear/#operations","text":"<ul> <li>Issue<ul> <li>Create</li> <li>Delete</li> <li>Get</li> <li>Get All</li> <li>Update</li> </ul> </li> </ul>","title":"Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.lingvaNex/","text":"<p>LingvaNex is a service that translates text, web pages, text on images, documents between English and over 112 other languages.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"LingvaNex"},{"location":"workflow/integrations/nodes/workflow-nodes-base.lingvaNex/#basic-operations","text":"<ul> <li>Translate data</li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.lingvaNex/#example-usage","text":"<p>This workflow allows you to translate cocktail instructions to Italian. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Start - HTTP Request - LingvaNex</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.lingvaNex/#1-start-node","text":"<p>The Start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.lingvaNex/#2-http-request-node-get","text":"<p>This node will make a GET request to the API <code>https://www.thecocktaildb.com/api/json/v1/1/random.php</code> to fetch a random cocktail. This information gets passed on to the next node in the workflow.</p> <ol> <li>Enter <code>https://www.thecocktaildb.com/api/json/v1/1/random.php</code> in the URL field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node makes a GET request to the API and returns information about a random cocktail.</p> <p></p>","title":"2. HTTP Request node (GET)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.lingvaNex/#3-lingvanex-node","text":"<p>This node will translate the cocktail instructions that we got from the previous node to Italian. To translate the instructions in your language, select your language instead.</p> <ol> <li> <p>First of all, you'll have to enter credentials for the LingvaNex node. You can find out how to do that here.</p> </li> <li> <p>Click on the gears icon next to the Text field and click on Add Expression.</p> </li> <li>Select the following in the Variable Selector section: Nodes &gt; HTTP Request &gt; Output Data &gt; JSON &gt; drinks &gt; [item: 0] &gt; strInstructions. You can also add the following expression: <code>{{$node[\"HTTP Request\"].json[\"drinks\"][0][\"strInstructions\"]}}</code>.</li> <li>Select 'Italian' from the Translate To dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node translates the instructions of the cocktail to Italian.</p> <p></p>","title":"3. LingvaNex node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.linkedIn/","text":"<p>LinkedIn is an employment-oriented online service. It is mainly used for professional networking, including employers posting jobs and job seekers posting their CVs.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"LinkedIn"},{"location":"workflow/integrations/nodes/workflow-nodes-base.linkedIn/#basic-operations","text":"<ul> <li>Post<ul> <li>Create a new post</li> </ul> </li> </ul>  <p> Keep in mind</p> <p>If posting as an Organization enter only the organization number in the URN field. For example, <code>03262013</code> not <code>urn:li:company:03262013</code>.</p>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.linkedIn/#example-usage","text":"<p>This workflow allows you to get an image from a URL and post it on LinkedIn. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Start - HTTP Request - LinkedIn</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.linkedIn/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.linkedIn/#2-http-request-node","text":"<ol> <li>Enter the URL of the image you want to download in the URL field.</li> <li>Select File from the Response Format dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p></p>","title":"2. HTTP Request node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.linkedIn/#3-linkedin-node","text":"<ol> <li>First of all, you'll have to enter credentials for the LinkedIn node. You can find out how to do that here.</li> <li>Select 'Person' from the Post As dropdown list.</li> <li>Select the person you want to post as from the Person dropdown list.</li> <li>Enter a message in the Text field.</li> <li>Select 'Image' from the Media Category dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p></p>","title":"3. LinkedIn node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.magento2/","text":"<p>Magento is an e-commerce platform enabling retailers and brands to build engaging online shopping experiences.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Magento 2"},{"location":"workflow/integrations/nodes/workflow-nodes-base.magento2/#basic-operations","text":"<ul> <li>Customer<ul> <li>Create a new customer</li> <li>Delete a customer</li> <li>Get a customer</li> <li>Get all customers</li> <li>Update a customer</li> </ul> </li> <li>Invoice<ul> <li>Create an invoice</li> </ul> </li> <li>Order<ul> <li>Cancel an order</li> <li>Get an order</li> <li>Get all orders</li> <li>Ship an order</li> </ul> </li> <li>Product<ul> <li>Create a product</li> <li>Delete a product</li> <li>Get a product</li> <li>Get all producs</li> <li>Update a product</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mailcheck/","text":"<p>Mailcheck is an application that allows you to clean your subscription list from bounces and enrich data with customers.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Mailcheck"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mailcheck/#basic-operations","text":"<ul> <li>Email<ul> <li>Check</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mailcheck/#example-usage","text":"<p>This workflow allows you to validate emails stored in Airtable using the Mailcheck node. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Start - [Airtable]/integrations/nodes/n8n-nodes-base.airtable/) - Mailcheck - Set</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mailcheck/#1-start-node","text":"<p>The Start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mailcheck/#2-airtable-node-list","text":"<p>Create a table like this in your Airtable base. The Airtable node will list all the records from a table.</p> <ol> <li>First of all, you'll have to enter credentials for the Airtable node. You can find out how to do that here.</li> <li>Select the 'List' option from the Operation dropdown list.</li> <li>Enter the Base ID in the Base ID field. For obtaining the Base ID, head over to their API page and select the correct base. You\u2019ll find the Base ID there.</li> <li>Enter the name of your table in the Table field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns all the records from the table.</p> <p></p>","title":"2. Airtable node (List)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mailcheck/#2-mailcheck-node-check-email","text":"<p>This node will check the emails that got returned by the previous node.</p> <ol> <li> <p>First of all, you'll have to enter credentials for the Mailcheck node. You can find out how to do that here.</p> </li> <li> <p>Click on the gears icon next to the Email field and click on Add Expression.</p> </li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; fields &gt; email. You can also add the following expression: <code>{{$json[\"fields\"][\"Email\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node checks the email that got returned by the previous node.</p> <p></p>","title":"2. Mailcheck node (check: email)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mailcheck/#3-set-node","text":"<p>We will use the Set node to ensure that only the data that we set in this node gets passed on to the next nodes in the workflow.</p> <ol> <li>Click on the Add Value button and select 'Boolean' from the dropdown list.</li> <li>Enter <code>Valid</code> in the Name field.</li> <li>Click on the gears icon next to the Value field.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; mxExists. You can also add the following expression: <code>{{$json[\"mxExists\"]}}</code>.</li> <li>Click on the Add Value button and select 'String' from the dropdown list.</li> <li>Enter <code>ID</code> in the Name field.</li> <li>Click on the gears icon next to the Value field.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Airtable &gt; Output Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$node[\"Airtable\"].json[\"id\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node sets the value for <code>Valid</code> and <code>ID</code>.</p> <p></p>","title":"3. Set node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mailcheck/#4-airtable-update","text":"<p>This node will update the Valid field in the table.</p> <ol> <li>Select the credentials that you entered in the previous Airtable node.</li> <li>Select 'Update' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Base ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Airtable &gt; Parameters &gt; application. You can also add the following expression: <code>{{$node[\"Airtable\"].parameter[\"application\"]}}</code>.</li> <li>Click on the gears icon next to the Table field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Airtable &gt; Parameters &gt; table. You can also add the following expression: <code>{{$node[\"Airtable\"].parameter[\"table\"]}}</code>.</li> <li>Click on the gears icon next to the Id field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; ID. You can also add the following expression: <code>{{$json[\"ID\"]}}</code>.</li> <li>Toggle Update All Fields to <code>false</code>. This option will update only the fields that we specify.</li> <li>Click on the Add Field button.</li> <li>Enter <code>Valid</code> in the Name field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node updates the Valid field in the table.</p> <p></p>","title":"4. Airtable (Update)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mailchimp/","text":"<p>Mailchimp is an integrated marketing platform that allows business owners to automate their email campaigns and track user engagement.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Mailchimp"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mailchimp/#basic-operations","text":"<ul> <li>Campaign<ul> <li>Delete a campaign</li> <li>Get a campaign</li> <li>Get all the campaigns</li> <li>Replicate a campaign</li> <li>Creates a Resend to Non-Openers version of this campaign</li> <li>Send a campaign</li> </ul> </li> <li>List Group<ul> <li>Get all groups</li> </ul> </li> <li>Member<ul> <li>Create a new member on list</li> <li>Delete a member on list</li> <li>Get a member on list</li> <li>Get all members on list</li> <li>Update a new member on list</li> </ul> </li> <li>Member Tag<ul> <li>Add tags from a list member</li> <li>Remove tags from a list member</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mailchimp/#example-usage","text":"<p>This workflow allows you to add a new member to a list in Mailchimp. You can also find the workflow on this website. This example usage workflow uses the following two nodes.</p> <ul> <li>Start</li> <li>Mailchimp</li> </ul> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mailchimp/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mailchimp/#2-mailchimp-node","text":"<ol> <li>First of all, you'll have to enter credentials for the Mailchimp node. You can find out how to do that here.</li> <li>Select the Mailchimp list from the List dropdown list.</li> <li>Enter the email address in the Email field.</li> <li>Select the status from the Status dropdown list.</li> <li>Click on Execute Node to run the workflow.</li> </ol>","title":"2. Mailchimp node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mailerLite/","text":"<p>MailerLite is an email marketing solution that provides you with a user-friendly content editor, simplified subscriber management, and campaign reports with the most important statistics.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"MailerLite"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mailerLite/#basic-operations","text":"<ul> <li>Subscriber<ul> <li>Create a new subscriber</li> <li>Get an subscriber</li> <li>Get all subscribers</li> <li>Update an subscriber</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mailerLite/#example-usage","text":"<p>This workflow allows you to create, update, and get a subscriber using the MailerLite node. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Start - MailerLite</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mailerLite/#1-start-node","text":"<p>The Start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mailerLite/#2-mailerlite-node-create-subscriber","text":"<p>This node will create a new subscriber in MailerLite. We will add the name of the subscriber along with their email.</p> <ol> <li> <p>First of all, you'll have to enter credentials for the MailerLite node. You can find out how to do that here.</p> </li> <li> <p>Enter the email address in the Email field.</p> </li> <li>Click on the Add Field button and select 'Name' from the dropdown list.</li> <li>Enter the name of the subscriber in the Name field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node creates a new subscriber with their name and email.</p> <p></p>","title":"2. MailerLite node (create: subscriber)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mailerLite/#3-mailerlite1-node-update-subscriber","text":"<p>This node will update the information of the subscriber that we created in the previous node. We will add the information about the city of the subscriber using this node.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Update' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Subscriber Email field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; MailerLite &gt; Output Data &gt; JSON &gt; email. You can also add the following expression: <code>{{$node[\"MailerLite\"].json[\"email\"]}}</code>.</li> <li>Click on the Add Field button and select 'Custom Fields' from the dropdown list.</li> <li>Click on the Add Custom Field button.</li> <li>Select 'city' from the Field ID dropdown list.</li> <li>Enter the name of the city in the Value field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node updates the information of the subscriber that we created in the previous node. Here, the node has added information about the city of the subscriber.</p> <p></p>","title":"3. MailerLite1 node (update: subscriber)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mailerLite/#3-mailerlite2-node-get-subscriber","text":"<p>This node will return the information of the subscriber that we created using the MailerLite node.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Get' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Subscriber Email field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; MailerLite &gt; Output Data &gt; JSON &gt; email. You can also add the following expression: <code>{{$node[\"MailerLite\"].json[\"email\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns the information of the subscriber that we created using the MailerLite node.</p> <p></p>","title":"3. MailerLite2 node (get: subscriber)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mailgun/","text":"<p>Mailgun is a developer-friendly email sending platform that provides API-based email services that are easy to use.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Mailgun"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mailgun/#basic-operations","text":"<ul> <li>Send an email</li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mailgun/#example-usage","text":"<p>This workflow allows you to send an email using Mailgun. You can also find the workflow on this website. This example usage workflow uses the following two nodes.</p> <ul> <li>Start</li> <li>Mailgun</li> </ul> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mailgun/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mailgun/#2-mailgun-node","text":"<ol> <li>First of all, you'll have to enter credentials for the Mailgun node. You can find out how to do that here.</li> <li>Enter the email address from which you want to send the email in the From Email field.</li> <li>Enter the recipient email in the To Email field.</li> <li>Enter the subject for the email in the Subject field.</li> <li>Enter the content of the email in the Text field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>","title":"2. Mailgun node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mailjet/","text":"<p>Mailjet is a cloud-based email sending and tracking system. The platform allows professionals to send both marketing emails and transactional emails. It includes tools for designing emails, sending massive volumes and tracking these messages.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Mailjet"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mailjet/#basic-operations","text":"<ul> <li>Email<ul> <li>Send a email</li> <li>Send a email template</li> </ul> </li> <li>SMS<ul> <li>Send a sms</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mailjet/#example-usage","text":"<p>This workflow allows you to send an email using Mailjet. You can also find the workflow on this website. This example usage workflow uses the following two nodes.</p> <ul> <li>Start</li> <li>Mailjet</li> </ul> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mailjet/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mailjet/#2-mailjet-node","text":"<ol> <li>First of all, you'll have to enter credentials for the Mailjet node. You can find out how to do that here.</li> <li>Enter the email address from which you want to send the email in the From Email field.</li> <li>Enter the recipient email address in the To Email field.</li> <li>Enter the subject for the email in the Subject field.</li> <li>Enter the content of the email in the Text field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>","title":"2. Mailjet node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mandrill/","text":"<p>Mandrill is a transactional email service developed by MailChimp.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Mandrill"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mandrill/#basic-operations","text":"<ul> <li>Message<ul> <li>Send message based on template.</li> <li>Send message based on HTML.</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mandrill/#example-usage","text":"<p>This workflow allows you to send an email using a template via Mandrill. You can also find the workflow on this website. This example usage workflow uses the following two nodes.</p> <ul> <li>Start</li> <li>Mandrill</li> </ul> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mandrill/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mandrill/#2-mandrill-node","text":"<ol> <li>First of all, you'll have to enter credentials for the Mandrill node. You can find out how to do that here.</li> <li>Select the template you would like to use from the Template dropdown list.</li> <li>Enter the email address from which you want to send the email in the From Email field.</li> <li>Enter the recipient email address in the To Email field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>","title":"2. Mandrill node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.marketstack/","text":"<p>Marketstack is a REST API that provides stock market data in JSON format. </p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Marketstack"},{"location":"workflow/integrations/nodes/workflow-nodes-base.marketstack/#basic-operations","text":"<ul> <li>End-of-Day Data<ul> <li>Get All</li> </ul> </li> <li>Exchange<ul> <li>Get</li> </ul> </li> <li>Ticker<ul> <li>Get</li> </ul> </li> </ul>","title":"Basic operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.marketstack/#example-usage","text":"<p>This workflow allows you to get the past week's end of day data for a desired stock symbol. This example usage workflow uses the following two nodes.</p> <ul> <li>Start</li> <li>Marketstack</li> </ul> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.marketstack/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.marketstack/#2-marketstack-node","text":"<ol> <li>First enter your credentials for the Marketstack node. You can find out how to do that here.</li> <li>Select End-of-Day Data from the Resource dropdown.</li> <li>The Get All Operation is selected by default.</li> <li>Enter your desired ticker symbol, <code>AI</code> in our example.</li> <li>Click the Add Filter button and select Timeframe Start Date &gt; A Week Ago.</li> <li>Click the Add Filter button and select Timeframe End Date &gt; Today.</li> <li>Click on Execute Node to run the workflow.</li> </ol> <p></p>","title":"2. Marketstack node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.matrix/","text":"<p>Matrix is an open standard for interoperable, decentralized, real-time communication over IP.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Matrix"},{"location":"workflow/integrations/nodes/workflow-nodes-base.matrix/#basic-operations","text":"<ul> <li>Account<ul> <li>Get current user's account information</li> </ul> </li> <li>Event<ul> <li>Get single event by ID</li> </ul> </li> <li>Media<ul> <li>Send media to a chat room</li> </ul> </li> <li>Message<ul> <li>Send a message to a room</li> <li>Gets all messages from a room</li> </ul> </li> <li>Room<ul> <li>New chat room with defined settings</li> <li>Invite a user to a room</li> <li>Join a new room</li> <li>Kick a user from a room</li> <li>Leave a room</li> </ul> </li> <li>Room Member<ul> <li>Get all members</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.matrix/#example-usage","text":"<p>This workflow allows you to create a room, invite members from a different room, and send a message to the room that we created using the Matrix node. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Start - Matrix - IF - No Operation, do nothing</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.matrix/#1-start-node","text":"<p>The Start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.matrix/#2-matrix-node-create-room","text":"<p>This node will create a new room called <code>n8n</code> on the Matrix server.</p> <ol> <li> <p>First of all, you'll have to enter credentials for the Matrix node. You can find out how to do that here.</p> </li> <li> <p>Select 'Room' from the Resource dropdown list.</p> </li> <li>Enter <code>n8n</code> in the Room Name field. You can also enter a different name for the room.</li> <li>Enter an alias for the room in the Room Alias field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node creates a room <code>n8n</code> with an alias <code>#discussion-n8n:matrix.org</code>.</p> <p></p>","title":"2. Matrix node (create: room)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.matrix/#3-matrix1-node-me-account","text":"<p>This node will get your account information from the Matrix server. We are doing this because Matrix will send an invite to all members of the room, including you. Since you are already a member of the room, you will get an error. We will use the data from this node later on to make sure that you don't send an invite to yourself.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Account' from the Resource dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns your user ID.</p> <p></p>","title":"3. Matrix1 node (me: account)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.matrix/#3-matrix2-node-getall-roommember","text":"<p>This node will return the information of all the members in a room.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Room Member' from the Resource dropdown list.</li> <li>Select a room from the Room ID dropdown list. We will invite the members of this room later on in the workflow.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns the information of all the members in the room that we specified. The output of this node will be passed on to the next nodes in the workflow.</p> <p></p>","title":"3. Matrix2 node (getAll: roomMember)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.matrix/#4-if-node","text":"<p>This node will compare your user ID with the user ID of other members. If the user IDs are not equal, the output will be true.</p> <ol> <li>Click on Add Condition and select 'String'.</li> <li>Click on the gears icon next to the Value 1 field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Matrix1 &gt; Output Data &gt; JSON &gt; user_id. You can also add the following expression: <code>{{$node[\"Matrix1\"].json[\"user_id\"]}}</code>.</li> <li>Select 'Not Equal' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Value 2 field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Matrix2 &gt; Output Data &gt; JSON &gt; user_id. You can also add the following expression: <code>{{$node[\"Matrix2\"].json[\"user_id\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns the information of all the members of the room except your own.</p> <p></p>","title":"4. IF node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.matrix/#4-matrix3-node-invite-room","text":"<p>This node will send an invitation to the members returned by the previous node to join the room that we created using the Matrix node.</p> <ol> <li>Connect the node to the 'true' output of the IF node</li> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Room' from the Resource dropdown list.</li> <li>Select 'Invite' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Room ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Matrix &gt; Output Data &gt; JSON &gt; room_id. You can also add the following expression: <code>{{$node[\"Matrix\"].json[\"room_id\"]}}</code>.</li> <li>Click on the gears icon next to the User ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; IF &gt; Output Data &gt; JSON &gt; user_id. You can also add the following expression: <code>{{$node[\"IF\"].json[\"user_id\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node sends an invite to join the <code>n8n</code> room to the members of the other room.</p> <p></p>","title":"4. Matrix3 node (invite: room)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.matrix/#5-matrix4-node-create-message","text":"<p>This node will send a message to the new room that we created using the Matrix node.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Click on the gears icon next to the Room ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Matrix &gt; Output Data &gt; JSON &gt; room_id. You can also add the following expression: <code>{{$node[\"Matrix\"].json[\"room_id\"]}}</code>.</li> <li>Enter a message in the Text field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node sends a message to the room that we created with the Matrix node.</p> <p></p>","title":"5. Matrix4 node (create: message)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.matrix/#6-noop-node","text":"<p>Adding this node here is optional, as the absence of this node won't make a difference to the functioning of the workflow. We've added this as it can sometimes help others with a better understanding of the workflow, visually.</p> <ol> <li>Create a NoOp node connected to the 'false' output of the IF node.</li> <li>Click on Execute Node to run the node.</li> </ol> <p></p>","title":"6. NoOp node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mattermost/","text":"<p>Mattermost is an open-source, self-hostable online chat service with file sharing, search, and integrations. It is designed as an internal chat for organisations and companies.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Mattermost"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mattermost/#basic-operations","text":"<ul> <li>Channel<ul> <li>Add a user to a channel</li> <li>Create a new channel</li> <li>Soft delete a channel</li> <li>Get a page of members for a channel</li> <li>Restores a soft deleted channel</li> <li>Search for a channel</li> <li>Get statistics for a channel</li> </ul> </li> <li>Message<ul> <li>Soft delete a post, by marking the post as deleted in the database</li> <li>Post a message into a channel</li> <li>Post an ephemeral message into a channel</li> </ul> </li> <li>Reaction<ul> <li>Add a reaction to a post.</li> <li>Remove a reaction from a post</li> <li>Get all the reactions to one or more posts</li> </ul> </li> <li>User<ul> <li>Create a new user</li> <li>Deactivates the user and revokes all its sessions by archiving its user object.</li> <li>Retrieve all users</li> <li>Get a user by email</li> <li>Get a user by ID</li> <li>Invite user to team</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mattermost/#example-usage","text":"<p>This workflow allows you to create a channel, add a member, and post a message to the channel on Mattermost. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Start - Mattermost</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mattermost/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mattermost/#2-mattermost-node-create-channel","text":"<p>This node will create a new channel named <code>docs</code> in Mattermost. If you want to create a channel with a different name, enter that name instead.</p> <ol> <li>First of all, you'll have to enter credentials for the Mattermost node. You can find out how to do that here.</li> <li>Select 'Channel' from the Resource dropdown list.</li> <li>Select a team from the Team ID dropdown list.</li> <li>Enter <code>Docs</code> in the Display Name field.</li> <li>Enter <code>docs</code> in the Name field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node creates a new channel named <code>docs</code> in Mattermost.</p> <p></p>","title":"2. Mattermost node (create: channel)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mattermost/#3-mattermost1-node-adduser-channel","text":"<p>This node will add a member to the channel that we created in the previous node.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Channel' from the Resource dropdown list.</li> <li>Select 'Add User' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Channel ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Mattermost &gt; Output Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$node[\"Mattermost\"].json[\"id\"]}}</code>.</li> <li>Select a user from the User ID dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node adds a user to the channel that we created in the previous node.</p> <p></p>","title":"3. Mattermost1 node (addUser: channel)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mattermost/#4-mattermost2-node-post-message","text":"<p>This node will post a message to the channel that we created using the Mattermost node.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Click on the gears icon next to the Channel ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Mattermost &gt; Output Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$node[\"Mattermost\"].json[\"id\"]}}</code>.</li> <li>Enter a message in the Message field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node posts a message to the channel that we created in the Mattermost node.</p> <p></p>","title":"4. Mattermost2 node (post: message)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mattermost/#faqs","text":"","title":"FAQs"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mattermost/#how-do-i-resolve-the-error-for-the-channel-id-field","text":"<p>If you're not the System Administrator, you might get an error <code>there was a problem loading the parameter options from server: \"Mattermost error response: You do not have the appropriate permissions.\"</code> next to the Channel ID field.</p> <p>If the system administrator has granted you the <code>post:channel</code> permissions, you will be able to execute the node successfully even with the error.</p>","title":"How do I resolve the error for the Channel ID field?"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mattermost/#how-do-i-find-the-channel-id","text":"<p>To find the Channel ID in Mattermost, follow the steps mentioned below.</p> <ol> <li>Select the channel from the left sidebar.</li> <li>Click on the channel name on the top and select 'View Info' from the dropdown list.</li> <li>Use the displayed ID in Workflow\u00b2.</li> </ol>","title":"How do I find the Channel ID?"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mautic/","text":"<p>Mautic is an open-source marketing automation software that helps online businesses automate their repetitive marketing tasks such as lead generation, contact scoring, contact segmentation, and marketing campaigns.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Mautic"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mautic/#basic-operations","text":"<ul> <li>Campaign Contact<ul> <li>Add contact to a campaign</li> <li>Remove contact from a campaign</li> </ul> </li> <li>Company<ul> <li>Create a new company</li> <li>Delete a company</li> <li>Get data of a company</li> <li>Get data of all companies</li> <li>Update a company</li> </ul> </li> <li>Company Contact<ul> <li>Add contact to a company</li> <li>Remove a contact from a company</li> </ul> </li> <li>Contact<ul> <li>Create a new contact</li> <li>Delete a contact</li> <li>Edit contact's points</li> <li>Add/remove contacts from/to the do not contact list</li> <li>Get data of a contact</li> <li>Get data of all contacts</li> <li>Send email to contact</li> <li>Update a contact</li> </ul> </li> <li>Contact Segment<ul> <li>Add contact to a segment</li> <li>Remove contact from a segment</li> </ul> </li> <li>Segment Email<ul> <li>Send</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mautic/#example-usage","text":"<p>This workflow allows you to get all contacts from Mautic. You can also find the workflow on the website. This example usage workflow uses the following two nodes.</p> <ul> <li>Start</li> <li>Mautic</li> </ul> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mautic/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mautic/#2-mautic-node","text":"<ol> <li>First of all, you'll have to enter credentials for the Mautic node. You can find out how to do that here.</li> <li>Select 'Get All' from the Operation dropdown list.</li> <li>Click on Execute Node to run the workflow.</li> </ol>","title":"2. Mautic node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.medium/","text":"<p>Medium is an online publishing platform and home to a diverse array of stories, ideas, and perspectives. It empowers writers to share their work and ideas with the readers.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Medium"},{"location":"workflow/integrations/nodes/workflow-nodes-base.medium/#basic-operations","text":"<ul> <li>Post<ul> <li>Create a post</li> </ul> </li> <li>Publication<ul> <li>Get all publications</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.medium/#example-usage","text":"<p>This workflow allows you to post an article to a publication on Medium. You can also find the workflow on the website. This example usage workflow uses the following two nodes.</p> <ul> <li>Start</li> <li>Medium</li> </ul> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.medium/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.medium/#2-medium-node","text":"<ol> <li>First of all, you'll have to enter credentials for the Medium node. You can find out how to do that here.</li> <li>Toggle Publication to true.</li> <li>Select the publication from the Publication ID dropdown list.</li> <li>Enter the title in the Title field.</li> <li>Select the format from the Content Format dropdown list.</li> <li>Enter conent of the post in the Content field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>","title":"2. Medium node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.messageBird/","text":"<p>MessageBird is a cloud communications platform that connects enterprises to their global customers.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"MessageBird"},{"location":"workflow/integrations/nodes/workflow-nodes-base.messageBird/#basic-operations","text":"<ul> <li>SMS<ul> <li>Send text messages (SMS)</li> </ul> </li> <li>Balance<ul> <li>Get the balance</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.messageBird/#example-usage","text":"<p>This workflow allows you to send an SMS with MessageBird. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - MessageBird</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.messageBird/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.messageBird/#2-messagebird-node","text":"<ol> <li>First of all, you'll have to enter credentials for the MessageBird node. You can find out how to do that here.</li> <li>Enter the phone number from which you'll be sending the message in the From field.</li> <li>Enter the phone number to which you'll be sending the message in the To field.</li> <li>Enter you message in the Message field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>","title":"2. MessageBird node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.microsoftDynamicsCrm/","text":"<p>Microsoft Dynamics CRM is a is a customer relationship management application developed by Microsoft.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Microsoft Dynamics CRM"},{"location":"workflow/integrations/nodes/workflow-nodes-base.microsoftDynamicsCrm/#basic-operations","text":"<ul> <li>Account<ul> <li>Create</li> <li>Delete</li> <li>Get</li> <li>Get All</li> <li>Update</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.microsoftExcel/","text":"<p>Microsoft Excel is a spreadsheet developed by Microsoft. It features calculation, graphing tools, pivot tables, and a macro programming language called Visual Basic for Applications.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Microsoft Excel"},{"location":"workflow/integrations/nodes/workflow-nodes-base.microsoftExcel/#basic-operations","text":"<ul> <li>Table<ul> <li>Adds rows to the end of the table</li> <li>Retrieve a list of tablecolumns</li> <li>Retrieve a list of tablerows</li> <li>Looks for a specific column value and then returns the matching row</li> </ul> </li> <li>Workbook<ul> <li>Adds a new worksheet to the workbook.</li> <li>Get data of all workbooks</li> </ul> </li> <li>Worksheet<ul> <li>Get all worksheets</li> <li>Get worksheet content</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.microsoftExcel/#example-usage","text":"<p>This workflow allows you to get information about all workbooks from Microsoft Excel. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - Microsoft Excel</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.microsoftExcel/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.microsoftExcel/#2-microsoft-excel-node","text":"<ol> <li>First of all, you'll have to enter credentials for the Microsoft Excel node. You can find out how to do that here.</li> <li>Select the 'Get All' option from the Operation dropdown list.</li> <li>Click on Execute Node to run the workflow.</li> </ol>","title":"2. Microsoft Excel node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.microsoftGraphSecurity/","text":"<p>The Microsoft Graph Security API allows connecting to Microsoft security products, services, and partners to streamline security operations and improve threat protection, detection, and response capabilities.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Microsoft Graph Security"},{"location":"workflow/integrations/nodes/workflow-nodes-base.microsoftGraphSecurity/#basic-operations","text":"<ul> <li>Secure Score<ul> <li>Get</li> <li>Get All</li> </ul> </li> <li>Secure Score Control Profile<ul> <li>Get</li> <li>Get All</li> <li>Update</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.microsoftOneDrive/","text":"<p>Microsoft OneDrive is a file hosting service and synchronization service operated by Microsoft.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Microsoft OneDrive"},{"location":"workflow/integrations/nodes/workflow-nodes-base.microsoftOneDrive/#basic-operations","text":"<ul> <li>File<ul> <li>Copy a file</li> <li>Delete a file</li> <li>Download a file</li> <li>Get a file</li> <li>Search a file</li> <li>Share a file</li> <li>Upload a file up to 4MB in size</li> </ul> </li> <li>Folder<ul> <li>Create a folder</li> <li>Delete a folder</li> <li>Get items inside a folder</li> <li>Search a folder</li> <li>Share a folder</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.microsoftOneDrive/#example-usage","text":"<p>This workflow allows you to create a folder in Microsoft OneDrive. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - Microsoft OneDrive</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.microsoftOneDrive/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.microsoftOneDrive/#2-microsoft-onedrive-node","text":"<ol> <li>First of all, you'll have to enter credentials for the Microsoft OneDrive node. You can find out how to do that here.</li> <li>Select the 'Folder' option from the Resource dropdown list.</li> <li>Select the 'Create' option from the Operation dropdown list.</li> <li>Enter the folder name in the Name field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>","title":"2. Microsoft OneDrive node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.microsoftOutlook/","text":"<p>Microsoft Outlook is a personal information manager software system from Microsoft. Microsoft Outlook is an email client that includes calendaring, task managing, contact managing, note-taking, journal logging, and web browsing.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Microsoft Outlook"},{"location":"workflow/integrations/nodes/workflow-nodes-base.microsoftOutlook/#basic-operations","text":"<ul> <li>Draft<ul> <li>Create a new email draft</li> <li>Delete a draft</li> <li>Get a single draft</li> <li>Send an existing draft message</li> <li>Update a draft</li> </ul> </li> <li>Folder<ul> <li>Create a new mail folder in the root folder of the user's mailbox</li> <li>Delete a folder</li> <li>Get a single folder details</li> <li>Get all folders under the root folder of the signed-in user</li> <li>Lists all child folders under the folder</li> </ul> </li> <li>Folder Message<ul> <li>Get all the messages in a folder</li> </ul> </li> <li>Message<ul> <li>Delete a message</li> <li>Get a single message</li> <li>Get all messages in the signed-in user's mailbox</li> <li>Get MIME content of a message</li> <li>Move a message</li> <li>Create reply to a message</li> <li>Send a message</li> <li>Update a message</li> </ul> </li> <li>Message Attachment<ul> <li>Add an attachment to a message</li> <li>Download attachment content</li> <li>Get an attachment from a message</li> <li>Get all the message's attachments</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.microsoftOutlook/#example-usage","text":"<p>This workflow allows you to create, add an attachment, and send a draft using the Microsoft Outlook node. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Start - Microsoft Outlook - HTTP Request</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.microsoftOutlook/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.microsoftOutlook/#2-microsoft-outlook-node-create-draft","text":"<p>This node will create a draft message that we will send using the Microsoft Outlook node later in the workflow.</p> <ol> <li>First of all, you'll have to enter credentials for the Microsoft Outlook node. You can find out how to do that here.</li> <li>Select 'Draft' from the Resource dropdown list.</li> <li>Enter the subject in the Subject field.</li> <li>Enter the following content in the Body Content field. <pre><code>&lt;h1&gt;Hello from n8n!&lt;/h1&gt;\n&lt;p&gt;We are sending this email using the Microsoft Outlook node in &lt;a href=\"https://n8n.io\"&gt;n8n&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;Best,&lt;/p&gt;\n&lt;p&gt;Sender&lt;/p&gt;\n</code></pre> </li> <li>Click on Add Field and select 'Body Content Type' from the dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node creates a new draft with the subject <code>Hello from n8n!</code> and HTML body content.</p> <p></p>","title":"2. Microsoft Outlook node (create: draft)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.microsoftOutlook/#3-http-request-node-get","text":"<p>This node will fetch the logo of Doc\u00b2 from a URL. We will attach this file to our draft message that we created earlier. If you want to attach a different file, enter the URL of that file instead.</p> <ol> <li>Enter <code>https://n8n.io/n8n-logo.png</code> in the URL field.</li> <li>Select 'File' from the Response Format dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns the Doc\u00b2 logo. We will attach this file to the draft message that we created using the previous node.</p> <p></p>","title":"3. HTTP Request node (GET)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.microsoftOutlook/#4-microsoft-outlook1-node-add-messageattachment","text":"<p>This node will attach the file that we received from the previous node to the drat message we created using the Microsoft Outlook node.</p> <ol> <li>Select the credentials that you entered in the previous Microsoft Outlook node.</li> <li>Select 'Message Attachment' from the Resource dropdown list.</li> <li>Click on the gears icon next to the Message ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Microsoft Outlook &gt; Output Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$node[\"Microsoft Outlook\"].json[\"id\"]}}</code>.</li> <li>Click on the Add Field button.</li> <li>Enter <code>n8n.png</code> in the File Name field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node attaches the file to the draft message that we created using the Microsoft Outlook node.</p> <p></p>","title":"4. Microsoft Outlook1 node (add: messageAttachment)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.microsoftOutlook/#5-microsoft-outlook2-node-send-draft","text":"<p>This node will send the draft message that we created using the Microsoft Outlook node to a recipient.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Draft' from the Resource dropdown list.</li> <li>Select 'Send' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Message ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Microsoft Outlook &gt; Output Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$node[\"Microsoft Outlook\"].json[\"id\"]}}</code>.</li> <li>Click on the Add Field button.</li> <li>Enter the recipient's email address in the Recipients field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node sends the draft message that we created using the Microsoft Outlook node to a recipient.</p> <p></p>","title":"5. Microsoft Outlook2 node (send: draft)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.microsoftSql/","text":"<p>Microsoft SQL is a relational database management system. As a database server, it is a software product with the primary function of storing and retrieving data as requested by other software applications\u2014which may run either on the same computer or on another computer across a network.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Microsoft SQL"},{"location":"workflow/integrations/nodes/workflow-nodes-base.microsoftSql/#basic-operations","text":"<ul> <li>Execute an SQL query</li> <li>Insert rows in database</li> <li>Update rows in database</li> <li>Delete rows in database</li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.microsoftSql/#example-usage","text":"<p>This workflow allows you to execute an SQL query in Microsoft SQL. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - Microsoft SQL</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.microsoftSql/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.microsoftSql/#2-microsoft-sql-node","text":"<ol> <li>First of all, you'll have to enter credentials for the Microsoft SQL node. You can find out how to do that here.</li> <li>Select 'Execute Query' from the Operation dropdown list.</li> <li>Enter your SQL query in the Query field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>","title":"2. Microsoft SQL node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.microsoftTeams/","text":"<p>Microsoft Teams is a business-oriented communication and collaboration platform that combines workplace chat, video meetings, file storage , and application integration.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Microsoft Teams"},{"location":"workflow/integrations/nodes/workflow-nodes-base.microsoftTeams/#basic-operations","text":"<ul> <li>Channel<ul> <li>Create a channel</li> <li>Delete a channel</li> <li>Get a channel</li> <li>Get all channels</li> <li>Update a channel</li> </ul> </li> <li>Channel Message (Beta)<ul> <li>Create a message</li> <li>Get all messages</li> </ul> </li> <li>Task<ul> <li>Create a task</li> <li>Delete a task</li> <li>Get a task</li> <li>Get all tasks</li> <li>Update a task</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.microsoftTeams/#example-usage","text":"<p>This workflow allows you to create, update and send a message to a channel in Microsoft Teams. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Start - Microsoft Teams</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.microsoftTeams/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.microsoftTeams/#2-microsoft-teams-node-create-channel","text":"<ol> <li>First of all, you'll have to enter credentials for the Microsoft Teams node. You can find out how to do that here.</li> <li>Select the team that you want to use from the Team ID dropdown list.</li> <li>Enter a name for the channel in the Name field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p></p>","title":"2. Microsoft Teams node (create: channel)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.microsoftTeams/#3-microsoft-teams1-node-update-channel","text":"<ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Update' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Team ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Microsoft Teams &gt; Parameters &gt; teamId. You can also add the following expression: <code>{{$node[\"Microsoft Teams\"].parameter[\"teamId\"]}}</code></li> <li>Click on the gears icon next to the Channel ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Microsoft Teams &gt; Output &gt; JSON &gt; id. You can also add the following expression: <code>{{$node[\"Microsoft Teams\"].json[\"id\"]}}</code></li> <li>Click on the Add Field button and select 'Name' from the dropdown list.</li> <li>Enter a new channel name in the Name field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p></p>","title":"3. Microsoft Teams1 node (update: channel)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.microsoftTeams/#4-microsoft-teams2-node-create-channelmessage","text":"<ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Channel Message (Beta)' from the Resource dropdown list.</li> <li>Click on the gears icon next to the Team ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Microsoft Teams &gt; Parameters &gt; teamId. You can also add the following expression: <code>{{$node[\"Microsoft Teams\"].parameter[\"teamId\"]}}</code></li> <li>Click on the gears icon next to the Channel ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Microsoft Teams &gt; Output &gt; JSON &gt; id. You can also add the following expression: <code>{{$node[\"Microsoft Teams\"].json[\"id\"]}}</code></li> <li>Select 'Text' from the Message Type dropdown list.</li> <li>Enter a message in the Message field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p></p>","title":"4. Microsoft Teams2 node (create: channelMessage)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.microsoftToDo/","text":"<p>Microsoft To Do is a cloud-based task management application. It allows users to manage their tasks from a smartphone, tablet, and computer.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Microsoft To Do"},{"location":"workflow/integrations/nodes/workflow-nodes-base.microsoftToDo/#basic-operations","text":"<ul> <li>Linked Resource<ul> <li>Create</li> <li>Delete</li> <li>Get</li> <li>Get All</li> <li>Update</li> </ul> </li> <li>List<ul> <li>Create</li> <li>Delete</li> <li>Get</li> <li>Get All</li> <li>Update</li> </ul> </li> <li>Task<ul> <li>Create</li> <li>Delete</li> <li>Get</li> <li>Get All</li> <li>Update</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.microsoftToDo/#example-usage","text":"<p>This workflow allows you to create, update and get a task in Microsoft To Do. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Start - Microsoft To Do</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.microsoftToDo/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.microsoftToDo/#2-microsoft-to-do-node-create-task","text":"<p>This node will create a task with the importance level <code>High</code> in the Tasks list. You can select a different list and the importance level.</p> <ol> <li>First of all, you'll have to enter credentials for the Microsoft To Do node. You can find out how to do that here.</li> <li>Select 'Create' from the Operation dropdown list.</li> <li>Select a list from the List ID dropdown list.</li> <li>Enter a subject in the Subject field.</li> <li>Click on Add Field and select 'Importance' from the dropdown list.</li> <li>Select 'High' from the Importance dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node creates a new task in Microsoft To Do.</p> <p></p>","title":"2. Microsoft To Do node (create: task)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.microsoftToDo/#3-microsoft-to-do1-node-update-task","text":"<p>This node will update the status of the task that we created in the previous node.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Update' from the Operation dropdown list.</li> <li>Click on the gears icon next to the List ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Microsoft To Do &gt; Parameters &gt; taskListId. You can also add the following expression: <code>{{$node[\"Microsoft To Do\"].parameter[\"taskListId\"]}}</code>.</li> <li>Click on the gears icon next to the Task ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input &gt; JSON &gt; id. You can also add the following expression: <code>{{$json[\"id\"]}}</code>.</li> <li>Click on the Add Field button and select 'Status' from the dropdown list.</li> <li>Select 'In progress' from the Status dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node updates the status of the task that we created in the previous node.</p> <p></p>","title":"3. Microsoft To Do1 node (update: task)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.microsoftToDo/#4-microsoft-to-do2-node-get-task","text":"<p>This node will get the task that we created earlier.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Click on the gears icon next to the List ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Microsoft To Do &gt; Parameters &gt; taskListId. You can also add the following expression: <code>{{$node[\"Microsoft To Do\"].parameter[\"taskListId\"]}}</code>.</li> <li>Click on the gears icon next to the Task ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input &gt; JSON &gt; id. You can also add the following expression: <code>{{$json[\"id\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node fetches the information of the task that we created earlier.</p> <p></p>","title":"4. Microsoft To Do2 node (get: task)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mindee/","text":"<p>Mindee develops API-based products for instantly extracting information from any kind of image and transforming it into usable data.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Mindee"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mindee/#basic-operations","text":"<p>Invoice - Predict</p> <p>Receipt - Predict</p>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mindee/#example-usage","text":"<p>This workflow allows you to extract information from an image of a receipt using the Mindee node. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Start - HTTP Request - Mindee</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mindee/#1-start-node","text":"<p>The Start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mindee/#2-http-request-get","text":"<p>This example workflow uses the HTTP Request node to make a GET request to download the image of a receipt. You can also use other nodes, for example, the Box node, to get the images of the receipts you want to use.</p> <ol> <li>Enter the URL of the image in the URL field. For example, <code>https://miro.medium.com/max/1400/0*1T9GkAb93w5NSMsf</code>.</li> <li>Select 'File' from the Response Format dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the HTTP Request node downloads the image from the URL. This image (binary data) can now be used by the other nodes in the workflow.</p> <p></p>","title":"2. HTTP Request (GET)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mindee/#3-mindee-node-predict-receipt","text":"<p>This node will get the image of the receipt (binary data) from the HTTP Request node and extract the information from it. 1. Select 'Receipt' from the Resource dropdown list. 2. You'll have to enter credentials for the Mindee node. You can find out how to do that  here. 3. Click on Execute Node to run the workflow.</p> <p>In the screenshot below, you will notice that the node extracts the information from the image that it got from the HTTP Request node.</p> <p></p>","title":"3. Mindee node (predict: receipt)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.misp/","text":"<p>MISP is an open source threat intelligence platform. The project develops utilities and documentation for more effective threat intelligence. </p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"MISP"},{"location":"workflow/integrations/nodes/workflow-nodes-base.misp/#basic-operations","text":"<ul> <li>Attribute<ul> <li>Create</li> <li>Delete</li> <li>Get</li> <li>Get All</li> <li>Update</li> </ul> </li> <li>Event<ul> <li>Create</li> <li>Delete</li> <li>Get</li> <li>Get All</li> <li>Publish</li> <li>Unpublish</li> <li>Update</li> </ul> </li> <li>Event Tag<ul> <li>Add</li> <li>Remove</li> </ul> </li> <li>Feed<ul> <li>Create</li> <li>Disable</li> <li>Enable</li> <li>Get</li> <li>Get All</li> <li>Update</li> </ul> </li> <li>Galaxy<ul> <li>Delete</li> <li>Get</li> <li>Get All</li> </ul> </li> <li>Noticelist<ul> <li>Get</li> <li>Get All</li> </ul> </li> <li>Organisation<ul> <li>Create</li> <li>Delete</li> <li>Get</li> <li>Get All</li> <li>Update</li> </ul> </li> <li>Tag<ul> <li>Create</li> <li>Delete</li> <li>Get All</li> <li>Update</li> </ul> </li> <li>User<ul> <li>Create</li> <li>Delete</li> <li>Get</li> <li>Get All</li> <li>Update</li> </ul> </li> <li>Warninglist<ul> <li>Get</li> <li>Get All</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mocean/","text":"<p>Mocean makes sending and receiving SMS easy. It also has voice API which allows you to make outbound and inbound calls.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Mocean"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mocean/#basic-operations","text":"<ul> <li>SMS<ul> <li>Send SMS/Voice message</li> </ul> </li> <li>Voice<ul> <li>Send SMS/Voice message</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mocean/#example-usage","text":"<p>This workflow allows you to send an SMS using the Mocean node. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Start - Mocean</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mocean/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mocean/#2-mocean-node","text":"<ol> <li>First of all, you'll have to enter credentials for the Mocean node. You can find out how to do that here.</li> <li>Enter the sender ID in the From field.</li> <li>Enter the receivers' number in the To field.</li> <li>Enter the message in the Message field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p></p>","title":"2. Mocean node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mondayCom/","text":"<p>monday.com is a work operating system that enables organizations to manage tasks, projects, and team work.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"monday.com"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mondayCom/#basic-operations","text":"<ul> <li>Board<ul> <li>Archive a board</li> <li>Create a new board</li> <li>Get a board</li> <li>Get all boards</li> </ul> </li> <li>Board Column<ul> <li>Create a new column</li> <li>Get all columns</li> </ul> </li> <li>Board Group<ul> <li>Delete a group in a board</li> <li>Create a group in a board</li> <li>Get list of groups in a board</li> </ul> </li> <li>Board Item<ul> <li>Add an update to an item.</li> <li>Change a column value for a board item</li> <li>Change multiple column values for a board item</li> <li>Create an item in a board's group</li> <li>Delete an item</li> <li>Get an item</li> <li>Get all items</li> <li>Get items by column value</li> <li>Move item to group</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mondayCom/#example-usage","text":"<p>This workflow allows you to get a board from monday.com. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - monday.com</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mondayCom/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mondayCom/#2-mondaycom-node","text":"<ol> <li>First of all, you'll have to enter credentials for the monday.com node. You can find out how to do that here.</li> <li>Select the 'Get' option from the Operation dropdown list.</li> <li>Select the board you want to get from the Board ID dropdown list.</li> <li>Click on Execute Node to run the workflow.</li> </ol>","title":"2. monday.com node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mongoDb/","text":"<p>MongoDB is a cross-platform document-oriented database program developed by MongoDB Inc. It is classified as a NoSQL database program. MongoDB uses JSON-like documents with optional schemas.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"MongoDB"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mongoDb/#basic-operations","text":"<ul> <li>Aggregate documents.</li> <li>Delete documents.</li> <li>Find documents.</li> <li>Insert documents.</li> <li>Update documents.</li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mongoDb/#example-usage","text":"<p>This workflow allows you to insert a document into a MongoDB collection. You can also find the workflow on the website. This example usage workflow would use the following three nodes. - Start - Set - MongoDB</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mongoDb/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mongoDb/#2-set-node","text":"<ol> <li>Click on the Add Value button and select 'String' from the dropdown list.</li> <li>Enter <code>my_key</code>in the Name field.</li> <li>Enter <code>my_value</code> in the Value field.</li> </ol>","title":"2. Set node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mongoDb/#3-mongodb-node","text":"<ol> <li>First of all, you'll have to enter credentials for the MongoDB node. You can find out how to do that here.</li> <li>Select 'Insert' from the Operation dropdown list.</li> <li>Enter the name of your MongoDB collection in the Collection field.</li> <li>Enter <code>my_key</code> in the Fields field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>","title":"3. MongoDB node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.monicaCrm/","text":"<p>Monica CRM is an open-source web application to organize and record your interactions with your loved ones.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Monica CRM"},{"location":"workflow/integrations/nodes/workflow-nodes-base.monicaCrm/#basic-operations","text":"<ul> <li>Activity<ul> <li>Create an activity</li> <li>Delete an activity</li> <li>Retrieve an activity</li> <li>Retrieve all activities</li> <li>Update an activity</li> </ul> </li> <li>Call<ul> <li>Create a call</li> <li>Delete a call</li> <li>Retrieve a call</li> <li>Retrieve all calls</li> <li>Update a call</li> </ul> </li> <li>Contact<ul> <li>Create a contact</li> <li>Delete a contact</li> <li>Retrieve a contact</li> <li>Retrieve all contacts</li> <li>Update a contact</li> </ul> </li> <li>Contact Field<ul> <li>Create a contact field</li> <li>Delete a contact field</li> <li>Retrieve a contact field</li> <li>Update a contact field</li> </ul> </li> <li>Contact Tag<ul> <li>Add</li> <li>Remove</li> </ul> </li> <li>Conversation<ul> <li>Create a conversation</li> <li>Delete a conversation</li> <li>Retrieve a conversation</li> <li>Update a conversation</li> </ul> </li> <li>Conversation Message<ul> <li>Add a message to a conversation</li> <li>Update a message in a conversation</li> </ul> </li> <li>Journal Entry<ul> <li>Create a journal entry</li> <li>Delete a journal entry</li> <li>Retrieve a journal entry</li> <li>Retrieve all journal entries</li> <li>Update a journal entry</li> </ul> </li> <li>Note<ul> <li>Create a note</li> <li>Delete a note</li> <li>Retrieve a note</li> <li>Retrieve all notes</li> <li>Update a note</li> </ul> </li> <li>Reminder<ul> <li>Create a reminder</li> <li>Delete a reminder</li> <li>Retrieve a reminder</li> <li>Retrieve all reminders</li> <li>Update a reminder</li> </ul> </li> <li>Tag<ul> <li>Create a tag</li> <li>Delete a tag</li> <li>Retrieve a tag</li> <li>Retrieve all tags</li> <li>Update a tag</li> </ul> </li> <li>Task<ul> <li>Create a task</li> <li>Delete a task</li> <li>Retrieve a task</li> <li>Retrieve all tasks</li> <li>Update a task</li> </ul> </li> </ul>","title":"Basic operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.monicaCrm/#example-usage","text":"<p>This workflow allows you to create a new contact in Monica CRM. This example usage workflow would use the following three nodes. - Start - Monica CRM</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.monicaCrm/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.monicaCrm/#2-monica-crm-node","text":"<ol> <li>First enter your credentials for the Monica CRM node. You can find out how to do that here.</li> <li>Select Contact from the Resource dropdown list.</li> <li>Select Create from the Operation dropdown list.</li> <li>Enter the First Name of your new contact.</li> <li>Enter the Gender of your new contact using the dropdown list.</li> <li>Click on Execute Node to run the workflow.</li> </ol> <p></p>","title":"2. Monica CRM node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mqtt/","text":"<p>MQTT is an open OASIS and ISO standard lightweight, publish-subscribe network protocol that transports messages between devices.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"MQTT"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mqtt/#example-usage","text":"<p>This workflow allows you to send position updates of the ISS every minute to a topic in MQTT using the MQTT node. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Cron - HTTP Request - Set - MQTT</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mqtt/#1-cron-node","text":"<p>The Cron node will trigger the workflow every minute.</p> <ol> <li>Click on Add Cron Time.</li> <li>Select 'Every Minute' from the Mode dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the Cron node is configured to trigger the workflow every minute.</p> <p></p>","title":"1. Cron node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mqtt/#2-http-request-node-get","text":"<p>This node will make a GET request to the API <code>https://api.wheretheiss.at/v1/satellites/25544/positions</code> to fetch the position of the ISS. This information gets passed on to the next node in the workflow.</p> <ol> <li>Enter <code>https://api.wheretheiss.at/v1/satellites/25544/positions</code> in the URL field.</li> <li>Click on the Add Parameter button in the Query Parameters section.</li> <li>Enter <code>timestamps</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Enter the following expression: <code>{{Date.now()}}</code>. This expression will return the current timestamp.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node makes a GET request to the API and returns the information about the location of the ISS.</p> <p></p>","title":"2. HTTP Request node (GET)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mqtt/#3-set-node","text":"<p>We will use the Set node to ensure that only the data that we set in this node gets passed on to the next nodes in the workflow.</p> <ol> <li>Click on Add Value and select 'String' from the dropdown list.</li> <li>Enter <code>Name</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; 0 &gt; name. You can also add the following expression: <code>{{$json[\"0\"][\"name\"]}}</code>.</li> <li>Click on Add Value and select 'String' from the dropdown list.</li> <li>Enter <code>Latitude</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; 0 &gt; latitude. You can also add the following expression: <code>{{$json[\"0\"][\"latitude\"]}}</code>.</li> <li>Click on Add Value and select 'String' from the dropdown list.</li> <li>Enter <code>Longitude</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; 0 &gt; longitude. You can also add the following expression: <code>{{$json[\"0\"][\"longitude\"]}}</code>.</li> <li>Click on Add Value and select 'String' from the dropdown list.</li> <li>Enter <code>Timestamp</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; 0 &gt; timpestamp. You can also add the following expression: <code>{{$json[\"0\"][\"timestamp\"]}}</code>.</li> <li>Toggle Keep Only Set to <code>true</code>. We set this option to true to ensure that only the data that we have set in this node get passed on to the next nodes in the workflow.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node uses the data from the previous node and returns the data that we set for the workflow.</p> <p></p>","title":"3. Set node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mqtt/#4-mqtt-node","text":"<p>This node will send the data from the previous node to the <code>iss-position</code> topic in MQTT. If you have created a topic with a different name in MQTT, you can use that topic name instead.</p> <ol> <li>First of all, you'll have to enter credentials for the MQTT node. You can find out how to do that here.</li> <li>Enter the name of the topic in the Topic field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node sends the data from the previous node to the <code>iss-position</code> topic in MQTT.</p> <p></p>  <p> Activate workflow for production</p> <p>This example workflow uses the Cron node, which is a Trigger node. You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Cron node.</p>","title":"4. MQTT node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.msg91/","text":"<p>MSG91 is an enterprise SMS Solution providing Bulk SMS, Transactional SMS API, Regional SMS, OTP Verification APIs, Promotional SMS via powerful, and a robust SMS Gateway.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"MSG91"},{"location":"workflow/integrations/nodes/workflow-nodes-base.msg91/#basic-operations","text":"<ul> <li>SMS<ul> <li>Send SMS</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.msg91/#example-usage","text":"<p>This workflow allows you to send an SMS using MSG91. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - MSG91</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.msg91/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.msg91/#2-msg91-node","text":"<ol> <li>First of all, you'll have to enter credentials for the MSG91 node. You can find out how to do that here.</li> <li>Enter the sender ID in the Sender ID field. You can find instructions on how to obtain the sender ID in the FAQs below.</li> <li>Enter the phone number to which you'll be sending the message in the To field.</li> <li>Enter you message in the Message field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>","title":"2. MSG91 node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.msg91/#faqs","text":"","title":"FAQs"},{"location":"workflow/integrations/nodes/workflow-nodes-base.msg91/#how-do-i-find-my-sender-id","text":"<ol> <li>Log in to your MSG91 dasboard and click on 'Sender Id' in the left panel.</li> <li>If you don't already have one, click on Add Sender Id +, fill in the details, and click on the Save Sender Id button.</li> </ol>","title":"How do I find my Sender ID?"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mySql/","text":"<p>MySQL is an open-source relational database management system. MySQL has stand-alone clients that allow users to interact directly with a MySQL database using SQL, but more often MySQL is used with other programs to implement applications that need relational database capability.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"MySQL"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mySql/#basic-operations","text":"<ul> <li>Execute an SQL query.</li> <li>Insert rows in database.</li> <li>Update rows in database</li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mySql/#example-usage","text":"<p>This workflow allows you to create a table and insert data in it on a MySQL database. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Start - Set - MySQL</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mySql/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mySql/#2-mysql-node-execute-query","text":"<ol> <li>First of all, you'll have to enter credentials for the MySQL node. You can find out how to do that here.</li> <li>Select 'Execute Query' from the Operation dropdown list.</li> <li>Enter the following SQL query in the Query field: <code>CREATE TABLE test (id INT, name VARCHAR(255), PRIMARY KEY (id));</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p></p>","title":"2. MySQL node (Execute Query)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mySql/#3-set-node","text":"<ol> <li>Set the Keep Only Set toggle to true.</li> <li>Click on the Add Value button and select 'Number' from the dropdown list.</li> <li>Enter <code>id</code> in the Name field.</li> <li>Click on the Add Value button and select 'String' from the dropdown list.</li> <li>Enter <code>name</code> in the Name field.</li> <li>Enter the value for the name in the Value field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p></p>","title":"3. Set node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.mySql/#4-mysql1-node-insert","text":"<ol> <li>Select the credentials that you entered in the previous MySQL node.</li> <li>Enter <code>test</code> in the Table field.</li> <li>Enter <code>id, name</code> in the Columns field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p></p>","title":"4. MySQL1 node (Insert)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.nasa/","text":"<p>NASA is an independent agency of the U.S. federal government responsible for the civilian space program, as well as aeronautics and space research. The NASA API makes NASA data, including imagery, accessible to application developers.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"NASA"},{"location":"workflow/integrations/nodes/workflow-nodes-base.nasa/#basic-operations","text":"<ul> <li>Astronomy Picture of the Day<ul> <li>Get the Astronomy Picture of the Day</li> </ul> </li> <li>Asteroid Neo-Feed<ul> <li>Retrieve a list of asteroids based on their closest approach date to Earth</li> </ul> </li> <li>Asteroid Neo-Lookup<ul> <li>Look up an asteroid based on its NASA SPK-ID</li> </ul> </li> <li>Asteroid Neo-Browse<ul> <li>Browse the overall asteroid dataset</li> </ul> </li> <li>DONKI Coronal Mass Ejection<ul> <li>Retrieve DONKI coronal mass ejection data</li> </ul> </li> <li>DONKI Interplanetary Shock<ul> <li>Retrieve DONKI interplanetary shock data</li> </ul> </li> <li>DONKI Solar Flare<ul> <li>Retrieve DONKI solar flare data</li> </ul> </li> <li>DONKI Solar Energetic Particle<ul> <li>Retrieve DONKI solar energetic particle data</li> </ul> </li> <li>DONKI Magnetopause Crossing<ul> <li>Retrieve data on DONKI magnetopause crossings</li> </ul> </li> <li>DONKI Radiation Belt Enhancement<ul> <li>Retrieve DONKI radiation belt enhancement data</li> </ul> </li> <li>DONKI High Speed Stream<ul> <li>Retrieve DONKI high speed stream data</li> </ul> </li> <li>DONKI WSA+EnlilSimulation<ul> <li>Retrieve DONKI WSA+EnlilSimulation data</li> </ul> </li> <li>DONKI Notifications<ul> <li>Retrieve DONKI notifications data</li> </ul> </li> <li>Earth Imagery<ul> <li>Retrieve Earth imagery</li> </ul> </li> <li>Earth Assets<ul> <li>Retrieve Earth assets</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.nasa/#example-usage","text":"<p>This workflow allows you to send the Astronomy Picture of the day daily to a Telegram channel. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Cron - NASA - Telegram</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.nasa/#1-cron-node","text":"<p>The Cron node will trigger the workflow daily at 8 PM.</p> <ol> <li>Click on Add Cron Time.</li> <li>Set hours to 20 in the Hour field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the Cron node is configured to trigger the workflow every day at 8 PM.</p> <p></p>","title":"1. Cron node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.nasa/#2-nasa-node-getastronomypictureoftheday","text":"<p>This node will return the Astronomy Picture of the Day.</p> <ol> <li>First of all, you'll have to enter credentials for the NASA node. You can find out how to do that here.</li> <li>Toggle Download Image to <code>false</code>. By setting this option to false the node will not return binary data.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns data for the Astronomy Picture of the Day. This data will be used by the next node in the workflow.</p> <p></p>","title":"2. NASA node (get:astronomyPictureOfTheDay)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.nasa/#3-telegram-node-sendphoto-message","text":"<p>This node will send the picture that we receive from the previous node to a channel.</p> <ol> <li>First of all, you'll have to enter credentials for the Telegram node. You can find out how to do that here.</li> <li>Select 'Send Photo' from the Operation dropdown list.</li> <li>Enter a chat ID in the Chat ID field.</li> <li> <p>Click on the gears icon next to the Photo field and click on Add Expression.</p> </li> <li> <p>Select the following in the Variable Selector section: Nodes &gt; NASA &gt; Output Data &gt; JSON &gt; url. You can also add the following expression: <code>{{$node[\"NASA\"].json[\"url\"]}}</code>.</p> </li> <li>Click on Add Field and select 'Caption' from the dropdown list.</li> <li>Click on the gears icon next to the Caption field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; NASA &gt; Output Data &gt; JSON &gt; title. You can also add the following expression: <code>{{$node[\"NASA\"].json[\"title\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node sends the image with a caption to the channel that we specifiy.</p> <p></p>  <p> Activate workflow for production</p> <p>This example workflow uses the Cron node, which is a Trigger node. You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Cron node.</p>","title":"3. Telegram node (sendPhoto: message)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.netlify/","text":"<p>Netlify offers hosting and serverless backend services for web applications and static websites.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Netlify"},{"location":"workflow/integrations/nodes/workflow-nodes-base.netlify/#basic-operations","text":"<ul> <li>Deploy<ul> <li>Cancel a deployment</li> <li>Create a new deployment</li> <li>Get a deployment</li> <li>Get all deployments</li> </ul> </li> <li>Site<ul> <li>Delete a site</li> <li>Get a site</li> <li>Returns all sites</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.nextCloud/","text":"<p>Nextcloud is a free and open-source suite of client-server software for creating and using file hosting services.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Nextcloud"},{"location":"workflow/integrations/nodes/workflow-nodes-base.nextCloud/#basic-operations","text":"<ul> <li>File<ul> <li>Copy a file</li> <li>Delete a file</li> <li>Download a file</li> <li>Move a file</li> <li>Share a file</li> <li>Upload a file</li> </ul> </li> <li>Folder<ul> <li>Copy a folder</li> <li>Create a folder</li> <li>Delete a folder</li> <li>Return the contents of a given folder</li> <li>Move a folder</li> <li>Share a folder</li> </ul> </li> <li>User<ul> <li>Invite a user to a NextCloud organization</li> <li>Delete a user.</li> <li>Retrieve information about a single user.</li> <li>Retrieve a list of users.</li> <li>Edit attributes related to a user.</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.nextCloud/#example-usage","text":"<p>This workflow allows you to create a folder in Nextcloud, upload a file into that folder, and list the contents of the folder. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Start - Nextcloud - HTTP Request</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.nextCloud/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.nextCloud/#2-nextcloud-node-create-folder","text":"<ol> <li>First of all, you'll have to enter credentials for the Nextcloud node. You can find out how to do that here.</li> <li>Select the 'Folder' option from the Resource dropdown list.</li> <li>Enter a folder name in the Folder field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p></p>","title":"2. Nextcloud node (create: folder)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.nextCloud/#3-http-request-node-get","text":"<ol> <li>Enter <code>https://n8n.io/n8n-logo.png</code> in the URL field.</li> <li>Select 'File' from the Response Format dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p></p>","title":"3. HTTP Request node (GET)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.nextCloud/#4-nextcloud1-node-upload-file","text":"<ol> <li>Select the credentials that you entered in the Nextcloud node.</li> <li>Enter the path of the Nextcloud folder you created in the previous steps along with a file name in the File Path field.</li> <li>Set the Binary Data toggle to true.</li> <li>Click on Execute Node to run the node.</li> </ol> <p></p>","title":"4. Nextcloud1 node (upload: file)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.nextCloud/#5-nextcloud2-node-list-folder","text":"<ol> <li>Select the credentials that you entered in the Nextcloud node.</li> <li>Select 'Folder' from the Resource dropdown list.</li> <li>Select 'List' from the Operation dropdown list.</li> <li>Enter the name of the Nextcloud folder you created in the previous steps in the Folder Path field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p></p>","title":"5. Nextcloud2 node (list: folder)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.nocoDb/","text":"<p>NocoDB is an open source Airtable alternative. It works by connecting to any relational database and transforming them into a spreadsheet interface.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"NocoDB"},{"location":"workflow/integrations/nodes/workflow-nodes-base.nocoDb/#basic-operations","text":"<ul> <li>Row<ul> <li>Create a row</li> <li>Delete a row</li> <li>Retrieve all rows</li> <li>Retrieve a row</li> <li>Update a row</li> </ul> </li> </ul>","title":"Basic operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.nocoDb/#example-usage","text":"<p>This workflow allows you to get all rows in your table. This example usage workflow would use the following two nodes. - Start - NocoDB</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.nocoDb/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.nocoDb/#2-nocodb-node","text":"<ol> <li>First enter your credentials for the NocoDB node. You can find out how to do that here.</li> <li>The Row Resource is selected by default.</li> <li>Select Get All from the Operation dropdown.</li> <li>Enter the NocoDB Project ID.</li> <li>Enter the name of the targeted Table.</li> <li>Click on Execute Node to run the workflow.</li> </ol> <p></p>","title":"2. NocoDB node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.notion/","text":"<p>Notion is an all-in-one workspace for your notes, tasks, wikis, and databases.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Notion"},{"location":"workflow/integrations/nodes/workflow-nodes-base.notion/#basic-operations","text":"<p>Block - Append a block - Get all children block</p> <p>Database - Get a database - Get all database - Query a database</p> <p>Database Record - Create a record in a database - Update a record in a database</p> <p>Page - Create a page - Get a page - Text search for pages</p> <p>User - Get a user - Get all users</p>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.notion/#example-usage","text":"<p>This workflow allows you to add a new user to your Notion database when an invite gets created via Calendly. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes.</p> <ul> <li>Calendly Trigger</li> <li>Notion</li> </ul> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.notion/#1-calendly-trigger-node","text":"<p>The Calendly node will trigger the workflow when an invite gets created.</p> <ol> <li>First of all, you'll have to enter credentials for the Notion node. You can find out how to do that here.</li> <li>Select 'invitee.created' from the Events dropdown list.</li> <li>Save your workflow so that the webhook gets registered.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>Note: Since you\u2019ll be using the test webhook while building the workflow, the node only stays active for 120 seconds. After you click on the Execute Node button, create an invite via Calendly.</p> <p>In the screenshot below, you will notice that the Calendly Trigger node triggers the workflow when an invite is created.</p> <p></p>","title":"1. Calendly Trigger node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.notion/#2-notion-node-create-databaserecord","text":"<p>This node will create a new record using the information received from the previous node.</p> <ol> <li> <p>First of all, you'll have to enter credentials for the Notion node. You can find out how to do that here.</p> </li> <li> <p>Select 'Database Record' from the Resource dropdown list.</p> </li> <li>Select the database from the Database ID dropdown list.</li> <li>Click on the Add Property button.</li> <li>Select 'Name' from the Key dropdown list.</li> <li>Click on the gears icon next to the Title field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; payload &gt; invitee &gt; name. You can also add the following expression: <code>{{$json[\"payload\"][\"invitee\"][\"name\"]}}</code>.</li> <li>Click on the Add Property button.</li> <li>Select 'Email' from the Key dropdown list.</li> <li>Click on the gears icon next to the Email field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; payload &gt; invitee &gt; email. You can also add the following expression: <code>{{$json[\"payload\"][\"invitee\"][\"email\"]}}</code>.</li> <li>Click on the Add Property button.</li> <li>Select 'Status' from the Key dropdown list.</li> <li>Select 'Scheduled' from the Option dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node creates a new record from the information that gets received from the previous node.</p> <p></p>  <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Calendly Trigger node.</p>","title":"2. Notion node (create: databaseRecord)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.odoo/","text":"<p>Odoo is a suite of open-source business apps covering functionality such as: CRM, eCommerce, accounting, inventory, point of sale, project management.</p>  <p>Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Odoo"},{"location":"workflow/integrations/nodes/workflow-nodes-base.odoo/#operations","text":"<ul> <li>Contact<ul> <li>Create a new contact</li> <li>Delete a contact</li> <li>Get a contact</li> <li>Get all contacts</li> <li>Update a contact</li> </ul> </li> <li>Custom Resource<ul> <li>Create a new item</li> <li>Delete an item</li> <li>Get an item</li> <li>Get all items</li> <li>Update an item</li> </ul> </li> <li>Note<ul> <li>Create a new note</li> <li>Delete a note</li> <li>Get a note</li> <li>Get all notes</li> <li>Update a note</li> </ul> </li> <li>Opportunity<ul> <li>Create a new opportunity</li> <li>Delete an opportunity</li> <li>Get an opportunity</li> <li>Get all opportunities</li> <li>Update an opportunity</li> </ul> </li> </ul>","title":"Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.oneSimpleApi/","text":"<p>One Simple API is an API toolbox offering PDF generation, Currency Exchange, QR codes, Screenshots, and more.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"One Simple API"},{"location":"workflow/integrations/nodes/workflow-nodes-base.oneSimpleApi/#basic-operations","text":"<ul> <li>Information<ul> <li>Convert a value between currencies</li> <li>Retrieve image metadata from a URL</li> </ul> </li> <li>Social Profile<ul> <li>Get details about an Instagram profile</li> <li>Get details about a Spotify Artist</li> </ul> </li> <li>Utility<ul> <li>Expand a shortened url</li> <li>Generate a QR Code</li> <li>Validate an email address</li> </ul> </li> <li>Website<ul> <li>Generate a PDF from a webpage</li> <li>Get SEO information from website</li> <li>Create a screenshot from a webpage</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.onfleet/","text":"<p>Onfleet is a logistics platform offering a last-mile delivery solution.</p>  <p>Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Onfleet"},{"location":"workflow/integrations/nodes/workflow-nodes-base.onfleet/#operations","text":"<ul> <li>Admin<ul> <li>Create a new Onfleet admin</li> <li>Delete an Onfleet admin</li> <li>Get all Onfleet admins</li> <li>Update an Onfleet admin</li> </ul> </li> <li>Container<ul> <li>Add task at index (or append)</li> <li>Get container information</li> <li>Fully replace a container's tasks</li> </ul> </li> <li>Destination<ul> <li>Create a new destination</li> <li>Get a specific destination</li> </ul> </li> <li>Hub<ul> <li>Create a new Onfleet hub</li> <li>Get all Onfleet hubs</li> <li>Update an Onfleet hub</li> </ul> </li> <li>Organization<ul> <li>Retrieve your own organization's details</li> <li>Retrieve the details of an organization with which you are connected</li> </ul> </li> <li>Recipient<ul> <li>Create a new Onfleet recipient</li> <li>Get a specific Onfleet recipient</li> <li>Update an Onfleet recipient</li> </ul> </li> <li>Task<ul> <li>Create a new Onfleet task</li> <li>Clone an Onfleet task</li> <li>Force-complete a started Onfleet task</li> <li>Delete an Onfleet task</li> <li>Get all Onfleet tasks</li> <li>Get a specific Onfleet task</li> <li>Update an Onfleet task</li> </ul> </li> <li>Team<ul> <li>Automatically dispatch tasks assigned to a team to on-duty drivers</li> <li>Create a new Onfleet team</li> <li>Delete an Onfleet team</li> <li>Get a specific Onfleet team</li> <li>Get all Onfleet teams</li> <li>Get estimated times for upcoming tasks for a team, returns a selected driver</li> <li>Update an Onfleet team</li> </ul> </li> <li>Worker<ul> <li>Create a new Onfleet worker</li> <li>Delete an Onfleet worker</li> <li>Get a specific Onfleet worker</li> <li>Get all Onfleet workers</li> <li>Get a specific Onfleet worker schedule</li> <li>Update an Onfleet worker</li> </ul> </li> </ul>","title":"Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.openThesaurus/","text":"<p>OpenThesaurus is a free German dictionary for synonyms.</p>  <p>\ud83d\udd11 Credentials</p> <p>The OpenThesaurus node does not require authentication.</p>","title":"OpenThesaurus"},{"location":"workflow/integrations/nodes/workflow-nodes-base.openThesaurus/#basic-operations","text":"<ul> <li>Get synonyms for a German word in German</li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.openThesaurus/#example-usage","text":"<p>This workflow allows you to get synonyms of a German word in German. You can also find the workflow on the website. This example usage workflow would use the following nodes. - Start - OpenThesaurus</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.openThesaurus/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.openThesaurus/#2-openthesaurus-node","text":"<p>This node will return synonyms of the word <code>Hallo</code> in German. If you want to get synonyms of another German word, use that word instead.</p> <ol> <li>Enter <code>Hallo</code> in the Text field.</li> <li>Click on Execute Node to run the workflow.</li> </ol> <p>In the screenshot below, you will notice that the node returns the synonyms of the word <code>Hallo</code>.</p> <p></p>","title":"2. OpenThesaurus node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.openWeatherMap/","text":"<p>OpenWeatherMap is an online service that provides weather data. It provides current weather data, forecasts, and historical data.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"OpenWeatherMap"},{"location":"workflow/integrations/nodes/workflow-nodes-base.openWeatherMap/#basic-operations","text":"<ul> <li>Returns the current weather data</li> <li>Returns the weather data for the next 5 days</li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.openWeatherMap/#example-usage","text":"<p>This workflow allows you to get the current weather data for a city. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - OpenWeatherMap</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.openWeatherMap/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.openWeatherMap/#2-openweathermap-node","text":"<ol> <li>First of all, you'll have to enter credentials for the OpenWeatherMap node. You can find out how to do that here.</li> <li>Enter the name of the city in the City field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>","title":"2. OpenWeatherMap node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.orbit/","text":"<p>Orbit is a platform for managing and growing communities.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Orbit"},{"location":"workflow/integrations/nodes/workflow-nodes-base.orbit/#basic-operations","text":"<ul> <li>Activity<ul> <li>Create an activity for a member</li> <li>Get all activities</li> </ul> </li> <li>Member<ul> <li>Delete a member</li> <li>Get a member</li> <li>Get all members in a workspace</li> <li>Lookup a member by identity</li> <li>Update a member</li> <li>Create/Update a member</li> </ul> </li> <li>Note<ul> <li>Create a note</li> <li>Get all notes for a member</li> <li>Update a note</li> </ul> </li> <li>Post<ul> <li>Create a post</li> <li>Get all posts</li> <li>Delete a post</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.orbit/#example-usage","text":"<p>This workflow allows you to create a new member and update their information in Orbit using the Orbit node. It also allows you to create a note and a post for the new member in Orbit. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Start - Orbit</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.orbit/#1-start-node","text":"<p>The Start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.orbit/#2-orbit-node-upsert-member","text":"<p>This node will create a new member in a workspace in Orbit. We will use the GitHub identity to create a new member.</p> <ol> <li>First of all, you'll have to enter credentials for the Orbit node. You can find out how to do that here.</li> <li>Select 'Upsert' from the Operation dropdown list.</li> <li>Select the workspace where you want to create a new member from the Workspace dropdown list.</li> <li>Click on the Add Identity button.</li> <li>Select 'GitHub' from the Source dropdown list.</li> <li>Select 'Username' from the Search By dropdown list.</li> <li>Enter the GitHub username of the member in the Username field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node creates a new member in a workspace in Orbit using the GitHub identity.</p> <p></p>","title":"2. Orbit node (upsert: member)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.orbit/#3-orbit1-node-update-member","text":"<p>This node will update the tags of the member that we created in the previous node.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Update' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Workspace field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Orbit &gt; Parameters &gt; workspaceId. You can also add the following expression: <code>{{$node[\"Orbit\"].parameter[\"workspaceId\"]}}</code>.</li> <li>Click on the gears icon next to the Member ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Orbit &gt; Output Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$node[\"Orbit\"].json[\"id\"]}}</code>.</li> <li>Click on the Add Field button and select 'Tags to Add'.</li> <li>Enter the tags in the Tags to Add field. You can add multiple tags by separating them with a comma.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node updates the information of the new member that we created in the previous node. The node adds the tags <code>n8nConf</code> and <code>MLH</code> to the new member.</p> <p></p>","title":"3. Orbit1 node (update: member)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.orbit/#4-orbit2-node-create-note","text":"<p>This node will create a note for the member that we created using the Orbit node.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Note' from the Resource dropdown list.</li> <li>Click on the gears icon next to the Workspace field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Orbit &gt; Parameters &gt; workspaceId. You can also add the following expression: <code>{{$node[\"Orbit\"].parameter[\"workspaceId\"]}}</code>.</li> <li>Click on the gears icon next to the Member ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Orbit &gt; Output Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$node[\"Orbit\"].json[\"id\"]}}</code>.</li> <li>Enter a note in the Note field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node creates a note for the member that we created using the Orbit node.</p> <p></p>","title":"4. Orbit2 node (create: note)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.orbit/#5-orbit3-node-create-post","text":"<p>This node will create a post for the member that we created using the Orbit node.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Post' from the Resource dropdown list.</li> <li>Click on the gears icon next to the Workspace field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Orbit &gt; Parameters &gt; workspaceId. You can also add the following expression: <code>{{$node[\"Orbit\"].parameter[\"workspaceId\"]}}</code>.</li> <li>Click on the gears icon next to the Member ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Orbit &gt; Output Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$node[\"Orbit\"].json[\"id\"]}}</code>.</li> <li>Enter a URL for the post in the URL field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node creates a post for the member that we created using the Orbit node.</p> <p></p>","title":"5. Orbit3 node (create: post)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.oura/","text":"<p>Oura is a wellness ring and app that helps you keep track of your activities and sleep.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Oura"},{"location":"workflow/integrations/nodes/workflow-nodes-base.oura/#basic-operations","text":"<ul> <li>Profile<ul> <li>Get the user's personal information.</li> </ul> </li> <li>Summary<ul> <li>Get the user's activity summary.</li> <li>Get the user's readiness summary.</li> <li>Get the user's sleep summary</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.oura/#example-usage","text":"<p>This workflow allows you to get activity summary from Oura and store the output in Airtable. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Cron - Oura - Set - Airtable</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.oura/#1-cron-node","text":"<p>The Cron node will trigger the workflow every Sunday at 9 AM.</p> <ol> <li>Click on Add Cron Time.</li> <li>Select 'Every Week' from the Mode dropdown list.</li> <li>Enter <code>9</code> in the Hour field.</li> <li>Select 'Sunday' from the Weekday dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p></p>","title":"1. Cron node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.oura/#2-oura-node-getactivity-summary","text":"<p>This node will return the activity summary of a week.</p> <ol> <li>First of all, you'll have to enter credentials for the Oura node. You can find out how to do that here.</li> <li>Select 'Get Activity Summary' from the Operation dropdown list.</li> <li>Toggle Return All to <code>true</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns the activity summary.</p> <p></p>","title":"2. Oura node (getActivity: summary)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.oura/#3-set-node","text":"<p>We will use the Set node to ensure that only the data that we set in this node gets passed on to the next nodes in the workflow.</p> <ol> <li>Click on Add Value and select 'String' from the dropdown list.</li> <li>Enter <code>Day</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; summary_date. You can also add the following expression: <code>{{$json[\"summary_date\"]}}</code>.</li> <li>Click on Add Value and select 'String' from the dropdown list.</li> <li>Enter <code>Steps</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; steps. You can also add the following expression: <code>{{$json[\"steps\"]}}</code>.</li> <li>Click on Add Value and select 'String' from the dropdown list.</li> <li>Enter <code>Activity Score</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; score. You can also add the following expression: <code>{{$json[\"score\"]}}</code>.</li> <li>Toggle Keep Only Set to <code>true</code>. We set this option to true to ensure that only the data that we have set in this node get passed on to the next nodes in the workflow.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node uses the data from the previous node and returns the data that we set for the workflow.</p> <p></p>","title":"3. Set node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.oura/#4-airtable-node-append","text":"<p>This node will append the data that we set in the previous node to a table. Create a table like this in your Airtable base.</p> <ol> <li>First of all, you'll have to enter credentials for the Airtable node. You can find out how to do that here.</li> <li>Select 'Append' from the Operation dropdown list.</li> <li>Enter the Base ID in the Base ID field. For obtaining the Base ID, head over to their API page and select the correct base. You\u2019ll find the Base ID there.</li> <li>Enter the name of your table in the Table field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node appends the data that we had set in the previous node.</p> <p></p>  <p> Activate workflow for production</p> <p>This example workflow uses the Cron node, which is a Trigger node. You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Cron node.</p>","title":"4. Airtable node (Append)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.paddle/","text":"<p>Paddle is an all-in-one SaaS Commerce platform for software and SaaS companies to run and grow their business.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Paddle"},{"location":"workflow/integrations/nodes/workflow-nodes-base.paddle/#basic-operations","text":"<ul> <li>Coupon<ul> <li>Create a coupon.</li> <li>Get all coupons.</li> <li>Update a coupon.</li> </ul> </li> <li>Payment<ul> <li>Get all payment.</li> <li>Reschedule payment.</li> </ul> </li> <li>Plan<ul> <li>Get a plan.</li> <li>Get all plans.</li> </ul> </li> <li>Product<ul> <li>Get all products.</li> </ul> </li> <li>User<ul> <li>Get all users</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.paddle/#example-usage","text":"<p>This workflow allows you to create a coupon on Paddle. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Start - Paddle</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.paddle/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.paddle/#2-paddle-node-create-coupon","text":"<ol> <li>First of all, you'll have to enter credentials for the Paddle node. You can find out how to do that here.</li> <li>Enter the discount amount in the Discount Amount field.</li> <li>Click on the Add Field button and select 'Coupon Code' from the dropdown list.</li> <li>Enter the coupon code in the Coupon Code field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p></p>","title":"2. Paddle node (create: coupon)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.pagerDuty/","text":"<p>PagerDuty is a cloud computing company that produces a SaaS incident response platform for IT departments.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"PagerDuty"},{"location":"workflow/integrations/nodes/workflow-nodes-base.pagerDuty/#basic-operations","text":"<ul> <li>Incident<ul> <li>Create an incident</li> <li>Get an incident</li> <li>Get all incidents</li> <li>Update an incident</li> </ul> </li> <li>Incident Note<ul> <li>Create an incident note</li> <li>Get all incident's notes</li> </ul> </li> <li>Log Entry<ul> <li>Get a log entry</li> <li>Get all log entries</li> </ul> </li> <li>User<ul> <li>Get a user</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.pagerDuty/#example-usage","text":"<p>This workflow allows you to create, update, and get an incident on PagerDuty. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Start - PagerDuty</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.pagerDuty/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.pagerDuty/#2-pagerduty-node-create-incident","text":"<ol> <li>First of all, you'll have to enter credentials for the PagerDuty node. You can find out how to do that here.</li> <li>Enter the title of the incident in the Title field.</li> <li>Select the Service ID from the dropdown list.</li> <li>Enter your email in the Email field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p></p>","title":"2. PagerDuty node (create: incident)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.pagerDuty/#3-pagerduty1-node-update-incident","text":"<ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Update' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Incident ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; PagerDuty &gt; Output Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$node[\"PagerDuty\"].json[\"id\"]}}</code>.</li> <li>Click on the gears icon next to the Email field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; PagerDuty &gt; Parameters &gt; email. You can also add the following expression: <code>{{$node[\"PagerDuty\"].parameter[\"email\"]}}</code>.</li> <li>Click on the Add Field button and click on Title.</li> <li>Enter the name of the updated title in the Title field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p></p>","title":"3. PagerDuty1 node (update: incident)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.pagerDuty/#4-pagerduty2-node-get-incident","text":"<ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Get' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Incident ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; PagerDuty &gt; Output Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$node[\"PagerDuty\"].json[\"id\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p></p>","title":"4. PagerDuty2 node (get: incident)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.payPal/","text":"<p>PayPal is a digital payment service that supports online funds transfers and that customers can use when shopping online.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"PayPal"},{"location":"workflow/integrations/nodes/workflow-nodes-base.payPal/#basic-operations","text":"<ul> <li>Payout<ul> <li>Create a batch payout</li> <li>Show batch payout details</li> </ul> </li> <li>Payout Item<ul> <li>Cancels an unclaimed payout item</li> <li>Show payout item details</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.payPal/#example-usage","text":"<p>This workflow shows you how to create a PayPal batch payout. You can also find the workflow on this website. This example usage workflow uses the following two nodes. - Start - PayPal</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.payPal/#1-start-node","text":"<p>The Start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.payPal/#2-paypal-node","text":"<ol> <li>First of all, you'll have to enter credentials for the PayPal node. You can find out how to do that here.</li> <li>Enter an ID in the Sender Batch ID field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>","title":"2. PayPal node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.peekalink/","text":"<p>Peekalink is an API that allows developers to preview links on the web.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Peekalink"},{"location":"workflow/integrations/nodes/workflow-nodes-base.peekalink/#basic-operations","text":"<ul> <li>Check whether preview for a given link is available</li> <li>Return the preview for a link</li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.peekalink/#example-usage","text":"<p>This workflow allows you to check if preview for a link is available and return the link preview. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Start - Peekalink - IF - No Operation, do nothing</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.peekalink/#1-start-node","text":"<p>The Start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.peekalink/#2-peekalink-node-create-room","text":"<p>This node will check whether a preview for the specified link is available.</p> <ol> <li>First of all, you'll have to enter credentials for the Peekalink node. You can find out how to do that here.</li> <li>Select 'Is available' from the Operation dropdown list.</li> <li>Enter a URL in the URL field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns information about whether a preview for the specified link is available.</p> <p></p>","title":"2. Peekalink node (create: room)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.peekalink/#3-if-node","text":"<p>This node will check the response from the previous node. If the previous node returned <code>true</code>, the IF node will also return <code>true</code>, otherwise the IF node will return <code>false</code>.</p> <ol> <li>Click on Add Condition and select 'Boolean'.</li> <li>Click on the gears icon next to the Value 1 field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; isAvailable. You can also add the following expression: <code>{{$json[\"isAvailable\"]}}</code>.</li> <li>Toggle Value 2 to <code>true</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns the data from the previous node for the <code>true</code> branch.</p> <p></p>","title":"3. IF node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.peekalink/#4-peekalink-node-preview","text":"<p>This node will return the preview of the URL that you specified in the Peekalink node.</p> <ol> <li>Connect the node to the 'true' output of the IF node</li> <li>Select the credentials that you entered in the previous Peekalink node.</li> <li>Click on the gears icon next to the URL field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Peekalink &gt; Parameters &gt; url. You can also add the following expression: <code>{{$node[\"Peekalink\"].parameter[\"url\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns the preview of the URL that you specified in the Peekalink node.</p> <p></p>","title":"4. Peekalink node (preview)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.peekalink/#5-noop-node","text":"<p>Adding this node here is optional, as the absence of this node won't make a difference to the functioning of the workflow. We've added this as it can sometimes help others with a better understanding of the workflow, visually.</p> <ol> <li>Create a NoOp node connected to the 'false' output of the IF node.</li> <li>Click on Execute Node to run the node.</li> </ol> <p></p>","title":"5. NoOp node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.phantombuster/","text":"<p>Phantombuster is a scraping platform that allows chain actions and data extraction on the web to generate business leads, marketing audiences, and overall growth.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Phantombuster"},{"location":"workflow/integrations/nodes/workflow-nodes-base.phantombuster/#basic-operations","text":"<ul> <li>Agent<ul> <li>Delete an agent by ID.</li> <li>Get an agent by ID.</li> <li>Get all agents of the current user's organization.</li> <li>Get the output of the most recent container of an agent.</li> <li>Add an agent to the launch queue.</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.phantombuster/#example-usage","text":"<p>This workflow allows you to store the output of a phantom in Airtable. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Start - Phantombuster - Set - Airtable</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.phantombuster/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.phantombuster/#2-phantombuster-node-getoutput-agent","text":"<p>Create and launch the LinkedIn Profile Scraper in your Phantombuster account. This node will return the output of this phantom.</p> <ol> <li>First of all, you'll have to enter credentials for the Phantombuster node. You can find out how to do that here.</li> <li>Select 'Get Output' from the Operation dropdown list.</li> <li>Select a phantom from the Agent dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns the output from the LinkedIn Profile Scraper phantom.</p> <p></p>","title":"2. Phantombuster node (getOutput: agent)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.phantombuster/#3-set-node","text":"<p>We will use the Set node to ensure that only the data that we set in this node gets passed on to the next nodes in the workflow.</p> <ol> <li>Click on Add Value and select 'String' from the dropdown list.</li> <li>Enter <code>Name</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Phantombuster &gt; Output Data &gt; JSON &gt; general &gt; fullName. You can also add the following expression: <code>{{$node[\"Phantombuster\"].json[\"general\"][\"fullName\"]}}</code>.</li> <li>Click on Add Value and select 'String' from the dropdown list.</li> <li>Enter <code>Email</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Phantombuster &gt; Output Data &gt; JSON &gt; details &gt; mail. You can also add the following expression: <code>{{$node[\"Phantombuster\"].json[\"details\"][\"mail\"]}}</code>.</li> <li>Click on Add Value and select 'String' from the dropdown list.</li> <li>Enter <code>Company</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Phantombuster &gt; Output Data &gt; JSON &gt; jobs&gt; [Item: 0] &gt; companyName. You can also add the following expression: <code>{{$node[\"Phantombuster\"].json[\"jobs\"][0][\"companyName\"]}}</code>.</li> <li>Toggle Keep Only Set to <code>true</code>. We set this option to true to ensure that only the data that we have set in this node get passed on to the next nodes in the workflow.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node uses the data from the previous node and returns the data that we set for the workflow.</p> <p></p>","title":"3. Set node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.phantombuster/#4-airtable-node-append","text":"<p>This node will append the data that we set in the previous node to a table. Create a table like this in your Airtable base.</p> <ol> <li>First of all, you'll have to enter credentials for the Airtable node. You can find out how to do that here.</li> <li>Select 'Append' from the Operation dropdown list.</li> <li>Enter the Base ID in the Base ID field. For obtaining the Base ID, head over to their API page and select the correct base. You\u2019ll find the Base ID there.</li> <li>Enter the name of your table in the Table field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node appends the data that we had set in the previous node.</p> <p></p>","title":"4. Airtable node (Append)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.philipsHue/","text":"<p>Philips Hue is a line of smart color-changing LED lamps and bulbs that can be controlled wirelessly.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Philips Hue"},{"location":"workflow/integrations/nodes/workflow-nodes-base.philipsHue/#basic-operations","text":"<ul> <li>Light<ul> <li>Delete a light</li> <li>Retrieve a light</li> <li>Retrieve all lights</li> <li>Update a light</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.philipsHue/#example-usage","text":"<p>This workflow allows you to turn on a light and set its brightness using the Philips Hue node. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Start - Philips Hue</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.philipsHue/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.philipsHue/#2-philips-hue-node-update-light","text":"<ol> <li>First of all, you'll have to enter credentials for the Philips Hue node. You can find out how to do that here.</li> <li>Enter the light id in the Light ID field.</li> <li>Click on Add Field and select 'Brightness' from the dropdown list.</li> <li>Enter a value between 1 and 254 for the brightness in the Brightness field.</li> <li>Click on Execute Node to run the node.</li> </ol>","title":"2. Philips Hue node (update: light)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.pipedrive/","tags":["Workflow\u00b2","Pipedrive","Basic Operations","Example Usage"],"text":"<p>Pipedrive is a cloud-based sales software company that aims to improve the productivity of businesses through the use of their software.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Pipedrive"},{"location":"workflow/integrations/nodes/workflow-nodes-base.pipedrive/#basic-operations","tags":["Workflow\u00b2","Pipedrive","Basic Operations","Example Usage"],"text":"<ul> <li>Activity<ul> <li>Create an activity</li> <li>Delete an activity</li> <li>Get data of an activity</li> <li>Get data of all activities</li> <li>Update an activity</li> </ul> </li> <li>Deal<ul> <li>Create a deal</li> <li>Delete a deal</li> <li>Duplicate a deal</li> <li>Get data of a deal</li> <li>Get data of all deals</li> <li>Search a deal</li> <li>Update a deal</li> </ul> </li> <li>Deal Activity<ul> <li>Get all activities of a deal</li> </ul> </li> <li>Deal Product<ul> <li>Add a product to a deal</li> <li>Get all products in a deal</li> <li>Remove a product from a deal</li> <li>Update a product in a deal</li> </ul> </li> <li>File<ul> <li>Create a file</li> <li>Delete a file</li> <li>Download a file</li> <li>Get data of a file</li> </ul> </li> <li>Lead<ul> <li>Create a lead</li> <li>Delete a lead</li> <li>Get data of a lead</li> <li>Get data of all leads</li> <li>Update a lead</li> </ul> </li> <li>Note<ul> <li>Create a note</li> <li>Delete a note</li> <li>Get data of a note</li> <li>Get data of all notes</li> <li>Update a note</li> </ul> </li> <li>Organization<ul> <li>Create an organization</li> <li>Delete an organization</li> <li>Get data of an organization</li> <li>Get data of all organizations</li> <li>Update an organization</li> <li>Search organizations</li> </ul> </li> <li>Person<ul> <li>Create a person</li> <li>Delete a person</li> <li>Get data of a person</li> <li>Get data of all persons</li> <li>Search all persons</li> <li>Update a person</li> </ul> </li> <li>Product<ul> <li>Get data of all products</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.pipedrive/#example-usage","tags":["Workflow\u00b2","Pipedrive","Basic Operations","Example Usage"],"text":"<p>This workflow allows you to create an deal in Pipedrive. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - Pipedrive</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.pipedrive/#1-start-node","tags":["Workflow\u00b2","Pipedrive","Basic Operations","Example Usage"],"text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.pipedrive/#2-pipedrive-node","tags":["Workflow\u00b2","Pipedrive","Basic Operations","Example Usage"],"text":"<ol> <li>First of all, you'll have to enter credentials for the Pipedrive node. You can find out how to do that here.</li> <li>Enter the title of the deal in the Title field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>","title":"2. Pipedrive node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.plivo/","text":"<p>Plivo is a cloud communications platform as a service company that allows you to add SMS, MMS, and Voice calling functionality within your apps programmatically.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Plivo"},{"location":"workflow/integrations/nodes/workflow-nodes-base.plivo/#basic-operations","text":"<ul> <li>Call<ul> <li>Make a voice call</li> </ul> </li> <li>MMS<ul> <li>Send an MMS message (US/Canada only)</li> </ul> </li> <li>SMS<ul> <li>Send an SMS message.</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.plivo/#example-usage","text":"<p>This workflow allows you to send daily weather updates via an SMS message using the Plivo node. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Cron - OpenWeatherMap - Plivo</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.plivo/#1-cron-node","text":"<p>The Cron node will trigger the workflow daily at 9 AM.</p> <ol> <li>Click on Add Cron Time.</li> <li>Set hours to 9 in the Hour field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the Cron node is configured to trigger the workflow every day at 9 AM.</p> <p></p>","title":"1. Cron node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.plivo/#2-openweathermap-node-current-weather","text":"<p>This node will return data about the current weather in Berlin. To get the weather updates for your city, you can enter the name of your city instead.</p> <ol> <li>First of all, you'll have to enter credentials for the OpenWeatherMap node. You can find out how to do that here.</li> <li>Enter <code>berlin</code> in the City field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns data about the current weather in Berlin.</p> <p></p>","title":"2. OpenWeatherMap node (Current Weather)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.plivo/#3-plivo-node-send-sms","text":"<p>This node will send an SMS with the weather update, which was sent by the previous node.</p> <ol> <li>First of all, you'll have to enter credentials for the Plivo node. You can find out how to do that here.</li> <li>Enter a Plivo phone number in the From field.</li> <li>Enter the receiver's phone number in the To field.</li> <li> <p>Click on the gears icon next to the Message field and click on Add Expression.</p> </li> <li> <p>Enter the following message in the Expression field: <code>Hey! The temperature outside is {{$node[\"OpenWeatherMap\"].json[\"main\"][\"temp\"]}}\u00b0C.</code>.</p> </li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node sends an SMS to the phone number that we specified with the weather update.</p> <p></p>  <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Cron node.</p>","title":"3. Plivo node (send: sms)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.postHog/","text":"<p>PostHog is an open-source product analytics platform. It provides tools to improve your product, such as session recording, heatmaps, and feature flags.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"PostHog"},{"location":"workflow/integrations/nodes/workflow-nodes-base.postHog/#basic-operations","text":"<ul> <li>Alias<ul> <li>Create an alias</li> </ul> </li> <li>Event<ul> <li>Create an event</li> </ul> </li> <li>Identity<ul> <li>Create</li> </ul> </li> <li>Track<ul> <li>Track a page</li> <li>Track a screen</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.postHog/#example-usage","text":"<p>This workflow allows you to create an event in PostHog when a request is made to a webhook URL. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Webhook - PostHog</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.postHog/#1-webhook-node","text":"<p>This node will trigger the workflow. We will make a GET request to the test webhook URL and pass on a query parameter called  <code>event</code>.</p> <ol> <li>Click on Webhook URLs and select the 'Test' tab.</li> <li>Copy the displayed URL. We will make a GET request to this URL later on.</li> <li>Save the workflow to register the webhook.</li> <li>Click on Execute Node to run the node.</li> <li>In a new browser tab, paste the URL that you copied in the previous step and append <code>?event=login</code> to it. Your URL should look similar to the following URL:<code>https://your-n8n.url/webhook/path?event=login</code>. Here, we are passing a query parameter called <code>event</code> and assigning the value <code>login</code> to it.</li> <li>Press Enter (or Return) to make a request to the test webhook URL.</li> </ol> <p>In the screenshot below, you will notice that the node triggers the workflow and receives a query parameter. We will use the value of the query parameter in the next node in the workflow.</p> <p></p>","title":"1. Webhook node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.postHog/#2-posthog-node-createcustomer","text":"<p>This node will create a new event in PostHog.</p> <ol> <li>First of all, you'll have to enter credentials for the PostHog node. You can find out how to do that here.</li> <li> <p>Click on the gears icon next to the Event field and click on Add Expression.</p> </li> <li> <p>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; query &gt; event. You can also add the following expression: <code>{{$json[\"query\"][\"event\"]}}</code>.</p> </li> <li> <p>Enter a distinct id in the Distinct ID field.</p> </li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node creates a new event in PostHog.</p> <p></p>  <p> Activate workflow for production</p> <p>This example workflow uses the Webhook node, which is a Trigger node. You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered every time a GET request is sent to the Production webhook URL.</p>","title":"2. PostHog node (create:customer)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.postgres/","text":"<p>PostgreSQL, also known as Postgres, is a free and open-source relational database management system emphasizing extensibility and SQL compliance.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Postgres"},{"location":"workflow/integrations/nodes/workflow-nodes-base.postgres/#basic-operations","text":"<ul> <li>Execute an SQL query</li> <li>Insert rows in database</li> <li>Update rows in database</li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.postgres/#example-usage","text":"<p>This workflow allows you to run an SQL query on a Postgres instance. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Start - Set - Postgres</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.postgres/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.postgres/#2-postgres-node-execute-query","text":"<ol> <li>First of all, you'll have to enter credentials for the Postgres node. You can find out how to do that here.</li> <li>Select 'Execute Query' from the Operation dropdown list.</li> <li>Enter the following SQL query in the Query field: <code>CREATE TABLE test (id INT, name VARCHAR(255), PRIMARY KEY (id));</code>.</li> <li>Click on the Node tab and toggle Always Output Data to true.</li> <li>Click on Execute Node to run the node.</li> </ol> <p></p>","title":"2. Postgres node (Execute Query)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.postgres/#3-set-node","text":"<ol> <li>Click on the Add Value button and select 'Number' from the dropdown list.</li> <li>Enter <code>id</code> in the Name field.</li> <li>Click on the Add Value button and select 'String' from the dropdown list.</li> <li>Enter <code>name</code> in the Name field.</li> <li>Enter the value for the name in the Value field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p></p>","title":"3. Set node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.postgres/#4-postgres1-node-insert","text":"<ol> <li>Select the credentials that you entered in the previous Postgres node.</li> <li>Enter <code>test</code> in the Table field.</li> <li>Enter <code>id, name</code> in the Columns field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p></p>","title":"4. Postgres1 node (Insert)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.postgres/#faqs","text":"","title":"FAQs"},{"location":"workflow/integrations/nodes/workflow-nodes-base.postgres/#how-to-specify-the-data-type-of-a-column","text":"<p>To specify the data type of a column, append the column name with <code>:type</code>, where <code>type</code> is the data type of that column. For example, if you want to specify the type <code>int</code> for the column id and type <code>text</code> for the column name, you can use the following snippet in the Columns field: <code>id:init,name:text</code>.</p>","title":"How to specify the data type of a column?"},{"location":"workflow/integrations/nodes/workflow-nodes-base.profitWell/","text":"<p>ProfitWell provides real-time subscription financial metrics.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"ProfitWell"},{"location":"workflow/integrations/nodes/workflow-nodes-base.profitWell/#basic-operations","text":"<ul> <li>Company<ul> <li>Get your companys ProfitWell account settings</li> </ul> </li> <li>Metric<ul> <li>Retrieve financial metric broken down by day for either the current month or the last</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.profitWell/#example-usage","text":"<p>This workflow allows you to send financial metrics monthly to a Mattermost channel. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Cron - ProfitWell - Mattermost</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.profitWell/#1-cron-node","text":"<p>The Cron node will trigger the workflow on the first day of every month at 9 AM.</p> <ol> <li>Click on Add Cron Time.</li> <li>Select 'Every Month' from the Mode dropdown list.</li> <li>Set hours to 9 in the Hour field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the Cron node is configured to trigger the workflow on the first day of every month at 9 AM.</p> <p></p>","title":"1. Cron node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.profitWell/#2-profitwell-node-get-metric","text":"<p>This node will return monthly financial metrics.</p> <ol> <li>First of all, you'll have to enter credentials for the ProfitWell node. You can find out how to do that here.</li> <li>Select 'Monthly' from the Type dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns montly financial metrics.</p> <p></p>","title":"2. ProfitWell node (get: metric)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.profitWell/#3-mattermost-node-post-message","text":"<p>This node will send a message with the metrics that we get from the previous node in the 'Monthly Metrics' channel in Mattermost. If you have a different channel, use that instead.</p> <ol> <li> <p>First of all, you'll have to enter credentials for the Mattermost node. You can find out how to do that here.</p> </li> <li> <p>Select a channel from the Channel ID dropdown list.</p> </li> <li>Click on the gears icon next to the Message field and click on Add Expression.</li> <li>Enter the following message in the Expression field: <pre><code>Active Customers: {{$node[\"ProfitWell\"].json[\"active_customers\"]}}\nTrailing Customers: {{$node[\"ProfitWell\"].json[\"active_trialing_customers\"]}}\nNew Customers: {{$node[\"ProfitWell\"].json[\"new_customers\"]}}\nGrowth Rate: {{$node[\"ProfitWell\"].json[\"growth_rate\"]}}\nRecurring Revenue: {{$node[\"ProfitWell\"].json[\"recurring_revenue\"]}}\n</code></pre> </li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node sends a message with the metrics that we get from the previous node.</p> <p></p>  <p> Activate workflow for production</p> <p>This example workflow uses the Cron node, which is a Trigger node. You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Cron node.</p>","title":"3. Mattermost node (post: message)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.pushbullet/","text":"<p>Pushbullet connects your devices and allows you to see your phone's notifications on your computer, transfer links, and files between devices.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Pushbullet"},{"location":"workflow/integrations/nodes/workflow-nodes-base.pushbullet/#basic-operations","text":"<ul> <li>Push<ul> <li>Create a push</li> <li>Delete a push</li> <li>Get all pushes</li> <li>Update a push</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.pushbullet/#example-usage","text":"<p>This workflow allows you to send daily weather updates via a push notification using the Pushbullet node. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Cron - OpenWeatherMap - Pushbullet</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.pushbullet/#1-cron-node","text":"<p>The Cron node will trigger the workflow daily at 9 AM.</p> <ol> <li>Click on Add Cron Time.</li> <li>Set hours to 9 in the Hour field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the Cron node is configured to trigger the workflow every day at 9 AM.</p> <p></p>","title":"1. Cron node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.pushbullet/#2-openweathermap-node-current-weather","text":"<p>This node will return data about the current weather in Berlin. To get the weather updates for your city, you can enter the name of your city instead.</p> <ol> <li>First of all, you'll have to enter credentials for the OpenWeatherMap node. You can find out how to do that here.</li> <li>Enter <code>berlin</code> in the City field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns data about the current weather in Berlin.</p> <p></p>","title":"2. OpenWeatherMap node (Current Weather)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.pushbullet/#3-pushbullet-node-create-push","text":"<p>This node will send a push notification with the weather update to the default device. If you want to send it to a specific device, select 'Device ID' from the Target dropdown list and enter the device ID in the Value field.</p> <ol> <li>First of all, you'll have to enter credentials for the Pushbullet node. You can find out how to do that here.</li> <li>Enter <code>Today's Weather Update</code> in the Title field.</li> <li> <p>Click on the gears icon next to the Body field and click on Add Expression.</p> </li> <li> <p>Enter the following message in the Expression field: <code>Hey! The temperature outside is {{$node[\"OpenWeatherMap\"].json[\"main\"][\"temp\"]}}\u00b0C.</code>.</p> </li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node sends a push notification to the default device with the weather update.</p> <p></p>","title":"3. Pushbullet node (create: push)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.pushcut/","text":"<p>Pushcut is an app for iOS that lets you create smart notifications to kick off shortcuts, URLs, and online automation.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Pushcut"},{"location":"workflow/integrations/nodes/workflow-nodes-base.pushcut/#basic-operations","text":"<ul> <li>Notification<ul> <li>Send a notification</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.pushcut/#example-usage","text":"<p>This workflow allows you to send daily weather updates via a push notification using the Pushcut node. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Cron - OpenWeatherMap - Pushcut</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.pushcut/#1-cron-node","text":"<p>The Cron node will trigger the workflow daily at 9 AM.</p> <ol> <li>Click on Add Cron Time.</li> <li>Set hours to 9 in the Hour field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the Cron node is configured to trigger the workflow every day at 9 AM.</p> <p></p>","title":"1. Cron node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.pushcut/#2-openweathermap-node-current-weather","text":"<p>This node will return data about the current weather in Berlin. To get the weather updates for your city, you can enter the name of your city instead.</p> <ol> <li>First of all, you'll have to enter credentials for the OpenWeatherMap node. You can find out how to do that here.</li> <li>Enter <code>berlin</code> in the City field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns data about the current weather in Berlin.</p> <p></p>","title":"2. OpenWeatherMap node (Current Weather)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.pushcut/#3-pushcut-node-send-notification","text":"<p>This node will send a push notification with the weather update, which was sent by the previous node.</p> <ol> <li>First of all, you'll have to enter credentials for the Pushcut node. You can find out how to do that here.</li> <li>Select a notification from the Notification Name dropdown list.</li> <li>Click on Add Field and select 'Title' from the dropdown list.</li> <li>Enter <code>Today's Weather Update</code> in the Title field.</li> <li>Click on Add Field and select 'Text' from the dropdown list.</li> <li> <p>Click on the gears icon next to the Text field and click on Add Expression.</p> </li> <li> <p>Enter the following message in the Expression field: <code>Hey! The temperature outside is {{$node[\"OpenWeatherMap\"].json[\"main\"][\"temp\"]}}\u00b0C.</code>.</p> </li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node sends a push notification to your device with the weather update.</p> <p></p>  <p> Activate workflow for production</p> <p>This example workflow uses the Cron node, which is a Trigger node. You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Cron node.</p>","title":"3. Pushcut node (send: notification)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.pushover/","text":"<p>Pushover is a simple push notification service that integrates easily into web apps, network monitors, shell scripts, servers, and anything else that needs to send alerts to your Android, iPhone, iPad, and Desktop.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Pushover"},{"location":"workflow/integrations/nodes/workflow-nodes-base.pushover/#basic-operations","text":"<ul> <li>Message<ul> <li>Push</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.pushover/#example-usage","text":"<p>This workflow allows you to send daily weather updates via a push notification using the Pushover node. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Cron - OpenWeatherMap - Pushover</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.pushover/#1-cron-node","text":"<p>The Cron node will trigger the workflow daily at 9 AM.</p> <ol> <li>Click on Add Cron Time.</li> <li>Set hours to 9 in the Hour field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the Cron node is configured to trigger the workflow every day at 9 AM.</p> <p></p>","title":"1. Cron node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.pushover/#2-openweathermap-node-current-weather","text":"<p>This node will return data about the current weather in Berlin. To get the weather updates for your city, you can enter the name of your city instead.</p> <ol> <li>First of all, you'll have to enter credentials for the OpenWeatherMap node. You can find out how to do that here.</li> <li>Enter <code>berlin</code> in the City field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns data about the current weather in Berlin.</p> <p></p>","title":"2. OpenWeatherMap node (Current Weather)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.pushover/#3-pushover-node-push-message","text":"<p>This node will send a push notification with the weather update, which was sent by the previous node.</p> <ol> <li>First of all, you'll have to enter credentials for the Pushover node. You can find out how to do that here.</li> <li>Enter a user key in the User Key field. You can obtain your user key from the Pushover Dashboard.</li> <li> <p>Click on the gears icon next to the Message field and click on Add Expression.</p> </li> <li> <p>Enter the following message in the Expression field: <code>Hey! The temperature outside is {{$node[\"OpenWeatherMap\"].json[\"main\"][\"temp\"]}}\u00b0C.</code>.</p> </li> <li>Select 'Normal Priority' from the Priority dropdown list. This will trigger sound, vibration, and display an alert according to the user's device settings.</li> <li>Click on Add Field and select 'Title' from the dropdown list.</li> <li>Enter <code>Today's Weather</code> in the Title field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node sends a push notification to a device with the weather update.</p> <p></p>","title":"3. Pushover node (push: message)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.questDb/","text":"<p>QuestDB is an open-source NewSQL relational database designed to process time-series data, faster. QuestDB\u2019s stack is engineered from scratch, zero-GC Java and dependency-free. It supports a a Java API, SQL via HTTP and the PostgreSQL wire protocol.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"QuestDB"},{"location":"workflow/integrations/nodes/workflow-nodes-base.questDb/#basic-operations","text":"<ul> <li>Executes a SQL query.</li> <li>Insert rows in database.</li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.questDb/#example-usage","text":"<p>This workflow allows you to create a table and insert data into it in QuestDB. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Start - Set - QuestDB</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.questDb/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.questDb/#2-questdb-node-execute-query","text":"<ol> <li>First of all, you'll have to enter credentials for the QuestDB node. You can find out how to do that here.</li> <li>Select 'Execute Query' from the Operation dropdown list.</li> <li>Enter the following SQL query in the Query field: <code>CREATE TABLE test (id INT, name STRING);</code>.</li> <li>Click on the Node tab and toggle Always Output Data to true.</li> <li>Click on Execute Node to run the node.</li> </ol> <p></p>","title":"2. QuestDB node (Execute Query)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.questDb/#3-set-node","text":"<ol> <li>Click on the Add Value button and select 'Number' from the dropdown list.</li> <li>Enter <code>id</code> in the Name field.</li> <li>Click on the Add Value button and select 'String' from the dropdown list.</li> <li>Enter <code>name</code> in the Name field.</li> <li>Enter the value for the name in the Value field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p></p>","title":"3. Set node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.questDb/#4-questdb1-node-insert","text":"<ol> <li>Select the credentials that you entered in the previous QuestDB node.</li> <li>Enter <code>test</code> in the Table field.</li> <li>Enter <code>id, name</code> in the Columns field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p></p>","title":"4. QuestDB1 node (Insert)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.questDb/#faqs","text":"","title":"FAQs"},{"location":"workflow/integrations/nodes/workflow-nodes-base.questDb/#how-to-specify-the-data-type-of-a-column","text":"<p>To specify the data type of a column, append the column name with <code>:type</code>, where <code>type</code> is the data type of that column. For example, if you want to specify the type <code>int</code> for the column id and type <code>text</code> for the column name, you can use the following snippet in the Columns field: <code>id:init,name:text</code>.</p>","title":"How to specify the data type of a column?"},{"location":"workflow/integrations/nodes/workflow-nodes-base.quickbase/","text":"<p>Quick Base is a low-code application development platform. It allows you to connect data, integrate your systems in real-time, and orchestrate automated workflows using simple business logic.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Quick Base"},{"location":"workflow/integrations/nodes/workflow-nodes-base.quickbase/#basic-operations","text":"<ul> <li>Field<ul> <li>Get all fields</li> </ul> </li> <li>File<ul> <li>Delete a file</li> <li>Download a file</li> </ul> </li> <li>Record<ul> <li>Create a record</li> <li>Delete a record</li> <li>Get all records</li> <li>Update a record</li> <li>Upsert a record</li> </ul> </li> <li>Report<ul> <li>Get a report</li> <li>Run a report</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.quickbase/#example-usage","text":"<p>This workflow allows you to create, update, and get all records in Quick Base. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Start - Set - Quick Base</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.quickbase/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.quickbase/#2-set-node","text":"<p>We will use the Set node to set the name and age for a new record.</p> <ol> <li>Click on Add Value and select 'String' from the dropdown list.</li> <li>Enter <code>name</code> in the Name field.</li> <li>Enter <code>n8n</code> in the Value field.</li> <li>Click on Add Value and select 'Number' from the dropdown list.</li> <li>Enter <code>age</code> in the Name field.</li> <li>Set the value to <code>8</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that node sets the value for name and age.</p> <p></p>","title":"2. Set node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.quickbase/#3-quick-base-node-create-record","text":"<p>This node will create a new record in a table.</p>","title":"3. Quick Base node (create: record)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.quickbase/#creating-a-quick-base-table","text":"<ol> <li>Create a new table with the fields <code>name</code> and <code>age</code>.</li> <li>Copy the string of characters located between <code>db/</code> and <code>?a=td</code> in your Quick Base URL. This string is the Table ID that we will use in the Quick Base node.</li> </ol>","title":"Creating a Quick Base table"},{"location":"workflow/integrations/nodes/workflow-nodes-base.quickbase/#configure-the-quick-base-node","text":"<ol> <li>First of all, you'll have to enter credentials for the Quick Base node. You can find out how to do that here.</li> <li>Paste the Table ID you copied in the previous step, in the Table ID field.</li> <li>Enter <code>name,age</code> in the Columns field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node creates a new record in Quick Base using the information from the previous node.</p> <p></p>","title":"Configure the Quick Base node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.quickbase/#4-set1-node","text":"<p>We will use the Set node to ensure that only the data that we set in this node gets passed on to the next nodes in the workflow. We will set the value of <code>age</code> and <code>Record ID#</code> in this node.</p> <ol> <li>Click on Add Value and select 'Number' from the dropdown list.</li> <li>Enter <code>age</code> in the Name field.</li> <li>Set the value to <code>10</code>.</li> <li>Click on Add Value and select 'Number' from the dropdown list.</li> <li>Enter <code>Record ID#</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Quick Base &gt; Output Data &gt; JSON &gt; Record ID#. You can also add the following expression: <code>{{$node[\"Quick Base\"].json[\"Record ID#\"]}}</code>.</li> <li>Toggle Keep Only Set to <code>true</code>. We set this option to true to ensure that only the data that we have set in this node get passed on to the next nodes in the workflow.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node sets the value of <code>age</code> and <code>Record ID#</code>. This value is passed to the next node in the workflow.</p> <p></p>","title":"4. Set1 node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.quickbase/#5-quick-base1-node-update-record","text":"<p>This node will update the age field with the new value that we set in the previous node.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Update' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Table ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Quick Base &gt; Parameters &gt; tableId. You can also add the following expression: <code>{{$node[\"Quick Base\"].parameter[\"tableId\"]}}</code>.</li> <li>Enter <code>age</code> in the Columns field. If you want to update a different column, enter that column name instead.</li> <li>Enter <code>Record ID#</code> in the Update Key field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node updates the age field with the new value that we set in the previous node.</p> <p></p>","title":"5. Quick Base1 node (update: record)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.quickbase/#6-quick-base2-node-getall-record","text":"<p>This node returns all the records from Quick Base.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Get All' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Table ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Quick Base &gt; Parameters &gt; tableId. You can also add the following expression: <code>{{$node[\"Quick Base\"].parameter[\"tableId\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns all the records from Quick Base.</p> <p></p>","title":"6. Quick Base2 node (getAll: record)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.quickbooks/","text":"<p>QuickBooks is an accounting software package developed by Intuit.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"QuickBooks"},{"location":"workflow/integrations/nodes/workflow-nodes-base.quickbooks/#basic-operations","text":"<ul> <li>Bill<ul> <li>Create</li> <li>Delete</li> <li>Get</li> <li>Get All</li> <li>Update</li> </ul> </li> <li>Customer<ul> <li>Create</li> <li>Get</li> <li>Get All</li> <li>Update</li> </ul> </li> <li>Employee<ul> <li>Create</li> <li>Get</li> <li>Get All</li> <li>Update</li> </ul> </li> <li>Estimate<ul> <li>Create</li> <li>Delete</li> <li>Get</li> <li>Get All</li> <li>Send</li> <li>Update</li> </ul> </li> <li>Invoice<ul> <li>Create</li> <li>Delete</li> <li>Get</li> <li>Get All</li> <li>Send</li> <li>Update</li> <li>Void</li> </ul> </li> <li>Item<ul> <li>Get</li> <li>Get All</li> </ul> </li> <li>Payment<ul> <li>Create</li> <li>Delete</li> <li>Get</li> <li>Get All</li> <li>Send</li> <li>Update</li> <li>Void</li> </ul> </li> <li>Purchase<ul> <li>Get</li> <li>Get All</li> </ul> </li> <li>Transaction<ul> <li>Get Report</li> </ul> </li> <li>Vendor<ul> <li>Create</li> <li>Get</li> <li>Get All</li> <li>Update</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.quickbooks/#example-usage","text":"<p>This workflow allows you to create a customer and an invoice, and send the invoice to the customer. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Start - QuickBooks</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.quickbooks/#1-start-node","text":"<p>The Start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.quickbooks/#2-quickbooks-node-createcustomer","text":"<p>This node will create a new customer in QuickBooks.</p> <ol> <li>First of all, you'll have to enter credentials for the QuickBooks node. You can find out how to do that here.</li> <li>Select 'Create' from the Operation dropdown list.</li> <li>Enter a display name in the Display Name field.</li> <li>Click on the Add Field button and select 'Primary Email Address'.</li> <li>Enter the email address of the customer in the Primary Email Address field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node creates a new customer.</p> <p></p>","title":"2. QuickBooks node (create:customer)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.quickbooks/#3-quickbooks1-node-createinvoice","text":"<p>This node will create an invoice for the customer that we created in the previous node.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Invoice' from the Resource dropdown list.</li> <li>Select 'Create' from the Operation dropdown list.</li> <li>Click on the gears icon next to the For Customer field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; Id. You can also add the following expression: <code>{{$json[\"Id\"]}}</code>.</li> <li>Click on the Add Item button.</li> <li>Select 'Item' from the Add Line Item Property dropdown list.</li> <li>Select an item from the Item dropdown list.</li> <li>Select 'Amount' from the Add Line Item Property dropdown list.</li> <li>Enter an amount in the Amount field.</li> <li>Select 'Detail Type' from the Add Line Item Property dropdown list.</li> <li>Select a type from the Detail Type dropdown list.</li> <li>Select 'Description' from the Add Line Item Property dropdown list.</li> <li>Enter a description in the Description field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node creates an invoice for the customer that we created in the previous node.</p> <p></p>","title":"3. QuickBooks1 node (create:invoice)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.quickbooks/#4-quickbooks2-node-sendinvoice","text":"<p>This node will send the invoice that we created in the previous node.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Invoice' from the Resource dropdown list.</li> <li>Select 'Send' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Invoice ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; Id. You can also add the following expression: <code>{{$json[\"Id\"]}}</code>.</li> <li>Enter the email address of the customer in the Email field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node sends the invoice to the customer.</p> <p></p>","title":"4. QuickBooks2 node (send:invoice)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.rabbitmq/","tags":["Workflow\u00b2","RabbitMQ","Cron","HTTP Request"],"text":"<p>RabbitMQ is an open-source message broker that accepts and forwards messages.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"RabbitMQ"},{"location":"workflow/integrations/nodes/workflow-nodes-base.rabbitmq/#example-usage","tags":["Workflow\u00b2","RabbitMQ","Cron","HTTP Request"],"text":"<p>This workflow allows you to send updates about the position of the ISS every minute to a queue using the RabbitMQ node. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Cron - HTTP Request - Set - RabbitMQ</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.rabbitmq/#1-cron-node","tags":["Workflow\u00b2","RabbitMQ","Cron","HTTP Request"],"text":"<p>The Cron node will trigger the workflow every minute.</p> <ol> <li>Click on Add Cron Time.</li> <li>Select 'Every Minute' from the Mode dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the Cron node is configured to trigger the workflow every minute.</p> <p></p>","title":"1. Cron node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.rabbitmq/#2-http-request-node-get","tags":["Workflow\u00b2","RabbitMQ","Cron","HTTP Request"],"text":"<p>This node will make a GET request to the API <code>https://api.wheretheiss.at/v1/satellites/25544/positions</code> to fetch the position of the ISS. This information gets passed on to the next node in the workflow.</p> <ol> <li>Enter <code>https://api.wheretheiss.at/v1/satellites/25544/positions</code> in the URL field.</li> <li>Click on the Add Parameter button in the Query Parameters section.</li> <li>Enter <code>timestamps</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Enter the following expression: <code>{{Date.now()}}</code>. This expression will return the current timestamp.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node makes a GET request to the API and returns the information about the location of the ISS.</p> <p></p>","title":"2. HTTP Request node (GET)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.rabbitmq/#3-set-node","tags":["Workflow\u00b2","RabbitMQ","Cron","HTTP Request"],"text":"<p>We will use the Set node to ensure that only the data that we set in this node gets passed on to the next nodes in the workflow.</p> <ol> <li>Click on Add Value and select 'String' from the dropdown list.</li> <li>Enter <code>Name</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; HTTP Request &gt; Output Data &gt; JSON &gt; 0 &gt; name. You can also add the following expression: <code>{{$node[\"HTTP Request\"].json[\"0\"][\"name\"]}}</code>.</li> <li>Click on Add Value and select 'String' from the dropdown list.</li> <li>Enter <code>Latitude</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; HTTP Request &gt; Output Data &gt; JSON &gt; 0 &gt; latitude. You can also add the following expression: <code>{{$node[\"HTTP Request\"].json[\"0\"][\"latitude\"]}}</code>.</li> <li>Click on Add Value and select 'String' from the dropdown list.</li> <li>Enter <code>Longitude</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; HTTP Request &gt; Output Data &gt; JSON &gt; 0 &gt; longitude. You can also add the following expression: <code>{{$node[\"HTTP Request\"].json[\"0\"][\"longitude\"]}}</code>.</li> <li>Click on Add Value and select 'String' from the dropdown list.</li> <li>Enter <code>Timestamp</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; HTTP Request &gt; Output Data &gt; JSON &gt; 0 &gt; timpestamp. You can also add the following expression: <code>{{$node[\"HTTP Request\"].json[\"0\"][\"timestamp\"]}}</code>.</li> <li>Toggle Keep Only Set to <code>true</code>. We set this option to true to ensure that only the data that we have set in this node get passed on to the next nodes in the workflow.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node uses the data from the previous node and returns the data that we set for the workflow.</p> <p></p>","title":"3. Set node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.rabbitmq/#4-rabbitmq-node","tags":["Workflow\u00b2","RabbitMQ","Cron","HTTP Request"],"text":"<p>This node will send the data from the previous node to the <code>iss-position</code> queue in RabbitMQ. If you have created a queue with a different name in RabbitMQ, you can use that queue instead.</p> <ol> <li>First of all, you'll have to enter credentials for the RabbitMQ node. You can find out how to do that here.</li> <li>Enter the name of the queue or topic in the Queue / Topic field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node sends the data from the previous node to the <code>iss-position</code> queue in RabbitMQ.</p> <p></p>  <p> Activate workflow for production</p> <p>This example workflow uses the Cron node, which is a Trigger node. You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Cron node.</p>","title":"4. RabbitMQ node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.raindrop/","text":"<p>Raindrop is a bookmarking tool that allows you to organize your bookmarks.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Raindrop"},{"location":"workflow/integrations/nodes/workflow-nodes-base.raindrop/#basic-operations","text":"<ul> <li>Bookmark<ul> <li>Create</li> <li>Delete</li> <li>Get</li> <li>Get All</li> <li>Update</li> </ul> </li> <li>Collection<ul> <li>Create</li> <li>Delete</li> <li>Get</li> <li>Get All</li> <li>Update</li> </ul> </li> <li>Tag<ul> <li>Delete</li> <li>Get All</li> </ul> </li> <li>User<ul> <li>Get</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.raindrop/#example-usage","text":"<p>This workflow allows you to create a collection and create, update, and get a bookmark in Raindrop. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Start - Raindrop</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.raindrop/#1-start-node","text":"<p>The Start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.raindrop/#2-raindrop-node-create-collection","text":"<p>This node will create a new collection in Raindrop.</p> <ol> <li>First of all, you'll have to enter credentials for the Raindrop node. You can find out how to do that here.</li> <li>Select 'Create' from the Operation dropdown list.</li> <li>Enter a title in the Title field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node creates a new collection with the title <code>n8n-docs</code>.</p> <p></p>","title":"2. Raindrop node (create: collection)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.raindrop/#3-raindrop1-node-create-bookmark","text":"<p>This node will create a new bookmark and add it to the collection that we created in the previous node.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Bookmark' from the Resource dropdown list.</li> <li>Select 'Create' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Collection field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; _id. You can also add the following expression: <code>{{$json[\"_id\"]}}</code>.</li> <li>Enter <code>https://docs.n8n.io</code> in the Link field.</li> <li>Click on Add Field and select 'Title' from the dropdown list.</li> <li>Enter <code>Documentation</code> in the Title field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node creates a new bookmark with the title <code>Documentation</code>.</p> <p></p>","title":"3. Raindrop1 node (create: bookmark)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.raindrop/#4-raindrop2-node-update-bookmark","text":"<p>This node will update the bookmark that we created in the previous node.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Bookmark' from the Resource dropdown list.</li> <li>Select 'Update' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Bookmark ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; _id. You can also add the following expression: <code>{{$json[\"_id\"]}}</code>.</li> <li>Click on Add Field and select 'Title' from the dropdown list.</li> <li>Enter <code>n8n Documentation</code> in the Title field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node updates the title of the bookmark that we created in the previous node.</p> <p></p>","title":"4. Raindrop2 node (update: bookmark)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.raindrop/#5-raindrop3-node-get-bookmark","text":"<p>This node will return the information about the bookmark that we created earlier.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Bookmark' from the Resource dropdown list.</li> <li>Click on the gears icon next to the Bookmark ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; _id. You can also add the following expression: <code>{{$json[\"_id\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns the information on the bookmark that we created earlier.</p> <p></p>","title":"5. Raindrop3 node (get: bookmark)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.reddit/","text":"<p>Reddit is a social news aggregation, web content rating, and discussion website.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Reddit"},{"location":"workflow/integrations/nodes/workflow-nodes-base.reddit/#basic-operations","text":"<ul> <li>Post<ul> <li>Submit a post to a subreddit</li> <li>Delete a post from a subreddit</li> <li>Get a post from a subreddit</li> <li>Get all posts from a subreddit</li> <li>Search posts in a subreddit or in all of Reddit.</li> </ul> </li> <li>Post Comment<ul> <li>Create a top-level comment in a post</li> <li>Retrieve all comments in a post</li> <li>Remove a comment from a post</li> <li>Write a reply to a comment in a post</li> </ul> </li> <li>Profile<ul> <li>Get</li> </ul> </li> <li>Subreddit<ul> <li>Retrieve background information about a subreddit.</li> <li>Retrieve information about subreddits from all of Reddit.</li> </ul> </li> <li>User<ul> <li>Get</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.reddit/#example-usage","text":"<p>This workflow allows you to create a post a Reddit and add a comment to that post. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Start - Reddit</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.reddit/#1-start-node","text":"<p>The Start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.reddit/#2-reddit-node-create-post","text":"<p>This node will create a post under the subreddit <code>n8n</code>. If you want to create a post under a different subreddit, enter the name of that subreddit instead.</p> <ol> <li>First of all, you'll have to enter credentials for the Reddit node. You can find out how to do that here.</li> <li>Enter <code>n8n</code> in the Subreddit field.</li> <li>Enter a title in the Title field.</li> <li>Enter the content of the post in the Text field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node creates a new post under the subreddit <code>n8n</code>.</p> <p></p>","title":"2. Reddit node (create: post)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.reddit/#3-reddit1-node-get-post","text":"<p>This node will retrieve the post that we created using the previous node.</p> <ol> <li>Select the credentials you entered in the previous node.</li> <li>Select 'Get' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Subreddit field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Reddit &gt; Parameters &gt; subreddit. You can also add the following expression: <code>{{$node[\"Reddit\"].parameter[\"subreddit\"]}}</code>.</li> <li>Click on the gears icon next to the Post ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$json[\"id\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns the information of the post that we created in the previous node.</p> <p></p>","title":"3. Reddit1 node (get: post)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.reddit/#4-reddit-node-create-postcomment","text":"<p>This node will add a comment to the post that we created earlier.</p> <ol> <li>Select the credentials you entered in the previous node.</li> <li>Select 'Post Comment' from the Resource dropdown list.</li> <li>Click on the gears icon next to the Post ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$json[\"id\"]}}</code>.</li> <li>Enter your comment in the Comment Text field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node comments on the post that we created earlier.</p> <p></p>","title":"4. Reddit node (create: postComment)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.redis/","text":"<p>Redis is an open-source, in-memory data structure store, used as a database, cache and message broker.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Redis"},{"location":"workflow/integrations/nodes/workflow-nodes-base.redis/#basic-operations","text":"<ul> <li>Delete a key from Redis.</li> <li>Get the value of a key from Redis.</li> <li>Returns generic information about the Redis instance.</li> <li>Atomically increments a key by 1. Creates the key if it does not exist.</li> <li>Returns all the keys matching a pattern.</li> <li>Set the value of a key in redis.</li> <li>Publish message to redis channel.</li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.redis/#example-usage","text":"<p>This workflow allows you to get the value of a key in Redis. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - Redis</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.redis/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.redis/#2-redis-node","text":"<ol> <li>First of all, you'll have to enter credentials for the Redis node. You can find out how to do that here.</li> <li>Select the 'Get' option from the Operation dropdown list.</li> <li>Enter the key for which you want to retrieve the value in the Key field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>","title":"2. Redis node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.rocketchat/","text":"<p>Rocket.Chat is a free and open source team chat collaboration platform that allows users to communicate securely in real-time across devices.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Rocket.Chat"},{"location":"workflow/integrations/nodes/workflow-nodes-base.rocketchat/#basic-operations","text":"<ul> <li>Chat<ul> <li>Post a message to a channel or a direct message</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.rocketchat/#example-usage","text":"<p>This workflow allows you to post a message to a channel in Rocket.Chat. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - Rocket.Chat</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.rocketchat/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.rocketchat/#2-rocketchat-node","text":"<ol> <li>First of all, you'll have to enter credentials for the Rocket.Chat node. You can find out how to do that here.</li> <li>Enter the name of the channel where you want to post the message in the Channel field. For example, <code>#general</code>.</li> <li>Enter the message in the Text field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>","title":"2. Rocket.Chat node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.rundeck/","text":"<p>Rundeck is an open-source runbook automation for incident management, business continuity, and self-service operations.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Rundeck"},{"location":"workflow/integrations/nodes/workflow-nodes-base.rundeck/#basic-operations","text":"<p>Job - Execute a job - Get metadata of a job</p>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.rundeck/#example-usage","text":"<p>This workflow allows you to execute a job on Rundeck. You can also find the workflow on this website. This example usage workflow uses the following two nodes.</p> <ul> <li>Start</li> <li>Rundeck</li> </ul> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.rundeck/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.rundeck/#2-rundeck-node","text":"<ol> <li>First of all, you'll have to enter credentials for the Rundeck node. You can find out how to do that here.</li> <li>Enter your Rundeck job ID in the Job Id field. You can find instructions on how to obtain the job ID in the FAQs below.</li> <li>Click on Execute Node to run the workflow.</li> </ol>","title":"2. Rundeck node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.rundeck/#faqs","text":"","title":"FAQs"},{"location":"workflow/integrations/nodes/workflow-nodes-base.rundeck/#how-do-i-find-the-job-id","text":"<ol> <li>Access your Rundeck dashboard.</li> <li>Open the project that contains the job you want to use with Workflow\u00b2.</li> <li>In the sidebar, click on 'JOBS'.</li> <li>Under 'All Jobs', click on the name of the job you want to use with Workflow\u00b2.</li> <li>In the top left corner, under the name of the job, copy the string that is displayed in smaller font below the job name. This is your job ID.</li> <li>Paste this job ID in the <code>Job Id</code> field in Workflow\u00b2.</li> </ol>","title":"How do I find the Job ID?"},{"location":"workflow/integrations/nodes/workflow-nodes-base.s3/","text":"<p>S3 is an object storage service that allows you to block public access to all of your objects at the bucket or the account level with S3 Block Public Access. S3 maintains compliance programs, such as PCI-DSS, HIPAA/HITECH, FedRAMP, EU Data Protection Directive, and FISMA, to help you meet regulatory requirements.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"S3"},{"location":"workflow/integrations/nodes/workflow-nodes-base.s3/#basic-operations","text":"<ul> <li>Bucket<ul> <li>Create a bucket</li> <li>Delete a bucket</li> <li>Get all buckets</li> <li>Search within a bucket</li> </ul> </li> <li>File<ul> <li>Copy a file</li> <li>Delete a file</li> <li>Download a file</li> <li>Get all files</li> <li>Upload a file</li> </ul> </li> <li>Folder<ul> <li>Create a folder</li> <li>Delete a folder</li> <li>Get all folders</li> </ul> </li> </ul> <p>Note: To attach a file for upload, you will need to use an additional node such as the Read Binary File node or the HTTP Request node to pass the file as a data property.</p>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.s3/#example-usage","text":"<p>This workflow allows you to upload a file to an S3 compatible server and get a list of all the files in a bucket using the S3 node. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Start - HTTP Request - S3</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.s3/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.s3/#2-http-request-node-get","text":"<ol> <li>Enter the URL of the file in the URL field.</li> <li>Select 'File' from the Response Format field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p></p>","title":"2. HTTP Request node (GET)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.s3/#3-s3-node-upload-file","text":"<ol> <li>First of all, you'll have to enter credentials for the S3 node. You can find out how to do that here.</li> <li>Select 'Upload' from the Operation dropdown list.</li> <li>Enter the bucket name in the Bucket Name field.</li> <li> <p>Click on the gears icon next to the File Name field and click on Add Expression.</p> </li> <li> <p>Select the following in the Variable Selector section: Nodes &gt; HTTP Request &gt; Output Data &gt; Binary &gt; data &gt; fileName. You can also add the following expression: <code>{{$node[\"HTTP Request\"].binary.data.fileName}}</code></p> </li> <li>Click on Execute Node to run the node.</li> </ol> <p></p>","title":"3. S3 node (upload: file)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.s3/#4-s-node-getall-file","text":"<ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Get All' from the Operation dropdown list.</li> <li>Enter the bucket name in the Bucket Name field.</li> <li>Toggle Return All to true.</li> <li>Click on Execute Node to run the node.</li> </ol> <p></p>","title":"4. S node (getAll: file)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.s3/#faqs","text":"","title":"FAQs"},{"location":"workflow/integrations/nodes/workflow-nodes-base.s3/#setting-file-permissions-in-wasabi","text":"<p>When uploading files to Wasabi, permissions for the files must be set using the ACL dropdown and not the toggles.</p> <p></p>","title":"Setting file permissions in Wasabi"},{"location":"workflow/integrations/nodes/workflow-nodes-base.salesforce/","text":"<p>Salesforce is a cloud-based software company. It provides customer relationship management service and also sells a complementary suite of enterprise applications focused on customer service, marketing automation, analytics, and application development.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Salesforce"},{"location":"workflow/integrations/nodes/workflow-nodes-base.salesforce/#basic-operations","text":"<ul> <li>Account<ul> <li>Add note to an account</li> <li>Create an account</li> <li>Create a new account, or update the current one if it already exists (upsert)</li> <li>Get an account</li> <li>Get all accounts</li> <li>Returns an overview of account's metadata.</li> <li>Delete an account</li> <li>Update an account</li> </ul> </li> <li>Attachment<ul> <li>Create a attachment</li> <li>Delete a attachment</li> <li>Get a attachment</li> <li>Get all attachments</li> <li>Returns an overview of attachment's metadata.</li> <li>Update a attachment</li> </ul> </li> <li>Case<ul> <li>Add a comment to a case</li> <li>Create a case</li> <li>Get a case</li> <li>Get all cases</li> <li>Returns an overview of case's metadata</li> <li>Delete a case</li> <li>Update a case</li> </ul> </li> <li>Contact<ul> <li>Add lead to a campaign</li> <li>Add note to a contact</li> <li>Create a contact</li> <li>Create a new contact, or update the current one if it already exists (upsert)</li> <li>Delete a contact</li> <li>Get a contact</li> <li>Returns an overview of contact's metadata</li> <li>Get all contacts</li> <li>Update a contact</li> </ul> </li> <li>Custom Object<ul> <li>Create a custom object record</li> <li>Create a new record, or update the current one if it already exists (upsert)</li> <li>Get a custom object record</li> <li>Get all custom object records</li> <li>Delete a custom object record</li> <li>Update a custom object record</li> </ul> </li> <li>Document<ul> <li>Upload a document</li> </ul> </li> <li>Flow<ul> <li>Get all flows</li> <li>Invoke a flow</li> </ul> </li> <li>Lead<ul> <li>Add lead to a campaign</li> <li>Add note to a lead</li> <li>Create a lead</li> <li>Create a new lead, or update the current one if it already exists (upsert)</li> <li>Delete a lead</li> <li>Get a lead</li> <li>Get all leads</li> <li>Returns an overview of Lead's metadata</li> <li>Update a lead</li> </ul> </li> <li>Opportunity<ul> <li>Add note to an opportunity</li> <li>Create an opportunity</li> <li>Create a new opportunity, or update the current one if it already exists (upsert)</li> <li>Delete an opportunity</li> <li>Get an opportunity</li> <li>Get all opportunities</li> <li>Returns an overview of opportunity's metadata</li> <li>Update an opportunity</li> </ul> </li> <li>Search<ul> <li>Execute a SOQL query that returns all the results in a single response</li> </ul> </li> <li>Task<ul> <li>Create a task</li> <li>Delete a task</li> <li>Get a task</li> <li>Get all tasks</li> <li>Returns an overview of task's metadata</li> <li>Update a task</li> </ul> </li> <li>User<ul> <li>Get a user</li> <li>Get all users</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.salesforce/#example-usage","text":"<p>This workflow allows you to create, update, and add a note to a lead in Salesforce. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Start - Salesforce</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.salesforce/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.salesforce/#2-salesforce-node-create-lead","text":"<ol> <li>First of all, you'll have to enter credentials for the Salesforce node. You can find out how to do that here.</li> <li>Enter the name of the company in the Company field.</li> <li>Enter the last name of the contact person in the Last Name field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p></p>","title":"2. Salesforce node (create: lead)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.salesforce/#3-salesforce1-node-update-lead","text":"<ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Update' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Lead ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Salesforce &gt; Output Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$node[\"Salesforce\"].json[\"id\"]}}</code></li> <li>Click on the Add Field button and select 'City' from the dropdown list.</li> <li>Enter a city name in the City field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p></p>","title":"3. Salesforce1 node (update: lead)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.salesforce/#4-salesforce2-node-addnote-lead","text":"<ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select Add Note from the Operation dropdown list.</li> <li>Click on the gears icon next to the Lead ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Salesforce &gt; Output Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$node[\"Salesforce\"].json[\"id\"]}}</code></li> <li>Enter the note in the Title field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p></p>","title":"4. Salesforce2 node (addNote: lead)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.salesmate/","text":"<p>Salesmate is a cloud-based CRM solution that caters to small and midsize businesses across various industries. Key features include contact management, sales pipeline management, email marketing and internal chat and phone integration.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Salesmate"},{"location":"workflow/integrations/nodes/workflow-nodes-base.salesmate/#basic-operations","text":"<ul> <li>Activity<ul> <li>Create an activity</li> <li>Delete an activity</li> <li>Get an activity</li> <li>Get all companies</li> <li>Update an activity</li> </ul> </li> <li>Company<ul> <li>Create a company</li> <li>Delete a company</li> <li>Get a company</li> <li>Get all companies</li> <li>Update a company</li> </ul> </li> <li>Deal<ul> <li>Create a deal</li> <li>Delete a deal</li> <li>Get a deal</li> <li>Get all deals</li> <li>Update a deal</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.salesmate/#example-usage","text":"<p>This workflow allows you to create a company in Salesmate. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - Salesmate</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.salesmate/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.salesmate/#2-salesmate-node","text":"<ol> <li>First of all, you'll have to enter credentials for the Salesmate node. You can find out how to do that here.</li> <li>Select the 'Company' option from the Resource dropdown list.</li> <li>Enter the name of the company in the Name field.</li> <li>Select the owner from the Owner dropdown list.</li> <li>Click on Execute Node to run the workflow.</li> </ol>","title":"2. Salesmate node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.seaTable/","text":"<p>SeaTable is a collaborative database application with a spreadsheet interface.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"SeaTable"},{"location":"workflow/integrations/nodes/workflow-nodes-base.seaTable/#basic-operations","text":"<ul> <li>Row<ul> <li>Create</li> <li>Delete</li> <li>Get</li> <li>Get All</li> <li>Update</li> </ul> </li> </ul>","title":"Basic operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.securityScorecard/","text":"<p>SecurityScorecard enables organizations to prove and maintain compliance with leading regulations and standards mandates that include PCI, NIST, SOX, GDPR, and many others.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"SecurityScorecard"},{"location":"workflow/integrations/nodes/workflow-nodes-base.securityScorecard/#basic-operations","text":"<ul> <li>Company<ul> <li>Get company factor scores and issue counts</li> <li>Get company's historical factor scores</li> <li>Get company's historical scores</li> <li>Get company information and summary of their scorecard</li> <li>Get company's score improvement plan</li> </ul> </li> <li>Industry<ul> <li>Get Factor Scores</li> <li>Get Historical Factor Scores</li> <li>Get Score</li> </ul> </li> <li>Invite<ul> <li>Create an invite for a company/user</li> </ul> </li> <li>Portfolio<ul> <li>Create a portfolio</li> <li>Delete a portfolio</li> <li>Get all portfolios</li> <li>Update a portfolio</li> </ul> </li> <li>Portfolio Company<ul> <li>Add a company to portfolio</li> <li>Get all companies in a portfolio</li> <li>Remove a company from portfolio</li> </ul> </li> <li>Report<ul> <li>Download a generated report</li> <li>Generate a report</li> <li>Get list of recently generated report</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.securityScorecard/#example-usage","text":"<p>This workflow allows you to generate, retrieve, and download a report using the SecurityScorecard node. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Start - SecurityScorecard</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.securityScorecard/#1-start-node","text":"<p>The Start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.securityScorecard/#2-securityscorecard-node-generate-report","text":"<p>This node will generate a full scorecard report for a company that we specify.</p> <ol> <li>First of all, you'll have to enter credentials for the SecurityScorecard node. You can find out how to do that here.</li> <li>Select 'Report' from the Resource dropdown list.</li> <li>Select 'Generate' from the Operation dropdown list.</li> <li>Select 'Full Scorecard' from the Report dropdown list.</li> <li>Enter the domain of the company in the Scorecard Identifier field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node generates a full scorecard report of <code>n8n.io</code>.</p> <p></p>","title":"2. SecurityScorecard node (generate: report)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.securityScorecard/#3-securityscorecard1-node-getall-report","text":"<p>This node will return a report from SecurityScorecard.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Report' from the Resource dropdown list.</li> <li>Select 'Get All' from the Operation dropdown list.</li> <li>Enter <code>1</code> in the Limit field. By setting it to one, the node will return a single report.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns a report from SecurityScroecard.</p> <p></p>","title":"3. SecurityScorecard1 node (getAll: report)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.securityScorecard/#4-securityscorecard2-node-download-report","text":"<p>This node will download the report that got returned by the previous node.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Report' from the Resource dropdown list.</li> <li>Select 'Download' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Report URL field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; download_url. You can also add the following expression: <code>{{$json[\"download_url\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node downloads the report that was returned by the previous node.</p> <p></p>","title":"4. SecurityScorecard2 node (download: report)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.segment/","text":"<p>Segment is a customer data platform (CDP) that helps you collect, clean, and control your customer data.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Segment"},{"location":"workflow/integrations/nodes/workflow-nodes-base.segment/#basic-operations","text":"<ul> <li>Group<ul> <li>Add a user to a group</li> </ul> </li> <li>Identify<ul> <li>Create an identity</li> </ul> </li> <li>Track<ul> <li>Record the actions your users perform. Every action triggers an event, which can also have associated properties.</li> <li>Record page views on your website, along with optional extra information about the page being viewed.</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.segment/#example-usage","text":"<p>This workflow allows you to track an event in Segment. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - Segment</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.segment/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.segment/#2-segment-node","text":"<ol> <li>First of all, you'll have to enter credentials for the Segment node. You can find out how to do that here.</li> <li>Select the 'Track' option from the Resource dropdown list.</li> <li>Enter the ID of the user in the User ID field.</li> <li>Enter the name of event in the Event field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>","title":"2. Segment node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.sendGrid/","text":"<p>SendGrid provides a cloud-based service that assists businesses with email delivery.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"SendGrid"},{"location":"workflow/integrations/nodes/workflow-nodes-base.sendGrid/#basic-operations","text":"<ul> <li>Contact<ul> <li>Create/update a contact</li> <li>Delete a contact</li> <li>Get a contact by ID</li> <li>Get all contacts</li> </ul> </li> <li>List<ul> <li>Create a list</li> <li>Delete a list</li> <li>Get a list</li> <li>Get all lists</li> <li>Update a list</li> </ul> </li> <li>Mail<ul> <li>Send an email.</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.sendGrid/#example-usage","text":"<p>This workflow allows you to create, update and get a contact using the SendGrid node. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Start - SendGrid</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.sendGrid/#1-start-node","text":"<p>The Start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.sendGrid/#2-sendgrid-node-upsertcontact","text":"<p>This node will create a contact in SendGrid.</p> <ol> <li>First of all, you'll have to enter credentials for the SendGrid node. You can find out how to do that here.</li> <li>Select 'Contact' from the Resource dropdown list.</li> <li>Select 'Create/Update' from the Operation dropdown list.</li> <li>Enter an email address in the Email field.</li> <li>Click on the Add Field button and select 'First Name'.</li> <li>Enter the name of the contact in the First Name field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node creates contact with their first name.</p> <p></p>","title":"2. SendGrid node (upsert:contact)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.sendGrid/#3-sendgrid1-node-upsertcontact","text":"<p>This node will update the contact that we created in the previous node.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Contact' from the Resource dropdown list.</li> <li>Select 'Create/Update' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Email field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; SendGrid &gt; Parameters &gt; email. You can also add the following expression: <code>{{$node[\"SendGrid\"].parameter[\"email\"]}}</code>.</li> <li>Click on the Add Field button and select 'Last Name'.</li> <li>Enter the last name of the contact in the Last Name field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node updates the contact that we created in the previous node.</p> <p></p>","title":"3. SendGrid1 node (upsert:contact)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.sendGrid/#4-sendgrid2-node-getcontact","text":"<p>This node will return the information of the contact that we created using the SendGrid node.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Contact' from the Resource dropdown list.</li> <li>Select 'Get' from the Operation dropdown list.</li> <li>Select 'Email' from the By dropdown list.</li> <li>Click on the gears icon next to the Email field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; SendGrid &gt; Parameters &gt; email. You can also add the following expression: <code>{{$node[\"SendGrid\"].parameter[\"email\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns the information of the contact that we created using the SendGrid node.</p> <p></p>","title":"4. SendGrid2 node (get:contact)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.sendy/","text":"<p>Sendy is a self-hosted email newsletter application that lets you send trackable emails via AWS SES.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Sendy"},{"location":"workflow/integrations/nodes/workflow-nodes-base.sendy/#basic-operations","text":"<ul> <li>Campaign<ul> <li>Create a campaign</li> </ul> </li> <li>Subscriber<ul> <li>Add a subscriber to a list</li> <li>Count subscribers</li> <li>Delete a subscriber from a list</li> <li>Unsubscribe user from a list</li> <li>Get the status of subscriber</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.sendy/#example-usage","text":"<p>This workflow allows you to add a subscriber to a list and create and send a campaign using the Sendy node. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Start - Sendy</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.sendy/#1-start-node","text":"<p>The Start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.sendy/#2-sendy-node-add-subscriber","text":"<p>This node will add a subscriber to a list in Sendy. If you don't already have a list in Sendy, make sure to create one.</p> <ol> <li>First of all, you'll have to enter credentials for the Sendy node. You can find out how to do that here.</li> <li>Enter the subscriber's email address in the Email field.</li> <li>In your Sendy dashboard, click on 'View all lists' and copy the ID of the list to which you want to add the subscriber. Paste this list ID in the List ID field in Workflow\u00b2.</li> <li>Click on the Add Field button and select 'Name'.</li> <li>Enter the name of the subscriber in the Name field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node adds a subscriber with their name to the list that we specify.</p> <p></p>","title":"2. Sendy node (add: subscriber)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.sendy/#3-sendy1-node-create-campaign","text":"<p>This node will create a campaign with the title 'Welcome to n8n' and send it to the subscribers of the list that we specify.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Campaign' from the Resource dropdown list.</li> <li>Enter the name of the sender in the From Name field.</li> <li>Enter the email address of the sender in the From Email field.</li> <li>Enter the email address where the subscribers can reply to in the Reply To field.</li> <li>Enter the title of the campaign in the Title field.</li> <li>Enter the subject of the email in the Subject field.</li> <li>Enter the HTML snippet of the email campaign in the HTML Text field.</li> <li>Toggle Send Campaign to true.</li> <li>Click on the Add Field button and select 'List IDs'.</li> <li>Click on the gears icon next to the List IDs field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Sendy &gt; Parameters &gt; listId. You can also add the following expression: <code>{{$node[\"Sendy\"].parameter[\"listId\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node creates the campaign with the title <code>Welcome to n8n</code> and sends it to the list that we specify.</p> <p></p>","title":"3. Sendy1 node (create: campaign)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.sentryIo/","text":"<p>Sentry.io is a service that helps you monitor and fix crashes in realtime. Sentry\u2019s platform helps every developer diagnose, fix, and optimize the performance of their code.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Sentry.io"},{"location":"workflow/integrations/nodes/workflow-nodes-base.sentryIo/#basic-operations","text":"<ul> <li>Event<ul> <li>Get event by ID</li> <li>Get all events</li> </ul> </li> <li>Issue<ul> <li>Delete an issue</li> <li>Get issue by ID</li> <li>Get all issues</li> <li>Update an issue</li> </ul> </li> <li>Project<ul> <li>Create a new project</li> <li>Delete a project</li> <li>Get project by ID</li> <li>Get all projects</li> <li>Update a project</li> </ul> </li> <li>Release<ul> <li>Create a release</li> <li>Delete a release</li> <li>Get release by version identifier</li> <li>Get all releases</li> <li>Update a release</li> </ul> </li> <li>Organization<ul> <li>Create an organization</li> <li>Get organization by slug</li> <li>Get all organizations</li> <li>Update an organization</li> </ul> </li> <li>Team<ul> <li>Create a new team</li> <li>Delete a team</li> <li>Get team by slug</li> <li>Get all teams</li> <li>Update a team</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.sentryIo/#example-usage","text":"<p>This workflow allows you to create a release and get all releases using the Sentry.io node. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Start - Sentry.io</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.sentryIo/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.sentryIo/#2-sentryio-node-create-release","text":"<ol> <li>First of all, you'll have to enter credentials for the Sentry.io node. You can find out how to do that here.</li> <li>Select 'Release' from the Resource dropdown list.</li> <li>Select 'Create' from the Operation dropdown list.</li> <li>Select the organization from the Organization Slug dropdown list.</li> <li>Enter the version in the Version field.</li> <li>Enter the URL that points to the release in the URL field.</li> <li>Select the project from Projects dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p></p>","title":"2. Sentry.io node (create: release)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.sentryIo/#2-sentryio-node-getall-release","text":"<ol> <li>Select the credentials that you entered in the previous Sentry.io node.</li> <li>Select 'Release' from the Resource dropdown list.</li> <li>Select 'Get All' from the Operation dropdown list.</li> <li>Select the organization from the Organization Slug dropdown list.</li> <li>Toggle Return All to true.</li> <li>Click on Execute Node to run the node.</li> </ol> <p></p>","title":"2. Sentry.io node (getAll: release)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.serviceNow/","text":"<p>ServiceNow is a cloud computing platform to help companies manage digital workflows for their operations.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"ServiceNow"},{"location":"workflow/integrations/nodes/workflow-nodes-base.serviceNow/#basic-operations","text":"<ul> <li>Business Service<ul> <li>Get All</li> </ul> </li> <li>Configuration Items<ul> <li>Get All</li> </ul> </li> <li>Department<ul> <li>Get All</li> </ul> </li> <li>Dictionary<ul> <li>Get All</li> </ul> </li> <li>Incident<ul> <li>Create</li> <li>Delete</li> <li>Get</li> <li>Get All</li> <li>Update</li> </ul> </li> <li>Table Record<ul> <li>Create</li> <li>Delete</li> <li>Get</li> <li>Get All</li> <li>Update</li> </ul> </li> <li>User<ul> <li>Create</li> <li>Delete</li> <li>Get</li> <li>Get All</li> <li>Update</li> </ul> </li> <li>User Group<ul> <li>Get All</li> </ul> </li> <li>User Role<ul> <li>Get All</li> </ul> </li> </ul>","title":"Basic operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.serviceNow/#example-usage","text":"<p>This workflow allows you to get the 50 most recent incidents and view only the desired fields. This example usage workflow uses the following nodes:</p> <ul> <li>Start</li> <li>ServiceNow</li> </ul> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.serviceNow/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.serviceNow/#2-servicenow-node","text":"<ol> <li>First enter credentials, you can find out how to do that here.</li> <li>Select Incident from the Resource dropdown.</li> <li>Select Get All from the Operation dropdown.</li> <li>Click Add Option and select Fields.</li> <li>Use the dropdown to select the fields you want to view, here we used <code>Close code</code>, <code>Severity</code>, <code>Sys ID</code>, and <code>Resolve time</code>.</li> <li>Click on Execute Node to run the workflow.</li> </ol> <p></p>","title":"2. ServiceNow node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.shopify/","text":"<p>Shopify is an e-commerce platform that allows users to set up an online store and sell their products.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Shopify"},{"location":"workflow/integrations/nodes/workflow-nodes-base.shopify/#basic-operations","text":"<ul> <li>Order<ul> <li>Create an order</li> <li>Delete an order</li> <li>Get an order</li> <li>Get all orders</li> <li>Update an order</li> </ul> </li> <li>Product<ul> <li>Create a product</li> <li>Delete a product</li> <li>Get a product</li> <li>Get all products</li> <li>Update a product</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.shopify/#example-usage","text":"<p>This workflow allows you to get all orders from Shopify. You can also find the workflow on the website. This example usage workflow uses the following two nodes.</p> <ul> <li>Start</li> <li>Shopify</li> </ul> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.shopify/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.shopify/#2-shopify-node","text":"<ol> <li>First of all, you'll have to enter credentials for the Shopify node. You can find out how to do that here.</li> <li>Select 'Get All' from the Operation dropdown list.</li> <li>Click on Execute Node to run the workflow.</li> </ol>","title":"2. Shopify node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.signl4/","text":"<p>SIGNL4 is a plug-and-play cloud solution produced by Derdack. It automatically notifies teams on their mobile devices in case of critical events.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"SIGNL4"},{"location":"workflow/integrations/nodes/workflow-nodes-base.signl4/#basic-operations","text":"<ul> <li>Alert<ul> <li>Send an alert</li> <li>Resolve an alert</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.signl4/#example-usage","text":"<p>This workflow allows you to send an alert on SIGNL4. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - SIGNL4</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.signl4/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.signl4/#2-signl4-node","text":"<ol> <li>First of all, you'll have to enter credentials for the SIGNL4 node. You can find out how to do that here.</li> <li>Enter a message in the Message field.</li> <li>Click on the Add Field button and select 'Title'.</li> <li>Enter a title in the Title field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>","title":"2. SIGNL4 node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.slack/","text":"<p>Slack is a business communication platform offering many IRC-style features, including persistent chat rooms (channels), private groups, and direct messaging.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Slack"},{"location":"workflow/integrations/nodes/workflow-nodes-base.slack/#basic-operations","text":"<ul> <li>Channel<ul> <li>Archives a conversation.</li> <li>Closes a direct message or multi-person direct message.</li> <li>Initiates a public or private channel-based conversation</li> <li>Get information about a channel.</li> <li>Get all channels in a Slack team.</li> <li>Get a conversation's history of messages and events.</li> <li>Invite a user to a channel</li> <li>Joins an existing conversation.</li> <li>Removes a user from a channel.</li> <li>Leaves a conversation.</li> <li>List members of a conversation.</li> <li>Opens or resumes a direct message or multi-person direct message.</li> <li>Renames a conversation.</li> <li>Get a thread of messages posted to a channel</li> <li>Sets the purpose for a conversation.</li> <li>Sets the topic for a conversation.</li> <li>Unarchives a conversation.</li> </ul> </li> <li>File<ul> <li>Get a file info</li> <li>Get &amp; filters team files.</li> <li>Create or upload an existing file.</li> </ul> </li> <li>Message<ul> <li>Deletes a message</li> <li>Get Permanent Link of a message</li> <li>Post a message into a channel</li> <li>Post an ephemeral message to a user in channel</li> <li>Updates a message</li> </ul> </li> <li>Reaction<ul> <li>Adds a reaction to a message</li> <li>Get the reactions of a message</li> <li>Remove a reaction of a message</li> </ul> </li> <li>Star<ul> <li>Add a star to an item.</li> <li>Delete a star from an item.</li> <li>Get all stars of autenticated user.</li> </ul> </li> <li>User<ul> <li>Get information about a user</li> <li>Get online status of a user</li> </ul> </li> <li>User Group<ul> <li>Create a user group</li> <li>Disable a user group</li> <li>Enable a user group</li> <li>Get all user groups</li> <li>Update a user group</li> </ul> </li> <li>User Profile<ul> <li>Get your user's profile</li> <li>Update user's profile</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.slack/#example-usage","text":"<p>This workflow allows you to create a channel, invite users to the channel, post a message, and upload a file to the channel. You can also find the workflow on Workflow\u00b2.io This example usage workflow uses the following nodes. - Start - Slack - HTTP Request</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.slack/#1-start-node","text":"<p>The Start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.slack/#2-slack-node-create-channel","text":"<p>This node will create a new channel in your Slack workspace. This operation requires the <code>channel:manage</code> scope. Add this scope under the Bot Token Scopes section on Slack. You can refer to the FAQs to learn how to add scopes.</p> <ol> <li>Select 'Access Token' from the Authentication dropdown list.</li> <li>You'll have to enter credentials for the Slack node. You can find out how to enter credentials for this node here.</li> <li>Select 'Channel' from the Resource dropdown list.</li> <li>Enter a channel name in the Channel field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that node creates a new channel in Slack.</p> <p></p>","title":"2. Slack node (create: channel)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.slack/#3-slack1-node-invite-channel","text":"<p>This node will invite a member to the channel that we created in the previous node. This operation requires the <code>channel:read</code> scope. Add this scope under the Bot Token Scopes section on Slack.</p> <ol> <li>Select 'Access Token' from the Authentication dropdown list.</li> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Channel' from the Resource dropdown list.</li> <li>Select 'Invite' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Channel field click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Slack &gt; Output Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$node[\"Slack\"].json[\"id\"]}}</code>.</li> <li>Select the users from the User IDs dropdown list. The users you select in this field will be added to the channel.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that node invites the user to the channel we created using the previous node.</p> <p></p>","title":"3. Slack1 node (invite: channel)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.slack/#4-slack2-node-post-message","text":"<p>This node will post a message in the channel with an attachment.</p> <ol> <li>Select 'Access Token' from the Authentication dropdown list.</li> <li>Select the credentials that you entered in the previous node.</li> <li>Click on the gears icon next to the Channel field click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Slack &gt; Output Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$node[\"Slack\"].json[\"id\"]}}</code>.</li> <li>Enter a message in the Text field.</li> <li>Toggle As User to <code>true</code>. This option allows you to post a message as a bot.</li> <li>Click on the Add attachment button.</li> <li>Select 'Image URL' from the Add attachment item dropdown list.</li> <li>Enter the URL of an image in the Image URL field.</li> <li>Select 'Title' from the Add attachment item dropdown list.</li> <li>Enter a title in the Title field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that node sends a message with an attachment to the channel that we created in the previous node.</p> <p></p>","title":"4. Slack2 node (post: message)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.slack/#5-http-request-node-get","text":"<p>This node will fetch a file from a URL. You can also use the Read Binary File node to read a file from the path you specify.</p> <ol> <li>Enter the URL of a file in the URL field.</li> <li>Select 'File' from the Response Format dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the HTTP Request node fetches the file from the URL. This file gets passed on as binary data to the next node in the workflow.</p> <p></p>","title":"5. HTTP Request node (GET)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.slack/#6-slack3-node-upload-file","text":"<p>This node will upload the file that we got from the previous node to a channel we specify.</p> <ol> <li>Select 'Access Token' from the Authentication dropdown list.</li> <li>Select the credentials that you entered in the previous Slack node.</li> <li>Select 'File' from Resource dropdown list.</li> <li>Select 'Upload' from the Operation dropdown list.</li> <li>Toggle Binary Data to true.</li> <li>Click on Add options and select 'Channels'.</li> <li>Select the channel from the Channels dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node uploads the file to the channel that we created earlier.</p> <p></p>","title":"6. Slack3 node (upload: file)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.slack/#faqs","text":"","title":"FAQs"},{"location":"workflow/integrations/nodes/workflow-nodes-base.slack/#how-to-create-a-private-channel","text":"<p>To create a private channel, follow the steps mentioned below. 1. Select 'Channel' from the Resource dropdown list. 2. Select 'Create' from the Operation dropdown list. 3. Click on the Add Field button. 4. Toggle Is Private to <code>true</code>.</p>","title":"How to create a private channel?"},{"location":"workflow/integrations/nodes/workflow-nodes-base.slack/#how-to-add-oauth-scopes-to-a-slack-app","text":"<p>Your app needs appropriate scopes and permissions to perform actions. For example, if you want to create a new channel, your app requires the <code>channel:manage</code> scope. To add scopes and permissions, follow the steps mentioned below. 1. Navigate to the Slack App dashboard page and select your app. 2. Click on 'OAuth &amp; Permissions' under the Feature section on the left sidebar. 3. Scroll down to the Scopes section. 4. If you're building a bot, click on Add an OAuth Scope under the Bot Token Scopes. 5. Select the permissions you want to give to your bot from the dropdown list. 6. If you want the app to access user data and act on behalf of users that authorize them, add scopes under the User Token Scopes. 7. When you add new scopes, Slack will ask you to reinstall the app. Click on 'reinstall your app' on the top of the page and reinstall the app.</p> <p>You can refer to the official documentation on Scopes and permissions to learn more.</p>","title":"How to add OAuth Scopes to a Slack app?"},{"location":"workflow/integrations/nodes/workflow-nodes-base.sms77/","text":"<p>sms77 is a full service messaging provider that helps improve communication with a powerful API and comprehensive products like Voice, SMS, and Text2Speech.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"sms77"},{"location":"workflow/integrations/nodes/workflow-nodes-base.sms77/#basic-operations","text":"<ul> <li>SMS<ul> <li>Send SMS</li> </ul> </li> <li>Voice Call<ul> <li>Converts text to voice and calls a given number</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.sms77/#example-usage","text":"<p>This workflow allows you to send an SMS to a specified phone number from any phone number. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - sms77</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.sms77/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.sms77/#2-sms77-node","text":"<ol> <li>First of all, you'll have to enter credentials for the sms77 node. You can find out how to do that here.</li> <li>Enter the phone number from which you'll be sending the message in the From field.</li> <li>Enter the phone number to which you'll be sending the message in the To field.</li> <li>Enter you message in the Message field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>","title":"2. sms77 node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.snowflake/","text":"<p>Snowflake is a cloud data platform that provides a data warehouse-as-a-service designed for the cloud.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Snowflake"},{"location":"workflow/integrations/nodes/workflow-nodes-base.snowflake/#basic-operations","text":"<ul> <li>Execute an SQL query.</li> <li>Insert rows in database.</li> <li>Update rows in database.</li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.snowflake/#example-usage","text":"<p>This workflow allows you to create a table, insert, and update data in a table in Snowflake. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Start - Set - Snowflake</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.snowflake/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.snowflake/#2-snowflake-node-execute-query","text":"<p>This node will create a table named <code>docs</code> with <code>id</code> and <code>name</code> columns.</p> <ol> <li>First of all, you'll have to enter credentials for the Snowflake node. You can find out how to do that here.</li> <li>Select 'Execute Query' from the Operation dropdown list.</li> <li>Enter the following SQL query in the Query field: <code>CREATE TABLE docs (id INT, name STRING);</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node creates a table named <code>docs</code> in Snowflake.</p> <p></p>","title":"2. Snowflake node (Execute Query)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.snowflake/#3-set-node","text":"<p>We will use the Set node to set the values for the id and name columns for a new record.</p> <ol> <li>Click on the Add Value button and select 'Number' from the dropdown list.</li> <li>Enter <code>id</code> in the Name field.</li> <li>Enter an id in the Value field.</li> <li>Click on the Add Value button and select 'String' from the dropdown list.</li> <li>Enter <code>name</code> in the Name field.</li> <li>Enter the value for the name in the Value field.</li> <li>Toggle Keep Only Set to <code>true</code>. We set this option to true to ensure that only the data that we have set in this node get passed on to the next nodes in the workflow.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node sets the value for <code>id</code> and <code>name</code>.</p> <p></p>","title":"3. Set node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.snowflake/#4-snowflake1-node-insert","text":"<p>This node will insert the data that we set in the previous node into the <code>docs</code> table in Snowflake.</p> <ol> <li>Select the credentials that you entered in the previous Snowflake node.</li> <li>Enter <code>docs</code> in the Table field.</li> <li>Enter <code>id, name</code> in the Columns field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node inserts the data in the table that we created using the Snowflake node.</p> <p></p>","title":"4. Snowflake1 node (Insert)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.snowflake/#5-set1-node","text":"<p>We will use the Set node to ensure that only the data that we set in this node gets passed on to the next nodes in the workflow. We will set the value of <code>name</code> in this node.</p> <ol> <li>Click on the Add Value button and select 'Number' from the dropdown list.</li> <li>Enter <code>id</code> in the Name field.</li> <li>Enter <code>1</code> in the Value field.</li> <li>Click on the Add Value button and select 'String' from the dropdown list.</li> <li>Enter <code>name</code> in the Name field.</li> <li>Enter <code>nodemation</code> in the Value field.</li> <li>Toggle Keep Only Set to <code>true</code>. We set this option to true to ensure that only the data that we have set in this node get passed on to the next nodes in the workflow.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node sets the value of <code>name</code>. This value is passed to the next node in the workflow.</p> <p></p>","title":"5. Set1 node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.snowflake/#6-snowflake2-node-update","text":"<p>This node will update the value of the <code>name</code> column for the id <code>1</code>.</p> <ol> <li>Select the credentials that you entered in the previous Snowflake node.</li> <li>Select 'Update' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Table field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Snowflake1 &gt; Parameters &gt; table. You can also add the following expression: <code>{{$node[\"Snowflake1\"].parameter[\"table\"]}}</code>.</li> <li>Enter <code>name</code> in the Columns field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node updates the value of the name field for the record with id <code>1</code>.</p> <p></p>","title":"6. Snowflake2 node (Update)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.splunk/","text":"<p>Splunk produces software for searching, monitoring, and analyzing machine-generated data via a Web-style interface. It indexes and correlates information in a container that makes it searchable, and makes it possible to generate alerts, reports and visualizations.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Splunk"},{"location":"workflow/integrations/nodes/workflow-nodes-base.splunk/#basic-operations","text":"<ul> <li>Fired Alert<ul> <li>Retrieve a fired alerts report</li> </ul> </li> <li>Search Configuration<ul> <li>Delete a search configuration</li> <li>Retrieve a search configuration</li> <li>Retrieve all search configurations</li> </ul> </li> <li>Search Job<ul> <li>Create a search job</li> <li>Delete a search job</li> <li>Retrieve a search job</li> <li>Retrieve all search jobs</li> </ul> </li> <li>Search Result<ul> <li>Retrieve all search results for a search job</li> </ul> </li> <li>User<ul> <li>Create an user</li> <li>Delete an user</li> <li>Retrieve an user</li> <li>Retrieve all users</li> <li>Update an user</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.spontit/","text":"<p>Spontit enables you to send push notifications without your app or website. You can create different channels and send push notifications to specific followers.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Spontit"},{"location":"workflow/integrations/nodes/workflow-nodes-base.spontit/#basic-operations","text":"<ul> <li>Push<ul> <li>Create a push notification</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.spontit/#example-usage","text":"<p>This workflow allows you to send daily weather updates via a push notification using the Spontit node. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Cron - OpenWeatherMap - Spontit</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.spontit/#1-cron-node","text":"<p>The Cron node will trigger the workflow daily at 9 AM.</p> <ol> <li>Click on Add Cron Time.</li> <li>Set hours to 9 in the Hour field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the Cron node is configured to trigger the workflow every day at 9 AM.</p> <p></p>","title":"1. Cron node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.spontit/#2-openweathermap-node-current-weather","text":"<p>This node will return data about the current weather in Berlin. To get the weather updates for your city, you can enter the name of your city instead.</p> <ol> <li>First of all, you'll have to enter credentials for the OpenWeatherMap node. You can find out how to do that here.</li> <li>Enter <code>berlin</code> in the City field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns data about the current weather in Berlin.</p> <p></p>","title":"2. OpenWeatherMap node (Current Weather)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.spontit/#3-spontit-node-create-push","text":"<p>This node will send a push notification with the weather update.</p> <ol> <li>First of all, you'll have to enter credentials for the Spontit node. You can find out how to do that here.</li> <li>Click on Add Field and select 'Title' from the dropdown list.</li> <li>Enter <code>Today's Weather Update</code> in the Title field.</li> <li> <p>Click on the gears icon next to the Content field and click on Add Expression.</p> </li> <li> <p>Enter the following message in the Expression field: <code>Hey! The temperature outside is {{$node[\"OpenWeatherMap\"].json[\"main\"][\"temp\"]}}\u00b0C.</code>.</p> </li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node sends a push notification with the weather update.</p> <p></p>  <p> Activate workflow for production</p> <p>This example workflow uses the Cron node, which is a Trigger node. You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Cron node.</p>","title":"3. Spontit node (create: push)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.spotify/","tags":["Workflow\u00b2","Spotify"],"text":"<p>Spotify is a music streaming service containing millions of music tracks and podcasts. Spotify allows users to create and manage their own playlists, explore new music through recommendation services, and listen to songs on demand.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Spotify"},{"location":"workflow/integrations/nodes/workflow-nodes-base.spotify/#basic-operations","tags":["Workflow\u00b2","Spotify"],"text":"<ul> <li>Album<ul> <li>Get an album by URI or ID.</li> <li>Get a list of new album releases.</li> <li>Get an album's tracks by URI or ID.</li> <li>Search albums by keyword.</li> </ul> </li> <li>Artist<ul> <li>Get an artist by URI or ID.</li> <li>Get an artist's albums by URI or ID.</li> <li>Get an artist's related artists by URI or ID.</li> <li>Get an artist's top tracks by URI or ID.</li> <li>Search artists by keyword.</li> </ul> </li> <li>Library<ul> <li>Get the user's liked tracks.</li> </ul> </li> <li>My Data<ul> <li>Get your followed artists.</li> </ul> </li> <li>Player<ul> <li>Add a song to your queue.</li> <li>Get your currently playing track.</li> <li>Skip to your next track.</li> <li>Pause your music.</li> <li>Skip to your previous song.</li> <li>Get your recently played tracks.</li> <li>Resume playback on the current active device.</li> <li>Set volume on the current active device.</li> <li>Start playing a playlist, artist, or album.</li> </ul> </li> <li>Playlist<ul> <li>Add tracks from a playlist by track and playlist URI or ID.</li> <li>Create a new playlist.</li> <li>Get a playlist by URI or ID.</li> <li>Get a playlist's tracks by URI or ID.</li> <li>Get a user's playlists.</li> <li>Remove tracks from a playlist by track and playlist URI or ID.</li> <li>Search playlists by keyword.</li> </ul> </li> <li>Track<ul> <li>Get a track by its URI or ID.</li> <li>Get audio features for a track by URI or ID.</li> <li>Search tracks by keyword</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.spotify/#example-usage","tags":["Workflow\u00b2","Spotify"],"text":"<p>This workflow allows you to add a song to your queue in Spotify. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - Spotify</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.spotify/#1-start-node","tags":["Workflow\u00b2","Spotify"],"text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.spotify/#2-spotify-node","tags":["Workflow\u00b2","Spotify"],"text":"<ol> <li>First of all, you'll have to enter credentials for the Spotify node. You can find out how to do that here.</li> <li>Enter the song's URI (or ID) to the Track ID field. The following GIF shows you how to find the Track ID on Spotify's UI.</li> <li>Click on Execute Node to run the workflow.</li> </ol> <p></p>","title":"2. Spotify node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.stackby%202/","text":"<p>Stackby is a real-time database and team collaboration platform.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Stackby"},{"location":"workflow/integrations/nodes/workflow-nodes-base.stackby%202/#basic-operations","text":"<ul> <li>Append</li> <li>Delete</li> <li>List</li> <li>Read</li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.stackby%202/#example-usage","text":"<p>This workflow allows you to insert and retrieve data from a table in Stackby. You can also find the workflow on n8n.io. This example usage workflow would use the following nodes. - Start - Set - Stackby</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.stackby%202/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.stackby%202/#2-set-node","text":"<p>We will use the Set node to set the values for the name and id fields for a new record.</p> <ol> <li>Click on the Add Value button and select 'Number' from the dropdown list.</li> <li>Enter <code>ID</code> in the Name field.</li> <li>Enter an id in the Value field.</li> <li>Click on the Add Value button and select 'String' from the dropdown list.</li> <li>Enter <code>Name</code> in the Name field.</li> <li>Enter a name in the Value field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node sets the value for <code>ID</code> and <code>Name</code>.</p> <p></p>","title":"2. Set node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.stackby%202/#3-stackby-node-append","text":"<p>This node will append the data that we set in the previous node to a table. Create a table like this in your Stackby stack.</p> <p>Copy the string of characters located after <code>/stack/</code> in your Stackby URL. This is your Stack ID. For example, if the URL is <code>https://stackby.com/stack/stabdcat4234324/</code>, the Stack ID will be <code>stabdcat4234324</code>.</p> <ol> <li>First of all, you'll have to enter credentials for the Stackby node. You can find out how to do that here.</li> <li>Paste the Stack ID in the Stack ID field.</li> <li>Enter the name of your table in the Table field.</li> <li>Enter <code>ID, Name</code> in the Columns field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node appends the data that we had set in the previous node.</p> <p></p>","title":"3. Stackby node (Append)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.stackby%202/#4-stackby1-node-list","text":"<p>This node will list all the records from a table.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'List' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Stack ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Stackby &gt; Parameters &gt; stackId. You can also add the following expression: <code>{{$node[\"Stackby\"].parameter[\"stackId\"]}}</code>.</li> <li>Click on the gears icon next to the Table field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Stackby &gt; Parameters &gt; table. You can also add the following expression: <code>{{$node[\"Stackby\"].parameter[\"table\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns all the entries that are stored in the table.</p> <p></p>","title":"4. Stackby1 node (List)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.stackby/","tags":["Workflow\u00b2","Stackby"],"text":"<p>Stackby is a real-time database and team collaboration platform.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Stackby"},{"location":"workflow/integrations/nodes/workflow-nodes-base.stackby/#basic-operations","tags":["Workflow\u00b2","Stackby"],"text":"<ul> <li>Append</li> <li>Delete</li> <li>List</li> <li>Read</li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.stackby/#example-usage","tags":["Workflow\u00b2","Stackby"],"text":"<p>This workflow allows you to insert and retrieve data from a table in Stackby. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Start - Set - Stackby</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.stackby/#1-start-node","tags":["Workflow\u00b2","Stackby"],"text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.stackby/#2-set-node","tags":["Workflow\u00b2","Stackby"],"text":"<p>We will use the Set node to set the values for the name and id fields for a new record.</p> <ol> <li>Click on the Add Value button and select 'Number' from the dropdown list.</li> <li>Enter <code>ID</code> in the Name field.</li> <li>Enter an id in the Value field.</li> <li>Click on the Add Value button and select 'String' from the dropdown list.</li> <li>Enter <code>Name</code> in the Name field.</li> <li>Enter a name in the Value field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node sets the value for <code>ID</code> and <code>Name</code>.</p> <p></p>","title":"2. Set node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.stackby/#3-stackby-node-append","tags":["Workflow\u00b2","Stackby"],"text":"<p>This node will append the data that we set in the previous node to a table. Create a table like this in your Stackby stack.</p> <p>Copy the string of characters located after <code>/stack/</code> in your Stackby URL. This is your Stack ID. For example, if the URL is <code>https://stackby.com/stack/stabdcat4234324/</code>, the Stack ID will be <code>stabdcat4234324</code>.</p> <ol> <li>First of all, you'll have to enter credentials for the Stackby node. You can find out how to do that here.</li> <li>Paste the Stack ID in the Stack ID field.</li> <li>Enter the name of your table in the Table field.</li> <li>Enter <code>ID, Name</code> in the Columns field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node appends the data that we had set in the previous node.</p> <p></p>","title":"3. Stackby node (Append)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.stackby/#4-stackby1-node-list","tags":["Workflow\u00b2","Stackby"],"text":"<p>This node will list all the records from a table.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'List' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Stack ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Stackby &gt; Parameters &gt; stackId. You can also add the following expression: <code>{{$node[\"Stackby\"].parameter[\"stackId\"]}}</code>.</li> <li>Click on the gears icon next to the Table field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Stackby &gt; Parameters &gt; table. You can also add the following expression: <code>{{$node[\"Stackby\"].parameter[\"table\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns all the entries that are stored in the table.</p> <p></p>","title":"4. Stackby1 node (List)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.storyblok%202/","text":"<p>Storyblok is a headless content management system with a visual editor. It provides developers with all the flexibility they need to build reliable and fast websites, while giving content creators with no coding skills the ability to edit content independently of the developer.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Storyblok"},{"location":"workflow/integrations/nodes/workflow-nodes-base.storyblok%202/#basic-operations","text":"","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.storyblok%202/#content-api","text":"<p>Story - Get a story - Get all stories</p>","title":"Content API"},{"location":"workflow/integrations/nodes/workflow-nodes-base.storyblok%202/#management-api","text":"<p>Story - Delete a story - Get a story - Get all stories - Publish a story - Unpublish a story</p>","title":"Management API"},{"location":"workflow/integrations/nodes/workflow-nodes-base.storyblok%202/#example-usage","text":"<p>This workflow allows you to get all the stories that have the slug starting with <code>release</code> and publish them using the Storyblok node. You can also find the workflow on n8n.io. This example usage workflow would use the following nodes. - Start - Storyblok</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.storyblok%202/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.storyblok%202/#2-storyblok-node-getall-story","text":"<p>This node will get all the stories that have a slug starting with <code>release</code>. </p> <ol> <li>Select 'Management API' from the Source dropdown list.</li> <li>You'll have to enter credentials for the Storyblok node. You can find out how to do that here.</li> <li>Select 'Get All' from the Operation dropdown list.</li> <li>Select a space from the Space ID dropdown list.</li> <li>Click on the Add Filter button.</li> <li>Enter <code>release</code> in the Starts With field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns all the stories that have a slug starting with <code>release</code>.</p> <p></p>","title":"2. Storyblok node (getAll: story)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.storyblok%202/#3-storyblok1-node-publish-story","text":"<p>This node will publish the stories that were returned by the previous node.</p> <ol> <li>Select 'Management API' from the Source dropdown list.</li> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Publish' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Space ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Storyblok &gt; Parameters &gt; space. You can also add the following expression: <code>{{$node[\"Storyblok\"].parameter[\"space\"]}}</code>.</li> <li>Click on the gears icon next to the Story ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Storyblok &gt; Output Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$node[\"Storyblok\"].json[\"id\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node publishes the stories that were returned by the previous node.</p> <p></p>","title":"3. Storyblok1 node (publish: story)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.storyblok/","tags":["Workflow\u00b2","Storyblok"],"text":"<p>Storyblok is a headless content management system with a visual editor. It provides developers with all the flexibility they need to build reliable and fast websites, while giving content creators with no coding skills the ability to edit content independently of the developer.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Storyblok"},{"location":"workflow/integrations/nodes/workflow-nodes-base.storyblok/#basic-operations","tags":["Workflow\u00b2","Storyblok"],"text":"","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.storyblok/#content-api","tags":["Workflow\u00b2","Storyblok"],"text":"<p>Story - Get a story - Get all stories</p>","title":"Content API"},{"location":"workflow/integrations/nodes/workflow-nodes-base.storyblok/#management-api","tags":["Workflow\u00b2","Storyblok"],"text":"<p>Story - Delete a story - Get a story - Get all stories - Publish a story - Unpublish a story</p>","title":"Management API"},{"location":"workflow/integrations/nodes/workflow-nodes-base.storyblok/#example-usage","tags":["Workflow\u00b2","Storyblok"],"text":"<p>This workflow allows you to get all the stories that have the slug starting with <code>release</code> and publish them using the Storyblok node. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Start - Storyblok</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.storyblok/#1-start-node","tags":["Workflow\u00b2","Storyblok"],"text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.storyblok/#2-storyblok-node-getall-story","tags":["Workflow\u00b2","Storyblok"],"text":"<p>This node will get all the stories that have a slug starting with <code>release</code>. </p> <ol> <li>Select 'Management API' from the Source dropdown list.</li> <li>You'll have to enter credentials for the Storyblok node. You can find out how to do that here.</li> <li>Select 'Get All' from the Operation dropdown list.</li> <li>Select a space from the Space ID dropdown list.</li> <li>Click on the Add Filter button.</li> <li>Enter <code>release</code> in the Starts With field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns all the stories that have a slug starting with <code>release</code>.</p> <p></p>","title":"2. Storyblok node (getAll: story)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.storyblok/#3-storyblok1-node-publish-story","tags":["Workflow\u00b2","Storyblok"],"text":"<p>This node will publish the stories that were returned by the previous node.</p> <ol> <li>Select 'Management API' from the Source dropdown list.</li> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Publish' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Space ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Storyblok &gt; Parameters &gt; space. You can also add the following expression: <code>{{$node[\"Storyblok\"].parameter[\"space\"]}}</code>.</li> <li>Click on the gears icon next to the Story ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Storyblok &gt; Output Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$node[\"Storyblok\"].json[\"id\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node publishes the stories that were returned by the previous node.</p> <p></p>","title":"3. Storyblok1 node (publish: story)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.strapi/","tags":["Workflow\u00b2","Strapi"],"text":"<p>Strapi is an open-source Headless CMS that gives developers the freedom to choose their tools and frameworks while also allowing editors to easily manage and distribute their content.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>   <p> Strapi Version 4</p> <p>The Strapi node node was built for Strapi version 3. Some of its operations will not work with Strapi version 4.</p>","title":"Strapi"},{"location":"workflow/integrations/nodes/workflow-nodes-base.strapi/#basic-operations","tags":["Workflow\u00b2","Strapi"],"text":"<ul> <li>Entry<ul> <li>Create an entry</li> <li>Delete an entry</li> <li>Get an entry</li> <li>Get all entries</li> <li>Update an entry</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.strapi/#example-usage","tags":["Workflow\u00b2","Strapi"],"text":"<p>This workflow allows you to create, update, and get an entry in Strapi. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Start - Set - Strapi</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.strapi/#1-start-node","tags":["Workflow\u00b2","Strapi"],"text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.strapi/#2-set-node","tags":["Workflow\u00b2","Strapi"],"text":"<p>We will use the Set node to set the title, content, and description for an entry of the content type <code>Post</code>. If you have a different content type in Strapi, set the values accordingly.</p> <ol> <li>Click on Add Value and select 'String' from the dropdown list.</li> <li>Enter <code>Title</code> in the Name field.</li> <li>Enter <code>Automate Strapi with n8n</code> in the Value field.</li> <li>Click on Add Value and select 'String' from the dropdown list.</li> <li>Enter <code>Content</code> in the Name field.</li> <li>Enter <code>Strapi is a headless CMS. We will use Strapi and Doc\u00b2 to automate our content creation workflows.</code> in the Value field.</li> <li>Click on Add Value and select 'String' from the dropdown list.</li> <li>Enter <code>Description</code> in the Name field.</li> <li>Enter <code>Learn how to automate Strapi with Workflow\u00b2.</code> in the Value field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that node sets the value for title, content, and description.</p> <p></p>","title":"2. Set node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.strapi/#2-strapi-node-create-entry","tags":["Workflow\u00b2","Strapi"],"text":"<p>This node will create an entry for the content type <code>posts</code>. If you have a different content type, use that content type instead.</p> <ol> <li>First of all, you'll have to enter credentials for the Strapi node. You can find out how to do that here.</li> <li>Select 'Create' from the Operation dropdown list.</li> <li>Enter <code>posts</code> in the Content Type field.</li> <li>Enter <code>Title, Content, Description</code> in the Columns field. If you want to add data for other columns, enter those column names.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node creates a new entry in Strapi using the information from the previous node.</p> <p></p>","title":"2. Strapi node (create: entry)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.strapi/#3-set1-node","tags":["Workflow\u00b2","Strapi"],"text":"<p>We will use the Set node to ensure that only the data that we set in this node gets passed on to the next nodes in the workflow. We will set the value of <code>id</code> and <code>slug</code> in this node.</p> <ol> <li>Click on Add Value and select 'String' from the dropdown list.</li> <li>Enter <code>id</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Strapi &gt; Output Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$node[\"Strapi\"].json[\"id\"]}}</code>.</li> <li>Click on Add Value and select 'String' from the dropdown list.</li> <li>Enter <code>slug</code> in the Name field.</li> <li>Enter <code>automate-strapi-with-n8n</code> in the Value field.</li> <li>Toggle Keep Only Set to <code>true</code>. We set this option to true to ensure that only the data that we have set in this node get passed on to the next nodes in the workflow.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node sets the values of <code>id</code> and <code>slug</code>. These values are passed to the next node in the workflow.</p> <p></p>","title":"3. Set1 node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.strapi/#4-strapi1-node-update-entry","tags":["Workflow\u00b2","Strapi"],"text":"<p>This node will update the slug for the entry that we created using the Strapi node.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Update' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Content Type field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Strapi &gt; Parameters &gt; contentType. You can also add the following expression: <code>{{$node[\"Strapi\"].parameter[\"contentType\"]}}</code>.</li> <li>Enter <code>id</code> in the Update Key field.</li> <li>Enter <code>slug</code> in the Columns field. If you want to update a different column, enter that column name instead.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node adds a slug to the entry that we created using the Strapi node.</p> <p></p>","title":"4. Strapi1 node (update: entry)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.strapi/#5-strapi2-node-get-entry","tags":["Workflow\u00b2","Strapi"],"text":"<p>This node returns information about the entry that we created using the Strapi node.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Click on the gears icon next to the Content Type field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Strapi &gt; Parameters &gt; contentType. You can also add the following expression: <code>{{$node[\"Strapi\"].parameter[\"contentType\"]}}</code>.</li> <li>Click on the gears icon next to the Entry ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Strapi &gt; Output Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$node[\"Strapi1\"].json[\"id\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns information about the entry that we specified.</p> <p></p>","title":"5. Strapi2 node (get: entry)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.strava/","tags":["Workflow\u00b2","Strava"],"text":"<p>Strava is an internet service for tracking human exercise which incorporates social network features.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Strava"},{"location":"workflow/integrations/nodes/workflow-nodes-base.strava/#basic-operations","tags":["Workflow\u00b2","Strava"],"text":"<ul> <li>Activity<ul> <li>Create a new activity</li> <li>Get an activity</li> <li>Get all activities</li> <li>Get all activity comments</li> <li>Get all activity kudos</li> <li>Get all activity laps</li> <li>Get all activity zones</li> <li>Update an activity</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.strava/#example-usage","tags":["Workflow\u00b2","Strava"],"text":"<p>This workflow allows you to create, update, and get an activity in Strava. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Start - Strava</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.strava/#1-start-node","tags":["Workflow\u00b2","Strava"],"text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.strava/#2-strava-node-create-activity","tags":["Workflow\u00b2","Strava"],"text":"<p>This node will create an activity with the name <code>Morning Run</code> in Strava. To create an activity with a different name, you can enter the name of your activity instead.</p> <ol> <li>First of all, you'll have to enter credentials for the Strava node. You can find out how to do that here.</li> <li>Enter <code>Morning Run</code> in the Name field.</li> <li>Enter <code>Run</code> in the Type field.</li> <li>Select the date and time in the Start Date field.</li> <li>Set Elapsed Time (Seconds) to <code>3600</code>.</li> <li>Click on the Add Field button and select 'Distance' from the dropdown list.</li> <li>Set Distance to <code>1000</code>. Strava measures distance in meters.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node creates an activity with the name <code>Morning Run</code> and type <code>Run</code>.</p> <p></p>","title":"2. Strava node (create: activity)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.strava/#3-strava1-node-update-activity","tags":["Workflow\u00b2","Strava"],"text":"<p>This node will update the activity that we created in the previous node.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Update' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Activity ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Strava &gt; Output Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$node[\"Strava\"].json[\"id\"]}}</code>.</li> <li>Click on the Add Field button and select 'Description' from the dropdown list.</li> <li>Enter the description of the activity in the Description field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node adds a description to the activity that we created using the Strava node.</p> <p></p>","title":"3. Strava1 node (update: activity)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.strava/#4-strava2-node-get-activity","tags":["Workflow\u00b2","Strava"],"text":"<p>This node returns the information of the activity that we created using the Strava node.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Get' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Activity ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Strava &gt; Output Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$node[\"Strava\"].json[\"id\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns the information of the activity that we specified in this node.</p> <p></p>","title":"4. Strava2 node (get: activity)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.stripe/","tags":["Workflow\u00b2","Stripe"],"text":"<p>Stripe offers payment processing software and application programming interfaces for e-commerce websites and mobile applications.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Stripe"},{"location":"workflow/integrations/nodes/workflow-nodes-base.stripe/#basic-operations","tags":["Workflow\u00b2","Stripe"],"text":"<ul> <li>Balance<ul> <li>Get a balance</li> </ul> </li> <li>Charge<ul> <li>Create a charge</li> <li>Get a charge</li> <li>Get all charges</li> <li>Update a charge</li> </ul> </li> <li>Coupon<ul> <li>Create a coupon</li> <li>Get all coupons</li> </ul> </li> <li>Customer<ul> <li>Create a customer</li> <li>Delete a customer</li> <li>Get a customer</li> <li>Get all customers</li> <li>Update a customer</li> </ul> </li> <li>Customer Card<ul> <li>Add a customer card</li> <li>Get a customer card</li> <li>Remove a customer card</li> </ul> </li> <li>Source<ul> <li>Create a source</li> <li>Delete a source</li> <li>Get a source</li> </ul> </li> <li>Token<ul> <li>Create a token</li> </ul> </li> </ul>","title":"Basic operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.stripe/#example","tags":["Workflow\u00b2","Stripe"],"text":"<p>This workflow allows you to create a new customer, create a card token, and associate this token as that customer's card. This example usage workflow would use the following nodes. - Start - Stripe</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example"},{"location":"workflow/integrations/nodes/workflow-nodes-base.stripe/#1-start-node","tags":["Workflow\u00b2","Stripe"],"text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.stripe/#2-stripe-node","tags":["Workflow\u00b2","Stripe"],"text":"<ol> <li>First enter your Stripe API credentials. You can learn how to create that here.</li> <li>Fill in the remaining parameters as follows:<ul> <li>Resource: Select the entity you want to work with, Customer in this example.</li> <li>Operation: Select the action to perform, Create in this example.</li> <li>Name: Enter the customer name.</li> <li>Additional Fields: Provide any further details, available options are: Address, Description, Email, Metadata, and Shipping. </li> <li>Type: The type of token to create, Card Token by default.</li> </ul> </li> </ol> <p></p>","title":"2. Stripe node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.stripe/#3-stripe1-node","tags":["Workflow\u00b2","Stripe"],"text":"<ol> <li>First enter your Stripe API credentials as with the first node.</li> <li>Fill in the remaining parameters as follows:<ul> <li>Resource: Select the entity you want to work with, Token in this example.</li> <li>Operation: Select the action to perform, Create in this example.</li> <li>Type: The type of token to create, Card Token by default.</li> <li>Card Number: Enter the customer credit card number.</li> <li>CVC: Enter the security code for this card.</li> <li>Expiration Month: Enter the expiration month for this card.</li> <li>Expiration Year: Enter the expiration year for this card.</li> </ul> </li> </ol> <p></p>","title":"3. Stripe1 node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.stripe/#4-stripe2-node","tags":["Workflow\u00b2","Stripe"],"text":"<ol> <li>First enter your Stripe API credentials as with the previous node.</li> <li>Fill in the remaining parameters as follows:<ul> <li>Resource: Select the entity you want to work with, Customer Card in this example.</li> <li>Operation: Select the action to perform, Add in this example.</li> <li>Customer ID: Enter the customer ID generated by the first node.</li> <li>Card Token: Enter the token generated by the second node.</li> <li>Type: The type of token to create, Card Token by default.</li> </ul> </li> </ol> <p></p>","title":"4. Stripe2 node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.sugarcrm/","tags":["Workflow\u00b2","SugarCRM","Sugar"],"text":"<p>SugarCRM offers a feature rich platform to manage customer relationships.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"SugarCRM"},{"location":"workflow/integrations/nodes/workflow-nodes-base.sugarcrm/#basic-operations","tags":["Workflow\u00b2","SugarCRM","Sugar"],"text":"<p>Currently implemented operations.</p> <ul> <li>Contact<ul> <li>Create a contact</li> <li>Get all contacts</li> <li>Delete a contact</li> </ul> </li> <li>Company<ul> <li>Create a company</li> <li>Get all companys</li> <li>Delete a company</li> </ul> </li> <li>Lead<ul> <li>Create a lead</li> <li>Get all leads</li> <li>Delete a lead</li> </ul> </li> <li>Activity<ul> <li>Create an activity</li> <li>Get all activities</li> <li>Delete an activity</li> </ul> </li> </ul>","title":"Basic operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.supabase/","tags":["Workflow\u00b2","Supabase"],"text":"<p>Supabase is an open source Firebase alternative.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Supabase"},{"location":"workflow/integrations/nodes/workflow-nodes-base.supabase/#basic-operations","tags":["Workflow\u00b2","Supabase"],"text":"<ul> <li>Row<ul> <li>Create a new row</li> <li>Delete a row</li> <li>Get a row</li> <li>Get all rows</li> <li>Update a row</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.syncroMsp/","tags":["Workflow\u00b2","SyncroMSP"],"text":"<p>SyncroMSP is a cloud-based remote monitoring and management platform (RMM).</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"SyncroMSP"},{"location":"workflow/integrations/nodes/workflow-nodes-base.syncroMsp/#basic-operations","tags":["Workflow\u00b2","SyncroMSP"],"text":"<ul> <li>Contact<ul> <li>Create new contact</li> <li>Delete contact</li> <li>Retrieve contact</li> <li>Retrieve all contacts</li> <li>Update contact</li> </ul> </li> <li>Customer<ul> <li>Create new customer</li> <li>Delete customer</li> <li>Retrieve customer</li> <li>Retrieve all customers</li> <li>Update customer</li> </ul> </li> <li>RMM<ul> <li>Create new RMM Alert</li> <li>Delete RMM Alert</li> <li>Retrieve RMM Alert</li> <li>Retrieve all RMM Alerts</li> <li>Mute RMM Alert</li> </ul> </li> <li>Ticket<ul> <li>Create new ticket</li> <li>Delete ticket</li> <li>Retrieve ticket</li> <li>Retrieve all tickets</li> <li>Update ticket</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.taiga/","tags":["Workflow\u00b2","Taiga"],"text":"<p>Taiga is a free and open-source project management platform for startups, agile developers, and designers.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Taiga"},{"location":"workflow/integrations/nodes/workflow-nodes-base.taiga/#basic-operations","tags":["Workflow\u00b2","Taiga"],"text":"<p>Issue - Create an issue - Delete an issue - Get an issue - Get all issues - Update an issue</p>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.taiga/#example-usage","tags":["Workflow\u00b2","Taiga"],"text":"<p>This workflow allows you to create, update, and get an issue on Taiga. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Start - Taiga</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.taiga/#1-start-node","tags":["Workflow\u00b2","Taiga"],"text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.taiga/#2-taiga-node-create-issue","tags":["Workflow\u00b2","Taiga"],"text":"<ol> <li>First of all, you'll have to enter credentials for the Taiga node. You can find out how to do that here.</li> <li>Select the project ID from the Project ID dropdown list.</li> <li>Enter the subject of the issue in the Subject field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p></p>","title":"2. Taiga node (create: issue)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.taiga/#3-taiga1-node-update-issue","tags":["Workflow\u00b2","Taiga"],"text":"<ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Update' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Project ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Taiga &gt; Output Data &gt; JSON &gt; project. You can also add the following expression: <code>{{$node[\"Taiga\"].json[\"project\"]}}</code>.</li> <li>Click on the gears icon next to the Issue ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Taiga &gt; Output Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$node[\"Taiga\"].json[\"id\"]}}</code>.</li> <li>Click on the Add Field button and select 'Description' from the dropdown list.</li> <li>Enter the description of the issue in the Description field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p></p>","title":"3. Taiga1 node (update: issue)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.taiga/#4-taiga2-node-get-issue","tags":["Workflow\u00b2","Taiga"],"text":"<ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Get' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Issue ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Taiga &gt; Output Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$node[\"Taiga\"].json[\"id\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p></p>","title":"4. Taiga2 node (get: issue)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.tapfiliate/","tags":["Workflow\u00b2","Tapfiliate"],"text":"<p>Tapfiliate allows you to create, track, and grow your affiliate marketing programs.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Tapfiliate"},{"location":"workflow/integrations/nodes/workflow-nodes-base.tapfiliate/#basic-operations","tags":["Workflow\u00b2","Tapfiliate"],"text":"<ul> <li>Affiliate<ul> <li>Create an affiliate</li> <li>Delete an affiliate</li> <li>Get an affiliate by ID</li> <li>Get all affiliates</li> </ul> </li> <li>Affiliate Metadata<ul> <li>Add metadata to affiliate</li> <li>Remove metadata from affiliate</li> <li>Update affiliate's metadata</li> </ul> </li> <li>Program Affiliate<ul> <li>Add affiliate to program</li> <li>Approve an affiliate for a program</li> <li>Disapprove an affiliate</li> <li>Get an affiliate in a program</li> <li>Get all affiliates in program</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.tapfiliate/#example-usage","tags":["Workflow\u00b2","Tapfiliate"],"text":"<p>This workflow allows you to create an affiliate, add metadata, and add the affiliate to a program. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Start - Tapfiliate</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.tapfiliate/#1-start-node","tags":["Workflow\u00b2","Tapfiliate"],"text":"<p>The Start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.tapfiliate/#2-tapfiliate-node-createaffiliate","tags":["Workflow\u00b2","Tapfiliate"],"text":"<p>This node will create an affiliate in Tapfiliate.</p> <ol> <li>First of all, you'll have to enter credentials for the Tapfiliate node. You can find out how to do that here.</li> <li>Enter an email address in the Email field.</li> <li>Enter the first name of the affiliate in the First Name field.</li> <li>Enter the last name of the affiliate in the Last Name field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node creates an affiliate in Tapfiliate.</p> <p></p>","title":"2. Tapfiliate node (create:affiliate)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.tapfiliate/#3-tapfiliate1-node-addaffiliatemetadata","tags":["Workflow\u00b2","Tapfiliate"],"text":"<p>This node will add metadata to the affiliate that we created with the previous node.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Affiliate Metadata' from the Resource dropdown list.</li> <li>Select 'Add' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Affiliate ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$json[\"id\"]}}</code>.</li> <li>Click on the Add Metadata button.</li> <li>Enter <code>tag</code> in the Key field.</li> <li>Enter <code>n8n</code> in the Value field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node adds the metadata to the affiliate that we created with the previous node.</p> <p></p>","title":"3. Tapfiliate1 node (add:affiliateMetadata)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.tapfiliate/#4-tapfiliate2-node-getcontact","tags":["Workflow\u00b2","Tapfiliate"],"text":"<p>This node will add the affiliate that we created with the Tapfiliate node to an affiliate program.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Program Affiliate' from the Resource dropdown list.</li> <li>Select 'Add' from the Operation dropdown list.</li> <li>Select a program from the Program ID dropdown list.</li> <li>Click on the gears icon next to the Affiliate ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Tapfiliate &gt; Output Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$node[\"Tapfiliate\"].json[\"id\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node adds the affiliate to a program.</p> <p></p>","title":"4. Tapfiliate2 node (get:contact)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.telegram/","tags":["Workflow\u00b2","Telegram"],"text":"<p>Telegram is a cloud-based instant messaging and voice-over-IP service.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Telegram"},{"location":"workflow/integrations/nodes/workflow-nodes-base.telegram/#basic-operations","tags":["Workflow\u00b2","Telegram"],"text":"<ul> <li>Chat<ul> <li>Get up to date information about a chat.</li> <li>Leave a group, supergroup or channel.</li> <li>Get the member of a chat.</li> <li>Set the description of a chat.</li> <li>Set the title of a chat.</li> </ul> </li> <li>Callback<ul> <li>Send answer to callback query sent from inline keyboard.</li> <li>Send answer to callback query sent from inline bot.</li> </ul> </li> <li>File<ul> <li>Get a file.</li> </ul> </li> <li>Message<ul> <li>Delete a chat message</li> <li>Edit a text message</li> <li>Pin a chat message</li> <li>Send an animated file</li> <li>Send a audio file</li> <li>Send a chat action</li> <li>Send a document</li> <li>Send a location</li> <li>Send group of photos or videos to album</li> <li>Send a text message</li> <li>Send a photo</li> <li>Send a sticker</li> <li>Send a video</li> <li>Unpin a chat message</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.telegram/#example-usage","tags":["Workflow\u00b2","Telegram"],"text":"<p>This workflow allows you to send a cocktail recipe to a specified chat ID every day via a Telegram bot. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Cron - HTTP Request - Telegram</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.telegram/#1-cron-node","tags":["Workflow\u00b2","Telegram"],"text":"<p>The Cron node will trigger the workflow daily at 8 PM.</p> <ol> <li>Click on Add Cron Time.</li> <li>Set hours to <code>20</code> in the Hour field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the Cron node is configured to trigger the workflow every day at 8 PM.</p> <p></p>","title":"1. Cron node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.telegram/#2-http-request-node-get","tags":["Workflow\u00b2","Telegram"],"text":"<p>This node will make a GET request to the API <code>https://www.thecocktaildb.com/api/json/v1/1/random.php</code> to fetch a random cocktail. This information gets passed on to the next node in the workflow.</p> <ol> <li>Enter <code>https://www.thecocktaildb.com/api/json/v1/1/random.php</code> in the URL field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node makes a GET request to the API and returns information about a random cocktail.</p> <p></p>","title":"2. HTTP Request node (GET)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.telegram/#3-telegram-node-sendphoto-message","tags":["Workflow\u00b2","Telegram"],"text":"<p>This node will send a message on Telegram with an image and the recipe of the cocktail that we got from the previous node.</p> <ol> <li> <p>First of all, you'll have to enter credentials for the Telegram node. You can find out how to do that here.</p> </li> <li> <p>Select 'Send Photo' from the Operation dropdown list.</p> </li> <li>Enter the target chat ID in the Chat ID field. Refer to the FAQs to learn how to get the chat ID.</li> <li>Click on the gears icon next to the Photo field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; HTTP Request &gt; Output Data &gt; JSON &gt; drinks &gt; [item: 0] &gt; strDrinkThumb. You can also add the following expression: <code>{{$node[\"HTTP Request\"].json[\"drinks\"][0][\"strDrinkThumb\"]}}</code>.</li> <li>Click on Add Field and select 'Caption' from the dropdown list.</li> <li>Click on the gears icon next to the Caption field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; HTTP Request &gt; Output Data &gt; JSON &gt; drinks &gt; [item: 0] &gt; strInstructions. You can also add the following expression: <code>{{$node[\"HTTP Request\"].json[\"drinks\"][0][\"strInstructions\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node sends a message on Telegram with an image and the recipe of the cocktail.</p> <p></p>  <p> Activate workflow for production</p> <p>This example workflow uses the Cron node, which is a Trigger node. You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Cron node.</p>","title":"3. Telegram node (sendPhoto: message)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.telegram/#faqs","tags":["Workflow\u00b2","Telegram"],"text":"","title":"FAQs"},{"location":"workflow/integrations/nodes/workflow-nodes-base.telegram/#how-can-i-send-more-than-30-messages-per-second","tags":["Workflow\u00b2","Telegram"],"text":"<p>The Telegram API has a limitation of sending only 30 messages per second. Follow the steps mentioned below to send more than 30 messages: 1. Split In Batches node: Use the Split in Batches node to get at most 30 chat IDs from your database. 2. Telegram node: Connect the Telegram node with the Split In Batches node. Use the Expression Editor to select the Chat IDs from the Split in Batches node. 3. Function node: Connect the Function node with the Telegram node. Use the Function node to wait for a few seconds before fetching the next batch of chat IDs. Connect this node with the Split In Batches node.</p> <p>You can also use this workflow.</p>","title":"How can I send more than 30 messages per second?"},{"location":"workflow/integrations/nodes/workflow-nodes-base.telegram/#how-do-i-add-a-bot-to-a-telegram-channel","tags":["Workflow\u00b2","Telegram"],"text":"<ol> <li>In the Telegram app, access the target channel and tap on the channel name.</li> <li>Make sure that the channel name is labeled as \"public channel\".</li> <li>Tap on Administrators and then on Add Admin.</li> <li>Search for the username of the bot and select it.</li> <li>Tap on the checkmark on the top-right corner to add the bot to the channel.</li> </ol>","title":"How do I add a bot to a Telegram channel?"},{"location":"workflow/integrations/nodes/workflow-nodes-base.telegram/#how-do-i-get-the-chat-id","tags":["Workflow\u00b2","Telegram"],"text":"<p>There are two ways to get the Chat ID in Telegram.</p> <ul> <li>Using the Telegram Trigger node: On successful execution, the Telegram Trigger node returns a Chat ID. You can use the Telegram Trigger node in your workflow to get a Chat ID.</li> <li>Using the <code>@RawDataBot</code>: The <code>@RawDataBot</code> returns the raw data of the chat with a Chat ID. Invite the <code>@RawDataBot</code> to your channel/group, and upon joining, it will output a Chat ID along with other information. Be sure to remove the <code>@RawDataBot</code> from your group/channel afterwards.</li> </ul>","title":"How do I get the Chat ID?"},{"location":"workflow/integrations/nodes/workflow-nodes-base.theHive/","tags":["Workflow\u00b2","TheHive"],"text":"<p>TheHive is a scalable open-source and free security incident response platform.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"TheHive"},{"location":"workflow/integrations/nodes/workflow-nodes-base.theHive/#basic-operations","tags":["Workflow\u00b2","TheHive"],"text":"<p>Alert - Count alerts - Create an alert - Execute a responder on a specified alert - Get an alert - Get all alerts - Mark an alert as read - Mark an alert as unread - Merge an alert into an existing case - Promote an alert into a case - Update an alert</p> <p>Case - Count cases - Create a case - Execute a responder on a specified case - Get all cases - Get a single case - Update a case</p> <p>Log - Create a task log - Execute a responder on a selected log - Get all task logs - Get a single log</p> <p>Observable - Count observables - Create an observable - Execute an analyzer - Execute a responder on selected observable - Get all observables of a specific case - Get a single observable - Search observables - Update an observable</p> <p>Task - Count tasks - Create a task - Execute a responder on a specified task - Get a single task - Search tasks - Update a task</p>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.theHive/#example-usage","tags":["Workflow\u00b2","TheHive"],"text":"<p>This workflow allows you to create, update, and get a case in TheHive. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Start - TheHive</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.theHive/#1-start-node","tags":["Workflow\u00b2","TheHive"],"text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.theHive/#2-thehive-node-create-case","tags":["Workflow\u00b2","TheHive"],"text":"<p>This node will create a new case in TheHive with the title <code>n8n</code> and set its severity to <code>low</code>. You can create a case with a different title and severity.</p> <ol> <li>First of all, you'll have to enter credentials for the TheHive node. You can find out how to do that here.</li> <li>Select 'Case' from the Resource dropdown list.</li> <li>Select 'Create' from the Operation dropdown list.</li> <li>Enter a title in the Title field.</li> <li>Enter a description in the Description field.</li> <li>Select 'Low' from the Severity dropdown list.</li> <li>Set the start date in the Start Date field.</li> <li>Enter a case owner in the Owner field.</li> <li>Enter tags in the Tags field. You can enter multiple tags separate by a comma.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node creates a new case with the title <code>n8n</code> and <code>low</code> severity .</p> <p></p>","title":"2. TheHive node (create: case)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.theHive/#3-thehive-node-update-case","tags":["Workflow\u00b2","TheHive"],"text":"<p>This node will update the case that we created in the previous node. We will update the severity of the case.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Case' from the Resource dropdown list.</li> <li>Select 'Update' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Case ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; TheHive &gt; Output Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$node[\"TheHive\"].json[\"id\"]}}</code>.</li> <li>Click on Add Field and select 'Severity' from the dropdown list.</li> <li>Select 'High' from the Severity dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node updates the severity of the case that we created in the previous node.</p> <p></p>","title":"3. TheHive node (update: case)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.theHive/#4-thehive-node-get-case","tags":["Workflow\u00b2","TheHive"],"text":"<p>This node will return the information of the case that we created in the previous node.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Case' from the Resource dropdown list.</li> <li>Select 'Get' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Case ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; TheHive &gt; Output Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$node[\"TheHive\"].json[\"id\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns the information of the case that we created earlier.</p> <p></p>","title":"4. TheHive node (get: case)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.timescaleDb/","tags":["Workflow\u00b2","TimescaleDB"],"text":"<p>TimescaleDB is an open-source time-series SQL database optimized for fast ingest and complex queries.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"TimescaleDB"},{"location":"workflow/integrations/nodes/workflow-nodes-base.timescaleDb/#basic-operations","tags":["Workflow\u00b2","TimescaleDB"],"text":"<ul> <li>Execute an SQL query</li> <li>Insert rows in database</li> <li>Update rows in database</li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.timescaleDb/#example-usage","tags":["Workflow\u00b2","TimescaleDB"],"text":"<p>This workflow allows you to receive updates of the position of the ISS every minute and insert it to a table using the TimscaleDB node. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Cron - HTTP Request - Set - TimescaleDB</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.timescaleDb/#1-cron-node","tags":["Workflow\u00b2","TimescaleDB"],"text":"<p>The Cron node will trigger the workflow every minute.</p> <ol> <li>Click on Add Cron Time.</li> <li>Select 'Every Minute' from the Mode dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the Cron node is configured to trigger the workflow every minute.</p> <p></p>","title":"1. Cron node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.timescaleDb/#2-http-request-node-get","tags":["Workflow\u00b2","TimescaleDB"],"text":"<p>This node will make a GET request to the API <code>https://api.wheretheiss.at/v1/satellites/25544/positions</code> to fetch the position of the ISS. This information gets passed on to the next node in the workflow.</p> <ol> <li>Enter <code>https://api.wheretheiss.at/v1/satellites/25544/positions</code> in the URL field.</li> <li>Click on the Add Parameter button in the Query Parameters section.</li> <li>Enter <code>timestamps</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Enter the following expression: <code>{{Date.now()}}</code>. This expression will return the current timestamp.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node makes a GET request to the API and returns the information about the location of the ISS.</p> <p></p>","title":"2. HTTP Request node (GET)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.timescaleDb/#3-set-node","tags":["Workflow\u00b2","TimescaleDB"],"text":"<p>We will use the Set node to ensure that only the data that we set in this node gets passed on to the next nodes in the workflow.</p> <ol> <li>Click on Add Value and select 'String' from the dropdown list.</li> <li>Enter <code>latitude</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; 0 &gt; latitude. You can also add the following expression: <code>{{$json[\"0\"][\"latitude\"]}}</code>.</li> <li>Click on Add Value and select 'String' from the dropdown list.</li> <li>Enter <code>longitude</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; 0 &gt; longitude. You can also add the following expression: <code>{{$json[\"0\"][\"longitude\"]}}</code>.</li> <li>Click on Add Value and select 'String' from the dropdown list.</li> <li>Enter <code>timestamp</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; 0 &gt; timpestamp. You can also add the following expression: <code>{{$json[\"0\"][\"timestamp\"]}}</code>.</li> <li>Toggle Keep Only Set to <code>true</code>. We set this option to true to ensure that only the data that we have set in this node get passed on to the next nodes in the workflow.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node uses the data from the previous node and returns the data that we set for the workflow.</p> <p></p>","title":"3. Set node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.timescaleDb/#4-timescaledb-node-insert","tags":["Workflow\u00b2","TimescaleDB"],"text":"<p>We will insert the data from the previous node to a table named <code>iss</code>. To create the table, use the following SQL command. <pre><code>CREATE TABLE iss(latitude NUMERIC, longitude NUMERIC, timestamp NUMERIC);\n</code></pre> </p> <ol> <li>First of all, you'll have to enter credentials for the TimescaleDB node. You can find out how to do that here.</li> <li>Enter <code>iss</code> in the Table field.</li> <li>Enter <code>latitude, longitude, timestamp</code> in the Columns field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node inserts the data from the previous node to the <code>iss</code> table in TimescaleDB.</p> <p></p>  <p> Activate workflow for production</p> <p>This example workflow uses the Cron node, which is a Trigger node. You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Cron node.</p>","title":"4. TimescaleDB node (Insert)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.timescaleDb/#faqs","tags":["Workflow\u00b2","TimescaleDB"],"text":"","title":"FAQs"},{"location":"workflow/integrations/nodes/workflow-nodes-base.timescaleDb/#how-to-specify-the-data-type-of-a-column","tags":["Workflow\u00b2","TimescaleDB"],"text":"<p>To specify the data type of a column, append the column name with <code>:type</code>, where <code>type</code> is the data type of that column. For example, if you want to specify the type <code>int</code> for the column id and type <code>text</code> for the column name, you can use the following snippet in the Columns field: <code>id:init,name:text</code>.</p>","title":"How to specify the data type of a column?"},{"location":"workflow/integrations/nodes/workflow-nodes-base.todoist/","tags":["Workflow\u00b2","Todoist"],"text":"<p>Todoist is a task management software that can be used for small teams, individuals and professionals to manage anything from a shopping list to major projects at work.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Todoist"},{"location":"workflow/integrations/nodes/workflow-nodes-base.todoist/#basic-operations","tags":["Workflow\u00b2","Todoist"],"text":"<ul> <li>Task<ul> <li>Create a new task</li> <li>Close a task</li> <li>Delete a task</li> <li>Get a task</li> <li>Get all tasks</li> <li>Reopen a task</li> <li>Update a task</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.todoist/#example-usage","tags":["Workflow\u00b2","Todoist"],"text":"<p>This workflow allows you to create a new task in Todoist. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - Todoist</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.todoist/#1-start-node","tags":["Workflow\u00b2","Todoist"],"text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.todoist/#2-todoist-node","tags":["Workflow\u00b2","Todoist"],"text":"<ol> <li>First of all, you'll have to enter credentials for the Todoist node. You can find out how to do that here.</li> <li>Select your project from the Project dropdown list.</li> <li>Enter the content for the task in the Content field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>","title":"2. Todoist node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.travisCi/","tags":["Workflow\u00b2","Travis CI"],"text":"<p>Travis CI is a hosted continuous integration service used to build and test software projects hosted at GitHub and Bitbucket.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Travis CI"},{"location":"workflow/integrations/nodes/workflow-nodes-base.travisCi/#basic-operations","tags":["Workflow\u00b2","Travis CI"],"text":"<ul> <li>Build<ul> <li>Cancel a build</li> <li>Get a build</li> <li>Get all builds</li> <li>Restart a build</li> <li>Trigger a build</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.travisCi/#example-usage","tags":["Workflow\u00b2","Travis CI"],"text":"<p>This workflow allows you to trigger a build using the Travis CI node. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Start - Travis CI</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.travisCi/#1-start-node","tags":["Workflow\u00b2","Travis CI"],"text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.travisCi/#2-travis-ci-node-trigger-build","tags":["Workflow\u00b2","Travis CI"],"text":"<ol> <li>First of all, you'll have to enter credentials for the Travis CI node. You can find out how to do that here.</li> <li>Select 'Trigger' from the Operation dropdown list.</li> <li>Enter the repository name in the Slug field in the <code>ownerName/repositoryName</code> format.</li> <li>Enter the branch name in the Branch field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p></p>","title":"2. Travis CI node (trigger: build)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.trello/","tags":["Workflow\u00b2","Trello"],"text":"<p>Trello is a web-based Kanban-style list-making application which is a subsidiary of Atlassian. Users can create their task boards with different columns and move the tasks between them.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Trello"},{"location":"workflow/integrations/nodes/workflow-nodes-base.trello/#basic-operations","tags":["Workflow\u00b2","Trello"],"text":"<ul> <li>Attachment<ul> <li>Create a new attachment for a card</li> <li>Delete an attachment</li> <li>Get the data of an attachment</li> <li>Returns all attachments for the card</li> </ul> </li> <li>Board<ul> <li>Create a new board</li> <li>Delete a board</li> <li>Get the data of a board</li> <li>Update a board</li> </ul> </li> <li>Card<ul> <li>Create a new card</li> <li>Delete a card</li> <li>Get the data of a card</li> <li>Update a card</li> </ul> </li> <li>Card Comment<ul> <li>Create a comment on a card</li> <li>Delete a comment from a card</li> <li>Update a comment on a card</li> </ul> </li> <li>Checklist<ul> <li>Create a checklist item</li> <li>Create a new checklist</li> <li>Delete a checklist</li> <li>Delete a checklist item</li> <li>Get the data of a checklist</li> <li>Returns all checklists for the card</li> <li>Get a specific checklist on a card</li> <li>Get the completed checklist items on a card</li> <li>Update an item in a checklist on a card</li> </ul> </li> <li>Label<ul> <li>Add a label to a card.</li> <li>Create a new label</li> <li>Delete a label</li> <li>Get the data of a label</li> <li>Returns all labels for the board</li> <li>Remove a label from a card.</li> <li>Update a label.</li> </ul> </li> <li>List<ul> <li>Archive/Unarchive a list</li> <li>Create a new list</li> <li>Get the data of a list</li> <li>Get all the lists</li> <li>Get all the cards in a list</li> <li>Update a list</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.trello/#example-usage","tags":["Workflow\u00b2","Trello"],"text":"<p>This workflow allows you to create a new card in Trello. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - Trello</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.trello/#1-start-node","tags":["Workflow\u00b2","Trello"],"text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.trello/#2-trello-node","tags":["Workflow\u00b2","Trello"],"text":"<ol> <li>First of all, you'll have to enter credentials for the Trello node. You can find out how to do that here.</li> <li>Enter the ID of the list in which you want to create a new card in the List ID field. You can find instructions on how to obtain the ID of the list in the FAQs below.</li> <li>Enter the name of the card in the Name field.</li> <li>Enter the description of the card in the Description field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>","title":"2. Trello node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.trello/#faqs","tags":["Workflow\u00b2","Trello"],"text":"","title":"FAQs"},{"location":"workflow/integrations/nodes/workflow-nodes-base.trello/#how-do-i-find-the-list-id","tags":["Workflow\u00b2","Trello"],"text":"<ol> <li>Open the Trello board that contains the list.</li> <li>If the list doesn't have any cards, add a card to the list.</li> <li>Open the card, add '.json' at the end of the URL, and press enter.</li> <li>In the JSON file, you will see a field called <code>idList</code>.</li> <li>Copy <code>idList</code>and paste it in the List ID field in Workflow\u00b2.</li> </ol>","title":"How do I find the List ID?"},{"location":"workflow/integrations/nodes/workflow-nodes-base.twake/","tags":["Workflow\u00b2","Twake"],"text":"<p>Twake is an open-source collaborative workspace. It can be self-hosted and easily integrated into your teams. Twake offers features for collaboration like team chat, team calendar, video call, todo list, and storage space.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Twake"},{"location":"workflow/integrations/nodes/workflow-nodes-base.twake/#basic-operations","tags":["Workflow\u00b2","Twake"],"text":"<ul> <li>Message<ul> <li>Send a message</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.twake/#example-usage","tags":["Workflow\u00b2","Twake"],"text":"<p>This workflow allows you to send a message to a channel on Twake. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Start - Twake</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.twake/#1-start-node","tags":["Workflow\u00b2","Twake"],"text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.twake/#2-twake-node","tags":["Workflow\u00b2","Twake"],"text":"<ol> <li>First of all, you'll have to enter credentials for the Twake node. You can find out how to do that here.</li> <li>Select the channel from the Channel ID dropdown list.</li> <li>Enter the content of the message in the Content field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p></p>","title":"2. Twake node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.twilio/","tags":["Workflow\u00b2","Twilio"],"text":"<p>Twilio is a cloud communications platform as a service company. Twilio allows software developers to programmatically make and receive phone calls, send and receive text messages, and perform other communication functions using its web service APIs.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Twilio"},{"location":"workflow/integrations/nodes/workflow-nodes-base.twilio/#basic-operations","tags":["Workflow\u00b2","Twilio"],"text":"<ul> <li>SMS<ul> <li>Send SMS/MMS/WhatsApp message</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.twilio/#example-usage","tags":["Workflow\u00b2","Twilio"],"text":"<p>This workflow allows you to send an SMS or a Whatsapp message to a specified phone number from your Twilio number. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - Twilio</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.twilio/#1-start-node","tags":["Workflow\u00b2","Twilio"],"text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.twilio/#2-twilio-node","tags":["Workflow\u00b2","Twilio"],"text":"<ol> <li>First of all, you'll have to enter credentials for the Twilio node. You can find out how to do that here.</li> <li>Enter the phone number from which you'll be sending the message in the From field.</li> <li>Enter the phone number to which you'll be sending the message in the To field.</li> <li>In case you want to send a Whatsapp message, toggle the To Whatsapp button.</li> <li>Enter you message in the Message field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>","title":"2. Twilio node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.twist/","tags":["Workflow\u00b2","Twist"],"text":"<p>Twist is a communication app that helps teams balance focused work with collaborative conversations.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Twist"},{"location":"workflow/integrations/nodes/workflow-nodes-base.twist/#basic-operations","tags":["Workflow\u00b2","Twist"],"text":"<ul> <li>Channel<ul> <li>Archive a channel</li> <li>Initiates a public or private channel-based conversation</li> <li>Delete a channel</li> <li>Get information about a channel</li> <li>Get all channels</li> <li>Unarchive a channel</li> <li>Update a channel</li> </ul> </li> <li>Comment<ul> <li>Create a new comment to a thread</li> <li>Delete a comment</li> <li>Get information about a comment</li> <li>Get all comments</li> <li>Update a comment</li> </ul> </li> <li>Message Conversation<ul> <li>Create a message in a conversation</li> <li>Delete a message in a conversation</li> <li>Get a message in a conversation</li> <li>Get all messages in a conversation</li> <li>Update a message in a conversation</li> </ul> </li> <li>Thread<ul> <li>Create a new thread in a channel</li> <li>Delete a thread</li> <li>Get information about a thread</li> <li>Get all threads</li> <li>Update a thread</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.twist/#example-usage","tags":["Workflow\u00b2","Twist"],"text":"<p>This workflow allows you to create and update a channel as well as send a message on Twist. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Start - Twist</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.twist/#1-start-node","tags":["Workflow\u00b2","Twist"],"text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.twist/#2-twist-node-create-channel","tags":["Workflow\u00b2","Twist"],"text":"<p>This node will create a channel <code>n8n-docs</code> and add a user to the channel. 1. First of all, you'll have to enter credentials for the Twist node. You can find out how to do that here.</p> <ol> <li>Select 'Channel' from the Resource dropdown list.</li> <li>Select a workspace from the Workspace ID dropdown list.</li> <li>Enter <code>n8n-docs</code> in the Name field. If you want to create a channel with a different name, enter that name instead.</li> <li>Click on Add Field and select 'User IDs' from the dropdown list.</li> <li>Select the users from the User IDs dropdown list. The users you select will be added to the channel.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node creates a new channel named <code>n8n-docs</code>, and adds a user to the channel.</p> <p></p>","title":"2. Twist node (create: channel)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.twist/#3-twist1-node-update-channel","tags":["Workflow\u00b2","Twist"],"text":"<p>This node will update the description of the channel that we created in the previous node.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Channel' from the Resource dropdown list.</li> <li>Select 'Update' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Channel ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Twist &gt; Output Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$node[\"Twist\"].json[\"id\"]}}</code>.</li> <li>Click on Add Field and select 'Description' from the dropdown list.</li> <li>Enter a description in the Description field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node adds a description to the channel that we created in the previous node.</p> <p></p>","title":"3. Twist1 node (update: channel)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.twist/#4-twist2-node-create-messageconversation","tags":["Workflow\u00b2","Twist"],"text":"<p>This node will send a message to the General conversation on Twist. The message contains an action button that navigates to <code>https://docs.n8n.io</code>.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select a workspace from the Workspace ID dropdown list.</li> <li>Select 'General' from the Conversation ID dropdown list. If you want to send a message to a different conversation, select that conversation instead.</li> <li>Click on the gears icon next to the Channel ID field and click on Add Expression.</li> <li> <p>Enter the following text in the Content field: <pre><code>Hey [Harshil](twist-mention://475370)!\nYou have been added to the {{$node[\"Twist\"].json[\"name\"]}} channel.\nClick on the button below to quickly navigate to the documentation website.\n</code></pre>  The above message mentions the user <code>Harshil</code>. To mention a user in your workspace you need to use their User ID. Refer to the FAQs to learn how to get a User ID.</p> </li> <li> <p>Click on Add options and select 'Actions' from the dropdown list.</p> </li> <li>Click on the Add Action button.</li> <li>Select 'Open URL' from the Action dropdown list.</li> <li>Enter <code>Documentation site</code> in the Button Text field.</li> <li>Select 'Action' from the Type dropdown list.</li> <li>Enter <code>https://docs.n8n.io</code> in the URL field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node sends a message to the General conversation and mentions the user.</p> <p></p>","title":"4. Twist2 node (create: messageConversation)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.twist/#faqs","tags":["Workflow\u00b2","Twist"],"text":"","title":"FAQs"},{"location":"workflow/integrations/nodes/workflow-nodes-base.twist/#where-can-i-get-the-user-id","tags":["Workflow\u00b2","Twist"],"text":"<p>To get the User ID for a user follow the steps mentioned below 1. Click on the Team tab. 2. Click on a user's avatar. 3. Copy the string of characters located after <code>/u/</code> in your Twist URL. This string is the User ID. For example, if the URL is <code>https://twist.com/a/4qw45/people/u/475370</code> the User ID will be <code>475370</code>.</p>","title":"Where can I get the User ID?"},{"location":"workflow/integrations/nodes/workflow-nodes-base.twitter/","tags":["Workflow\u00b2","Twitter"],"text":"<p>Twitter is a microblogging and social networking service on which users post and interact with messages known as \"tweets\".</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Twitter"},{"location":"workflow/integrations/nodes/workflow-nodes-base.twitter/#basic-operations","tags":["Workflow\u00b2","Twitter"],"text":"<ul> <li>Direct Message<ul> <li>Create a direct message</li> </ul> </li> <li>Tweet<ul> <li>Create or reply a tweet</li> <li>Delete a tweet</li> <li>Search tweets</li> <li>Like a tweet</li> <li>Retweet a tweet</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.twitter/#example-usage","tags":["Workflow\u00b2","Twitter"],"text":"<p>This workflow allows you to tweet on Twitter. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - Twitter</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.twitter/#1-start-node","tags":["Workflow\u00b2","Twitter"],"text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.twitter/#2-twitter-node","tags":["Workflow\u00b2","Twitter"],"text":"<ol> <li>First of all, you'll have to enter credentials for the Twitter node. You can find out how to do that here.</li> <li>Type the message you want to tweet in the Text field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>","title":"2. Twitter node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.unleashedSoftware/","tags":["Workflow\u00b2","Unleashed Software"],"text":"<p>Unleashed Software is a cloud app that gives product businesses the freedom to better make, manage and move products by enabling them to achieve complete clarity and control over suppliers, production, warehouses, and sales.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Unleashed Software"},{"location":"workflow/integrations/nodes/workflow-nodes-base.unleashedSoftware/#basic-operations","tags":["Workflow\u00b2","Unleashed Software"],"text":"<ul> <li>Sales Order<ul> <li>Get all sales orders</li> </ul> </li> <li>Stock On Hand<ul> <li>Get a stock on hand</li> <li>Get all stocks on hand</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.unleashedSoftware/#example-usage","tags":["Workflow\u00b2","Unleashed Software"],"text":"<p>This workflow allows you to get a list of all the orders from Unleashed Software based on the order status. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Start - Unleashed Software</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.unleashedSoftware/#1-start-node","tags":["Workflow\u00b2","Unleashed Software"],"text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.unleashedSoftware/#2-unleashed-software-node","tags":["Workflow\u00b2","Unleashed Software"],"text":"<ol> <li>First of all, you'll have to enter credentials for the Unleashed Software node. You can find out how to do that here.</li> <li>Toggle Return All to true.</li> <li>Click on the Add Filter button and select 'Order Status' from the dropdown list.</li> <li>Select 'Completed' from the Order Status dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p></p>","title":"2. Unleashed Software node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.uplead/","tags":["Workflow\u00b2","UpLead"],"text":"<p>UpLead helps increase sales by quickly finding, connecting, and engaging with qualified prospects.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"UpLead"},{"location":"workflow/integrations/nodes/workflow-nodes-base.uplead/#basic-operations","tags":["Workflow\u00b2","UpLead"],"text":"<ul> <li>Company<ul> <li>Enrich</li> </ul> </li> <li>Person<ul> <li>Enrich</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.uplead/#example-usage","tags":["Workflow\u00b2","UpLead"],"text":"<p>This workflow allows you to get information about a company with UpLead. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - UpLead</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.uplead/#1-start-node","tags":["Workflow\u00b2","UpLead"],"text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.uplead/#2-uplead-node","tags":["Workflow\u00b2","UpLead"],"text":"<ol> <li>First of all, you'll have to enter credentials for the UpLead node. You can find out how to do that here.</li> <li>Enter the name of the company in the Company field. For example, I entered <code>Apple</code>.</li> <li>Click on Execute Node to run the workflow.</li> </ol>","title":"2. UpLead node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.uproc/","tags":["Workflow\u00b2","uProc"],"text":"<p>uProc is a data platform that allows to clean, verify, and enrich any data field.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"uProc"},{"location":"workflow/integrations/nodes/workflow-nodes-base.uproc/#basic-operations","tags":["Workflow\u00b2","uProc"],"text":"<p>Audio - Get advanced human audio file by provided text and language - Get an audio file by provided text and language</p> <p>Communication - Discover if a domain has a social network presence - Discover if an email is valid, hard bounce, soft bounce, spam-trap, free, temporary, and recipient exists - Discover if the email recipient exists, returning email status - Check if an email domain has an SMTP server to receive emails - Discover if the email has a social network presence - Check if an email has a valid format - Check if an email domain belongs to a disposable email service - Check if email belongs to free service provider like Gmail, Hotmail - Discover if an email exists in the Robinson list (only Spain) - Check if email belongs to a system or role-based account - Check if an email is a spam trap - Discover if an IMEI number has a valid format - Check if a LinkedIn profile is a first-degree contact - Discover if mobile phone number exists in network operator, with worldwide coverage - Discover if a mobile phone number has a valid format with worldwide coverage - Discover if a mobile phone number has a valid format (only Spain) - Discover if a mobile phone number has a valid prefix, with worldwide coverage - Discover if a Spanish mobile phone number has a valid prefix - Discover if a mobile number is switched on to call it later, with worldwide coverage - Discover if a mobile number can receive SMS with worldwide coverage - Discover if a phone (landline or mobile) exists in a Robinson list (only Spain) - Discover if a landline or mobile number has a valid prefix - Discover if a landline phone number is valid, with Spain coverage - Allows discovering if landline number has a good international format, depending on the country - Discover if a landline phone number prefix exists, with worldwide coverage - Clean a phone removing non allowed characters - Allows getting country code of a mobile phone number with international format - Allows getting a domain from an email - Discover an email by company website or domain and prospect's first-name and last-name - Check if an email is personal or generic - Get emails list found on the internet by domain or URI - Get an emails list found on the internet by non-free email - Get emails list found inside the website by domain or URI - Get three first web references of an email published on the internet - Allows you to fix the email domain of those misspelled emails - Fix the international prefix of a phone based on the ISO code of a country - Get GDPR compliant emails list by domain for your Email Marketing campaigns in Europe - Discover if mobile exist via real-time HLR query - Get portability data about a landline or mobile number, only for Spain - Extract results from a LinkedIn search (employees in a company) - Get members in a LinkedIn group - Extract the last 80 connections from your LinkedIn profile - Extract the last 80 invitations sent from your LinkedIn - Get users who comment on a post on LinkedIn - Get users who like a post on LinkedIn - Extract a LinkedIn profile - Extract results from a LinkedIn search (profiles) - Extract fastly last profiles that have published content on LinkedIn by specific keywords - Discover if mobile exist via real-time HLR query, as well as portability and roaming data - Get existence, portability, and roaming of a mobile phone via MNP query - Discover if mobile or landline prefix exists in Spain - Allows normalizing email address, removing non allowed characters - Allows normalizing a mobile phone, removing non-allowed characters - Parse phone number in multiple fields and verify format and prefix validity - Allows getting country prefix number by country code - Discover an email by company website or domain and prospect's first-name and last-name - This tool parses a social URI address and extracts any available indicators - Search all social networks by domain, parses all found URLs, and returns social networks KPIs - Discover if a domain or a website has social activity and returns all social network profiles found - Discover if an email has social activity, and get all social network profiles found - Discover if a mobile phone has social activity, and get all social network profiles found - Get web references for an email published on the internet - Send a custom message invitation to a non connected LinkedIn profile - Send a custom email to a recipient - Send a custom SMS to a recipient with worldwide coverage - Send a custom invitation message if a profile is connected or a custom message otherwise - Visits a profile to show interest and get profile views in return from contact, increasing your LinkedIn network - Send a custom private message to a connected LinkedIn profile - Get an email by contact's LinkedIn profile URI - Discover an email by company's name and prospect's full name - Discover an email by company's website or domain and prospect's full name</p> <p>Company - Discover if a CIF card number is valid - Check if a company is a debtor by TaxID - Check if the ISIN number is valid - Check if the SS number is valid, only for Spain - Identify and classify a prospecting role in detecting the right area and seniority to filter later - Get a company's contact, social, and technology data by domain - Get a company's contact, social, and technology data by email - Get a company's data by CIF - Get a company's data by DUNS - Get a company's data by domain - Get a company's data by email - Get a company's data by IP address - Get a company's data by name - Get a company's data by phone number - Get a company's data by social networks URI (LinkedIn, Twitter) - Get a company's name by company domain - Get professional data of a decision-maker by company name/domain and area - Discover more suitable decision-maker using search engines (Bing) by company name and area - Get professional emails of decision-makers by company domain and area - Discover up to ten decision-makers using search engines (Bing) by company name and area - Get a company's domain by company name - Get employees by company name or domain, area, seniority, and country - Get a company's Facebook profile by name without manually searching on Google or Facebook - Get geocoded company data by IP address - Get a company's LinkedIn profile by name without manually searching on Google or LinkedIn - Allows normalizing a CIF number, removing non-allowed characters - Get a company's phone by company domain - Get a company's sales data by a company's DUNS number - Get a company's sales data by a company's domain name - Get a company's sales data by a company's name - Get a company's sales data by a company's tax ID (CIF) - Get a company's Twitter profile by name without manually searching on Google or Twitter</p> <p>Finance - Discover if a BIC number has a valid format - Discover if an account number has a valid format - Check if credit card number checksum is valid - Discover if an IBAN account number has a valid format - Discover if an ISO currency code is valid - Check if a TIN exists in Europe - Convert amount between supported currencies and an exchange date - Get credit card type - Get multiple ISO currency codes by a country name - Get all ISO currency by an IP address - Get multiple ISO currency codes by a country ISO code - Get ISO currency code by IP address - Get ISO currency code by a currency ISO code - Get ISO currency code by an ISO country code - Get ISO currency code by a country name - Get related European TIN in Europe - Get IBAN by account number of the country - Get to search data bank information by IBAN account number - Get country VAT by address - Get country VAT by coordinates - Get VAT by IP address - Get VAT value by country ISO code - Get VAT by phone number, with worldwide coverage - Get VAT by zipcode</p> <p>Geographical - Check if a country's ISO code exists - Discover if the distance between two coordinates is equal to another - Discover if the distance(in kilometers) between two coordinates is greater than the given input - Discover if the distance(in kilometers) between two coordinates is greater or equal to the given input - Discover if the distance(in kilometers) between two coordinates is lower than the given input - Check if an address exists by a partial address search - Check if a house number exists by a partial address search - Check if coordinates have a valid format - Discover if a zipcode number prefix exists (only for Spain) - Discover if a zipcode number has a valid format (only for Spain) - Get cartesian coordinates(X, Y, Z/WGS84) by Latitude and Longitude - Get multiple cities by phone prefix (only for Spain) - Get multiple cities by partial initial text (only for Spain) - Get multiple cities by zip code prefix (only for Spain) - Get a city from IP - City search by partial name (only for Spain) - Discover the city name by a local phone number (only for Spain) - Discover the city name by the zip code (only for Spain) - Discover the community name from a zipcode (only for Spain) - Discover latitude and longitude coordinates of an IP address - Discover latitude and longitude coordinates of a postal address - Get multiple country names by currency ISO code - Get multiple countries by ISO code - Get multiple country names by initial name - Get country name by currency ISO code - Get country name by IP address - Get country name by its ISO code - Get country by a prefix - Get country name by phone number, with worldwide coverage - Get Aplha2 code by a country prefix or a name - Get decimal coordinates (degrees, minutes, and seconds) by latitude and longitude - Returns straight-line distance(in kilometers) between two addresses - Returns straight-line distance(in kilometers) between two GPS coordinates (latitude and longitude) - Returns straight-line distance(in kilometers) between two IP addresses - Returns straight-line distance(in kilometers) between two landline phones, using city and province of every phone - Returns straight-line distance(in kilometers) between two zip codes, using city and province of every zip code - Get an exact address by a partial address search - Discover geographical, company, timezone, and reputation data by IPv4 address - Discover the city name, zip code, province, country, latitude, and longitude from an IPv4 or IPv6 address and geocodes it - Parse postal address into separated fields, getting an improved resolution - Discover locale data (currency, language) by IPv4 or IPv6 address - Discover the city name, zip code, province, or country by latitude and longitude - Discover the city name, zip code, province, country, latitude, and longitude from an IPv4 or IPv6 address - Discover the city and the province from a landline phone number (only Spain) - Discover location data by name - Discover the city and the province from a zipcode number (only Spain) - Get the most relevant locations by name - Get the most relevant locations by name, category, location, and radius - Get multiple personal names by a prefix - Discover network data by IPv4 or IPv6 address - Allow normalizing an address by removing non allowed characters - Allow normalizing a city by removing non allowed characters - Allow normalizing a country by removing non allowed characters - Allow normalizing a province by removing non allowed characters - Allow normalizing a zipcode by removing non allowed characters - Parse postal address into separated fields, getting a basic resolution - Discover the province name from an IP address - Get the first province by a name prefix (only for Spain) - Discover the province name from a landline phone number (only for Spain) - Discover the province name from a zipcode number (only for Spain) - Get a province list by a name prefix (only for Spain) - Get a province list by a phone prefix (only for Spain) - Get a province list by a zipcode prefix (only for Spain) - Discover reputation by IPv4 or IPv6 address - Returns driving routing time, distance, fuel consumption, and cost between two addresses - Returns driving routing time, distance, fuel consumption, and cost between two GPS coordinates - Returns driving routing time, distance, fuel consumption, and cost between two  IP addresses - Returns driving routing time, distance, fuel consumption, and cost between two landline phones, using city and province of every phone (only for Spain) - Returns driving routing time, distance, fuel consumption, and cost between two zip codes, using city and province of every zip code - Discover date-time data by IPv4 or IPv6 address - Get USNG coordinates by latitude and longitude - Get UTM coordinates by latitude and longitude - Discover the zip code if you have an IP address - Get the first zipcode by prefix, only for Spain - Get multiple zip codes by prefix, with worldwide coverage</p> <p>Image - Get QR code decoded content by an image URL - It allows discovering all geographical and technical EXIF metadata present in a photographic JPEG image - Get an encoded barcode by number and a required standard - Get QR code encoded by a text - Generate a new image by URL and text - Discover logo (favicon) used in a domain - Generate a screenshot by URL provided using Chrome browser</p> <p>Internet - Check if a domain exists - Check if a domain has a DNS record - Check if a  domain has the given IP address assigned - Check if a domain has an MX record - Check if a domain has a valid SSL certificate - Check if a domain has a valid format - Check if a domain accepts all emails, existing or not - Check if a domain is a free service domain provider - Check if a domain is temporary or not - Discover if a computer is switched on - Discover if service in a port is available - Check if an URL contains a string or regular expression - Check if an URL exists - Check that an URL has a valid format - Get full SSL certificate data by a domain (or website) and monitor your certificate status - Get text data from web, pdf or image allowing to filter some elements by regular expressions or field names - Decode URL to recover original - Get valid, existing, and default URL when accessing a domain using a web browser - Discover device features by a user agent - Get the network name of and IP address - Get the domain record by its type - Encode URL to avoid problems - Copy file from one URL to another URL - Fix an IP address to the right format - Get the IPv4 address linked with a domain - Convert a number to an IP address - Get ISP known name of email domain name - Convert an IP address to numeric notation - Scan a host and returns the most commonly open ports - Obtains a list with multiple results from a website - Obtains the content of a website - Decode URL into multiple fields - Generate a PDF file by URL (provided using Chrome browser) - Get the root domain of any web address, removing non needed characters - Generates shareable URIs to use on social networks and email using a content URI and a text - Get data from the existing table in an HTML page or a PDF file - Discover client and server technologies used in a domain - Discover client and server technologies used in web pages - Analyze URL's health status about SSL, broken links, conflictive HTTP links with SSL, and more - Get website visits and rank of any domain - Get a domain's Whois data by fields - Get Whois data fields by IP address provided</p> <p>Personal - Check if age is between two numbers - Check if date returns an age between 20 and 29 - Check if date returns an age between 40 and 49 - Check if age is greater than another - Check if birth date returns an age greater than 64 - Check if birth date belongs to an adult (18 years for Spain) - Check if age is lower than another - Check if age is lower or equal than another - Check if ages are equal - Discover if a date is between two dates - Discover if a date is greater - Discover if a date is greater or equal - Discover if a date belongs to a leap year - Discover if a date is lower - Discover if a date is lower or equal - Discover if a date has a valid format - Discover if a gender value is valid - Discover if an NIE card number is valid - Discover if a NIF card number is valid - Check if a personal name exists in the INE data source (only for Spain) - Check if a name contains accepted characters - Discover if a NIF exists in the Robison list (only for Spain) - Check if surname contains accepted characters - Check if a personal surname appears in INE data source (only for Spain) - Discover if a DNI card number is valid - Discover the age of a birt date - Discover the age range of a person by birth date - Get the difference between two dates - Discover the gender of a person by the email - Discover the gender of a person or company by the name - Get LinkedIn employee profile URI by business email - Get LinkedIn employee profile URI by first name, last name, and company - Discover the letter of a DNI card number - Get first personal name matching by prefix and gender from INE data source (only for Spain) - Allow normalizing a DNI number by removing non allowed characters - Allow normalizing an NIE number by removing non allowed characters - Normalize name by removing non allowed characters - Normalize surname - Get parsed date-time - Normalize full name, fixing abbreviations, sorting if necessary, and returning first name, last name, and gender - Get prospect's contact data and the company's location and social data by email - Get contact, location, and social data by email and company name and location - Get personal and social data by social profile - Get personal data by email - Get personal data by first name, last name, company, and location - Get personal data by mobile - Get personal data by social network profile - Generate random fake data - Get first personal surname matching by prefix from INE data source (only for Spain) - Get personal surname matching by prefix from INE data source (only for Spain) - Get Twitter profile by first name, last name, and company - Get Xing profile by first name, last name, and company - Add a contact email to a person list</p> <p>Product - Check if an ASIN code exists on the Amazon Marketplace - Check if an ASIN code has a valid format - Check if an EAN code exists on Amazon Marketplace - Check if an EAN barcode has a valid format - Check if an EAN barcode of 13 digits has a valid format - Check if an EAN barcode of 14 digits has a valid format - Check if an EAN barcode of 18 digits has a valid format - Check if an EAN barcode of 8 digits has a valid format - Check if a GTIN barcode has a valid format - Check if a GTIN barcode of 13 digits has a valid format - Check if a GTIN barcode of 14 digits has a valid format - Check if a GTIN barcode of 8 digits has a valid format - Allows checking if an ISBN book exists - Allows checking if an ISBN10/13 code has a valid format - Allows checking if an ISBN10 code has a valid format - Allows checking if an ISBN13 code has a valid format - Check if a UPC exists - Check if a UPC has a valid format - Get ASIN by EAN - Get a book by author's surname - Get all publications by category - Get book data by an editor's name - Get book or publication data by 10 or 13 digits ISBN code - Get book data by title - Get books by author's surname - Get all books by category - Get all books by editor - Get all books by title - Get EAN code by ASIN code - Get product data on a UPC on Amazon Marketplace</p> <p>Security - Check if a Luhn number is valid - Check if a password is strong - Check if a UUID number is valid - Get blacklists for a domain - Get blacklists for an IP address</p> <p>Text - Check if a string only contains alphabets - Check if a string is alphanumeric - Check if a string is boolean - Check if the largest item in a list matches the provided item - Check if IPv4 or IPv6 address has a valid format - Check if IPv4 address has a valid format - Check if IPv6 address has a valid format - Check if the length of a list is between two quantities - Checks if the length of a list equals a specified quantity - Checks if the length of a list is greater than or equal to a certain amount - Check if the length of a list is lower than a certain amount - Check if the list contains a specific item - Check if the list ends with a specific element - Check if a list is sorted in ascending order - Check if the list starts with a specific element - Checks if the smallest element in a list matches the provided element - Check if a string contains only numbers - Check if a string contains a character - Check if a string ends with a character - Check if a string has no content - Check if a string contains random characters - Check if a string contains a value that matches with a regular expression - Check if the length of a string is between two numbers - Check if the length of a string is equal to a number - Check if the length of a string is greater than a number - Check if the length of a string is greater or equal to a number - Check if the length of a string is lower than a number - Check if the length of a string is lower or equal to a number - Check if a string starts with a character - Check if a string contains only lowercase characters - Check if a string contains only uppercase characters - Check if a list consists of unique elements - Check if the supplied values form a valid list of elements - Check if the number of words in a sentence is between two determined quantities - Check if the number of words in a sentence equals a certain amount - Check if the number of words in a sentence is greater than a certain amount - Check if the number of words in a sentence is greater than - Check if the word count is lower - Check if the number of words present in a sentence is less than or equal to a quantity - Convert a string to Base64 encoded value - Discover banned English words in an email body or subject - Get field names by analyzing the field value provided - Format a string using a format pattern - Generate random string using a regular expression as a pattern - Return the largest item in a list - Return the smallest item in a list - Convert to lowercase - Convert a string to MD5 encoded value - Merge two strings - Normalize a string depending on the field name - Analyze string and return all emails, phones, zip codes, and links - Convert a string to an SHA encoded value - Analyze an English text with emojis and detect sentiment - Returns an ascending sorted list - Split a value into two parts and join them using a separator from the original string - Split a value into two parts using a separator from the original string - Get the length of a string - Lookup string between multiple values by fuzzy logic and regex patterns - Clean abuse words from a string - Replace the first value found in a string with another - Replace all values found in a string with another - Translate a text into any language - Return a single list with no repeating elements - Convert all letters to uppercase - Count total words in a text</p>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.uproc/#example-usage","tags":["Workflow\u00b2","uProc"],"text":"<p>This workflow allows you to take a screenshot of a website and send it to a Telegram channel. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Start - uProc - Telegram</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.uproc/#1-start-node","tags":["Workflow\u00b2","uProc"],"text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.uproc/#2-uproc-node-geturlscreenshot","tags":["Workflow\u00b2","uProc"],"text":"<p>This node will return the screenshot of the Doc\u00b2 website. If you want to get the screenshot of a different website, enter the domain of that website instead.</p> <ol> <li>First of all, you'll have to enter credentials for the uProc node. You can find out how to do that here.</li> <li>Select 'Image' from the Resource dropdown list.</li> <li>Select 'Get Screenshot by URL' from the Operation dropdown list.</li> <li>Enter <code>https://n8n.io</code> in the URL field.</li> <li>Select '1024' from the Width dropdown list.</li> <li>Select 'Yes' from the Fullpage dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns a URL of the screenshot of the website.</p> <p></p>","title":"2. uProc node (getUrlScreenshot)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.uproc/#3-telegram-node-sendphoto-message","tags":["Workflow\u00b2","uProc"],"text":"<p>This node will send the screenshot that we received from the previous node.</p> <ol> <li>First of all, you'll have to enter credentials for the Telegram node. You can find out how to do that here.</li> <li>Select 'Send Photo' from the Operation dropdown list.</li> <li>Enter a chat ID in the Chat ID field. Refer to the FAQs of the Telegram node to learn how to get the chat ID.</li> <li> <p>Click on the gears icon next to the Photo field and click on Add Expression.</p> </li> <li> <p>Select the following in the Variable Selector section: Nodes &gt; uProc &gt; Output Data &gt; JSON &gt; message &gt; result. You can also add the following expression: <code>{{$node[\"uProc\"].json[\"message\"][\"result\"]}}</code>.</p> </li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node sends the screenshot image to the channel that we specify.</p> <p></p>","title":"3. Telegram node (sendPhoto: message)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.uptimeRobot/","tags":["Workflow\u00b2","UptimeRobot"],"text":"<p>UptimeRobot is an uptime monitoring service. It monitors your website every 5 mins. You can set an HTTP/S, ping, port, keyword, or heartbeat monitor and get notifications to your email, phone, Telegram, Slack, Twitter, etc.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"UptimeRobot"},{"location":"workflow/integrations/nodes/workflow-nodes-base.uptimeRobot/#basic-operations","tags":["Workflow\u00b2","UptimeRobot"],"text":"<ul> <li>Account<ul> <li>Get account details</li> </ul> </li> <li>Alert Contact<ul> <li>Create an alert contact</li> <li>Delete an alert contact</li> <li>Get an alert contact</li> <li>Get all alert contacts</li> <li>Update an alert contact</li> </ul> </li> <li>Maintenance Window<ul> <li>Create a maintenance window</li> <li>Delete a maintenance window</li> <li>Get a maintenance window</li> <li>Get all a maintenance windows</li> <li>Update a maintenance window</li> </ul> </li> <li>Monitor<ul> <li>Create a monitor</li> <li>Delete a monitor</li> <li>Get a monitor</li> <li>Get all monitors</li> <li>Reset a monitor</li> <li>Update a monitor</li> </ul> </li> <li>Public Status Page<ul> <li>Create a public status page</li> <li>Delete a public status page</li> <li>Get a public status page</li> <li>Get all a public status pages</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.uptimeRobot/#example-usage","tags":["Workflow\u00b2","UptimeRobot"],"text":"<p>This workflow allows you to create, update, and get a monitor using the UptimeRobot node. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Start - UptimeRobot</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.uptimeRobot/#1-start-node","tags":["Workflow\u00b2","UptimeRobot"],"text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.uptimeRobot/#2-uptimerobot-node-create-monitor","tags":["Workflow\u00b2","UptimeRobot"],"text":"<p>This node will create a new monitor of the type <code>HTTP(S)</code>.</p> <ol> <li>First of all, you'll have to enter credentials for the OpenWeatherMap node. You can find out how to do that here.</li> <li>Select 'Monitor' from the Resource dropdown list.</li> <li>Select 'Create' from the Operation dropdown list.</li> <li>Enter <code>n8n</code> in the Friendly Name field.</li> <li>Select 'HTTP(S)' from the Type dropdown list.</li> <li>Enter <code>https://n8n.io</code> in the URL field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns data about the current weather in Berlin.</p> <p></p>","title":"2. UptimeRobot node (create: monitor)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.uptimeRobot/#3-uptimerobot-node-update-monitor","tags":["Workflow\u00b2","UptimeRobot"],"text":"<p>This node will update the monitor that we created in the previous node.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Monitor' from the Resource dropdown list.</li> <li>Select 'Update' from the Operation dropdown list.</li> <li>Click on the gears icon next to the ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$json[\"id\"]}}</code>.</li> <li>Click on Add Field and select 'Friendly Name' from the dropdown list.</li> <li>Enter <code>n8n website</code> in the Friendly Name field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node updates the friendly name of the monitor that we created in the previous node.</p> <p></p>","title":"3. UptimeRobot node (update: monitor)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.uptimeRobot/#4-uptimerobot-node-get-monitor","tags":["Workflow\u00b2","UptimeRobot"],"text":"<p>This node will get the information of the monitor that we created in the previous node.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Monitor' from the Resource dropdown list.</li> <li>Select 'Update' from the Operation dropdown list.</li> <li>Click on the gears icon next to the ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$json[\"id\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns the information of the monitor that we created earlier.</p> <p></p>","title":"4. UptimeRobot node (get: monitor)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.urlScanIo/","tags":["Workflow\u00b2","urlscan.io"],"text":"<p>urlscan.io is a free service to scan and analyse websites. When a URL is submitted to urlscan.io, an automated process will browse to the URL like a regular user and record the activity that this page navigation creates.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"urlscan.io"},{"location":"workflow/integrations/nodes/workflow-nodes-base.urlScanIo/#basic-operations","tags":["Workflow\u00b2","urlscan.io"],"text":"<ul> <li>Scan<ul> <li>Get</li> <li>Get All</li> <li>Perform</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.vero/","tags":["Workflow\u00b2","Vero"],"text":"<p>Vero is a messaging platform that helps manage real-time data to create a better customer experience.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Vero"},{"location":"workflow/integrations/nodes/workflow-nodes-base.vero/#basic-operations","tags":["Workflow\u00b2","Vero"],"text":"<ul> <li>User<ul> <li>Create or update a user profile</li> <li>Change a users identifier</li> <li>Unsubscribe a user.</li> <li>Resubscribe a user.</li> <li>Delete a user.</li> <li>Adds a tag to a users profile.</li> <li>Removes a tag from a users profile.</li> </ul> </li> <li>Event<ul> <li>Track an event for a specific customer</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.vero/#example-usage","tags":["Workflow\u00b2","Vero"],"text":"<p>This workflow allows you to create a user profile in Vero. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - Vero</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.vero/#1-start-node","tags":["Workflow\u00b2","Vero"],"text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.vero/#2-vero-node","tags":["Workflow\u00b2","Vero"],"text":"<ol> <li>First of all, you'll have to enter credentials for the Vero node. You can find out how to do that here.</li> <li>Enter the unique identifier of the user in the ID field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>","title":"2. Vero node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.vonage/","tags":["Workflow\u00b2","Vonage"],"text":"<p>Vonage provides unified communications, contact centers, and programmable communications APIs.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Vonage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.vonage/#basic-operations","tags":["Workflow\u00b2","Vonage"],"text":"<ul> <li>SMS<ul> <li>Send</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.vonage/#example-usage","tags":["Workflow\u00b2","Vonage"],"text":"<p>This workflow allows you to send daily weather updates via an SMS message using the Vonage node. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Cron - OpenWeatherMap - Vonage</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.vonage/#1-cron-node","tags":["Workflow\u00b2","Vonage"],"text":"<p>The Cron node will trigger the workflow daily at 9 AM.</p> <ol> <li>Click on Add Cron Time.</li> <li>Set hours to 9 in the Hour field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the Cron node is configured to trigger the workflow every day at 9 AM.</p> <p></p>","title":"1. Cron node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.vonage/#2-openweathermap-node-current-weather","tags":["Workflow\u00b2","Vonage"],"text":"<p>This node will return data about the current weather in Berlin. To get the weather updates for your city, you can enter the name of your city instead.</p> <ol> <li>First of all, you'll have to enter credentials for the OpenWeatherMap node. You can find out how to do that here.</li> <li>Enter <code>berlin</code> in the City field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns data about the current weather in Berlin.</p> <p></p>","title":"2. OpenWeatherMap node (Current Weather)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.vonage/#3-vonage-node-send-sms","tags":["Workflow\u00b2","Vonage"],"text":"<p>This node will send an SMS with the weather update, which was sent by the previous node.</p> <ol> <li>First of all, you'll have to enter credentials for the Vonage node. You can find out how to do that here.</li> <li>Enter a Vonage phone number or the brand name in the From field.</li> <li>Enter the receiver's phone number in the To field.</li> <li> <p>Click on the gears icon next to the Message field and click on Add Expression.</p> </li> <li> <p>Enter the following message in the Expression field: <code>Hey! The temperature outside is {{$node[\"OpenWeatherMap\"].json[\"main\"][\"temp\"]}}\u00b0C.</code>.</p> </li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node sends an SMS to the phone number that we specified with the weather update, which was sent by the previous node.</p> <p></p>","title":"3. Vonage node (send: sms)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.webflow/","tags":["Workflow\u00b2","Webflow"],"text":"<p>Webflow is an application that allows you to build responsive websites with browser-based visual editing software.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Webflow"},{"location":"workflow/integrations/nodes/workflow-nodes-base.webflow/#basic-operations","tags":["Workflow\u00b2","Webflow"],"text":"<ul> <li>Item<ul> <li>Create</li> <li>Delete</li> <li>Get</li> <li>Get All</li> <li>Update</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.webflow/#example-usage","tags":["Workflow\u00b2","Webflow"],"text":"<p>This workflow allows you to create, update, and get an item from Webflow. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Start - Webflow</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.webflow/#1-start-node","tags":["Workflow\u00b2","Webflow"],"text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.webflow/#2-webflow-node-create-item","tags":["Workflow\u00b2","Webflow"],"text":"<p>This node will create a new collection of the type <code>Team Members</code> in Webflow. If you want to create a collection with a different type, use that type instead.</p> <ol> <li>First of all, you'll have to enter credentials for the Webflow node. You can find out how to do that here.</li> <li>Select 'Create' from the Operation dropdown list.</li> <li>Select your site from the Site ID dropdown list.</li> <li>Select 'Team Members' from the Collection ID dropdown list.</li> <li>Click on the Add Field button.</li> <li>Select 'Name (PlainText) (required)' from the Field ID dropdown list. If you're using a different collection type, select the field present in that collection.</li> <li>Enter <code>n8n</code> in the Field Value field.</li> <li>Click on the Add Field button.</li> <li>Select 'Slug (PlainText) (required)' from the Field ID dropdown list. If you're using a different collection type, select the field present in that collection.</li> <li>Enter <code>n8n</code> in the Field Value field.</li> <li>Click on the Add Field button.</li> <li>Select 'Archived (Bool) (required)' from the Field ID dropdown list. If you're using a different collection type, select the field present in that collection.</li> <li>Enter <code>false</code> in the Field Value field.</li> <li>Click on the Add Field button.</li> <li>Select 'Draft (Bool) (required)' from the Field ID dropdown list. If you're using a different collection type, select the field present in that collection.</li> <li>Enter <code>false</code> in the Field Value field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node creates a new item for the collection type <code>Team Members</code> in Webflow.</p> <p></p>","title":"2. Webflow node (create: item)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.webflow/#3-webflow1-node-update-item","tags":["Workflow\u00b2","Webflow"],"text":"<p>This node will update the item that we created using the previous node.</p> <ol> <li>Select the credentials that you entered in the previous Webflow node.</li> <li>Select 'Update' from the Operation dropdown list.</li> <li>Select your site from the Site ID dropdown list.</li> <li>Select 'Team Members' from the Collection ID dropdown list.</li> <li>Click on the gears icon next to the Item ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; _id. You can also add the following expression: <code>{{$json[\"_id\"]}}</code>.</li> <li>Click on the Add Property button. Click on the Add Field button.</li> <li>Select 'Name (PlainText) (required)' from the Field ID dropdown list. If you're using a different collection type, select the field present in that collection.</li> <li>Click on the gears icon next to the Field Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; name. You can also add the following expression: <code>{{$json[\"name\"]}}</code>.</li> <li>Click on the Add Field button.</li> <li>Select 'Slug (PlainText) (required)' from the Field ID dropdown list. If you're using a different collection type, select the field present in that collection.</li> <li>Click on the gears icon next to the Field Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; slug. You can also add the following expression: <code>{{$json[\"slug\"]}}</code>.</li> <li>Click on the Add Field button.</li> <li>Select 'Archived (Bool) (required)' from the Field ID dropdown list. If you're using a different collection type, select the field present in that collection.</li> <li>Click on the gears icon next to the Field Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; _archived. You can also add the following expression: <code>{{$json[\"_archived\"]}}</code>.</li> <li>Click on the Add Field button.</li> <li>Select 'Draft (Bool) (required)' from the Field ID dropdown list. If you're using a different collection type, select the field present in that collection.</li> <li>Click on the gears icon next to the Field Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; _draft. You can also add the following expression: <code>{{$json[\"_draft\"]}}</code>.</li> <li>Click on the Add Field button.</li> <li>Select 'Avatar (ImageRef)' from the Field ID dropdown list. If you're using a different collection type, select the field present in that collection.</li> <li>Enter <code>https://n8n.io/n8n-logo.png</code> in the Value field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node updates the item that got created previously.</p> <p></p>","title":"3. Webflow1 node (update: item)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.webflow/#4-webflow2-node-get-item","tags":["Workflow\u00b2","Webflow"],"text":"<p>This node will retrieve the information about the item that we created earlier.</p> <ol> <li>Select the credentials that you entered in the previous Webflow node.</li> <li>Select your site from the Site ID dropdown list.</li> <li>Select 'Team Members' from the Collection ID dropdown list.</li> <li>Click on the gears icon next to the Item ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; _id. You can also add the following expression: <code>{{$json[\"_id\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node retrieves the information of the item that we created earlier.</p> <p></p>","title":"4. Webflow2 node (get: item)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.wekan/","tags":["Workflow\u00b2","Wekan"],"text":"<p>Wekan is an open-source kanban board that allows a card-based task and to-do management.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Wekan"},{"location":"workflow/integrations/nodes/workflow-nodes-base.wekan/#basic-operations","tags":["Workflow\u00b2","Wekan"],"text":"<ul> <li>Board<ul> <li>Create a new board</li> <li>Delete a board</li> <li>Get the data of a board</li> <li>Get all user boards</li> </ul> </li> <li>Card<ul> <li>Create a new card</li> <li>Delete a card</li> <li>Get a card</li> <li>Get all cards</li> <li>Update a card</li> </ul> </li> <li>Card Comment<ul> <li>Create a comment on a card</li> <li>Delete a comment from a card</li> <li>Get a card comment</li> <li>Get all card comments</li> </ul> </li> <li>Checklist<ul> <li>Create a new checklist</li> <li>Delete a checklist</li> <li>Get the data of a checklist</li> <li>Returns all checklists for the card</li> </ul> </li> <li>Checklist Item<ul> <li>Delete a checklist item</li> <li>Get a checklist item</li> <li>Update a checklist item</li> </ul> </li> <li>List<ul> <li>Create a new list</li> <li>Delete a list</li> <li>Get the data of a list</li> <li>Get all board lists</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.wekan/#example-usage","tags":["Workflow\u00b2","Wekan"],"text":"<p>This workflow allows you to create a board and two lists called <code>To Do</code> and <code>Done</code> using the Wekan node. It also allows you to create a card and update the list ID of the card, enabling you to move it from the <code>To Do</code> list to the <code>Done</code> list. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Start - Wekan</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.wekan/#1-start-node","tags":["Workflow\u00b2","Wekan"],"text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.wekan/#2-wekan-node-create-board","tags":["Workflow\u00b2","Wekan"],"text":"<p>This node will create a board called <code>Documentation</code> in Wekan. To create a board with a different name, you can enter the name of your board instead.</p> <ol> <li> <p>First of all, you'll have to enter credentials for the Wekan node. You can find out how to do that here.</p> </li> <li> <p>Select 'Board' from the Resource dropdown list.</p> </li> <li>Enter <code>Documentation</code> in the Title field.</li> <li>Select the owner of the board from the Owner dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node creates a new board with the title <code>Documentation</code>.</p> <p></p>","title":"2. Wekan node (create: board)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.wekan/#3-wekan1-node-create-list","tags":["Workflow\u00b2","Wekan"],"text":"<p>This node will create a list with the title <code>To Do</code> in the <code>Documentation</code> board, which was created using the previous node.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'List' from the Resource dropdown list.</li> <li>Click on the gears icon next to the Board ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Wekan &gt; Output Data &gt; JSON &gt; _id. You can also add the following expression: <code>{{$node[\"Wekan\"].json[\"_id\"]}}</code>.</li> <li>Enter <code>To Do</code> in the Title field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node creates a new list called <code>To Do</code> in the <code>Documentation</code> board.</p> <p></p>","title":"3. Wekan1 node (create: list)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.wekan/#4-wekan2-node-create-list","tags":["Workflow\u00b2","Wekan"],"text":"<p>This node will create a list with the title <code>Done</code> in the <code>Documentation</code> board, which was created using the Wekan node.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'List' from the Resource dropdown list.</li> <li>Click on the gears icon next to the Board ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Wekan &gt; Output Data &gt; JSON &gt; _id. You can also add the following expression: <code>{{$node[\"Wekan\"].json[\"_id\"]}}</code>.</li> <li>Enter <code>Done</code> in the Title field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node creates a new list called <code>Done</code> in the <code>Documentation</code> board.</p> <p></p>","title":"4. Wekan2 node (create: list)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.wekan/#5-wekan3-node-create-card","tags":["Workflow\u00b2","Wekan"],"text":"<p>This node will create a card in the <code>Documentation</code> board under the list titled <code>To Do</code>, which was created using the Wekan1 node.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Click on the gears icon next to the Board ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Wekan &gt; Output Data &gt; JSON &gt; _id. You can also add the following expression: <code>{{$node[\"Wekan\"].json[\"_id\"]}}</code>.</li> <li>Click on the gears icon next to the List ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Wekan1 &gt; Output Data &gt; JSON &gt; _id. You can also add the following expression: <code>{{$node[\"Wekan1\"].json[\"_id\"]}}</code>.</li> <li>Enter <code>Document Wekan node</code> in the Title field.</li> <li>Select 'Default' from the Swimlane ID dropdown list.</li> <li>Select an author from the Author ID dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node creates a new card with the title <code>Document Wekan node</code> in the <code>To Do</code> list of the <code>Documentation</code> board.</p> <p></p>","title":"5. Wekan3 node (create: card)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.wekan/#6-wekan4-node-update-card","tags":["Workflow\u00b2","Wekan"],"text":"<p>This node will update the list ID of the card created by the previous node and move it from the <code>To Do</code> list to the <code>Done</code> list.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Update' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Board ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Wekan &gt; Output Data &gt; JSON &gt; _id. You can also add the following expression: <code>{{$node[\"Wekan\"].json[\"_id\"]}}</code>.</li> <li>Click on the gears icon next to the List ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Wekan1 &gt; Output Data &gt; JSON &gt; _id. You can also add the following expression: <code>{{$node[\"Wekan1\"].json[\"_id\"]}}</code>.</li> <li>Click on the gears icon next to the Card ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Wekan3 &gt; Output Data &gt; JSON &gt; _id. You can also add the following expression: <code>{{$node[\"Wekan3\"].json[\"_id\"]}}</code>.</li> <li>Click on the Add Field button and select 'List ID'.</li> <li>Click on the gears icon next to the List ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Wekan2 &gt; Output Data &gt; JSON &gt; _id. You can also add the following expression: <code>{{$node[\"Wekan2\"].json[\"_id\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node updates the list id of the card that we created in the previous node and moves it from the <code>To Do</code> list to the <code>Done</code> list.</p> <p></p>","title":"6. Wekan4 node (update: card)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.wekan/#faqs","tags":["Workflow\u00b2","Wekan"],"text":"","title":"FAQs"},{"location":"workflow/integrations/nodes/workflow-nodes-base.wekan/#how-to-load-all-the-parameters-for-the-node","tags":["Workflow\u00b2","Wekan"],"text":"<p>To load all the parameters, for example, Author ID, you need to give admin permissions to the user. Refer to the Wekan documentation to learn how to change permissions.</p>","title":"How to load all the parameters for the node?"},{"location":"workflow/integrations/nodes/workflow-nodes-base.wise/","tags":["Workflow\u00b2","Wise"],"text":"<p>Wise allows you to transfer money abroad with low-cost money transfers, receive money with international account details, and track transactions on your phone.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Wise"},{"location":"workflow/integrations/nodes/workflow-nodes-base.wise/#basic-operations","tags":["Workflow\u00b2","Wise"],"text":"<ul> <li>Account<ul> <li>Retrieve balances for all account currencies of this user.</li> <li>Retrieve currencies in the borderless account of this user.</li> <li>Retrieve the statement for the borderless account of this user.</li> </ul> </li> <li>Exchange Rate<ul> <li>Get</li> </ul> </li> <li>Profile<ul> <li>Get</li> <li>Get All</li> </ul> </li> <li>Recipient<ul> <li>Get All</li> </ul> </li> <li>Quote<ul> <li>Create</li> <li>Get</li> </ul> </li> <li>Transfer<ul> <li>Create</li> <li>Delete</li> <li>Execute</li> <li>Get</li> <li>Get All</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.wise/#example-usage","tags":["Workflow\u00b2","Wise"],"text":"<p>This workflow allows you to create a quote and a transfer, execute the transfer, and get the information of the transfer using the Wise node. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Start - Wise</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.wise/#1-start-node","tags":["Workflow\u00b2","Wise"],"text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.wise/#2-wise-node-create-quote","tags":["Workflow\u00b2","Wise"],"text":"<p>This node will create a new quote in Wise.</p> <ol> <li>First of all, you'll have to enter credentials for the Wise node. You can find out how to do that here.</li> <li>Select 'Quote' from the Resource dropdown list.</li> <li>Select 'Create' from the Operation dropdown list.</li> <li>Select a profile from the Profile ID dropdown list.</li> <li>Select a target account from the Target Account ID dropdown list.</li> <li>Enter an amount in the Amount field.</li> <li>Enter the source currency in the Source Currency field.</li> <li>Enter the target currency in the Target Currency field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node creates a new quote.</p> <p></p>","title":"2. Wise node (create: quote)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.wise/#3-wise1-node-create-transfer","tags":["Workflow\u00b2","Wise"],"text":"<p>This node will create a new transfer for the quote that we created in the previous node.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Transfer' from the Resource dropdown list.</li> <li>Select a profile from the Profile ID dropdown list.</li> <li>Click on the gears icon next to the Quote ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$json[\"id\"]}}</code>.</li> <li>Select the target account from the Target Account ID dropdown list.</li> <li>Click on the Add Field button.</li> <li>Enter a description in the Reference field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node creates a new transfer for the quote that we created in the previous node.</p> <p></p>","title":"3. Wise1 node (create: transfer)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.wise/#4-wise2-node-execute-transfer","tags":["Workflow\u00b2","Wise"],"text":"<p>This node will execute the transfer that we created in the previous node.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Transfer' from the Resource dropdown list.</li> <li>Select 'Execute' from the Operation dropdown list.</li> <li>Select a profile from the Profile ID dropdown list.</li> <li>Click on the gears icon next to the Transfer ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$json[\"id\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns the executes the transfer that we created in the previous node.</p> <p></p>","title":"4. Wise2 node (execute: transfer)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.wise/#5-wise3-node-get-transfer","tags":["Workflow\u00b2","Wise"],"text":"<p>This node will return the information of the transfer that we executed in the previous node.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Transfer' from the Resource dropdown list.</li> <li>Select 'Get' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Transfer ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Wise1 &gt; Output Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$node[\"Wise1\"].json[\"id\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns the information about the transfer that we executed in the previous node.</p> <p></p>","title":"5. Wise3 node (get: transfer)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.wooCommerce/","tags":["Workflow\u00b2","WooCommerce"],"text":"<p>WooCommerce is a customizable, open-source e-commerce plugin for WordPress.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"WooCommerce"},{"location":"workflow/integrations/nodes/workflow-nodes-base.wooCommerce/#basic-operations","tags":["Workflow\u00b2","WooCommerce"],"text":"<ul> <li>Customer<ul> <li>Create a customer</li> <li>Delete a customer</li> <li>Retrieve a customer</li> <li>Retrieve all customers</li> <li>Update a customer</li> </ul> </li> <li>Order<ul> <li>Create a order</li> <li>Delete a order</li> <li>Get a order</li> <li>Get all orders</li> <li>Update an order</li> </ul> </li> <li>Product<ul> <li>Create a product</li> <li>Delete a product</li> <li>Get a product</li> <li>Get all products</li> <li>Update a product</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.wooCommerce/#example-usage","tags":["Workflow\u00b2","WooCommerce"],"text":"<p>This workflow allows you to create, update, and get a product from WooCommerce. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Start - WooCommerce</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.wooCommerce/#1-start-node","tags":["Workflow\u00b2","WooCommerce"],"text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.wooCommerce/#2-woocommerce-node-create-product","tags":["Workflow\u00b2","WooCommerce"],"text":"<p>This node will create a new product in WooCommerce.</p> <ol> <li>First of all, you'll have to enter credentials for the WooCommerce node. You can find out how to do that here.</li> <li>Enter the product name in the Name field.</li> <li>Click on Add Field and select 'Description'.</li> <li>Enter a description in the Description field.</li> <li>Click on Add Field and select 'Regular Price'.</li> <li>Enter the price in the Regular Price field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node creates a new product.</p> <p></p>","title":"2. WooCommerce node (create: product)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.wooCommerce/#3-woocommerce1-node-update-product","tags":["Workflow\u00b2","WooCommerce"],"text":"<p>This node will update the product that we created in the previous node. We will update the quantity of the product.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Update' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Product ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; WooCommerce &gt; Output Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$node[\"WooCommerce\"].json[\"id\"]}}</code>.</li> <li>Click on Add Field and select 'Stock Quantity'.</li> <li>Set the quantity in the Stock Quantity field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node updates the quantity of the product that we created in the previous node.</p> <p></p>","title":"3. WooCommerce1 node (update: product)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.wooCommerce/#4-woocommerce2-node-get-product","tags":["Workflow\u00b2","WooCommerce"],"text":"<p>This node will get the information about the product that we created using the WooCommerce node.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Update' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Product ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; WooCommerce &gt; Output Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$node[\"WooCommerce\"].json[\"id\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns the information about the product that we created using the WooCommerce node.</p> <p></p>","title":"4. WooCommerce2 node (get: product)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.wordpress/","tags":["Workflow\u00b2","WordPress"],"text":"<p>WordPress is a free and open-source content management system written in PHP and paired with a MySQL or MariaDB database.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"WordPress"},{"location":"workflow/integrations/nodes/workflow-nodes-base.wordpress/#basic-operations","tags":["Workflow\u00b2","WordPress"],"text":"<ul> <li>Post<ul> <li>Create a post</li> <li>Get a post</li> <li>Get all posts</li> <li>Update a post</li> </ul> </li> <li>User<ul> <li>Create a user</li> <li>Get a user</li> <li>Get all users</li> <li>Update a user</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.wordpress/#example-usage","tags":["Workflow\u00b2","WordPress"],"text":"<p>This workflow allows you to create and update a post in WordPress. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Start - WordPress</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.wordpress/#1-start-node","tags":["Workflow\u00b2","WordPress"],"text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.wordpress/#2-wordpress-node-create-post","tags":["Workflow\u00b2","WordPress"],"text":"<ol> <li>First of all, you'll have to enter credentials for the WordPress node. You can find out how to do that here.</li> <li>Enter the title in the Title field.</li> <li>Click on Execute Node to run the workflow.</li> </ol> <p></p>","title":"2. Wordpress node (create: post)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.wordpress/#3-wordpress1-node-update-post","tags":["Workflow\u00b2","WordPress"],"text":"<ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Update' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Post ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Wordpress &gt; Output Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$node[\"Wordpress\"].json[\"id\"]}}</code>.</li> <li>Click on the Add Field button and select 'Content' from the dropdown list.</li> <li>Enter the content in the Content filed.</li> <li>Click on Execute Node to run the workflow.</li> </ol> <p></p>","title":"3. Wordpress1 node (update: post)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.workflowTrainingCustomerDatastore/","text":"<p>This node is used exclusively for the Doc\u00b2 new user onboarding tutorial. It provides dummy data for testing purposes and has no further functionality.</p>","title":"Customer Datastore (n8n Training)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.workflowTrainingCustomerMessenger/","text":"<p>This node is used exclusively for the Doc\u00b2 new user onboarding tutorial. It provides no further functionality.</p>","title":"Customer Messenger (n8n Training)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.xero/","tags":["Workflow\u00b2","Xero"],"text":"<p>Xero offers an online cloud-based SaaS accounting software platform for small and medium-sized businesses.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Xero"},{"location":"workflow/integrations/nodes/workflow-nodes-base.xero/#basic-operations","tags":["Workflow\u00b2","Xero"],"text":"<ul> <li>Contact<ul> <li>Create a contact</li> <li>Get a contact</li> <li>Get all contacts</li> <li>Update a contact</li> </ul> </li> <li>Invoice<ul> <li>Create a invoice</li> <li>Get a invoice</li> <li>Get all invoices</li> <li>Update a invoice</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.xero/#example-usage","tags":["Workflow\u00b2","Xero"],"text":"<p>This workflow allows you to get upto 100 invoices from Xero. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - Xero</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.xero/#1-start-node","tags":["Workflow\u00b2","Xero"],"text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.xero/#2-xero-node","tags":["Workflow\u00b2","Xero"],"text":"<ol> <li>First of all, you'll have to enter credentials for the Xero node. You can find out how to do that here.</li> <li>Select 'Get All' from the Operation dropdown list.</li> <li>Select the organization for which you want to get the invoices from the Organization ID dropdown list.</li> <li>Click on Execute Node to run the workflow.</li> </ol>","title":"2. Xero node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.youTube/","tags":["Workflow\u00b2","YouTube"],"text":"<p>YouTube is an online video-sharing platform. YouTube allows users to upload, view, rate, share, add to playlists, report, comment on videos, and subscribe to other users.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"YouTube"},{"location":"workflow/integrations/nodes/workflow-nodes-base.youTube/#basic-operations","tags":["Workflow\u00b2","YouTube"],"text":"<ul> <li>Channel<ul> <li>Retrieve a channel</li> <li>Retrieve all channels</li> <li>Update a channel</li> <li>Upload a channel banner</li> </ul> </li> <li>Playlist<ul> <li>Create a playlist</li> <li>Delete a playlist</li> <li>Get a playlist</li> <li>Retrieve all playlists</li> <li>Update a playlist</li> </ul> </li> <li>Playlist Item<ul> <li>Add an item to a playlist</li> <li>Delete a item from a playlist</li> <li>Get a playlist's item</li> <li>Retrieve all playlist items</li> </ul> </li> <li>Video<ul> <li>Delete a video</li> <li>Get a video</li> <li>Retrieve all videos</li> <li>Rate a video</li> <li>Update a video</li> <li>Upload a video</li> </ul> </li> <li>Video Category<ul> <li>Retrieve all video categories</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.youTube/#example-usage","tags":["Workflow\u00b2","YouTube"],"text":"<p>This workflow allows you to upload a video, create a playlist, and add the video to the playlist in YouTube. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Start - Read Binary File - YouTube</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.youTube/#1-start-node","tags":["Workflow\u00b2","YouTube"],"text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.youTube/#2-read-binary-file-node","tags":["Workflow\u00b2","YouTube"],"text":"<ol> <li>Enter the path to the video file you want to upload in the File Path field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p></p>","title":"2. Read Binary File node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.youTube/#3-youtube-node-upload-video","tags":["Workflow\u00b2","YouTube"],"text":"<ol> <li>First of all, you'll have to enter credentials for the YouTube node. You can find out how to do that here.</li> <li>Select 'Video' from the Resource dropdown list.</li> <li>Select 'Upload' from the Operation dropdown list.</li> <li>Enter the title of the video in the Title field.</li> <li>Select the region code from Region Code dropdown list.</li> <li>Select the video category from the Category ID dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p></p>","title":"3. YouTube node (upload: video)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.youTube/#4-youtube1-node-create-playlist","tags":["Workflow\u00b2","YouTube"],"text":"<ol> <li>Select the credentials that you entered in the previous YouTube node.</li> <li>Select 'Playlist' from the Resource dropdown list.</li> <li>Select 'Create' from the Operation dropdown list.</li> <li>Enter the title of the playlist in the Title field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p></p>","title":"4. YouTube1 node (create: playlist)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.youTube/#5-youtube2-node-add-playlistitem","tags":["Workflow\u00b2","YouTube"],"text":"<ol> <li>Select the credentials that you entered in the previous YouTube node.</li> <li>Select 'Playlist Item' from the Resource dropdown list.</li> <li>Select the playlist from the Playlist ID dropdown list.</li> <li>Click on the gears icon next to the Video ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; YouTube &gt; Output Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$node[\"YouTube\"].json[\"id\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p></p>","title":"5. YouTube2 node (add: playlistItem)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.yourls/","tags":["Workflow\u00b2","Yourls"],"text":"<p>Yourls is a free and open-source software that allows you to run your URL shortening service.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Yourls"},{"location":"workflow/integrations/nodes/workflow-nodes-base.yourls/#basic-operations","tags":["Workflow\u00b2","Yourls"],"text":"<ul> <li>URL<ul> <li>Expand a URL</li> <li>Shorten a URL</li> <li>Get stats about one short URL</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.yourls/#example-usage","tags":["Workflow\u00b2","Yourls"],"text":"<p>This workflow allows you to create a short URL and get the statistics of the URL. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Start - Yourls</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.yourls/#1-start-node","tags":["Workflow\u00b2","Yourls"],"text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.yourls/#2-yourls-node-shorten-url","tags":["Workflow\u00b2","Yourls"],"text":"<p>This node will create  a short URL for the link we specify.</p> <ol> <li>First of all, you'll have to enter credentials for the Yourls node. You can find out how to do that here.</li> <li>Enter the URL that you want to shorten in the URL field.</li> <li>Click on Add Field and select 'Title'.</li> <li>Enter a title in the Title field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node creates a short URL for the URL you specified.</p> <p></p>","title":"2. Yourls node (shorten: url)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.yourls/#3-yourls1-node-stats-url","tags":["Workflow\u00b2","Yourls"],"text":"<p>This node will give us the statistics of the short URL that we specify. We will get the statistics for the URL that we created in the previous step.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Stats' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Short URL field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Yourls &gt; Output Data &gt; JSON &gt; shorturl. You can also add the following expression: <code>{{$node[\"Yourls\"].json[\"shorturl\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node gives us the statistics of the short URL that we created in the previous node.</p> <p></p>","title":"3. Yourls1 node (stats: url)"},{"location":"workflow/integrations/nodes/workflow-nodes-base.zammad/","tags":["Workflow\u00b2","Zammad"],"text":"<p>Zammad is a free helpdesk and issue tracking system.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Zammad"},{"location":"workflow/integrations/nodes/workflow-nodes-base.zammad/#basic-operations","tags":["Workflow\u00b2","Zammad"],"text":"<ul> <li>Group<ul> <li>Create a group</li> <li>Delete a group</li> <li>Retrieve a group</li> <li>Get all groups</li> <li>Update a group</li> </ul> </li> <li>Organization<ul> <li>Create an organization</li> <li>Delete an organization</li> <li>Retrieve an organization</li> <li>Retrieve all organizations</li> <li>Update an organization</li> </ul> </li> <li>Ticket<ul> <li>Create a ticket</li> <li>Delete a ticket</li> <li>Retrieve a ticket</li> <li>Retrieve all tickets</li> </ul> </li> <li>User<ul> <li>Create a user</li> <li>Delete a user</li> <li>Retrieve a user</li> <li>Retrieve all users</li> <li>Retrieve currently logged-in user</li> <li>Update a user</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.zendesk/","tags":["Workflow\u00b2","Zendesk"],"text":"<p>Zendesk is a support ticketing system, designed to help track, prioritize, and solve customer support interactions. More than just a help desk, Zendesk Support helps nurture customer relationships with personalized, responsive support across any channel.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Zendesk"},{"location":"workflow/integrations/nodes/workflow-nodes-base.zendesk/#basic-operations","tags":["Workflow\u00b2","Zendesk"],"text":"<ul> <li>Ticket<ul> <li>Create a ticket</li> <li>Delete a ticket</li> <li>Get a ticket</li> <li>Get all tickets</li> <li>Recover a suspended ticket</li> <li>Update a ticket</li> </ul> </li> <li>Ticket Field<ul> <li>Get a ticket field</li> <li>Get all system and custom ticket fields</li> </ul> </li> <li>User<ul> <li>Create a user</li> <li>Delete a user</li> <li>Get a user</li> <li>Get all users</li> <li>Get a user's organizations</li> <li>Get data related to the user</li> <li>Search users</li> <li>Update a user</li> </ul> </li> <li>Organization<ul> <li>Create an organization</li> <li>Delete an organization</li> <li>Count organizations</li> <li>Get an organization</li> <li>Get all organizations</li> <li>Get data related to the organization</li> <li>Update a organization</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.zendesk/#example-usage","tags":["Workflow\u00b2","Zendesk"],"text":"<p>This workflow allows you to create a ticket in Zendesk. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - Zendesk</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.zendesk/#1-start-node","tags":["Workflow\u00b2","Zendesk"],"text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.zendesk/#2-zendesk-node","tags":["Workflow\u00b2","Zendesk"],"text":"<ol> <li>First of all, you'll have to enter credentials for the Zendesk node. You can find out how to do that here.</li> <li>Enter the description of the ticket in the Description field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>","title":"2. Zendesk node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.zohoCrm/","tags":["Workflow\u00b2","Zoho CRM"],"text":"<p>Zoho CRM is an online Sales CRM software that manages sales, marketing and support.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Zoho CRM"},{"location":"workflow/integrations/nodes/workflow-nodes-base.zohoCrm/#basic-operations","tags":["Workflow\u00b2","Zoho CRM"],"text":"<ul> <li>Account<ul> <li>Create an account</li> <li>Create a new record, or update the current one if it already exists (upsert)</li> <li>Delete an account</li> <li>Get an account</li> <li>Get all accounts</li> <li>Update an account</li> </ul> </li> <li>Contact<ul> <li>Create a contact</li> <li>Create a new record, or update the current one if it already exists (upsert)</li> <li>Delete a contact</li> <li>Get a contact</li> <li>Get all contacts</li> <li>Update a contact</li> </ul> </li> <li>Deal<ul> <li>Create a deal</li> <li>Create a new record, or update the current one if it already exists (upsert)</li> <li>Delete a contact</li> <li>Get a contact</li> <li>Get all contacts</li> <li>Update a contact</li> </ul> </li> <li>Invoice<ul> <li>Create an invoice</li> <li>Create a new record, or update the current one if it already exists (upsert)</li> <li>Delete an invoice</li> <li>Get an invoice</li> <li>Get all invoices</li> <li>Update an invoice</li> </ul> </li> <li>Lead<ul> <li>Create a lead</li> <li>Create a new record, or update the current one if it already exists (upsert)</li> <li>Delete a lead</li> <li>Get a lead</li> <li>Get all leads</li> <li>Get lead fields</li> <li>Update a lead</li> </ul> </li> <li>Product<ul> <li>Create a product</li> <li>Create a new record, or update the current one if it already exists (upsert)</li> <li>Delete a product</li> <li>Get a product</li> <li>Get all products</li> <li>Update a product</li> </ul> </li> <li>Purchase Order<ul> <li>Create a purchase order</li> <li>Create a new record, or update the current one if it already exists (upsert)</li> <li>Delete a purchase order</li> <li>Get a purchase order</li> <li>Get all purchase orders</li> <li>Update a purchase order</li> </ul> </li> <li>Quote<ul> <li>Create a quote</li> <li>Create a new record, or update the current one if it already exists (upsert)</li> <li>Delete a quote</li> <li>Get a quote</li> <li>Get all quotes</li> <li>Update a quote</li> </ul> </li> <li>Sales Order<ul> <li>Create a sales order</li> <li>Create a new record, or update the current one if it already exists (upsert)</li> <li>Delete a sales order</li> <li>Get a sales order</li> <li>Get all sales orders</li> <li>Update a sales order</li> </ul> </li> <li>Vendor<ul> <li>Create a vendor</li> <li>Create a new record, or update the current one if it already exists (upsert)</li> <li>Delete a vendor</li> <li>Get a vendor</li> <li>Get all vendors</li> <li>Update a vendor</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.zohoCrm/#example-usage","tags":["Workflow\u00b2","Zoho CRM"],"text":"<p>This workflow allows you to get the data of all leads from Zoho CRM. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - Zoho CRM</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.zohoCrm/#1-start-node","tags":["Workflow\u00b2","Zoho CRM"],"text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.zohoCrm/#2-zoho-crm-node","tags":["Workflow\u00b2","Zoho CRM"],"text":"<ol> <li>First of all, you'll have to enter credentials for the Zoho CRM node. You can find out how to do that here.</li> <li>Select the 'Get All' option from the Operation dropdown list.</li> <li>Click on Execute Node to run the workflow.</li> </ol>","title":"2. Zoho CRM node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.zoom/","tags":["Workflow\u00b2","Zoom"],"text":"<p>Zoom is a communications technology company that provides videotelephony and online chat services through a cloud-based peer-to-peer software platform and is used for teleconferencing, telecommuting, distance education, and social relations.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Zoom"},{"location":"workflow/integrations/nodes/workflow-nodes-base.zoom/#basic-operations","tags":["Workflow\u00b2","Zoom"],"text":"<ul> <li>Meeting<ul> <li>Create a meeting</li> <li>Delete a meeting</li> <li>Retrieve a meeting</li> <li>Retrieve all meetings</li> <li>Update a meeting</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.zoom/#example-usage","tags":["Workflow\u00b2","Zoom"],"text":"<p>This workflow allows you to create a meeting in Zoom. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - Zoom</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.zoom/#1-start-node","tags":["Workflow\u00b2","Zoom"],"text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.zoom/#2-zoom-node","tags":["Workflow\u00b2","Zoom"],"text":"<ol> <li>First of all, you'll have to enter credentials for the Zoom node. You can find out how to do that here.</li> <li>Enter the topic of the meeting in the Topic field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>","title":"2. Zoom node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.zulip/","text":"<p>Zulip is an open source chat and collaborative software. In Zulip, communication occurs in streams (which are like channels in IRC).</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Zulip"},{"location":"workflow/integrations/nodes/workflow-nodes-base.zulip/#basic-operations","text":"<ul> <li>Message<ul> <li>Delete a message</li> <li>Get a message</li> <li>Send a private message</li> <li>Send a message to stream</li> <li>Update a message</li> <li>Upload a file</li> </ul> </li> <li>Stream<ul> <li>Create a stream.</li> <li>Delete a stream.</li> <li>Get all streams.</li> <li>Get subscribed streams.</li> <li>Update a stream.</li> </ul> </li> <li>User<ul> <li>Create a user.</li> <li>Deactivate a user.</li> <li>Get a user.</li> <li>Get all users.</li> <li>Update a user.</li> </ul> </li> </ul>","title":"Basic Operations"},{"location":"workflow/integrations/nodes/workflow-nodes-base.zulip/#example-usage","text":"<p>This workflow allows you to send a private message on Zulip. You can also find the workflow on the website. This example usage workflow would use the following two nodes. - Start - Zulip</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/nodes/workflow-nodes-base.zulip/#1-start-node","text":"<p>The start node exists by default when you create a new workflow.</p>","title":"1. Start node"},{"location":"workflow/integrations/nodes/workflow-nodes-base.zulip/#2-zulip-node","text":"<ol> <li>First of all, you'll have to enter credentials for the Zulip node. You can find out how to do that here.</li> <li>Select the user you want to send a private message to from the To dropdown list.</li> <li>Type the message you want to post in the Content field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>","title":"2. Zulip node"},{"location":"workflow/integrations/trigger-nodes/","text":"<p>This section provides information about n8n's trigger nodes.</p>","title":"Overview"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.activeCampaignTrigger/","text":"<p>ActiveCampaign is a cloud software platform for small-to-mid-sized business. The company offers software for customer experience automation, which combines the email marketing, marketing automation, sales automation, and CRM categories.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"ActiveCampaign Trigger"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.activeCampaignTrigger/#example-usage","text":"<p>This workflow allows you to receive updates when a new account is added by an admin in ActiveCampaign. You can also find the workflow on the website. This example usage workflow would use the following node. - ActiveCampaign Trigger</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.activeCampaignTrigger/#1-activecampaign-trigger-node","text":"<ol> <li>First of all, you'll have to enter credentials for the ActiveCampaign Trigger node. You can find out how to do that here.</li> <li>Select 'account_add' from the Events dropdown list.</li> <li>Select 'Admin' from the Source dropdown list.</li> <li>Click on Execute Node to run the workflow.</li> </ol>  <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the ActiveCampaign Trigger node.</p>","title":"1. ActiveCampaign Trigger node"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.acuitySchedulingTrigger/","text":"<p>Acuity Scheduling is a cloud-based appointment scheduling software solution that enables business owners to manage their appointments online. It has the capability to automatically sync calendars according to users\u2019 time zones and can send regular alerts and reminders to users regarding their appointment schedules.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Acuity Scheduling Trigger"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.acuitySchedulingTrigger/#example-usage","text":"<p>This workflow allows you to receive updates when a new appointment is scheduled on Acuity Scheduling. You can also find the workflow on the website. This example usage workflow would use the following node. - Acuity Scheduling Trigger</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.acuitySchedulingTrigger/#1-acuity-scheduling-trigger-node","text":"<ol> <li>First of all, you'll have to enter credentials for the Acuity Scheduling Trigger node. You can find out how to do that here.</li> <li>Select the <code>appointment.scheduled</code> option from the Event dropdown list.</li> <li>Click on Execute Node to run the workflow.</li> </ol>  <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Acuity Scheduling Trigger node.</p>","title":"1. Acuity Scheduling Trigger node"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.affinityTrigger/","text":"<p>Affinity is a powerful relationship intelligence platform enabling teams to leverage their network to close the next big deal.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Affinity Trigger"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.affinityTrigger/#example-usage","text":"<p>This workflow allows you to receive updates when a new list is created in Affinity. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following node. - Affinity Trigger</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.affinityTrigger/#1-affinity-trigger-node","text":"<ol> <li>First of all, you'll have to enter credentials for the Affinity Trigger node. You can find out how to do that here.</li> <li>Select 'list.created' from the Events dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol>  <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Affinity Trigger node.</p>","title":"1. Affinity Trigger node"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.airtableTrigger/","text":"<p>Airtable is a spreadsheet-database hybrid, with the features of a database but applied to a spreadsheet. The fields in an Airtable table are similar to cells in a spreadsheet, but have types such as 'checkbox', 'phone number', and 'drop-down list', and can reference file attachments like images.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Airtable Trigger"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.airtableTrigger/#example-usage","text":"<p>This workflow allows you to receive a Mattermost message when new data gets added to Airtable. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Airtable Trigger - Mattermost</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.airtableTrigger/#1-airtable-trigger-node","text":"<p>The Airtable Trigger node will trigger the workflow when new data gets added to Airtable.</p> <ol> <li>First of all, you'll have to enter credentials for the Airtable Trigger node. You can find out how to do that here.</li> <li>Click on Add Poll Time and select 'Every Minute' from the Mode dropdown list. This will check Airtable every minute for new data entries.</li> <li>Enter the Base ID in the Base ID field. For obtaining the Base ID, head over to their API page and select the correct base. You\u2019ll find the Base ID there.</li> <li>Enter the table name in the Table field.</li> <li>Enter a trigger field name in the Trigger Field field. If you don't have a 'Created Time' or 'Last modified time' field in your table, please create one.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns the new data from Airtable. This output gets passed on to the next node in the workflow.</p> <p></p>","title":"1. Airtable Trigger node"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.airtableTrigger/#2-mattermost-node-post-message","text":"<p>This node will send a message about the new data in the channel 'Information Updated' in Mattermost. If you have a different channel, use that instead.</p> <ol> <li> <p>First of all, you'll have to enter credentials for the Mattermost node. You can find out how to do that here.</p> </li> <li> <p>Select a channel from the Channel ID dropdown list.</p> </li> <li>Click on the gears icon next to the Message field and click on Add Expression.</li> <li>Enter the following message in the Expression field: <pre><code>New Data was added to Airtable.\nID:{{$node[\"Airtable Trigger\"].json[\"fields\"][\"id\"]}}\nName: {{$node[\"Airtable Trigger\"].json[\"fields\"][\"name\"]}}\n</code></pre> </li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node sends a message in Mattermost about the new data that got added to Airtable.</p> <p></p>  <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Airtable Trigger node.</p>","title":"2. Mattermost node (post: message)"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.amqpTrigger/","text":"<p>AMQP is an open standard application layer protocol for message-oriented middleware. The defining features of AMQP are message orientation, queuing, routing, reliability and security. This node supports AMQP 1.0 compatible message brokers.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"AMQP Trigger"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.amqpTrigger/#example-usage","text":"<p>This workflow allows you to receive messages for an ActiveMQ queue via AMQP Trigger. You can also find the workflow on the website. This example usage workflow would use the following node. - AMQP Trigger</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.amqpTrigger/#1-amqp-trigger-node","text":"<ol> <li>First of all, you'll have to enter credentials for the AMQP Trigger node. You can find out how to do that here.</li> <li>Enter the name of the queue or topic in the Queue / Topic field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>  <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the AMQP Trigger node.</p>","title":"1. AMQP Trigger node"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.asanaTrigger/","text":"<p>Asana is a web and mobile application designed to help teams organize, track, and manage their work.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Asana Trigger"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.asanaTrigger/#example-usage","text":"<p>This workflow allows you to receive updates when an event occurs in Asana. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following node. - Asana Trigger</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.asanaTrigger/#1-asana-trigger-node","text":"<ol> <li>First of all, you'll have to enter credentials for the Asana Trigger node. You can find out how to do that here.</li> <li>Enter the name of the resource in the Resource field.</li> <li>Enter the name of the workspace in the Workspace field.</li> <li>Click on Execute Node to run the node.</li> </ol>  <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Asana Trigger node.</p>","title":"1. Asana Trigger node"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.autopilotTrigger/","text":"<p>Autopilot is a visual marketing software that allows you to automate and personalize your marketing across the entire customer journey.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Autopilot Trigger"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.autopilotTrigger/#events","text":"<ul> <li>Contact added</li> <li>Contact added to a list</li> <li>Contact entered to a segment</li> <li>Contact left a segment</li> <li>Contact removed from a list</li> <li>Contact unsubscribed</li> <li>Contact updated</li> </ul>","title":"Events"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.autopilotTrigger/#example-usage","text":"<p>This workflow allows you to receive updates when a new contact gets added in Autopilot and add them to a base in Airtable. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following node. - Autopilot Trigger - Set - Airtable</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.autopilotTrigger/#1-autopilot-trigger","text":"<p>The Autopilot Trigger node will trigger the workflow when a new contact gets added in Autopilot.</p> <ol> <li>First of all, you'll have to enter credentials for the Autopilot Trigger node. You can find out how to do that here.</li> <li>Select 'Contact Added' from the Events dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns the information of the new contact that was added to Autopilot. This output gets passed on to the next node in the workflow.</p> <p></p>","title":"1. Autopilot Trigger"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.autopilotTrigger/#2-set-node","text":"<p>We will use the Set node to ensure that only the data that we set in this node gets passed on to the next nodes in the workflow.</p> <ol> <li>Click on Add Value and select 'String' from the dropdown list.</li> <li>Enter <code>First Name</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; contact &gt; FirstName. You can also add the following expression: <code>{{$json[\"contact\"][\"FirstName\"]}}</code>.</li> <li>Enter <code>First Name</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; contact &gt; LastName. You can also add the following expression: <code>{{$json[\"contact\"][\"LastName\"]}}</code>.</li> <li>Click on Add Value and select 'String' from the dropdown list.</li> <li>Enter <code>Email</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; contact &gt; Email. You can also add the following expression: <code>{{$json[\"contact\"][\"Email\"]}}</code>.</li> <li>Toggle Keep Only Set to <code>true</code>. We set this option to true to ensure that only the data that we have set in this node get passed on to the next nodes in the workflow.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node uses the data from the previous node and returns the data that we set for the workflow.</p> <p></p>","title":"2. Set node"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.autopilotTrigger/#3-airtable-node","text":"<p>This node will store the data coming from the previous node in a table in Airtable.</p> <ol> <li>First of all, you'll have to enter credentials for the Airtable node. You can find out how to do that here.</li> <li>Select 'Append' from the Operation dropdown list.</li> <li>Enter the base ID in the Base ID field. For obtaining the Base ID, head over to their API page and select the correct base. You\u2019ll find the Base ID under the Introduction section.</li> <li>In Doc\u00b2, paste the ID of the base in the Base ID field.</li> <li>Enter the table name in the Table name field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node adds the information of a new contact from the previous node in a table in Airtable.</p> <p></p>  <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Autopilot Trigger node.</p>","title":"3. Airtable node"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.awsSnsTrigger/","text":"<p>AWS SNS is a notification service provided as part of Amazon Web Services. It provides a low-cost infrastructure for the mass delivery of messages, predominantly to mobile users.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"AWS SNS Trigger"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.awsSnsTrigger/#example-usage","text":"<p>This workflow allows you to receive updates for events in AWS SNS. You can also find the workflow on the website. This example usage workflow would use the following node. - AWS SNS Trigger</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.awsSnsTrigger/#1-aws-sns-trigger-node","text":"<ol> <li>First of all, you'll have to enter credentials for the AWS SNS Trigger node. You can find out how to do that here.</li> <li>Select the topic you want to listen for in the Topic dropdown list.</li> <li>Click on Execute Node to run the workflow.</li> </ol>  <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the AWS SNS Trigger node.</p>","title":"1. AWS SNS Trigger node"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.bitbucketTrigger/","text":"<p>Bitbucket is a web-based version control repository hosting service owned by Atlassian, for source code and development projects that use either Mercurial or Git revision control systems.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Bitbucket Trigger"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.bitbucketTrigger/#example-usage","text":"<p>This workflow allows you to receive updates when events occur in a Bitbucket repository. You can also find the workflow on the website. This example usage workflow would use the following node. - Bitbucket Trigger</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.bitbucketTrigger/#1-bitbucket-trigger-node","text":"<ol> <li>First of all, you'll have to enter credentials for the Bitbucket Trigger node. You can find out how to do that here.</li> <li>Select 'Repository' from the Resource dropdown list.</li> <li>Select the repository you want to receive updates for from the Repository dropdown list.</li> <li>Select the events you want to receive updates for from the Events dropdown list.</li> <li>Click on Execute Node to run the workflow.</li> </ol>  <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Bitbucket Trigger node.</p>","title":"1. Bitbucket Trigger node"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.boxTrigger/","text":"<p>Box is a cloud computing company which provides file sharing, collaborating, and other tools for working with files that are uploaded to its servers.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Box Trigger"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.boxTrigger/#example-usage","text":"<p>This workflow allows you to receive updates when events occur in Box. You can also find the workflow on the website. This example usage workflow would use the following node. - Box Trigger</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.boxTrigger/#1-box-trigger-node","text":"<ol> <li>First of all, you'll have to enter credentials for the Box Trigger node. You can find out how to do that here.</li> <li>Select the events for which you want to receive updates for from the Events dropdown list.</li> <li>Select the type of item that will trigger an update from the Target Type dropdown list.</li> <li>Enter the target ID of the file/folder to be monitored for updates in the Target ID field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>  <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Box Trigger node.</p>","title":"1. Box Trigger node"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.boxTrigger/#faqs","text":"","title":"FAQs"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.boxTrigger/#how-do-i-find-my-target-id-in-box","text":"<ol> <li>Open the file/folder that you would like to monitor.</li> <li>Copy the string of charatcters after <code>folder/</code> in your URL. This is the target ID. For example, if the URL is <code>https://app.box.com/folder/12345</code>, then <code>12345</code> is the target ID.</li> <li>Paste it in the Target ID field in Workflow\u00b2.</li> </ol>","title":"How do I find my Target ID in Box?"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.calendlyTrigger/","text":"<p>Calendly is an automated scheduling software that is designed to make the process of finding meeting times easy.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Calendly Trigger"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.calendlyTrigger/#example-usage","text":"<p>This workflow allows you to receive updates for events in Calendly. You can also find the workflow on the website. This example usage workflow would use the following node. - Calendly Trigger</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.calendlyTrigger/#1-calendly-trigger-node","text":"<ol> <li>First of all, you'll have to enter credentials for the Calendly Trigger node. You can find out how to do that here.</li> <li>Select the events you want to receive updates for from the Events dropdown list.</li> <li>Click on Execute Node to run the workflow.</li> </ol>  <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Calendly Trigger node.</p>","title":"1. Calendly Trigger node"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.chargebeeTrigger/","text":"<p>Chargebee is a billing platform for subscription based SaaS and eCommerce businesses. Chargebee integrates with payment gateways to let you automate recurring payment collection along with invoicing, taxes, accounting, email notifications, SaaS Metrics and customer management.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Chargebee Trigger"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.chargebeeTrigger/#example-usage","text":"<p>This workflow allows you to receive updates for events in Chargebee. You can also find the workflow on the website. This example usage workflow would use the following node. - Chargebee Trigger</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.chargebeeTrigger/#1-chargebee-trigger-node","text":"<ol> <li>First of all, you'll have to add the webhook URL in Chargebee. You can find instructions on how to do that in the FAQs below.</li> <li>Select the <code>*</code> option in the Events field to receive updates when any event is triggered.</li> <li>Click on Execute Node to run the workflow.</li> </ol>  <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Chargebee Trigger node.</p>","title":"1. Chargebee Trigger node"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.chargebeeTrigger/#faqs","text":"","title":"FAQs"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.chargebeeTrigger/#how-do-i-add-my-webhook-url-in-chargebee","text":"<ol> <li>Open your Chargebee dashboard.</li> <li>Click on \"Settings\".</li> <li>Click on \"Configure Chargebee\".</li> <li>Scroll down and click on \"Webhooks\".</li> <li>Click on the Add Webhook button.</li> <li>Enter the Webhook Name and the Webhook URL.</li> <li>Click on the Create button.</li> </ol>","title":"How do I add my webhook URL in Chargebee?"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.ciscoWebexTrigger/","text":"<p>Webex by Cisco is a web conferencing and videoconferencing application.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Webex by Cisco Trigger"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.ciscoWebexTrigger/#example-usage","text":"<p>This workflow allows you to receive updates when meeting events occur in your Webex account. This example usage workflow uses the following node:</p> <ul> <li>Webex by Cisco Trigger</li> </ul> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example usage"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.ciscoWebexTrigger/#1-webex-by-cisco-trigger-node","text":"<ol> <li>First enter your credentials for node. You can find out how to do that here.</li> <li>Select 'Meeting' from the Resource dropdown list.</li> <li>Select the events you want to receive updates for from the Events dropdown list.</li> <li>Click on Execute Node to run the workflow.</li> </ol>  <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Webex by Cisco Trigger node.</p>","title":"1. Webex by Cisco Trigger node"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.clickUpTrigger/","text":"<p>ClickUp is a cloud-based collaboration and project management tool suitable for businesses of all sizes and industries. Features include communication and collaboration tools, task assignments and statuses, alerts and a task toolbar.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"ClickUp Trigger"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.clickUpTrigger/#example-usage","text":"<p>This workflow allows you to receive updates for events in ClickUp. You can also find the workflow on the website. This example usage workflow would use the following node. - ClickUp Trigger</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.clickUpTrigger/#1-clickup-trigger-node","text":"<ol> <li>First of all, you'll have to enter credentials for the ClickUp Trigger node. You can find out how to do that here.</li> <li>Select your team from the Team dropdown list.</li> <li>Select the <code>*</code> option in the Events field to receive updates for all the events.</li> <li>Click on Execute Node to run the workflow.</li> </ol>  <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the ClickUp Trigger node.</p>","title":"1. ClickUp Trigger node"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.clockifyTrigger/","text":"<p>Clockify is a free time tracker and timesheet app for tracking work hours across projects.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>  <p>Note: This node uses the workflow timezone setting to specify the range of time entries starting time. You have to configure the workflow timezone setting if you want this Trigger node to retrieve the right time entries.</p>","title":"Clockify Trigger"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.clockifyTrigger/#example-usage","text":"<p>This workflow allows you to get new time entries from Clockify. You can also find the workflow on the website. This example usage workflow would use the following node. - Clockify Trigger</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.clockifyTrigger/#1-clockify-trigger-node","text":"<ol> <li>First enter your credentials for the Clockify Trigger node. You can find out how to do that here.</li> <li>Select the Workspace you want to receive updates for using the dropdown list.</li> <li>Click on Execute Node to run the workflow.</li> </ol> <p>Note: This node uses polling to get new time entries. You have to use the Add Poll Time button if you want this Trigger node to run and retrieve new time entries regularly.</p>  <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Clockify Trigger node.</p>","title":"1. Clockify Trigger node"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.convertkitTrigger/","text":"<p>ConvertKit is a fully-featured email marketing platform. ConvertKit can be used to build an email list, send email broadcasts, automate sequences, create segments, and build landing pages.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"ConvertKit Trigger"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.convertkitTrigger/#example-usage","text":"<p>This workflow allows you to receive updates when a subscriber is added through a form in ConvertKit. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following node. - ConvertKit Trigger</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.convertkitTrigger/#1-convertkit-trigger-node","text":"<ol> <li>First of all, you'll have to enter credentials for the ConvertKit Trigger node. You can find out how to do that here.</li> <li>Select 'Form Subscribe' from the Event dropdown list.</li> <li>Select the form from the Form ID dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol>  <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the ConvertKit Trigger node.</p>","title":"1. ConvertKit Trigger node"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.copperTrigger/","text":"<p>Copper is a CRM that focuses on strong integration with Google's G Suite. It is mainly targeted towards small and medium-sized businesses.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Copper Trigger"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.copperTrigger/#example-usage","text":"<p>This workflow allows you to receive an update when a new project is created in Copper. You can also find the workflow on the website. This example usage workflow would use the following node. - Copper Trigger</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.copperTrigger/#1-copper-trigger-node","text":"<ol> <li>First of all, you'll have to enter credentials for the Copper Trigger node. You can find out how to do that here.</li> <li>Select 'Project' from the Resource dropdown list.</li> <li>Select 'New' from the Event dropdown list.</li> <li>Click on Execute Node to run the workflow.</li> </ol>  <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Copper Trigger node.</p>","title":"1. Copper Trigger node"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.customerIoTrigger/","text":"<p>Customer.io enables users to send newsletters to selected segments of customers using their website data. You can send targeted emails, push notifications, and SMS to lower churn, create stronger relationships, and drive subscriptions.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Customer.io Trigger"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.customerIoTrigger/#example-usage","text":"<p>This workflow allows you to receive updates when a subscriber unsubscribes in Customer.io. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following node. - Customer.io Trigger</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.customerIoTrigger/#1-customerio-trigger-node","text":"<ol> <li>First of all, you'll have to enter credentials for the Customer.io Trigger node. You can find out how to do that here.</li> <li>Select 'Customer Unsubscribe' from the Event dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol>  <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Customer.io Trigger node.</p>","title":"1. Customer.io Trigger node"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.emeliaTrigger/","text":"<p>Emelia is a cold-mailing tool.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Emelia Trigger"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.emeliaTrigger/#events","text":"<ul> <li>Email Bounced</li> <li>Email Opened</li> <li>Email Replied</li> <li>Email Sent</li> <li>Link Clicked</li> <li>Unsubscribed Contact</li> </ul>","title":"Events"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.emeliaTrigger/#example-usage","text":"<p>This workflow allows you to send a message on Mattermost when a lead replies to your email. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following node. - Emelia Trigger - Mattermost</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.emeliaTrigger/#1-emelia-trigger","text":"<p>The Emelia Trigger node will trigger the workflow when a lead sends a reply to the campaign <code>n8n</code>. If you have a different campaign, use that instead.</p> <ol> <li>First of all, you'll have to enter credentials for the Emelia Trigger node. You can find out how to do that here.</li> <li>Select a campaign from the Campaign dropdown list.</li> <li>Select 'Email Replied' from the Events dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node triggers the workflow when a lead sends a reply. This output is passed on to the next node in the workflow.</p> <p></p>","title":"1. Emelia Trigger"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.emeliaTrigger/#2-mattermost-node-post-message","text":"<p>This node will send a message to the <code>Leads</code> channel in Mattermost. If you have a different channel, use that instead.</p> <ol> <li>First of all, you'll have to enter credentials for the Mattermost node. You can find out how to enter credentials for this node here.</li> <li>Select a channel from the Channel ID dropdown list.</li> <li> <p>Click on the gears icon next to the Message field click on Add Expression.</p> </li> <li> <p>Enter the following message in the Expression field. <code>{{$json[\"contact\"][\"firstName\"]}} from {{$json[\"contact\"][\"company\"]}} has replied back to your campaign.</code></p> </li> <li>Click on Execute Node to run the workflow.</li> </ol> <p>In the screenshot below, you will notice that the node sends a message with a reply to the <code>Leads</code> channel in Mattermost.</p> <p></p>  <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Emelia Trigger node.</p>","title":"2. Mattermost node (post: message)"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.eventbriteTrigger/","text":"<p>Eventbrite is an event management and ticketing website. The service allows users to browse, create, and promote local events.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Eventbrite Trigger"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.eventbriteTrigger/#example-usage","text":"<p>This workflow allows you to get updates for an Eventbrite event. You can also find the workflow on the website. This example usage workflow would use the following node. - Eventbrite Trigger</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.eventbriteTrigger/#1-eventbrite-trigger-node","text":"<ol> <li>First of all, you'll have to enter credentials for the Eventbrite Trigger node. You can find out how to do that here.</li> <li>Select the profile that contains your event from the Organization dropdown list.</li> <li>Select the event you want to receive updates for from the Event dropdown list.</li> <li>Select the actions that you want to receive updates for from the Actions dropdown list.</li> <li>Click on Execute Node to run the workflow.</li> </ol>  <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Eventbrite Trigger node.</p>","title":"1. Eventbrite Trigger node"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.facebookTrigger/","text":"<p>Facebook is a social networking site that makes it easy to connect and share with family and friends online.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Facebook Trigger"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.facebookTrigger/#object","text":"<ul> <li>Get updates about an Ad Account</li> <li>Get updates about the app</li> <li>Get updates about Certificate Transparency</li> <li>Get updates about activity in groups and events in groups of Workplace</li> <li>Get updates about the comments on your media</li> <li>Get updates about the links for rich previews by an external provider</li> <li>Page updates</li> <li>Updates regarding granting or revoking permissions</li> <li>User profile updates</li> <li>Get updates about Whatsapp business account</li> <li>Get updates about Workplace security</li> </ul>","title":"Object"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.facebookTrigger/#example-usage","text":"<p>This workflow allows you to receive a Mattermost message when a user updates their profile on Facebook. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Facebook Trigger - Mattermost</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.facebookTrigger/#1-facebook-trigger-node","text":"<p>The Facebook Trigger node will trigger the workflow when a user updates their profile on Facebook.</p> <ol> <li>First of all, you'll have to enter credentials for the Facebook Trigger node. You can find out how to do that here.</li> <li>Select 'User' from the Object dropdown list.</li> <li>Enter your app ID in the App ID field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns the updated information of the user from Facebook. This output is passed on to the next node in the workflow.</p> <p></p>","title":"1. Facebook Trigger node"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.facebookTrigger/#2-mattermost-node-post-message","text":"<p>This node will send a message of the updated information in the channel <code>Information Updated</code> in Mattermost. If you have a different channel, use that instead.</p> <ol> <li> <p>First of all, you'll have to enter credentials for the Mattermost node. You can find out how to do that here.</p> </li> <li> <p>Select a channel from the Channel ID dropdown list.</p> </li> <li>Click on the gears icon next to the Message field and click on Add Expression.</li> <li>Enter the following message in the Expression field: <code>The user with uid {{$node[\"Facebook Trigger\"].json[\"uid\"]}} changed their {{$node[\"Facebook Trigger\"].json[\"changes\"][0][\"field\"]}} to {{$node[\"Facebook Trigger\"].json[\"changes\"][0][\"value\"][\"page\"]}}.</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node sends a message about the updated information to the <code>Information Updated</code> channel in Mattermost.</p> <p></p>  <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Facebook Trigger node.</p>","title":"2. Mattermost node (post: message)"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.figmaTrigger/","text":"<p>Figma is a prototyping tool which is primarily web-based, with additional offline features enabled by desktop applications for macOS and Windows.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>   <p> Supported Figma Plans</p> <p>Figma does not support webhooks on the free \"Starter\" plan. Your team would need to be on the \"Professional\" plan to use this node.</p>","title":"Figma Trigger (Beta)"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.figmaTrigger/#trigger-events","text":"<ul> <li>File Commented: Triggers when someone comments on a file.</li> <li>File Deleted: Triggers when an individual file is deleted, but not when an entire folder with all files is deleted.</li> <li>File Updated: Triggers when a file is saved or deleted. A save occurs when a file is closed or within 30 seconds after changes have been made.</li> <li>File Version Updated: Triggers when a named version is created in the version history of a file.</li> <li>Library Publish: Triggers when a library file is published.</li> </ul>","title":"Trigger Events"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.flowTrigger/","text":"<p>Flow is modern task and project management software for teams. It brings together tasks, projects, timelines, and conversations, and integrates with a lot of tools.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Flow Trigger"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.flowTrigger/#example-usage","text":"<p>This workflow allows you to receive updates for specified tasks in Flow. You can also find the workflow on the website. This example usage workflow would use the following node. - Flow Trigger</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.flowTrigger/#1-flow-trigger-node","text":"<ol> <li>First of all, you'll have to enter credentials for the Flow Trigger node. You can find out how to do that here.</li> <li>Select 'Task' from the Resource dropdown list.</li> <li>Enter one or more task IDs separated by commas in the Task ID field. You can find the task ID by clicking on the task in Flow and copying the number after <code>tasks/</code> in the URL.</li> <li>Click on Execute Node to run the workflow.</li> </ol>  <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Flow Trigger node.</p>","title":"1. Flow Trigger node"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.formIoTrigger/","text":"<p>Form.io is an enterprise class combined form and API data management platform for building complex form-based business process applications.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Form.io Trigger"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.formIoTrigger/#example-usage","text":"<p>This workflow allows you to receive updates for newly created submissions in Form.io. This example workflow uses the following node:</p> <ul> <li>Form.io Trigger</li> </ul> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.formIoTrigger/#1-formio-trigger-node","text":"<ol> <li>First enter credentials for the Form.io Trigger node. You can find out how to do that here.</li> <li>Select the project you want to receive updates for using the Project Name/ID dropdown list.</li> <li>Select the form you want to receive updates for using the Form Name/ID dropdown list.</li> <li>Select Submission Created from the Trigger Events dropdown list.</li> <li>Click on Execute Node to run the workflow.</li> </ol>  <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Form.io Trigger node.</p>","title":"1. Form.io Trigger node"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.formstackTrigger/","text":"<p>Formstack is a workplace productivity platform that helps organizations streamline digital work through no-code online forms, documents, and signatures.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Formstack Trigger"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.formstackTrigger/#example-usage","text":"<p>This workflow allows you to receive updates for newly created submissions in Formstack forms. This example workflow uses the following node:</p> <ul> <li>Formstack Trigger</li> </ul> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.formstackTrigger/#1-formstack-trigger-node","text":"<ol> <li>First enter credentials for the Formstack Trigger node. You can find out how to do that here.</li> <li>Enter the form you want to receive updates for using the Form Name/ID field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>  <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Form.io Trigger node.</p>","title":"1. Formstack Trigger node"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.getResponseTrigger/","text":"<p>GetResponse is an online platform that offers email marketing software, landing page creator, webinar hosting, and much more.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"GetResponse Trigger"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.getResponseTrigger/#events","text":"<ul> <li>Receive notifications when a customer is subscribed to a list</li> <li>Receive notifications when a customer is unsubscribed from a list</li> <li>Receive notifications when an email is opened</li> <li>Receive notifications when an email is clicked</li> <li>Receive notifications when a survey is submitted</li> </ul>","title":"Events"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.getResponseTrigger/#example-usage","text":"<p>This workflow allows you to receive updates when a customer gets subscribed to a list in GetResponse and add them to a base in Airtable. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - GetResponse Trigger - Set - Airtable</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.getResponseTrigger/#1-getresponse-trigger","text":"<p>The GetResponse Trigger node will trigger the workflow when a customer is subscribed to a list in GetResponse.</p> <ol> <li>First of all, you'll have to enter credentials for the GetResponse Trigger node. You can find out how to do that here.</li> <li>Select 'Customer Subscribed' from the Events dropdown list.</li> <li>Select a list from the List IDs dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns the information of the customer that gets subscribed to a list in GetResponse. This output is passed on to the next node in the workflow.</p> <p></p>","title":"1. GetResponse Trigger"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.getResponseTrigger/#2-set-node","text":"<p>We will use the Set node to ensure that only the data that we set in this node gets passed on to the next nodes in the workflow.</p> <ol> <li>Click on Add Value and select 'String' from the dropdown list.</li> <li>Enter <code>Name</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; contact_name. You can also add the following expression: <code>{{$json[\"contact_name\"]}}</code>.</li> <li>Click on Add Value and select 'String' from the dropdown list.</li> <li>Enter <code>Email</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; contact_email. You can also add the following expression: <code>{{$json[\"contact_email\"]}}</code>.</li> <li>Toggle Keep Only Set to <code>true</code>. We set this option to true to ensure that only the data that we have set in this node get passed on to the next nodes in the workflow.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node uses the data from the previous node and returns the data that we set for the workflow.</p> <p></p>","title":"2. Set node"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.getResponseTrigger/#3-airtable-node-append","text":"<p>This node will store the data coming from the previous node in a table in Airtable. Create a table like this in your Airtable base.</p> <ol> <li>First of all, you'll have to enter credentials for the Airtable node. You can find out how to do that here.</li> <li>Select 'Append' from the Operation dropdown list.</li> <li>Enter the base ID in the Base ID field. For obtaining the Base ID, head over to their API page and select the correct base. You\u2019ll find the Base ID under the Introduction section.</li> <li>In Doc\u00b2, paste the ID of the base in the Base ID field.</li> <li>Enter the table name in the Table name field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node adds the information of the customer from the previous node in a table in Airtable.</p> <p></p>  <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the GetResponse Trigger node.</p>","title":"3. Airtable node (Append)"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.githubTrigger/","text":"<p>GitHub provides hosting for software development and version control using Git. It offers the distributed version control and source code management (SCM) functionality of Git, access control and several collaboration features such as bug tracking, feature requests, task management, and wikis for every project.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"GitHub Trigger"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.githubTrigger/#example-usage","text":"<p>This workflow allows you to receive updates for GitHub events. You can also find the workflow on the website. This example usage workflow would use the following node. - GitHub Trigger</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.githubTrigger/#1-github-trigger-node","text":"<ol> <li>First of all, you'll have to enter credentials for the GitHub Trigger node. You can find out how to do that here.</li> <li>Enter the repository owner in the Repository Owner field.</li> <li>Enter the repository name in the Repository Name field.</li> <li>Select the <code>*</code> option in the Events field to receive updates when any event is triggered.</li> <li>Click on Execute Node to run the workflow.</li> </ol>  <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the GitHub Trigger node.</p>","title":"1. GitHub Trigger node"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.gitlabTrigger/","text":"<p>GitLab is a web-based DevOps lifecycle tool that provides a Git-repository manager providing wiki, issue-tracking, and continuous integration/continuous installation pipeline features.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"GitLab Trigger"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.gitlabTrigger/#example-usage","text":"<p>This workflow allows you to receive updates for GitLab events. You can also find the workflow on the website. This example usage workflow would use the following node. - GitLab Trigger</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.gitlabTrigger/#1-gitlab-trigger-node","text":"<ol> <li>First of all, you'll have to enter credentials for the GitLab Trigger node. You can find out how to do that here.</li> <li>Enter the repository owner in the Repository Owner field.</li> <li>Enter the repository name in the Repository Name field.</li> <li>Select the <code>*</code> option in the Events field to receive updates when any event is triggered.</li> <li>Click on Execute Node to run the workflow.</li> </ol>  <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the GitLab Trigger node.</p>","title":"1. GitLab Trigger node"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.googleCalendarTrigger/","text":"<p>Google Calendar is a time-management and scheduling calendar service developed by Google.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Google Calendar Trigger"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.googleCalendarTrigger/#events","text":"<ul> <li>Event Created</li> <li>Event Ended</li> <li>Event Started</li> <li>Event Updated</li> </ul>","title":"Events"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.googleDriveTrigger/","text":"<p>Google Drive is a file storage and synchronization service developed by Google. It allows users to store files on their servers, synchronize files across devices, and share files.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>   <p> Manual Executions vs. Activation</p> <p>On manual executions this node will return the last event matching its search criteria. If no event matches the criteria (for example because you are watching for files to be created but no files have been created so far), an error is thrown. Once saved and activated, the node will regularly check for any matching events and will trigger your workflow for each event found.</p>","title":"Google Drive Trigger"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.googleDriveTrigger/#example-usage","text":"<p>This workflow sends out email notifications when a new file has been uploaded to Google Drive. It uses two nodes:</p> <ul> <li>Google Drive Trigger</li> <li>Send Email</li> </ul> <p>The final workflow should look like the image below.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.googleDriveTrigger/#1-google-drive-trigger-node","text":"<ol> <li>Enter valid credentials for the Google Drive Trigger node. You can find out how to do so here.</li> <li>Select the <code>Changes involving a Specific Folder</code> option in the Trigger On field.</li> <li>Paste the URL of a Google Drive folder in the Folder URL or ID field.</li> <li>Select <code>File Created</code> in the Watch For field.</li> <li>Click on Execute Node to execute the node.</li> </ol> <p>In the screenshot below you can see the file returned by the node.</p> <p></p>","title":"1. Google Drive Trigger node"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.googleDriveTrigger/#2-send-email-node","text":"<ol> <li>Enter valid credentials for the Send Email node. You can find out how to do so here.</li> <li>Enter valid emails in the From Email and To Email fields.</li> <li>Enter <code>File Created</code> in the Subject field.</li> <li>Click on the gear icon next to the Text field and choose Add Expression.</li> <li>Enter <code>A file in your Google Drive file folder has been created: {{$json[\"name\"]}}</code> and close the expression editor.</li> <li>Click on **Execute Node to execute the node.</li> </ol>","title":"2. Send Email node"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.gumroadTrigger/","text":"<p>Gumroad is an online platform that enables creators to sell products directly to consumers.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Gumroad Trigger"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.gumroadTrigger/#example-usage","text":"<p>This workflow allows you to receive updates when a sale is made in Gumroad. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following node. - Gumroad Trigger</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.gumroadTrigger/#1-gumroad-trigger-node","text":"<ol> <li>First of all, you'll have to enter credentials for the Gumroad Trigger node. You can find out how to do that here.</li> <li>Select 'Sale' from the Resource dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol>  <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Gumroad Trigger node.</p>","title":"1. Gumroad Trigger node"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.helpScoutTrigger/","text":"<p>Help Scout is a help desk software that provides an email-based customer support platform, knowledge base tool, and an embeddable search/contact widget for customer service professionals.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Help Scout Trigger"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.helpScoutTrigger/#example-usage","text":"<p>This workflow allows you to receive updates when a customer is created in Help Scout. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following node. - Help Scout Trigger</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.helpScoutTrigger/#1-help-scout-trigger-node","text":"<ol> <li>First of all, you'll have to enter credentials for the Help Scout Trigger node. You can find out how to do that here.</li> <li>Select 'Customer - Created' from the Events dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol>  <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Help Scout Trigger node.</p>","title":"1. Help Scout Trigger node"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.hubspotTrigger/","text":"<p>HubSpot provides tools for social media marketing, content management, web analytics, landing pages, customer support, and search engine optimization.</p>  <p>\ud83d\udd11 Credentials</p> <p>For this node, you will have to retrieve the App ID and Client secret from the 'Using OAuth' section as well as the Developer API Key from the 'Using Developer API Key' section. You can find authentication information for this node here.</p>   <p>Webhooks</p> <p>If you activate a second trigger, the previous trigger stops working. This is because the trigger registers a new webhook with HubSpot when activated. HubSpot only allows one webhook at a time. </p>","title":"HubSpot Trigger"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.hubspotTrigger/#example-usage","text":"<p>This workflow allows you to receive updates when a new contact is created in HubSpot. You can also find the workflow on the website. This example usage workflow would use the following node. - HubSpot Trigger</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.hubspotTrigger/#1-hubspot-trigger-node","text":"<ol> <li>First of all, you'll have to enter credentials for the HubSpot Trigger node. You can find out how to do that here.</li> <li>Enter the HubSpot App ID in the App ID field. You can find out how to obtain the App ID in the link above.</li> <li>Click on Execute Node to run the workflow.</li> </ol>  <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the HubSpot Trigger node.</p>","title":"1. HubSpot Trigger node"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.invoiceNinjaTrigger/","text":"<p>Invoice Ninja is a free open-source online invoicing app for freelancers &amp; businesses. It offers invoicing, payments, expense tracking, &amp; time-tasks.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Invoice Ninja Trigger"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.invoiceNinjaTrigger/#example-usage","text":"<p>This workflow allows you to receive updates when new invoices are created in Invoice Ninja. You can also find the workflow on the website. This example usage workflow would use the following node. - Invoice Ninja Trigger</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.invoiceNinjaTrigger/#1-invoice-ninja-trigger-node","text":"<ol> <li>First of all, you'll have to enter credentials for the Invoice Ninja Trigger node. You can find out how to do that here.</li> <li>Select the 'Invoice Created' option from the Event dropdown list to receive updates when a new invoice is created.</li> <li>Click on Execute Node to run the workflow.</li> </ol>  <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Invoice Ninja Trigger node.</p>","title":"1. Invoice Ninja Trigger node"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.jiraTrigger/","text":"<p>Jira is a proprietary issue tracking product developed by Atlassian that allows bug tracking and agile project management.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Jira Trigger"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.jiraTrigger/#example-usage","text":"<p>This workflow allows you to receive updates for Jira events. You can also find the workflow on the website. This example usage workflow would use the following node. - Jira Trigger</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.jiraTrigger/#1-jira-trigger-node","text":"<ol> <li>First of all, you'll have to enter credentials for the Jira Trigger node. You can find out how to do that here.</li> <li>Select the <code>*</code> option in the Events field to receive updates when any event is triggered.</li> <li>Click on Execute Node to run the workflow.</li> </ol>  <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Jira Trigger node.</p>","title":"1. Jira Trigger node"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.jotFormTrigger/","text":"<p>JotForm is an online form building service. JotForm's software creates forms with a drag and drop creation tool and an option to encrypt user data.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"JotForm Trigger"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.jotFormTrigger/#example-usage","text":"<p>This workflow allows you to receive updates for form events in JotForm. You can also find the workflow on the website. This example usage workflow would use the following node. - JotForm Trigger</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.jotFormTrigger/#1-jotform-trigger-node","text":"<ol> <li>First of all, you'll have to enter credentials for the JotForm Trigger node. You can find out how to do that here.</li> <li>Select the form you want to receive updates for from the Form dropdown list.</li> <li>Click on Execute Node to run the workflow.</li> </ol>  <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the JotForm Trigger node.</p>","title":"1. JotForm Trigger node"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.kafkaTrigger/","text":"<p>Kafka is an open-source distributed event streaming platform that one can use for high-performance data pipelines, streaming analytics, data integration, and mission-critical applications.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Kafka Trigger"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.kafkaTrigger/#example-usage","text":"<p>This workflow allows you to receive messages from a topic and send an SMS if the value of the temperature is greater than 50. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Kafka Trigger - IF - Vonage - No Operation, do nothing</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.kafkaTrigger/#1-kafka-trigger-node","text":"<p>This node will trigger the workflow when a new message is sent to the topic <code>test_topic</code>. If you're using a different topic, use that instead. We are sending the message <code>{ \"id\": 1, \"temp\": 100 }</code> to <code>test_topic</code>.</p> <ol> <li>First of all, you'll have to enter credentials for the Kafka Trigger node. You can find out how to do that here.</li> <li>Enter the name of the topic in the Topic field.</li> <li>Enter the group ID in the Group ID field.</li> <li>Click on Add Option and select 'JSON Parse Message'.</li> <li>Toggle JSON Parse Message to <code>true</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node gets triggered when a new message is sent to the <code>topic_test</code> topic in Kafka.</p> <p></p>","title":"1. Kafka Trigger node"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.kafkaTrigger/#2-if-node","text":"<p>This node will compare the value of <code>temp</code> that we received in the message from the previous node. If the value is greater than 50, it will return true otherwise false.</p> <ol> <li>Click on Add Condition and select 'Number' from the dropdown list.</li> <li>Click on the gears icon next to the Value 1 field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Kafka Trigger &gt; Output Data &gt; JSON &gt; message &gt; temp. You can also add the following expression: <code>{{$node[\"Kafka Trigger\"].json[\"message\"][\"temp\"]}}</code>.</li> <li>Select 'Larger' from the Operation dropdown list.</li> <li>Set Value 2 to 50.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns output for true when the temperature is greater than 50.</p> <p></p>","title":"2. IF node"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.kafkaTrigger/#3-vonage-node-send-sms","text":"<p>This node sends an SMS to the specified phone number when the value of <code>temp</code> is greater than <code>50</code>.</p> <ol> <li>Create a Vonage node connected to the 'true' output of the IF node.</li> <li>You'll have to enter credentials for the Vonage node. You can find out how to do that here.</li> <li>Enter the name of the sender in the From field. If you're using a number, enter the number instead.</li> <li>Enter the receiver's phone number in the To field.</li> <li> <p>Click on the gears icon next to the Message field and click on Add Expression.</p> </li> <li> <p>Enter the following in the Expression field. <pre><code>Alert!\nThe value of temp is {{$node[\"Kafka Trigger\"].json[\"message\"][\"temp\"]}}.\n</code></pre> </p> </li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node sends an SMS with the value of <code>temp</code> that we received from the Kafka Trigger node.</p> <p></p>","title":"3. Vonage node (send: sms)"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.kafkaTrigger/#4-noop-node","text":"<p>Adding this node here is optional, as the absence of this node won't make a difference to the functioning of the workflow.</p> <ol> <li>Create a NoOp node connected to the 'false' output of the IF node.</li> <li>Click on Execute Node to run the node.</li> </ol> <p></p>  <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Kafka Trigger node.</p>","title":"4. NoOp node"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.keapTrigger/","text":"<p>Keap is an e-mail marketing and sales platform for small businesses, including products to manage and optimize the customer lifecycle, customer relationship management, marketing automation, lead capture, and e-commerce.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Keap Trigger"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.keapTrigger/#example-usage","text":"<p>This workflow allows you to receive updates when new contacts are created in Keap. You can also find the workflow on the website. This example usage workflow would use the following node. - Keap Trigger</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.keapTrigger/#1-keap-trigger-node","text":"<ol> <li>First of all, you'll have to enter credentials for the Keap Trigger node. You can find out how to do that here.</li> <li>Select the 'Contact Add' option from the Event dropdown list to receive updates when a new contact is created.</li> <li>Click on Execute Node to run the workflow.</li> </ol>  <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Keap Trigger node.</p>","title":"1. Keap Trigger node"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.koBoToolboxTrigger/","text":"<p>KoBo toolbox is a field survey and data collection tool that makes it easy to design interactive forms to be completed offline from mobile devices. It is available both as a free cloud solution or as a self-hosted version.</p>  <p>Credentials</p> <p>You can find authentication information for this node here.</p>  <p>This node starts a workflow upon new submissions of a specified form. The trigger node handles the creation/deletion of the hook, so you don't need to do any setup in KoBo Toolbox.</p> <p>It works the same way as the Get Submission operation in the KoBoToolbox node, including supporting the same reformatting options.</p>","title":"KoBo Toolbox trigger"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.lemlistTrigger/","text":"<p>Lemlist is an email outreach platform that allows you to automatically generate personalized images and videos and send personalized cold emails.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Lemlist Trigger"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.lemlistTrigger/#events","text":"<ul> <li>Email Bounced</li> <li>Email Clicked</li> <li>Email Opened</li> <li>Email Replied</li> <li>Email Send Failed</li> <li>Email Sent</li> <li>Email Unsubscribed</li> </ul>","title":"Events"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.lemlistTrigger/#example-usage","text":"<p>This workflow allows you to send a message on Mattermost when a lead replies to your email. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following node. - Lemlist Trigger - Mattermost</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.lemlistTrigger/#1-lemlist-trigger","text":"<p>The Lemlist Trigger node will trigger the workflow when a lead sends a reply to the campaign <code>Docs campaign</code>. If you have a different campaign, use that instead.</p> <ol> <li>First of all, you'll have to enter credentials for the Lemlist Trigger node. You can find out how to do that here.</li> <li>Select 'Email Replied' from the Events dropdown list.</li> <li>Click on Add Field and select 'Campaign ID'.</li> <li>Select 'Docs campaign' from the Campaign ID dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns the information of the reply that was sent by a lead. This output is passed on to the next node in the workflow.</p> <p></p>","title":"1. Lemlist Trigger"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.lemlistTrigger/#2-mattermost-node-post-message","text":"<p>This node will send a message to the <code>Leads</code> channel in Mattermost. If you have a different channel, use that instead.</p> <ol> <li>First of all, you'll have to enter credentials for the Mattermost node. You can find out how to enter credentials for this node here.</li> <li>Select a channel from the Channel ID dropdown list.</li> <li> <p>Click on the gears icon next to the Message field click on Add Expression.</p> </li> <li> <p>Enter the following message in the Expression field: <pre><code>{{$json[\"firstName\"]}} has replied back to your {{$json[\"campaignName\"]}}. Below is the reply:\n&gt; {{$json[\"text\"]}}\n</code></pre> </p> </li> <li>Click on Execute Node to run the workflow.</li> </ol> <p>In the screenshot below, you will notice that the node sends a message with a reply to the <code>Leads</code> channel in Mattermost.</p> <p></p>  <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Lemlist Trigger node.</p>","title":"2. Mattermost node (post: message)"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.linearTrigger/","text":"<p>Linear is a SaaS issue tracking tool.</p>  <p>Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Linear Trigger"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.linearTrigger/#events","text":"<ul> <li>Comment Reaction</li> <li>Cycle</li> <li>Issue</li> <li>Issue Comment</li> <li>Issue Label</li> <li>Project</li> </ul>","title":"Events"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.mailchimpTrigger/","text":"<p>Mailchimp is an integrated marketing platform that allows business owners to automate their email campaigns and track user engagement.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Mailchimp Trigger"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.mailchimpTrigger/#example-usage","text":"<p>This workflow allows you to receive updates when Subscribe events occur in a MailChimp list. You can also find the workflow on the website. This example usage workflow would use the following node. - Mailchimp Trigger</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.mailchimpTrigger/#1-mailchimp-trigger-node","text":"<ol> <li>First of all, you'll have to enter credentials for the Mailchimp Trigger node. You can find out how to do that here.</li> <li>Select the list you want to listen to from the List dropdown list.</li> <li>Select 'Subscribe' from the Events dropdown list.</li> <li>Select 'API', 'Admin', and 'User' from the Sources dropdown list.</li> <li>Click on Execute Node to run the workflow.</li> </ol>  <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Mailchimp Trigger node.</p>","title":"1. Mailchimp Trigger node"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.mailerLiteTrigger/","text":"<p>MailerLite is an email marketing solution that provides you with a user-friendly content editor, simplified subscriber management, and campaign reports with the most important statistics.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"MailerLite Trigger"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.mailerLiteTrigger/#events","text":"<ul> <li>Campaign Sent</li> <li>Subscriber Added to Group</li> <li>Subscriber Added through Webform</li> <li>Subscriber Autonomation Completed</li> <li>Subscriber Autonomation Triggered</li> <li>Subscriber Bounced</li> <li>Subscriber Created</li> <li>Subscriber Complained</li> <li>Subscriber Removed from Group</li> <li>Subscriber Unsubscribe</li> <li>Subscriber Updated</li> </ul>","title":"Events"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.mailerLiteTrigger/#example-usage","text":"<p>This workflow allows you to receive updates when a subscriber is added to a group in MailerLite and add them to a base in Airtable. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following node. - MailerLite Trigger - Set - Airtable</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.mailerLiteTrigger/#1-mailerlite-trigger","text":"<p>The MailerLite Trigger node will trigger the workflow when a subscriber is added to a group in MailerLite.</p> <ol> <li>First of all, you'll have to enter credentials for the MailerLite Trigger node. You can find out how to do that here.</li> <li>Select 'Subscriber Added to Group' from the Events dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns the information of the subscriber that was added to a group in MailerLite. This output is passed on to the next node in the workflow.</p> <p></p>","title":"1. MailerLite Trigger"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.mailerLiteTrigger/#2-set-node","text":"<p>We will use the Set node to ensure that only the data that we set in this node gets passed on to the next nodes in the workflow.</p> <ol> <li>Click on Add Value and select 'String' from the dropdown list.</li> <li>Enter <code>Name</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; MailerLite Trigger &gt; Output Data &gt; JSON &gt; data &gt; subscriber &gt; name. You can also add the following expression: <code>{{$node[\"MailerLite Trigger\"].json[\"data\"][\"subscriber\"][\"name\"]}}</code>.</li> <li>Click on Add Value and select 'String' from the dropdown list.</li> <li>Enter <code>Email</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; MailerLite Trigger &gt; Output Data &gt; JSON &gt; data &gt; subscriber &gt; email. You can also add the following expression: <code>{{$node[\"MailerLite Trigger\"].json[\"data\"][\"subscriber\"][\"email\"]}}</code>.</li> <li>Toggle Keep Only Set to <code>true</code>. We set this option to true to ensure that only the data that we have set in this node get passed on to the next nodes in the workflow.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node uses the data from the previous node and returns the data that we set for the workflow.</p> <p></p>","title":"2. Set node"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.mailerLiteTrigger/#3-airtable-node","text":"<p>This node will store the data coming from the previous node in a table in Airtable.</p> <ol> <li>First of all, you'll have to enter credentials for the Airtable node. You can find out how to do that here.</li> <li>Select 'Append' from the Operation dropdown list.</li> <li>Enter the base ID in the Base ID field. For obtaining the Base ID, head over to their API page and select the correct base. You\u2019ll find the Base ID under the Introduction section.</li> <li>In Doc\u00b2, paste the ID of the base in the Base ID field.</li> <li>Enter the table name in the Table name field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node adds the information of the subscriber from the previous node in a table in Airtable.</p> <p></p>  <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the MailerLite Trigger node.</p>","title":"3. Airtable node"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.mailjetTrigger/","text":"<p>Mailjet is a cloud-based email sending and tracking system. The platform allows professionals to send both marketing emails and transactional emails. It includes tools for designing emails, sending massive volumes and tracking these messages.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Mailjet Trigger"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.mailjetTrigger/#example-usage","text":"<p>This workflow allows you to receive updates when emails are sent in Mailjet. You can also find the workflow on the website. This example usage workflow would use the following node. - Mailjet Trigger</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.mailjetTrigger/#1-mailjet-trigger-node","text":"<ol> <li>First of all, you'll have to enter credentials for the Mailjet Trigger node. You can find out how to do that here.</li> <li>Select the <code>email.sent</code> option from the Event dropdown list to receive updates when an email is sent.</li> <li>Click on Execute Node to run the workflow.</li> </ol>  <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Mailjet Trigger node.</p>","title":"1. Mailjet Trigger node"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.mauticTrigger/","text":"<p>Mautic is an open-source marketing automation software that helps online businesses automate their repetitive marketing tasks such as lead generation, contact scoring, contact segmentation, and marketing campaigns.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Mautic Trigger"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.mauticTrigger/#example-usage","text":"<p>This workflow allows you to receive updates when a form is submitted in Mautic using the Mautic Trigger node and send an SMS confirmation to the submitter. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following node. - Mautic Trigger - Twilio</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.mauticTrigger/#1-mautic-trigger-node","text":"<p>The Mautic Trigger node will trigger the workflow when a Mautic form is submitted.</p> <ol> <li>First of all, you'll have to enter credentials for the Mautic Trigger node. You can find out how to do that here.</li> <li>Select 'Form Submit Event' from the Events dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns the data that was submitted to the Mautic form. This output is passed on to the next nodes in the workflow.</p> <p></p>","title":"1. Mautic Trigger node"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.mauticTrigger/#2-twilio-node-send-sms","text":"<p>This node sends a registration confirmation SMS to the users who filled out the Mautic form. We get the phone number of the submitter from the previous node.</p> <ol> <li> <p>First of all, you'll have to enter credentials for the Twilio node. You can find out how to do that here.</p> </li> <li> <p>Enter the Twilio phone number in the From field.</p> </li> <li>Click on the gears icon next to the To field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Mautic Trigger &gt; Output Data &gt; JSON &gt; mautic.form_on_submit &gt; [item: 0] &gt; submission &gt; results &gt; phone_number. You can also add the following expression: <code>{{$node[\"Mautic Trigger\"].json[\"mautic.form_on_submit\"][0][\"submission\"][\"results\"][\"phone_number\"]}}</code>.</li> <li>Click on the gears icon next to the Message field and click on Add Expression.</li> <li>Enter the following message in the Expression field. <pre><code>Hey, {{$node[\"Mautic Trigger\"].json[\"mautic.form_on_submit\"][0][\"submission\"][\"results\"][\"first_name\"]}} \ud83d\udc4b\nThank you for signing up for the Webinar - Getting Started with Workflow\u00b2. The webinar will start at 1800 CEST on 31st October 2020.\nSee you there!\n</code></pre> </li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node sends an SMS to the submitter whose name and phone number are returned by the Mautic Trigger node.</p> <p></p>  <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Mautic Trigger node.</p>","title":"2. Twilio node (send: sms)"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.mqttTrigger/","text":"<p>MQTT is an open OASIS and ISO standard lightweight, publish-subscribe network protocol that transports messages between devices.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"MQTT Trigger"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.mqttTrigger/#example-usage","text":"<p>This workflow allows you to receive messages from a queue using the MQTT Trigger node. You can also find the workflow on the website. This example usage workflow would use the following node. - MQTT Trigger</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.mqttTrigger/#1-mqtt-trigger-node","text":"<ol> <li>First of all, you'll have to enter credentials for the MQTT Trigger node. You can find out how to do that here.</li> <li>Enter the name of the topic in the Topics field.</li> <li>Click on Execute Node to run the workflow.</li> </ol>  <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the MQTT Trigger node.</p>","title":"1. MQTT Trigger node"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.netlifyTrigger/","text":"<p>Netlify offers hosting and serverless backend services for web applications and static websites.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Netlify Trigger"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.notionTrigger/","text":"<p>Notion is an all-in-one workspace for your notes, tasks, wikis, and databases.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Notion Trigger"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.notionTrigger/#example-usage","text":"<p>This workflow allows you to receive a message on Mattermost when new meeting notes get added to the Notion. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Notion Trigger - IF - Mattermost - No Operation, do nothing</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.notionTrigger/#1-notion-trigger-node","text":"<p>The Notion Trigger node will trigger the workflow when new data gets added to Notion.</p> <ol> <li>First of all, you'll have to enter credentials for the Notion Trigger node. You can find out how to do that here.</li> <li>Click on Add Poll Time and select 'Every Hour' from the Mode dropdown list. This will check Notion every hour for new meeting notes.</li> <li>Select 'Page Added to Database' from the Event dropdown list.</li> <li>Select the database that contains the meeting notes from the Database dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns the new data from Notion. This output gets passed on to the next node in the workflow.</p> <p>Note: Make sure to add a field with the <code>Created Time</code> property type in your Notion database.</p> <p></p>","title":"1. Notion Trigger node"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.notionTrigger/#2-if-node","text":"<p>This node will check if the notes belong to the <code>Marketing</code> team. If the team is <code>Marketing</code> the node will return <code>true</code>, otherwise <code>false</code>.</p> <ol> <li>Click on Add Condition and select 'String'.</li> <li>Click on the gears icon next to the Value 1 field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; properties &gt; Team. You can also add the following expression: <code>{{$json[\"properties\"][\"Team\"]}}</code>.</li> <li>Enter <code>Marketing</code> in the Value 2 field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node checks the team that we received from the previous node and returns <code>true</code> if the value equals <code>Marketing</code>.</p> <p></p>","title":"2. IF node"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.notionTrigger/#3-mattermost-node-post-message","text":"<p>This node will send a message about the new data in the channel 'Marketing' in Mattermost. If you have a different channel, use that instead.</p> <ol> <li> <p>First of all, you'll have to enter credentials for the Mattermost node. You can find out how to do that here.</p> </li> <li> <p>Select a channel from the Channel ID dropdown list.</p> </li> <li>Click on the gears icon next to the Message field and click on Add Expression.</li> <li>Enter the following message in the Expression field: <pre><code>New meeting notes got added.\nAgenda: {{$json[\"properties\"][\"Agenda\"][\"content\"]}}\nDate: {{$json[\"properties\"][\"created time\"]}}\n</code></pre> </li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node sends a message in Mattermost about the new data that got added to Notion.</p> <p></p>","title":"3. Mattermost node (post: message)"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.notionTrigger/#5-noop-node","text":"<p>Adding this node here is optional, as the absence of this node won't make a difference to the functioning of the workflow.</p> <ol> <li>Create a NoOp node connected to the 'false' output of the IF node.</li> <li>Click on Execute Node to run the node.</li> </ol> <p></p>  <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Notion Trigger node.</p>","title":"5. NoOp node"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.onfleetTrigger/","text":"<p>Onfleet is a logistics platform offering a last-mile delivery solution.</p>  <p>Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Onfleet trigger"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.onfleetTrigger/#operations","text":"<p>Trigger a workflow on:</p> <ul> <li>SMS recipient opt out</li> <li>SMS recipient response missed</li> <li>Task arrival</li> <li>Task assigned</li> <li>Task cloned</li> <li>Task completed</li> <li>Task created</li> <li>Task delayed</li> <li>Task ETA</li> <li>Task failed</li> <li>Task started</li> <li>Task unassigned</li> <li>Task updated</li> <li>Worker created</li> <li>Worker deleted</li> <li>Worker duty</li> </ul>","title":"Operations"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.payPalTrigger/","text":"<p>PayPal is a digital payment service that supports online fund transfers that customers can use when shopping online.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"PayPal Trigger"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.payPalTrigger/#example-usage","text":"<p>This workflow allows you to receive updates when a billing plan is activated in PayPal. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following node. - PayPal Trigger</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.payPalTrigger/#1-paypal-trigger-node","text":"<ol> <li>First of all, you'll have to enter credentials for the PayPal Trigger node. You can find out how to do that here.</li> <li>Select 'Billing Plan Activated' from the Events dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol>  <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the PayPal Trigger node.</p>","title":"1. PayPal Trigger node"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.pipedriveTrigger/","text":"<p>Pipedrive is a cloud-based sales software company that aims to improve the productivity of businesses through the use of their software.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Pipedrive Trigger"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.pipedriveTrigger/#example-usage","text":"<p>This workflow allows you to receive updates for all changes in Pipedrive. You can also find the workflow on the website. This example usage workflow would use the following node. - Pipedrive Trigger</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.pipedriveTrigger/#1-pipedrive-trigger-node","text":"<ol> <li>First of all, you'll have to enter credentials for the Pipedrive Trigger node. You can find out how to do that here.</li> <li>Click on Execute Node to run the workflow.</li> </ol>  <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Pipedrive Trigger node.</p>","title":"1. Pipedrive Trigger node"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.postmarkTrigger/","text":"<p>Postmark helps deliver and track application email. You can track statistics such as the number of emails sent or processed, opens, bounces and, spam complaints.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Postmark Trigger"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.postmarkTrigger/#example-usage","text":"<p>This workflow allows you to receive updates when an email is bounced or opened using the Postmark Trigger Node. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following node. - Postmark Trigger</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.postmarkTrigger/#1-postmark-trigger-node","text":"<ol> <li>First of all, you'll have to enter credentials for the Postmark Trigger node. You can find out how to do that here.</li> <li>Select 'Bounce' from the Events dropdown list.</li> <li>Select 'Open' from the Events dropdown list.</li> <li>Toggle the Include Content field to true.</li> <li>Click on Execute Node to run the node.</li> </ol>  <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Postmark Trigger node.</p>","title":"1. Postmark Trigger node"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.pushcutTrigger/","text":"<p>Pushcut is an app for iOS that lets you create smart notifications to kick off shortcuts, URLs, and online automation.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Pushcut Trigger"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.pushcutTrigger/#example-usage","text":"<p>This workflow allows you to send an SMS to a number whenever you go out. You can also find the workflow on Workflow\u00b2.io. This example usage workflow uses the following nodes. - Pushcut Trigger - Twilio</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.pushcutTrigger/#1-pushcut-trigger-node","text":"<p>Whenever you leave your house, Pushcut will send you a notification with an action <code>Leaving Home</code>. The Pushcut Trigger node will trigger the workflow when this action is selected.</p> <p>To create an action in the Pushcut app, follow the instructions mentioned in FAQs.</p> <ol> <li>First of all, you'll have to enter credentials for the Pushcut Trigger node. You can find out how to do that here.</li> <li>Enter an action name in the Action Name field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node triggers the workflow whenever the <code>Leaving Home</code> action is selected.</p> <p></p>","title":"1. Pushcut Trigger node"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.pushcutTrigger/#2-twilio-node-send-sms","text":"<p>This node will send an SMS to a specified phone number notifying the recipient that you are going out.</p> <ol> <li>First of all, you'll have to enter credentials for the Twilio node. You can find out how to do that here.</li> <li>Enter the Twilio phone number in the From field.</li> <li>Enter the receiver's phone number in the To field.</li> <li> <p>Click on the gears icon next to the Message field and click on Add Expression.</p> </li> <li> <p>Enter <code>I'm {{$node[\"Pushcut Trigger\"].json[\"input\"]}}</code> in the Expression field.</p> </li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node sends an SMS with the input that we received from the Pushcut Trigger node.</p> <p></p>","title":"2. Twilio node (send: sms)"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.pushcutTrigger/#faqs","text":"","title":"FAQs"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.pushcutTrigger/#how-to-configure-a-pushcut-action","text":"<p>Follow the steps mentioned below to configure your Pushcut Trigger node with your Pushcut app.</p> <ol> <li>In your Puschcut app, select a notification from the Notifications screen.</li> <li>Click on the Add Action button.</li> <li>Enter an action name in the Label field.</li> <li>Select the Server tab.</li> <li>Select the Integration tab.</li> <li>Click on Integration Trigger.</li> <li>In Doc\u00b2, enter a name for the action and click on Execute Node.</li> <li>Select this action under the Select Integration Trigger screen in your Pushcut app.</li> <li>Click on Done on the top right to save the action.</li> </ol>  <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Pushcut Trigger node.</p>","title":"How to configure a Pushcut action?"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.rabbitmqTrigger/","text":"<p>RabbitMQ is an open-source message broker that accepts and forwards messages.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"RabbitMQ Trigger"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.rabbitmqTrigger/#example-usage","text":"<p>This workflow allows you to receive messages from a queue and send an SMS if the value of the temperature is greater than 50. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - RabbitMQ Trigger - IF - Vonage - No Operation, do nothing</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.rabbitmqTrigger/#1-rabbitmq-trigger-node","text":"<p>This node will trigger the workflow when a new message is sent to the queue <code>temp</code>. If you're using a different queue, use that instead. We are sending the message <code>{ \"id\": 1, \"temp\": 100 }</code> to <code>temp</code>.</p> <ol> <li>First of all, you'll have to enter credentials for the RabbitMQ Trigger node. You can find out how to do that here.</li> <li>Enter the name of the queue or topic in the Queue / Topic field.</li> <li>Click on Add Option and select 'JSON Parse Body'.</li> <li>Toggle JSON Parse Body to <code>true</code>. By setting this value to true, the node returns the body as JSON instead of a string.</li> <li>Click on Add Option and select 'Only Content'.</li> <li>Toggle Only Content to <code>true</code>. By setting this to true, the node only returns the message.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node gets triggered when a new message is sent to the <code>temp</code> queue in RabbitMQ.</p> <p></p>","title":"1. RabbitMQ Trigger node"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.rabbitmqTrigger/#2-if-node","text":"<p>This node will compare the value of <code>temp</code> that we received in the message from the previous node. If the value is greater than 50, it will return true otherwise false.</p> <ol> <li>Click on Add Condition and select 'Number' from the dropdown list.</li> <li>Click on the gears icon next to the Value 1 field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; RabbitMQ &gt; Output Data &gt; JSON &gt; temp. You can also add the following expression: <code>{{$node[\"RabbitMQ\"].json[\"temp\"]}}</code>.</li> <li>Select 'Larger' from the Operation dropdown list.</li> <li>Set Value 2 to 50.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns output for true when the temperature is greater than 50.</p> <p></p>","title":"2. IF node"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.rabbitmqTrigger/#3-vonage-node-send-sms","text":"<p>This node sends an SMS to the specified phone number when the value of <code>temp</code> is greater than <code>50</code>.</p> <ol> <li>Create a Vonage node connected to the 'true' output of the IF node.</li> <li>You'll have to enter credentials for the Vonage node. You can find out how to do that here.</li> <li>Enter the name of the sender in the From field. If you're using a number, enter the number instead.</li> <li>Enter the receiver's phone number in the To field.</li> <li> <p>Click on the gears icon next to the Message field and click on Add Expression.</p> </li> <li> <p>Enter the following in the Expression field. <pre><code>Alert!\nThe value of temp is {{$node[\"RabbitMQ\"].json[\"temp\"]}}.\n</code></pre> </p> </li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node sends an SMS with the value of <code>temp</code> that we received from the RabbitMQ Trigger node.</p> <p></p>","title":"3. Vonage node (send: sms)"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.rabbitmqTrigger/#4-noop-node","text":"<p>Adding this node here is optional, as the absence of this node won't make a difference to the functioning of the workflow.</p> <ol> <li>Create a NoOp node connected to the 'false' output of the IF node.</li> <li>Click on Execute Node to run the node.</li> </ol> <p></p>  <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the RabbitMQ Trigger node.</p>","title":"4. NoOp node"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.redisTrigger/","text":"<p>Redis is an open-source, in-memory data structure store, used as a database, cache and message broker.</p>  <p>Credentials</p> <p>You can find authentication information for this node here.</p>  <p>Use the Redis trigger node to subscribe to a Redis channel. The workflow starts whenever the channel receives a new message.</p>","title":"Redis trigger"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.seaTableTrigger/","text":"<p>SeaTable is a collaborative database application with a spreadsheet interface.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"SeaTable Trigger"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.seaTableTrigger/#example-usage","text":"<p>This workflow allows you to receive updates when new rows are created in a Table. This example usage workflow would use the following node. - SeaTable Trigger</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example usage"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.seaTableTrigger/#1-seatable-trigger-node","text":"<ol> <li>First enter your credentials for the SeaTable Trigger node. You can find out how to do that here.</li> <li>Select the Table you want to receive updates for.</li> <li>From the Events dropdown select Row Created.</li> <li>Click on Execute Node to run the workflow.</li> </ol>  <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the node.</p>","title":"1. SeaTable Trigger node"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.shopifyTrigger/","text":"<p>Shopify is an e-commerce platform that allows users to set up an online store and sell their products.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Shopify Trigger"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.shopifyTrigger/#example-usage","text":"<p>This workflow allows you to receive updates when a new order is created in Shopify. You can also find the workflow on the website. This example usage workflow would use the following node. - Shopify Trigger</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.shopifyTrigger/#1-shopify-trigger-node","text":"<ol> <li>First of all, you'll have to enter credentials for the Shopify Trigger node. You can find out how to do that here.</li> <li>Select 'Orders create' from the Topic dropdown list.</li> <li>Click on Execute Node to run the workflow.</li> </ol>  <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Shopify Trigger node.</p>","title":"1. Shopify Trigger node"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.stravaTrigger/","text":"<p>Strava is an internet service for tracking human exercise which incorporates social network features.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Strava Trigger"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.stravaTrigger/#events","text":"<p>* - <code>*</code> - Created - Deleted - Updated</p> <p>Activity - <code>*</code> - Created - Deleted - Updated</p> <p>Athlete - <code>*</code> - Created - Deleted - Updated</p>","title":"Events"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.stravaTrigger/#example-usage","text":"<p>This workflow allows you to receive updates when a new activity gets created in Strava using the Strava Trigger node. It also allows you to tweet about the activity that was created in Strava using the Twitter node. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following node. - Strava Trigger - Twitter</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.stravaTrigger/#1-strava-trigger-node","text":"<p>This node will trigger the workflow when a new activity gets created in Strava.</p> <ol> <li>First of all, you'll have to enter credentials for the Strava Trigger node. You can find out how to do that here.</li> <li>Select 'Activity' from the Object dropdown list.</li> <li>Select 'created' from the Event dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node triggers the workflow when a new activity gets created in Strava.</p> <p></p>","title":"1. Strava Trigger node"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.stravaTrigger/#2-twitter-node-create-tweet","text":"<p>This node will tweet about the activity that gets created in Strava.</p> <ol> <li>First of all, you'll have to enter credentials for the Twitter node. You can find out how to do that here.</li> <li> <p>Click on the gears icon next to the Text field and click on Add Expression.</p> </li> <li> <p>Enter the following text in the Expression field: <code>I ran {{$node[\"Strava Trigger\"].json[\"object_data\"][\"distance\"]}} meters and completed my {{$node[\"Strava Trigger\"].json[\"object_data\"][\"name\"]}}!</code></p> </li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that this node gets the information of the activity in Strava from the previous node and tweets about it.</p> <p></p>  <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Strava Trigger node.</p>","title":"2. Twitter node (create: tweet)"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.stripeTrigger/","text":"<p>Stripe is a suite of payment APIs that powers commerce for online businesses.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Stripe Trigger"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.stripeTrigger/#example-usage","text":"<p>This workflow allows you to receive updates for Stripe events. You can also find the workflow on the website. This example usage workflow would use the following node. - Stripe Trigger</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.stripeTrigger/#1-stripe-trigger-node","text":"<ol> <li>First of all, you'll have to enter credentials for the Stripe Trigger node. You can find out how to do that here.</li> <li>Select the <code>*</code> option in the Events field to receive updates when any event is triggered.</li> <li>Click on Execute Node to run the workflow.</li> </ol>  <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Stripe Trigger node.</p>","title":"1. Stripe Trigger node"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.surveyMonkeyTrigger/","text":"<p>SurveyMonkey is an online cloud-based SaaS survey platform that also provides a suite of paid back-end programs.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"SurveyMonkey Trigger"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.surveyMonkeyTrigger/#example-usage","text":"<p>This workflow allows you to receive updates when responses are created for SurveyMonkey surveys. You can also find the workflow on the website. This example usage workflow would use the following node. - SurveyMonkey Trigger</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.surveyMonkeyTrigger/#1-surveymonkey-trigger-node","text":"<ol> <li>First of all, you'll have to enter credentials for the SurveyMonkey Trigger node. You can find out how to do that here.</li> <li>Select the 'Survey' option from the Type dropdown list.</li> <li>Select 'Response Created' from the Event dropdown list.</li> <li>Select the surveys you want to receive updates for from the Survey IDs dropdown list.</li> <li>Click on Execute Node to run the workflow.</li> </ol>  <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the SurveyMonkey Trigger node.</p>","title":"1. SurveyMonkey Trigger node"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.taigaTrigger/","text":"<p>Taiga is a free and open-source project management platform for startups, agile developers, and designers.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Taiga Trigger"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.taigaTrigger/#example-usage","text":"<p>This workflow allows you to receive updates when an event occurs in Taiga. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following node. - Taiga Trigger</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.taigaTrigger/#1-taiga-trigger-node","text":"<ol> <li>First of all, you'll have to enter credentials for the Taiga Trigger node. You can find out how to do that here.</li> <li>Select the project ID from the Project ID dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol>  <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Taiga Trigger node.</p>","title":"1. Taiga Trigger node"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.telegramTrigger/","text":"<p>Telegram is a cloud-based instant messaging and voice over IP service. Users can send messages and exchange photos, videos, stickers, audio, and files of any type.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Telegram Trigger"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.telegramTrigger/#updates","text":"<ul> <li><code>*</code>: All updates</li> <li>message: Trigger on a new incoming message of any kind- text, photo, sticker, etc</li> <li>edited_message: Trigger on a new version of a channel post that is known to the bot and was edited</li> <li>channel_post: Trigger on a new incoming channel post of any kind - text, photo, sticker, etc</li> <li>edited_channel_post: Trigger on a new version of a channel post that is known to the bot and was edited</li> <li>inline_query: Trigger on a new incoming inline query</li> <li>callback_query: Trigger on a new incoming callback query</li> <li>shipping_query: Trigger on a new incoming shipping query. Only for invoices with flexible price</li> <li>pre_checkout_query: Trigger on a new incoming pre-checkout query. Contains full information about checkout</li> <li>poll: Trigger on a new poll state. Bots receive only updates about stopped polls and polls which are sent by the bot</li> </ul>","title":"Updates"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.telegramTrigger/#example-usage","text":"<p>This workflow allows you to receive messages using the Telegram Trigger node and send an image of a cocktail when a message is received. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Telegram Trigger - HTTP Request - Telegram</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.telegramTrigger/#1-telegram-trigger-node","text":"<p>This node will trigger the workflow when a user sends a new message.</p> <ol> <li>First of all, you'll have to enter credentials for the Telegram Trigger node. You can find out how to do that here.</li> <li>Select 'message' from the Updates dropdown list. This will trigger the workflow when a user sends a message.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node triggers the workflow when a user sends a new message.</p> <p></p>","title":"1. Telegram Trigger node"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.telegramTrigger/#2-http-request-node-get","text":"<p>This node will make a GET request to the API <code>https://www.thecocktaildb.com/api/json/v1/1/random.php</code> to fetch a random cocktail. This information gets passed on to the next node in the workflow.</p> <ol> <li>Enter <code>https://www.thecocktaildb.com/api/json/v1/1/random.php</code> in the URL field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node makes a GET request to the API and returns information about a random cocktail.</p> <p></p>","title":"2. HTTP Request node (GET)"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.telegramTrigger/#3-telegram-node-sendphoto-message","text":"<p>This node will send a reply to the message with the name and image of the cocktail that we got from the previous node.</p> <ol> <li>Select the credentials that you entered in the Telegram Trigger node.</li> <li>Select 'Send Photo' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Chat ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Telegram Trigger &gt; Output Data &gt; JSON &gt; message &gt; chat &gt; id. You can also add the following expression: <code>{{$node[\"Telegram Trigger\"].json[\"message\"][\"chat\"][\"id\"]}}</code>.</li> <li>Click on the gears icon next to the Photo field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; HTTP Request &gt; Output Data &gt; JSON &gt; drinks &gt; [item: 0] &gt; strDrinkThumb. You can also add the following expression: <code>{{$node[\"HTTP Request\"].json[\"drinks\"][0][\"strDrinkThumb\"]}}</code>.</li> <li>Click on Add Field and select 'Caption' from the dropdown list.</li> <li>Click on the gears icon next to the Caption field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; HTTP Request &gt; Output Data &gt; JSON &gt; drinks &gt; [item: 0] &gt; strDrink. You can also add the following expression: <code>{{$node[\"HTTP Request\"].json[\"drinks\"][0][\"strDrink\"]}}</code>.</li> <li>Click on Add Field and select 'Reply To Message ID' from the dropdown list.</li> <li>Click on the gears icon next to the Reply To Message ID field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Nodes &gt; Telegram Trigger &gt; Output Data &gt; JSON &gt; message &gt; message_id. You can also add the following expression: <code>{{$node[\"Telegram Trigger\"].json[\"message\"][\"message_id\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node sends a reply to the message with the name and image of the cocktail that we got from the previous node.</p> <p></p>  <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Telegram Trigger node.</p>","title":"3. Telegram node (sendPhoto: message)"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.theHiveTrigger/","text":"<p>TheHive is a scalable open-source and free security incident response platform.</p>","title":"workflow nodes base.theHiveTrigger"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.theHiveTrigger/#example-usage","text":"<p>This workflow allows you to receive updates when an event occurs in TheHive. You can also find the workflow on the website. This example usage workflow would use the following node. - TheHive Trigger</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.theHiveTrigger/#1-thehive-trigger-node","text":"<p>This node will trigger the workflow whenever a new event occurs in TheHive. To trigger the workflow for a specific event, select that event instead.</p> <ol> <li>First of all, you'll have to add the webhook URL in TheHive instance configuration. Refer to the FAQs to learn how to configure a webhook in TheHive.</li> <li>Select the <code>*</code> from the Events dropdown list. This will trigger the workflow for all the events.</li> <li>Click on Execute Node to run the node.</li> </ol>  <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the TheHive Trigger node.</p>","title":"1. TheHive Trigger node"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.theHiveTrigger/#faqs","text":"","title":"FAQs"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.theHiveTrigger/#how-to-configure-a-webhook-in-thehive","text":"<p>To configure the webhook for your TheHive instance follow the steps mentioned below. 1. Copy the webhook URL from TheHive Trigger node. 2. Add the following lines to the application.conf file. This is TheHive configuration file. <pre><code>notification.webhook.endpoints = [\n    {\n        name: WEBHOOK_NAME\n        url: WEBHOOK_URL\n        version: 0\n        wsConfig: {}\n        includedTheHiveOrganisations: [\"ORGANIZATION_NAME\"]\n        excludedTheHiveOrganisations: []\n    }\n]\n</code></pre>  3. Replace <code>WEBHOOK_URL</code> with the URL you copied in the previous step. 4. Replace <code>ORGANIZATION_NAME</code> with your organization name. 5. Execute the following cURL command to enable notifications. <pre><code>curl -XPUT -uTHEHIVE_USERNAME:THEHIVE_PASSWORD -H 'Content-type: application/json' THEHIVE_URL/api/config/organisation/notification -d '\n{\n    \"value\": [\n        {\n        \"delegate\": false,\n        \"trigger\": { \"name\": \"AnyEvent\"},\n        \"notifier\": { \"name\": \"webhook\", \"endpoint\": \"WEBHOOK_NAME\" }\n        }\n    ]\n}'\n</code></pre> </p>","title":"How to configure a Webhook in TheHive?"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.togglTrigger/","text":"<p>Toggl is a time tracking app that offers online time tracking and reporting services through their website along with mobile and desktop applications.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Toggl Trigger"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.togglTrigger/#example-usage","text":"<p>This workflow allows you to get new time entries from Toggl. You can also find the workflow on the website. This example usage workflow would use the following node. - Toggl Trigger</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.togglTrigger/#1-toggl-trigger-node","text":"<ol> <li>First of all, you'll have to enter credentials for the Toggl Trigger node. You can find out how to do that here.</li> <li>Click on Execute Node to run the workflow.</li> </ol> <p>Note: This node uses polling to get new time entries. You'll have to use the Add Poll Time button if you want this Trigger node to run regularly to retrieve new time entries.</p>  <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Toggl Trigger node.</p>","title":"1. Toggl Trigger node"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.trelloTrigger/","text":"<p>Trello is a web-based Kanban-style list-making application which is a subsidiary of Atlassian. Users can create their task boards with different columns and move the tasks between them.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Trello Trigger"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.trelloTrigger/#example-usage","text":"<p>This workflow allows you to receive updates for changes in the specified list in Trello. You can also find the workflow on the website. This example usage workflow would use the following node. - Trello Trigger</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.trelloTrigger/#1-trello-trigger-node","text":"<ol> <li>First of all, you'll have to enter credentials for the Trello Trigger node. You can find out how to do that here.</li> <li>Enter the ID of the list in the Model ID field. You can find instructions on how to do that in the FAQs below.</li> <li>Click on Execute Node to run the workflow.</li> </ol>  <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Trello Trigger node.</p>","title":"1. Trello Trigger node"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.trelloTrigger/#faqs","text":"","title":"FAQs"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.trelloTrigger/#how-do-i-find-the-model-id","text":"<p>For this specific example, the List ID would be the Model ID.</p> <ol> <li>Open the Trello board that contains the list.</li> <li>If the list doesn't have any cards, add a card to the list.</li> <li>Open the card, add '.json' at the end of the URL, and press enter.</li> <li>In the JSON file, you will see a field called <code>idList</code>.</li> <li>Copy <code>idList</code>and paste it in the Model ID field in Workflow\u00b2.</li> </ol>","title":"How do I find the Model ID?"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.trelloTrigger/#what-is-the-model-id","text":"<p>It is the ID of any model in Trello. Depending on the use-case, it could be the User ID, List ID, and so on.</p>","title":"What is the Model ID?"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.typeformTrigger/","text":"<p>Typeform is an online software as a service company that specializes in online form building and online surveys. Its main software creates dynamic forms based on user needs.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Typeform Trigger"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.typeformTrigger/#example-usage","text":"<p>This workflow allows you to store the response of a form submission to Airtable and send a message to a channel on Slack. You can also find the workflow on the website. This example usage workflow would use the following nodes. - Typeform Trigger - Set - Airtable - Slack</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.typeformTrigger/#1-typeform-trigger-node","text":"<p>This node will trigger the workflow when a form response is submitted.</p> <p>This example workflow uses a Typeform to collect name and email address. Create a form exactly like this for the example workflow. Here are the questions and their question types for the form.</p>    Question Type     Let's start with your name. Short Text   What's your email address? Email    <ol> <li>First of all, you'll have to enter credentials for the Typeform Trigger node. You can find out how to do that here.</li> <li>Select your form from the Form dropdown list.</li> <li>Click on Execute Node to run the workflow.</li> </ol> <p>In the screenshot below, you will notice that the Typeform Trigger node triggers the workflow and returns the response submitted by a user.</p> <p></p>","title":"1. Typeform Trigger node"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.typeformTrigger/#2-set-node","text":"<p>We will use the Set node to ensure that only the data that we set in this node gets passed on to the next nodes in the workflow. We will set the value of <code>Name</code> and <code>Email</code> in this node.</p> <ol> <li>Click on Add Value and select 'String' from the dropdown list.</li> <li>Enter <code>Name</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; Let's start with your name.. You can also add the following expression: <code>{{$json[\"Let's start with your name.\"]}}</code>.</li> <li>Click on Add Value and select 'String' from the dropdown list.</li> <li>Enter <code>Email</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; What's your email address?. You can also add the following expression: <code>{{$json[\"What's your email address?\"]}}</code>.</li> <li>Toggle Keep Only Set to <code>true</code>. We set this option to true to ensure that only the data that we have set in this node get passed on to the next nodes in the workflow.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node sets the values of <code>Name</code> and <code>Email</code>. These values are passed to the next node in the workflow.</p> <p></p>","title":"2. Set node"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.typeformTrigger/#3-airtable-node-append","text":"<p>This node will append the data that we set in the previous node to a table. Create a table like this in your Airtable base.</p> <ol> <li>First of all, you'll have to enter credentials for the Airtable node. You can find out how to do that here.</li> <li>Select 'Append' from the Operation dropdown list.</li> <li>Enter the Base ID in the Base ID field. For obtaining the Base ID, head over to their API page and select the correct base. You\u2019ll find the Base ID there.</li> <li>Enter the name of your table in the Table field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node appends the data that we had set in the previous node.</p> <p></p>","title":"3. Airtable node (Append)"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.typeformTrigger/#4-slack-node-post-message","text":"<p>This node will send a message about the new form submission to a channel in a Slack workspace.</p> <ol> <li>First of all, you'll have to enter credentials for the Slack node. You can find out how to do that here.</li> <li>Enter the name of a channel in the Channel field.</li> <li>Click on the gears icon next to the Text field and click on Add Expression.</li> <li>Enter the following text in the Expression Editor <pre><code>*New Submission* \nName: {{$node[\"Set\"].json[\"Name\"]}}\nEmail: {{$node[\"Set\"].json[\"Email\"]}}\n</code></pre> </li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node sends a message with the new form response on Slack.</p> <p></p>  <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Typeform Trigger node.</p>","title":"4. Slack node (post: message)"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.webflowTrigger/","text":"<p>Webflow is an application that allows you to build responsive websites with browser-based visual editing software.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Webflow Trigger"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.webflowTrigger/#example-usage","text":"<p>This workflow allows you to receive updates when a form submission occurs in your Webflow website. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following node. - Webflow Trigger</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.webflowTrigger/#1-webflow-trigger-node","text":"<ol> <li>First of all, you'll have to enter credentials for the Webflow Trigger node. You can find out how to do that here.</li> <li>Select your website from the Site dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol>  <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Webflow Trigger node.</p>","title":"1. Webflow Trigger node"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.wiseTrigger/","text":"<p>Wise allows you to transfer money abroad with low-cost money transfers, receive money with international account details, and track transactions on your phone.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Wise Trigger"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.wiseTrigger/#events","text":"<ul> <li>Triggered every time a balance account is credited</li> <li>Triggered every time a transfer's list of active cases is updated</li> <li>Triggered every time a transfer's status is updated</li> </ul>","title":"Events"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.wiseTrigger/#example-usage","text":"<p>This workflow allows you to receive updates from Wise and add information of a transfer to a base in Airtable. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - Wise Trigger - Wise - Set - Airtable</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.wiseTrigger/#1-wise-trigger-node-transferstatechange","text":"<p>This node will trigger the workflow when the status of your transfer changes.</p> <ol> <li>First of all, you'll have to enter credentials for the Wise Trigger node. You can find out how to do that here.</li> <li>Select 'Personal' from the Profile dropdown list.</li> <li>Select 'Transfer State Changed' from the Event dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node triggers the workflow when a new order gets created.</p> <p></p>","title":"1. Wise Trigger node (transferStateChange)"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.wiseTrigger/#2-wise-node-get-transfer","text":"<p>This node will get the information about the transfer.</p> <ol> <li>Select the credentials that you entered in the previous node.</li> <li>Select 'Transfer' from the Resource dropdown list.</li> <li>Select 'Get' from the Operation dropdown list.</li> <li>Click on the gears icon next to the Transfer ID field.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; data &gt; resource &gt; id. You can also add the following expression: <code>{{$json[\"data\"][\"resource\"][\"id\"]}}</code>.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node returns the information of the transfer.</p> <p></p>","title":"2. Wise node (get: transfer)"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.wiseTrigger/#3-set-node","text":"<p>We will use the Set node to ensure that only the data that we set in this node gets passed on to the next nodes in the workflow. We will set the value of <code>Transfer ID</code>, <code>Date</code>, <code>Reference</code>, and <code>Amount</code> in this node.</p> <ol> <li>Click on Add Value and select 'String' from the dropdown list.</li> <li>Enter <code>Transfer ID</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; id. You can also add the following expression: <code>{{$json[\"id\"]}}</code>.</li> <li>Click on Add Value and select 'String' from the dropdown list.</li> <li>Enter <code>Date</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; created. You can also add the following expression: <code>{{$json[\"created\"]}}</code>.</li> <li>Click on Add Value and select 'String' from the dropdown list.</li> <li>Enter <code>Reference</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; reference. You can also add the following expression: <code>{{$json[\"reference\"]}}</code>.</li> <li>Click on Add Value and select 'String' from the dropdown list.</li> <li>Enter <code>Amount</code> in the Name field.</li> <li>Click on the gears icon next to the Value field and click on Add Expression.</li> <li>Select the following in the Variable Selector section: Current Node &gt; Input Data &gt; JSON &gt; sourceValue. You can also add the following expression: <code>{{$json[\"sourceValue\"]}}</code>.</li> <li>Toggle Keep Only Set to <code>true</code>. We set this option to true to ensure that only the data that we have set in this node get passed on to the next nodes in the workflow.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node sets the values of <code>Transfer ID</code>, <code>Date</code>, <code>Reference</code>, and <code>Amount</code>. These values are passed to the next node in the workflow.</p> <p></p>","title":"3. Set node"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.wiseTrigger/#4-airtable-node-append","text":"<p>This node will append the data that we set in the previous node to a table. Create a table like this in your Airtable base.</p> <ol> <li>First of all, you'll have to enter credentials for the Airtable node. You can find out how to do that here.</li> <li>Select 'Append' from the Operation dropdown list.</li> <li>Enter the Base ID in the Base ID field. For obtaining the Base ID, head over to their API page and select the correct base. You\u2019ll find the Base ID there.</li> <li>Enter the name of your table in the Table field.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node appends the data that we had set in the previous node.</p> <p></p>  <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Wise Trigger node.</p>","title":"4. Airtable node (Append)"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.wooCommerceTrigger/","text":"<p>WooCommerce is a customizable, open-source e-commerce plugin for WordPress.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"WooCommerce Trigger"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.wooCommerceTrigger/#events","text":"<ul> <li>coupon.created</li> <li>coupon.updated</li> <li>coupon.deleted</li> <li>customer.created</li> <li>customer.updated</li> <li>customer.deleted</li> <li>order.created</li> <li>order.updated</li> <li>order.deleted</li> <li>product.created</li> <li>product.updated</li> <li>product.deleted</li> </ul>","title":"Events"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.wooCommerceTrigger/#example-usage","text":"<p>This workflow allows you to send a message on Mattermost when an order is created in WooCommerce. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following nodes. - WooCommerce Trigger - Mattermost</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.wooCommerceTrigger/#1-woocommerce-trigger-node","text":"<p>This node will trigger the workflow when an order is created in your WooCommerce store.</p> <ol> <li>First of all, you'll have to enter credentials for the WooCommerce Trigger node. You can find out how to do that here.</li> <li>Select 'order.created' from the Event dropdown list. This will trigger the workflow when a user sends a message.</li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node triggers the workflow when a new order gets created.</p> <p></p>","title":"1. WooCommerce Trigger node"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.wooCommerceTrigger/#2-mattermost-post-message","text":"<p>This node will send a message to a Mattermost channel sharing the details of the order that was created in WooCommerce.</p> <ol> <li>First of all, you'll have to enter credentials for the Mattermost node. You can find out how to do that here.</li> <li>Select the channel from the Channel ID dropdown list.</li> <li>Click on the gears icon next to Message field.</li> <li>Enter the following message in the Expression editor <pre><code>{{$node[\"WooCommerce Trigger\"].json[\"billing\"][\"first_name\"]}} bought {{$node[\"WooCommerce Trigger\"].json[\"line_items\"][0][\"name\"]}}!\n</code></pre> </li> <li>Click on Execute Node to run the node.</li> </ol> <p>In the screenshot below, you will notice that the node sends a message to the <code>Sales</code> channel on Mattermost about the order that was created in WooCommerce.</p> <p></p>  <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the WooCommerce Trigger node.</p>","title":"2. Mattermost (post: message)"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.workableTrigger/","text":"<p>Workable is a recruiting platform.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Workable Trigger"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.workableTrigger/#trigger-events","text":"<ul> <li>Candidate Created</li> <li>Candidate Moved</li> </ul>","title":"Trigger Events"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.wufooTrigger/","text":"<p>Wufoo is an online form builder that helps you create custom HTML forms without writing code.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Wufoo Trigger"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.wufooTrigger/#example-usage","text":"<p>This workflow allows you to receive updates when a form is submitted in Wufoo. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following node. - Wufoo Trigger</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.wufooTrigger/#1-wufoo-trigger-node","text":"<ol> <li>First of all, you'll have to enter credentials for the Wufoo Trigger node. You can find out how to do that here.</li> <li>Select a form from the Forms dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol>  <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Wufoo Trigger node.</p>","title":"1. Wufoo Trigger node"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.zendeskTrigger/","text":"<p>Zendesk is a support ticketing system, designed to help track, prioritize, and solve customer support interactions. More than just a help desk, Zendesk Support helps nurture customer relationships with personalized, responsive support across any channel.</p>  <p>\ud83d\udd11 Credentials</p> <p>You can find authentication information for this node here.</p>","title":"Zendesk Trigger"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.zendeskTrigger/#example-usage","text":"<p>This workflow allows you to receive updates for support in Zendesk. You can also find the workflow on Workflow\u00b2.io. This example usage workflow would use the following node. - Zendesk Trigger</p> <p>The final workflow should look like the following image.</p> <p></p>","title":"Example Usage"},{"location":"workflow/integrations/trigger-nodes/workflow-nodes-base.zendeskTrigger/#1-zendesk-trigger-node","text":"<ol> <li>First of all, you'll have to enter credentials for the Zendesk Trigger node. You can find out how to do that here.</li> <li>Click on the Add Condition button and select 'All' from the dropdown list.</li> <li>Select 'Open' from the Value dropdown list.</li> <li>Click on Execute Node to run the node.</li> </ol>  <p> Activate workflow for production</p> <p>You'll need to save the workflow and then click on the Activate toggle on the top right of the screen to activate the workflow. Your workflow will then be triggered as specified by the settings in the Zendesk Trigger node.</p>","title":"1. Zendesk Trigger node"},{"location":"workflow/reference/","text":"<p>This section provides reference information about Doc\u00b2, including:</p> <ul> <li>Release notes</li> <li>CLI commands</li> <li>Keyboard shortcuts</li> <li>Glossary</li> <li>License</li> <li>Data collection</li> </ul>","title":"Overview"},{"location":"workflow/reference/cli-commands/","text":"","title":"CLI commands for n8n"},{"location":"workflow/reference/cli-commands/#start-a-workflow","text":"<p>Workflows can not only be started by triggers, webhooks, or manually via the Editor. It is also possible to start them directly via the CLI.</p> <p>Execute a saved workflow by its ID:</p> <pre><code>n8n execute --id &lt;ID&gt;\n</code></pre>  <p>Execute a workflow from a workflow file: <pre><code>n8n execute --file &lt;WORKFLOW_FILE&gt;\n</code></pre> </p>","title":"Start a workflow"},{"location":"workflow/reference/cli-commands/#change-the-active-status-of-a-workflow","text":"<p>You can change the active status of a workflow via the CLI.</p> <p>Set the active status of a workflow by its ID to false:</p> <pre><code>n8n update:workflow --id=&lt;ID&gt; --active=false\n</code></pre>  <p>Set the active status of a workflow by its ID to true:</p> <pre><code>n8n update:workflow --id=&lt;ID&gt; --active=true\n</code></pre>  <p>Set the active status to false for all the workflows:</p> <pre><code>n8n update:workflow --all --active=false\n</code></pre>  <p>Set the active status to true for all the workflows:</p> <pre><code>n8n update:workflow --all --active=true\n</code></pre>","title":"Change the active status of a workflow"},{"location":"workflow/reference/cli-commands/#export-workflows-and-credentials","text":"<p>You can export your workflows and credentials from Doc\u00b2 via the CLI.</p> <p>There are a couple of flags available for this.</p>    Flag Description     --help Help prompt.   --all Exports all workflows/credentials.   --backup Sets --all --pretty --separate for simple backups. Only --output has to be set additionally.   --id The ID of the workflow to export.   --output Outputs file name or directory if using separate files.   --pretty Formats the output in an easier to read fashion.   --separate Exports one file per workflow (useful for versioning). Must inform a directory via --output.   --decrypted Exports the credentials in a decrypted (plain text) format.","title":"Export workflows and credentials"},{"location":"workflow/reference/cli-commands/#workflows","text":"<p>Export all your workflows to the standard output (terminal):</p> <pre><code>n8n export:workflow --all\n</code></pre>  <p>Export a workflow by its ID and specify the output file name:</p> <pre><code>n8n export:workflow --id=&lt;ID&gt; --output=file.json\n</code></pre>  <p>Export all workflows to a specific directory in a single file:</p> <pre><code>n8n export:workflow --all --output=backups/latest/\n</code></pre>  <p>Export all the workflows to a specific directory using the <code>--backup</code> flag (details above):</p> <pre><code>n8n export:workflow --backup --output=backups/latest/\n</code></pre>","title":"Workflows"},{"location":"workflow/reference/cli-commands/#credentials","text":"<p>Export all your credentials to the standard output (terminal):</p> <pre><code>n8n export:credentials --all\n</code></pre>  <p>Export credentials by their ID and specify the output file name:</p> <pre><code>n8n export:credentials --id=&lt;ID&gt; --output=file.json\n</code></pre>  <p>Export all credentials to a specific directory in a single file:</p> <pre><code>n8n export:credentials --all --output=backups/latest/\n</code></pre>  <p>Export all the credentials to a specific directory using the <code>--backup</code> flag (details above):</p> <pre><code>n8n export:credentials --backup --output=backups/latest/\n</code></pre>  <p>Export all the credentials in a decrypted (plain text) format. This can be used to migrate from one installation to another that has a different secret key (in the config file).</p> <p>Note: All sensitive information will be visible in the files.</p> <pre><code>n8n export:credentials --all --decrypted --output=backups/decrypted.json\n</code></pre>","title":"Credentials"},{"location":"workflow/reference/cli-commands/#import-workflows-and-credentials","text":"<p>You can import your workflows and credentials from Doc\u00b2 via the CLI.</p>  <p> Update the IDs</p> <p>When exporting workflows and credentials, their IDs also get exported. If you have workflows and credentials with the same IDs in your existing database, they will get overwritten. To avoid this, delete or change the IDs before importing.</p>  <p>There are a couple of flags available for this.</p>    Flag Description     --help Help prompt.   --input Input file name or directory if --separate is used.   --separate Imports *.json files from directory provided by --input.     <p> Migrating to different database systems</p> <p>Workflow and credential names are limited to 128 characters, but SQLite does not enforce size limits correctly.</p>  <p>This might result in errors like <code>Data too long for column name</code> during the import process.</p> <p>In this case, you can edit the names from the Doc\u00b2 interface and export again or edit the JSON file directly before importing.</p>","title":"Import workflows and credentials"},{"location":"workflow/reference/cli-commands/#workflows_1","text":"<p>Import workflows from a specific file:</p> <p><pre><code>n8n import:workflow --input=file.json\n</code></pre>  Import all the workflow files (*.json) from the specified directory:</p> <pre><code>n8n import:workflow --separate --input=backups/latest/\n</code></pre>","title":"Workflows"},{"location":"workflow/reference/cli-commands/#credentials_1","text":"<p>Import credentials from a specific file:</p> <pre><code>n8n import:credentials --input=file.json\n</code></pre>  <p>Import all the credentials files (*.json) from the specified directory:</p> <pre><code>n8n import:credentials --separate --input=backups/latest/\n</code></pre>","title":"Credentials"},{"location":"workflow/reference/data-collection/","text":"<p>n8n collects selected usage and performance data to help us diagnose problems and improve the platform. We take care to keep this data anonymous and to avoid collecting sensitive data. Read about how this information is stored and processed in our privacy policy.</p>","title":"Data collection"},{"location":"workflow/reference/data-collection/#what-we-collect","text":"<ul> <li>Error codes and messages of failed executions (excluding any payload data, and not for custom nodes)</li> <li>The graph of a workflow (types of nodes used and how they are connected)</li> <li>From node parameters, only:<ul> <li>The 'resource' and 'operation' that a node is set to (if applicable)</li> <li>The domain for HTTP nodes (but no path, query parameters or other information)</li> </ul> </li> <li>The number of workflow executions and their status</li> <li>Details on how the UI is used (e.g. navigation, nodes panel searches)</li> <li>Diagnostic information<ul> <li>Doc\u00b2 version</li> <li>Selected settings:<ul> <li>DB_TYPE</li> <li>N8N_VERSION_NOTIFICATIONS_ENABLED</li> <li>N8N_DISABLE_PRODUCTION_MAIN_PROCESS</li> <li>Execution variables</li> <li>N8N_BASIC_AUTH_ACTIVE</li> </ul> </li> <li>OS, RAM, and CPUs</li> <li>Anonymous instance ID</li> </ul> </li> </ul>","title":"What we collect"},{"location":"workflow/reference/data-collection/#what-we-dont-collect","text":"<p>We do not collect private or sensitive information, such as:</p> <ul> <li>Personally identifiable information</li> <li>Credential information</li> <li>Node parameters (except 'resource' and 'operation')</li> <li>Execution data</li> <li>Sensitive settings (e.g. endpoints, ports, DB connections, username/password)</li> <li>Error payloads</li> </ul>","title":"What we don\u2019t collect"},{"location":"workflow/reference/data-collection/#how-collection-works","text":"<p>Telemetry is collected anonymously, with most data sent to Doc\u00b2 as events that generate it occur. Workflow execution counts and an instance pulse are sent periodically (every 6 hours).</p>","title":"How collection works"},{"location":"workflow/reference/data-collection/#opting-out-of-telemetry","text":"<p>Telemetry collection is enabled by default. To disable it you can configure the following environment variables.</p> <p>To opt out of telemetry events:</p> <pre><code>export N8N_DIAGNOSTICS_ENABLED=false\n</code></pre>  <p>To opt out of checking for new versions of n8n:</p> <pre><code>export N8N_VERSION_NOTIFICATIONS_ENABLED=false\n</code></pre>  <p>See configuration for more info on how to set environment variables.</p>","title":"Opting out of telemetry"},{"location":"workflow/reference/glossary/","text":"","title":"Glossary"},{"location":"workflow/reference/glossary/#env-file","text":"<p>A special file which contains configuration information in the form of environment variables.</p> <p>n8n uses the .env file to control how Doc\u00b2 works. You can set items such as username and password for the editor or your timezone using this file. See the n8n docs for more details.</p> <p>To learn more about the .env file, read Manage Environment Variables in your NodeJS Application with dotenv.</p>","title":".env File"},{"location":"workflow/reference/glossary/#account","text":"<p>Service which allows a user to connect to a product. User's identity is confirmed through shared credentials. Also known as a user account.</p> <p>Many of the nodes in Doc\u00b2 require you to have an account with the service for which the node was built. For example, Typeform.</p>","title":"Account"},{"location":"workflow/reference/glossary/#api","text":"<p>An acronym for Application Programming Interface, it is a framework for sharing text information by providing a specifically formatted URL to retrieve desired information.</p> <p>APIs are a critical part of many Doc\u00b2 nodes and workflows. The nodes talk to the API that is provided by a service on the internet. Doc\u00b2 workflows allow these APIs to talk to each other.</p> <p>For a more detailed understanding of APIs, see What is API: Definition, Types, Specifications, Documentation.</p> <p>See also: - Header</p>","title":"API"},{"location":"workflow/reference/glossary/#certificate","text":"<p>A file or character string that is used to encrypt and decrypt information between two entities (e.g. computers, applications, users, etc.). It is used to ensure that anyone who intercepts the information between the two entities will not be able to read the information.</p> <p>n8n uses certificates to keep user information safe when working in the Editor UI. You can also customize the certificate that you use in Workflow\u00b2.</p> <p>For further information, see What are certificates?.</p> <p>See also: - Encryption Key - SSL</p>","title":"Certificate"},{"location":"workflow/reference/glossary/#cli","text":"<p>An acronym for Command Line Interface, it is a text-based form of processing computer commands.</p> <p>It is possible to start a workflow or change its status using the CLI in Workflow\u00b2.</p> <p>To learn more, see What is Command Line Interface (CLI)?.</p>","title":"CLI"},{"location":"workflow/reference/glossary/#connection","text":"<p>A link between two or more nodes that allows data to flow from one node to another.</p> <p>This is a core concept in Workflow\u00b2.</p>","title":"Connection"},{"location":"workflow/reference/glossary/#credentials","text":"<p>Unique pieces of information that identifies a user or a service. A common form of credentials is a username and password pair.</p> <p>n8n stores encrypted credentials so that it can automate tasks that require this information to run properly.</p> <p>For more information, see Credentials.</p> <p>See also: - Token</p>","title":"Credentials"},{"location":"workflow/reference/glossary/#docker","text":"<p>A system to build, run and share applications with all of the services bundled to support the application in one package.</p> <p>n8n has created a docker image so that users who have a docker environment can quickly install and run Workflow\u00b2.</p> <p>For more information, read Docker overview and A Docker Tutorial for Beginners.</p>","title":"Docker"},{"location":"workflow/reference/glossary/#editor-ui","text":"<p>In Doc\u00b2, this is the web interface used to create workflows. It is accessed through a web browser at a designated website address.</p> <p>To learn more about user interfaces, see User interface.</p>","title":"Editor UI"},{"location":"workflow/reference/glossary/#encryption-key","text":"<p>A piece of data, either string or binary, which is used to encode information so that it cannot be easily read. Encryption keys are often long string of seemingly random characters.</p> <p>n8n will sometimes use encryption keys for accessing APIs when required. It also uses a personal encryption key to secure credentials.</p> <p>For more information, see What are encryption keys and how do they work? \ud83d\udd10</p> <p>See also: - SSL - Certificate</p>","title":"Encryption Key"},{"location":"workflow/reference/glossary/#environment-variables","text":"<p>Environment variables are predetermined values that typically get used to provide the ability to configure your program from outside of your application. An environment variable consists of a key-value pair. For example, <code>N8N_BASIC_AUTH_USER=user</code>. Here, <code>N8N_BASIC_AUTH_USER</code> is the key and <code>user</code> is the value.</p> <p>n8n uses environment variables that help you configure your self-hosted Doc\u00b2 instance. You can use environment variables to set username and password for your Doc\u00b2 instance, configure the timezone, and a lot more. Refer to the configuration page to learn more about the environment variables used in Workflow\u00b2.</p>","title":"Environment Variables"},{"location":"workflow/reference/glossary/#execution","text":"<p>A completed run of a workflow from start to finish.</p> <p>n8n logs workflow executions and allows the user to see if the workflow completed successfully or not.</p> <p>n8n also has the ability to execute one workflow from another workflow.</p> <p>To learn more, see Execution (computing).</p>","title":"Execution"},{"location":"workflow/reference/glossary/#expression","text":"<p>A string of characters and symbols in a programming language that represents a value depending upon its input.</p> <p>n8n uses expressions extensively when a node is referring to another node for input.</p> <p>Find out more about expressions by reading Expression.</p>","title":"Expression"},{"location":"workflow/reference/glossary/#fair-code","text":"<p>A software model very similar to open source which allows developers to receive remuneration for use in a for profit product.</p> <p>n8n is licensed under the fair-code model. See faircode.io for more details.</p>","title":"Fair-code"},{"location":"workflow/reference/glossary/#function","text":"<p>In programming, a set of reusable commands designed to be run together and launched by other commands in the code. It may or may not receive input from the command that launches it.</p> <p>Many of the nodes in Doc\u00b2 behave like functions, receiving specific input to generate a specific output.</p> <p>To learn more about functions, see Computer Programming - Functions.</p>","title":"Function"},{"location":"workflow/reference/glossary/#ip-address","text":"<p>A string of numbers and letters which represents the location of an electronic device on a TCP/IP network.</p> <p>n8n will often refer to IP addresses when accessing information on a system other than itself. This is more common when the service is on the local network rather than on the internet.</p> <p>If you want to learn more about IP addresses, see What Is an IP Address?.</p>","title":"IP Address"},{"location":"workflow/reference/glossary/#javascript","text":"<p>A modern programming language popular with web platforms used to create interactive web interfaces.</p> <p>While Doc\u00b2 is written in TypeScript, the final code generated is JavaScript and the Function node uses JavaScript to create customized nodes. JavaScript is used in the n8n's Function nodes.</p> <p>To learn more about Javascript, visit Javascript Tutorial.</p>","title":"JavaScript"},{"location":"workflow/reference/glossary/#json","text":"<p>An open standard file and data format commonly used with JavaScript. It is easy for humans to read and for computers to parse.</p> <p>The majority of data that is transferred from one node to another in Doc\u00b2 is most likely in the JSON format.</p> <p>For further reading, please see Introducing JSON.</p>","title":"JSON"},{"location":"workflow/reference/glossary/#header","text":"<p>Section of an HTTP request message that defines allows extra information to be passed between the transmitter and receiver.</p> <p>n8n has the ability to send custom header information to many APIs, specifically in the HTTP Request node.</p> <p>For further information, see Request header.</p>","title":"Header"},{"location":"workflow/reference/glossary/#node","text":"<p>The basic building block for Workflow\u00b2. Each node is designed with a specific purpose of receiving, processing or outputting data.</p> <p>For more information, see Node Basics.</p>","title":"Node"},{"location":"workflow/reference/glossary/#nodejs","text":"<p>A package of JavaScript file used to provide everything needed to run JavaScript code without a web browser.</p> <p>n8n runs on top of NodeJS and uses its libraries extensively.</p> <p>Read more at About Node.js.</p> <p>See also: - TypeScript</p>","title":"NodeJS"},{"location":"workflow/reference/glossary/#npm","text":"<p>A program that installs, updates and removes JavaScript Packages.</p> <p>n8n is installed and updated using npm.</p> <p>Find out more at About npm.</p> <p>See also: - npx</p>","title":"npm"},{"location":"workflow/reference/glossary/#npx","text":"<p>A program that will download, run, then delete a JavaScript Packages. Often used for quickly testing what a package will do without completely installing it.</p> <p>You can try out Doc\u00b2 without installing it to your system using npx.</p> <p>For more information about npx, see npx documentation.</p> <p>See also: - npm</p>","title":"npx"},{"location":"workflow/reference/glossary/#package","text":"<p>A group of JavaScript files which are designed to work together for a specific purpose.</p> <p>n8n is also distributed as an npm package.</p> <p>For more information, see software package.</p> <p>See also: - npx</p>","title":"Package"},{"location":"workflow/reference/glossary/#parameter","text":"<p>Data that is passed to a program or script which is used for processing and directly effects the output or results generated.</p> <p>Many Doc\u00b2 nodes accept parameters to customize their output.</p> <p>The Doc\u00b2 CLI also accepts parameters so that it knows how to properly execute.</p> <p>For more information, see Functions, procedures nad modules.</p>","title":"Parameter"},{"location":"workflow/reference/glossary/#password","text":"<p>A secret string of characters provided to prove one's identity. Often used to gain access to restricted applications and systems.</p> <p>The Doc\u00b2 Editor UI can be password protected so that only authorized users can access the interface.</p> <p>n8n also stores passwords as a part of credentials for some services.</p> <p>To read more about passwords, see The Importance of passwords.</p> <p>See also: - Username - Token</p>","title":"Password"},{"location":"workflow/reference/glossary/#rest-api","text":"<p>See API</p>","title":"REST API"},{"location":"workflow/reference/glossary/#root-user","text":"<p>In *NIX operating system, the user account that has no restrictions placed upon it within the system. The root user is typically only used for performing maintenance and upgrade tasks as improperly run applications using the root user account can cause significant damage to the system.</p> <p>For the protection of the system, it is generally not recommended that Doc\u00b2 be run by the root user.</p> <p>For more information about root, see root Definition.</p>","title":"Root User"},{"location":"workflow/reference/glossary/#ssl","text":"<p>An acronym for Secure Socket Layer, it is the primary way that web based services are secured. A SSL certificate is often used on websites to encrypt the information that is travelling between a web server and a web page.</p> <p>n8n uses SSL certificates to secure the Doc\u00b2 UI so that any information that is passed between the Doc\u00b2 server and the user's web browser is encrypted and cannot be spied upon when it is travelling between the two. It is possible to customize the SSL installation.</p> <p>For further reading, see SSL and SSL Certificates Explained For Beginners.</p>","title":"SSL"},{"location":"workflow/reference/glossary/#token","text":"<p>A unique identifier, typically a long string of characters, used to increase the security of systems that request or transmit data. It is usually a shared secret between the sender and the receiver to allow either system to determine if they should be requesting/transmitting data. Tokens can also sometimes be used as encryption keys to make the data which is transmitted illegible to thoses without the token.</p> <p>n8n uses tokens often when requesting or sending data using APIs or webhooks.</p> <p>For more information, see token.</p>","title":"Token"},{"location":"workflow/reference/glossary/#trigger","text":"<p>A specific type of node that starts a workflow when it receives data from a source outside of the workflow itself.</p> <p>A good example of a trigger node in Doc\u00b2 is a webhook. It listens for data coming into it and then starts a workflow when it sees data.</p> <p>For more information about triggers, see Event Driven Programming.</p>","title":"Trigger"},{"location":"workflow/reference/glossary/#tunnel","text":"<p>An encrypted session between two systems used to secure data transmission.</p> <p>n8n uses a tunnel to allow external users to access Doc\u00b2 installations that are behind firewalls, typically for triggering webhooks. This setup is recommended for testing use only.</p> <p>For further reading, see VPN Tunnels explained: what are they and how can they keep your internet data secure.</p>","title":"Tunnel"},{"location":"workflow/reference/glossary/#typescript","text":"<p>An open source programming language that extends the JavaScript programming language.</p> <p>n8n is written in TypeScript.</p> <p>Read more at Typescript.</p>","title":"TypeScript"},{"location":"workflow/reference/glossary/#ui","text":"<p>An acronym for User Interface, it is the method or tool a person uses to interact with a computer system and its software.</p> <p>n8n has a web based UI, meaning that you program and interact with Doc\u00b2 using a web browser.</p> <p>Learn more at user interface (UI).</p>","title":"UI"},{"location":"workflow/reference/glossary/#url","text":"<p>An acronym for Universal Resource Locator, it is a string of characters that represents a network location. Most people's experience with URLs is in the form of a website address (e.g. https://n8n.io)</p> <p>n8n's Editor UI is accessed via an URL entered into a web browser (often https://localhost:5678).</p> <p>Some nodes in Doc\u00b2 access resources on the internet using an URL.</p> <p>Read more at What is a URL?.</p>","title":"URL"},{"location":"workflow/reference/glossary/#username","text":"<p>A character string representing an account on a computer system. It is often paired with a password to allow a person to access information and services that the person has permissions to use.</p> <p>n8n also stores usernames as a part of credentials for some services.</p> <p>Read more at Username.</p> <p>See also: - Token</p>","title":"Username"},{"location":"workflow/reference/glossary/#variable","text":"<p>In computer programming, a variable represents a piece of data that can be changed or manipulated by the computer code. Variables are used to temporarily store information for processing.</p> <p>n8n uses variables extensively throughout its programming and nodes.</p> <p>Read more at Computer Programming - Variables.</p> <p>See also: - .env</p>","title":"Variable"},{"location":"workflow/reference/glossary/#webhook","text":"<p>A service that listens for data input from an external source used to trigger an action in a system. Webhooks allow external systems to provide real-time alerts and updates to the system that does not limit the updates to regular polling intervals. Webhooks are often referenced by push notifications.</p> <p>n8n has the ability to create webhooks that can be used to start workflows and receive data from systems outside of the Doc\u00b2 system itself.</p> <p>To learn more about webhooks, see What's a Webhook?.</p>","title":"Webhook"},{"location":"workflow/reference/glossary/#workflow","text":"<p>A collection of nodes connected together to produce a specific outcome.</p> <p>n8n's primary form of programming uses a workflow model to represent both code and data flow.</p> <p>For more information, see Workflow application.</p>","title":"Workflow"},{"location":"workflow/reference/keyboard-shortcuts/","text":"<p>The following keyboard shortcuts can be used:</p>","title":"Keyboard Shortcuts"},{"location":"workflow/reference/keyboard-shortcuts/#general","text":"<ul> <li>Ctrl + Left Mouse Button: Move/Pan Node View</li> <li>Ctrl + a: Select all nodes</li> <li>Ctrl + Alt + n: Create new workflow</li> <li>Ctrl + o: Open workflow</li> <li>Ctrl + s: Save the current workflow</li> <li>Ctrl + v: Paste nodes</li> </ul>","title":"General"},{"location":"workflow/reference/keyboard-shortcuts/#node-panel","text":"<ul> <li>Tab: Open the Node Panel</li> <li>Enter: Insert selected node into workflow</li> <li>Escape: Close Node panel</li> </ul>","title":"Node panel"},{"location":"workflow/reference/keyboard-shortcuts/#node-panel-categories","text":"<ul> <li>Enter: Insert node into workflow, collapse/expand category, open subcategory</li> <li>ArrowRight: Expand category, open subcategory </li> <li>ArrowLeft: Collapse category, close subcategory view</li> </ul>","title":"Node panel categories"},{"location":"workflow/reference/keyboard-shortcuts/#with-nodes-selected-in-canvas","text":"<ul> <li>ArrowDown: Select sibling node below the current one</li> <li>ArrowLeft: Select node left of the current one</li> <li>ArrowRight: Select node right of the current one</li> <li>ArrowUp: Select sibling node above the current one</li> <li>Ctrl + c: Copy nodes</li> <li>Ctrl + x: Cut nodes</li> <li>d: Deactivate nodes</li> <li>Delete: Delete nodes</li> <li>F2: Rename node</li> <li>Shift + ArrowLeft: Select all nodes left of the current one</li> <li>Shift + ArrowRight: Select all nodes right of the current one</li> </ul>","title":"With nodes selected in canvas"},{"location":"workflow/reference/keyboard-shortcuts/#canvas-zoom","text":"<ul> <li>+ or =: Zoom in</li> <li>- or _: Zoom out</li> <li>0: Reset zoom level</li> <li>1: Zoom to fit workflow</li> <li>Ctrl + Mouse wheel: Zoom in/out</li> </ul>","title":"Canvas zoom"},{"location":"workflow/reference/license/","tags":["Workflow\u00b2","License","FAQs","n8n"],"text":"<p>n8n is fair-code licensed under the Sustainable Use License</p>","title":"License"},{"location":"workflow/reference/license/#license-faqs","tags":["Workflow\u00b2","License","FAQs","n8n"],"text":"","title":"License FAQs"},{"location":"workflow/reference/license/#what-license-do-you-use","tags":["Workflow\u00b2","License","FAQs","n8n"],"text":"<p>n8n uses the Sustainable Use License.</p>","title":"What license do you use?"},{"location":"workflow/reference/license/#what-source-code-is-covered-by-the-sustainable-use-license","tags":["Workflow\u00b2","License","FAQs","n8n"],"text":"<p>The Sustainable Use License applies to all our source code hosted in our main GitHub repository.</p>","title":"What source code is covered by the Sustainable Use License?"},{"location":"workflow/reference/license/#what-is-the-sustainable-use-license","tags":["Workflow\u00b2","License","FAQs","n8n"],"text":"<p>The Sustainable Use License is a fair-code software license created by Doc\u00b2 in 2022. You can read more about why we did this here. The license allows you the free right to use, modify, create derivative works, and redistribute, with three limitations:</p> <ul> <li>You may use or modify the software only for your own internal business purposes or for non-commercial or personal use.</li> <li>You may distribute the software or provide it to others only if you do so free of charge for non-commercial purposes.</li> <li>You may not alter, remove, or obscure any licensing, copyright, or other notices of the licensor in the software. Any use of the licensor's trademarks is subject to applicable law.</li> </ul> <p>We encourage anyone who wants to use the Sustainable Use License. If you are building something out in the open, it makes sense to think about licensing earlier in order to avoid problems later. Contact us on license@n8n.io if you would like to ask any questions about it. </p>","title":"What is the Sustainable Use License?"},{"location":"workflow/reference/license/#can-you-give-some-examples-of-what-is-and-isnt-allowed-under-the-license-in-the-context-of-n8ns-product","tags":["Workflow\u00b2","License","FAQs","n8n"],"text":"<p>All of the following examples are allowed under our license: </p> <ul> <li>Using Doc\u00b2 to sync the data you control as a company, for example from a CRM to an internal database </li> <li>Using Doc\u00b2 workflows to create backend logic for a product, with other code handling all interfaces with your users</li> <li>Creating an Doc\u00b2 node for your product, or any other integration between your product and n8n</li> <li>Providing consulting services related to Doc\u00b2, for example building workflows, custom features closely connect to Doc\u00b2, or code that gets executed by n8n</li> <li>Supporting Doc\u00b2, for example by setting it up or maintaining it on an internal company server</li> </ul> <p>These examples would not be allowed under our license, meaning you would need to contact us to create a separate agreement:</p> <ul> <li>Using credentials of your customers in workflows (for example, to send your customers Slack notifications based on events in your system)</li> <li>Using the source code to provide embedded one-click integrations to your users' other services</li> <li>Hosting Doc\u00b2 and charging people money to access it</li> <li>Bundling Doc\u00b2 with another product, and distributing it for money</li> </ul> <p>To do anything not allowed under the license, you will need a separate agreement with us.</p>","title":"Can you give some examples of what is and isn't allowed under the license in the context of n8n's product?"},{"location":"workflow/reference/license/#what-if-i-want-to-use-doc2-for-something-that-is-not-permitted-by-the-license","tags":["Workflow\u00b2","License","FAQs","n8n"],"text":"<p>You must sign a separate commercial agreement with us. We actively encourage software creators to embed Doc\u00b2 within their products; we just ask them to sign an agreement laying out the terms of use, and the fees owed to Doc\u00b2 for using the product in this way. We call this mode of use Workflow\u00b2.embed. You can learn more, and contact us about it here. </p> <p>If you are unsure whether the use case you have in mind constitutes an internal business purpose or not, take a look at the examples, and if you're still unclear, email us at license@n8n.io.</p>","title":"What if I want to use Doc\u00b2 for something that is not permitted by the license?"},{"location":"workflow/reference/license/#why-do-you-not-use-an-open-source-license","tags":["Workflow\u00b2","License","FAQs","n8n"],"text":"<p>n8n's mission is to give everyone who uses a computer technical superpowers. We've decided the best way for us to achieve this mission is to make Doc\u00b2 as widely and freely available as possible for users, while ensuring we can build a sustainable, viable business. By making our product free to use, easy to distribute, and source-available we help everyone access the product. By operating as a business, we can continue to release features, fix bugs and provide reliable software at scale long-term.</p>","title":"Why do you not use an open source license?"},{"location":"workflow/reference/license/#why-did-you-create-a-license","tags":["Workflow\u00b2","License","FAQs","n8n"],"text":"<p>Creating a license was our least favorite option. We only went down this path after reviewing the possible existing licenses, and deciding nothing fit our specific needs. There are two ways in which we try to mitigate the pain and friction of using a proprietary license: (1) by using plain English, and keeping it as short as possible and (2) by promoting fair-code with the goal of making it a well-known umbrella term to describe software models like ours.</p> <p>Our goals when we created the Sustainable Use License were (1) to be as permissive as possible while (2) safeguarding our ability to build a business, and (3) being as clear as possible what use was permitted or not. </p>","title":"Why did you create a license?"},{"location":"workflow/reference/license/#my-company-has-a-policy-against-using-code-that-restricts-commercial-use-can-i-still-use-n8n","tags":["Workflow\u00b2","License","FAQs","n8n"],"text":"<p>Provided you are using Doc\u00b2 for internal business purposes, and not making Doc\u00b2 available to your customers for them to connect their accounts and build workflows, you should be able to use Workflow\u00b2. If you are unsure whether the use case you have in mind constitutes an internal business purpose or not, take a look at the examples, and if you're still unclear, email us at license@n8n.io.</p>","title":"My company has a policy against using code that restricts commercial use \u2013 can I still use n8n?"},{"location":"workflow/reference/license/#what-happens-to-the-code-i-contribute-to-doc2-in-light-of-the-sustainable-use-license","tags":["Workflow\u00b2","License","FAQs","n8n"],"text":"<p>Any code you contribute on GitHub is subject to GitHub's terms of use. In simple terms, this means you own, and are responsible for, anything you contribute, but that you grant other GitHub users certain rights to use this code. When you contribute code to a repository containing notice of a license, you license the code under the same terms.</p> <p>n8n asks every contributor to sign our Contributor License Agreement. In addition to the above, this gives Doc\u00b2 the ability to change its license without seeking additional permission. It also means you are not liable for your contributions (e.g. in case they cause damage to someone else's business).</p> <p>It's easy to get started contributing code to Doc\u00b2 here, and we've listed broader ways of participating in our community here.</p>","title":"What happens to the code I contribute to Doc\u00b2 in light of the Sustainable Use License?"},{"location":"workflow/reference/license/#why-did-you-switch-to-the-sustainable-use-license-from-your-previous-license-arrangement-apache-20-with-commons-clause","tags":["Workflow\u00b2","License","FAQs","n8n"],"text":"<p>n8n was until 17 March 2022 licensed under Apache 2.0 with Commons Clause. Commons Clause was initiated by various software companies wanting to protect their rights against cloud providers. The concept involved adding a commercial restriction on top of an existing open source license.</p> <p>However, the use of the Commons Clause as an additional condition to an open source license, as well as the use of wording that is open to interpretation, created some confusion and uncertainty regarding the terms of use. The Commons Clause also restricted people's ability to offer consulting and support services: we realized these services are critical in enabling people to get value from Doc\u00b2, so we wanted to remove this restriction.</p> <p>We created the Sustainable Use License to be more permissive and more clear about what use is allowed, while continuing to ensure Doc\u00b2 gets the funding needed to build and improve our product.</p>","title":"Why did you switch to the Sustainable Use License from your previous license arrangement (Apache 2.0 with Commons Clause)?"},{"location":"workflow/reference/license/#what-are-the-main-differences-between-the-sustainable-use-license-and-your-previous-license-arrangement-apache-20-with-commons-clause","tags":["Workflow\u00b2","License","FAQs","n8n"],"text":"<p>There are two main differences between the Sustainable Use License and our previous license arrangement. The first is that we have tightened the definition of how you can use the software. Previously the Commons Clause restricted users ability to \"sell\" the software; we have redefined this to restrict use to internal business purposes. The second difference is that our previous license restricted people's ability to charge fees for consulting or support services related to the software: we have lifted that restriction altogether.</p> <p>That means you are now free to offer commercial consulting or support services (e.g. building Doc\u00b2 workflows) without the need for a separate license agreement with us. If you are interested in joining our community of Doc\u00b2 experts providing these services, you can learn more here.</p>","title":"What are the main differences between the Sustainable Use License and your previous license arrangement (Apache 2.0 with Commons Clause)?"},{"location":"workflow/reference/license/#is-doc2-open-source","tags":["Workflow\u00b2","License","FAQs","n8n"],"text":"<p>Although n8n's source code is available under the Sustainable Use License, according to the Open Source Initiative (OSI), open source licenses cannot include limitations on use, so we do not call ourselves open source. In practice, Doc\u00b2 offers most users many of the same benefits as OSI-approved open source.</p> <p>We coined the term 'fair-code' as a way of describing our licensing model, and the model of other companies who are source-available, but restrict commercial use of their source code.</p>","title":"Is Doc\u00b2 open source?"},{"location":"workflow/reference/license/#what-is-fair-code-and-how-does-the-sustainable-use-license-relate-to-it","tags":["Workflow\u00b2","License","FAQs","n8n"],"text":"<p>Fair-code is not a software license. It describes a software model where software:</p> <ul> <li>is generally free to use and can be distributed by anybody</li> <li>has its source code openly available</li> <li>can be extended by anybody in public and private communities</li> <li>is commercially restricted by its authors</li> </ul> <p>The Sustainable Use License is a fair-code license. You can read more about it, and see other examples of fair-code licenses here.</p> <p>We're always excited to talk about software licenses, fair-code and other principles around sharing code with interested parties. To get in touch to chat, email license@n8n.io.</p>","title":"What is fair-code, and how does the Sustainable Use License relate to it?"},{"location":"workflow/reference/release-notes/","text":"","title":"Release notes"},{"location":"workflow/reference/release-notes/#n8n01720","text":"<p>View the commits for this version. Release date: 2022-04-11</p>","title":"n8n@0.172.0"},{"location":"workflow/reference/release-notes/#enhancements","text":"<ul> <li>Changes to the data output display in nodes. </li> </ul>","title":"Enhancements"},{"location":"workflow/reference/release-notes/#node-enhancements","text":"<p> Magento 2 Node: text=\"Added credential tests. PayPal Node: Added credential tests and updated the API URL.</p>","title":"Node enhancements"},{"location":"workflow/reference/release-notes/#bug-fixes","text":"<p>core: Luxon now applies the correct timezone. Refer to Luxon for more information. core: fixed an issue with localization that was preventing i18n files from loading. Action Network Node: Fix a pagination issue and add credentials test.</p>","title":"Bug fixes"},{"location":"workflow/reference/release-notes/#contributors","text":"<p>Paolo Rechia </p>","title":"Contributors"},{"location":"workflow/reference/release-notes/#n8n01711","text":"<p>View the commits for this version. Release date: 2022-04-06</p> <p>This is a small bug fix release.</p>","title":"n8n@0.171.1"},{"location":"workflow/reference/release-notes/#bug-fixes_1","text":"<ul> <li>core: fix issue with current executions not displaying.</li> <li>core: fix an issue causing Doc\u00b2 to falsely skip some authentication.</li> <li>WooCommerce Node: Fix a pagination issue with the GetAll operation.</li> </ul>","title":"Bug fixes"},{"location":"workflow/reference/release-notes/#n8n01710","text":"<p>View the commits for this version. Release date: 2022-04-03</p>  <p>Breaking changes</p> <p>Please note that this version contains breaking changes. You can read more about them here.</p>  <p>This release focuses on bug fixes and node enhancements, with one new feature, and one breaking change to the GraphQL node.</p>","title":"n8n@0.171.0"},{"location":"workflow/reference/release-notes/#breaking-change-to-graphql-node","text":"<p>The GraphQL node now errors when the response includes an error. If you use this node, you can choose to:</p> <ul> <li>Do nothing: a GraphQL response containing an error will now cause the workflow to fail.</li> <li>Update your GraphQL node settings: set Continue on Fail to true to allow the workflow to continue even when the GraphQL response contains an error.</li> </ul>","title":"Breaking change to GraphQL node"},{"location":"workflow/reference/release-notes/#new-features","text":"<p>You can now download binary data from individual nodes in your workflow.</p>","title":"New features"},{"location":"workflow/reference/release-notes/#enhanced-nodes","text":"<ul> <li>Emelia Node: Add Campaign &gt; Duplicate functionality.</li> <li>FTP Node: Add option to recursively create directories on rename.</li> <li>Mautic Node: Add credential test and allow trailing slash in host.</li> <li>Microsoft Teams Node: Add chat message support.</li> <li>Mocean Node: Add 'Delivery Report URL' option and credential tests.</li> <li>ServiceNow Node: Add basicAuth support and fix getColumns loadOptions.</li> <li>Strava Node: Add 'Get Streams' operation.</li> </ul>","title":"Enhanced nodes"},{"location":"workflow/reference/release-notes/#bug-fixes_2","text":"<ul> <li>core: Fix crash on webhook when last node did not return data</li> <li>EmailReadImap Node: Fix issue that crashed process if node was configured wrong.</li> <li>Google Tasks Node: Fix 'Show Completed' option and hide title field where not needed.</li> <li>NocoDB Node: Fix pagination.</li> <li>Salesforce Node: Fix issue that 'status' did not get used for Case =&gt; Create &amp; Update</li> </ul>","title":"Bug fixes"},{"location":"workflow/reference/release-notes/#contributors_1","text":"<ul> <li>Charles Lecalier</li> <li>d3no</li> <li>Ketan Somvanshi</li> <li>Luis Cipriani</li> <li>pemontto</li> <li>Rhys Williams</li> </ul>","title":"Contributors"},{"location":"workflow/reference/release-notes/#n8n01700","text":"<p>View the commits for this version. Release date: 2022-03-27</p> <p>This release focuses on bug fixes and adding functionality to existing nodes.</p>","title":"n8n@0.170.0"},{"location":"workflow/reference/release-notes/#enhanced-nodes_1","text":"<ul> <li>Crypto Node: Add Generate operation to generate random values.</li> <li>HTTP Request Node: Add support for OPTIONS method.</li> <li>Jira Node: Add Simplify Output option to Issue &gt; Get.</li> <li>Reddit Node: Add possibility to query saved posts.</li> <li>Zendesk Node: Add ticket status On-hold.</li> </ul>","title":"Enhanced nodes"},{"location":"workflow/reference/release-notes/#bug-fixes_3","text":"<ul> <li>core: Add logs and error catches for possible failures in queue mode.</li> <li>AWS Lambda Node: Fix Invocation Type &gt; Continue Workflow.</li> <li>Supabase Node: Send token also via Authorization Bearer; fix Row &gt; Get operation.</li> <li>Xero Node: Fix some operations and add support for setting address and phone number.</li> <li>Wise Node: Fix issue when executing a transfer.</li> </ul>","title":"Bug fixes"},{"location":"workflow/reference/release-notes/#contributors_2","text":"<ul> <li>FFTDB</li> <li>Fred</li> <li>Jasper Zonneveld</li> <li>pemontto</li> <li>Sergio</li> <li>TheFSilver</li> <li>Valentin Mocanu</li> <li>Yassine Fathi</li> </ul>","title":"Contributors"},{"location":"workflow/reference/release-notes/#n8n01690","text":"<p>View the commits for this version. Release date: 2022-03-20</p> <p>This release includes:</p> <ul> <li>New functionality for existing nodes</li> <li>A new node for Linear</li> <li>Bug fixes</li> <li>And a license change!</li> </ul>","title":"n8n@0.169.0"},{"location":"workflow/reference/release-notes/#new-license","text":"<p>This release changes n8n's license, from Apache 2.0 with Commons Clause to Sustainable Use License.</p> <p>This change aims to clarify our license terms, and our position as a fair-code project.</p> <p>Read more about the new license in License.</p>","title":"New license"},{"location":"workflow/reference/release-notes/#new-nodes","text":"<ul> <li>Linear Node: Add Linear Node.</li> </ul>","title":"New nodes"},{"location":"workflow/reference/release-notes/#enhanced-nodes_2","text":"<ul> <li>HTTP Request Node: Allow Delete requests with body.</li> <li>KoBoToolbox Node: Add KoBoToolbox Regular and Trigger Node.</li> <li>Mailjet Node: Add credential tests and support for sandbox, JSON parameters &amp; variables.</li> <li>Mattermost Node: Add support for Channel search.</li> </ul>","title":"Enhanced nodes"},{"location":"workflow/reference/release-notes/#other-improvements","text":"<ul> <li>Add support for reading IDs from file with executeBatch command.</li> </ul>","title":"Other improvements"},{"location":"workflow/reference/release-notes/#bug-fixes_4","text":"<ul> <li>GitHub node: Fix credential tests and File List operation.</li> <li>Telegram node: Fix sending binary data when disable notification is set.</li> </ul>","title":"Bug fixes"},{"location":"workflow/reference/release-notes/#contributors_3","text":"<ul> <li>Manuel</li> <li>Marcin Kozey</li> <li>Matthew Walther</li> <li>Yann Jouanique</li> </ul>","title":"Contributors"},{"location":"workflow/reference/release-notes/#n8n01682","text":"<p>For a comprehensive list of changes, view the commits for this version. Release date: 2022-03-16</p> <p>This release contains an important bug fix for 0.168.0. Users on 0.168.0 or 0.168.1 should upgrade to this.</p>","title":"n8n@0.168.2"},{"location":"workflow/reference/release-notes/#n8n01681","text":"<p>For a comprehensive list of changes, view the commits for this version. Release date: 2022-03-15</p> <p>A bug fix for user management: fixed an issue with email templates that was preventing owners from inviting members.</p>","title":"n8n@0.168.1"},{"location":"workflow/reference/release-notes/#n8n01680","text":"<p>For a comprehensive list of changes, view the commits for this version. Release date: 2022-03-14</p>","title":"n8n@0.168.0"},{"location":"workflow/reference/release-notes/#new-feature-user-management","text":"<p>User management in Doc\u00b2 allows you to invite people to work in your self-hosted Doc\u00b2 instance. It includes:</p> <ul> <li>Login and password management</li> <li>Adding and removing users</li> <li>Two account types: owner and member</li> </ul> <p>Check out the user management documentation for more information.</p>","title":"New feature: user management"},{"location":"workflow/reference/release-notes/#n8n01670","text":"<p>For a comprehensive list of changes, view the commits for this version. Release date: 2022-03-13</p>","title":"n8n@0.167.0"},{"location":"workflow/reference/release-notes/#highlights","text":"","title":"Highlights"},{"location":"workflow/reference/release-notes/#luxon-and-jmespath","text":"<p>0.167.0 adds support for two new libraries:</p> <ul> <li>Luxon: a JavaScript library for working with date and time</li> <li>JMESPath: a query language for JSON</li> </ul> <p>You can use Luxon and JMESPath in the code editor and in expressions.</p>","title":"Luxon and JMESPath"},{"location":"workflow/reference/release-notes/#new-expressions-variables","text":"<p>We've added two new variables to simplify working with date and time in expressions:</p> <ul> <li><code>$now</code>: a Luxon object containing the current timestamp. Equivalent to DateTime.now().</li> <li><code>$today</code>: a Luxon object containing the current timestamp, rounded down to the day. Equivalent to DateTime.now().set({ hour: 0, minute: 0, second: 0, millisecond: 0 }).</li> </ul>","title":"New expressions variables"},{"location":"workflow/reference/release-notes/#negative-operations-in-if-and-switch-nodes","text":"<p>Made it easier to perform negative operations on strings.</p> <p>This release adds one new operation for numbers:</p> <ul> <li>Is Not Empty</li> </ul> <p>And the following new operations for strings:</p> <ul> <li>Not Ends With</li> <li>Regex Not Match</li> <li>Not Starts With</li> <li>Is Not Empty</li> </ul> <p>Additionally, Regex is now labelled Regex Match.</p>","title":"Negative operations in If and Switch nodes"},{"location":"workflow/reference/release-notes/#new-node-redis-trigger","text":"<p>Added a Redis Trigger node, so you can now start workflows based on a Redis event.</p> <ul> <li>Redis Trigger: Added a Redis Trigger node.</li> </ul>","title":"New node: Redis Trigger"},{"location":"workflow/reference/release-notes/#core-functionality","text":"<ul> <li>Added support for Luxon and JMESPath.</li> <li>Added two new expressions variables, <code>$now</code> and <code>$today</code>.</li> <li>Added more negative operations for numbers and strings.</li> <li>Added a link to the course from the help menu.</li> </ul>","title":"Core functionality"},{"location":"workflow/reference/release-notes/#nodes","text":"<ul> <li>Facebook Graph API: Added suport for Facebook Graph API 13.</li> <li>Hubspot: Added suport for private app token authentication.</li> <li>MongoDB: Added the aggregate operation.</li> <li>Redis Trigger: Added a Redis Trigger node.</li> <li>Redis: Added support for publish operations.</li> <li>Strapi: Added support for Strapi 4.</li> <li>WordPress: Added status as an option to getAll post requests.</li> </ul>","title":"Nodes"},{"location":"workflow/reference/release-notes/#bugfixes","text":"<ul> <li>The Google Calendar node now correctly applies timezones when creating, updating, and scheduling all day events.</li> <li>Fixed a bug that occasionally caused Doc\u00b2 to crash, or shut down workflows unexpectedly.</li> <li>You can now use long credential type names with Postgres.</li> </ul>","title":"Bugfixes"},{"location":"workflow/reference/release-notes/#contributors_4","text":"<ul> <li>Luiz Eduardo de Oliveira Fonseca</li> <li>Vitaliy Fratkin</li> <li>sol</li> <li>vcrwr</li> <li>FFTDB</li> </ul>","title":"Contributors"},{"location":"workflow/reference/release-notes/#n8n01660","text":"<p>For a comprehensive list of changes, view the commits for this version. Release date: 2022-03-08</p>","title":"n8n@0.166.0"},{"location":"workflow/reference/release-notes/#new-nodes_1","text":"<ul> <li>Odoo</li> </ul>","title":"New nodes"},{"location":"workflow/reference/release-notes/#enhanced-nodes_3","text":"<ul> <li>Function: Added support for items without a JSON key.</li> </ul>","title":"Enhanced nodes"},{"location":"workflow/reference/release-notes/#core-functionality_1","text":"<ul> <li>Added new environment variable <code>N8N_HIRING_BANNER_ENABLED</code> to enable/disable the hiring banner.</li> <li>Fixed a bug preventing keyboard shortcuts from working as expected.</li> <li>Fixed a bug causing tooltips to be hidden behind other elements.</li> <li>Fixed a bug causing some credentials to be hidden from the credentials list.</li> </ul>","title":"Core functionality"},{"location":"workflow/reference/release-notes/#bug-fixes_5","text":"<ul> <li>Baserow: Fixed a bug preventing the Sorting option of the Get All operation from working as expected.</li> <li>HTTP Request: Fixed a bug causing Digest Authentication to fail in some scenarios.</li> <li>Wise: Fixed a bug causing API requests requiring Strong Customer Authentication (SCA) to fail.</li> </ul>","title":"Bug fixes"},{"location":"workflow/reference/release-notes/#contributors_5","text":"<p>pemontto</p>","title":"Contributors"},{"location":"workflow/reference/release-notes/#n8n01650","text":"<p>For a comprehensive list of changes, view the commits for this version. Release date: 2022-02-28</p>  <p>Breaking changes</p> <p>Please note that this version contains breaking changes. You can read more about them here.</p>","title":"n8n@0.165.0"},{"location":"workflow/reference/release-notes/#new-nodes_2","text":"<ul> <li>Onfleet</li> </ul>","title":"New nodes"},{"location":"workflow/reference/release-notes/#enhanced-nodes_4","text":"<ul> <li>Asana: Added Create operation to the Project resource.</li> <li>Mautic: Added Edit Contact Points, Edit Do Not Contact List, Send Email operations to Contact resource. Also added new Segment Email resource.</li> <li>Notion (Beta): Added support for rollup fields to the Simplify Output option. Also added the Parent ID to the Get All operation of the Block resource.</li> <li>Pipedrive: Added Marketing Status field to the Create operation of the Person resource, also added User ID field to the Create and Update operations of the Person resource.</li> </ul>","title":"Enhanced nodes"},{"location":"workflow/reference/release-notes/#core-functionality_2","text":"<ul> <li>Added support for workflow templates.</li> <li>Fixed a bug causing credentials tests to fail for versioned nodes.</li> <li>Fixed a build problem by addind dependencies <code>@types/lodash.set</code> to the <code>workflow</code> package and <code>@types/uuid</code> to the <code>core</code> package.</li> <li>Fixed an error causing some resources to ignore a non-standard <code>N8N_PATH</code> value.</li> <li>Fixed an error preventing the placeholder text from being shown when entering credentials.</li> <li>Improved error handling for telemetry-related errors.</li> </ul>","title":"Core functionality"},{"location":"workflow/reference/release-notes/#bug-fixes_6","text":"<ul> <li>Orbit: Fixed a bug causing API requests to use an incorrect workspace identifier.</li> <li>TheHive:  Fixed a bug causing the Ignore SSL Issues option to be applied incorrectly.</li> </ul>","title":"Bug fixes"},{"location":"workflow/reference/release-notes/#contributors_6","text":"<p>alexwitkowski, I\u00f1aki Breinbauer, lsemaj, Luiz Eduardo de Oliveira Fonseca, Rodrigo Correia, Santiago Botero Ruiz, Saurabh Kashyap, Ugo Bataillard</p>","title":"Contributors"},{"location":"workflow/reference/release-notes/#n8n01641","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2022-02-20</p>","title":"n8n@0.164.1"},{"location":"workflow/reference/release-notes/#core-functionality_3","text":"<ul> <li>Fixed a bug preventing webhooks from working as expected in some scenarios.</li> </ul>","title":"Core Functionality"},{"location":"workflow/reference/release-notes/#n8n01640","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2022-02-20</p>","title":"n8n@0.164.0"},{"location":"workflow/reference/release-notes/#new-nodes_3","text":"<ul> <li>Google Chat</li> </ul>","title":"New nodes"},{"location":"workflow/reference/release-notes/#enhanced-nodes_5","text":"<ul> <li>Grist: Added support for self-hosted Grist instances.</li> <li>Telegram Trigger: Added new Extra Large option to Image Size field.</li> <li>Webhook: Added new No Response Body option. Also added support for DELETE, PATCH and PUT methods.</li> </ul>","title":"Enhanced nodes"},{"location":"workflow/reference/release-notes/#core-functionality_4","text":"<ul> <li>Added new database indices to improve the performance when querying past executions.</li> <li>Fixed a bug causing the base portion of a URL not to be prepended as expected in some scenarios.</li> <li>Fixed a bug cuasing expressions to resolve incorrectly when referencing non-existent nodes or parameters.</li> </ul>","title":"Core Functionality"},{"location":"workflow/reference/release-notes/#contributors_7","text":"<p>Jhalter5Stones, Valentina Lilova, thorstenfreitag</p>","title":"Contributors"},{"location":"workflow/reference/release-notes/#n8n01631","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2022-02-13</p>","title":"n8n@0.163.1"},{"location":"workflow/reference/release-notes/#core-functionality_5","text":"<ul> <li>Fixed a bug preventing OAuth2 authentication from working as expected in some scenarios.</li> </ul>","title":"Core Functionality"},{"location":"workflow/reference/release-notes/#n8n01630","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2022-02-13</p>","title":"n8n@0.163.0"},{"location":"workflow/reference/release-notes/#new-nodes_4","text":"<ul> <li>HaloPSA</li> <li>Linear Trigger</li> <li>Zammad</li> </ul>","title":"New nodes"},{"location":"workflow/reference/release-notes/#enhanced-nodes_6","text":"<ul> <li>GitHub: Added Reference option to the Get operation of the File resource.</li> <li>Twilio: Added Status Callbacks option.</li> <li>uProc: Sanitized Data Webhook field description.</li> </ul>","title":"Enhanced nodes"},{"location":"workflow/reference/release-notes/#core-functionality_6","text":"<ul> <li>Added automatic sorting by relative position to the node list inside the expression editor.</li> <li>Added new <code>/workflows/demo</code> page to allow read-only rendering of workflows inside an iframe.</li> <li>Added optional <code>/healthz</code> health check endpoint to worker instances.</li> <li>Fixed unwanted list autofill behaviour inside the expression editor.</li> <li>Improved the GitHub actions used by the nightly Docker image.</li> </ul>","title":"Core Functionality"},{"location":"workflow/reference/release-notes/#bug-fixes_7","text":"<ul> <li>Function: Fixed a bug leaving the code editor size unchanged after resizing the window.</li> <li>Function Item: Fixed a bug leaving the code editor size unchanged after resizing the window.</li> <li>IF: Removed the empty sections left after removing a condition.</li> <li>Item Lists: Fixed an erroneous placeholder text.</li> </ul>","title":"Bug fixes"},{"location":"workflow/reference/release-notes/#contributors_8","text":"<p>I\u00f1aki Breinbauer, Manuel, pemontto</p>","title":"Contributors"},{"location":"workflow/reference/release-notes/#n8n01620","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2022-02-06</p>","title":"n8n@0.162.0"},{"location":"workflow/reference/release-notes/#enhanced-nodes_7","text":"<ul> <li>GitHub: Added new List operation to File resource.</li> </ul>","title":"Enhanced nodes"},{"location":"workflow/reference/release-notes/#core-functionality_7","text":"<ul> <li>Added configurable debug logging for telemetry.</li> <li>Added support for defining nodes through JSON. This functionality is in alpha state and breaking changes to the interface can take place in upcoming versions.</li> <li>Added telemetry support to page events occuring before telemetry is initialized.</li> <li>Fixed a bug preventing errors in sub-workflows from appearing in parent executions.</li> <li>Fixed a bug where node versioning would not work as expected.</li> <li>Fixed a bug where remote parameters would not load as expected.</li> <li>Fixed a bug where unkown node types would not work as expected.</li> <li>Prevented the node details view from opening automatically after duplicating a node.</li> <li>Removed dependency <code>fibers</code> which is incompatible with the current LTS version 16 of Node.js.</li> </ul>","title":"Core Functionality"},{"location":"workflow/reference/release-notes/#bug-fixes_8","text":"<ul> <li>XML: Fixed a bug causing the node to alter incoming data.</li> </ul>","title":"Bug fixes"},{"location":"workflow/reference/release-notes/#contributors_9","text":"<p>pemontto</p>","title":"Contributors"},{"location":"workflow/reference/release-notes/#n8n01611","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2022-02-01</p>","title":"n8n@0.161.1"},{"location":"workflow/reference/release-notes/#core-functionality_8","text":"<ul> <li>Added optional debug logging to health check functionality.</li> </ul>","title":"Core Functionality"},{"location":"workflow/reference/release-notes/#n8n01610","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2022-01-30</p>","title":"n8n@0.161.0"},{"location":"workflow/reference/release-notes/#core-functionality_9","text":"<ul> <li>Added default polling interval for trigger nodes using polling.</li> <li>Added support for additional hints below parameter fields.</li> <li>Fixed a bug preventing default values from being used when testing credentials.</li> <li>Improved the wording in the Save your Changes? dialog.</li> </ul>","title":"Core Functionality"},{"location":"workflow/reference/release-notes/#bug-fixes_9","text":"<ul> <li>Airtable: Improved field description.</li> <li>Airtable Trigger: Improved field description.</li> <li>erpNext: Prevented the node from throwing an error when no data is found.</li> <li>Gmail: Fixed a bug causing the BCC field to be ignored.</li> <li>Move Binary Data: Fixed a bug causing the binary data to JSON conversion to fail when using filesystem-based binary data handling.</li> <li>Slack: Fixed a typo in the Type field.</li> </ul>","title":"Bug fixes"},{"location":"workflow/reference/release-notes/#contributors_10","text":"<p>fabian wohlgemuth</p>","title":"Contributors"},{"location":"workflow/reference/release-notes/#n8n01600","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2022-01-22</p>","title":"n8n@0.160.0"},{"location":"workflow/reference/release-notes/#new-nodes_5","text":"<ul> <li>BambooHR</li> </ul>","title":"New nodes"},{"location":"workflow/reference/release-notes/#core-functionality_10","text":"<ul> <li>Fixed a bug preventing the binary data preview from using the full available height and width.</li> <li>Fixed a build problem by pinning chokidar version 3.5.2.</li> <li>Prevent workflow activation when no trigger is presentand introduced a modal explaining production data handling.</li> <li>Fixed Filter by tags placeholder text used in the Open Workflow modal.</li> </ul>","title":"Core Functionality"},{"location":"workflow/reference/release-notes/#bug-fixes_10","text":"<ul> <li>HTTP Request: Fixed a bug causing custom headers from being ignored.</li> <li>Mautic: Fixed a bug preventing all items from being returned in some situations.</li> <li>Microsoft OneDrive: Fixed a bug preventing more than 200 items from being returned.</li> <li>Spotify: Fixed a bug causing the execution to fail if there are more than 1000 search results, also fixed a bug preventing the Get New Releases operation of the Album resource from working as expected.</li> </ul>","title":"Bug fixes"},{"location":"workflow/reference/release-notes/#contributors_11","text":"<p>fabian wohlgemuth</p>","title":"Contributors"},{"location":"workflow/reference/release-notes/#n8n01591","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2022-01-18</p>","title":"n8n@0.159.1"},{"location":"workflow/reference/release-notes/#core-functionality_11","text":"<ul> <li>Temporarily removed debug logging for axios requests.</li> </ul>","title":"Core Functionality"},{"location":"workflow/reference/release-notes/#n8n01590","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2022-01-16</p>","title":"n8n@0.159.0"},{"location":"workflow/reference/release-notes/#new-nodes_6","text":"<ul> <li>Jenkins</li> </ul>","title":"New nodes"},{"location":"workflow/reference/release-notes/#enhanced-nodes_8","text":"<ul> <li>GraphQL: Added support for additional authentication methods Basic Auth, Digest Auth, OAuth1, OAuth2, and Query Auth.</li> </ul>","title":"Enhanced nodes"},{"location":"workflow/reference/release-notes/#core-functionality_12","text":"<ul> <li>Added support for executing workflows without an ID through the CLI.</li> <li>Fixed a build problem.</li> <li>Fixed a bug preventing the tag description from being shown on the canvas.</li> <li>Improved build performance by skipping the <code>node-dev</code> package during build.</li> </ul>","title":"Core Functionality"},{"location":"workflow/reference/release-notes/#bug-fixes_11","text":"<ul> <li>Box: Fixed a bug causing some files to be corrupted during download.</li> <li>Philips Hue: Fixed a bug preventing the node from connecting to Philips Hue.</li> <li>Salesforce: Fixed a bug preventing filters on date and datetime fields from working as expected.</li> <li>Supabase: Fixed an errorneous documentation link.</li> </ul>","title":"Bug fixes"},{"location":"workflow/reference/release-notes/#contributors_12","text":"<p>Phil Clifford</p>","title":"Contributors"},{"location":"workflow/reference/release-notes/#n8n01580","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2022-01-09</p>","title":"n8n@0.158.0"},{"location":"workflow/reference/release-notes/#new-nodes_7","text":"<ul> <li>Microsoft Graph Security</li> <li>SyncroMSP</li> <li>Supabase</li> </ul>","title":"New nodes"},{"location":"workflow/reference/release-notes/#enhanced-nodes_9","text":"<ul> <li>Edit Image: Added Transparent operation.</li> <li>Kafka: Added Use Schema Registry option.</li> <li>Kafka Trigger: Added Use Schema Registry option.</li> <li>Redis: Added database field to credentials.</li> <li>Salesforce: Added Account Number field.</li> </ul>","title":"Enhanced nodes"},{"location":"workflow/reference/release-notes/#core-functionality_13","text":"<ul> <li>Added new external hook when active workflows finished initializing.</li> <li>Fixed a bug preventing the personalisation survey from showing up.</li> <li>Improved telemetry.</li> </ul>","title":"Core Functionality"},{"location":"workflow/reference/release-notes/#bug-fixes_12","text":"<ul> <li>Edit Image: Fixed a bug causing two items to be returned.</li> <li>iCalendar: Fixed a bug preventing dates in January from working as expected.</li> <li>Merge: Fixed causing empty binary data to overwrite other binary data on merge.</li> </ul>","title":"Bug fixes"},{"location":"workflow/reference/release-notes/#contributors_13","text":"<p>Ricardo Georgel, Pierre, Vahid Sebto</p>","title":"Contributors"},{"location":"workflow/reference/release-notes/#n8n01571","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2022-01-03</p>","title":"n8n@0.157.1"},{"location":"workflow/reference/release-notes/#core-functionality_14","text":"<ul> <li>Fixed a bug where not all nodes could use the new binary data handling.</li> </ul>","title":"Core Functionality"},{"location":"workflow/reference/release-notes/#n8n01570","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2022-01-02</p>","title":"n8n@0.157.0"},{"location":"workflow/reference/release-notes/#enhanced-nodes_10","text":"<ul> <li>Function: The node now prevents unsupported data from being returned.</li> <li>Function Item: The node now prevents unsupported data from being returned.</li> <li>HubSpot: Added Engagement resource with Create, Delete, Get, and Get All operations.</li> <li>Notion (Beta): Upgraded the Notion node: Added Search operation for the Database resource, Get operation for Database Page resource, Archive operation for the Page resource. Also added Simplify Output option and test for credential validity.</li> <li>Wait: Added new Ignore Bots option.</li> <li>Webhook: Added new Ignore Bots option.</li> </ul>","title":"Enhanced nodes"},{"location":"workflow/reference/release-notes/#core-functionality_15","text":"<ul> <li>Fixed a bug where a wrong number suffix was used after duplicating nodes.</li> </ul>","title":"Core Functionality"},{"location":"workflow/reference/release-notes/#bug-fixes_13","text":"<ul> <li>HTTP Request: Fixed a bug where using Digest Auth would fail.</li> </ul>","title":"Bug fixes"},{"location":"workflow/reference/release-notes/#contributors_14","text":"<p>pemontto</p>","title":"Contributors"},{"location":"workflow/reference/release-notes/#n8n01560","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-12-25</p>","title":"n8n@0.156.0"},{"location":"workflow/reference/release-notes/#enhanced-nodes_11","text":"<ul> <li>GitLab Trigger: Added new trigger events: Confidential Issue, Confidential Comment, Deployment, Release.</li> <li>Google Drive: Added support for downloading and converting native Google files.</li> <li>Kitemaker: Added Space ID field to Create operation of Work Item resource.</li> <li>Raindrop: Added Parse Metadata option to Create, Update operations of the Bookmark resource.</li> </ul>","title":"Enhanced nodes"},{"location":"workflow/reference/release-notes/#core-functionality_16","text":"<ul> <li>Added execution ID to workflow.postExecute hook</li> <li>Added response body to UI for failed Axios requests</li> <li>Added support for automatically removing new lines from Google Service Account credentials</li> <li>Added support for disabling the UI via environment variable</li> <li>Fixed a bug causing the wrong expression result to be shown for items from an output other than the first</li> <li>Improved binary data management</li> <li>Introduced Monaco as new UI code editor</li> </ul>","title":"Core Functionality"},{"location":"workflow/reference/release-notes/#contributors_15","text":"<p>Arpad Gabor, Leo Lou, Manuel</p>","title":"Contributors"},{"location":"workflow/reference/release-notes/#n8n01552","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-12-19</p>","title":"n8n@0.155.2"},{"location":"workflow/reference/release-notes/#core-functionality_17","text":"<ul> <li>Added support for internationalization (i18n). This functionality is currently in alpha status and breaking changes are to be expected.</li> </ul>","title":"Core Functionality"},{"location":"workflow/reference/release-notes/#n8n01540","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-12-19</p>","title":"n8n@0.154.0"},{"location":"workflow/reference/release-notes/#enhanced-nodes_12","text":"<ul> <li>Plivo: Added user agent to all API requests.</li> </ul>","title":"Enhanced nodes"},{"location":"workflow/reference/release-notes/#core-functionality_18","text":"<ul> <li>Allow deletion of nodes from the canvas using the backspace key</li> <li>Fixed an issue causing clicks in the value survey to impact the main view</li> <li>Fixed an issue preventing the update panel from closing</li> </ul>","title":"Core Functionality"},{"location":"workflow/reference/release-notes/#bug-fixes_14","text":"<ul> <li>Todoist: Fixed a bug where using the additional field Due Date Time on the Task resource would cause the Create operation to fail.</li> </ul>","title":"Bug fixes"},{"location":"workflow/reference/release-notes/#contributors_16","text":"<p>Mohammed Huzaif, \u041b\u0435\u0431\u0435\u0434\u0435\u0432 \u0418\u0432\u0430\u043d</p>","title":"Contributors"},{"location":"workflow/reference/release-notes/#n8n01530","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-12-11</p>","title":"n8n@0.153.0"},{"location":"workflow/reference/release-notes/#new-nodes_8","text":"<ul> <li>Figma Trigger (Beta)</li> <li>Workable Trigger</li> </ul>","title":"New nodes"},{"location":"workflow/reference/release-notes/#enhanced-nodes_13","text":"<ul> <li>Google Contacts: Added Query option to Get All operation, also prevented the node from failing when no contacts are found.</li> <li>HTTP Request: Added support for query-based authentication.</li> <li>Home Assistant: Added support for loading possible options in the Domain, Service, and Entity ID fields.</li> <li>One Simple API: Added support for Social Profile resources.</li> <li>PagerDuty: Write scope is now requested upon authentication against the PagerDuty OAuth2 API.</li> </ul>","title":"Enhanced nodes"},{"location":"workflow/reference/release-notes/#core-functionality_19","text":"<ul> <li>Added frontend for value surveys</li> <li>Fixed an issue preventing the recommendation logic from working as expected after selecting a work area</li> <li>Fixed an issue where a wrong exit code was sent when running Doc\u00b2 on an unsupported version of Node.js</li> <li>Fixed an issue where node options would disappear on hovering when a node is not selected</li> <li>Fixed an issue where the execution id was missing when running Doc\u00b2 in queue mode</li> <li>Fixed an issue where execution data was missing when waiting for a webhook in queue mode</li> <li>Improved error handling when the Doc\u00b2 port is already in use</li> <li>Improved diagnostic events</li> <li>Removed toast notification on webhook deletion, added toast notification after node is copied</li> <li>Removed default trigger tooltip for polling trigger nodes</li> </ul>","title":"Core Functionality"},{"location":"workflow/reference/release-notes/#bug-fixes_15","text":"<ul> <li>APITemplate.io: Fixed a bug where the Create operation on the Image resource would fail when the Download option is not enabled.</li> <li>HubSpot: Fixed authentication for new Hubspot applications by using granular scopes when authenticating against the Hubspot OAuth2 API.</li> <li>HubSpot Trigger: Fixed authentication for new Hubspot applications by using granular scopes when authenticating against the Hubspot Developer API.</li> <li>Jira Software: Fixed an issue where the Reporter field would not work as expected on Jira Server instances.</li> <li>Salesforce: Fixed a typo preventing the value in the amount field of from being saved.</li> </ul>","title":"Bug fixes"},{"location":"workflow/reference/release-notes/#contributors_17","text":"<p>pemontto, Jascha L\u00fclsdorf, Jonathan Bennetts</p>","title":"Contributors"},{"location":"workflow/reference/release-notes/#n8n01520","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-12-04</p>","title":"n8n@0.152.0"},{"location":"workflow/reference/release-notes/#new-nodes_9","text":"<ul> <li>Google Calendar Trigger</li> </ul>","title":"New nodes"},{"location":"workflow/reference/release-notes/#enhanced-nodes_14","text":"<ul> <li>Telegram Trigger: Added support for downloading images to channel_post updates.</li> </ul>","title":"Enhanced nodes"},{"location":"workflow/reference/release-notes/#core-functionality_20","text":"<ul> <li>Added a plus (+) connector to end nodes</li> <li>Allowed opening workflows and executions in a new window when using Ctrl + Click</li> <li>Enforced type checking for all node parameters</li> <li>Fixed a build issue in the custom Doc\u00b2 docker image</li> <li>Fixed a memory leak in the UI which could occur when renaming nodes or navigate to another workflow</li> <li>Improved stability of internal test workflows</li> <li>Improved expression security</li> <li>Introduced redirect to a new page and UI error message when trying to open a deleted workflow</li> <li>Introduced support for multiple arguments when logging</li> <li>Updated the onboarding survey</li> </ul>","title":"Core Functionality"},{"location":"workflow/reference/release-notes/#bug-fixes_16","text":"<ul> <li>Google BigQuery: Fixed a bug preventing pagination from working as expected when the Return All option is enabled.</li> <li>RabbitMQ Trigger: Added Trigger to the name of the trigger node.</li> <li>Salesforce: Fixed a typo affecting the Type field of the Opportunity resource.</li> </ul>","title":"Bug fixes"},{"location":"workflow/reference/release-notes/#contributors_18","text":"<p>Zvonimir Erdelja, m2scared</p>","title":"Contributors"},{"location":"workflow/reference/release-notes/#n8n01510","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-11-26</p>","title":"n8n@0.151.0"},{"location":"workflow/reference/release-notes/#new-nodes_10","text":"<ul> <li>DHL</li> <li>Grafana</li> </ul>","title":"New nodes"},{"location":"workflow/reference/release-notes/#core-functionality_21","text":"<ul> <li>Fixed a bug causing connections between nodes to disappear when renaming a newly added node after drawing a connection to its endpoints.</li> <li>Fixed a build issue by adding TypeScript definitions for validator.js to CLI package, also fixed a linting issue by removing an unused import.</li> <li>Improved the waiting state of trigger nodes to explain when an external event is required.</li> <li>Loops are now drawn below their source node.</li> </ul>","title":"Core Functionality"},{"location":"workflow/reference/release-notes/#bug-fixes_17","text":"<ul> <li>Edit Image: Fixed an issue preventing the Composite operation from working correctly in some cases.</li> </ul>","title":"Bug fixes"},{"location":"workflow/reference/release-notes/#contributors_19","text":"<p>Jonathan Bennetts</p>","title":"Contributors"},{"location":"workflow/reference/release-notes/#n8n01500","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-11-19</p>","title":"n8n@0.150.0"},{"location":"workflow/reference/release-notes/#enhanced-nodes_15","text":"<ul> <li>Jira Software: Added Components as an additional field.</li> </ul>","title":"Enhanced nodes"},{"location":"workflow/reference/release-notes/#core-functionality_22","text":"<ul> <li>Fixed a build issue by pinning rudder-sdk-node version 1.0.6 in CLI package.</li> <li>Fixed an issue preventing the <code>n8n import:workflow --separate</code> CLI command from finding workflows on Windows.</li> <li>Further improved the expression security.</li> <li>Moved all nodes into separate directories in preparation for internationalization.</li> <li>Removing default headers for PUT and PATCH operations when using axios.</li> <li>Revamped the workflow canvas.</li> </ul>","title":"Core Functionality"},{"location":"workflow/reference/release-notes/#bug-fixes_18","text":"<ul> <li>HTTP Request: Fixed an issue causing the wrong Content-Type header to be set when downloading a file.</li> <li>ServiceNow: Fixed incorrect mapping of incident urgency and impact values.</li> <li>Start: Fixed an issue causing the node to be disabled in a new workflow.</li> <li>Xero: Fixed an issue causing the node to only fetch the first page when querying the Xero API.</li> </ul>","title":"Bug fixes"},{"location":"workflow/reference/release-notes/#n8n01490","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-11-13</p>","title":"n8n@0.149.0"},{"location":"workflow/reference/release-notes/#new-nodes_11","text":"<ul> <li>One Simple API</li> </ul>","title":"New nodes"},{"location":"workflow/reference/release-notes/#enhanced-nodes_16","text":"<ul> <li>Edit Image: Added Circle Primitive to Draw operation. Also added Composite operation.</li> <li>Zendesk: Added check for API credentials validity.</li> <li>Zulip: Added additional field Role to the Update operation of the User resource.</li> </ul>","title":"Enhanced nodes"},{"location":"workflow/reference/release-notes/#core-functionality_23","text":"<ul> <li>Fixed an issue causing an error message to be thrown when executing a workflow through the CLI.</li> <li>Improved expression security by limiting the available process properties.</li> <li>Improved the behaviour of internal tests executed through the CLI.</li> <li>Updated the owner of the node user's home directory in the custom docker image.</li> </ul>","title":"Core Functionality"},{"location":"workflow/reference/release-notes/#bug-fixes_19","text":"<ul> <li>Google Tasks: Fixed an issue where the Due Date field had no effect (Update operation) or was unavailable (Create operation).</li> <li>HTTP Request: Fixed an issue where the Content-Length header was not calculated and sent when using the a Body Content Type of Form-Data Multipart.</li> <li>Stripe Trigger: Fixed an issue preventing the node from being activated when a previously created webhook no longer exists.</li> <li>Toggl Trigger: Updated the API URL used by the node.</li> </ul>","title":"Bug fixes"},{"location":"workflow/reference/release-notes/#contributors_20","text":"<p>GeylaniBerk, Jonathan Bennetts</p>","title":"Contributors"},{"location":"workflow/reference/release-notes/#n8n01480","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-11-05</p>","title":"n8n@0.148.0"},{"location":"workflow/reference/release-notes/#new-nodes_12","text":"<ul> <li>Dropcontact</li> <li>Respond to Webhook</li> </ul>","title":"New nodes"},{"location":"workflow/reference/release-notes/#enhanced-nodes_17","text":"<ul> <li>Lemlist: Added additional fields to Create operation of Lead resource.</li> <li>Slack: Added User Group resource.</li> <li>Todoist: Added Update operation to Task resource.</li> <li>Wait: Improved descriptions of available Respond options.</li> <li>WooCommerce: Added password field to Crate operation of Customer resource.</li> </ul>","title":"Enhanced nodes"},{"location":"workflow/reference/release-notes/#core-functionality_24","text":"<ul> <li>Added a hook after workflow creation.</li> <li>Fixed a build issue with npm v7 by overriding unwanted behaviour through the .npmrc file.</li> <li>Fixed an issue preventing unknown node types from being imported.</li> <li>Fixed an issue with the UI falsely indicating a credential cannot be selected when using SQLite and multiple credentials with the same name exist.</li> </ul>","title":"Core Functionality"},{"location":"workflow/reference/release-notes/#bug-fixes_20","text":"<ul> <li>Stripe: Fixed an issue where setting additional Metadata fields would not have the expected effect. Also fixed an issue where pagination would not work as expected.</li> <li>Zendesk: Fixed an issue preventing the additional field External ID from being evaulated correctly.</li> </ul>","title":"Bug fixes"},{"location":"workflow/reference/release-notes/#contributors_21","text":"<p>mizzimizzi, nikozila, Pauline</p>","title":"Contributors"},{"location":"workflow/reference/release-notes/#n8n01471","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-11-03</p>","title":"n8n@0.147.1"},{"location":"workflow/reference/release-notes/#core-functionality_25","text":"<ul> <li>Fixed a build issue by moving the <code>chokidar</code> dependency to a regular dependency.</li> </ul>","title":"Core Functionality"},{"location":"workflow/reference/release-notes/#n8n01470","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-11-03</p>","title":"n8n@0.147.0"},{"location":"workflow/reference/release-notes/#new-nodes_13","text":"<ul> <li>Local File Trigger</li> </ul>","title":"New nodes"},{"location":"workflow/reference/release-notes/#core-functionality_26","text":"<ul> <li>Improved the database migration process to reduce memory footprint.</li> <li>Fixed an issue with telemetry by adding an anonymous ID.</li> </ul>","title":"Core Functionality"},{"location":"workflow/reference/release-notes/#n8n01460","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-10-29</p>","title":"n8n@0.146.0"},{"location":"workflow/reference/release-notes/#new-nodes_14","text":"<ul> <li>Microsoft Dynamics CRM</li> </ul>","title":"New nodes"},{"location":"workflow/reference/release-notes/#enhanced-nodes_18","text":"<ul> <li>Agile CRM: Added Filters to Get All operation of Contact and Company resources.</li> <li>Date &amp; Time: Ensuring the return values are always of type string.</li> <li>IF: Added support for moment types to Date &amp; Time condition.</li> </ul>","title":"Enhanced nodes"},{"location":"workflow/reference/release-notes/#core-functionality_27","text":"<ul> <li>Added name and ID of a workflow to its settings.</li> <li>Added parameter inputs to be multi-line.</li> <li>Fixed an issue with declaring proxies when axios is used.</li> <li>Fixed an issue with serializing arrays and special characters.</li> <li>Fixed an issue with updating expressions after renaming a node.</li> </ul>","title":"Core Functionality"},{"location":"workflow/reference/release-notes/#bug-fixes_21","text":"<ul> <li>HTTP Request: Fixed an issue with the Full Response option not taking effect when used with the Ignore Response Code option.</li> </ul>","title":"Bug fixes"},{"location":"workflow/reference/release-notes/#contributors_22","text":"<p>Valentina Lilova, Oliver Trajceski</p>","title":"Contributors"},{"location":"workflow/reference/release-notes/#n8n01450","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-10-22</p>","title":"n8n@0.145.0"},{"location":"workflow/reference/release-notes/#new-nodes_15","text":"<ul> <li>AWS Textract</li> <li>Google Drive Trigger</li> </ul>","title":"New nodes"},{"location":"workflow/reference/release-notes/#enhanced-nodes_19","text":"<ul> <li>Bitbucket Trigger: Added check for credentials validity. Removed deprecated User and Team resources, and added the Workspace resource.</li> <li>GitHub: Added check for API credentials validity.</li> <li>Home Assistant: Added check for credentials validity.</li> <li>Jira Software: Added check for credentials validity.</li> <li>Microsoft OneDrive: Added functionality to create folder hierarchy automatically upon subfolder creation.</li> <li>Pipedrive: Added All Users option to Get All operation of Activity resource.</li> <li>Slack: Increase the Slack default query limit from 5 to 100 in order to reduce number of requests.</li> <li>Twitter: Added Tweet Mode additional field to the Search operation of Tweet resource.</li> </ul>","title":"Enhanced nodes"},{"location":"workflow/reference/release-notes/#core-functionality_28","text":"<ul> <li>Changed <code>vm2</code> library version from <code>3.9.3</code> to <code>3.9.5</code>.</li> <li>Fixed an issue with ignoring the response code.</li> <li>Fixed an issue with overwriting credentials via environment variables.</li> <li>Fixed an issue with using query strings combined with the <code>x-www-form-urlencoded</code> content type.</li> <li>Introduced telemetry.</li> </ul>","title":"Core Functionality"},{"location":"workflow/reference/release-notes/#bug-fixes_22","text":"<ul> <li>Jira Software: Fixed an issue with the Expand option for the Issue resource. Also fixed an issue with using custom fields on Jira Server.</li> <li>Slack: Fixed an issue with pagination when loading more than 1,000 channels.</li> <li>Strapi: Fixed an issue using the Where option of the Get All operation.</li> <li>WooCommerce: Fixed an issue where a wrong postcode field name was used for the Order resource.</li> </ul>","title":"Bug fixes"},{"location":"workflow/reference/release-notes/#contributors_23","text":"<p>pemontto, rdd2, robertodamiani, Rodrigo Correia</p>","title":"Contributors"},{"location":"workflow/reference/release-notes/#n8n01440","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-10-15</p>","title":"n8n@0.144.0"},{"location":"workflow/reference/release-notes/#enhanced-nodes_20","text":"<ul> <li>Nextcloud: Added Share operation to the File and Folder resources.</li> <li>Zendesk: Added support for deleting, listing, getting, and recovering suspended tickets. Added the query option for regular tickets. Added assignee emails, internal notes, and public replies options to the update ticket operation.</li> </ul>","title":"Enhanced nodes"},{"location":"workflow/reference/release-notes/#core-functionality_29","text":"<ul> <li>Improved the autofill behaviour on Google Chrome when entering credentials.</li> </ul>","title":"Core Functionality"},{"location":"workflow/reference/release-notes/#bug-fixes_23","text":"<ul> <li>Airtable: Fixed an issue with the sort field.</li> <li>Cron: Set the version of the cron library to 1.7.2.</li> </ul>","title":"Bug fixes"},{"location":"workflow/reference/release-notes/#contributors_24","text":"<p>Jonathan Bennetts</p>","title":"Contributors"},{"location":"workflow/reference/release-notes/#n8n01430","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-10-14</p>","title":"n8n@0.143.0"},{"location":"workflow/reference/release-notes/#enhanced-nodes_21","text":"<ul> <li>Pipedrive: Added support for getting activities from deal ID.</li> <li>Facebook Graph API: Added support for Facebook Graph API versions 11 and 12.</li> </ul>","title":"Enhanced nodes"},{"location":"workflow/reference/release-notes/#core-functionality_30","text":"<ul> <li>Fixed a build issue affecting a number of AWS nodes.</li> <li>Changed workflows to use credential ids primarily (instead of names), allowing users to have different credentials with the same name.</li> </ul>","title":"Core Functionality"},{"location":"workflow/reference/release-notes/#bug-fixes_24","text":"<ul> <li> FTP: Fixed error when opening FTP/SFTP credentials.</li> </ul>","title":"Bug fixes"},{"location":"workflow/reference/release-notes/#contributors_25","text":"<p>Rodrigo Correia</p>","title":"Contributors"},{"location":"workflow/reference/release-notes/#n8n01420","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-10-07</p>","title":"n8n@0.142.0"},{"location":"workflow/reference/release-notes/#new-nodes_16","text":"<ul> <li>Stop and Error</li> </ul>","title":"New nodes"},{"location":"workflow/reference/release-notes/#core-functionality_31","text":"<ul> <li>Fixed overlapping buttons when viewing on mobile.</li> <li>Fixed issue with partial workflow executions when Wait node was last.</li> <li>Fixed issue with broken non-JSON requests.</li> <li>Node errors now only displayed for executing nodes, not disconnected nodes.</li> <li>Automatic save when executing new workflows with Webhook node.</li> <li>Fixed an issue with how arrays were serialized for certain nodes.</li> <li>Fixed an issue where executions could not be cancelled when running in Main mode.</li> <li>Duplicated workflows now open in a new window.</li> </ul>","title":"Core Functionality"},{"location":"workflow/reference/release-notes/#bug-fixes_25","text":"<ul> <li>HTTP Request: Fixed 'Ignore response code' flag.</li> <li>Rundeck: Fixed issue with async loading of credentials.</li> <li>SeaTable: Fixed issue when entering a Baser URI with a trailing slash.</li> </ul>","title":"Bug fixes"},{"location":"workflow/reference/release-notes/#contributors_26","text":"<p>G\u00fcnther, Tom Klingenberg</p>","title":"Contributors"},{"location":"workflow/reference/release-notes/#n8n01411","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-10-01</p>","title":"n8n@0.141.1"},{"location":"workflow/reference/release-notes/#core-functionality_32","text":"<ul> <li>Fixed issue with body formatting of <code>x-form-www-urlencoded</code> requests.</li> </ul>","title":"Core Functionality"},{"location":"workflow/reference/release-notes/#n8n01410","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-09-30</p>","title":"n8n@0.141.0"},{"location":"workflow/reference/release-notes/#new-nodes_17","text":"<ul> <li>Grist</li> <li>SeaTable</li> <li>SeaTable Trigger</li> <li>urlscan.io</li> </ul>","title":"New nodes"},{"location":"workflow/reference/release-notes/#core-functionality_33","text":"<ul> <li>Performance improvements in Editor UI</li> <li>Improved error reporting</li> </ul>","title":"Core Functionality"},{"location":"workflow/reference/release-notes/#contributors_27","text":"<p>Alex Hall, Tom Klingenberg</p>","title":"Contributors"},{"location":"workflow/reference/release-notes/#n8n01400","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-09-29</p>","title":"n8n@0.140.0"},{"location":"workflow/reference/release-notes/#new-nodes_18","text":"<ul> <li>Splunk</li> </ul>","title":"New nodes"},{"location":"workflow/reference/release-notes/#enhanced-nodes_22","text":"<ul> <li>Telegram: Added binary data support to the Send Animation, Send Audio, Send Document, Send Photo, Send Video, and Send Sticker operations.</li> </ul>","title":"Enhanced nodes"},{"location":"workflow/reference/release-notes/#core-functionality_34","text":"<ul> <li>Fixed startup behavior when running Doc\u00b2 in scaled mode (i.e. <code>skipWebhoooksDeregistrationOnShutdown</code> is enabled).</li> <li>Fixed behavior around handling empty response bodies.</li> <li>Fixed an issue with handling of refresh tokens.</li> </ul>","title":"Core Functionality"},{"location":"workflow/reference/release-notes/#contributors_28","text":"<p>pemontto</p>","title":"Contributors"},{"location":"workflow/reference/release-notes/#n8n01391","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-09-23</p>","title":"n8n@0.139.1"},{"location":"workflow/reference/release-notes/#core-functionality_35","text":"<ul> <li>Bug fixes and improvements for Editor UI.</li> </ul>","title":"Core Functionality"},{"location":"workflow/reference/release-notes/#n8n01390","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-09-22</p>","title":"n8n@0.139.0"},{"location":"workflow/reference/release-notes/#new-nodes_19","text":"<ul> <li>Elastic Security</li> <li>Misp</li> <li>Netlify</li> <li>Netlify Trigger</li> </ul>","title":"New nodes"},{"location":"workflow/reference/release-notes/#enhanced-nodes_23","text":"<ul> <li>HubSpot Trigger: Authentication method changed to OAuth2.</li> <li>Wait: Added improved status messages for Wait behavior.</li> </ul>","title":"Enhanced nodes"},{"location":"workflow/reference/release-notes/#core-functionality_36","text":"<ul> <li>Updated node design to include support for versioned nodes.</li> </ul>","title":"Core Functionality"},{"location":"workflow/reference/release-notes/#bug-fixes_26","text":"<ul> <li>SendGrid: Fixed issue with adding contacts to lists.</li> </ul>","title":"Bug fixes"},{"location":"workflow/reference/release-notes/#contributors_29","text":"<p>Mat\u00edas Aguirre</p>","title":"Contributors"},{"location":"workflow/reference/release-notes/#n8n01380","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-09-15</p>","title":"n8n@0.138.0"},{"location":"workflow/reference/release-notes/#new-nodes_20","text":"<ul> <li>Item Lists</li> <li>Magento 2</li> </ul>","title":"New nodes"},{"location":"workflow/reference/release-notes/#enhanced-nodes_24","text":"<ul> <li>Baserow: Added the following filter options: Contains, Contains Not, Date Before Date, Date After Date, Filename Contains, Is Empty, Is Not Empty, Link Row Has, Link Row Does Not Have, Single Select Equal, and Single Select Not Equal.</li> <li>Pipedrive: Added support for Notes on Leads.</li> <li>Wekan: Added Sort field to the Card resource.</li> </ul>","title":"Enhanced nodes"},{"location":"workflow/reference/release-notes/#core-functionality_37","text":"<ul> <li>General UX improvements to the Editor UI.</li> <li>Fixed an issue with the <code>PayloadTooLargeError</code>.</li> </ul>","title":"Core Functionality"},{"location":"workflow/reference/release-notes/#bug-fixes_27","text":"<ul> <li>Lemlist: Fixed issue where events were not sent in the correct property.</li> <li>Notion: Fixed issue listed unnamed databases.</li> </ul>","title":"Bug fixes"},{"location":"workflow/reference/release-notes/#contributors_30","text":"<p>bramknuever, Chris Magnuson</p>","title":"Contributors"},{"location":"workflow/reference/release-notes/#n8n01370","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-09-05</p>","title":"n8n@0.137.0"},{"location":"workflow/reference/release-notes/#new-nodes_21","text":"<ul> <li>Freshservice</li> </ul>","title":"New nodes"},{"location":"workflow/reference/release-notes/#enhanced-nodes_25","text":"<ul> <li>Clockify: Added Task resource.</li> <li>Hubspot: Added dropdown selection for Properties and Properties with History filters for Get All Deals operations.</li> <li>Mautic: Added Campaign Contact resource.</li> <li>MongoDB: Added ability to query documents by '_id'.</li> <li>MQTT: Added SSL/TLS support to authentication.</li> <li>MQTT Trigger: Added SSL/TLS support to authentication.</li> <li>Salesforce: Added File Extension option to the Document resource. Added Type field to Task resource.</li> <li>Sms77: Added Voice Call resource. Added the following options to SMS resource: Debug, Delay, Foreign ID, Flash, Label, No Reload, Performance Tracking, TTL.</li> <li>Zendesk: Added Organization resource. Added Get Organizations and Get Related Data operations to User resource.</li> </ul>","title":"Enhanced nodes"},{"location":"workflow/reference/release-notes/#core-functionality_38","text":"<ul> <li>Added execution ID to logs of queue processes.</li> <li>Added description to operation errors.</li> <li>Added ability for webhook processes to wake waiting executions.</li> </ul>","title":"Core Functionality"},{"location":"workflow/reference/release-notes/#bug-fixes_28","text":"<ul> <li>Hubspot: Fixed issue with 'RequestAllItems' API.</li> <li>Wordpress: Fixed issue with 'RequestAllItems' API only returning the first 10 items.</li> </ul>","title":"Bug fixes"},{"location":"workflow/reference/release-notes/#contributors_31","text":"<p>Andr\u00e9 Matthies, DeskYT, Frederic Alix, Jonathan Bennetts, Ketan Somvanshi, Luiz Eduardo de Oliveira Fonseca, TheFSilver</p>","title":"Contributors"},{"location":"workflow/reference/release-notes/#n8n01360","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-08-30</p>","title":"n8n@0.136.0"},{"location":"workflow/reference/release-notes/#enhanced-nodes_26","text":"<ul> <li>Notion: Added handling of Rich Text when simplifying data.</li> </ul>","title":"Enhanced nodes"},{"location":"workflow/reference/release-notes/#core-functionality_39","text":"<ul> <li>General UI design improvements.</li> <li>Improved errors messages during debugging of custom nodes.</li> <li>All packages upgraded to TypeScript 4.3.5, improved linting and formatting.</li> </ul>","title":"Core Functionality"},{"location":"workflow/reference/release-notes/#bug-fixes_29","text":"<ul> <li>FTP: Fixed issue where incorrect paths were displayed when using the node.</li> <li>Wait: Fixed issue when receiving multiple files using On Webhook Call operation.</li> <li>Webhook: Fixed issue when receiving multiple files.</li> </ul>","title":"Bug fixes"},{"location":"workflow/reference/release-notes/#n8n01353","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-08-27</p>","title":"n8n@0.135.3"},{"location":"workflow/reference/release-notes/#core-functionality_40","text":"<ul> <li>Fixed Canvas UI inconsistencies when duplicating workflows.</li> <li>Added log message during upgrade to indicate database migration has started.</li> <li>General improvements to parameter labels and tooltips.</li> </ul>","title":"Core Functionality"},{"location":"workflow/reference/release-notes/#contributors_32","text":"<p>Kyle Mohr</p>","title":"Contributors"},{"location":"workflow/reference/release-notes/#n8n01352","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-08-26</p>","title":"n8n@0.135.2"},{"location":"workflow/reference/release-notes/#core-functionality_41","text":"<ul> <li>Added expression support for credentials.</li> <li>Fixed performance issues when loading credentials.</li> </ul>","title":"Core Functionality"},{"location":"workflow/reference/release-notes/#n8n01351","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-08-23</p>","title":"n8n@0.135.1"},{"location":"workflow/reference/release-notes/#core-functionality_42","text":"<ul> <li>Fixed an issue where if Doc\u00b2 was shutdown during database migration while upgrading versions, errors would result upon next startup.</li> </ul>","title":"Core Functionality"},{"location":"workflow/reference/release-notes/#n8n01350","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-08-22</p>  <p>Breaking changes</p> <p>Please note that this version contains breaking changes. You can read more about it here. The features that introduced the breaking changes have been flagged below.</p>","title":"n8n@0.135.0"},{"location":"workflow/reference/release-notes/#new-nodes_22","text":"<ul> <li>Form.io Trigger</li> <li>Formstack Trigger</li> <li>Wait</li> </ul>","title":"New nodes"},{"location":"workflow/reference/release-notes/#core-functionality_43","text":"<ul> <li>In-node method for accessing binary data is now asynchronous and a helper function for this has been implemented. </li> <li>Credentials are now loaded from the database on-demand. </li> <li>Webhook UUIDs are automatically updated when duplicating a workflow.</li> <li>Fixed an issue when referencing values before loops.</li> </ul>","title":"Core Functionality"},{"location":"workflow/reference/release-notes/#bug-fixes_30","text":"<ul> <li>Interval: Fixed issue where entering too large a value (&gt; 2147483647ms) resulted in an interval of 1sec being used rather than an error.</li> </ul>","title":"Bug fixes"},{"location":"workflow/reference/release-notes/#contributors_33","text":"<p>Aniruddha Adhikary, lublak, parthibanbalaji</p>","title":"Contributors"},{"location":"workflow/reference/release-notes/#n8n01340","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-08-15</p>","title":"n8n@0.134.0"},{"location":"workflow/reference/release-notes/#enhanced-nodes_27","text":"<ul> <li>AWS DynamoDB: Added Scan option to Item &gt; Get All operation.</li> <li>Google Drive: Added File Name option to File &gt; Update operation.</li> <li>Mautic: Added the following fields to Company resource: Address, Annual Revenue, Company Email, Custom Fields, Description, Fax, Industry, Number of Employees, Phone, Website.</li> <li>Notion: Added Timezone option when inserting Date fields.</li> <li>Pipedrive: Added the following Filters options to the Deal &gt; Get All operation: Predefined Filter, Stage ID, Status, and User ID.</li> <li>QuickBooks: Added the Transaction resource and Get Report operation.</li> </ul>","title":"Enhanced nodes"},{"location":"workflow/reference/release-notes/#core-functionality_44","text":"<ul> <li>Integrated Nodelinter in Workflow\u00b2.</li> <li>Fix to add a trailing slash (<code>/</code>) to all webhook URLs for proper functionality.</li> </ul>","title":"Core Functionality"},{"location":"workflow/reference/release-notes/#bug-fixes_31","text":"<ul> <li>AWS SES: Fixed issue where special characters in the message were not encoded.</li> <li>Baserow: Fixed issue where Create operation inserted null values.</li> <li>Hubspot: Fixed issue when sending context parameter.</li> </ul>","title":"Bug fixes"},{"location":"workflow/reference/release-notes/#contributors_34","text":"<p>calvintwr, CFarcy, Jeremie Dokime, Michael Hirschler, Rodrigo Correia, sol</p>","title":"Contributors"},{"location":"workflow/reference/release-notes/#n8n01330","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-08-08</p>","title":"n8n@0.133.0"},{"location":"workflow/reference/release-notes/#new-nodes_23","text":"<ul> <li>Monica CRM</li> </ul>","title":"New nodes"},{"location":"workflow/reference/release-notes/#enhanced-nodes_28","text":"<ul> <li>HTTP Request: Added Follow All Redirects option.</li> <li>Salesforce: Added Record Type ID field.</li> </ul>","title":"Enhanced nodes"},{"location":"workflow/reference/release-notes/#core-functionality_45","text":"<ul> <li>Fixed UI lag when editing large workflows.</li> </ul>","title":"Core Functionality"},{"location":"workflow/reference/release-notes/#bug-fixes_32","text":"<ul> <li>Nextcloud: Fixed issue where List operation on an empty Folder returned an error.</li> <li>Spotify: Fixed issues with pagination and infinite executions.</li> </ul>","title":"Bug fixes"},{"location":"workflow/reference/release-notes/#contributors_35","text":"<p>Jacob Burrell, \u041b\u0435\u0431\u0435\u0434\u0435\u0432 \u0418\u0432\u0430\u043d</p>","title":"Contributors"},{"location":"workflow/reference/release-notes/#n8n01322","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-08-02</p>","title":"n8n@0.132.2"},{"location":"workflow/reference/release-notes/#bug-fixes_33","text":"<ul> <li>Interval: Fixed issue with infinite executions.</li> </ul>","title":"Bug fixes"},{"location":"workflow/reference/release-notes/#contributors_36","text":"<p>\u041b\u0435\u0431\u0435\u0434\u0435\u0432 \u0418\u0432\u0430\u043d</p>","title":"Contributors"},{"location":"workflow/reference/release-notes/#n8n01321","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-08-02</p>","title":"n8n@0.132.1"},{"location":"workflow/reference/release-notes/#core-functionality_46","text":"<ul> <li>Changed TypeORM version to 0.2.34</li> </ul>","title":"Core Functionality"},{"location":"workflow/reference/release-notes/#n8n01320","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-08-01</p>","title":"n8n@0.132.0"},{"location":"workflow/reference/release-notes/#new-nodes_24","text":"<ul> <li>Freshworks CRM</li> <li>Google Perspective</li> <li>Marketstack</li> <li>NocoDB</li> </ul>","title":"New nodes"},{"location":"workflow/reference/release-notes/#enhanced-nodes_29","text":"<ul> <li>Facebook Trigger: Added Fields parameter.</li> <li>Gmail: Added Sender Name parameter.</li> <li>Home Assistant: Added Event resource.</li> <li>Pipedrive: Added Deal Product resource.</li> <li>Salesforce: Added Document resource with Upload operation.</li> <li>WooCommerce: Added Customer resource.</li> </ul>","title":"Enhanced nodes"},{"location":"workflow/reference/release-notes/#core-functionality_47","text":"<ul> <li>Fixed an issue for large internal values.</li> </ul>","title":"Core Functionality"},{"location":"workflow/reference/release-notes/#contributors_37","text":"<p>Ed Linklater, Rodrigo Correia</p>","title":"Contributors"},{"location":"workflow/reference/release-notes/#n8n01310","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-07-24</p>  <p>Breaking change</p> <p>Please note that this version contains a breaking change. You can read more about it here. The features that introduced the breaking changes have been flagged below.</p>","title":"n8n@0.131.0"},{"location":"workflow/reference/release-notes/#new-nodes_25","text":"<ul> <li>Webex by Cisco</li> <li>Webex by Cisco Trigger</li> </ul>","title":"New nodes"},{"location":"workflow/reference/release-notes/#enhanced-nodes_30","text":"<ul> <li>Pipedrive: Added Lead resource. Added Search operation to Organization resource.</li> <li>Taiga Trigger: Added Resource and Operations filters.</li> </ul>","title":"Enhanced nodes"},{"location":"workflow/reference/release-notes/#core-functionality_48","text":"<ul> <li>Added Continue-on-fail support to all nodes.</li> <li>Added new version notifications.</li> <li>Added Refresh List for remote options lists.</li> <li>Added <code>$position</code> expression variable to return the index of an item within a list.</li> </ul>","title":"Core Functionality"},{"location":"workflow/reference/release-notes/#bug-fixes_34","text":"<ul> <li>Spreadsheet File: Fixed issue when saving dates.</li> </ul>","title":"Bug fixes"},{"location":"workflow/reference/release-notes/#contributors_38","text":"<p>Anthr@x, Felipe Cecagno</p>","title":"Contributors"},{"location":"workflow/reference/release-notes/#n8n01300","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-07-18</p>  <p>Breaking change</p> <p>Please note that this version contains a breaking change. You can read more about it here. The features that introduced the breaking changes have been flagged below.</p>","title":"n8n@0.130.0"},{"location":"workflow/reference/release-notes/#new-nodes_26","text":"<ul> <li>AWS DynamoDB</li> <li>Elasticsearch</li> <li>ServiceNow</li> </ul>","title":"New nodes"},{"location":"workflow/reference/release-notes/#enhanced-nodes_31","text":"<ul> <li>Kafka Trigger: Added Read Messages From Beginning option.</li> <li>Salesforce: Added Sandbox Environment Type for OAuth2 credentials.</li> <li>Taiga: Added Epic, Task, and User Story operations.</li> <li>TheHive: Added Custom Fields option to the available Additional Fields.</li> </ul>","title":"Enhanced nodes"},{"location":"workflow/reference/release-notes/#core-functionality_49","text":"<ul> <li>Fixed an issue where failed workflows were displayed as \"running\".</li> <li>Fixes issues with uncaught errors.</li> </ul>","title":"Core Functionality"},{"location":"workflow/reference/release-notes/#bug-fixes_35","text":"<ul> <li>Notion: Fixed issue when filtering field data type.</li> </ul>","title":"Bug fixes"},{"location":"workflow/reference/release-notes/#contributors_39","text":"<p>Michael Hirschler, Mika Luhta, Pierre Lanvin</p>","title":"Contributors"},{"location":"workflow/reference/release-notes/#n8n01290","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-07-12</p>","title":"n8n@0.129.0"},{"location":"workflow/reference/release-notes/#new-nodes_27","text":"<ul> <li>Baserow</li> </ul>","title":"New nodes"},{"location":"workflow/reference/release-notes/#bug-fixes_36","text":"<ul> <li>SSH: Fixed issue with access rights when downloading files.</li> </ul>","title":"Bug fixes"},{"location":"workflow/reference/release-notes/#contributors_40","text":"<p>J\u00e9r\u00e9mie Pardou-Piquemal</p>","title":"Contributors"},{"location":"workflow/reference/release-notes/#n8n01280","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-07-11</p>","title":"n8n@0.128.0"},{"location":"workflow/reference/release-notes/#new-nodes_28","text":"<ul> <li>Home Assistant</li> <li>Stripe</li> </ul>","title":"New nodes"},{"location":"workflow/reference/release-notes/#enhanced-nodes_32","text":"<ul> <li>HTTP Request: Added support for arrays in Querystring. Any parameter appearing multiple times with the same name is grouped into an array.</li> <li>Mautic: Added Contact Segment resource.</li> <li>Telegram: Added Delete operation to the Message resource.</li> </ul>","title":"Enhanced nodes"},{"location":"workflow/reference/release-notes/#core-functionality_50","text":"<ul> <li>Performance improvement for loading of historical executions (&gt; 3mil) when using Postgres.</li> <li>Fixed error handling for unending workflows and display of \"unknown\" workflow status.</li> <li>Fixed format of Workflow ID when downloading from UI Editor to enable compatibility with importing from CLI.</li> </ul>","title":"Core Functionality"},{"location":"workflow/reference/release-notes/#bug-fixes_37","text":"<ul> <li>Microsoft SQL: Fixed an issue with sending the connectionTimeout parameter, and creating and updating data using columns with spaces.</li> </ul>","title":"Bug fixes"},{"location":"workflow/reference/release-notes/#contributors_41","text":"<p>Kaito Udagawa, Rodrigo Correia</p>","title":"Contributors"},{"location":"workflow/reference/release-notes/#n8n01270","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-07-04</p>  <p>Breaking change</p> <p>Please note that this version contains a breaking change. You can read more about it here. The features that introduced the breaking changes have been flagged below.</p>","title":"n8n@0.127.0"},{"location":"workflow/reference/release-notes/#enhanced-nodes_33","text":"<ul> <li>Airtable: Added Bulk Size option to all Operations.</li> <li>Box: Added Share operation to File and Folder resources.</li> <li>Salesforce: Added Last Name field to Update operation on Contact resource.</li> <li>Zoho CRM: Added Account, Contact, Deal, Invoice, Product, Purchase, Quote, Sales Order, and Vendor resources.</li> </ul>","title":"Enhanced nodes"},{"location":"workflow/reference/release-notes/#core-functionality_51","text":"<ul> <li>Added a workflow testing framework via a new CLI command to execute all desired workflows. Run <code>n8n executeBatch --help</code> for details.</li> <li>Added support to display binary video content in Editor UI.</li> </ul>","title":"Core Functionality"},{"location":"workflow/reference/release-notes/#bug-fixes_38","text":"<ul> <li>Google Sheets: Fixed an issue with handling 0 value that resulted in empty cells.</li> <li>SSH: Fixed an issue with setting passphrases.</li> </ul>","title":"Bug fixes"},{"location":"workflow/reference/release-notes/#contributors_42","text":"<p>flybluewolf, Kaito Udagawa</p>","title":"Contributors"},{"location":"workflow/reference/release-notes/#n8n01261","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-06-29</p>","title":"n8n@0.126.1"},{"location":"workflow/reference/release-notes/#core-functionality_52","text":"<ul> <li>Fixed issues with keyboard shortcuts when a modal was open.</li> </ul>","title":"Core Functionality"},{"location":"workflow/reference/release-notes/#bug-fixes_39","text":"<ul> <li>Microsoft SQL: Fixed an issue with handling of Boolean values when inserting.</li> <li>Pipedrive: Fixed an issue with the node icon.</li> </ul>","title":"Bug fixes"},{"location":"workflow/reference/release-notes/#n8n01260","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-06-27</p>","title":"n8n@0.126.0"},{"location":"workflow/reference/release-notes/#new-nodes_29","text":"<ul> <li>Action Network</li> <li>Google Docs</li> </ul>","title":"New nodes"},{"location":"workflow/reference/release-notes/#enhanced-nodes_34","text":"<ul> <li>AWS S3: Added Delete operation to the Bucket Resource.</li> <li>Google Analytics: Added Dimension Filters to the available Additional Fields.</li> <li>HTTP Request: Added Split Into Items option.</li> <li>MQTT: Added mqqts protocol for MQTT credentials.</li> <li>QuickBooks: Added Purchase resource with Get and Get All operations.</li> </ul>","title":"Enhanced nodes"},{"location":"workflow/reference/release-notes/#core-functionality_53","text":"<ul> <li>Templates from the n8n Workflows page can now be directly imported by appending <code>/workflows/templates/&lt;templateId&gt;</code> to your instance base URL. For example, <code>localhost:5678/workflows/templates/1142</code>.</li> <li>Added new Editor UI shortcuts. See Keyboard Shortcuts for details.</li> <li>Fixed an issue causing console errors when deleting a node from the canvas.</li> </ul>","title":"Core Functionality"},{"location":"workflow/reference/release-notes/#bug-fixes_40","text":"<ul> <li>Ghost: Fixed an issue with the Get All operation functionality.</li> <li>Google Analytics: Fixed an issue that caused an error when attempting to sort with no data present.</li> <li>Microsoft SQL: Fixed an issue when escaping single quotes and mapping empty fields.</li> <li>Notion: Fixed an issue with pagination of databases and users.</li> </ul>","title":"Bug fixes"},{"location":"workflow/reference/release-notes/#contributors_43","text":"<p>calvintwr, Jan Baykara</p>","title":"Contributors"},{"location":"workflow/reference/release-notes/#n8n01250","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-06-20</p>","title":"n8n@0.125.0"},{"location":"workflow/reference/release-notes/#enhanced-nodes_35","text":"<ul> <li>Spotify: Added Search operation to Album, Artist, Playlist, and Track resources, and Resume and Volume operations to Player resource.</li> </ul>","title":"Enhanced nodes"},{"location":"workflow/reference/release-notes/#core-functionality_54","text":"<ul> <li>Implemented new design of the Nodes Panel, adding categories and subcategories, along with improved search. For full details, see the commits.</li> </ul>","title":"Core Functionality"},{"location":"workflow/reference/release-notes/#bug-fixes_41","text":"<ul> <li>MySQL: Fixed an issue where Doc\u00b2 was unable to save data due to collation, resulting in workflows ending with Unknown status.</li> </ul>","title":"Bug fixes"},{"location":"workflow/reference/release-notes/#contributors_44","text":"<p>Amudhan Manivasagam, Carlos Alexandro Becker, Kaito Udagawa</p>","title":"Contributors"},{"location":"workflow/reference/release-notes/#n8n01241","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-06-16</p>","title":"n8n@0.124.1"},{"location":"workflow/reference/release-notes/#core-functionality_55","text":"<ul> <li>Improved error log messages</li> <li>Fixed an issue where the tags got removed when deactivating the workflow or updating settings</li> <li>Removed the circular references for the error caused by the request library</li> </ul>","title":"Core Functionality"},{"location":"workflow/reference/release-notes/#n8n01240","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-06-13</p>","title":"n8n@0.124.0"},{"location":"workflow/reference/release-notes/#enhanced-nodes_36","text":"<ul> <li>Google Drive: Added APP Properties and Properties options to the Upload operation of the File resource</li> <li>HTTP Request: Added the functionlaity to log the request to the browser console for testing</li> <li>Notion: Added the Include Time parameter date field types</li> <li>Salesforce: Added Upsert operation to Account, Contact, Custom Object, Lead, and Opportunity resources</li> <li>Todoist: Added the Description option to the Task resource</li> </ul>","title":"Enhanced nodes"},{"location":"workflow/reference/release-notes/#core-functionality_56","text":"<ul> <li>Implemented the functionality to display the error details in a toast message for trigger nodes</li> <li>Improved error handling by removing circular references from API errors</li> </ul>","title":"Core Functionality"},{"location":"workflow/reference/release-notes/#bug-fixes_42","text":"<ul> <li>Jira: Fixed an issues with the API version and fixed an issue with fetching the custom fields for the Issue resource</li> </ul>","title":"Bug fixes"},{"location":"workflow/reference/release-notes/#contributors_45","text":"<p>Jean M, romaincolombo-daily, Thomas Jost, Vincent</p>","title":"Contributors"},{"location":"workflow/reference/release-notes/#n8n01231","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-06-06</p>","title":"n8n@0.123.1"},{"location":"workflow/reference/release-notes/#core-functionality_57","text":"<ul> <li>Fixed a build issue for missing node icons</li> </ul>","title":"Core Functionality"},{"location":"workflow/reference/release-notes/#n8n01230","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-06-06</p>","title":"n8n@0.123.0"},{"location":"workflow/reference/release-notes/#new-nodes_30","text":"<ul> <li>Git</li> <li>Microsoft To Do</li> </ul>","title":"New nodes"},{"location":"workflow/reference/release-notes/#enhanced-nodes_37","text":"<ul> <li>Pipedrive: Added a feature to fetch data from the Pipedrive API, added Search operation to the Deals resource, and added custom fields option</li> <li>Spotify: Added My Data resource</li> </ul>","title":"Enhanced nodes"},{"location":"workflow/reference/release-notes/#core-functionality_58","text":"<ul> <li>Fixed issues with NodeViewNew navigation handling</li> <li>Fixed an issue with the view crashing with large requests</li> </ul>","title":"Core Functionality"},{"location":"workflow/reference/release-notes/#bug-fixes_43","text":"<ul> <li>ASW Transcribe: Fixed issues with options</li> </ul>","title":"Bug fixes"},{"location":"workflow/reference/release-notes/#contributors_46","text":"<p>Rodrigo Correia, Sam Roquitte</p>","title":"Contributors"},{"location":"workflow/reference/release-notes/#n8n01223","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-06-04</p>","title":"n8n@0.122.3"},{"location":"workflow/reference/release-notes/#core-functionality_59","text":"<ul> <li>Fixed error messages for the Textarea field</li> <li>Added the missing winston dependency</li> <li>Fixed an issue with adding values via the Variable selector. The deleted values don't reappear</li> <li>Fixed an issue with the Error Workflows not getting executed in the queue mode</li> </ul>","title":"Core Functionality"},{"location":"workflow/reference/release-notes/#bug-fixes_44","text":"<ul> <li>Notion: Fixed an issue with parsing the last edited time</li> </ul>","title":"Bug fixes"},{"location":"workflow/reference/release-notes/#n8n01222","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-05-31</p>","title":"n8n@0.122.2"},{"location":"workflow/reference/release-notes/#enhanced-nodes_38","text":"<ul> <li>Function: Added console.log support for writing to browser console</li> <li>Function Item: Added console.log support for writing to browser console</li> </ul>","title":"Enhanced nodes"},{"location":"workflow/reference/release-notes/#core-functionality_60","text":"<ul> <li>Fixed an issue that enables clicks on tags</li> <li>Fixed an issue with escaping workflow name</li> <li>Fixed an issue with selecting variables in the Expression Editor</li> </ul>","title":"Core Functionality"},{"location":"workflow/reference/release-notes/#n8n01221","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-05-30</p>","title":"n8n@0.122.1"},{"location":"workflow/reference/release-notes/#core-functionality_61","text":"<ul> <li>Fixed an issue with the order in migration rollback</li> </ul>","title":"Core Functionality"},{"location":"workflow/reference/release-notes/#n8n01220","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-05-30</p>","title":"n8n@0.122.0"},{"location":"workflow/reference/release-notes/#new-nodes_31","text":"<ul> <li>AWS Transcribe</li> <li>SSH</li> <li>UptimeRobot</li> </ul>","title":"New nodes"},{"location":"workflow/reference/release-notes/#enhanced-nodes_39","text":"<ul> <li>DeepL: Added support for Free API</li> <li>Function: Added the functionality to log console.log messages to the browser console</li> <li>Function Item: Added the functionality to log console.log messages to the browser console</li> </ul>","title":"Enhanced nodes"},{"location":"workflow/reference/release-notes/#core-functionality_62","text":"<ul> <li>Changed <code>bcrypt</code> library from <code>@node-rs/bcrypt</code> to <code>bcryptjs</code></li> <li>Fixed an issue with optional parameters that have the same name</li> <li>Added the functionality to tag workflows</li> <li>Fixed errors in the Expression Editor</li> <li>Fixed an issue with nodes that only get connected to the second input. This solves the issue of copying and pasting the workflows where only one output of the IF node gets connected to a node</li> </ul>","title":"Core Functionality"},{"location":"workflow/reference/release-notes/#bug-fixes_45","text":"<ul> <li>Google Drive: Fixed an issue with the Drive resource</li> <li>Notion: Fixed an issue with the filtering fields type and fixed an issue with the link option</li> <li>Switch: Fixed an issue with the Expression mode</li> </ul>","title":"Bug fixes"},{"location":"workflow/reference/release-notes/#contributors_47","text":"<p>Alexander Mustafin</p>","title":"Contributors"},{"location":"workflow/reference/release-notes/#n8n01211","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-06-01</p>","title":"n8n@0.121.1"},{"location":"workflow/reference/release-notes/#core-functionality_63","text":"<ul> <li>Fixed an issue with copying the output values</li> <li>Fixed issues with the Expression Editor</li> <li>Made improvements to the Expression Editor</li> </ul>","title":"Core Functionality"},{"location":"workflow/reference/release-notes/#n8n01210","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-05-20</p>","title":"n8n@0.121.0"},{"location":"workflow/reference/release-notes/#new-nodes_32","text":"<ul> <li>Notion</li> <li>Notion Trigger</li> </ul>","title":"New nodes"},{"location":"workflow/reference/release-notes/#enhanced-nodes_40","text":"<ul> <li>GraphQL: Added Header Auth authentication method</li> <li>Twilio: Added API Key authentication method</li> </ul>","title":"Enhanced nodes"},{"location":"workflow/reference/release-notes/#bug-fixes_46","text":"<ul> <li>HubSpot: Fixed an issue with pagination for Deals resource</li> <li>Keap: Fixed an issue with the data type of the Order Title field</li> <li>Orbit: Fixed an issue with the activity type in Post operation</li> <li>Slack: Fixed an issue with the Get Profile operation</li> <li>Strava: Fixed an issue with the paging parameter</li> </ul>","title":"Bug fixes"},{"location":"workflow/reference/release-notes/#contributors_48","text":"<p>Jacob Spizziri</p>","title":"Contributors"},{"location":"workflow/reference/release-notes/#n8n01200","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-05-17</p>","title":"n8n@0.120.0"},{"location":"workflow/reference/release-notes/#new-nodes_33","text":"<ul> <li>iCalendar</li> </ul>","title":"New nodes"},{"location":"workflow/reference/release-notes/#enhanced-nodes_41","text":"<ul> <li>Google Cloud Firestore: Added the functionality for GeoPoint parsing and added ISO-8601 format for date validation</li> <li>IMAP Email: Added the Force reconnect option</li> <li>Paddle: Added the Use Sandbox environment API parameter</li> <li>Spotify: Added the Position parameter to the Add operation of the Playlist resource</li> <li>WooCommerce: Added the Include Credentials in Query parameter</li> </ul>","title":"Enhanced nodes"},{"location":"workflow/reference/release-notes/#core-functionality_64","text":"<ul> <li>Added await to hooks to fix issues with the <code>Unknown</code> status of the workflows</li> <li>Changed the data type of the <code>credentials_entity</code> field for MySQL database to fix issues with long credentials</li> <li>Fixed an issue with the ordering of the executions when the list is auto-refreshed</li> <li>Added the functionality that allows reading sibling parameters</li> </ul>","title":"Core Functionality"},{"location":"workflow/reference/release-notes/#bug-fixes_47","text":"<ul> <li>Clockify Trigger: Fixed an issue that occurred when the node returned an empty array</li> <li>Google Cloud Firestore: Fixed an issue with parsing empty document, and an issue with the detection of date</li> <li>HubSpot: Fixed an issue with the Return All option</li> </ul>","title":"Bug fixes"},{"location":"workflow/reference/release-notes/#contributors_49","text":"<p>DeskYT, Daniel Lazaro, DerEnderKeks, mdasmendel</p>","title":"Contributors"},{"location":"workflow/reference/release-notes/#n8n01190","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-05-09</p>","title":"n8n@0.119.0"},{"location":"workflow/reference/release-notes/#enhanced-nodes_42","text":"<ul> <li>AWS Comprehend: Added the Detect Entities operation</li> <li>AWS Lambda: Added the ability to list functions recursively if the number of functions exceeds 50</li> <li>Google Analytics: Added pagination to the Report resource</li> <li>Mailjet: Added Reply To parameter</li> <li>Redis: Added the Increment operation</li> <li>Spreadsheet File: Added the Header Row option</li> <li>Webflow Trigger: Added Collection Item Created, Collection Item Updated, and Collection Item Deleted events</li> </ul>","title":"Enhanced nodes"},{"location":"workflow/reference/release-notes/#core-functionality_65","text":"<ul> <li>Implemented timeout for subworkflows</li> <li>Removed the deregistration webhooks functionality from the webhook process</li> </ul>","title":"Core Functionality"},{"location":"workflow/reference/release-notes/#bug-fixes_48","text":"<ul> <li>Google Cloud Firestore: Fixed an issue with parsing null value</li> <li>Google Sheets: Fixed an issue with the Key Row parameter</li> <li>HubSpot: Fixed an issue with the authentication</li> </ul>","title":"Bug fixes"},{"location":"workflow/reference/release-notes/#contributors_50","text":"<p>Nikita</p>","title":"Contributors"},{"location":"workflow/reference/release-notes/#n8n01181","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-05-05</p>","title":"n8n@0.118.1"},{"location":"workflow/reference/release-notes/#core-functionality_66","text":"<ul> <li>Fixed an issue with error workflows</li> </ul>","title":"Core Functionality"},{"location":"workflow/reference/release-notes/#n8n01180","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-05-02</p>  <p>Breaking change</p> <p>Please note that this version contains a breaking change. You can read more about it here. The features that introduced the breaking changes have been flagged below.</p>","title":"n8n@0.118.0"},{"location":"workflow/reference/release-notes/#new-nodes_34","text":"<ul> <li>Kitemaker</li> <li>MQTT</li> </ul>","title":"New nodes"},{"location":"workflow/reference/release-notes/#enhanced-nodes_43","text":"<ul> <li>CrateDB: Added query parameters. The Execute Query operation returns the result from all queries executed instead of just one of the results.</li> <li>ERPNext: Added support for self-hosted ERPNext instances</li> <li>FTP: Added the functionality to delete folders</li> <li>Google Calendar: Added the Continue on Fail functionality</li> <li>Google Drive: Added the functionality to add file name when downloading files</li> <li>Gmail: Added functionality to handle multiple binary properties</li> <li>Microsoft Outlook: Added Is Read and Move option to the Message resource</li> <li>Postgres: Added query parameters. The Execute Query operation returns the result from all queries executed instead of just one of the results.</li> <li>QuestDB: Added query parameters. The Execute Query operation returns the result from all queries executed instead of just one of the results.</li> <li>QuickBase: Added option to use Field IDs</li> <li>TimescaleDB: Added query parameters. The Execute Query operation returns the result from all queries executed instead of just one of the results.</li> <li>Twist: Added Get, Get All, Delete, and Update operations to the Message Conversation resource. Added Archive, Unarchive, and Delete operations to the Channel resource. Added Thread and Comment resource</li> </ul>","title":"Enhanced nodes"},{"location":"workflow/reference/release-notes/#core-functionality_67","text":"<ul> <li>Implemented the native <code>fs/promise</code> library where possible</li> <li>Added the functionality to output logs to the console or a file</li> <li>We have updated the minimum required version for Node.js to v14.15. For more details, check out the entry in the breaking changes page</li> </ul>","title":"Core Functionality"},{"location":"workflow/reference/release-notes/#bug-fixes_49","text":"<ul> <li>GetResponse Trigger: Fixed an issue with error handling</li> <li>GitHub Trigger: Fixed an issue with error handling</li> <li>GitLab Trigger: Fixed an issue with error handling</li> <li>Google Sheets: Fixed an issue with the Lookup operation for returning empty rows</li> <li>Orbit: Fixed issues with the Post resource</li> <li>Redis: Fixed an issue with the node not returning an error</li> <li>Xero: Fixed an issue with the Create operation for the Contact resource</li> </ul>","title":"Bug fixes"},{"location":"workflow/reference/release-notes/#contributors_51","text":"<p>Gustavo Arjones, lublak, Colton Anglin, Mika Luhta</p>","title":"Contributors"},{"location":"workflow/reference/release-notes/#n8n01170","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-04-24</p>  <p>Breaking change</p> <p>Please note that this version contains a breaking change. You can read more about it here. The features that introduced the breaking changes have been flagged below.</p>","title":"n8n@0.117.0"},{"location":"workflow/reference/release-notes/#new-nodes_35","text":"<ul> <li>Mailcheck</li> <li>n8n Trigger</li> <li>Workflow Trigger</li> </ul>","title":"New nodes"},{"location":"workflow/reference/release-notes/#enhanced-nodes_44","text":"<ul> <li>CrateDB: Added the Mode option that allows you to execute queries as transactions</li> <li>Nextcloud: Added Delete, Get, Get All, and Update operation to the User resource</li> <li>Postgres: Added the Mode option that allows you to execute queries as transactions</li> <li>QuestDB: Added the Mode option that allows you to execute queries as transactions</li> <li>Salesforce: Added Owner option to the Case and Lead resources. Added custom fields to Create and Update operations of the Case resource</li> <li>Sentry.io: Added Delete and Update operations to Project, Release, and Team resources</li> <li>TimescaleDB: Added the Mode option that allows you to execute queries as transactions</li> <li>Zendesk Trigger: Added support to retrieve custom fields</li> </ul>","title":"Enhanced nodes"},{"location":"workflow/reference/release-notes/#core-functionality_68","text":"<ul> <li>The Activation Trigger node has been deprecated. It has been replaced by two new nodes - the Doc\u00b2 Trigger and the Workflow Trigger node. For more details, check out the entry in the breaking changes page</li> <li>Added the functionality to open the New Credentials dropdown by default</li> </ul>","title":"Core Functionality"},{"location":"workflow/reference/release-notes/#bug-fixes_50","text":"<ul> <li>Google Sheets: Fixed an issue with the Lookup operation for returning multiple empty rows</li> <li>Intercom: Fixed an issue with the User operation in the Company resource</li> <li>Mautic: Fixed an issue with sending the lastActive parameter</li> </ul>","title":"Bug fixes"},{"location":"workflow/reference/release-notes/#contributors_52","text":"<p>Bart Vollebregt, Ivan Timoshenko, Konstantin Nosov, lublak, Umair Kamran,</p>","title":"Contributors"},{"location":"workflow/reference/release-notes/#n8n01161","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-04-20</p>","title":"n8n@0.116.1"},{"location":"workflow/reference/release-notes/#core-functionality_69","text":"<ul> <li>Fixed a timeout issue with the workflows in the main process</li> </ul>","title":"Core Functionality"},{"location":"workflow/reference/release-notes/#n8n01160","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-04-17</p>","title":"n8n@0.116.0"},{"location":"workflow/reference/release-notes/#new-nodes_36","text":"<ul> <li>Google BigQuery</li> <li>Webflow</li> </ul>","title":"New nodes"},{"location":"workflow/reference/release-notes/#enhanced-nodes_45","text":"<ul> <li>Date &amp; Time: Added Calculate a Date action that allows you to add or subtract time from a date</li> <li>GitLab: Added Get, Get All, Update, and Delete operations to the Release resource</li> <li>Microsoft OneDrive: Added Delete operation to the Folder resource</li> <li>Monday: Added support for OAuth2 authentication</li> <li>MongoDB: Added Limit, Skip, and Sort options to the Find operation and added Upsert parameter to the Update operation. Added the functionality to close the connection after use</li> <li>MySQL: Added support for insert modifiers and added support for SSL</li> <li>RabbitMQ: Added the functionality to close the connection after use and added support for AMPQS</li> </ul>","title":"Enhanced nodes"},{"location":"workflow/reference/release-notes/#core-functionality_70","text":"<ul> <li>Changed <code>bcrypt</code> library from <code>bcryptjs</code> to <code>@node-rs/bcrypt</code></li> <li>Improved node error handling. Status codes and error messages in API responses have been standardized</li> <li>Added global timeout setting for all HTTP requests (except HTTP Request node)</li> <li>Implemented timeout for workers and corrected timeout for sub workflows</li> </ul>","title":"Core Functionality"},{"location":"workflow/reference/release-notes/#bug-fixes_51","text":"<ul> <li>AWS SQS: Fixed an issue with API version and casing</li> <li>IMAP: Fixed re-connection issue</li> <li>Keap: Fixed an issue with the Opt In Reason parameter</li> <li>Salesforce: Fixed an issue with loading custom fields</li> </ul>","title":"Bug fixes"},{"location":"workflow/reference/release-notes/#contributors_53","text":"<p>Allan Daemon, Anton Romanov, Bart Vollebregt, Cassiano Vailati, entrailz, Konstantin Nosov, LongYinan</p>","title":"Contributors"},{"location":"workflow/reference/release-notes/#n8n01150","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-04-10</p>","title":"n8n@0.115.0"},{"location":"workflow/reference/release-notes/#new-nodes_37","text":"<ul> <li>Google Slides</li> </ul>","title":"New nodes"},{"location":"workflow/reference/release-notes/#enhanced-nodes_46","text":"<ul> <li>GitHub: Added Release resource</li> <li>TheHive: Added support to fetch observable data types</li> <li>RabbitMQ: Added header parameters</li> </ul>","title":"Enhanced nodes"},{"location":"workflow/reference/release-notes/#core-functionality_71","text":"<ul> <li>Fixed an issue with expressions not being displayed in read-only mode</li> <li>Fixed an issue that didn't allow editing JavaScript code in read-only mode</li> <li>Added support for configuring the maximum payload size</li> <li>Added support to dynamically add menu items</li> </ul>","title":"Core Functionality"},{"location":"workflow/reference/release-notes/#bug-fixes_52","text":"<ul> <li>Jira: Fixed an issue with loading issue types with classic project type</li> <li>RabbitMQ Trigger: Fixed an issue with the node reusing the same item</li> <li>SendGrid: Fixed an issue with the dynamic field generation</li> </ul>","title":"Bug fixes"},{"location":"workflow/reference/release-notes/#contributors_54","text":"<p>Mika Luhta, Loran, stwonary</p>","title":"Contributors"},{"location":"workflow/reference/release-notes/#n8n01140","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-04-03</p>","title":"n8n@0.114.0"},{"location":"workflow/reference/release-notes/#new-nodes_38","text":"<ul> <li>AWS SQS</li> <li>Copper</li> <li>ERPNext</li> <li>Oura</li> </ul>","title":"New nodes"},{"location":"workflow/reference/release-notes/#enhanced-nodes_47","text":"<ul> <li>Google Drive: Added support for creating folders for shared drives</li> <li>Google Sheets: Added Create and Remove operation to the Sheet resource</li> <li>Harvest: Added Update operation to the Task resource</li> <li>Jira: Added Reporter field to the Issue resource</li> <li>Postgres: Added support for type casting</li> </ul>","title":"Enhanced nodes"},{"location":"workflow/reference/release-notes/#core-functionality_72","text":"<ul> <li>Fixed an issue with the Redis connection to prevent memory leaks</li> </ul>","title":"Core Functionality"},{"location":"workflow/reference/release-notes/#bug-fixes_53","text":"<ul> <li>Bitwarden: Fixed an issue with the Update operation of the Group resource</li> <li>Cortex: Fixed an issue where only the last item got returned</li> <li>Invoice Ninja: Fixed an issue with the Project parameter</li> <li>Salesforce: Fixed an issue with the Get All operation of the Custom Object resource</li> </ul>","title":"Bug fixes"},{"location":"workflow/reference/release-notes/#contributors_55","text":"<p>Agata M, Allan Daemon, Craig McElroy, mjysci</p>","title":"Contributors"},{"location":"workflow/reference/release-notes/#n8n01130","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-03-26</p> <ul> <li>New nodes</li> <li>Activation Trigger</li> <li>Plivo</li> <li>Enhanced nodes</li> <li>ClickUp: Added Space Tag, Task List, and Task Tag resource</li> <li>GitHub: Added pagination to Get Issues and Get Repositories operations</li> <li>Mattermost: Added Reaction resource and Post Ephemeral operation</li> <li>Move Binary Data: Added Encoding and Add BOM option to JSON to Binary mode and Strip BOM to Binary to JSON mode</li> <li>SendGrid: Added Mail resource</li> <li>Spotify: Added Library resource</li> <li>Telegram: Added Answer Inline Query operation to the Callback resource</li> <li>uProc: Added Get ASIN code by EAN code, Get EAN code by ASIN code, Get Email by Social Profile, Get Email by Fullname and Company's domain, and Get Email by Fullname and Company's name operations</li> <li>Bug fixes</li> <li>Clearbit: Fixed an issue with the autocomplete URI</li> <li>Dropbox: Fixed an issue with the Dropbox credentials by adding the APP Access Type parameter in the credentials. For more details, check out the entry in the breaking changes page</li> <li>Spotify: Fixed an issue with the Delete operation of the Playlist resource</li> <li>The variable selector now displays empty arrays</li> <li>Fixed a permission issue with the Raspberry Pi Docker image</li> </ul>","title":"n8n@0.113.0"},{"location":"workflow/reference/release-notes/#n8n01120","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-03-19</p> <ul> <li>New nodes</li> <li>DeepL</li> <li>Enhanced nodes</li> <li>TheHive: Added Mark as Read and Mark as Unread operations and added Ignore SSL Issues parameter to the credentials</li> <li>Bug fixes</li> <li>AWS SES: Fixed an issue to map CC addresses correctly</li> <li>Salesforce: Fixed an issue with custom object for Get All operations and fixed an issue with the first name field for the Create and Update operations for the Lead resource</li> <li>Strava: Fixed an issue with the access tokens not getting refreshed</li> <li>TheHive: Fixed an issue with the case resolution status</li> <li>Fixed an issue with importing separate decrypted credentials</li> <li>Fixed issues with the sub-workflows not finishing</li> <li>Fixed an issue with the sub-workflows running on the main process</li> <li>Fixed concurrency issues with sub-workflows</li> </ul>","title":"n8n@0.112.0"},{"location":"workflow/reference/release-notes/#n8n01110","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-03-12</p> <ul> <li>New nodes</li> <li>Autopilot</li> <li>Autopilot Trigger</li> <li>Wise</li> <li>Wise Trigger</li> <li>Enhanced nodes</li> <li>Box: Added Get operation to the Folder resource</li> <li>Dropbox: Added Search operation to the File resource. All operations are now performed relative to the user's root directory. For more details, check out the entry in the breaking changes page</li> <li>Facebook Graph API: Added new API versions</li> <li>Google Drive: Added Update operation to the File resource</li> <li>HubSpot: Added the Deal Description option</li> <li>Kafka: Added the SASL mechanism</li> <li>Monday.com: Added Move operation to Board Item resource</li> <li>MongoDB: Added Date field to the Insert and Update operations</li> <li>Micrsoft SQL: Added connection timeout parameter to credentials</li> <li>Salesforce: Added Mobile Phone field to the Lead resource</li> <li>Spotify: Added Create a Playlist operation to Playlist resource and Get New Releases to the Album resource</li> <li>Bug fixes</li> <li>Airtable: Fixed a bug with updating and deleting records</li> <li>Added the functionality to expose metrics to Prometheus. Read more about that here</li> <li>Updated fallback values to match the value type</li> <li>Added the functionality to display debugging information for pending workflows on exit</li> <li>Fixed an issue with queue mode for the executions that should not be saved</li> <li>Fixed an issue with workflows crashing and displaying <code>Unknown</code> status in the execution list</li> <li>Fixed an issue to prevent crashing while saving execution data when the <code>data</code> field has over 64KB in MySQL</li> <li>Updated <code>jws-rsa</code> to version <code>1.12.1</code></li> </ul>","title":"n8n@0.111.0"},{"location":"workflow/reference/release-notes/#n8n01103","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-03-04</p> <ul> <li>Bug fixes</li> <li>APITemplate.io: Fixed an issue with the naming of the node</li> </ul>","title":"n8n@0.110.3"},{"location":"workflow/reference/release-notes/#n8n01100","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-03-04</p> <ul> <li>New nodes</li> <li>APITemplate.io</li> <li>Bubble</li> <li>Lemlist</li> <li>Lemlist Trigger</li> <li>Enhanced nodes</li> <li>Microsoft Teams: Added option to reply to a message</li> <li>Bug fixes</li> <li>Dropbox: Fixed an issue with parsing the response with the Upload operation</li> <li>Gmail: Fixed an issue with the scope for the Service Account authentication method and fixed an issue with the label filter</li> <li>Google Drive: Fixed an issue with the missing Parent ID field for the Create operation and fixed an issue with the Permissions field</li> <li>HelpScout: Fixed an issue with sending tags when creating a conversation</li> <li>HTTP Request: Fixed an issue with the raw data and file response</li> <li>HubSpot: Fixed an issue with the OAuth2 credentials</li> <li>Added support for Date &amp; Time in the IF node and the Switch node</li> <li>Fixed an issue with mouse selection when zooming in or out</li> <li>Fixed an issue with current executing workflows when using queues for Postgres</li> <li>Fixed naming and description for the <code>N8N_SKIP_WEBHOOK_DEREGISTRATION_SHUTDOWN</code> environment variable</li> <li>Fixed an issue with auto-refresh of the execution list</li> </ul>","title":"n8n@0.110.0"},{"location":"workflow/reference/release-notes/#n8n01090","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-02-22</p> <ul> <li>New nodes</li> <li>Bitwarden</li> <li>Emelia</li> <li>Emelia Trigger</li> <li>GoToWebinar</li> <li>Raindrop</li> <li>Enhanced nodes</li> <li>AWS Rekognition: Added the Detect Text type to the Ananlyze operation for the Image resource</li> <li>Google Calendar: Added RRULE parameter to the Get All operation for the Event resource</li> <li>Jira: Added User resource and operations</li> <li>Reddit: Added the Search operation for the Post resource</li> <li>Telegram: Added the Send Location operation</li> <li>Bug fixes</li> <li>RocketChat: Fixed error responses</li> <li>Fixed the issue which caused the execution history of subworkflows (workflows started via the Execute Workflow node) not to be saved</li> <li>Added an option to export the credential data in plain text format using the CLI</li> </ul>","title":"n8n@0.109.0"},{"location":"workflow/reference/release-notes/#n8n01080","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-02-15</p> <ul> <li>New nodes</li> <li>Demio</li> <li>PostHog</li> <li>QuickBooks</li> <li>Enhanced nodes</li> <li>Trello: Added Create Checklist Item operation to the Checklist resource</li> <li>Webhook: Removed trailing slash in routes and updated logic to select dynamic webhook</li> <li>Bug fixes</li> <li>Google Drive: Fixed an issue with returning the fields the user selects for the Folder and File resources</li> <li>Twitter: Fixed a typo in the description</li> <li>Webhook: Fixed logic for static route matching</li> <li>Added the functionality to sort the values that you add in the IF node, Rename node, and the Set node</li> <li>Added the functionality to optionally save execution data after each node</li> <li>Added queue mode to scale workflow execution</li> <li>Separated webhook from the core to scale webhook separately</li> <li>Fixed an issue with current execution query for unsaved running workflows</li> <li>Fixed an issue with the regex that detected node names</li> <li>Doc\u00b2 now generates a unified execution ID instead of two separate IDs for currently running and saved executions</li> </ul>","title":"n8n@0.108.0"},{"location":"workflow/reference/release-notes/#n8n01070","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-02-08</p> <ul> <li>New nodes</li> <li>AWS Comprehend</li> <li>GetResponse Trigger</li> <li>Peekalink</li> <li>Stackby</li> <li>Enhanced nodes</li> <li>AWS SES: Added Custom Verification Email resource</li> <li>Microsoft Teams: Added Task resource</li> <li>Twitter: Added Delete operation to the Tweet resource</li> <li>Bug fixes</li> <li>Google Drive: Fixed an issue with the Delete and Share operations</li> <li>Filemaker: Fixed an issue with the script list parsing</li> <li>Updated Node.js version of Docker images to <code>14.15</code></li> <li>Added a shortcut <code>CTRL + scroll</code> to zoom</li> </ul>","title":"n8n@0.107.0"},{"location":"workflow/reference/release-notes/#n8n01060","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-02-05</p> <ul> <li>New nodes</li> <li>Reddit</li> <li>Tapfiliate</li> <li>Enhanced nodes</li> <li>Airtable Trigger: Added Download Attachment option</li> <li>HubSpot: Added Custom Properties option to the Create and Update operations of the Company resource</li> <li>MySQL: Added Connection Timeout parameter to the credentials</li> <li>Telegram: Added Pin Chat Message and Unpin Chat Message operations for the Message resource</li> <li>Bug fixes</li> <li>Typeform: Fixed an issue with the OAuth2 authentication method</li> <li>Added support for <code>s</code> and <code>u</code> flags for regex in the IF node and the Switch node</li> </ul>","title":"n8n@0.106.0"},{"location":"workflow/reference/release-notes/#n8n01050","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-02-01</p> <ul> <li>New nodes</li> <li>Discourse</li> <li>SecurityScorecard</li> <li>TimescaleDB</li> <li>Enhanced nodes</li> <li>Affinity: Added List and List Entry resource</li> <li>Asana: Added Project IDs option to the Create operation of the Task resource</li> <li>Hubspot Trigger: Added support for multiple subscriptions</li> <li>Jira: Added Issue Attachment resource and added custom fields to Create and Update operations of the Issue resource</li> <li>Todoist: Added Section option</li> <li>Bug fixes</li> <li>SIGNL4: Fixed an issue with the attachment functionality</li> <li>Added variable <code>$mode</code> to check the mode in which the workflow is being executed</li> </ul>","title":"n8n@0.105.0"},{"location":"workflow/reference/release-notes/#n8n01042","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-01-27</p> <ul> <li>Fixed an issue with the credentials parameters that have the same name</li> </ul>","title":"n8n@0.104.2"},{"location":"workflow/reference/release-notes/#n8n01041","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-01-26</p> <ul> <li>Fixed a bug with expressions in credentials</li> </ul>","title":"n8n@0.104.1"},{"location":"workflow/reference/release-notes/#n8n01040","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-01-26</p> <ul> <li>New nodes</li> <li>Compression</li> <li>Enhanced nodes</li> <li>GitHub: Added Invite operation to the User resource</li> <li>EmailReadImap: Increased the authentication timeout</li> <li>Mautic: Added Custom Fields option to the Create and Update operations of the Contact resource. Also, the Mautic OAuth credentials have been updated. Now you don't have to enter the Authorization URL and the Access Token URL</li> <li>Nextcloud: Added User resource</li> <li>Slack: Added Get Permalink and Delete operations to the Message resource</li> <li>Webhook: Added support for request parameters in webhook paths</li> <li>Bug fixes</li> <li>Google Drive: Fixed the default value for the Send Notification Email option</li> <li>Added support for expressions to credentials</li> <li>Removed support for MongoDB as a database for Workflow\u00b2. For more details, check out the entry in the breaking changes page</li> </ul>","title":"n8n@0.104.0"},{"location":"workflow/reference/release-notes/#n8n01031","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-01-21</p> <ul> <li>Bug fixes</li> <li>Trello: Fixed the icon</li> </ul>","title":"n8n@0.103.1"},{"location":"workflow/reference/release-notes/#n8n01030","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-01-21</p> <ul> <li>New nodes</li> <li>SendGrid</li> <li>Enhanced nodes</li> <li>AMQP: Added Container ID, Reconnect, and Reconnect limit options</li> <li>AMQP Trigger: Added Container ID, Reconnect, and Reconnect Limit options</li> <li>GitHub: Added Review resource</li> <li>Google Drive: Added Drive resource</li> <li>Trello: Added Get All and Get Cards operation to the List resource</li> <li>Bug fixes</li> <li>AWS Lambda: Fixed an issue with signature</li> <li>AWS SNS: Fixed an issue with signature</li> <li>Fixed an issue with nodes not executing if two input gets passed and one of them didn't return any data</li> <li>The code editor does not get closed when clicked anywhere outside the editor</li> <li>Added CLI commands to export and import credentials and workflows</li> <li>The title in the browser tab now resets for new workflows</li> </ul>","title":"n8n@0.103.0"},{"location":"workflow/reference/release-notes/#n8n01020","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-01-15</p> <ul> <li>New nodes</li> <li>Beeminder</li> <li>Enhanced nodes</li> <li>Crypto: Added hash type <code>SHA384</code></li> <li>Google Books: Added support for user impersonification</li> <li>Google Drive: Added support for user impersonification</li> <li>Google Sheets: Added support for user impersonification</li> <li>Gmail: Added support for user impersonification</li> <li>Microsoft Outlook: Added support for a shared mailbox</li> <li>RabbitMQ: Added Exchange mode</li> <li>Salesforce: Added filters to all Get All operations</li> <li>Slack: Made changes to the properties <code>As User</code> and <code>Ephemeral</code>. For more details, check out the entry in the breaking changes page</li> <li>Typeform Trigger: The node now displays the recall information in the question in square brackets. For more details, check out the entry in the breaking changes page</li> <li>Zendesk: Removed the <code>Authorization URL</code> and <code>Access Token URL</code> fields from the OAuth2 credentials. The node now uses the subdomain passed by a user to connect to Zendesk.</li> <li>Bug fixes</li> <li>CoinGecko: Fixed an issue to process multiple input items correctly</li> </ul>","title":"n8n@0.102.0"},{"location":"workflow/reference/release-notes/#n8n01010","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2021-01-07</p> <ul> <li>New nodes</li> <li>Google Analytics</li> <li>Phantombuster</li> <li>Enhanced nodes</li> <li>AWS: Added support for custom endpoints</li> <li>Gmail: Added an option to send messages formatted as HTML</li> <li>Philips Hue: Added Room/Group name to Light name to make it easier to identify lights</li> <li>Slack: Added ephemeral message option</li> <li>Telegram: Removed the Bot resource as the endpoint is no longer supported</li> <li>Bug fixes</li> <li>E-goi: Fixed the name of the node</li> <li>Edit Image: Fixed an issue with the Border operation</li> <li>HTTP Request: Fixed batch sizing to work when <code>batchSize = 1</code></li> <li>PayPal: Fixed a typo in the Environment field</li> <li>Split In Batches: Fixed a typo in the description</li> <li>Telegram: Fixed an issue with the Send Audio operation</li> <li>Based on your settings, vacuum runs on SQLite on startup</li> <li>Updated axios to version <code>0.21.1</code></li> </ul>","title":"n8n@0.101.0"},{"location":"workflow/reference/release-notes/#n8n01000","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2020-12-30</p> <ul> <li>New nodes</li> <li>Microsoft Outlook</li> <li>Enhanced nodes</li> <li>ActiveCampaign: The node loads more options for the fields</li> <li>Asana: Added Subtask resource and Get All operation for the Task resource</li> <li>Edit Image: Added Multi Step operation</li> <li>HTTP Request: Added Use Querystring option</li> <li>IF: Added Ends With and Starts With operations</li> <li>Jira: Added Issue Comment resource</li> <li>Switch: Added Ends With and Starts With operations</li> <li>Telegram: Added File resource</li> <li>Bug fixes</li> <li>Box Trigger: Fixed a typo in the description</li> <li>Edit Image: Fixed an issue with multiple composite operations</li> <li>HTTP Request: Fixed an issue with the binary data getting used by multiple nodes</li> <li>S3: Fixed an issue with uploading files</li> <li>Stripe Trigger: Fixed an issue with the existing webhooks</li> <li>Telegram: Fixed an issue with the Send Audio operation</li> <li>Binary data stays visible if a node gets re-executed</li> </ul>","title":"n8n@0.100.0"},{"location":"workflow/reference/release-notes/#n8n0991","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2020-12-24</p> <ul> <li>Fixed a bug that caused HTML to render in JSON view</li> </ul>","title":"n8n@0.99.1"},{"location":"workflow/reference/release-notes/#n8n0990","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2020-12-24</p> <ul> <li>New nodes</li> <li>e-goi</li> <li>RabbitMQ</li> <li>RabbitMQ Trigger</li> <li>uProc</li> <li>Enhanced nodes</li> <li>ActiveCampaign: Added the functionality to load the tags for a user</li> <li>FTP: Added Delete and Rename operation</li> <li>Google Cloud Firestore: The node now gives the Collection ID in response</li> <li>Iterable: Added User List resource</li> <li>MessageBird: Added Balance resource</li> <li>TheHive Trigger: Added support for the TheHive3 webhook events, and added Log Updated and Log Deleted events</li> <li>Bug fixes</li> <li>Dropbox: Fixed an issue with the OAuth credentials</li> <li>Google Sheets: Fixed an issue with the parameters getting hidden for other operations</li> <li>Added functionality to easily copy the data and the path from the output</li> <li>Fixed an issue with the node getting selected after it was duplicated</li> </ul>","title":"n8n@0.99.0"},{"location":"workflow/reference/release-notes/#n8n0980","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2020-12-16</p> <ul> <li>New nodes</li> <li>Brandfetch</li> <li>Pushcut</li> <li>Pushcut Trigger</li> <li>Enhanced nodes</li> <li>Google Sheets: Added Spreadsheet resource</li> <li>IF: Added Is Empty option</li> <li>Slack: Added Reaction and User resource, and Member operation to the Channel resource</li> <li>Spreadsheet File: Added the option Include Empty Cell to display empty cells</li> <li>Webhook: Added option to send a custom response body. The node can now also return string data</li> <li>Bug fixes</li> <li>GitLab: Fixed an issue with GitLab OAuth credentials. You can now specify your GitLab server to configure the credentials</li> <li>Mautic: Fixed an issue with the OAuth credentials</li> <li>If a workflow is using the Error Trigger node, by default, the workflow will use itself as the Error Workflow</li> <li>Fixed a bug that caused the Editor UI to display an incorrect (save) state upon activating or deactivating a workflow</li> </ul>","title":"n8n@0.98.0"},{"location":"workflow/reference/release-notes/#n8n0970","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2020-12-10</p> <ul> <li>New nodes</li> <li>Ghost</li> <li>Nasa</li> <li>Snowflake</li> <li>Twist</li> <li>Enhanced nodes</li> <li>Automizy: Added options to add and remove tabs for the Update operation of the Contact resource</li> <li>Pipedrive: Added label field to Person, Organization, and Deal resources. Also added Update operation for the Organization resource</li> <li>Bug fixes</li> <li>Fixed a bug that caused OAuth1 requests to break</li> <li>Fixed Docker user mount path</li> </ul>","title":"n8n@0.97.0"},{"location":"workflow/reference/release-notes/#n8n0960","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2020-12-03</p> <ul> <li>New nodes</li> <li>Cortex</li> <li>Iterable</li> <li>Kafka Trigger</li> <li>TheHive</li> <li>TheHive Trigger</li> <li>Yourls</li> <li>Enhanced nodes</li> <li>Hubspot: Added Contact List resource and Search operation for the Deal resource</li> <li>Google Calendar: You can now add multiple attendees in the Attendees field</li> <li>Slack: The node now loads both private and public channels</li> <li>Bug Fixes</li> <li>MQTT: Fixed an issue with the connection. The node now uses <code>mqtt@4.2.1</code></li> <li>Fixed a bug which caused the Trigger-Nodes to require data from the first output</li> <li>Added configuration to load only specific nodes</li> </ul>","title":"n8n@0.96.0"},{"location":"workflow/reference/release-notes/#n8n0951","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2020-11-25</p> <ul> <li>Bug Fixes</li> <li>Airtable Trigger: Fixed the icon of the node</li> </ul>","title":"n8n@0.95.1"},{"location":"workflow/reference/release-notes/#n8n0950","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2020-11-25</p> <ul> <li>New nodes</li> <li>Airtable Trigger</li> <li>LingvaNex</li> <li>OpenThesaurus</li> <li>ProfitWell</li> <li>Quick Base</li> <li>Spontit</li> <li>Enhanced nodes</li> <li>Airable: The Application ID field has been renamed to Base ID, and the Table ID field has been renamed to Table. The List operation now downloads attachments automatically</li> <li>Harvest: Moved the account field from the credentials to the node parameters. For more details, check out the entry in the breaking changes page</li> <li>Bug Fixes</li> <li>Slack: Fixed an issue with creating channels and inviting users to a channel</li> </ul>","title":"n8n@0.95.0"},{"location":"workflow/reference/release-notes/#n8n0941","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2020-11-20</p> <ul> <li>Bug Fixes</li> <li>GraphQL: Fixed an issue with the variables</li> <li>WooCommerce Trigger: Fixed an issue with the webhook. The node now reuses a webhook if it already exists.</li> </ul>","title":"n8n@0.94.1"},{"location":"workflow/reference/release-notes/#n8n0940","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2020-11-19</p> <ul> <li>New nodes</li> <li>Google Cloud Natural Language</li> <li>Google Firebase Cloud Firestore</li> <li>Google Firebase Realtime Database</li> <li>Humantic AI</li> <li>Enhanced nodes</li> <li>ActiveCampaign: Added Contact List and List resource</li> <li>Edit Image: Added support for drawing, font selection, creating a new image, and added the Composite resource</li> <li>FTP: Added Private Key and Passphrase fields to the SFTP credentials and made the directory creation more robust</li> <li>IMAP: Increased the timeout</li> <li>Matrix: Added option to send notice, emote, and HTML messages</li> <li>Segment: Made changes to the properties <code>traits</code> and <code>properties</code>. For more details, check out the entry in the breaking changes page</li> <li>Bug Fixes</li> <li>GraphQL: Fixed an issue with the variables</li> <li>Mailchimp: Fixed an issue with the OAuth credentials. The credentials are now sent with the body instead of the header</li> <li>YouTube: Fixed a typo for the Unlisted option</li> <li>Added horizontal scrolling</li> </ul>","title":"n8n@0.94.0"},{"location":"workflow/reference/release-notes/#n8n0930","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2020-11-11</p> <ul> <li>New nodes</li> <li>GetResponse</li> <li>Gotify</li> <li>Line</li> <li>Strapi</li> <li>Enhanced nodes</li> <li>AMQP: Connection is now closed after a message is sent</li> <li>AMQP Trigger: Added Message per Cycle option to retrieve the specified number of messages from the bus for every cycle</li> <li>Hubspot: Added Custom Properties for the Deal resource as Additional Fields</li> <li>Jira: The node retrieves all the projects for the Project field instead of just 50</li> <li>Mattermost: Improved the channel selection</li> <li>Microsoft SQL: Added TLS parameter for the credentials</li> <li>Pipedrive Trigger: Added OAuth authentication method. For more details, check out the entry in the breaking changes page</li> <li>Segment: Added Custom Traits option for the Traits field</li> <li>Bug Fixes</li> <li>Shopify Trigger: Fixed an issue with activating the workflow</li> <li>For custom nodes, you can now set custom documentation URLs</li> </ul>","title":"n8n@0.93.0"},{"location":"workflow/reference/release-notes/#n8n0920","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2020-11-04</p> <ul> <li>New nodes</li> <li>Facebook Trigger</li> <li>Google Books</li> <li>Orbit</li> <li>Storyblok</li> <li>Enhanced nodes</li> <li>Google Drive: Removed duplicate parameters</li> <li>Twitter: Added Direct Message resource</li> <li>Bug Fixes</li> <li>Gmail: Fixed an issue with the encoding for the subject field</li> <li>Improved the Editor UI for the save workflow functionality</li> </ul>","title":"n8n@0.92.0"},{"location":"workflow/reference/release-notes/#n8n0910","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2020-10-23</p> <ul> <li>New nodes</li> <li>Kafka</li> <li>MailerLite</li> <li>MailerLite Trigger</li> <li>Pushbullet</li> <li>Enhanced nodes</li> <li>Airtable: Added Ignore Fields option for the Update operation</li> <li>AMQP Sender: Added Azure Service Bus support</li> <li>Google Calendar: Added Calendar resource and an option to add a conference link</li> <li>G Suite Admin: Added Group resource</li> <li>HTTP Request: Added Batch Size and Batch Interval option</li> <li>Mautic: Added Company resource</li> <li>Salesforce: Added OAuth 2.0 JWT authentication method</li> <li>Bug Fixes</li> <li>IF: Fixed an issue with undefined expression</li> <li>Paddle: Fixed an issue with the Return All parameter</li> <li>Switch: Fixed an issue with undefined expression</li> <li>Added CLI commands to deactivate the workflow</li> <li>Added an option to get the full execution data from the server</li> <li>The Editor UI gives an alert if you redirect without saving a workflow</li> <li>The Editor UI now indicates if a workflow is saved or not</li> <li>Improved support for touch devices</li> <li>Node properties now load on demand</li> <li>Updated the Node.js version for the Docker images</li> </ul>","title":"n8n@0.91.0"},{"location":"workflow/reference/release-notes/#n8n0900","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2020-10-23</p> <ul> <li>Added a check for the Node.js version on startup. For more details, check out the entry in the breaking changes page</li> <li>Bug Fixes</li> <li>Google Translate: Fixed an issue with the rendering of the image in Workflow\u00b2.io</li> </ul>","title":"n8n@0.90.0"},{"location":"workflow/reference/release-notes/#n8n0892","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2020-10-22</p> <ul> <li>Bug Fixes</li> <li>Strava Trigger: Fixed a typo in the node name</li> </ul>","title":"n8n@0.89.2"},{"location":"workflow/reference/release-notes/#n8n0891","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2020-10-22</p> <ul> <li>Removed debug messages</li> </ul>","title":"n8n@0.89.1"},{"location":"workflow/reference/release-notes/#n8n0890","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2020-10-22</p> <ul> <li>New Nodes</li> <li>Pushover</li> <li>Strava</li> <li>Strava Trigger</li> <li>Google Translate</li> <li>Bug Fixes</li> <li>HTTP Request: Fixed an issue with the POST request method for the 'File' response format</li> <li>Fixed issue with displaying non-active workflows as active</li> <li>Fixed an issue related to multiple-webhooks</li> </ul>","title":"n8n@0.89.0"},{"location":"workflow/reference/release-notes/#n8n0881","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2020-10-16</p> <ul> <li>Bug Fixes</li> <li>HTTP Request: Fixed an issue with the Form-Data Mutipart and the RAW/Custom Body Content Types</li> </ul>","title":"n8n@0.88.1"},{"location":"workflow/reference/release-notes/#n8n0880","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2020-10-16</p> <ul> <li>Enhanced Fixes</li> <li>Matrix: Added support for specifying a Matrix Homeserver URL</li> <li>Salesforce: Added Custom Object resource and Custom Fields and Sort options</li> <li>Bug Fixes</li> <li>AWS SES: Fixed an issue with the Send Template operation for the Email resource</li> <li>AWS SNS Trigger: Fixed an issue with the Subscriptions topic</li> </ul>","title":"n8n@0.88.0"},{"location":"workflow/reference/release-notes/#n8n0872","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2020-10-15</p> <ul> <li>Bug Fixes</li> <li>Google Sheets: Fixed an issue with spaces in sheet names</li> <li>Automizy: Fixed an issue with the default resource</li> </ul>","title":"n8n@0.87.2"},{"location":"workflow/reference/release-notes/#n8n0871","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2020-10-15</p> <ul> <li>Bug Fixes</li> <li>Gmail: Fixed an issue with the Message ID</li> <li>HTTP Request: Fixed an issue with the GET Request</li> <li>Added <code>HMAC-SHA512</code> signature method for OAuth 1.0</li> </ul>","title":"n8n@0.87.1"},{"location":"workflow/reference/release-notes/#n8n0870","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2020-10-14</p> <ul> <li>New nodes</li> <li>Automizy</li> <li>AWS Rekognition</li> <li>Matrix</li> <li>Sendy</li> <li>Vonage</li> <li>Wekan</li> <li>Enhanced nodes</li> <li>AWS SES: Added Send Template operation for the Email resource and added the Template resource</li> <li>ClickUp: Added Time Entry and Time Entry Tag resources</li> <li>Function: The Function field is now called the JavaScript Code field</li> <li>Mailchimp: Added Campaign resource</li> <li>Mindee: Added currency to the simplified response</li> <li>OneDrive: Added Share operation</li> <li>OpenWeatherMap: Added Language parameter</li> <li>Pipedrive: Added additional parameters to the Get All operation for the Note resource</li> <li>Salesforce: Added Flow resource</li> <li>Spreadsheet File: Added Range option for the Read from file operation</li> <li>Bug Fixes</li> <li>ClickUp Trigger: Fixed issue with creating credentials</li> <li>Pipedrive Trigger: Fixed issue with adding multiple webhooks to Pipedrive</li> <li>The link.fish Scrape node has been removed from Workflow\u00b2. For more details, check out the entry in the breaking changes page</li> </ul>","title":"n8n@0.87.0"},{"location":"workflow/reference/release-notes/#n8n0861","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2020-10-06</p> <ul> <li>Enhanced nodes</li> <li>CoinGecko: Small fixes to the CoinGecko node</li> </ul>","title":"n8n@0.86.1"},{"location":"workflow/reference/release-notes/#n8n0860","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2020-10-05</p> <ul> <li>New nodes</li> <li>Clockify</li> <li>CoinGecko</li> <li>G Suite Admin</li> <li>Mindee</li> <li>Wufoo Trigger</li> <li>Enhanced nodes</li> <li>Slack: Added User Profile resource</li> <li>Mattermost: Added Create and Invite operations for the User resource</li> <li>Bug Fixes</li> <li>S3: Fixed issue with uploading files</li> <li>Webhook ID gets refreshed on node duplication</li> </ul>","title":"n8n@0.86.0"},{"location":"workflow/reference/release-notes/#n8n0850","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2020-09-30</p> <ul> <li>Enhanced nodes</li> <li>Postgres: Added Schema parameter for the Update operation</li> <li>Bug Fixes</li> <li>Jira: Fixed a bug with the Issue Type field</li> <li>Pipedrive Trigger: Fixed issues with the credentials</li> <li>Changed the bcrypt library to <code>bcrypt.js</code> to make it compatible with Windows</li> <li>The OAuth callback URLs are now generated in the backend</li> </ul>","title":"n8n@0.85.0"},{"location":"workflow/reference/release-notes/#n8n0844","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2020-09-23</p> <ul> <li>Bug Fixes</li> <li>Google Sheets: Fixed issues with the update and append operations</li> </ul>","title":"n8n@0.84.4"},{"location":"workflow/reference/release-notes/#n8n0843","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2020-09-23</p> <ul> <li>Fixed an issue with the build by setting <code>jwks-rsa</code> to an older version</li> </ul>","title":"n8n@0.84.3"},{"location":"workflow/reference/release-notes/#n8n0842","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2020-09-23</p> <ul> <li>Fixed an issue with the OAuth window. The OAuth window now closes after authentication is complete</li> </ul>","title":"n8n@0.84.2"},{"location":"workflow/reference/release-notes/#n8n0841","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2020-09-23</p> <ul> <li>Additional endpoints can be excluded from authentication checks. Multiple endpoints can be added separated by colons</li> </ul>","title":"n8n@0.84.1"},{"location":"workflow/reference/release-notes/#n8n0840","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2020-09-23</p> <ul> <li>Enhanced nodes</li> <li>Twitter: Added support for auto mention of users in reply tweets</li> <li>Bug Fixes</li> <li>Google Sheets: Fixed issue with non-Latin sheet names</li> <li>HubSpot: Fixed naming of credentials</li> <li>Microsoft: Fixed naming of credentials</li> <li>Mandrill: Fixed attachments with JSON parameters</li> <li>Expressions now use short variables when selecting input data for the current node</li> <li>Fixed issue with renaming credentials for active workflows</li> </ul>","title":"n8n@0.84.0"},{"location":"workflow/reference/release-notes/#n8n0830","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2020-09-18</p> <ul> <li>New nodes</li> <li>LinkedIn</li> <li>Taiga</li> <li>Taiga Trigger</li> <li>Enhanced nodes</li> <li>ActiveCampaign: Added multiple functions, read more here</li> <li>Airtable: Added typecast functionality</li> <li>Asana: Added OAuth2 support</li> <li>ClickUp: Added OAuth2 support</li> <li>Google Drive: Added share operation</li> <li>IMAP Email: Added support for custom rules when checking emails</li> <li>Sentry.io: Added support for self-hosted version</li> <li>Twitter: Added retweet, reply, and like operations</li> <li>WordPress: Added author field to the post resource</li> <li>Bug Fixes</li> <li>Asana Trigger: Webhook validation has been deactivated</li> <li>Paddle: Fixed <code>returnData</code> format and coupon description</li> <li>The ActiveCampaign node has breaking changes</li> <li>Fixed issues with test-webhook registration</li> </ul>","title":"n8n@0.83.0"},{"location":"workflow/reference/release-notes/#n8n0821","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2020-09-14</p> <ul> <li>Speed for basic authentication with hashed password has been improved</li> </ul>","title":"n8n@0.82.1"},{"location":"workflow/reference/release-notes/#n8n0820","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2020-09-14</p> <ul> <li>New nodes</li> <li>Microsoft Teams</li> <li>Enhanced nodes</li> <li>Freshdesk: Added Freshdesk contact resource</li> <li>HTTP Request: Run parallel requests in HTTP Request Node</li> <li>Bug Fixes</li> <li>Philips Hue: Added <code>APP ID</code> to Philips Hue node credentials</li> <li>Postmark Trigger: Fixed parameters for the node</li> <li>The default space between nodes has been increased to two units</li> <li>Expression support has been added to the credentials</li> <li>Passwords for your Doc\u00b2 instance can now be hashed</li> </ul>","title":"n8n@0.82.0"},{"location":"workflow/reference/release-notes/#n8n0810","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2020-09-09</p> <ul> <li>New nodes</li> <li>Sentry.io</li> <li>Enhanced nodes</li> <li>Asana</li> <li>ClickUp</li> <li>Clockify</li> <li>Google Contacts</li> <li>Salesforce</li> <li>Segment</li> <li>Telegram</li> <li>Telegram Trigger</li> </ul>","title":"n8n@0.81.0"},{"location":"workflow/reference/release-notes/#n8n0800","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2020-09-02</p> <ul> <li>New nodes</li> <li>Customer.io</li> <li>MQTT Trigger</li> <li>S3</li> <li>Enhanced nodes</li> <li>Acuity Scheduling</li> <li>AWS S3</li> <li>ClickUp</li> <li>FTP</li> <li>Telegram Trigger</li> <li>Zendesk</li> </ul>","title":"n8n@0.80.0"},{"location":"workflow/reference/release-notes/#n8n0793","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2020-08-30</p> <ul> <li>The bug that caused the workflows to not get activated correctly has been fixed</li> </ul>","title":"n8n@0.79.3"},{"location":"workflow/reference/release-notes/#n8n0792","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2020-08-28</p> <ul> <li>Added missing rawBody for \"application/x-www-form-urlencoded\"</li> </ul>","title":"n8n@0.79.2"},{"location":"workflow/reference/release-notes/#n8n0791","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2020-08-28</p> <ul> <li>Enhanced nodes</li> <li>Contentful</li> <li>HTTP Request</li> <li>Postgres</li> <li>Webhook</li> <li>Removed Test-Webhook also in case checkExists fails</li> <li>HTTP Request node does not overwrite accept header if it's already set</li> <li>Add rawBody to every request so that Doc\u00b2 does not give an error if body is missing</li> </ul>","title":"n8n@0.79.1"},{"location":"workflow/reference/release-notes/#n8n0790","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2020-08-27</p> <ul> <li>New nodes</li> <li>Contentful</li> <li>Convertkit</li> <li>Convertkit Trigger</li> <li>Paddle</li> <li>Enhanced nodes</li> <li>Airtable</li> <li>Coda</li> <li>Gmail</li> <li>HubSpot</li> <li>IMAP Email</li> <li>Postgres</li> <li>Salesforce</li> <li>SIGNL4</li> <li>Todoist</li> <li>Trello</li> <li>YouTube</li> <li>The Todoist node has breaking changes</li> <li>Added dynamic titles on workflow execution</li> <li>Nodes will now display a link to associated credential documentation</li> </ul>","title":"n8n@0.79.0"},{"location":"workflow/reference/release-notes/#n8n0780","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2020-08-18</p> <ul> <li>New nodes</li> <li>Gmail</li> <li>Google Contacts</li> <li>Unleashed Software</li> <li>YouTube</li> <li>Enhanced nodes</li> <li>AMQP</li> <li>AMQP Trigger</li> <li>Bitly</li> <li>Function Item</li> <li>Google Sheets</li> <li>Shopify</li> <li>Todoist</li> <li>Enhanced support for JWT based authentication</li> <li>Added an option to execute a node once, using data of only the first item</li> </ul>","title":"n8n@0.78.0"},{"location":"workflow/reference/release-notes/#n8n0760","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2020-08-05</p> <ul> <li>New nodes</li> <li>Customer.io Trigger</li> <li>FTP</li> <li>Medium</li> <li>Philips Hue</li> <li>TravisCI</li> <li>Twake</li> <li>Enhanced nodes</li> <li>CrateDB</li> <li>Move Binary Data</li> <li>Nodes will now display a link to associated documentation</li> </ul>","title":"n8n@0.76.0"},{"location":"workflow/reference/release-notes/#n8n0750","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2020-07-26</p> <ul> <li>New nodes</li> <li>Box</li> <li>Box Trigger</li> <li>CrateDB</li> <li>Jira Trigger</li> <li>Enhanced nodes</li> <li>GitLab</li> <li>NextCloud</li> <li>Pipedrive</li> <li>QuestDB</li> <li>Webhooks now support OPTIONS request</li> </ul>","title":"n8n@0.75.0"},{"location":"workflow/reference/release-notes/#n8n0740","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2020-07-15</p> <ul> <li>New nodes</li> <li>Hacker News</li> <li>QuestDB</li> <li>Xero</li> <li>Enhanced nodes</li> <li>Affinity Trigger</li> <li>HTTP Request</li> <li>Mailchimp</li> <li>MongoDB</li> <li>Pipedrive</li> <li>Postgres</li> <li>Uplead</li> <li>Webhook</li> <li>Webhook URLs are now handled independently of the workflow ID by <code>https://{hostname}/webhook/{path}</code> instead of the older <code>https://{hostname}/webhook/{workflow_id}/{node_name}/{path}</code>.</li> </ul>","title":"n8n@0.74.0"},{"location":"workflow/reference/release-notes/#n8n0731","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2020-07-08</p> <ul> <li>Enhanced nodes</li> <li>Microsoft SQL</li> </ul>","title":"n8n@0.73.1"},{"location":"workflow/reference/release-notes/#n8n0730","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2020-07-08</p> <ul> <li>New nodes</li> <li>CircleCI</li> <li>Microsoft SQL</li> <li>Zoom</li> <li>Enhanced nodes</li> <li>Postmark Trigger</li> <li>Salesforce</li> <li>It is now possible to set default values for credentials that get prefilled, and the user cannot change.</li> </ul>","title":"n8n@0.73.0"},{"location":"workflow/reference/release-notes/#n8n0720","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2020-07-02</p> <ul> <li>Enhanced nodes</li> <li>Drift</li> <li>Eventbrite Trigger</li> <li>Facebook Graph API</li> <li>Pipedrive</li> <li>Fixed credential issue for the Execute Workflow node</li> </ul>","title":"n8n@0.72.0"},{"location":"workflow/reference/release-notes/#n8n0710","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2020-06-25</p> <ul> <li>New nodes</li> <li>Google Tasks</li> <li>SIGNL4</li> <li>Spotify</li> <li>Enhanced nodes</li> <li>Hubspot</li> <li>Mailchimp</li> <li>Typeform</li> <li>Webflow</li> <li>Zendesk</li> <li>Added Postgres SSL support</li> <li>It is now possible to deploy Doc\u00b2 under a subfolder</li> </ul>","title":"n8n@0.71.0"},{"location":"workflow/reference/release-notes/#n8n0700","text":"<p>For a comprehensive list of changes, check out the commits for this version. Release date: 2020-06-13</p> <ul> <li>Enhanced nodes</li> <li>GitHub</li> <li>Mautic Trigger</li> <li>Monday.com</li> <li>MongoDB</li> <li>Fixed the issue with multiuser-setup</li> </ul>","title":"n8n@0.70.0"},{"location":"workflow/workflows/","tags":["Workflow\u00b2","Overview"],"text":"<p>Learn about the key components of an automation in Workflow\u00b2:</p> <ul> <li>Workflows</li> <li>Connections</li> <li>Nodes</li> <li>Notes</li> <li>Items</li> </ul>","title":"Overview"},{"location":"workflow/workflows/connections/","tags":["Workflow\u00b2","Connection"],"text":"<p>A connection establishes a link between nodes to route data through the workflow\u00b2. A connection between two nodes passes data from one node's output to another node's input. Each node can have one or multiple connections.</p> <p>To create a connection between two nodes, click on the grey dot on the right side of the node and slide the arrow to the grey rectangle on the left side of the following node.</p>","title":"Connection"},{"location":"workflow/workflows/connections/#example","tags":["Workflow\u00b2","Connection"],"text":"<p>An IF node has two connections to different nodes: one for when the statement is true and one for when the statement is false.</p> <p></p>","title":"Example"},{"location":"workflow/workflows/items/","tags":["Workflow\u00b2","Items"],"text":"<p>Data sent from one node to another is sent as an array of JSON objects. Each element in this collection is called an Item. A node performs its action on each item of incoming data.</p> <p>Nodes do not only process one \"item\", they process multiple ones. For example, if the Trello node is set to <code>Create-Card</code> and it has an expression set for <code>Name</code> to be set depending on <code>name</code> property, it will create a card for each item, always choosing the <code>name-property-value</code> of the current one.</p> <p>This data would, for example, create two cards. One named <code>test1</code> the other one named <code>test2</code>:</p> <pre><code>[\n    {\n        name: \"test1\"\n    },\n    {\n        name: \"test2\"\n    }\n]\n</code></pre>","title":"Items"},{"location":"workflow/workflows/nodes/","tags":["Workflow\u00b2","Node"],"text":"<p>A node is an entry point for retrieving data, a function to process data, or an exit for sending data. The data process performed by nodes can include filtering, recomposing, and changing data.</p> <p>There may be one or several nodes for your API, service, or app. By connecting multiple nodes, you can create simple and complex workflows. When you add a node to the Editor UI, the node is automatically activated and requires you to configure it (by adding credentials, selecting operations, writing expressions, etc.).</p> <p>There are three types of nodes:</p> <ul> <li>Core Nodes</li> <li>Regular Nodes</li> <li>Trigger Nodes</li> </ul>","title":"Node"},{"location":"workflow/workflows/nodes/#core-nodes","tags":["Workflow\u00b2","Node"],"text":"<p>Core nodes are functions or services that can be used to control how workflows are run or to provide generic API support.</p> <p>Use the Start node when you want to manually trigger the workflow with the <code>Execute Workflow</code> button at the bottom of the Editor UI. This way of starting the workflow is useful when creating and testing new workflows.</p> <p>If an application you need does not have a dedicated Node yet, you can access the data by using the HTTP Request node or the Webhook node. You can also read about creating nodes and make a node for your desired application.</p>","title":"Core nodes"},{"location":"workflow/workflows/nodes/#regular-nodes","tags":["Workflow\u00b2","Node"],"text":"<p>Regular nodes perform an action, like fetching data or creating an entry in a calendar. Regular nodes are named for the application they represent and are listed under Regular Nodes in the Editor UI.</p> <p></p>","title":"Regular nodes"},{"location":"workflow/workflows/nodes/#example","tags":["Workflow\u00b2","Node"],"text":"<p>A Google Sheets node can be used to retrieve or write data to a Google Sheet.</p> <p></p>","title":"Example"},{"location":"workflow/workflows/nodes/#trigger-nodes","tags":["Workflow\u00b2","Node"],"text":"<p>Trigger nodes start workflows and supply the initial data.</p> <p></p> <p>Trigger nodes can be app or core nodes.</p> <ul> <li> <p>Core Trigger nodes start the workflow at a specific time, at a time interval, or on a webhook call. For example, to get all users from a Postgres database every 10 minutes, use the Interval Trigger node with the Postgres node.</p> </li> <li> <p>App Trigger nodes start the workflow when an event happens in an app. App Trigger nodes are named like the application they represent followed by \"Trigger\" and are listed under Trigger Nodes in the Editor. For example, a Telegram trigger node can be used to trigger a workflow when a message is sent in a Telegram chat.</p> </li> </ul> <p></p>","title":"Trigger nodes"},{"location":"workflow/workflows/nodes/#node-settings","tags":["Workflow\u00b2","Node"],"text":"<p>Nodes come with global operations and settings, as well as app-specific parameters that can be configured.</p>","title":"Node settings"},{"location":"workflow/workflows/nodes/#operations","tags":["Workflow\u00b2","Node"],"text":"<p>The node operations are illustrated with icons that appear on top of the node when you hover on it: * Delete: Remove the selected node from the workflow * Pause: Deactivate the selected node * Copy: Duplicate the selected node * Play: Run the selected node</p> <p></p> <p>To access the node parameters and settings, double-click on the node.</p>","title":"Operations"},{"location":"workflow/workflows/nodes/#parameters","tags":["Workflow\u00b2","Node"],"text":"<p>The node parameters allow you to define the operations the node should perform. Find the available parameters of each node in the node reference.</p>","title":"Parameters"},{"location":"workflow/workflows/nodes/#settings","tags":["Workflow\u00b2","Node"],"text":"<p>The node settings allow you to configure the look and execution of the node. The following options are available:</p> <ul> <li>Notes: Optional note to save with the node</li> <li>Display note in flow: If active, the note above will be displayed in the workflow as a subtitle</li> <li>Always Output Data: If active, the node will return an empty item even if the node returns no data during an initial execution. Be careful setting this on IF nodes, as it could cause an infinite loop.</li> <li>Execute Once: If active, the node executes only once, with data from the first item it receives.</li> <li>Retry On Fail: If active, the node tries to execute a failed attempt multiple times until it succeeds</li> <li>Continue On Fail: If active, the workflow continues even if the execution of the node fails. When this happens, the node passes along input data from previous nodes, so the workflow should account for unexpected output data.</li> </ul> <p></p> <p>If a node is not correctly configured or is missing some required information, a warning sign is displayed on the top right corner of the node. To see what parameters are incorrect, double-click on the node and have a look at fields marked with red and the error message displayed in the respective warning symbol.</p> <p></p>","title":"Settings"},{"location":"workflow/workflows/nodes/#pausing-nodes","tags":["Workflow\u00b2","Node"],"text":"<p>Sometimes when creating and debugging a workflow, it is helpful to not execute specific nodes. To do that without disconnecting each node, you can pause them. When a node gets paused, the data passes through the node without being changed.</p> <p>There are two ways to pause a node. You can either press the pause button which gets displayed above the node when hovering over it or select the node and press \"d\".</p>","title":"Pausing nodes"},{"location":"workflow/workflows/workflow-notes/","tags":["Workflow\u00b2","Workflow notes"],"text":"<p>Workflow notes allow you to annotate and comment on your workflows.</p> <p>We encourage using workflow notes heavily, especially on template workflows, to help other users understand your workflow.</p>","title":"Workflow notes"},{"location":"workflow/workflows/workflow-notes/#create-a-note","tags":["Workflow\u00b2","Workflow notes"],"text":"<p>Workflow\u00b2 notes are a type of core node. To add a new note:</p> <ol> <li>Open the nodes panel.</li> <li>Search for <code>note</code>.</li> <li>Click the Note node. Doc\u00b2 adds a new note to the canvas.</li> </ol>","title":"Create a note"},{"location":"workflow/workflows/workflow-notes/#edit-a-note","tags":["Workflow\u00b2","Workflow notes"],"text":"<ol> <li>Double click the note you want to edit.</li> <li>Write your note. This guide explains how to format your text with Markdown. Doc\u00b2 uses markdown-it, which implements the CommonMark specification. </li> <li>Click away from the note, or press <code>Esc</code>, to stop editing.</li> </ol>","title":"Edit a note"},{"location":"workflow/workflows/workflow-notes/#note-positioning","tags":["Workflow\u00b2","Workflow notes"],"text":"<p>You can:</p> <ul> <li>Drag a note anywhere on the canvas.</li> <li>Drag notes behind nodes. You can use this to visually group nodes.</li> <li>Resize notes by hovering over the edge of the note and dragging to resize.</li> </ul>","title":"Note positioning"},{"location":"workflow/workflows/workflows/","tags":["Workflow\u00b2"],"text":"<p>A workflow is a collection of nodes connected together to automate a process. </p> <p>A workflow\u00b2 can be started manually (with the Start node) or by Trigger nodes. When a workflow\u00b2 is started, it executes all the active and connected nodes. The workflow execution ends when all the nodes have processed their data. You can view your workflow executions in the Execution log, which can be helpful for debugging.</p> <p></p>","title":"Workflow\u00b2"},{"location":"workflow/workflows/workflows/#activating-a-workflow2","tags":["Workflow\u00b2"],"text":"<p>Workflows\u00b2 that start with a Trigger node or a Webhook node need to be activated in order to be executed. This is done via the Active toggle in the Editor UI.</p> <p>Active workflows enable the Trigger and Webhook nodes to receive data whenever a condition is met (e.g., Monday at 10:00, an update in a Trello board) and in turn trigger the workflow execution.</p> <p>All the newly created workflows are deactivated by default. </p>","title":"Activating a workflow\u00b2"},{"location":"workflow/workflows/workflows/#sharing-a-workflow","tags":["Workflow\u00b2"],"text":"<p>You can export a workflow as a JSON file in two ways:</p> <ul> <li>Download: Click the Download button under the Workflow menu in the sidebar. This will download the workflow as a JSON file.</li> <li>Copy-Paste: Select all the workflow nodes in the Editor UI, copy them (<code>Ctrl + c</code> or <code>cmd +c</code>), then paste them (<code>Ctrl + v</code> or <code>cmd + v</code>) in your desired file.  </li> </ul> <p>To select all nodes, or a group of nodes, click and drag:   </p> <p>You can import JSON files as workflows in two ways:</p> <ul> <li>Import: Click Import from File or Import from URL under the Workflow menu in the sidebar and select the JSON file or paste the link to a workflow.</li> <li>Copy-Paste: Copy the JSON workflow to the clipboard (<code>Ctrl + c</code> or <code>cmd +c</code>) and paste it (<code>Ctrl + v</code> or <code>cmd + v</code>) into the Editor UI.</li> </ul>","title":"Sharing a workflow"},{"location":"workflow/workflows/workflows/#workflow-settings","tags":["Workflow\u00b2"],"text":"<p>On each workflow, it is possible to set some custom settings and overwrite some of the global default settings from the Workflow &gt; Settings menu.</p> <p></p> <p>The following settings are available:</p> <ul> <li>Error Workflow: Select a workflow to trigger if the current workflow fails. See Error Workflow for more details.</li> <li>Timezone: Sets the timezone to be used in the workflow. The default timezone is EDT (New York). The Timezone setting is particularly important for the Cron Trigger node.</li> <li>Save Data Error Execution: If the execution data of the workflow should be saved when the workflow fails.</li> <li>Save Data Success Execution: If the execution data of the workflow should be saved when the workflow succeeds.</li> <li>Save Manual Executions: If executions started from the Editor UI should be saved.</li> <li>Save Execution Progress: If the execution data of each node should be saved. If set to \"Yes\", the workflow resumes from where it stopped in case of an error. However, this might increase latency.</li> <li>Timeout Workflow: Toggle to enable setting a duration after which the current workflow execution should be cancelled.</li> <li>Timeout After: Only available when Timeout Workflow is enabled. Set the time in hours, minutes, and seconds after which the workflow should timeout. Fordoc2app.cloudintegration.eu users a maximum available timeout is enforced for each plan (e.g. 3 minutes for Start level).</li> </ul>","title":"Workflow settings"},{"location":"workflow/workflows/workflows/#failed-workflows","tags":["Workflow\u00b2"],"text":"<p>If your workflow execution fails, you can retry the execution. To retry a failed workflow:</p> <ol> <li>Open the Executions list from the sidebar.</li> <li>For the workflow execution you want to retry, click on the refresh icon under the Status column.</li> <li>Select either of the following options to retry the execution:<ul> <li>Retry with currently saved workflow: Once you make changes to your workflow, you can select this option to execute the workflow with the previous execution data.</li> <li>Retry with original workflow: If you want to retry the execution without making changes to your workflow, you can select this option to retry the execution with the previous execution data.</li> </ul> </li> </ol> <p>You can also use the Error Trigger node, which triggers a workflow when another workflow has an error. Once a workflow fails, this node gets details about the failed workflow and the errors.</p>","title":"Failed workflows"},{"location":"workflow/workflows/workflows/#workflow-templates","tags":["Workflow\u00b2"],"text":"<p>When creating a new workflow, you can choose whether to start with an empty workflow, or use an existing template.</p> <p>Templates provide:</p> <ul> <li>A way to get started quickly: we might already have a template that does what you need.</li> <li>Examples of what you can build</li> <li>Best practices for creating your own workflows</li> </ul>","title":"Workflow templates"},{"location":"workflow/workflows/workflows/#use-a-workflow-template","tags":["Workflow\u00b2"],"text":"<ol> <li>In the sidebar, click Templates.</li> <li>Browse or search the workflow templates list.</li> <li>Click a workflow to view more information. Doc\u00b2 opens the workflow details page.</li> <li>On the workflow details page, click Use this workflow. Doc\u00b2 opens the workflow.</li> <li>Click Save to add the workflow to your workflows.</li> </ol>  <p>Workflow templates are available in 0.165.0 and above</p> <p>Workflow templates are available on all flavors of Workflow\u00b2. If you can't access workflow templates in Doc\u00b2, check that your Doc\u00b2 version is 0.165.0 or above, and check whether you are using a self-hosted or embedded version of Doc\u00b2 with templates disabled.</p>","title":"Use a workflow template"},{"location":"tags/","text":"<p>Following is a list of relevant tags:</p>","title":"Tags"},{"location":"tags/#ai","text":"<ul> <li>AI Indicators</li> </ul>","title":"AI"},{"location":"tags/#amqp","text":"<ul> <li>AMQP</li> </ul>","title":"AMQP"},{"location":"tags/#api","text":"<ul> <li>WEBHOOK</li> <li>API</li> <li>Detect inside pages</li> <li>Merge/Split PDF</li> <li>OCR API</li> <li>Overview</li> </ul>","title":"API"},{"location":"tags/#apitemplateio","text":"<ul> <li>APITemplate.io</li> </ul>","title":"APITemplate.io"},{"location":"tags/#aws","text":"<ul> <li>AWS</li> </ul>","title":"AWS"},{"location":"tags/#access-token","text":"<ul> <li>Netlify</li> </ul>","title":"Access Token"},{"location":"tags/#action","text":"<ul> <li>Insight\u00b2 Action</li> </ul>","title":"Action"},{"location":"tags/#action-network","text":"<ul> <li>Action Network</li> <li>Action Network</li> </ul>","title":"Action Network"},{"location":"tags/#activecampaign","text":"<ul> <li>ActiveCampaign</li> </ul>","title":"ActiveCampaign"},{"location":"tags/#affinity","text":"<ul> <li>Affinity</li> </ul>","title":"Affinity"},{"location":"tags/#agile-crm","text":"<ul> <li>Agile CRM</li> </ul>","title":"Agile CRM"},{"location":"tags/#airtable","text":"<ul> <li>Airtable</li> </ul>","title":"Airtable"},{"location":"tags/#amount-settings","text":"<ul> <li>General Settings</li> <li>Amount Settings</li> </ul>","title":"Amount Settings"},{"location":"tags/#approval","text":"<ul> <li>WF\u00b2 Approval with Doc\u00b2</li> </ul>","title":"Approval"},{"location":"tags/#asana","text":"<ul> <li>Asana</li> </ul>","title":"Asana"},{"location":"tags/#automizy","text":"<ul> <li>Automizy</li> </ul>","title":"Automizy"},{"location":"tags/#autopilot","text":"<ul> <li>Autopilot</li> </ul>","title":"Autopilot"},{"location":"tags/#bod","text":"<ul> <li>How to create a BOD mapping file</li> </ul>","title":"BOD"},{"location":"tags/#bamboohr","text":"<ul> <li>BambooHR</li> </ul>","title":"BambooHR"},{"location":"tags/#bannerbear","text":"<ul> <li>Bannerbear</li> </ul>","title":"Bannerbear"},{"location":"tags/#baserow","text":"<ul> <li>Baserow</li> </ul>","title":"Baserow"},{"location":"tags/#basic-operations","text":"<ul> <li>Discord</li> <li>Pipedrive</li> </ul>","title":"Basic Operations"},{"location":"tags/#beeminder","text":"<ul> <li>Beeminder</li> </ul>","title":"Beeminder"},{"location":"tags/#bitbucket","text":"<ul> <li>Bitbucket</li> </ul>","title":"Bitbucket"},{"location":"tags/#bitly","text":"<ul> <li>Bitly</li> </ul>","title":"Bitly"},{"location":"tags/#bitwarden","text":"<ul> <li>Bitwarden</li> </ul>","title":"Bitwarden"},{"location":"tags/#box","text":"<ul> <li>Box</li> </ul>","title":"Box"},{"location":"tags/#brandfetch","text":"<ul> <li>Brandfetch</li> </ul>","title":"Brandfetch"},{"location":"tags/#bubble","text":"<ul> <li>Bubble</li> </ul>","title":"Bubble"},{"location":"tags/#calendly","text":"<ul> <li>Calendly</li> </ul>","title":"Calendly"},{"location":"tags/#change-log","text":"<ul> <li>Changelog</li> </ul>","title":"Change Log"},{"location":"tags/#chargebee","text":"<ul> <li>Chargebee</li> </ul>","title":"Chargebee"},{"location":"tags/#circleci","text":"<ul> <li>CircleCI</li> </ul>","title":"CircleCI"},{"location":"tags/#clearbit","text":"<ul> <li>Clearbit</li> </ul>","title":"Clearbit"},{"location":"tags/#clickup","text":"<ul> <li>ClickUp</li> </ul>","title":"ClickUp"},{"location":"tags/#clockify","text":"<ul> <li>Clockify</li> </ul>","title":"Clockify"},{"location":"tags/#cloud","text":"<ul> <li>Configuring SSO in Infor Cloud</li> <li>Restart Ephesoft on Cloud</li> </ul>","title":"Cloud"},{"location":"tags/#cockpit","text":"<ul> <li>Cockpit</li> </ul>","title":"Cockpit"},{"location":"tags/#coda","text":"<ul> <li>Coda</li> </ul>","title":"Coda"},{"location":"tags/#code-example","text":"<ul> <li>Code Example</li> <li>Code Example - Query JSON</li> </ul>","title":"Code Example"},{"location":"tags/#columns","text":"<ul> <li>Define tables and columns</li> </ul>","title":"Columns"},{"location":"tags/#configuration","text":"<ul> <li>Installation &amp; Config</li> <li>Installation &amp; Config</li> <li>TE\u00b2 Installation &amp; Config</li> </ul>","title":"Configuration"},{"location":"tags/#connection","text":"<ul> <li>Connection</li> </ul>","title":"Connection"},{"location":"tags/#cron","text":"<ul> <li>Workflows for Weather Forecast</li> <li>Weather</li> <li>Cron</li> <li>RabbitMQ</li> </ul>","title":"Cron"},{"location":"tags/#doc2","text":"<ul> <li>Getting Started</li> <li>AI Indicators</li> <li>WEBHOOK</li> <li>Company Information</li> <li>Dashboard</li> <li>Deployment</li> <li>Document Validation</li> <li>E-Mail</li> <li>Exception filters</li> <li>Export</li> <li>Extracted fields</li> <li>Fileshare Import</li> <li>General Settings</li> <li>Import</li> <li>DOC\u00b2 - Infor Use Cases</li> <li>Mapping of columns</li> <li>Master data validation</li> <li>Modules</li> <li>OCR View</li> <li>DOC\u00b2 - OnBoarding</li> <li>Amount Settings</li> <li>API</li> <li>Document Types</li> <li>Master Data Validation</li> <li>SSO Settings</li> <li>Users</li> <li>Watchdog for Linux</li> <li>Watchdog for Windows</li> <li>DOC\u00b2 with Workflow\u00b2</li> <li>Zugferd and Peppol</li> <li>How to create an Infor ION file</li> <li>Export to FLOW\u00b2</li> <li>DOC\u00b2 to Infor OS</li> <li>DOC\u00b2 to Infor OS</li> <li>How to create a BOD mapping file</li> <li>How to create a IDM mapping file</li> <li>Export to Infor IDM</li> <li>Export to Infor IDM</li> <li>Export to Infor ION and IDM</li> <li>Webhook</li> <li>PO Matching - Delivery Notes</li> <li>PO Matching - Invoices</li> <li>PO Matching - Order Confirmation</li> <li>PO Matching</li> <li>Add new table column</li> <li>Advanced settings for table extraction</li> <li>Define tables and columns</li> <li>Group function to extract data from tables</li> <li>Manual row selection</li> <li>Save and delete rules</li> <li>Table Extraction</li> <li>Training for Table Extraction</li> <li>Workflow\u00b2 Examples</li> <li>Import from DOC\u00b2</li> <li>Ephesoft - External Application</li> <li>Welcome to Workflow\u00b2</li> <li>Welcome to Workflow\u00b2</li> </ul>","title":"DOC\u00b2"},{"location":"tags/#doc2-upload","text":"<ul> <li>Watchdog Configuration</li> </ul>","title":"DOC\u00b2 Upload"},{"location":"tags/#doc2export","text":"<ul> <li>Activate Workflow</li> <li>Configuring DOC\u00b2 App Status Trigger node</li> <li>Configuring Google Drive node</li> <li>Create blank workflow</li> </ul>","title":"DOC\u00b2Export"},{"location":"tags/#dashboard","text":"<ul> <li>Dashboard</li> <li>Deployment</li> <li>Manual Import</li> <li>User Dashboard</li> </ul>","title":"Dashboard"},{"location":"tags/#data-source","text":"<ul> <li>Insight\u00b2 Data Source</li> </ul>","title":"Data Source"},{"location":"tags/#data-structure","text":"<ul> <li>Overview - Mapping and transforming data</li> </ul>","title":"Data structure"},{"location":"tags/#database","text":"<ul> <li>How to delete a KV\u00b2Plugin rule from the Database</li> </ul>","title":"Database"},{"location":"tags/#date-time","text":"<ul> <li>Date &amp; Time</li> </ul>","title":"Date &amp; Time"},{"location":"tags/#delete","text":"<ul> <li>Save and delete rules</li> </ul>","title":"Delete"},{"location":"tags/#delivery-notes","text":"<ul> <li>PO Matching - Delivery Notes</li> </ul>","title":"Delivery Notes"},{"location":"tags/#demonstration","text":"<ul> <li>Welcome to Workflow\u00b2</li> </ul>","title":"Demonstration"},{"location":"tags/#deployment","text":"<ul> <li>Deployment</li> </ul>","title":"Deployment"},{"location":"tags/#digitizing-documents","text":"<ul> <li>Welcome to FLOW\u00b2</li> </ul>","title":"Digitizing Documents"},{"location":"tags/#digitizing-documents_1","text":"<ul> <li>KV\u00b2 - Getting Started</li> </ul>","title":"Digitizing documents"},{"location":"tags/#discord","text":"<ul> <li>Discord</li> </ul>","title":"Discord"},{"location":"tags/#doc2export_1","text":"<ul> <li>Export Doc2 to Google Drive</li> </ul>","title":"Doc2Export"},{"location":"tags/#document","text":"<ul> <li>Document Validation</li> </ul>","title":"Document"},{"location":"tags/#document-split-settings","text":"<ul> <li>General Settings</li> </ul>","title":"Document Split Settings"},{"location":"tags/#document-types","text":"<ul> <li>Document Types</li> </ul>","title":"Document Types"},{"location":"tags/#document-validation","text":"<ul> <li>Master data validation</li> </ul>","title":"Document Validation"},{"location":"tags/#doc2_1","text":"<ul> <li>Keyboard</li> <li>Manual Import</li> <li>WF\u00b2 Approval with Doc\u00b2</li> <li>Doc\u00b2 export to Excel</li> </ul>","title":"Doc\u00b2"},{"location":"tags/#download","text":"<ul> <li>Zugferd and Peppol</li> </ul>","title":"Download"},{"location":"tags/#dropbox","text":"<ul> <li>Doc\u00b2 export to Excel</li> </ul>","title":"Dropbox"},{"location":"tags/#e-mail","text":"<ul> <li>E-Mail</li> <li>Import</li> </ul>","title":"E-Mail"},{"location":"tags/#ephesoft","text":"<ul> <li>KV\u00b2 - Getting Started</li> <li>How to deal with different VAT amounts</li> <li>How to delete a KV\u00b2Plugin rule from the Database</li> <li>Installation &amp; Config</li> <li>KV\u00b2 Tutorial</li> <li>Limitations of KV\u00b2 Plugin</li> <li>Restart Ephesoft on Cloud</li> <li>Restart Ephesoft On Premise</li> <li>Training KV2 for Table Extraction</li> <li>Ephesoft - External Application</li> <li>TE\u00b2 Plugin</li> <li>TE\u00b2 Tutorial</li> <li>TE\u00b2 Installation &amp; Config</li> <li>Infor BOD Mapping</li> </ul>","title":"Ephesoft"},{"location":"tags/#ephesoft-plugins","text":"<ul> <li>Enable Feedback Function</li> <li>Enable Feedback Function</li> </ul>","title":"Ephesoft Plugins"},{"location":"tags/#ephesoft-transact","text":"<ul> <li>Installation &amp; Config</li> </ul>","title":"Ephesoft Transact"},{"location":"tags/#example","text":"<ul> <li>Rename JSON Key</li> <li>Export Doc2 to Google Drive</li> <li>Activate Workflow</li> <li>Configuring DOC\u00b2 App Status Trigger node</li> <li>Configuring Google Drive node</li> <li>Create blank workflow</li> <li>Workflows for Weather Forecast</li> <li>Weather</li> <li>Weather</li> </ul>","title":"Example"},{"location":"tags/#example-usage","text":"<ul> <li>Discord</li> <li>Pipedrive</li> </ul>","title":"Example Usage"},{"location":"tags/#examples","text":"<ul> <li>Workflow\u00b2 Examples</li> </ul>","title":"Examples"},{"location":"tags/#excel","text":"<ul> <li>Doc\u00b2 export to Excel</li> </ul>","title":"Excel"},{"location":"tags/#exception","text":"<ul> <li>Exception filters</li> </ul>","title":"Exception"},{"location":"tags/#export","text":"<ul> <li>Export</li> <li>Zugferd and Peppol</li> <li>Export to FLOW\u00b2</li> <li>DOC\u00b2 to Infor OS</li> <li>How to create a BOD mapping file</li> <li>How to create a IDM mapping file</li> <li>Export to Infor IDM</li> <li>Export to Infor ION and IDM</li> <li>Webhook</li> </ul>","title":"Export"},{"location":"tags/#export-to-infor","text":"<ul> <li>How to create an Infor ION file</li> </ul>","title":"Export to Infor"},{"location":"tags/#expressions","text":"<ul> <li>Code Example</li> <li>Code Example - Query JSON</li> </ul>","title":"Expressions"},{"location":"tags/#external-application","text":"<ul> <li>Ephesoft - External Application</li> </ul>","title":"External Application"},{"location":"tags/#extracted-fields","text":"<ul> <li>All extracted fields</li> </ul>","title":"Extracted Fields"},{"location":"tags/#faqs","text":"<ul> <li>Cron</li> <li>License</li> </ul>","title":"FAQs"},{"location":"tags/#flow2","text":"<ul> <li>Export</li> <li>Extracted fields</li> <li>Watchdog Configuration</li> <li>Export to FLOW\u00b2</li> <li>Welcome to FLOW\u00b2</li> <li>Deployment</li> <li>FLOW\u00b2 Onboarding Guide</li> <li>User Dashboard</li> <li>Import from DOC\u00b2</li> <li>Getting Started</li> <li>Metadata</li> <li>System Setup</li> </ul>","title":"FLOW\u00b2"},{"location":"tags/#ftp","text":"<ul> <li>FTP</li> </ul>","title":"FTP"},{"location":"tags/#feedback","text":"<ul> <li>Enable Feedback Function</li> <li>Enable Feedback Function</li> </ul>","title":"Feedback"},{"location":"tags/#fields","text":"<ul> <li>Extracted fields</li> </ul>","title":"Fields"},{"location":"tags/#fileshare","text":"<ul> <li>Fileshare Import</li> </ul>","title":"Fileshare"},{"location":"tags/#fileshare-import","text":"<ul> <li>Watchdog for Linux</li> <li>Watchdog for Windows</li> <li>Watchdog Configuration</li> </ul>","title":"Fileshare Import"},{"location":"tags/#filter","text":"<ul> <li>Exception filters</li> </ul>","title":"Filter"},{"location":"tags/#function","text":"<ul> <li>Function</li> <li>Function Item</li> </ul>","title":"Function"},{"location":"tags/#generel","text":"<ul> <li>Exception filters</li> </ul>","title":"Generel"},{"location":"tags/#getting-started","text":"<ul> <li>Getting Started</li> </ul>","title":"Getting Started"},{"location":"tags/#google-drive","text":"<ul> <li>Export Doc2 to Google Drive</li> <li>Activate Workflow</li> <li>Configuring DOC\u00b2 App Status Trigger node</li> <li>Configuring Google Drive node</li> <li>Create blank workflow</li> </ul>","title":"Google Drive"},{"location":"tags/#guide","text":"<ul> <li>DOC\u00b2 - OnBoarding</li> </ul>","title":"Guide"},{"location":"tags/#http-request","text":"<ul> <li>RabbitMQ</li> </ul>","title":"HTTP Request"},{"location":"tags/#http-requests","text":"<ul> <li>Making HTTP Requests</li> </ul>","title":"HTTP Requests"},{"location":"tags/#help","text":"<ul> <li>Enable Feedback Function</li> <li>Enable Feedback Function</li> </ul>","title":"Help"},{"location":"tags/#homepage","text":"<ul> <li>Dashboard</li> <li>Deployment</li> <li>User Dashboard</li> </ul>","title":"Homepage"},{"location":"tags/#how-to","text":"<ul> <li>Creating nodes</li> </ul>","title":"How To"},{"location":"tags/#how-to_1","text":"<ul> <li>Workflow\u00b2 combined with MAUTIC</li> <li>Workflow\u00b2 combined with MAUTIC</li> </ul>","title":"How-To"},{"location":"tags/#idm","text":"<ul> <li>Watchdog Configuration</li> <li>How to create a IDM mapping file</li> <li>Export to Infor IDM</li> <li>Export to Infor ION and IDM</li> </ul>","title":"IDM"},{"location":"tags/#ion","text":"<ul> <li>How to create an Infor ION file</li> <li>Export to Infor ION and IDM</li> </ul>","title":"ION"},{"location":"tags/#import","text":"<ul> <li>E-Mail</li> <li>Fileshare Import</li> <li>Import</li> <li>Manual Import</li> </ul>","title":"Import"},{"location":"tags/#importing-documents","text":"<ul> <li>Import from DOC\u00b2</li> </ul>","title":"Importing documents"},{"location":"tags/#infor","text":"<ul> <li>Configuring SSO in Infor Cloud</li> <li>Export</li> <li>DOC\u00b2 to Infor OS</li> <li>How to create a BOD mapping file</li> <li>How to create a IDM mapping file</li> <li>Export to Infor IDM</li> <li>Export to Infor ION and IDM</li> <li>PO Matching</li> <li>Infor BOD Mapping</li> </ul>","title":"Infor"},{"location":"tags/#infor-cloudsuite","text":"<ul> <li>Infor BOD Mapping</li> </ul>","title":"Infor CloudSuite"},{"location":"tags/#infor-ln","text":"<ul> <li>DOC\u00b2 - Infor Use Cases</li> <li>Infor BOD Mapping</li> </ul>","title":"Infor LN"},{"location":"tags/#infor-m3","text":"<ul> <li>DOC\u00b2 - Infor Use Cases</li> <li>Infor BOD Mapping</li> </ul>","title":"Infor M3"},{"location":"tags/#infor-os","text":"<ul> <li>Export to Infor ION and IDM</li> <li>WF\u00b2 Approval with Doc\u00b2</li> </ul>","title":"Infor OS"},{"location":"tags/#initial-setup","text":"<ul> <li>DOC\u00b2 - OnBoarding</li> </ul>","title":"Initial Setup"},{"location":"tags/#insight2","text":"<ul> <li>Insight\u00b2 Action</li> <li>Insight\u00b2 Data Source</li> </ul>","title":"Insight\u00b2"},{"location":"tags/#installation","text":"<ul> <li>Installation &amp; Config</li> <li>Installation &amp; Config</li> <li>TE\u00b2 Installation &amp; Config</li> </ul>","title":"Installation"},{"location":"tags/#introduction","text":"<ul> <li>Welcome to FLOW\u00b2</li> </ul>","title":"Introduction"},{"location":"tags/#invoice","text":"<ul> <li>PO Matching - Invoices</li> </ul>","title":"Invoice"},{"location":"tags/#items","text":"<ul> <li>Items</li> </ul>","title":"Items"},{"location":"tags/#kv2","text":"<ul> <li>All extracted fields</li> <li>KV\u00b2 - Getting Started</li> <li>How to deal with different VAT amounts</li> <li>How to delete a KV\u00b2Plugin rule from the Database</li> <li>Installation &amp; Config</li> <li>KV\u00b2 Tutorial</li> <li>Limitations of KV\u00b2 Plugin</li> <li>Training KV2 for Table Extraction</li> </ul>","title":"KV\u00b2"},{"location":"tags/#kv2-plugin","text":"<ul> <li>Restart Ephesoft on Cloud</li> <li>Restart Ephesoft On Premise</li> </ul>","title":"KV\u00b2 Plugin"},{"location":"tags/#kafka","text":"<ul> <li>Kafka</li> </ul>","title":"Kafka"},{"location":"tags/#keyboard","text":"<ul> <li>Keyboard</li> </ul>","title":"Keyboard"},{"location":"tags/#ln","text":"<ul> <li>Watchdog Configuration</li> <li>PO Matching - Invoices</li> </ul>","title":"LN"},{"location":"tags/#learn-the-basics","text":"<ul> <li>Welcome to Workflow\u00b2</li> </ul>","title":"Learn the basics"},{"location":"tags/#license","text":"<ul> <li>License</li> </ul>","title":"License"},{"location":"tags/#limitations","text":"<ul> <li>Limitations of KV\u00b2 Plugin</li> </ul>","title":"Limitations"},{"location":"tags/#line-items","text":"<ul> <li>Table Extraction</li> </ul>","title":"Line Items"},{"location":"tags/#linux","text":"<ul> <li>Watchdog for Linux</li> </ul>","title":"Linux"},{"location":"tags/#local-export","text":"<ul> <li>Watchdog Configuration</li> </ul>","title":"Local Export"},{"location":"tags/#mautic","text":"<ul> <li>Workflow\u00b2 combined with MAUTIC</li> <li>Workflow\u00b2 combined with MAUTIC</li> </ul>","title":"MAUTIC"},{"location":"tags/#mapping","text":"<ul> <li>Extracted fields</li> <li>Mapping of columns</li> <li>How to create a BOD mapping file</li> <li>How to create a IDM mapping file</li> <li>Infor BOD Mapping</li> </ul>","title":"Mapping"},{"location":"tags/#master-data-validation","text":"<ul> <li>Master Data Validation</li> </ul>","title":"Master Data Validation"},{"location":"tags/#master-data-validation_1","text":"<ul> <li>Master data validation</li> </ul>","title":"Master data validation"},{"location":"tags/#metadata","text":"<ul> <li>Metadata</li> </ul>","title":"Metadata"},{"location":"tags/#mindee","text":"<ul> <li>Mindee</li> </ul>","title":"Mindee"},{"location":"tags/#mingle","text":"<ul> <li>WF\u00b2 Approval with Doc\u00b2</li> </ul>","title":"Ming.le"},{"location":"tags/#modules","text":"<ul> <li>Modules</li> </ul>","title":"Modules"},{"location":"tags/#netlify","text":"<ul> <li>Netlify</li> </ul>","title":"Netlify"},{"location":"tags/#node","text":"<ul> <li>Node</li> </ul>","title":"Node"},{"location":"tags/#node-reference","text":"<ul> <li>Cron</li> </ul>","title":"Node Reference"},{"location":"tags/#ocr","text":"<ul> <li>OCR View</li> <li>Detect inside pages</li> <li>Getting Started</li> <li>OCR API</li> <li>OCR Server Process</li> </ul>","title":"OCR"},{"location":"tags/#ocr-api","text":"<ul> <li>Installation &amp; Config</li> </ul>","title":"OCR API"},{"location":"tags/#ocr-server","text":"<ul> <li>Overview</li> </ul>","title":"OCR Server"},{"location":"tags/#ocr2","text":"<ul> <li>Installation &amp; Config</li> </ul>","title":"OCR\u00b2"},{"location":"tags/#on-prem","text":"<ul> <li>Restart Ephesoft On Premise</li> </ul>","title":"On Prem"},{"location":"tags/#onboarding","text":"<ul> <li>DOC\u00b2 - OnBoarding</li> </ul>","title":"OnBoarding"},{"location":"tags/#onboarding-guide","text":"<ul> <li>FLOW\u00b2 Onboarding Guide</li> </ul>","title":"Onboarding Guide"},{"location":"tags/#order-confirmation","text":"<ul> <li>PO Matching - Order Confirmation</li> </ul>","title":"Order Confirmation"},{"location":"tags/#other-settings","text":"<ul> <li>General Settings</li> </ul>","title":"Other Settings"},{"location":"tags/#overview","text":"<ul> <li>Dashboard</li> <li>Deployment</li> <li>Workflow\u00b2 - Overview</li> </ul>","title":"Overview"},{"location":"tags/#pdf","text":"<ul> <li>Merge/Split PDF</li> </ul>","title":"PDF"},{"location":"tags/#po-matching","text":"<ul> <li>DOC\u00b2 - Infor Use Cases</li> <li>Modules</li> <li>PO Matching - Delivery Notes</li> <li>PO Matching - Invoices</li> <li>PO Matching - Order Confirmation</li> <li>PO Matching</li> </ul>","title":"PO Matching"},{"location":"tags/#password","text":"<ul> <li>Users</li> </ul>","title":"Password"},{"location":"tags/#peppol","text":"<ul> <li>Company Information</li> <li>Zugferd and Peppol</li> </ul>","title":"Peppol"},{"location":"tags/#pipedrive","text":"<ul> <li>Pipedrive</li> </ul>","title":"Pipedrive"},{"location":"tags/#plugin","text":"<ul> <li>KV\u00b2 - Getting Started</li> <li>How to deal with different VAT amounts</li> <li>How to delete a KV\u00b2Plugin rule from the Database</li> <li>Installation &amp; Config</li> <li>KV\u00b2 Tutorial</li> <li>Limitations of KV\u00b2 Plugin</li> <li>Training KV2 for Table Extraction</li> <li>Ephesoft - External Application</li> <li>TE\u00b2 Plugin</li> <li>TE\u00b2 Tutorial</li> <li>TE\u00b2 Installation &amp; Config</li> <li>Infor BOD Mapping</li> </ul>","title":"Plugin"},{"location":"tags/#postgres","text":"<ul> <li>Postgres</li> </ul>","title":"Postgres"},{"location":"tags/#prerequisites-kafka","text":"<ul> <li>Kafka</li> </ul>","title":"Prerequisites Kafka"},{"location":"tags/#prerequisites-mindee","text":"<ul> <li>Mindee</li> </ul>","title":"Prerequisites Mindee"},{"location":"tags/#prerequisites-netlify","text":"<ul> <li>Netlify</li> </ul>","title":"Prerequisites Netlify"},{"location":"tags/#prerequisites-postgres","text":"<ul> <li>Postgres</li> </ul>","title":"Prerequisites Postgres"},{"location":"tags/#prerequisites-rabbitmq","text":"<ul> <li>RabbitMQ</li> </ul>","title":"Prerequisites RabbitMQ"},{"location":"tags/#prerequisites-strapi","text":"<ul> <li>Strapi</li> </ul>","title":"Prerequisites Strapi"},{"location":"tags/#prerequisites-xero","text":"<ul> <li>Xero</li> </ul>","title":"Prerequisites Xero"},{"location":"tags/#purchase-order","text":"<ul> <li>Modules</li> </ul>","title":"Purchase Order"},{"location":"tags/#rss-read","text":"<ul> <li>RSS Read</li> </ul>","title":"RSS Read"},{"location":"tags/#rabbitmq","text":"<ul> <li>RabbitMQ</li> <li>RabbitMQ</li> </ul>","title":"RabbitMQ"},{"location":"tags/#read-binary-files","text":"<ul> <li>Read Binary Files</li> </ul>","title":"Read Binary Files"},{"location":"tags/#read-pdf","text":"<ul> <li>Read PDF</li> </ul>","title":"Read PDF"},{"location":"tags/#rename","text":"<ul> <li>Rename JSON Key</li> </ul>","title":"Rename"},{"location":"tags/#rename-keys","text":"<ul> <li>Rename Keys</li> </ul>","title":"Rename Keys"},{"location":"tags/#repository","text":"<ul> <li>TE\u00b2 Plugin</li> </ul>","title":"Repository"},{"location":"tags/#respond-to-webhook","text":"<ul> <li>Respond to Webhook</li> </ul>","title":"Respond to Webhook"},{"location":"tags/#restart","text":"<ul> <li>Restart Ephesoft on Cloud</li> <li>Restart Ephesoft On Premise</li> </ul>","title":"Restart"},{"location":"tags/#rounding-errors","text":"<ul> <li>Amount Settings</li> </ul>","title":"Rounding Errors"},{"location":"tags/#row","text":"<ul> <li>Manual row selection</li> </ul>","title":"Row"},{"location":"tags/#rules","text":"<ul> <li>Save and delete rules</li> </ul>","title":"Rules"},{"location":"tags/#sse-trigger","text":"<ul> <li>SSE Trigger</li> </ul>","title":"SSE Trigger"},{"location":"tags/#ssh","text":"<ul> <li>SSH</li> </ul>","title":"SSH"},{"location":"tags/#sso","text":"<ul> <li>Configuring SSO in Infor Cloud</li> <li>SSO Settings</li> </ul>","title":"SSO"},{"location":"tags/#salesforce","text":"<ul> <li>Salesforce</li> </ul>","title":"Salesforce"},{"location":"tags/#salesmate","text":"<ul> <li>Salesmate</li> </ul>","title":"Salesmate"},{"location":"tags/#save","text":"<ul> <li>Save and delete rules</li> </ul>","title":"Save"},{"location":"tags/#seatable","text":"<ul> <li>SeaTable</li> </ul>","title":"SeaTable"},{"location":"tags/#securityscorecard","text":"<ul> <li>SecurityScorecard</li> </ul>","title":"SecurityScorecard"},{"location":"tags/#segment","text":"<ul> <li>Segment</li> </ul>","title":"Segment"},{"location":"tags/#selection","text":"<ul> <li>Manual row selection</li> </ul>","title":"Selection"},{"location":"tags/#send-email","text":"<ul> <li>Send Email</li> <li>Send Email</li> </ul>","title":"Send Email"},{"location":"tags/#sendgrid","text":"<ul> <li>SendGrid</li> </ul>","title":"SendGrid"},{"location":"tags/#sendy","text":"<ul> <li>Sendy</li> </ul>","title":"Sendy"},{"location":"tags/#server","text":"<ul> <li>OCR Server Process</li> </ul>","title":"Server"},{"location":"tags/#set","text":"<ul> <li>Set</li> </ul>","title":"Set"},{"location":"tags/#settings","text":"<ul> <li>Company Information</li> <li>Modules</li> <li>Amount Settings</li> <li>API</li> <li>Document Types</li> <li>Master Data Validation</li> <li>SSO Settings</li> <li>Users</li> <li>How to create an Infor ION file</li> <li>Export to FLOW\u00b2</li> <li>Advanced settings for table extraction</li> </ul>","title":"Settings"},{"location":"tags/#split-in-batches","text":"<ul> <li>Split In Batches</li> </ul>","title":"Split In Batches"},{"location":"tags/#spotify","text":"<ul> <li>Spotify</li> </ul>","title":"Spotify"},{"location":"tags/#spreadsheet-file","text":"<ul> <li>Spreadsheet File</li> </ul>","title":"Spreadsheet File"},{"location":"tags/#stackby","text":"<ul> <li>Stackby</li> </ul>","title":"Stackby"},{"location":"tags/#start","text":"<ul> <li>Getting Started</li> <li>Start</li> </ul>","title":"Start"},{"location":"tags/#stop-and-error","text":"<ul> <li>Stop And Error</li> </ul>","title":"Stop And Error"},{"location":"tags/#storyblok","text":"<ul> <li>Storyblok</li> </ul>","title":"Storyblok"},{"location":"tags/#strapi","text":"<ul> <li>Strapi</li> <li>Strapi</li> </ul>","title":"Strapi"},{"location":"tags/#strava","text":"<ul> <li>Strava</li> </ul>","title":"Strava"},{"location":"tags/#stripe","text":"<ul> <li>Stripe</li> </ul>","title":"Stripe"},{"location":"tags/#subscription","text":"<ul> <li>General Settings</li> </ul>","title":"Subscription"},{"location":"tags/#sugar","text":"<ul> <li>SugarCRM</li> </ul>","title":"Sugar"},{"location":"tags/#sugarcrm","text":"<ul> <li>SugarCRM</li> </ul>","title":"SugarCRM"},{"location":"tags/#supabase","text":"<ul> <li>Supabase</li> </ul>","title":"Supabase"},{"location":"tags/#switch","text":"<ul> <li>Switch</li> </ul>","title":"Switch"},{"location":"tags/#syncromsp","text":"<ul> <li>SyncroMSP</li> </ul>","title":"SyncroMSP"},{"location":"tags/#system-setup","text":"<ul> <li>System Setup</li> </ul>","title":"System Setup"},{"location":"tags/#te2","text":"<ul> <li>Ephesoft - External Application</li> <li>TE\u00b2 Plugin</li> <li>TE\u00b2 Tutorial</li> <li>TE\u00b2 Installation &amp; Config</li> <li>Infor BOD Mapping</li> </ul>","title":"TE\u00b2"},{"location":"tags/#table","text":"<ul> <li>Add new table column</li> <li>Advanced settings for table extraction</li> <li>Define tables and columns</li> <li>Table Extraction</li> <li>Training for Table Extraction</li> </ul>","title":"Table"},{"location":"tags/#table-extraction","text":"<ul> <li>Mapping of columns</li> <li>Modules</li> <li>Group function to extract data from tables</li> <li>Manual row selection</li> <li>Save and delete rules</li> <li>Training KV2 for Table Extraction</li> <li>Ephesoft - External Application</li> <li>TE\u00b2 Plugin</li> <li>TE\u00b2 Tutorial</li> <li>TE\u00b2 Installation &amp; Config</li> </ul>","title":"Table Extraction"},{"location":"tags/#tables","text":"<ul> <li>Group function to extract data from tables</li> </ul>","title":"Tables"},{"location":"tags/#taiga","text":"<ul> <li>Taiga</li> </ul>","title":"Taiga"},{"location":"tags/#tapfiliate","text":"<ul> <li>Tapfiliate</li> </ul>","title":"Tapfiliate"},{"location":"tags/#telegram","text":"<ul> <li>Telegram</li> </ul>","title":"Telegram"},{"location":"tags/#thehive","text":"<ul> <li>TheHive</li> </ul>","title":"TheHive"},{"location":"tags/#timescaledb","text":"<ul> <li>TimescaleDB</li> </ul>","title":"TimescaleDB"},{"location":"tags/#todoist","text":"<ul> <li>Todoist</li> </ul>","title":"Todoist"},{"location":"tags/#training","text":"<ul> <li>Mapping of columns</li> <li>Training for Table Extraction</li> <li>Training KV2 for Table Extraction</li> <li>Ephesoft - External Application</li> </ul>","title":"Training"},{"location":"tags/#transact","text":"<ul> <li>Restart Ephesoft on Cloud</li> </ul>","title":"Transact"},{"location":"tags/#transforming-data","text":"<ul> <li>Overview - Mapping and transforming data</li> </ul>","title":"Transforming data"},{"location":"tags/#travis-ci","text":"<ul> <li>Travis CI</li> </ul>","title":"Travis CI"},{"location":"tags/#trello","text":"<ul> <li>Trello</li> </ul>","title":"Trello"},{"location":"tags/#tutorial","text":"<ul> <li>KV\u00b2 Tutorial</li> </ul>","title":"Tutorial"},{"location":"tags/#twake","text":"<ul> <li>Twake</li> </ul>","title":"Twake"},{"location":"tags/#twilio","text":"<ul> <li>Twilio</li> </ul>","title":"Twilio"},{"location":"tags/#twist","text":"<ul> <li>Twist</li> </ul>","title":"Twist"},{"location":"tags/#twitter","text":"<ul> <li>Twitter</li> <li>Twitter</li> </ul>","title":"Twitter"},{"location":"tags/#typeform","text":"<ul> <li>Typeform</li> </ul>","title":"Typeform"},{"location":"tags/#understanding-document-review","text":"<ul> <li>DOC\u00b2 - OnBoarding</li> </ul>","title":"Understanding Document Review"},{"location":"tags/#unleashed-software","text":"<ul> <li>Unleashed Software</li> </ul>","title":"Unleashed Software"},{"location":"tags/#uplead","text":"<ul> <li>UpLead</li> <li>UpLead</li> </ul>","title":"UpLead"},{"location":"tags/#uptimerobot","text":"<ul> <li>UptimeRobot</li> <li>UptimeRobot</li> </ul>","title":"UptimeRobot"},{"location":"tags/#use-cases","text":"<ul> <li>DOC\u00b2 - Infor Use Cases</li> </ul>","title":"Use Cases"},{"location":"tags/#users","text":"<ul> <li>Users</li> </ul>","title":"Users"},{"location":"tags/#using-api","text":"<ul> <li>Strapi</li> </ul>","title":"Using API"},{"location":"tags/#using-api-key","text":"<ul> <li>Mindee</li> </ul>","title":"Using API Key"},{"location":"tags/#using-database-connection","text":"<ul> <li>Postgres</li> </ul>","title":"Using Database Connection"},{"location":"tags/#using-oauth","text":"<ul> <li>Xero</li> </ul>","title":"Using OAuth"},{"location":"tags/#using-code","text":"<ul> <li>Overview - Mapping and transforming data</li> </ul>","title":"Using code"},{"location":"tags/#vat","text":"<ul> <li>How to deal with different VAT amounts</li> </ul>","title":"VAT"},{"location":"tags/#validation","text":"<ul> <li>Document Validation</li> </ul>","title":"Validation"},{"location":"tags/#vero","text":"<ul> <li>Vero</li> <li>Vero</li> </ul>","title":"Vero"},{"location":"tags/#vonage","text":"<ul> <li>Vonage</li> <li>Vonage</li> </ul>","title":"Vonage"},{"location":"tags/#wait","text":"<ul> <li>Wait</li> </ul>","title":"Wait"},{"location":"tags/#watchdog","text":"<ul> <li>Watchdog for Linux</li> <li>Watchdog for Windows</li> <li>Watchdog Configuration</li> </ul>","title":"Watchdog"},{"location":"tags/#weather","text":"<ul> <li>Workflows for Weather Forecast</li> <li>Weather</li> <li>Weather</li> </ul>","title":"Weather"},{"location":"tags/#webex-by-cisco","text":"<ul> <li>Webex by Cisco</li> </ul>","title":"Webex by Cisco"},{"location":"tags/#webflow","text":"<ul> <li>Webflow</li> <li>Webflow</li> </ul>","title":"Webflow"},{"location":"tags/#webhook","text":"<ul> <li>Export</li> <li>Webhook</li> <li>Workflows for Weather Forecast</li> <li>Weather</li> <li>Webhook</li> </ul>","title":"Webhook"},{"location":"tags/#wekan","text":"<ul> <li>Wekan</li> <li>Wekan</li> </ul>","title":"Wekan"},{"location":"tags/#windows","text":"<ul> <li>Watchdog for Windows</li> </ul>","title":"Windows"},{"location":"tags/#wise","text":"<ul> <li>Wise</li> <li>Wise</li> </ul>","title":"Wise"},{"location":"tags/#woocommerce","text":"<ul> <li>WooCommerce</li> </ul>","title":"WooCommerce"},{"location":"tags/#wordpress","text":"<ul> <li>WordPress</li> </ul>","title":"WordPress"},{"location":"tags/#workflow","text":"<ul> <li>Workflow\u00b2 Examples</li> <li>Welcome to Workflow\u00b2</li> <li>Welcome to Workflow\u00b2</li> <li>Overview - Mapping and transforming data</li> <li>Overview</li> </ul>","title":"Workflow"},{"location":"tags/#workflow-trigger","text":"<ul> <li>Workflow Trigger</li> </ul>","title":"Workflow Trigger"},{"location":"tags/#workflow-notes","text":"<ul> <li>Workflow notes</li> </ul>","title":"Workflow notes"},{"location":"tags/#workflow2","text":"<ul> <li>DOC\u00b2 with Workflow\u00b2</li> <li>WF\u00b2 Approval with Doc\u00b2</li> <li>Doc\u00b2 export to Excel</li> <li>Rename JSON Key</li> <li>Workflow\u00b2 combined with MAUTIC</li> <li>Workflow\u00b2 combined with MAUTIC</li> <li>Export Doc2 to Google Drive</li> <li>Activate Workflow</li> <li>Configuring DOC\u00b2 App Status Trigger node</li> <li>Configuring Google Drive node</li> <li>Create blank workflow</li> <li>Workflows for Weather Forecast</li> <li>Weather</li> <li>Weather</li> <li>Code Example</li> <li>Code Example - Query JSON</li> <li>Error handling</li> <li>Looping</li> <li>Merging</li> <li>Activation Trigger</li> <li>Cron</li> <li>Date &amp; Time</li> <li>Execute Command</li> <li>FTP</li> <li>Function</li> <li>Function Item</li> <li>GraphQL</li> <li>Read Binary Files</li> <li>Read PDF</li> <li>Rename Keys</li> <li>Respond to Webhook</li> <li>RSS Read</li> <li>Send Email</li> <li>Set</li> <li>Split In Batches</li> <li>Spreadsheet File</li> <li>SSE Trigger</li> <li>SSH</li> <li>Start</li> <li>Stop And Error</li> <li>Switch</li> <li>Wait</li> <li>Webhook</li> <li>Workflow Trigger</li> <li>Write Binary File</li> <li>XML</li> <li>Creating nodes</li> <li>Making HTTP Requests</li> <li>Action Network</li> <li>ActiveCampaign</li> <li>Affinity</li> <li>Agile CRM</li> <li>Airtable</li> <li>AMQP</li> <li>APITemplate.io</li> <li>Asana</li> <li>Automizy</li> <li>Autopilot</li> <li>AWS</li> <li>BambooHR</li> <li>Bannerbear</li> <li>Baserow</li> <li>Beeminder</li> <li>Bitbucket</li> <li>Bitly</li> <li>Bitwarden</li> <li>Box</li> <li>Brandfetch</li> <li>Bubble</li> <li>Calendly</li> <li>Chargebee</li> <li>CircleCI</li> <li>Webex by Cisco</li> <li>Clearbit</li> <li>ClickUp</li> <li>Clockify</li> <li>Cockpit</li> <li>Coda</li> <li>Kafka</li> <li>Mindee</li> <li>Netlify</li> <li>Postgres</li> <li>RabbitMQ</li> <li>Salesforce</li> <li>Salesmate</li> <li>SeaTable</li> <li>SecurityScorecard</li> <li>Segment</li> <li>Send Email</li> <li>SendGrid</li> <li>Sendy</li> <li>Strapi</li> <li>Twitter</li> <li>Typeform</li> <li>uProc</li> <li>UpLead</li> <li>UptimeRobot</li> <li>urlscan.io</li> <li>Vero</li> <li>Vonage</li> <li>Webflow</li> <li>Wekan</li> <li>Wise</li> <li>Xero</li> <li>Action Network</li> <li>Discord</li> <li>Pipedrive</li> <li>RabbitMQ</li> <li>Spotify</li> <li>Stackby</li> <li>Storyblok</li> <li>Strapi</li> <li>Strava</li> <li>Stripe</li> <li>SugarCRM</li> <li>Supabase</li> <li>SyncroMSP</li> <li>Taiga</li> <li>Tapfiliate</li> <li>Telegram</li> <li>TheHive</li> <li>TimescaleDB</li> <li>Todoist</li> <li>Travis CI</li> <li>Trello</li> <li>Twake</li> <li>Twilio</li> <li>Twist</li> <li>Twitter</li> <li>Unleashed Software</li> <li>UpLead</li> <li>uProc</li> <li>UptimeRobot</li> <li>urlscan.io</li> <li>Vero</li> <li>Vonage</li> <li>Webflow</li> <li>Wekan</li> <li>Wise</li> <li>WooCommerce</li> <li>WordPress</li> <li>Xero</li> <li>YouTube</li> <li>Yourls</li> <li>Zammad</li> <li>Zendesk</li> <li>Zoho CRM</li> <li>Zoom</li> <li>License</li> <li>Workflow\u00b2 - Overview</li> <li>Connection</li> <li>Items</li> <li>Node</li> <li>Workflow notes</li> <li>Workflow</li> </ul>","title":"Workflow\u00b2"},{"location":"tags/#write-binary-file","text":"<ul> <li>Write Binary File</li> </ul>","title":"Write Binary File"},{"location":"tags/#xml","text":"<ul> <li>XML</li> </ul>","title":"XML"},{"location":"tags/#xero","text":"<ul> <li>Xero</li> <li>Xero</li> </ul>","title":"Xero"},{"location":"tags/#youtube","text":"<ul> <li>YouTube</li> </ul>","title":"YouTube"},{"location":"tags/#yourls","text":"<ul> <li>Yourls</li> </ul>","title":"Yourls"},{"location":"tags/#zammad","text":"<ul> <li>Zammad</li> </ul>","title":"Zammad"},{"location":"tags/#zendesk","text":"<ul> <li>Zendesk</li> </ul>","title":"Zendesk"},{"location":"tags/#zoho-crm","text":"<ul> <li>Zoho CRM</li> </ul>","title":"Zoho CRM"},{"location":"tags/#zoom","text":"<ul> <li>Zoom</li> </ul>","title":"Zoom"},{"location":"tags/#zugferd","text":"<ul> <li>Company Information</li> <li>Zugferd and Peppol</li> </ul>","title":"Zugferd"},{"location":"tags/#create","text":"<ul> <li>Creating nodes</li> </ul>","title":"create"},{"location":"tags/#delete-rules","text":"<ul> <li>How to delete a KV\u00b2Plugin rule from the Database</li> </ul>","title":"delete rules"},{"location":"tags/#document-management-system-dms","text":"<ul> <li>Getting Started</li> </ul>","title":"document management system (DMS)"},{"location":"tags/#extract","text":"<ul> <li>Getting Started</li> </ul>","title":"extract"},{"location":"tags/#manual-import","text":"<ul> <li>Import</li> </ul>","title":"manual Import"},{"location":"tags/#manually","text":"<ul> <li>Manual row selection</li> </ul>","title":"manually"},{"location":"tags/#metadata_1","text":"<ul> <li>Getting Started</li> </ul>","title":"metadata"},{"location":"tags/#n8n","text":"<ul> <li>License</li> </ul>","title":"n8n"},{"location":"tags/#new-service-provider","text":"<ul> <li>Configuring SSO in Infor Cloud</li> </ul>","title":"new service provider"},{"location":"tags/#nodes","text":"<ul> <li>Creating nodes</li> <li>Overview</li> </ul>","title":"nodes"},{"location":"tags/#transform-regular-documents-into-ocrd-ones","text":"<ul> <li>Overview</li> </ul>","title":"transform regular documents into OCR'd ones"},{"location":"tags/#uproc","text":"<ul> <li>uProc</li> <li>uProc</li> </ul>","title":"uProc"},{"location":"tags/#urlscanio","text":"<ul> <li>urlscan.io</li> <li>urlscan.io</li> </ul>","title":"urlscan.io"}]}