{
    "author": "Lint Action",
    "week": "2023-W13",
    "total_commits": 5,
    "author_image": "https://avatars.githubusercontent.com/u/59283862?v=4",
    "commits": [
        {
            "sha": "81ce7491818c56ba2b9989179249d2271eed4c24",
            "message": "Fix code style issues with Black",
            "code_changes": "@@ -76,14 +76,18 @@ def transform_ai_response(ai_resp_json):\n         indexIncrement = 0\n         pageNumberIncrement = 0\n         for resp_json in ai_resp_json:\n-            hocr_content = resp_json.get(\"document\",{}).get(\"text\", \"\")\n+            hocr_content = resp_json.get(\"document\", {}).get(\"text\", \"\")\n             pageStartIndex = 0\n             pageEndIndex = 0\n-            for index, page in enumerate(resp_json.get(\"document\",{}).get(\"pages\", [])):\n+            for index, page in enumerate(\n+                resp_json.get(\"document\", {}).get(\"pages\", [])\n+            ):\n                 if (\n-                    not \"width\" in page.get(\"dimension\", {}) and not \"width\" in page.get(\"image\", {})\n+                    not \"width\" in page.get(\"dimension\", {})\n+                    and not \"width\" in page.get(\"image\", {})\n                 ) or (\n-                    not \"height\" in page.get(\"dimension\", {}) and not \"height\" in page.get(\"image\", {})\n+                    not \"height\" in page.get(\"dimension\", {})\n+                    and not \"height\" in page.get(\"image\", {})\n                 ):\n                     continue\n                 width = page[\"dimension\"].get(\"width\", page[\"image\"][\"width\"])\n@@ -202,7 +206,7 @@ def get_detailed_images(ai_resp_json):\n         images = []\n         page_number = 1\n         for resp_json in ai_resp_json:\n-            document = resp_json.get(\"document\",{})\n+            document = resp_json.get(\"document\", {})\n             ai_pages = document.get(\"pages\", [])\n \n             for ai_page in ai_pages:"
        },
        {
            "sha": "b7c8a1b7b2630fb97732972ab37ef3888889698f",
            "message": "Fix code style issues with Black",
            "code_changes": "@@ -262,4 +262,3 @@ def remove_unused_attributes(table):\n     # for row in rows:\n     #     row.pop(\"content\", None)\n     return table\n-"
        },
        {
            "sha": "bb9e04b64052045a80d5edbd3e88abc7bf9bff83",
            "message": "Fix code style issues with Black",
            "code_changes": "@@ -262,4 +262,3 @@ def remove_unused_attributes(table):\n     # for row in rows:\n     #     row.pop(\"content\", None)\n     return table\n-"
        },
        {
            "sha": "b5727e98f7a6fa6c71d32ab27b80c174aacea922",
            "message": "Fix code style issues with Black",
            "code_changes": "@@ -5,11 +5,12 @@\n from fellow2kv.extension import storagemanager_doc2\n from helper import util\n from helper.ai import ocr_process_util, ocr_processor\n-from helper.ai.ai_invoice import (transform_dict_to_array,\n-                                  transform_fields_to_dict)\n+from helper.ai.ai_invoice import transform_dict_to_array, transform_fields_to_dict\n from helper.extract_util import Extractor\n-from helper.plugin_extraction_util import (extract_table_column_fields,\n-                                           get_table_column_rules_from_db)\n+from helper.plugin_extraction_util import (\n+    extract_table_column_fields,\n+    get_table_column_rules_from_db,\n+)\n from helper.table_extractors import common_table_helper, table_draft_helper\n from logger import get_logger\n from vendor_specific.nedschroef import check_grundpreis\n@@ -252,9 +253,10 @@ def get_locations_array_from_match(match):\n         }\n     ]\n \n+\n def remove_unused_attributes(table):\n     table.pop(\"content\", None)\n     rows = table.get(\"rows\", [])\n     for row in rows:\n         row.pop(\"content\", None)\n-    return table\n\\ No newline at end of file\n+    return table"
        },
        {
            "sha": "f3dc4a4a4a46c776e5765a939ce946239664b3b8",
            "message": "Fix code style issues with Black",
            "code_changes": "@@ -65,7 +65,6 @@ def populate_custom_lines(document):\n                     if len([t for t in page[\"tokens\"] if t[\"x0\"] < token[\"x1\"]]) < 5:\n                         token[\"is_deleted\"] = True\n \n-\n             last_tokens = [\n                 t\n                 for t in page[\"tokens\"]\n@@ -81,7 +80,9 @@ def populate_custom_lines(document):\n                 #     if t[\"x0\"] <= width * (1 - remove_boundry_width_percentage)\n                 # ]\n \n-            page[\"tokens\"] = [t for t in page[\"tokens\"] if not t.get(\"is_deleted\", False)]\n+            page[\"tokens\"] = [\n+                t for t in page[\"tokens\"] if not t.get(\"is_deleted\", False)\n+            ]\n         tokens = page[\"tokens\"]\n         tokens = sorted(tokens, key=lambda d: d[\"x1\"])\n "
        }
    ]
}