{
    "author": "Lint Action",
    "week": "2023-W19",
    "total_commits": 3,
    "author_image": "https://avatars.githubusercontent.com/u/59283862?v=4",
    "commits": [
        {
            "sha": "d214fe5524ffd90f8e160f2b40afaa1b52493028",
            "message": "Fix code style issues with Black",
            "code_changes": "@@ -19,6 +19,7 @@\n \n ERODED_STANDARD_FILL_RATIO = 13.26150272572172\n \n+\n @multiple_attempts(max_attempts=3)\n def get_image_from_url(img_url):\n     # Downloads image from url and returns cv2 image."
        },
        {
            "sha": "79cea5e646c44115505ab0ad5827379546822a71",
            "message": "Fix code style issues with Black",
            "code_changes": "@@ -52,44 +52,54 @@ def verify_token(token):\n             res = UserAuthentication.verify_auth_token(token)\n             return res\n \n-        from namespaces.block_table_extract import \\\n-            namespace as namespace_block_table_extract\n+        from namespaces.block_table_extract import (\n+            namespace as namespace_block_table_extract,\n+        )\n         from namespaces.cache import namespace as namespace_cache\n-        from namespaces.custom_classifier import \\\n-            namespace as namespace_custom_classifier\n-        from namespaces.custom_classifier_v2 import \\\n-            namespace as namespace_custom_classifier_v2\n-        from namespaces.custom_models.custom_model import \\\n-            namespace as namespace_custom_model_v2\n-        from namespaces.custom_models.custom_model_label import \\\n-            namespace as namespace_custom_model_labels_v2\n+        from namespaces.custom_classifier import (\n+            namespace as namespace_custom_classifier,\n+        )\n+        from namespaces.custom_classifier_v2 import (\n+            namespace as namespace_custom_classifier_v2,\n+        )\n+        from namespaces.custom_models.custom_model import (\n+            namespace as namespace_custom_model_v2,\n+        )\n+        from namespaces.custom_models.custom_model_label import (\n+            namespace as namespace_custom_model_labels_v2,\n+        )\n+\n         # from namespaces.db_import_export import namespace as namespace_db\n         from namespaces.doc2_v2 import namespace as namespace_doc2_v2\n-        from namespaces.document_and_fields import \\\n-            namespace as namespace_document_and_fields\n-        from namespaces.document_layout_template import \\\n-            namespace as namespace_document_layout_template\n-        from namespaces.document_table import \\\n-            namespace as namespace_document_table\n+        from namespaces.document_and_fields import (\n+            namespace as namespace_document_and_fields,\n+        )\n+        from namespaces.document_layout_template import (\n+            namespace as namespace_document_layout_template,\n+        )\n+        from namespaces.document_table import namespace as namespace_document_table\n         from namespaces.export import namespace as namespace_export\n         from namespaces.extract import namespace as namespace_extract\n         from namespaces.health import namespace as namespace_health\n         from namespaces.internal import namespace as namespace_internal\n-        from namespaces.list_of_values.list_of_values import \\\n-            namespace as namespace_list_of_values\n+        from namespaces.list_of_values.list_of_values import (\n+            namespace as namespace_list_of_values,\n+        )\n         from namespaces.migration import namespace as namespace_migration\n-        from namespaces.ocr_configurations import \\\n-            namespace as namespace_ocr_configurations\n+        from namespaces.ocr_configurations import (\n+            namespace as namespace_ocr_configurations,\n+        )\n         from namespaces.pdf import namespace as namespace_pdf\n         from namespaces.preferences import namespace as preferences\n \n-        from namespaces.process_document_new_system import \\\n-            namespace as namespace_new_system\n+        from namespaces.process_document_new_system import (\n+            namespace as namespace_new_system,\n+        )\n \n-        from namespaces.sub_document_type import \\\n-            namespace as namespace_sub_document_type\n-        from namespaces.table_extract_v3 import \\\n-            namespace as namespace_table_extract_v3\n+        from namespaces.sub_document_type import (\n+            namespace as namespace_sub_document_type,\n+        )\n+        from namespaces.table_extract_v3 import namespace as namespace_table_extract_v3\n \n         api.add_namespace(namespace_extract, path=\"/extract\")\n         api.add_namespace(namespace_export, path=\"/export\")\n@@ -121,7 +131,7 @@ def verify_token(token):\n         api.add_namespace(namespace_cache, path=\"/cache\")\n         api.add_namespace(namespace_health, path=\"/api\")\n \n-        #if config.IS_DEBUG:\n+        # if config.IS_DEBUG:\n         api.add_namespace(namespace_internal, path=\"/internal\")\n \n         from fellow2kv.cli.ml import ml_blueprint"
        },
        {
            "sha": "b5a6061c13289b8f929e490e43383269dafbe266",
            "message": "Fix code style issues with Black",
            "code_changes": "@@ -20,7 +20,7 @@ def rotate_simple(image, angle):\n \n \n def deskew_image(\n-    image_path, low_res_image_path=None \n+    image_path, low_res_image_path=None\n ):  # low res image = img_to_check_skew\n     \"\"\"\n     Deskews the image\n@@ -60,4 +60,4 @@ def get_skew_angle(image_path):\n \n     grayscale = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)\n     angle = determine_skew(grayscale)\n-    return angle\n\\ No newline at end of file\n+    return angle"
        }
    ]
}