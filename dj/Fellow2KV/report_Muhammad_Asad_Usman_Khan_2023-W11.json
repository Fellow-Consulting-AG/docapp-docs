{
    "author": "Muhammad Asad Usman Khan",
    "week": "2023-W11",
    "total_commits": 30,
    "author_image": "https://avatars.githubusercontent.com/u/83513548?v=4",
    "commits": [
        {
            "sha": "2d2dea2613c70e4193ea49b51773b50bfcadea0d",
            "message": "fd",
            "code_changes": "@@ -42,13 +42,12 @@ def populate_custom_lines(document):\n             db, \"REMOVE_BOUNDRY_TOKENS\", document.get(\"org_id\", None), True\n         )\n \n-        remove_boundry_width_percentage = float(\n-            gdvh.get_float_value(\n-                db, \"REMOVE_BOUNDRY_TOKENS\", document.get(\"org_id\", None), 0.05\n-            )\n-        )\n-\n         if remove_boundry_tokens:\n+            remove_boundry_width_percentage = float(\n+                gdvh.get_float_value(\n+                    db, \"REMOVE_BOUNDRY_TOKENS\", document.get(\"org_id\", None), 0.05\n+                )\n+            )\n             first_tokens = [\n                 t\n                 for t in page[\"tokens\"]"
        },
        {
            "sha": "954fafc76d7ebe25a3729b2808e85f0bc9025086",
            "message": "Merge pull request #824 from Fellow-Consulting-AG/stage\n\nStage",
            "code_changes": "@@ -9,14 +9,21 @@\n from fellow2kv.extension import db, storagemanager\n from helpdesk import create_new_customer, create_ticket\n from helper import doc2_util\n-from helper.ai.ai_ocr import (generate_hard_regex_from_string,\n-                              generate_regex_from_string)\n-from helper.util import (get_page, transform_from_normalized,\n-                         transform_from_normalized_coords_object)\n+from helper.ai.ai_ocr import generate_hard_regex_from_string, generate_regex_from_string\n+from helper.util import (\n+    get_page,\n+    transform_from_normalized,\n+    transform_from_normalized_coords_object,\n+)\n from logger import get_logger\n-from models import (DocOriginRules, FellowKVRule, FellowKVRuleUser,\n-                    FellowKVSourceFile, FellowKVTableColumnRule,\n-                    FellowKVTableRule)\n+from models import (\n+    DocOriginRules,\n+    FellowKVRule,\n+    FellowKVRuleUser,\n+    FellowKVSourceFile,\n+    FellowKVTableColumnRule,\n+    FellowKVTableRule,\n+)\n from models import TableFormattingRules as TFR\n from models import TfidfDocs\n "
        },
        {
            "sha": "a074a3aa331bd7d1e121293f0e91bbf3501c14dd",
            "message": "Merge pull request #823 from Fellow-Consulting-AG/dev\n\nfd",
            "code_changes": "@@ -2,14 +2,15 @@\n from datetime import datetime\n \n import camelot\n+import logtail\n+from sqlalchemy import or_\n+\n import helper.plugin_extraction_util as ext_util\n import helper.table_extractors.azure_table_extractor as ate\n-import logtail\n from fellow2kv.extension import db\n from helper import doc2_util\n from logger import get_logger\n from models import BlockTableExtraction\n-from sqlalchemy import or_\n \n logger = get_logger()\n \n@@ -30,6 +31,7 @@ def extract_tables(user, ai_ocr_document, document_path_local, table_name=\"table\n     logger.customer(\"Extraced Table using database rules\")\n \n     if not extracted_tables or len(extracted_tables) == 0:\n+        return []\n         extracted_tables = extract_tables_from_pdf(document_path_local)\n         extracted_tables = filter_tables_on_width(document_path_local, extracted_tables)\n         logger.customer(\"Rules from similar document used for rows and columns\")"
        },
        {
            "sha": "d3d94e129d44b1ccf4fd17a5ca3e769b44495da5",
            "message": "fd",
            "code_changes": "@@ -2,14 +2,15 @@\n from datetime import datetime\n \n import camelot\n+import logtail\n+from sqlalchemy import or_\n+\n import helper.plugin_extraction_util as ext_util\n import helper.table_extractors.azure_table_extractor as ate\n-import logtail\n from fellow2kv.extension import db\n from helper import doc2_util\n from logger import get_logger\n from models import BlockTableExtraction\n-from sqlalchemy import or_\n \n logger = get_logger()\n \n@@ -30,6 +31,7 @@ def extract_tables(user, ai_ocr_document, document_path_local, table_name=\"table\n     logger.customer(\"Extraced Table using database rules\")\n \n     if not extracted_tables or len(extracted_tables) == 0:\n+        return []\n         extracted_tables = extract_tables_from_pdf(document_path_local)\n         extracted_tables = filter_tables_on_width(document_path_local, extracted_tables)\n         logger.customer(\"Rules from similar document used for rows and columns\")"
        },
        {
            "sha": "d934486a9e048e4db04ba72778ecd3bbadca7ba2",
            "message": "Merge pull request #822 from Fellow-Consulting-AG/stage\n\nStage",
            "code_changes": "@@ -5,7 +5,9 @@\n from authenticator import UserAuthentication\n from helper.custom_classifier_v2 import common\n from helper.document_classifier.document_classifier import (\n-    extract_ocr_data, get_first_page_text)\n+    extract_ocr_data,\n+    get_first_page_text,\n+)\n from helper.pdf import get_page_count\n from helper.util import str_to_bool\n "
        },
        {
            "sha": "74bd4570199e2000e3e148219287b0de931d8d92",
            "message": "Merge pull request #821 from Fellow-Consulting-AG/dev\n\nfd",
            "code_changes": "@@ -9,21 +9,14 @@\n from fellow2kv.extension import db, storagemanager\n from helpdesk import create_new_customer, create_ticket\n from helper import doc2_util\n-from helper.ai.ai_ocr import generate_hard_regex_from_string, generate_regex_from_string\n-from helper.util import (\n-    get_page,\n-    transform_from_normalized,\n-    transform_from_normalized_coords_object,\n-)\n+from helper.ai.ai_ocr import (generate_hard_regex_from_string,\n+                              generate_regex_from_string)\n+from helper.util import (get_page, transform_from_normalized,\n+                         transform_from_normalized_coords_object)\n from logger import get_logger\n-from models import (\n-    DocOriginRules,\n-    FellowKVRule,\n-    FellowKVRuleUser,\n-    FellowKVSourceFile,\n-    FellowKVTableColumnRule,\n-    FellowKVTableRule,\n-)\n+from models import (DocOriginRules, FellowKVRule, FellowKVRuleUser,\n+                    FellowKVSourceFile, FellowKVTableColumnRule,\n+                    FellowKVTableRule)\n from models import TableFormattingRules as TFR\n from models import TfidfDocs\n \n@@ -1347,11 +1340,14 @@ def get_table_rules_for_export_v3(extractor, table):\n \n         if len(document.get(\"pages\")) == 1:\n             is_single_page = True\n-        elif pageNumber >= len(document.get(\"pages\")) - 1:\n+\n+        if pageNumber >= len(document.get(\"pages\")) - 1:\n             is_last_page = True  # as sometimes the final page is the second last\n-        elif pageNumber == 1:\n+\n+        if pageNumber == 1:\n             is_first_page = True\n-        elif pageNumber < len(document.get(\"pages\")):\n+\n+        if pageNumber < len(document.get(\"pages\")):\n             is_middle_page = True\n \n         width = page.get(\"width\", 0)"
        },
        {
            "sha": "4a1239f451ca103cbafd147ee2170bc68afa0db3",
            "message": "fd",
            "code_changes": "@@ -9,21 +9,14 @@\n from fellow2kv.extension import db, storagemanager\n from helpdesk import create_new_customer, create_ticket\n from helper import doc2_util\n-from helper.ai.ai_ocr import generate_hard_regex_from_string, generate_regex_from_string\n-from helper.util import (\n-    get_page,\n-    transform_from_normalized,\n-    transform_from_normalized_coords_object,\n-)\n+from helper.ai.ai_ocr import (generate_hard_regex_from_string,\n+                              generate_regex_from_string)\n+from helper.util import (get_page, transform_from_normalized,\n+                         transform_from_normalized_coords_object)\n from logger import get_logger\n-from models import (\n-    DocOriginRules,\n-    FellowKVRule,\n-    FellowKVRuleUser,\n-    FellowKVSourceFile,\n-    FellowKVTableColumnRule,\n-    FellowKVTableRule,\n-)\n+from models import (DocOriginRules, FellowKVRule, FellowKVRuleUser,\n+                    FellowKVSourceFile, FellowKVTableColumnRule,\n+                    FellowKVTableRule)\n from models import TableFormattingRules as TFR\n from models import TfidfDocs\n \n@@ -1347,11 +1340,14 @@ def get_table_rules_for_export_v3(extractor, table):\n \n         if len(document.get(\"pages\")) == 1:\n             is_single_page = True\n-        elif pageNumber >= len(document.get(\"pages\")) - 1:\n+\n+        if pageNumber >= len(document.get(\"pages\")) - 1:\n             is_last_page = True  # as sometimes the final page is the second last\n-        elif pageNumber == 1:\n+\n+        if pageNumber == 1:\n             is_first_page = True\n-        elif pageNumber < len(document.get(\"pages\")):\n+\n+        if pageNumber < len(document.get(\"pages\")):\n             is_middle_page = True\n \n         width = page.get(\"width\", 0)"
        },
        {
            "sha": "b4f7e9a01095588c020a8ffd6460f7fa285ea931",
            "message": "Merge pull request #818 from Fellow-Consulting-AG/stage\n\nStage",
            "code_changes": "@@ -52,42 +52,49 @@ def verify_token(token):\n             res = UserAuthentication.verify_auth_token(token)\n             return res\n \n-        from namespaces.block_table_extract import \\\n-            namespace as namespace_block_table_extract\n+        from namespaces.block_table_extract import (\n+            namespace as namespace_block_table_extract,\n+        )\n         from namespaces.cache import namespace as namespace_cache\n-        from namespaces.custom_classifier import \\\n-            namespace as namespace_custom_classifier\n-        from namespaces.custom_classifier_v2 import \\\n-            namespace as namespace_custom_classifier_v2\n-        from namespaces.custom_models.custom_model import \\\n-            namespace as namespace_custom_model_v2\n-        from namespaces.custom_models.custom_model_label import \\\n-            namespace as namespace_custom_model_labels_v2\n+        from namespaces.custom_classifier import (\n+            namespace as namespace_custom_classifier,\n+        )\n+        from namespaces.custom_classifier_v2 import (\n+            namespace as namespace_custom_classifier_v2,\n+        )\n+        from namespaces.custom_models.custom_model import (\n+            namespace as namespace_custom_model_v2,\n+        )\n+        from namespaces.custom_models.custom_model_label import (\n+            namespace as namespace_custom_model_labels_v2,\n+        )\n+\n         # from namespaces.db_import_export import namespace as namespace_db\n         from namespaces.doc2_v2 import namespace as namespace_doc2_v2\n-        from namespaces.document_and_fields import \\\n-            namespace as namespace_document_and_fields\n-        from namespaces.document_layout_template import \\\n-            namespace as namespace_document_layout_template\n-        from namespaces.document_table import \\\n-            namespace as namespace_document_table\n+        from namespaces.document_and_fields import (\n+            namespace as namespace_document_and_fields,\n+        )\n+        from namespaces.document_layout_template import (\n+            namespace as namespace_document_layout_template,\n+        )\n+        from namespaces.document_table import namespace as namespace_document_table\n         from namespaces.export import namespace as namespace_export\n         from namespaces.extract import namespace as namespace_extract\n         from namespaces.health import namespace as namespace_health\n         from namespaces.internal import namespace as namespace_internal\n-        from namespaces.list_of_values.list_of_values import \\\n-            namespace as namespace_list_of_values\n+        from namespaces.list_of_values.list_of_values import (\n+            namespace as namespace_list_of_values,\n+        )\n         from namespaces.migration import namespace as namespace_migration\n-        from namespaces.ocr_configurations import \\\n-            namespace as namespace_ocr_configurations\n+        from namespaces.ocr_configurations import (\n+            namespace as namespace_ocr_configurations,\n+        )\n         from namespaces.pdf import namespace as namespace_pdf\n         from namespaces.preferences import namespace as preferences\n-        from namespaces.sub_document_type import \\\n-            namespace as namespace_sub_document_type\n-        from namespaces.table_extract_v3 import \\\n-            namespace as namespace_table_extract_v3\n-\n-        \n+        from namespaces.sub_document_type import (\n+            namespace as namespace_sub_document_type,\n+        )\n+        from namespaces.table_extract_v3 import namespace as namespace_table_extract_v3\n \n         api.add_namespace(namespace_extract, path=\"/extract\")\n         api.add_namespace(namespace_export, path=\"/export\")\n@@ -121,7 +128,6 @@ def verify_token(token):\n         if config.IS_DEBUG:\n             api.add_namespace(namespace_internal, path=\"/internal\")\n \n-\n         from fellow2kv.cli.ml import ml_blueprint\n \n         app.register_blueprint(ml_blueprint)"
        },
        {
            "sha": "4c7c9b829809c16c0c0de87e6ec4863e54652133",
            "message": "Merge pull request #817 from Fellow-Consulting-AG/dev\n\nfd",
            "code_changes": "@@ -4,9 +4,8 @@\n from authenticator import UserAuthentication\n from constants import CLASSIFICATION_MODELS\n from fellow2kv.extension import db\n-from helper.custom_classifier_v2.iclassifier_model_processor import (\n-    IClassifierModelProcessor,\n-)\n+from helper.custom_classifier_v2.iclassifier_model_processor import \\\n+    IClassifierModelProcessor\n from util import sync_wrapper\n \n from . import common, mlp_classifier_processor, service_classifier_processor\n@@ -79,6 +78,7 @@ def classify_document(user: UserAuthentication, model, local_file_path, pages=No\n     if res.score == -1:\n         result[\"classification_label\"] = res.label\n         result[\"classification_message\"] = res.message\n+        result[\"classification_score\"] = res.score\n         if res.label in model_labels:\n             result[\"classification_label_class\"] = model_labels[res.label][\n                 \"label_category\""
        },
        {
            "sha": "da3b63cc03765f1291a49782cb6a1d7ddfb0efc7",
            "message": "Merge branch 'stage' into dev",
            "code_changes": "@@ -52,42 +52,49 @@ def verify_token(token):\n             res = UserAuthentication.verify_auth_token(token)\n             return res\n \n-        from namespaces.block_table_extract import \\\n-            namespace as namespace_block_table_extract\n+        from namespaces.block_table_extract import (\n+            namespace as namespace_block_table_extract,\n+        )\n         from namespaces.cache import namespace as namespace_cache\n-        from namespaces.custom_classifier import \\\n-            namespace as namespace_custom_classifier\n-        from namespaces.custom_classifier_v2 import \\\n-            namespace as namespace_custom_classifier_v2\n-        from namespaces.custom_models.custom_model import \\\n-            namespace as namespace_custom_model_v2\n-        from namespaces.custom_models.custom_model_label import \\\n-            namespace as namespace_custom_model_labels_v2\n+        from namespaces.custom_classifier import (\n+            namespace as namespace_custom_classifier,\n+        )\n+        from namespaces.custom_classifier_v2 import (\n+            namespace as namespace_custom_classifier_v2,\n+        )\n+        from namespaces.custom_models.custom_model import (\n+            namespace as namespace_custom_model_v2,\n+        )\n+        from namespaces.custom_models.custom_model_label import (\n+            namespace as namespace_custom_model_labels_v2,\n+        )\n+\n         # from namespaces.db_import_export import namespace as namespace_db\n         from namespaces.doc2_v2 import namespace as namespace_doc2_v2\n-        from namespaces.document_and_fields import \\\n-            namespace as namespace_document_and_fields\n-        from namespaces.document_layout_template import \\\n-            namespace as namespace_document_layout_template\n-        from namespaces.document_table import \\\n-            namespace as namespace_document_table\n+        from namespaces.document_and_fields import (\n+            namespace as namespace_document_and_fields,\n+        )\n+        from namespaces.document_layout_template import (\n+            namespace as namespace_document_layout_template,\n+        )\n+        from namespaces.document_table import namespace as namespace_document_table\n         from namespaces.export import namespace as namespace_export\n         from namespaces.extract import namespace as namespace_extract\n         from namespaces.health import namespace as namespace_health\n         from namespaces.internal import namespace as namespace_internal\n-        from namespaces.list_of_values.list_of_values import \\\n-            namespace as namespace_list_of_values\n+        from namespaces.list_of_values.list_of_values import (\n+            namespace as namespace_list_of_values,\n+        )\n         from namespaces.migration import namespace as namespace_migration\n-        from namespaces.ocr_configurations import \\\n-            namespace as namespace_ocr_configurations\n+        from namespaces.ocr_configurations import (\n+            namespace as namespace_ocr_configurations,\n+        )\n         from namespaces.pdf import namespace as namespace_pdf\n         from namespaces.preferences import namespace as preferences\n-        from namespaces.sub_document_type import \\\n-            namespace as namespace_sub_document_type\n-        from namespaces.table_extract_v3 import \\\n-            namespace as namespace_table_extract_v3\n-\n-        \n+        from namespaces.sub_document_type import (\n+            namespace as namespace_sub_document_type,\n+        )\n+        from namespaces.table_extract_v3 import namespace as namespace_table_extract_v3\n \n         api.add_namespace(namespace_extract, path=\"/extract\")\n         api.add_namespace(namespace_export, path=\"/export\")\n@@ -121,7 +128,6 @@ def verify_token(token):\n         if config.IS_DEBUG:\n             api.add_namespace(namespace_internal, path=\"/internal\")\n \n-\n         from fellow2kv.cli.ml import ml_blueprint\n \n         app.register_blueprint(ml_blueprint)"
        },
        {
            "sha": "9426cfa171b32d66fb8b4772c733cf7a2dbf45d2",
            "message": "fd",
            "code_changes": "@@ -472,7 +472,7 @@ class TableFormattingRules(db.Model):\n     split_text_on_separators = db.Column(db.Boolean, default=False)\n     columns_to_hide = db.Column(db.String(500))\n     merge_extra_lines_to_desc = db.Column(db.Boolean, default=False)\n-    merge_extra_lines_to = db.Column(db.String(100), default=False)\n+    merge_extra_lines_to = db.Column(db.String(100))\n     extra_columns = db.Column(db.Text)\n \n     created_on = db.Column(db.DateTime(timezone=True), server_default=func.now())"
        },
        {
            "sha": "ac24a7274d6fd35056ec03153e7edd6620d43c4d",
            "message": "fd",
            "code_changes": "@@ -604,7 +604,7 @@ def get_table_column_confs(org_id: str, table_name: str, column_name=None):\n \n def get_fuzzy_fields_list(db, org_id, doc_type, sub_doc_type):\n     query = f\"\"\"select\n-        f.doc_type, f.field_name, fuzzy_name, f.fuzzy_field, f.fuzzy_primary_field,\n+        f.doc_type, f.field_name, fuzzy_name, f.fuzzy_field, f.fuzzy_primary_field\n     from\n         field f\n     Where ((f.doc_type in ('{doc_type}') and f.is_sub_doc_type_field = False)"
        },
        {
            "sha": "63b38c2ca18e309fb6a0cc34a55455775e5b47a3",
            "message": "fd",
            "code_changes": "@@ -4,9 +4,8 @@\n from authenticator import UserAuthentication\n from constants import CLASSIFICATION_MODELS\n from fellow2kv.extension import db\n-from helper.custom_classifier_v2.iclassifier_model_processor import (\n-    IClassifierModelProcessor,\n-)\n+from helper.custom_classifier_v2.iclassifier_model_processor import \\\n+    IClassifierModelProcessor\n from util import sync_wrapper\n \n from . import common, mlp_classifier_processor, service_classifier_processor\n@@ -79,6 +78,7 @@ def classify_document(user: UserAuthentication, model, local_file_path, pages=No\n     if res.score == -1:\n         result[\"classification_label\"] = res.label\n         result[\"classification_message\"] = res.message\n+        result[\"classification_score\"] = res.score\n         if res.label in model_labels:\n             result[\"classification_label_class\"] = model_labels[res.label][\n                 \"label_category\""
        },
        {
            "sha": "ea9b95cc897e1762e6d796c34629e0174d22758b",
            "message": "Merge pull request #814 from Fellow-Consulting-AG/sandbox\n\nSandbox",
            "code_changes": "@@ -66,8 +66,8 @@ def extract_ocr_data_and_images(\n         return document\n \n     def transform_ai_response(ai_resp_json):\n-        document = {\"text\": \"\"}\n-        # document = {}\n+        # document = {\"text\": \"\"}\n+        document = {}\n         if not ai_resp_json:\n             return document\n \n@@ -193,7 +193,7 @@ def transform_ai_response(ai_resp_json):\n                     pageStartIndex = 0\n                     pageEndIndex = 0\n \n-            document[\"text\"] += hocr_content\n+            # document[\"text\"] += hocr_content\n         document[\"pages\"] = pages\n \n         return document"
        },
        {
            "sha": "8dbcfe368ee070dff137e0591a193bdfaa239d24",
            "message": "Merge branch 'stage' into sandbox",
            "code_changes": "@@ -9,10 +9,12 @@\n from fellow2kv.extension import db, storagemanager\n from helpdesk import create_new_customer, create_ticket\n from helper import doc2_util\n-from helper.ai.ai_ocr import (generate_hard_regex_from_string,\n-                              generate_regex_from_string)\n-from helper.util import (get_page, transform_from_normalized,\n-                         transform_from_normalized_coords_object)\n+from helper.ai.ai_ocr import generate_hard_regex_from_string, generate_regex_from_string\n+from helper.util import (\n+    get_page,\n+    transform_from_normalized,\n+    transform_from_normalized_coords_object,\n+)\n from logger import get_logger\n from models import (DocOriginRules, FellowKVRule, FellowKVRuleUser,\n                     FellowKVSourceFile, FellowKVTableColumnRule,"
        },
        {
            "sha": "1b419d3c849ad7a5a92f645fd983bb22b2a3f16c",
            "message": "Merge pull request #813 from Fellow-Consulting-AG/dev\n\nfd",
            "code_changes": "@@ -66,7 +66,7 @@ def extract_ocr_data_and_images(\n         return document\n \n     def transform_ai_response(ai_resp_json):\n-        #document = {\"text\": \"\"}\n+        # document = {\"text\": \"\"}\n         document = {}\n         if not ai_resp_json:\n             return document\n@@ -193,7 +193,7 @@ def transform_ai_response(ai_resp_json):\n                     pageStartIndex = 0\n                     pageEndIndex = 0\n \n-            #document[\"text\"] += hocr_content\n+            # document[\"text\"] += hocr_content\n         document[\"pages\"] = pages\n \n         return document"
        },
        {
            "sha": "ab5629a038e08d0db3e4fdcd2e0781e9061cc8da",
            "message": "fd",
            "code_changes": "@@ -7,23 +7,16 @@\n from typing import Any, Iterable\n \n from pdfminer.high_level import extract_pages\n-from pdfminer.layout import (\n-    LAParams,\n-    LTAnno,\n-    LTChar,\n-    LTFigure,\n-    LTPage,\n-    LTTextBox,\n-    LTTextLine,\n-    LTTextLineHorizontal,\n-)\n+from pdfminer.layout import (LAParams, LTAnno, LTChar, LTFigure, LTPage,\n+                             LTTextBox, LTTextLine, LTTextLineHorizontal)\n from shapely.geometry import Polygon\n \n from fellow2kv.extension import storagemanager_doc2 as storage_manager_doc2\n from helper.ai.ai_ocr import check_for_existing_line\n from helper.ai.google_ocr import GOOGLE_OCR\n from helper.extract_util import Extractor\n-from helper.table_extractors.table_formatter_v3 import get_intersection_area_percent\n+from helper.table_extractors.table_formatter_v3 import \\\n+    get_intersection_area_percent\n \n pattern = re.compile(\"^\\(cid:\\d+\\)+$\")\n \n@@ -105,8 +98,8 @@ def get_transform_json_from_local_file(local_file_path):\n         resp_document[\"pages\"].append(t_page)\n         lastIndex = t_page[\"endIndex\"]\n \n-    page_texts = [p[\"pageText\"] for p in resp_document[\"pages\"]]\n-    resp_document[\"text\"] = \" \".join(page_texts)\n+    # page_texts = [p[\"pageText\"] for p in resp_document[\"pages\"]]\n+    # resp_document[\"text\"] = \" \".join(page_texts)\n     resp_document[\"etext_fixed\"] = e_text_fixed\n     if e_text_fixed:\n         extractor = get_ai_extractor(local_file_path, get_ttl_hash())"
        },
        {
            "sha": "02296d5540b5c7efc3877cb364ed1ba17218b30d",
            "message": "Merge pull request #812 from Fellow-Consulting-AG/dev\n\nfd",
            "code_changes": "@@ -66,8 +66,8 @@ def extract_ocr_data_and_images(\n         return document\n \n     def transform_ai_response(ai_resp_json):\n-        document = {\"text\": \"\"}\n-        # document = {}\n+        #document = {\"text\": \"\"}\n+        document = {}\n         if not ai_resp_json:\n             return document\n \n@@ -193,7 +193,7 @@ def transform_ai_response(ai_resp_json):\n                     pageStartIndex = 0\n                     pageEndIndex = 0\n \n-            document[\"text\"] += hocr_content\n+            #document[\"text\"] += hocr_content\n         document[\"pages\"] = pages\n \n         return document"
        },
        {
            "sha": "8d7674a01efb91a96e71e10206c5b14536868668",
            "message": "Merge branch 'sandbox' into dev",
            "code_changes": "@@ -4,8 +4,10 @@\n \n from shapely.geometry import Polygon\n \n-from helper.form_extractor.fill_ratio import (get_field_fill_ratio,\n-                                              get_opencv_image_from_url)\n+from helper.form_extractor.fill_ratio import (\n+    get_field_fill_ratio,\n+    get_opencv_image_from_url,\n+)\n from helper.util import clean_amount_fields, clean_string\n \n sys.path.append(\".\")\n@@ -16,9 +18,9 @@\n \n import fellow2kv.config as config\n from fellow2kv.extension import storagemanager_doc2\n-from helper.common_regex import (CURRENCY_REGEX,\n-                                 NUMERIC_AND_AMOUNT_SEPARATORS_REGEX)\n+from helper.common_regex import CURRENCY_REGEX, NUMERIC_AND_AMOUNT_SEPARATORS_REGEX\n from helper.extract_util_errors import InvalidDirectionError, UndifiendError\n+\n # from fellow2kv.extension storagemanager_doc2\n from logger import get_logger\n \n@@ -879,7 +881,7 @@ def custom_lines_within_bounds(self, custom_lines, coordinates):\n         new_custom_lines = []\n         for line in custom_lines:\n             if line[\"y1\"] > coordinates[\"y0\"]:\n-                if not new_custom_lines and line['normalizedX0'] > 0.5:\n+                if not new_custom_lines and line[\"normalizedX0\"] > 0.5:\n                     continue\n                     # table headers dont start from middle of the pagel so avoid making bad patterns.\n                 coords = None"
        },
        {
            "sha": "06f4494353de54ad49e7dc15905cccf8be41602b",
            "message": "fd",
            "code_changes": "@@ -66,8 +66,8 @@ def extract_ocr_data_and_images(\n         return document\n \n     def transform_ai_response(ai_resp_json):\n-        document = {\"text\": \"\"}\n-        #document = {}\n+        #document = {\"text\": \"\"}\n+        document = {}\n         if not ai_resp_json:\n             return document\n \n@@ -193,7 +193,7 @@ def transform_ai_response(ai_resp_json):\n                     pageStartIndex = 0\n                     pageEndIndex = 0\n \n-            document[\"text\"] += hocr_content\n+            #document[\"text\"] += hocr_content\n         document[\"pages\"] = pages\n \n         return document"
        },
        {
            "sha": "d0d6317c6e17b93b7d137f61902d2243a088d206",
            "message": "Merge pull request #811 from Fellow-Consulting-AG/stage\n\nStage",
            "code_changes": "@@ -4,8 +4,10 @@\n \n from shapely.geometry import Polygon\n \n-from helper.form_extractor.fill_ratio import (get_field_fill_ratio,\n-                                              get_opencv_image_from_url)\n+from helper.form_extractor.fill_ratio import (\n+    get_field_fill_ratio,\n+    get_opencv_image_from_url,\n+)\n from helper.util import clean_amount_fields, clean_string\n \n sys.path.append(\".\")\n@@ -16,9 +18,9 @@\n \n import fellow2kv.config as config\n from fellow2kv.extension import storagemanager_doc2\n-from helper.common_regex import (CURRENCY_REGEX,\n-                                 NUMERIC_AND_AMOUNT_SEPARATORS_REGEX)\n+from helper.common_regex import CURRENCY_REGEX, NUMERIC_AND_AMOUNT_SEPARATORS_REGEX\n from helper.extract_util_errors import InvalidDirectionError, UndifiendError\n+\n # from fellow2kv.extension storagemanager_doc2\n from logger import get_logger\n \n@@ -879,7 +881,7 @@ def custom_lines_within_bounds(self, custom_lines, coordinates):\n         new_custom_lines = []\n         for line in custom_lines:\n             if line[\"y1\"] > coordinates[\"y0\"]:\n-                if not new_custom_lines and line['normalizedX0'] > 0.5:\n+                if not new_custom_lines and line[\"normalizedX0\"] > 0.5:\n                     continue\n                     # table headers dont start from middle of the pagel so avoid making bad patterns.\n                 coords = None"
        },
        {
            "sha": "d3f3e99843355246f5500ee06ecde57bbf5f25b9",
            "message": "Merge pull request #810 from Fellow-Consulting-AG/dev\n\nfd",
            "code_changes": "@@ -9,23 +9,14 @@\n from fellow2kv.extension import db, storagemanager\n from helpdesk import create_new_customer, create_ticket\n from helper import doc2_util\n-from helper.ai.ai_ocr import generate_hard_regex_from_string, generate_regex_from_string\n-from helper.util import (\n-    get_page,\n-    transform_from_normalized,\n-    transform_from_normalized_coords_object,\n-)\n+from helper.ai.ai_ocr import (generate_hard_regex_from_string,\n+                              generate_regex_from_string)\n+from helper.util import (get_page, transform_from_normalized,\n+                         transform_from_normalized_coords_object)\n from logger import get_logger\n-from models import (\n-    DocOriginRules,\n-    FellowKVRule,\n-    FellowKVRuleUser,\n-    FellowKVSourceFile,\n-    FellowKVTableColumnRule,\n-    FellowKVTableRule,\n-    TableFormattingRules,\n-    TfidfDocs,\n-)\n+from models import (DocOriginRules, FellowKVRule, FellowKVRuleUser,\n+                    FellowKVSourceFile, FellowKVTableColumnRule,\n+                    FellowKVTableRule, TableFormattingRules, TfidfDocs)\n \n logger = get_logger(\"plugin-export-util\")\n \n@@ -1352,8 +1343,8 @@ def get_table_rules_for_export_v3(extractor, table):\n \n         if len(document.get(\"pages\")) == 1:\n             is_single_page = True\n-        elif pageNumber == len(document.get(\"pages\")):\n-            is_last_page = True\n+        elif pageNumber >= len(document.get(\"pages\")) - 1:\n+            is_last_page = True # as sometimes the final page is the second last\n         elif pageNumber == 1:\n             is_first_page = True\n         elif pageNumber < len(document.get(\"pages\")):"
        },
        {
            "sha": "6f907985c857ed422c626ac29c8b979bc8dcb91a",
            "message": "fd",
            "code_changes": "@@ -9,23 +9,14 @@\n from fellow2kv.extension import db, storagemanager\n from helpdesk import create_new_customer, create_ticket\n from helper import doc2_util\n-from helper.ai.ai_ocr import generate_hard_regex_from_string, generate_regex_from_string\n-from helper.util import (\n-    get_page,\n-    transform_from_normalized,\n-    transform_from_normalized_coords_object,\n-)\n+from helper.ai.ai_ocr import (generate_hard_regex_from_string,\n+                              generate_regex_from_string)\n+from helper.util import (get_page, transform_from_normalized,\n+                         transform_from_normalized_coords_object)\n from logger import get_logger\n-from models import (\n-    DocOriginRules,\n-    FellowKVRule,\n-    FellowKVRuleUser,\n-    FellowKVSourceFile,\n-    FellowKVTableColumnRule,\n-    FellowKVTableRule,\n-    TableFormattingRules,\n-    TfidfDocs,\n-)\n+from models import (DocOriginRules, FellowKVRule, FellowKVRuleUser,\n+                    FellowKVSourceFile, FellowKVTableColumnRule,\n+                    FellowKVTableRule, TableFormattingRules, TfidfDocs)\n \n logger = get_logger(\"plugin-export-util\")\n \n@@ -1352,8 +1343,8 @@ def get_table_rules_for_export_v3(extractor, table):\n \n         if len(document.get(\"pages\")) == 1:\n             is_single_page = True\n-        elif pageNumber == len(document.get(\"pages\")):\n-            is_last_page = True\n+        elif pageNumber >= len(document.get(\"pages\")) - 1:\n+            is_last_page = True # as sometimes the final page is the second last\n         elif pageNumber == 1:\n             is_first_page = True\n         elif pageNumber < len(document.get(\"pages\")):"
        },
        {
            "sha": "38ff56d021d601f820b05fec9ed235dc3970e41f",
            "message": "Merge pull request #809 from Fellow-Consulting-AG/stage\n\nStage",
            "code_changes": "@@ -67,7 +67,7 @@ def extract_ocr_data_and_images(\n \n     def transform_ai_response(ai_resp_json):\n         document = {\"text\": \"\"}\n-        #document = {}\n+        # document = {}\n         if not ai_resp_json:\n             return document\n "
        },
        {
            "sha": "8df7270dd62a7319d8d90dac846a6bd3ffc73795",
            "message": "Merge pull request #808 from Fellow-Consulting-AG/dev\n\nfd",
            "code_changes": "@@ -4,10 +4,8 @@\n \n from shapely.geometry import Polygon\n \n-from helper.form_extractor.fill_ratio import (\n-    get_field_fill_ratio,\n-    get_opencv_image_from_url,\n-)\n+from helper.form_extractor.fill_ratio import (get_field_fill_ratio,\n+                                              get_opencv_image_from_url)\n from helper.util import clean_amount_fields, clean_string\n \n sys.path.append(\".\")\n@@ -18,9 +16,9 @@\n \n import fellow2kv.config as config\n from fellow2kv.extension import storagemanager_doc2\n-from helper.common_regex import CURRENCY_REGEX, NUMERIC_AND_AMOUNT_SEPARATORS_REGEX\n+from helper.common_regex import (CURRENCY_REGEX,\n+                                 NUMERIC_AND_AMOUNT_SEPARATORS_REGEX)\n from helper.extract_util_errors import InvalidDirectionError, UndifiendError\n-\n # from fellow2kv.extension storagemanager_doc2\n from logger import get_logger\n \n@@ -881,6 +879,9 @@ def custom_lines_within_bounds(self, custom_lines, coordinates):\n         new_custom_lines = []\n         for line in custom_lines:\n             if line[\"y1\"] > coordinates[\"y0\"]:\n+                if not new_custom_lines and line['normalizedX0'] > 0.5:\n+                    continue\n+                    # table headers dont start from middle of the pagel so avoid making bad patterns.\n                 coords = None\n                 line_text = \"\"\n                 for token in line[\"tokens\"]:"
        },
        {
            "sha": "0f7c31d7dd07b9faf7912bf7fc24106ead4b3470",
            "message": "fd",
            "code_changes": "@@ -4,10 +4,8 @@\n \n from shapely.geometry import Polygon\n \n-from helper.form_extractor.fill_ratio import (\n-    get_field_fill_ratio,\n-    get_opencv_image_from_url,\n-)\n+from helper.form_extractor.fill_ratio import (get_field_fill_ratio,\n+                                              get_opencv_image_from_url)\n from helper.util import clean_amount_fields, clean_string\n \n sys.path.append(\".\")\n@@ -18,9 +16,9 @@\n \n import fellow2kv.config as config\n from fellow2kv.extension import storagemanager_doc2\n-from helper.common_regex import CURRENCY_REGEX, NUMERIC_AND_AMOUNT_SEPARATORS_REGEX\n+from helper.common_regex import (CURRENCY_REGEX,\n+                                 NUMERIC_AND_AMOUNT_SEPARATORS_REGEX)\n from helper.extract_util_errors import InvalidDirectionError, UndifiendError\n-\n # from fellow2kv.extension storagemanager_doc2\n from logger import get_logger\n \n@@ -881,6 +879,9 @@ def custom_lines_within_bounds(self, custom_lines, coordinates):\n         new_custom_lines = []\n         for line in custom_lines:\n             if line[\"y1\"] > coordinates[\"y0\"]:\n+                if not new_custom_lines and line['normalizedX0'] > 0.5:\n+                    continue\n+                    # table headers dont start from middle of the pagel so avoid making bad patterns.\n                 coords = None\n                 line_text = \"\"\n                 for token in line[\"tokens\"]:"
        },
        {
            "sha": "561691dd30a29a603dbd3ed4f4601d42c34d44ea",
            "message": "Merge pull request #807 from Fellow-Consulting-AG/stage\n\nStage",
            "code_changes": "@@ -67,6 +67,7 @@ def extract_ocr_data_and_images(\n \n     def transform_ai_response(ai_resp_json):\n         document = {\"text\": \"\"}\n+        #document = {}\n         if not ai_resp_json:\n             return document\n \n@@ -176,9 +177,9 @@ def transform_ai_response(ai_resp_json):\n                                 \"normalizedY0\": nv0[\"y\"],\n                                 \"normalizedX1\": nv2[\"x\"],\n                                 \"normalizedY1\": nv2[\"y\"],\n-                                \"normalizedVertices\": item[\"layout\"][\"boundingPoly\"][\n-                                    \"normalizedVertices\"\n-                                ],\n+                                # \"normalizedVertices\": item[\"layout\"][\"boundingPoly\"][\n+                                #     \"normalizedVertices\"\n+                                # ],\n                             }\n                         )\n "
        },
        {
            "sha": "0f9efeb44869a457b006f640f2bbee8d3716317e",
            "message": "Merge branch 'sandbox' into stage",
            "code_changes": ""
        },
        {
            "sha": "016a95ef4b4d61872bd10d5312345e9068011cb7",
            "message": "Merge pull request #806 from Fellow-Consulting-AG/dev\n\nfd",
            "code_changes": "@@ -67,6 +67,7 @@ def extract_ocr_data_and_images(\n \n     def transform_ai_response(ai_resp_json):\n         document = {\"text\": \"\"}\n+        #document = {}\n         if not ai_resp_json:\n             return document\n \n@@ -176,9 +177,9 @@ def transform_ai_response(ai_resp_json):\n                                 \"normalizedY0\": nv0[\"y\"],\n                                 \"normalizedX1\": nv2[\"x\"],\n                                 \"normalizedY1\": nv2[\"y\"],\n-                                \"normalizedVertices\": item[\"layout\"][\"boundingPoly\"][\n-                                    \"normalizedVertices\"\n-                                ],\n+                                # \"normalizedVertices\": item[\"layout\"][\"boundingPoly\"][\n+                                #     \"normalizedVertices\"\n+                                # ],\n                             }\n                         )\n "
        },
        {
            "sha": "fd6b453592907f15f7845378bf52e9c883711beb",
            "message": "fd",
            "code_changes": "@@ -67,6 +67,7 @@ def extract_ocr_data_and_images(\n \n     def transform_ai_response(ai_resp_json):\n         document = {\"text\": \"\"}\n+        #document = {}\n         if not ai_resp_json:\n             return document\n \n@@ -176,9 +177,9 @@ def transform_ai_response(ai_resp_json):\n                                 \"normalizedY0\": nv0[\"y\"],\n                                 \"normalizedX1\": nv2[\"x\"],\n                                 \"normalizedY1\": nv2[\"y\"],\n-                                \"normalizedVertices\": item[\"layout\"][\"boundingPoly\"][\n-                                    \"normalizedVertices\"\n-                                ],\n+                                # \"normalizedVertices\": item[\"layout\"][\"boundingPoly\"][\n+                                #     \"normalizedVertices\"\n+                                # ],\n                             }\n                         )\n "
        }
    ]
}