{
    "author": "Lint Action",
    "week": "2023-W18",
    "total_commits": 3,
    "author_image": "https://avatars.githubusercontent.com/u/59283862?v=4",
    "commits": [
        {
            "sha": "9c2d32048fc8090ab1a20690bf4638132f23731a",
            "message": "Fix code style issues with Black",
            "code_changes": "@@ -73,7 +73,7 @@ def get_pages_to_ocr(file):\n         logger.info(\"Getting the pages required to be ocr\")\n         with fitz.open(file) as doc:\n             try:\n-                if doc.metadata['creator'].lower() == 'pscript5.dll version 5.2.2':\n+                if doc.metadata[\"creator\"].lower() == \"pscript5.dll version 5.2.2\":\n                     return \"ALL\"\n             except:\n                 pass"
        },
        {
            "sha": "ce36bbdcedee8fce6a0c2321605e697a186ad0b8",
            "message": "Fix code style issues with Black",
            "code_changes": "@@ -48,7 +48,7 @@ def get_ocr_text(file):\n         logger.info(\"Trying if document has e-text\")\n         with fitz.open(file) as doc:\n             try:\n-                if doc.metadata['creator'].lower() == 'pscript5.dll version 5.2.2':\n+                if doc.metadata[\"creator\"].lower() == \"pscript5.dll version 5.2.2\":\n                     return \"\"\n             except:\n                 pass\n@@ -213,7 +213,10 @@ def __get_ocr_file(\n             )\n             urllib.request.urlretrieve(durl, f.name)\n             f.seek(0)\n-        logger.customer(\"OCR completed successfully. The new OCRed document has been saved at: \" + destination)\n+        logger.customer(\n+            \"OCR completed successfully. The new OCRed document has been saved at: \"\n+            + destination\n+        )\n     else:\n         if with_cleaning:\n             return __get_ocr_file("
        },
        {
            "sha": "2fb1fa6c3986ddcfd33184dd3762621fd738d3d6",
            "message": "Fix code style issues with Black",
            "code_changes": "@@ -52,44 +52,54 @@ def verify_token(token):\n             res = UserAuthentication.verify_auth_token(token)\n             return res\n \n-        from namespaces.block_table_extract import \\\n-            namespace as namespace_block_table_extract\n+        from namespaces.block_table_extract import (\n+            namespace as namespace_block_table_extract,\n+        )\n         from namespaces.cache import namespace as namespace_cache\n-        from namespaces.custom_classifier import \\\n-            namespace as namespace_custom_classifier\n-        from namespaces.custom_classifier_v2 import \\\n-            namespace as namespace_custom_classifier_v2\n-        from namespaces.custom_models.custom_model import \\\n-            namespace as namespace_custom_model_v2\n-        from namespaces.custom_models.custom_model_label import \\\n-            namespace as namespace_custom_model_labels_v2\n+        from namespaces.custom_classifier import (\n+            namespace as namespace_custom_classifier,\n+        )\n+        from namespaces.custom_classifier_v2 import (\n+            namespace as namespace_custom_classifier_v2,\n+        )\n+        from namespaces.custom_models.custom_model import (\n+            namespace as namespace_custom_model_v2,\n+        )\n+        from namespaces.custom_models.custom_model_label import (\n+            namespace as namespace_custom_model_labels_v2,\n+        )\n+\n         # from namespaces.db_import_export import namespace as namespace_db\n         from namespaces.doc2_v2 import namespace as namespace_doc2_v2\n-        from namespaces.document_and_fields import \\\n-            namespace as namespace_document_and_fields\n-        from namespaces.document_layout_template import \\\n-            namespace as namespace_document_layout_template\n-        from namespaces.document_table import \\\n-            namespace as namespace_document_table\n+        from namespaces.document_and_fields import (\n+            namespace as namespace_document_and_fields,\n+        )\n+        from namespaces.document_layout_template import (\n+            namespace as namespace_document_layout_template,\n+        )\n+        from namespaces.document_table import namespace as namespace_document_table\n         from namespaces.export import namespace as namespace_export\n         from namespaces.extract import namespace as namespace_extract\n         from namespaces.health import namespace as namespace_health\n         from namespaces.internal import namespace as namespace_internal\n-        from namespaces.list_of_values.list_of_values import \\\n-            namespace as namespace_list_of_values\n+        from namespaces.list_of_values.list_of_values import (\n+            namespace as namespace_list_of_values,\n+        )\n         from namespaces.migration import namespace as namespace_migration\n-        from namespaces.ocr_configurations import \\\n-            namespace as namespace_ocr_configurations\n+        from namespaces.ocr_configurations import (\n+            namespace as namespace_ocr_configurations,\n+        )\n         from namespaces.pdf import namespace as namespace_pdf\n         from namespaces.preferences import namespace as preferences\n \n-        from namespaces.process_document_new_system import \\\n-            namespace as namespace_new_system\n+        from namespaces.process_document_new_system import (\n+            namespace as namespace_new_system,\n+        )\n \n-        from namespaces.sub_document_type import \\\n-            namespace as namespace_sub_document_type\n-        from namespaces.table_extract_v3 import \\\n-            namespace as namespace_table_extract_v3\n+        from namespaces.sub_document_type import (\n+            namespace as namespace_sub_document_type,\n+        )\n+        from namespaces.table_extract_v3 import namespace as namespace_table_extract_v3\n \n         api.add_namespace(namespace_extract, path=\"/extract\")\n         api.add_namespace(namespace_export, path=\"/export\")\n@@ -121,7 +131,7 @@ def verify_token(token):\n         api.add_namespace(namespace_cache, path=\"/cache\")\n         api.add_namespace(namespace_health, path=\"/api\")\n \n-        #if config.IS_DEBUG:\n+        # if config.IS_DEBUG:\n         api.add_namespace(namespace_internal, path=\"/internal\")\n \n         from fellow2kv.cli.ml import ml_blueprint"
        }
    ]
}