Lint Action: 7 commits for week 2023-W08
Author image: https://avatars.githubusercontent.com/u/59283862?v=4
- 35af7715acd0a9b6b9805b5d05a83eb42aa8d1e4: Fix code style issues with Black
Code changes:
@@ -8,8 +8,10 @@
 import pandas as pd
 
 from fellow2kv.extension import storage_manager_doc2
-from helper.form_extractor.proximity import (get_proximity_keywords,
-                                             get_proximity_keywords_for_image)
+from helper.form_extractor.proximity import (
+    get_proximity_keywords,
+    get_proximity_keywords_for_image,
+)
 from helper.util import transform_from_normalized_coords_object
 
 
@@ -492,16 +494,15 @@ def get_closest_references(
             height = round(ref.get("y0") / ref.get("normalizedY0"))
             new_from_point = (width * from_point[0], height * from_point[1])
 
-            if (
-                token_extremes
-                and (abs(new_from_point[0] - ref_point[0])
+            if token_extremes and (
+                abs(new_from_point[0] - ref_point[0])
                 > (token_extremes["right"] - token_extremes["left"])
                 * width
                 / dimensions_divisor
                 or abs(new_from_point[1] - ref_point[1])
                 > (token_extremes["bottom"] - token_extremes["top"])
                 * height
-                / dimensions_divisor)
+                / dimensions_divisor
             ):
                 continue
             distance = calculate_distance(
- 6592eaa2a80b01cf4f1779b77c2bb519b16fcef0: Fix code style issues with Black
Code changes:
@@ -15,8 +15,7 @@
 import constants
 import helper.ocr as ocr_helper
 from authenticator import UserAuthentication
-from fellow2kv.extension import (api, db, multi_auth, storagemanager,
-                                 storagemanager_doc2)
+from fellow2kv.extension import api, db, multi_auth, storagemanager, storagemanager_doc2
 from helper import doc_type_helper as dth
 from helper import generic_data_vault_helper as gdvh
 from helper import pdf as pdf_helper
@@ -25,8 +24,11 @@
 from helper.document_classifier import document_classifier
 from helper.document_extraction import document_extraction_helper as deh
 from helper.extract_util import Extractor
-from helper.util import (str_to_bool, transform_from_normalized_coords_object,
-                         transform_to_normalized)
+from helper.util import (
+    str_to_bool,
+    transform_from_normalized_coords_object,
+    transform_to_normalized,
+)
 from logger import get_logger
 from util import sync_wrapper
 
- 756c257c44e41c3d90d943aebadbcb9e249d902c: Fix code style issues with Black
Code changes:
@@ -44,7 +44,9 @@ def extract_form_fields(user, document, layout, fields_to_extract, non_coords_fi
     populate_tr_ocr_info(document, text_fields_result)
     populate_tr_ocr_info(document, checkbox_fields_result)
     # check_for_trocr(user, document, text_fields_result)
-    fields_result = checkbox_fields_result + text_fields_result + non_coords_fields_result
+    fields_result = (
+        checkbox_fields_result + text_fields_result + non_coords_fields_result
+    )
 
     # TODO: Remove overlapping text fields
     return fields_result
- 8079e3ca281b99d1dfff823aa103dad440805067: Fix code style issues with Black
Code changes:
@@ -12,8 +12,11 @@
 from helper import util
 from helper.ai import ai_invoice
 from helper.layout import layout_fields_helper as lfh
-from helper.table_extractors import (common_table_helper, doc2_table_helper,
-                                     table_draft_helper)
+from helper.table_extractors import (
+    common_table_helper,
+    doc2_table_helper,
+    table_draft_helper,
+)
 from logger.logger import get_logger
 from models import DocumentLayoutTemplate
 from util import sync_wrapper
@@ -96,9 +99,7 @@ def extract_document_fields(doc_id, document, local_file_path, user):
                     "is_table_field": True,
                     "table_field_name": layout_field.get("table_field_name", None),
                     "table_field_index": layout_field.get("table_field_index", None),
-                    "list_of_values": layout_field.get(
-                        "list_of_values", None
-                    ),
+                    "list_of_values": layout_field.get("list_of_values", None),
                 }
             doc_field = doc_fields.get(layout_field["name"], None)
             if not doc_field and not layout_field.get("is_table_field", False):
- 672b77324b9cbf96c2f85ca624d8e323e1bafa27: Fix code style issues with Black
Code changes:
@@ -12,8 +12,11 @@
 from helper import util
 from helper.ai import ai_invoice
 from helper.layout import layout_fields_helper as lfh
-from helper.table_extractors import (common_table_helper, doc2_table_helper,
-                                     table_draft_helper)
+from helper.table_extractors import (
+    common_table_helper,
+    doc2_table_helper,
+    table_draft_helper,
+)
 from logger.logger import get_logger
 from models import DocumentLayoutTemplate
 from util import sync_wrapper
@@ -96,9 +99,7 @@ def extract_document_fields(doc_id, document, local_file_path, user):
                     "is_table_field": True,
                     "table_field_name": layout_field.get("table_field_name", None),
                     "table_field_index": layout_field.get("table_field_index", None),
-                    "list_of_values": layout_field.get(
-                        "list_of_values", None
-                    ),
+                    "list_of_values": layout_field.get("list_of_values", None),
                 }
             doc_field = doc_fields.get(layout_field["name"], None)
             if not doc_field and not layout_field.get("is_table_field", False):
- ff7853b583b9c29cfcd854bb63d54c2666c482fd: Fix code style issues with Black
Code changes:
@@ -9,14 +9,23 @@
 from fellow2kv.extension import db, storagemanager
 from helpdesk import create_new_customer, create_ticket
 from helper import doc2_util
-from helper.ai.ai_ocr import (generate_hard_regex_from_string,
-                              generate_regex_from_string)
-from helper.util import (get_page, transform_from_normalized,
-                         transform_from_normalized_coords_object)
+from helper.ai.ai_ocr import generate_hard_regex_from_string, generate_regex_from_string
+from helper.util import (
+    get_page,
+    transform_from_normalized,
+    transform_from_normalized_coords_object,
+)
 from logger import get_logger
-from models import (DocOriginRules, FellowKVRule, FellowKVRuleUser,
-                    FellowKVSourceFile, FellowKVTableColumnRule,
-                    FellowKVTableRule, TableFormattingRules, TfidfDocs)
+from models import (
+    DocOriginRules,
+    FellowKVRule,
+    FellowKVRuleUser,
+    FellowKVSourceFile,
+    FellowKVTableColumnRule,
+    FellowKVTableRule,
+    TableFormattingRules,
+    TfidfDocs,
+)
 
 logger = get_logger("plugin-export-util")
 
@@ -1091,7 +1100,11 @@ def transform_to_rules(extractor, item):
                 rule_increase.append({"ruleID": field.get("rule"), "weight": 1})
 
         create_new_rule = False
-        if not field.get("rule", None) or field_updated or (field.get("score", 40) < 40):
+        if (
+            not field.get("rule", None)
+            or field_updated
+            or (field.get("score", 40) < 40)
+        ):
             create_new_rule = True
 
         if create_new_rule:
- a024a6070df3cb2716e86746478f283de15e09c2: Fix code style issues with Black
Code changes:
@@ -12,8 +12,11 @@
 from helper import util
 from helper.ai import ai_invoice
 from helper.layout import layout_fields_helper as lfh
-from helper.table_extractors import (common_table_helper, doc2_table_helper,
-                                     table_draft_helper)
+from helper.table_extractors import (
+    common_table_helper,
+    doc2_table_helper,
+    table_draft_helper,
+)
 from logger.logger import get_logger
 from models import DocumentLayoutTemplate
 from util import sync_wrapper
@@ -96,7 +99,6 @@ def extract_document_fields(doc_id, document, local_file_path, user):
                     "is_table_field": True,
                     "table_field_name": layout_field.get("table_field_name", None),
                     "table_field_index": layout_field.get("table_field_index", None),
-
                 }
             doc_field = doc_fields.get(layout_field["name"], None)
             if not doc_field and not layout_field.get("is_table_field", False):
@@ -286,18 +288,22 @@ def get_layout_fields_from_layout_json(layout_template, field_names):
             if field_type == "ExtractedTable":
                 table_columns = layout_row["columns"]
                 for table_column in table_columns:
-                    columns_coords_array = table_column['coords']
+                    columns_coords_array = table_column["coords"]
                     for index, column_coords in enumerate(columns_coords_array):
-                        if column_coords['coord']:
+                        if column_coords["coord"]:
                             filtered_layout_fields.append(
                                 {
                                     "name": f"{table_column['name']}_{index}",
-                                    "coords": [column_coords['coord']],
+                                    "coords": [column_coords["coord"]],
                                     "tr_ocr_model_id": table_column["tr_ocr_model_id"],
-                                    "field_type": table_column.get("fieldType", "STRING"),
-                                    "list_of_values": table_column.get("list_of_values", None),
+                                    "field_type": table_column.get(
+                                        "fieldType", "STRING"
+                                    ),
+                                    "list_of_values": table_column.get(
+                                        "list_of_values", None
+                                    ),
                                     "is_table_field": True,
-                                    "table_field_name": table_column['name'],
+                                    "table_field_name": table_column["name"],
                                     "table_field_index": index,
                                 }
                             )
